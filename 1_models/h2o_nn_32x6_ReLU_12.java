/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:21.071+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_12 > h2o_nn_32x6_ReLU_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_12", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(3384583136745661408L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4390223704506255;
      sa[1] = 0.48126039565720913;
      sa[2] = 0.49890140132465416;
      sa[3] = 0.5461946016690281;
      sa[4] = 0.5403869567826537;
      sa[5] = 0.5641412795717388;
      sa[6] = 0.5428486558520226;
      sa[7] = 0.4759855652776348;
      sa[8] = 0.514200566665332;
      sa[9] = 0.46229481834377734;
      sa[10] = 0.4499305867597589;
      sa[11] = 0.4855465365403756;
      sa[12] = 0.4536406884463293;
      sa[13] = 0.4651389235113529;
      sa[14] = 0.5407309052864496;
      sa[15] = 0.506414773362483;
      sa[16] = 0.49012830168916305;
      sa[17] = 0.44316018449665245;
      sa[18] = 0.47189671674316447;
      sa[19] = 0.5359576692240529;
      sa[20] = 0.49412167559307774;
      sa[21] = 0.5398589013211342;
      sa[22] = 0.555160549742311;
      sa[23] = 0.5018258859269094;
      sa[24] = 0.5093660067706889;
      sa[25] = 0.4535697866169648;
      sa[26] = 0.5056859261286986;
      sa[27] = 0.4621593717771371;
      sa[28] = 0.5238712922041063;
      sa[29] = 0.4244660514335536;
      sa[30] = 0.5313351353101374;
      sa[31] = 0.5123172693335962;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.016599520746311765;
      sa[1] = 0.01174635954342742;
      sa[2] = -0.023953367232935792;
      sa[3] = -0.02268562773503491;
      sa[4] = 0.012797141266292295;
    }
  }
}
class h2o_nn_32x6_ReLU_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.056052074f;
      sa[1] = 0.23621525f;
      sa[2] = 0.14507468f;
      sa[3] = 0.18991885f;
      sa[4] = -0.19558674f;
      sa[5] = -0.18921682f;
      sa[6] = -0.054053795f;
      sa[7] = 0.20021997f;
      sa[8] = 0.12808073f;
      sa[9] = -0.16620798f;
      sa[10] = -0.15266524f;
      sa[11] = -0.16022855f;
      sa[12] = 0.0688467f;
      sa[13] = -0.26184866f;
      sa[14] = -0.16716975f;
      sa[15] = -0.03355796f;
      sa[16] = 0.09066572f;
      sa[17] = 0.14011233f;
      sa[18] = -0.22550792f;
      sa[19] = 0.17153916f;
      sa[20] = 0.20685995f;
      sa[21] = -0.3189843f;
      sa[22] = 0.21506113f;
      sa[23] = -0.20040302f;
      sa[24] = 0.25715604f;
      sa[25] = 0.16306865f;
      sa[26] = -0.27524814f;
      sa[27] = 0.24648333f;
      sa[28] = 0.206392f;
      sa[29] = -0.2916921f;
      sa[30] = -0.18278629f;
      sa[31] = 0.10655868f;
      sa[32] = 0.19196671f;
      sa[33] = -0.24645093f;
      sa[34] = 0.06497111f;
      sa[35] = -0.099968664f;
      sa[36] = 0.08134344f;
      sa[37] = 0.26954737f;
      sa[38] = -0.08910321f;
      sa[39] = 0.12832423f;
      sa[40] = 0.013584847f;
      sa[41] = -0.090414405f;
      sa[42] = -0.15289527f;
      sa[43] = 0.020309629f;
      sa[44] = 0.21646275f;
      sa[45] = -0.23729908f;
      sa[46] = 0.05802479f;
      sa[47] = 0.0025208776f;
      sa[48] = 0.2061628f;
      sa[49] = 0.23160355f;
      sa[50] = 0.17382205f;
      sa[51] = -0.28806552f;
      sa[52] = -0.075673185f;
      sa[53] = 0.2098957f;
      sa[54] = 0.18841474f;
      sa[55] = 0.03892486f;
      sa[56] = -0.16925913f;
      sa[57] = -0.283493f;
      sa[58] = 0.24476509f;
      sa[59] = -0.18071227f;
      sa[60] = -0.24625072f;
      sa[61] = 0.20120664f;
      sa[62] = 0.105517894f;
      sa[63] = 0.016127756f;
      sa[64] = 0.12386331f;
      sa[65] = 0.10693267f;
      sa[66] = 0.006995659f;
      sa[67] = 0.12564978f;
      sa[68] = -0.12114212f;
      sa[69] = 0.09375711f;
      sa[70] = -0.085823655f;
      sa[71] = 0.33163053f;
      sa[72] = -0.11809696f;
      sa[73] = 0.22615634f;
      sa[74] = -0.17790747f;
      sa[75] = 0.08108745f;
      sa[76] = -0.18429981f;
      sa[77] = -0.04910121f;
      sa[78] = -0.0510246f;
      sa[79] = 0.13111998f;
      sa[80] = -0.19220139f;
      sa[81] = -0.09871896f;
      sa[82] = -0.024197519f;
      sa[83] = 0.12209248f;
      sa[84] = -0.0076535083f;
      sa[85] = -0.15135942f;
      sa[86] = 0.15905125f;
      sa[87] = 0.25065985f;
      sa[88] = 0.25299677f;
      sa[89] = 0.07512014f;
      sa[90] = -0.1392199f;
      sa[91] = 0.14267983f;
      sa[92] = 0.11423634f;
      sa[93] = -0.18721874f;
      sa[94] = -0.15557507f;
      sa[95] = -0.2280062f;
      sa[96] = 0.12361936f;
      sa[97] = 0.03769547f;
      sa[98] = 0.17154863f;
      sa[99] = -0.09588969f;
      sa[100] = -0.03783026f;
      sa[101] = -0.16685405f;
      sa[102] = -0.23224844f;
      sa[103] = -0.070699945f;
      sa[104] = -0.0757573f;
      sa[105] = -0.16521476f;
      sa[106] = -0.15337908f;
      sa[107] = 0.23075333f;
      sa[108] = 0.16871195f;
      sa[109] = -0.18387131f;
      sa[110] = -0.14883745f;
      sa[111] = 0.11999245f;
      sa[112] = 0.14563851f;
      sa[113] = 0.059207324f;
      sa[114] = -0.12579527f;
      sa[115] = -0.01803896f;
      sa[116] = -0.2141443f;
      sa[117] = -0.0024537274f;
      sa[118] = -0.23854093f;
      sa[119] = -0.19216642f;
      sa[120] = 0.22753136f;
      sa[121] = 0.2449983f;
      sa[122] = 0.31159204f;
      sa[123] = 0.28270125f;
      sa[124] = 0.28779218f;
      sa[125] = 0.2842283f;
      sa[126] = -0.29093668f;
      sa[127] = -0.1919016f;
      sa[128] = 0.09778512f;
      sa[129] = 0.17856339f;
      sa[130] = -0.09114827f;
      sa[131] = 0.32372972f;
      sa[132] = 0.17165068f;
      sa[133] = -0.27343273f;
      sa[134] = 0.04846477f;
      sa[135] = -0.18327053f;
      sa[136] = -0.2301601f;
      sa[137] = 0.007664488f;
      sa[138] = 0.14347526f;
      sa[139] = -0.038459875f;
      sa[140] = -0.11284648f;
      sa[141] = -0.19785339f;
      sa[142] = 0.21133769f;
      sa[143] = -0.22982049f;
      sa[144] = 0.25347376f;
      sa[145] = -0.12249151f;
      sa[146] = -0.23405245f;
      sa[147] = 0.17049836f;
      sa[148] = 0.17823589f;
      sa[149] = 0.21214464f;
      sa[150] = 0.29955083f;
      sa[151] = -0.20664434f;
      sa[152] = 0.026236651f;
      sa[153] = 0.2681195f;
      sa[154] = 0.24036941f;
      sa[155] = -0.1839142f;
      sa[156] = 0.14406726f;
      sa[157] = -0.14831117f;
      sa[158] = 0.1082918f;
      sa[159] = 0.12227033f;
      sa[160] = 0.10069801f;
      sa[161] = 0.22604297f;
      sa[162] = -0.17669816f;
      sa[163] = -0.041730985f;
      sa[164] = 0.23516567f;
      sa[165] = -0.02077455f;
      sa[166] = -0.05491573f;
      sa[167] = -0.060263693f;
      sa[168] = 0.19343631f;
      sa[169] = 0.30850402f;
      sa[170] = 0.018544668f;
      sa[171] = -0.012062277f;
      sa[172] = -0.039522f;
      sa[173] = -0.12087081f;
      sa[174] = 0.009891127f;
      sa[175] = -0.20333505f;
      sa[176] = -0.004601888f;
      sa[177] = -0.011751668f;
      sa[178] = -0.11092546f;
      sa[179] = 0.028839301f;
      sa[180] = -0.060663633f;
      sa[181] = -0.2888152f;
      sa[182] = -0.08904385f;
      sa[183] = 0.017707758f;
      sa[184] = 0.30290493f;
      sa[185] = 0.17774282f;
      sa[186] = -0.27506173f;
      sa[187] = 0.11694531f;
      sa[188] = -0.046006724f;
      sa[189] = 0.21862723f;
      sa[190] = 0.07929001f;
      sa[191] = -0.08644984f;
      sa[192] = -0.11475746f;
      sa[193] = 0.22182952f;
      sa[194] = 0.0792245f;
      sa[195] = 0.27768734f;
      sa[196] = 0.23913106f;
      sa[197] = -0.022676094f;
      sa[198] = 0.12845923f;
      sa[199] = -0.06391947f;
      sa[200] = 0.03280915f;
      sa[201] = -0.2444834f;
      sa[202] = 0.13853872f;
      sa[203] = 0.013136493f;
      sa[204] = -0.16745847f;
      sa[205] = 0.24099807f;
      sa[206] = 0.23921433f;
      sa[207] = 0.18546034f;
      sa[208] = -0.23860642f;
      sa[209] = -0.05618205f;
      sa[210] = -0.25784832f;
      sa[211] = -0.21718757f;
      sa[212] = 0.2454166f;
      sa[213] = -0.21701805f;
      sa[214] = -0.13009343f;
      sa[215] = 0.035108667f;
      sa[216] = 0.08853914f;
      sa[217] = 0.11391133f;
      sa[218] = -0.18636005f;
      sa[219] = 0.19719274f;
      sa[220] = -0.20551883f;
      sa[221] = 0.026149f;
      sa[222] = 0.20586878f;
      sa[223] = 0.053966902f;
      sa[224] = 0.08969259f;
      sa[225] = 0.25575045f;
      sa[226] = -0.21400744f;
      sa[227] = 0.2615648f;
      sa[228] = 0.10808887f;
      sa[229] = 0.06474018f;
      sa[230] = 0.23269047f;
      sa[231] = -0.26331645f;
      sa[232] = -0.29542544f;
      sa[233] = 0.05135954f;
      sa[234] = 0.18647908f;
      sa[235] = -0.2822878f;
      sa[236] = -0.036344714f;
      sa[237] = -0.21081899f;
      sa[238] = -0.20957986f;
      sa[239] = 0.13801065f;
      sa[240] = 0.007014037f;
      sa[241] = -0.22091655f;
      sa[242] = -0.02799608f;
      sa[243] = -0.24132518f;
      sa[244] = -0.20160227f;
      sa[245] = -0.12237176f;
      sa[246] = -0.26512244f;
      sa[247] = -0.059933014f;
      sa[248] = 0.25449312f;
      sa[249] = 0.24155067f;
      sa[250] = -0.19029002f;
      sa[251] = -0.09026081f;
      sa[252] = -0.2696344f;
      sa[253] = -0.27049154f;
      sa[254] = -0.25484362f;
      sa[255] = 0.20367557f;
      sa[256] = -0.17942348f;
      sa[257] = 0.25245064f;
      sa[258] = -0.24035665f;
      sa[259] = -0.12737915f;
      sa[260] = -0.20230612f;
      sa[261] = -0.10087577f;
      sa[262] = -0.15550801f;
      sa[263] = 0.27948233f;
      sa[264] = -0.15729979f;
      sa[265] = 0.043876216f;
      sa[266] = -0.2685314f;
      sa[267] = -0.23568992f;
      sa[268] = 0.109221f;
      sa[269] = -0.16530208f;
      sa[270] = 5.1313953E-4f;
      sa[271] = 0.16352832f;
      sa[272] = -0.101408f;
      sa[273] = -0.13282469f;
      sa[274] = 0.10566296f;
      sa[275] = -0.02830896f;
      sa[276] = 0.06551438f;
      sa[277] = -0.2447046f;
      sa[278] = -0.11246544f;
      sa[279] = 0.1573192f;
      sa[280] = -0.17978546f;
      sa[281] = 0.2522864f;
      sa[282] = -0.10701312f;
      sa[283] = -0.0587331f;
      sa[284] = 0.038761776f;
      sa[285] = -0.12893666f;
      sa[286] = 0.24548678f;
      sa[287] = 0.119809486f;
      sa[288] = -0.19004749f;
      sa[289] = -0.1456892f;
      sa[290] = -0.050364833f;
      sa[291] = -0.06209548f;
      sa[292] = 0.13388908f;
      sa[293] = -0.08498373f;
      sa[294] = 0.0801822f;
      sa[295] = 0.12958643f;
      sa[296] = 0.21083298f;
      sa[297] = 0.22146292f;
      sa[298] = 0.0085035255f;
      sa[299] = -0.07280331f;
      sa[300] = -0.0036410496f;
      sa[301] = -0.059268694f;
      sa[302] = 0.15216486f;
      sa[303] = 0.038850393f;
      sa[304] = -0.18561025f;
      sa[305] = -0.012312662f;
      sa[306] = 0.17603293f;
      sa[307] = -0.13037826f;
      sa[308] = 0.08968989f;
      sa[309] = 0.15544783f;
      sa[310] = 0.28142488f;
      sa[311] = 0.30240694f;
      sa[312] = -0.17852953f;
      sa[313] = -0.13582876f;
      sa[314] = -0.15903065f;
      sa[315] = 0.017907167f;
      sa[316] = -0.014071974f;
      sa[317] = -0.074007794f;
      sa[318] = 0.092964076f;
      sa[319] = 0.28698137f;
      sa[320] = -0.095469676f;
      sa[321] = 0.10084487f;
      sa[322] = 0.24560378f;
      sa[323] = -0.119526036f;
      sa[324] = -0.0014457678f;
      sa[325] = 0.2781394f;
      sa[326] = -0.27407494f;
      sa[327] = 0.028948082f;
      sa[328] = -0.08136598f;
      sa[329] = 0.22188881f;
      sa[330] = -0.18701221f;
      sa[331] = -0.028391372f;
      sa[332] = -0.2495859f;
      sa[333] = 0.11708704f;
      sa[334] = -0.077488385f;
      sa[335] = 0.23976716f;
      sa[336] = -0.16111505f;
      sa[337] = -0.15637843f;
      sa[338] = 0.25276285f;
      sa[339] = -0.22167738f;
      sa[340] = -0.30057958f;
      sa[341] = -0.2496672f;
      sa[342] = 0.15095842f;
      sa[343] = -0.07804499f;
      sa[344] = -0.18145071f;
      sa[345] = 0.16399613f;
      sa[346] = 0.18108141f;
      sa[347] = -0.19093445f;
      sa[348] = 0.26637572f;
      sa[349] = -0.2683165f;
      sa[350] = -0.24278569f;
      sa[351] = 0.08843521f;
      sa[352] = 0.17053713f;
      sa[353] = -0.05669019f;
      sa[354] = 0.06999942f;
      sa[355] = 0.07424799f;
      sa[356] = -0.1289589f;
      sa[357] = 0.21818055f;
      sa[358] = -0.28171566f;
      sa[359] = 0.023766614f;
      sa[360] = 0.09631837f;
      sa[361] = -0.023766698f;
      sa[362] = -0.16530748f;
      sa[363] = 0.1816594f;
      sa[364] = -0.12775704f;
      sa[365] = -0.21310914f;
      sa[366] = -0.008926675f;
      sa[367] = -0.28915438f;
      sa[368] = -0.16424419f;
      sa[369] = 0.26704544f;
      sa[370] = -0.18666191f;
      sa[371] = 0.11675639f;
      sa[372] = -0.017957937f;
      sa[373] = 0.26684076f;
      sa[374] = -0.13523091f;
      sa[375] = -0.2831883f;
      sa[376] = -0.27948087f;
      sa[377] = -0.19717142f;
      sa[378] = 0.2681869f;
      sa[379] = 0.089723535f;
      sa[380] = -0.11515649f;
      sa[381] = -0.09872895f;
      sa[382] = -0.041696392f;
      sa[383] = -0.12382598f;
      sa[384] = -0.14420754f;
      sa[385] = 0.09791003f;
      sa[386] = -0.2550631f;
      sa[387] = -0.16384238f;
      sa[388] = 0.075273365f;
      sa[389] = -0.0112982f;
      sa[390] = -0.009162133f;
      sa[391] = -0.10559518f;
      sa[392] = 0.18805873f;
      sa[393] = 0.10583932f;
      sa[394] = 0.028746078f;
      sa[395] = 0.37507835f;
      sa[396] = 0.27351877f;
      sa[397] = -0.25906718f;
      sa[398] = 0.12129934f;
      sa[399] = 0.054559868f;
      sa[400] = 0.17414054f;
      sa[401] = 0.23402484f;
      sa[402] = -0.13209581f;
      sa[403] = 0.06977951f;
      sa[404] = 0.2172749f;
      sa[405] = -0.22286995f;
      sa[406] = -0.045762725f;
      sa[407] = 0.14243698f;
      sa[408] = -0.21087544f;
      sa[409] = -0.24231978f;
      sa[410] = -0.11974853f;
      sa[411] = 0.15489043f;
      sa[412] = -0.13950153f;
      sa[413] = 0.09776477f;
      sa[414] = 0.13577163f;
      sa[415] = 0.27317637f;
      sa[416] = -0.170789f;
      sa[417] = 0.029575532f;
      sa[418] = -0.004920328f;
      sa[419] = 0.2707662f;
      sa[420] = 0.20960662f;
      sa[421] = 0.2657156f;
      sa[422] = 0.23132892f;
      sa[423] = -0.011899581f;
      sa[424] = 0.10211665f;
      sa[425] = -0.061876178f;
      sa[426] = -0.27432084f;
      sa[427] = 0.19222125f;
      sa[428] = -0.057602126f;
      sa[429] = -0.19630148f;
      sa[430] = 0.16856553f;
      sa[431] = -2.0474158E-4f;
      sa[432] = -0.03391732f;
      sa[433] = 0.13391314f;
      sa[434] = 0.20749775f;
      sa[435] = 0.07675913f;
      sa[436] = -0.27367535f;
      sa[437] = -0.25417176f;
      sa[438] = -0.0112023065f;
      sa[439] = -0.03846802f;
      sa[440] = 0.30329055f;
      sa[441] = -0.2887537f;
      sa[442] = 0.069088854f;
      sa[443] = 0.07443681f;
      sa[444] = -0.22268607f;
      sa[445] = 0.048286263f;
      sa[446] = 0.20824623f;
      sa[447] = 0.04844085f;
      sa[448] = 0.181561f;
      sa[449] = 0.2385074f;
      sa[450] = -0.086719595f;
      sa[451] = 0.08294398f;
      sa[452] = 0.1553286f;
      sa[453] = -0.06941171f;
      sa[454] = -0.16667973f;
      sa[455] = -0.07974983f;
      sa[456] = -0.05434685f;
      sa[457] = 0.07123333f;
      sa[458] = -0.20886366f;
      sa[459] = 0.2334463f;
      sa[460] = 0.19369848f;
      sa[461] = 0.24981749f;
      sa[462] = 0.03399351f;
      sa[463] = 0.18657702f;
      sa[464] = -0.26169407f;
      sa[465] = 0.20173092f;
      sa[466] = -8.825898E-4f;
      sa[467] = 0.12093297f;
      sa[468] = 0.10615165f;
      sa[469] = 0.29964942f;
      sa[470] = 0.1739264f;
      sa[471] = 0.067830674f;
      sa[472] = -8.4919203E-4f;
      sa[473] = -0.10848231f;
      sa[474] = -0.017143033f;
      sa[475] = 0.07766973f;
      sa[476] = 0.24656515f;
      sa[477] = -0.16856383f;
      sa[478] = 0.09634765f;
      sa[479] = -0.12517388f;
      sa[480] = -0.29069656f;
      sa[481] = -0.20115931f;
      sa[482] = -0.2460255f;
      sa[483] = 0.1895577f;
      sa[484] = 0.22423396f;
      sa[485] = 0.123054f;
      sa[486] = -0.028088408f;
      sa[487] = -0.17362817f;
      sa[488] = -0.19660547f;
      sa[489] = 0.061965022f;
      sa[490] = -0.014853481f;
      sa[491] = -0.25192696f;
      sa[492] = 0.19886243f;
      sa[493] = 0.24365613f;
      sa[494] = -0.2267022f;
      sa[495] = 0.14223565f;
      sa[496] = -0.011675824f;
      sa[497] = 0.049239438f;
      sa[498] = 0.15638757f;
      sa[499] = 0.14762975f;
      sa[500] = -0.061426263f;
      sa[501] = 0.051462073f;
      sa[502] = 0.23829162f;
      sa[503] = 0.052881997f;
      sa[504] = -0.17402157f;
      sa[505] = -0.2252686f;
      sa[506] = 0.18536127f;
      sa[507] = -0.0927894f;
      sa[508] = 0.10062126f;
      sa[509] = 0.21077918f;
      sa[510] = 0.16323653f;
      sa[511] = 0.01734523f;
      sa[512] = 0.0549802f;
      sa[513] = -0.08818922f;
      sa[514] = 0.251559f;
      sa[515] = -0.24490875f;
      sa[516] = 0.018005025f;
      sa[517] = 0.08470134f;
      sa[518] = 0.1294139f;
      sa[519] = -0.09054997f;
      sa[520] = 0.19264242f;
      sa[521] = 0.12793721f;
      sa[522] = 0.101252526f;
      sa[523] = 0.19942762f;
      sa[524] = 0.18173155f;
      sa[525] = 0.16862828f;
      sa[526] = -0.002667172f;
      sa[527] = -0.08874476f;
      sa[528] = -0.011374514f;
      sa[529] = 0.11968086f;
      sa[530] = -0.16175996f;
      sa[531] = 0.08631915f;
      sa[532] = 0.1358259f;
      sa[533] = 0.12305398f;
      sa[534] = 0.12637474f;
      sa[535] = -0.07935698f;
      sa[536] = 0.07056341f;
      sa[537] = -0.21408556f;
      sa[538] = 0.22997509f;
      sa[539] = 0.29753286f;
      sa[540] = -0.23759878f;
      sa[541] = -0.15303531f;
      sa[542] = -0.08123402f;
      sa[543] = -0.21306582f;
      sa[544] = 0.13666877f;
      sa[545] = 0.10741553f;
      sa[546] = 0.079397306f;
      sa[547] = 0.16658717f;
      sa[548] = 0.065082654f;
      sa[549] = 0.15096425f;
      sa[550] = -0.024273034f;
      sa[551] = -0.09657315f;
      sa[552] = 0.04543021f;
      sa[553] = -0.046997994f;
      sa[554] = -0.13531764f;
      sa[555] = -0.14242426f;
      sa[556] = -0.16741481f;
      sa[557] = -0.21904448f;
      sa[558] = -0.18630005f;
      sa[559] = 0.11274415f;
      sa[560] = -0.29644883f;
      sa[561] = -0.10096939f;
      sa[562] = 0.17999965f;
      sa[563] = -0.09435076f;
      sa[564] = 0.25333613f;
      sa[565] = 0.02862723f;
      sa[566] = 0.26303038f;
      sa[567] = -0.008946173f;
      sa[568] = -0.08037781f;
      sa[569] = 0.011964534f;
      sa[570] = -0.026583415f;
      sa[571] = -0.07715038f;
      sa[572] = -0.1022859f;
      sa[573] = 0.1376344f;
      sa[574] = 0.19697905f;
      sa[575] = -0.24979472f;
      sa[576] = -0.08969011f;
      sa[577] = 0.03663938f;
      sa[578] = 0.11472054f;
      sa[579] = -0.07441444f;
      sa[580] = 0.09732732f;
      sa[581] = -0.12388825f;
      sa[582] = 0.09288544f;
      sa[583] = 0.025834959f;
      sa[584] = 0.11954669f;
      sa[585] = 0.18933472f;
      sa[586] = -0.20187837f;
      sa[587] = -0.11933372f;
      sa[588] = 0.07953578f;
      sa[589] = 0.12598906f;
      sa[590] = -0.015075004f;
      sa[591] = 0.042163685f;
      sa[592] = -0.29281092f;
      sa[593] = -0.16670032f;
      sa[594] = -0.080113344f;
      sa[595] = -0.0025527074f;
      sa[596] = 0.26100013f;
      sa[597] = -0.013723786f;
      sa[598] = 0.2175904f;
      sa[599] = 0.045834105f;
      sa[600] = -0.2708926f;
      sa[601] = 0.22281717f;
      sa[602] = -0.056838736f;
      sa[603] = 0.27285957f;
      sa[604] = 0.22959785f;
      sa[605] = 0.17606312f;
      sa[606] = 0.20940255f;
      sa[607] = 0.071023725f;
      sa[608] = -0.010038742f;
      sa[609] = 0.08342338f;
      sa[610] = 0.066677555f;
      sa[611] = -0.110744245f;
      sa[612] = -0.08268478f;
      sa[613] = 0.09167285f;
      sa[614] = 0.045790654f;
      sa[615] = 0.024728583f;
      sa[616] = 0.023051925f;
      sa[617] = -0.30937433f;
      sa[618] = -0.17230798f;
      sa[619] = -0.1968351f;
      sa[620] = -0.041046247f;
      sa[621] = -0.21326531f;
      sa[622] = -0.29201296f;
      sa[623] = -0.27343366f;
      sa[624] = -0.06607214f;
      sa[625] = 0.20994022f;
      sa[626] = -0.026183128f;
      sa[627] = 0.22045074f;
      sa[628] = -0.27268273f;
      sa[629] = -0.04820072f;
      sa[630] = -0.14839146f;
      sa[631] = 0.20180519f;
      sa[632] = 0.07584362f;
      sa[633] = -0.18049678f;
      sa[634] = -0.22401199f;
      sa[635] = 0.118736506f;
      sa[636] = -0.19294474f;
      sa[637] = -0.044630013f;
      sa[638] = -0.11268431f;
      sa[639] = -0.09453208f;
      sa[640] = -0.15764987f;
      sa[641] = -0.3060771f;
      sa[642] = 0.15571737f;
      sa[643] = -0.33031857f;
      sa[644] = -0.078673504f;
      sa[645] = -0.25688446f;
      sa[646] = 0.32060656f;
      sa[647] = -0.20812698f;
      sa[648] = -0.028895894f;
      sa[649] = -0.010780279f;
      sa[650] = 0.059347f;
      sa[651] = -0.08429737f;
      sa[652] = 0.07174603f;
      sa[653] = -0.1400737f;
      sa[654] = -0.14380425f;
      sa[655] = -0.16871056f;
      sa[656] = 0.0947928f;
      sa[657] = 0.13530645f;
      sa[658] = -0.25224602f;
      sa[659] = -0.20734428f;
      sa[660] = -0.231189f;
      sa[661] = -0.09556661f;
      sa[662] = -0.2638357f;
      sa[663] = 0.16839778f;
      sa[664] = -0.13667849f;
      sa[665] = 0.28873947f;
      sa[666] = -0.03528982f;
      sa[667] = -0.24370968f;
      sa[668] = 0.26066467f;
      sa[669] = -0.12520659f;
      sa[670] = 0.1301219f;
      sa[671] = 0.0307975f;
      sa[672] = -0.26445615f;
      sa[673] = 0.15339097f;
      sa[674] = 0.21765839f;
      sa[675] = -0.2693913f;
      sa[676] = -0.08955615f;
      sa[677] = -0.19545056f;
      sa[678] = 0.19244581f;
      sa[679] = -0.07048541f;
      sa[680] = 0.042905137f;
      sa[681] = 0.07471612f;
      sa[682] = 0.085505515f;
      sa[683] = -0.091303736f;
      sa[684] = -0.039081253f;
      sa[685] = 0.017283835f;
      sa[686] = -0.1534982f;
      sa[687] = -0.21766135f;
      sa[688] = -0.26781383f;
      sa[689] = -0.23401655f;
      sa[690] = -0.027992865f;
      sa[691] = 0.11526329f;
      sa[692] = -0.15880324f;
      sa[693] = -0.17426877f;
      sa[694] = 0.26738325f;
      sa[695] = -0.035063323f;
      sa[696] = -0.08552044f;
      sa[697] = -0.14048557f;
      sa[698] = -0.16991445f;
      sa[699] = 0.2994755f;
      sa[700] = 0.15111631f;
      sa[701] = 0.10081866f;
      sa[702] = 0.1913115f;
      sa[703] = -0.048873432f;
      sa[704] = -0.25921664f;
      sa[705] = -0.03491547f;
      sa[706] = -0.13276027f;
      sa[707] = 0.029658485f;
      sa[708] = -0.008043663f;
      sa[709] = -0.26908207f;
      sa[710] = 0.26349849f;
      sa[711] = -0.05933612f;
      sa[712] = 0.038082592f;
      sa[713] = 0.14062664f;
      sa[714] = 0.18123706f;
      sa[715] = 0.09301151f;
      sa[716] = 0.04740691f;
      sa[717] = 0.18124972f;
      sa[718] = -0.049208023f;
      sa[719] = 0.109579585f;
      sa[720] = -0.26039824f;
      sa[721] = 0.20284656f;
      sa[722] = -0.1591592f;
      sa[723] = 0.0301806f;
      sa[724] = 0.04191663f;
      sa[725] = -0.30337286f;
      sa[726] = -0.22159986f;
      sa[727] = -0.29089534f;
      sa[728] = -0.13060085f;
      sa[729] = -0.029325452f;
      sa[730] = 0.056474555f;
      sa[731] = -0.24417451f;
      sa[732] = 0.14761546f;
      sa[733] = 0.18492661f;
      sa[734] = -0.15383399f;
      sa[735] = 0.2637996f;
      sa[736] = -0.033529855f;
      sa[737] = 0.1530088f;
      sa[738] = -0.15044045f;
      sa[739] = -0.31218928f;
      sa[740] = -0.28983095f;
      sa[741] = -0.30184126f;
      sa[742] = 0.07392848f;
      sa[743] = 0.016547857f;
      sa[744] = 0.035875283f;
      sa[745] = -0.26113155f;
      sa[746] = 0.1268019f;
      sa[747] = -0.1453249f;
      sa[748] = -0.17258584f;
      sa[749] = -0.2021899f;
      sa[750] = 0.1577369f;
      sa[751] = 0.2120999f;
      sa[752] = -0.035038207f;
      sa[753] = 0.21033072f;
      sa[754] = 0.010139409f;
      sa[755] = 0.1775927f;
      sa[756] = -0.20329669f;
      sa[757] = 0.22842288f;
      sa[758] = -0.13714625f;
      sa[759] = -0.16150387f;
      sa[760] = -0.076802276f;
      sa[761] = 0.04739555f;
      sa[762] = -0.09089324f;
      sa[763] = 0.17950077f;
      sa[764] = 0.04946105f;
      sa[765] = -0.05034654f;
      sa[766] = -0.20412311f;
      sa[767] = 0.09920769f;
      sa[768] = -0.1642434f;
      sa[769] = -0.2706359f;
      sa[770] = -0.0061830715f;
      sa[771] = 0.030842394f;
      sa[772] = 0.039101135f;
      sa[773] = -0.25713643f;
      sa[774] = -0.0073923003f;
      sa[775] = 0.27846095f;
      sa[776] = -0.049295038f;
      sa[777] = 0.07784155f;
      sa[778] = 0.1741142f;
      sa[779] = -0.109825395f;
      sa[780] = -0.01609737f;
      sa[781] = -0.04390312f;
      sa[782] = 0.13916953f;
      sa[783] = -0.10008615f;
      sa[784] = -0.13072443f;
      sa[785] = -0.10192617f;
      sa[786] = -0.0824021f;
      sa[787] = -0.21819775f;
      sa[788] = -0.25286913f;
      sa[789] = 0.19629265f;
      sa[790] = -0.12939264f;
      sa[791] = -0.095671795f;
      sa[792] = 0.20543447f;
      sa[793] = -0.12861216f;
      sa[794] = -0.20570073f;
      sa[795] = -5.225963E-4f;
      sa[796] = 0.24772093f;
      sa[797] = -0.16844456f;
      sa[798] = -0.23287983f;
      sa[799] = -0.15674073f;
      sa[800] = 0.21636662f;
      sa[801] = 0.028423319f;
      sa[802] = 0.23361714f;
      sa[803] = 0.052390788f;
      sa[804] = 0.24902923f;
      sa[805] = 0.3200747f;
      sa[806] = 0.31828624f;
      sa[807] = 0.23825791f;
      sa[808] = -0.025754707f;
      sa[809] = -0.23534755f;
      sa[810] = 0.08559172f;
      sa[811] = 0.20057759f;
      sa[812] = 0.17942353f;
      sa[813] = -0.268879f;
      sa[814] = 0.10389125f;
      sa[815] = -0.15271887f;
      sa[816] = -0.113622114f;
      sa[817] = -0.15673915f;
      sa[818] = -0.008784783f;
      sa[819] = -0.08160504f;
      sa[820] = -0.25881386f;
      sa[821] = -0.17692052f;
      sa[822] = -0.24313845f;
      sa[823] = 0.08365168f;
      sa[824] = 0.11631584f;
      sa[825] = 0.29475263f;
      sa[826] = -0.27799022f;
      sa[827] = -0.30960765f;
      sa[828] = 0.12359764f;
      sa[829] = -0.080592126f;
      sa[830] = 0.14672923f;
      sa[831] = 0.18060836f;
      sa[832] = 0.12540282f;
      sa[833] = 0.06528483f;
      sa[834] = 0.17719784f;
      sa[835] = -0.09958135f;
      sa[836] = 0.20298031f;
      sa[837] = -0.15902062f;
      sa[838] = 0.12449614f;
      sa[839] = -0.24723119f;
      sa[840] = 0.1886703f;
      sa[841] = 0.10608969f;
      sa[842] = 0.15883502f;
      sa[843] = 0.030138126f;
      sa[844] = 0.04407021f;
      sa[845] = 0.14217645f;
      sa[846] = -0.23560609f;
      sa[847] = -0.04757289f;
      sa[848] = 0.19519898f;
      sa[849] = 0.22815056f;
      sa[850] = -0.018503979f;
      sa[851] = 0.09738235f;
      sa[852] = 0.26373807f;
      sa[853] = 0.1447658f;
      sa[854] = 0.23791455f;
      sa[855] = 0.16956607f;
      sa[856] = 0.08438468f;
      sa[857] = -0.15657619f;
      sa[858] = 0.13180357f;
      sa[859] = 0.06716463f;
      sa[860] = 0.27074695f;
      sa[861] = -0.22122504f;
      sa[862] = -0.094782725f;
      sa[863] = 0.050472137f;
      sa[864] = -0.1758156f;
      sa[865] = 0.22300972f;
      sa[866] = -0.14328067f;
      sa[867] = -0.017822394f;
      sa[868] = -0.17075871f;
      sa[869] = 0.2115303f;
      sa[870] = -0.024725903f;
      sa[871] = 0.15121338f;
      sa[872] = 0.25610036f;
      sa[873] = -0.057709478f;
      sa[874] = 0.0045832456f;
      sa[875] = -0.22626543f;
      sa[876] = -0.22185501f;
      sa[877] = -0.20201981f;
      sa[878] = 0.03663703f;
      sa[879] = 0.19053032f;
      sa[880] = -0.11592933f;
      sa[881] = -0.10586321f;
      sa[882] = 0.14919257f;
      sa[883] = 0.18679334f;
      sa[884] = -0.12009136f;
      sa[885] = -0.119684815f;
      sa[886] = 0.10268959f;
      sa[887] = -0.05218656f;
      sa[888] = -0.09209936f;
      sa[889] = 0.048384074f;
      sa[890] = -0.32143703f;
      sa[891] = 0.33535996f;
      sa[892] = 0.17195404f;
      sa[893] = 0.2599363f;
      sa[894] = 0.04336809f;
      sa[895] = 0.22220004f;
      sa[896] = -0.18250182f;
      sa[897] = 0.2543505f;
      sa[898] = -0.07489817f;
      sa[899] = 0.18179439f;
      sa[900] = -0.13674235f;
      sa[901] = 0.15415362f;
      sa[902] = -0.25790924f;
      sa[903] = -0.08956637f;
      sa[904] = 0.14731336f;
      sa[905] = 0.1522851f;
      sa[906] = -0.26464447f;
      sa[907] = -0.27592632f;
      sa[908] = -0.2406114f;
      sa[909] = 0.068052314f;
      sa[910] = 0.010111434f;
      sa[911] = -0.099451385f;
      sa[912] = -0.039539196f;
      sa[913] = 0.020154892f;
      sa[914] = -0.21030463f;
      sa[915] = 0.027293295f;
      sa[916] = 0.20390755f;
      sa[917] = 0.018283982f;
      sa[918] = 0.18462476f;
      sa[919] = -0.050069932f;
      sa[920] = 0.11593248f;
      sa[921] = -0.10036118f;
      sa[922] = -0.15381914f;
      sa[923] = -0.15757196f;
      sa[924] = -0.1272162f;
      sa[925] = -0.19855435f;
      sa[926] = 0.099357f;
      sa[927] = -0.11114017f;
      sa[928] = 0.20967413f;
      sa[929] = 0.099310555f;
      sa[930] = 0.11878939f;
      sa[931] = -0.034696665f;
      sa[932] = 0.24176352f;
      sa[933] = 0.004578025f;
      sa[934] = 0.21729913f;
      sa[935] = -0.17747667f;
      sa[936] = 0.06970046f;
      sa[937] = 0.18385148f;
      sa[938] = -0.08680733f;
      sa[939] = -0.04435628f;
      sa[940] = -0.04344461f;
      sa[941] = -0.2924362f;
      sa[942] = -0.22798547f;
      sa[943] = -0.1594019f;
      sa[944] = -0.22491713f;
      sa[945] = 0.04975327f;
      sa[946] = 0.07688245f;
      sa[947] = 0.2595411f;
      sa[948] = 0.09086288f;
      sa[949] = -0.17701723f;
      sa[950] = 0.08978482f;
      sa[951] = -0.08008577f;
      sa[952] = -0.20435552f;
      sa[953] = -0.18878698f;
      sa[954] = -0.23840436f;
      sa[955] = 0.058927316f;
      sa[956] = -0.007795985f;
      sa[957] = 0.046304412f;
      sa[958] = 0.09964835f;
      sa[959] = -0.1469532f;
      sa[960] = 0.31412613f;
      sa[961] = -0.12842435f;
      sa[962] = -0.02422797f;
      sa[963] = -0.056200553f;
      sa[964] = -0.16168371f;
      sa[965] = 0.2546851f;
      sa[966] = -0.08414869f;
      sa[967] = -0.2548089f;
      sa[968] = 0.11324035f;
      sa[969] = 0.07412613f;
      sa[970] = 0.27569872f;
      sa[971] = 0.0072684493f;
      sa[972] = -0.18306382f;
      sa[973] = -0.19976416f;
      sa[974] = -0.3418897f;
      sa[975] = -0.24489523f;
      sa[976] = -0.09838966f;
      sa[977] = 0.014955549f;
      sa[978] = -0.10956367f;
      sa[979] = 0.13107754f;
      sa[980] = 0.072553836f;
      sa[981] = -0.19233303f;
      sa[982] = 0.12387718f;
      sa[983] = -0.09520262f;
      sa[984] = -0.28910318f;
      sa[985] = 0.03119842f;
      sa[986] = -0.27862155f;
      sa[987] = 0.0672556f;
      sa[988] = 0.15430331f;
      sa[989] = 0.22805502f;
      sa[990] = 0.2876971f;
      sa[991] = -0.22136323f;
      sa[992] = -0.21366826f;
      sa[993] = -0.05649302f;
      sa[994] = -0.16863461f;
      sa[995] = -0.2739644f;
      sa[996] = 0.17353316f;
      sa[997] = 0.1584513f;
      sa[998] = 0.116140276f;
      sa[999] = 0.23883156f;
      sa[1000] = 0.007716751f;
      sa[1001] = 0.2153259f;
      sa[1002] = 0.2364468f;
      sa[1003] = -0.08951511f;
      sa[1004] = 0.17662154f;
      sa[1005] = -0.2407684f;
      sa[1006] = -0.052009474f;
      sa[1007] = 0.075442515f;
      sa[1008] = 0.19578396f;
      sa[1009] = 0.01513457f;
      sa[1010] = -0.01112539f;
      sa[1011] = 0.26459986f;
      sa[1012] = -0.0649317f;
      sa[1013] = 0.15279388f;
      sa[1014] = 0.27422473f;
      sa[1015] = -0.27335113f;
      sa[1016] = 0.27512717f;
      sa[1017] = 0.03579225f;
      sa[1018] = -0.03606729f;
      sa[1019] = 0.058533557f;
      sa[1020] = -0.22997902f;
      sa[1021] = 0.08207251f;
      sa[1022] = 0.24416202f;
      sa[1023] = 0.077112235f;
      sa[1024] = -0.06394184f;
      sa[1025] = 0.0734339f;
      sa[1026] = 0.1719684f;
      sa[1027] = 0.25883517f;
      sa[1028] = 0.29208127f;
      sa[1029] = -0.021339795f;
      sa[1030] = -0.15297621f;
      sa[1031] = 0.007353545f;
      sa[1032] = -0.228209f;
      sa[1033] = 0.025620833f;
      sa[1034] = -0.02607094f;
      sa[1035] = -0.27899352f;
      sa[1036] = 0.2515715f;
      sa[1037] = 0.022046277f;
      sa[1038] = -0.21017209f;
      sa[1039] = 0.23261154f;
      sa[1040] = -0.01145591f;
      sa[1041] = 0.088254265f;
      sa[1042] = -0.2376716f;
      sa[1043] = -0.06976699f;
      sa[1044] = 0.19776808f;
      sa[1045] = 0.23098399f;
      sa[1046] = -0.22412224f;
      sa[1047] = -0.16768791f;
      sa[1048] = 0.12975076f;
      sa[1049] = -0.12263736f;
      sa[1050] = 0.031763136f;
      sa[1051] = -0.2047377f;
      sa[1052] = 0.15689908f;
      sa[1053] = 0.2671717f;
      sa[1054] = 0.22398919f;
      sa[1055] = -0.014377931f;
      sa[1056] = 0.24543786f;
      sa[1057] = -0.21605828f;
      sa[1058] = 0.20707268f;
      sa[1059] = -0.1832143f;
      sa[1060] = -0.2807537f;
      sa[1061] = 0.035077475f;
      sa[1062] = 0.24158017f;
      sa[1063] = -0.046090767f;
      sa[1064] = 0.0916396f;
      sa[1065] = -0.03642269f;
      sa[1066] = 0.17025022f;
      sa[1067] = -0.3151746f;
      sa[1068] = -0.3105362f;
      sa[1069] = 0.20112184f;
      sa[1070] = 0.13366537f;
      sa[1071] = 0.18347023f;
      sa[1072] = -0.25211212f;
      sa[1073] = 0.096198454f;
      sa[1074] = 0.09103226f;
      sa[1075] = -0.19135594f;
      sa[1076] = -0.12265185f;
      sa[1077] = 0.09702012f;
      sa[1078] = 0.023112902f;
      sa[1079] = 0.06894458f;
      sa[1080] = 0.19456479f;
      sa[1081] = 0.22446766f;
      sa[1082] = -0.29522458f;
      sa[1083] = -0.1816843f;
      sa[1084] = 0.24282707f;
      sa[1085] = -0.20419723f;
      sa[1086] = -0.25391975f;
      sa[1087] = -0.21595505f;
      sa[1088] = -0.21610475f;
      sa[1089] = 0.08608233f;
      sa[1090] = -0.25924852f;
      sa[1091] = 0.13045526f;
      sa[1092] = -0.2354572f;
      sa[1093] = -0.2528183f;
      sa[1094] = 0.0036543845f;
      sa[1095] = -0.2045146f;
      sa[1096] = 0.08431625f;
      sa[1097] = -0.11749129f;
      sa[1098] = 0.0014624292f;
      sa[1099] = -0.052842934f;
      sa[1100] = -0.120231226f;
      sa[1101] = 0.14186704f;
      sa[1102] = -0.13087825f;
      sa[1103] = 0.23898444f;
      sa[1104] = -0.25482142f;
      sa[1105] = -0.12984012f;
      sa[1106] = -0.08652767f;
      sa[1107] = 0.19274767f;
      sa[1108] = -0.18561311f;
      sa[1109] = 0.23980658f;
      sa[1110] = 0.17368414f;
      sa[1111] = -0.23215082f;
      sa[1112] = 0.20522799f;
      sa[1113] = 0.22352459f;
      sa[1114] = -0.0072827344f;
      sa[1115] = 0.09018524f;
      sa[1116] = -0.080313265f;
      sa[1117] = -0.21286663f;
      sa[1118] = -0.19708073f;
      sa[1119] = -0.07846602f;
      sa[1120] = 0.19566754f;
      sa[1121] = 0.07357694f;
      sa[1122] = 0.24592681f;
      sa[1123] = 0.26487675f;
      sa[1124] = 0.01701723f;
      sa[1125] = -0.08115275f;
      sa[1126] = 0.22079445f;
      sa[1127] = 0.13805173f;
      sa[1128] = 0.0089593725f;
      sa[1129] = -0.109587006f;
      sa[1130] = 0.20338471f;
      sa[1131] = 0.27056608f;
      sa[1132] = -0.19795051f;
      sa[1133] = -0.16855656f;
      sa[1134] = 0.27143818f;
      sa[1135] = -0.31846023f;
      sa[1136] = -0.035639476f;
      sa[1137] = 0.19666001f;
      sa[1138] = -0.07750011f;
      sa[1139] = 0.14491606f;
      sa[1140] = 0.2258696f;
      sa[1141] = -0.26952899f;
      sa[1142] = 0.116207644f;
      sa[1143] = -0.018379394f;
      sa[1144] = -0.27124366f;
      sa[1145] = 0.16678059f;
      sa[1146] = 0.21658151f;
      sa[1147] = -0.0659931f;
      sa[1148] = 0.014065521f;
      sa[1149] = 7.151043E-5f;
      sa[1150] = -0.24972989f;
      sa[1151] = -0.21915238f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.253158f;
      sa[1] = -0.1295328f;
      sa[2] = -0.5597566f;
      sa[3] = -0.9357095f;
      sa[4] = 0.08025739f;
      sa[5] = 0.21620576f;
      sa[6] = 1.2280377f;
      sa[7] = -0.68395483f;
      sa[8] = -0.93364257f;
      sa[9] = 0.6880778f;
      sa[10] = -0.15831368f;
      sa[11] = 0.41091174f;
      sa[12] = 0.18941705f;
      sa[13] = 0.045192804f;
      sa[14] = -1.2732168f;
      sa[15] = 1.126178f;
      sa[16] = 1.5735786f;
      sa[17] = -0.4552983f;
      sa[18] = 0.038791668f;
      sa[19] = -0.46535522f;
      sa[20] = 1.155255f;
      sa[21] = 0.017949909f;
      sa[22] = -1.0045041f;
      sa[23] = 0.76546115f;
      sa[24] = -1.3580806f;
      sa[25] = 0.44998416f;
      sa[26] = -0.2320078f;
      sa[27] = 1.4935402f;
      sa[28] = -1.4060237f;
      sa[29] = -0.4717487f;
      sa[30] = 0.4158519f;
      sa[31] = -0.64855844f;
      sa[32] = -1.1552337f;
      sa[33] = -1.4740757f;
      sa[34] = 0.03938336f;
      sa[35] = 1.3795487f;
      sa[36] = -0.30699703f;
      sa[37] = -0.04639561f;
      sa[38] = 0.19010949f;
      sa[39] = 0.82702965f;
      sa[40] = -0.75158614f;
      sa[41] = -1.3454385f;
      sa[42] = -1.0230101f;
      sa[43] = -1.401759f;
      sa[44] = 0.023121536f;
      sa[45] = -1.3368227f;
      sa[46] = 1.2124861f;
      sa[47] = 1.3368071f;
      sa[48] = -1.3388476f;
      sa[49] = -1.0143981f;
      sa[50] = 0.40981954f;
      sa[51] = -0.31344268f;
      sa[52] = 0.80836827f;
      sa[53] = 0.90070885f;
      sa[54] = -0.22532766f;
      sa[55] = 1.1376199f;
      sa[56] = -1.0074768f;
      sa[57] = -1.1118436f;
      sa[58] = 0.17354001f;
      sa[59] = -0.17950258f;
      sa[60] = 1.3727994f;
      sa[61] = -0.58941776f;
      sa[62] = -0.3527895f;
      sa[63] = 0.6933051f;
      sa[64] = 1.455446f;
      sa[65] = -0.6382296f;
      sa[66] = 0.6195055f;
      sa[67] = 1.5913539f;
      sa[68] = 0.71240324f;
      sa[69] = -1.0478128f;
      sa[70] = -1.5923791f;
      sa[71] = -0.43194234f;
      sa[72] = -1.3015555f;
      sa[73] = 1.1556673f;
      sa[74] = 1.3022436f;
      sa[75] = -0.11002306f;
      sa[76] = 0.91524655f;
      sa[77] = 0.51246876f;
      sa[78] = -1.2852253f;
      sa[79] = 0.9661555f;
      sa[80] = -0.7977909f;
      sa[81] = 0.26915604f;
      sa[82] = 0.78765595f;
      sa[83] = -0.6340551f;
      sa[84] = -1.6049973f;
      sa[85] = -1.2958603f;
      sa[86] = 0.23468195f;
      sa[87] = 1.2330482f;
      sa[88] = -1.5554934f;
      sa[89] = -0.5214948f;
      sa[90] = -1.056091f;
      sa[91] = 1.5213629f;
      sa[92] = -0.32554868f;
      sa[93] = 0.24828175f;
      sa[94] = -1.5522075f;
      sa[95] = -0.23886614f;
      sa[96] = -1.1290013f;
      sa[97] = 0.16303945f;
      sa[98] = -0.07103507f;
      sa[99] = 0.31090033f;
      sa[100] = -1.2791272f;
      sa[101] = -0.41328928f;
      sa[102] = 1.2828165f;
      sa[103] = 0.045546494f;
      sa[104] = -0.17013901f;
      sa[105] = -0.58482826f;
      sa[106] = 1.4420625f;
      sa[107] = 1.1778811f;
      sa[108] = 0.71412617f;
      sa[109] = 0.10848477f;
      sa[110] = 0.68617827f;
      sa[111] = -0.7747414f;
      sa[112] = -1.1367128f;
      sa[113] = 0.16597418f;
      sa[114] = 0.18592258f;
      sa[115] = -0.3112858f;
      sa[116] = 1.169827f;
      sa[117] = 0.05471225f;
      sa[118] = -1.3346468f;
      sa[119] = -0.81327534f;
      sa[120] = -0.329731f;
      sa[121] = 1.0782545f;
      sa[122] = -0.05978315f;
      sa[123] = 0.33444834f;
      sa[124] = -0.7434248f;
      sa[125] = 0.77125055f;
      sa[126] = -0.9631192f;
      sa[127] = 0.4491249f;
      sa[128] = -0.86796933f;
      sa[129] = 0.7688306f;
      sa[130] = -0.36585507f;
      sa[131] = 0.895573f;
      sa[132] = 0.4641034f;
      sa[133] = 0.623184f;
      sa[134] = 0.5725458f;
      sa[135] = -1.0938109f;
      sa[136] = 0.54789335f;
      sa[137] = -0.61205554f;
      sa[138] = -0.18183362f;
      sa[139] = 1.183915f;
      sa[140] = -0.4335989f;
      sa[141] = -0.006410714f;
      sa[142] = 0.30842587f;
      sa[143] = -0.784811f;
      sa[144] = 0.99845105f;
      sa[145] = -0.7702183f;
      sa[146] = 0.066696204f;
      sa[147] = -0.3009972f;
      sa[148] = -0.8294601f;
      sa[149] = 1.0825683f;
      sa[150] = -1.1233654f;
      sa[151] = -1.544746f;
      sa[152] = 1.5970252f;
      sa[153] = -0.58926654f;
      sa[154] = 1.3171735f;
      sa[155] = -1.5274348f;
      sa[156] = -1.4432387f;
      sa[157] = -1.09751f;
      sa[158] = -0.21384548f;
      sa[159] = -0.63275063f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


