/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:47:21.046+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_04

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_04 > h2o_nn_32x6_Tanh_04.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_04.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_04", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_04 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_04_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_04_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_04_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_04_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_04_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_04_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_04_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_04_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_04_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_04.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_04_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_04() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-8396960643175814456L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_04_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_04_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_04_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_04_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_04_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_04_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_04_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_04_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_04_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0028999887041794054;
      sa[1] = -0.06309467547082326;
      sa[2] = 0.0654423359433633;
      sa[3] = -0.20458856290858962;
      sa[4] = -0.060136730274856595;
      sa[5] = -0.09146404924310833;
      sa[6] = 0.1990654220234969;
      sa[7] = -0.032936847020652714;
      sa[8] = -0.09330793323780055;
      sa[9] = -0.15292553081507315;
      sa[10] = 0.18721564262309476;
      sa[11] = 0.08215655193486089;
      sa[12] = 0.23011929129187036;
      sa[13] = 0.0075399525351940895;
      sa[14] = 0.03473701580057878;
      sa[15] = 0.016596798154756908;
      sa[16] = -0.10277956445841549;
      sa[17] = 0.17854623666949607;
      sa[18] = -0.11303440774048527;
      sa[19] = 0.03034411410840518;
      sa[20] = 0.15764004010759886;
      sa[21] = -0.03004246282278119;
      sa[22] = -0.09116065761241085;
      sa[23] = -0.026477998860018385;
      sa[24] = -0.1273621369577083;
      sa[25] = 0.19926861785932318;
      sa[26] = -0.08824740817018856;
      sa[27] = 0.08587696125186307;
      sa[28] = -0.14576148147547585;
      sa[29] = 0.11618731176558948;
      sa[30] = -0.009228130240672209;
      sa[31] = -0.0013744882959747925;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_04_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_04_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.04328613746018551;
      sa[1] = -0.1288218811756541;
      sa[2] = -0.07903147940517374;
      sa[3] = 0.06911153011833421;
      sa[4] = -0.31437584610624586;
      sa[5] = 0.04102698388135897;
    }
  }
}
class h2o_nn_32x6_Tanh_04_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_04_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_04_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.023705715f;
      sa[1] = 0.10160671f;
      sa[2] = 0.08180271f;
      sa[3] = 0.09091582f;
      sa[4] = -0.18439138f;
      sa[5] = -0.24442464f;
      sa[6] = -0.046965413f;
      sa[7] = 0.28383723f;
      sa[8] = 0.06917889f;
      sa[9] = -0.2277673f;
      sa[10] = -0.16217196f;
      sa[11] = -0.12682816f;
      sa[12] = 0.018211463f;
      sa[13] = -0.34949324f;
      sa[14] = -0.1829509f;
      sa[15] = -0.044149693f;
      sa[16] = 0.07127811f;
      sa[17] = 0.04533533f;
      sa[18] = -0.10431231f;
      sa[19] = 0.21983445f;
      sa[20] = 0.18304555f;
      sa[21] = -0.3101776f;
      sa[22] = 0.23956254f;
      sa[23] = -0.06824542f;
      sa[24] = 0.20001353f;
      sa[25] = 0.13702126f;
      sa[26] = -0.16799101f;
      sa[27] = 0.2458103f;
      sa[28] = 0.14810923f;
      sa[29] = -0.33496556f;
      sa[30] = -0.27110076f;
      sa[31] = 0.05936556f;
      sa[32] = 0.2212126f;
      sa[33] = -0.1323256f;
      sa[34] = -0.04001691f;
      sa[35] = -0.09935156f;
      sa[36] = 0.032562554f;
      sa[37] = 0.16014439f;
      sa[38] = -0.041018948f;
      sa[39] = 0.21652472f;
      sa[40] = -0.10319749f;
      sa[41] = -0.15552428f;
      sa[42] = -0.23170848f;
      sa[43] = -0.21049204f;
      sa[44] = 0.2943984f;
      sa[45] = -0.26746786f;
      sa[46] = 0.04837948f;
      sa[47] = 0.05291028f;
      sa[48] = 0.23289849f;
      sa[49] = 0.26546794f;
      sa[50] = 0.19989772f;
      sa[51] = -0.45201626f;
      sa[52] = -0.16187775f;
      sa[53] = 0.07199692f;
      sa[54] = 0.2672152f;
      sa[55] = 0.3300662f;
      sa[56] = -0.18767248f;
      sa[57] = -0.36451498f;
      sa[58] = 0.19453223f;
      sa[59] = -0.33011267f;
      sa[60] = -0.13107699f;
      sa[61] = 0.14573573f;
      sa[62] = 0.14075801f;
      sa[63] = -0.32969952f;
      sa[64] = 0.097636506f;
      sa[65] = 0.031390857f;
      sa[66] = -0.03808425f;
      sa[67] = -0.037183166f;
      sa[68] = -0.06478125f;
      sa[69] = -0.13370045f;
      sa[70] = -0.12152069f;
      sa[71] = 0.41626203f;
      sa[72] = -0.11088931f;
      sa[73] = 0.29936302f;
      sa[74] = -0.18219554f;
      sa[75] = -0.13819158f;
      sa[76] = -0.0351984f;
      sa[77] = -0.011741445f;
      sa[78] = 0.02843046f;
      sa[79] = 0.38047147f;
      sa[80] = -0.30585843f;
      sa[81] = -0.0363107f;
      sa[82] = -0.0085320445f;
      sa[83] = 0.20736131f;
      sa[84] = -0.054552574f;
      sa[85] = -0.22019257f;
      sa[86] = 0.06850039f;
      sa[87] = 0.47200742f;
      sa[88] = 0.2678816f;
      sa[89] = 0.13953613f;
      sa[90] = -0.1748749f;
      sa[91] = -0.003569277f;
      sa[92] = 0.13987835f;
      sa[93] = -0.04045033f;
      sa[94] = -0.109193094f;
      sa[95] = 0.0054856767f;
      sa[96] = 0.029943872f;
      sa[97] = 0.049738724f;
      sa[98] = 0.16092831f;
      sa[99] = 0.24532354f;
      sa[100] = -0.023210615f;
      sa[101] = -0.10805766f;
      sa[102] = -0.22581618f;
      sa[103] = 0.07325425f;
      sa[104] = -0.0983763f;
      sa[105] = 0.098235704f;
      sa[106] = -0.17914309f;
      sa[107] = 0.19021457f;
      sa[108] = 0.2687985f;
      sa[109] = -0.13140143f;
      sa[110] = -0.15910594f;
      sa[111] = 0.0631696f;
      sa[112] = 0.13283254f;
      sa[113] = 0.05321942f;
      sa[114] = -0.16482149f;
      sa[115] = -0.014373423f;
      sa[116] = -0.20381917f;
      sa[117] = 0.109547f;
      sa[118] = -0.21869893f;
      sa[119] = 0.17341878f;
      sa[120] = 0.22772698f;
      sa[121] = 0.2530959f;
      sa[122] = 0.26150736f;
      sa[123] = 0.36751974f;
      sa[124] = 0.24439283f;
      sa[125] = 0.35809863f;
      sa[126] = -0.2815362f;
      sa[127] = -0.44701907f;
      sa[128] = 0.10169268f;
      sa[129] = 0.17999211f;
      sa[130] = -0.14478509f;
      sa[131] = 0.24121223f;
      sa[132] = 0.13312738f;
      sa[133] = -0.23014162f;
      sa[134] = 0.024990005f;
      sa[135] = -0.26382318f;
      sa[136] = -0.20333178f;
      sa[137] = 0.0444835f;
      sa[138] = 0.19068882f;
      sa[139] = 0.10274573f;
      sa[140] = -0.11905049f;
      sa[141] = -0.01944592f;
      sa[142] = 0.15363245f;
      sa[143] = -0.22731191f;
      sa[144] = 0.2604448f;
      sa[145] = -0.2932837f;
      sa[146] = -0.40731108f;
      sa[147] = 0.06568607f;
      sa[148] = 0.20295371f;
      sa[149] = 0.103889406f;
      sa[150] = 0.2841185f;
      sa[151] = -0.11679071f;
      sa[152] = -0.012673263f;
      sa[153] = 0.24469492f;
      sa[154] = 0.14972007f;
      sa[155] = -0.09054443f;
      sa[156] = 0.05096995f;
      sa[157] = -0.29808015f;
      sa[158] = 0.021831699f;
      sa[159] = 0.08918399f;
      sa[160] = -0.056288794f;
      sa[161] = -0.031357888f;
      sa[162] = 0.06329584f;
      sa[163] = -0.29976833f;
      sa[164] = 0.22348975f;
      sa[165] = 0.031225553f;
      sa[166] = -0.015424867f;
      sa[167] = 0.09293659f;
      sa[168] = 0.0017356854f;
      sa[169] = 0.20432633f;
      sa[170] = 0.10749436f;
      sa[171] = 0.022592159f;
      sa[172] = -0.11817296f;
      sa[173] = -0.16569965f;
      sa[174] = -0.10984095f;
      sa[175] = -0.22602214f;
      sa[176] = -0.008178922f;
      sa[177] = 0.10430318f;
      sa[178] = -0.08704609f;
      sa[179] = 0.2523906f;
      sa[180] = -0.027625322f;
      sa[181] = -0.40898156f;
      sa[182] = -0.22952633f;
      sa[183] = 0.41538766f;
      sa[184] = 0.21109626f;
      sa[185] = 0.05770416f;
      sa[186] = -0.35793698f;
      sa[187] = -0.0862642f;
      sa[188] = 0.01700182f;
      sa[189] = 0.04324738f;
      sa[190] = 0.024682658f;
      sa[191] = -0.48844337f;
      sa[192] = -0.17722929f;
      sa[193] = 0.10107441f;
      sa[194] = 0.031667355f;
      sa[195] = 0.06941618f;
      sa[196] = 0.14036298f;
      sa[197] = -0.24528971f;
      sa[198] = 0.20847152f;
      sa[199] = -0.06673823f;
      sa[200] = -0.015507886f;
      sa[201] = -0.31917012f;
      sa[202] = 0.105082326f;
      sa[203] = -0.14859831f;
      sa[204] = -0.21543013f;
      sa[205] = 0.18291612f;
      sa[206] = 0.34291986f;
      sa[207] = 0.05032277f;
      sa[208] = -0.3210385f;
      sa[209] = -0.16172364f;
      sa[210] = -0.3776434f;
      sa[211] = -0.37047708f;
      sa[212] = 0.34123272f;
      sa[213] = -0.50655305f;
      sa[214] = 0.020443402f;
      sa[215] = 0.0018797086f;
      sa[216] = 0.028102137f;
      sa[217] = 0.1373403f;
      sa[218] = -0.18342033f;
      sa[219] = 0.36278158f;
      sa[220] = -0.19671166f;
      sa[221] = 0.09155279f;
      sa[222] = 0.25354615f;
      sa[223] = 0.030357912f;
      sa[224] = 0.1269835f;
      sa[225] = 0.1612089f;
      sa[226] = -0.2400034f;
      sa[227] = -0.11429333f;
      sa[228] = 0.13881542f;
      sa[229] = 0.13637137f;
      sa[230] = 0.29651934f;
      sa[231] = -0.26983392f;
      sa[232] = -0.17773592f;
      sa[233] = 0.049276493f;
      sa[234] = 0.12213055f;
      sa[235] = -0.09821264f;
      sa[236] = -0.033063684f;
      sa[237] = -0.22286004f;
      sa[238] = -0.17450225f;
      sa[239] = 0.11518526f;
      sa[240] = 0.04959965f;
      sa[241] = -0.2474711f;
      sa[242] = -0.047799397f;
      sa[243] = -0.10237777f;
      sa[244] = -0.19793628f;
      sa[245] = -0.12431232f;
      sa[246] = -0.22361515f;
      sa[247] = -0.105324246f;
      sa[248] = 0.23643102f;
      sa[249] = -0.013463691f;
      sa[250] = -0.09723781f;
      sa[251] = -0.13250238f;
      sa[252] = -0.17123027f;
      sa[253] = -0.053645313f;
      sa[254] = -0.087300114f;
      sa[255] = 0.32602608f;
      sa[256] = -0.16375464f;
      sa[257] = 0.4197174f;
      sa[258] = -0.22342238f;
      sa[259] = -0.14036742f;
      sa[260] = -0.10218127f;
      sa[261] = -0.0022269932f;
      sa[262] = -0.11589643f;
      sa[263] = 0.3090492f;
      sa[264] = 8.814355E-5f;
      sa[265] = 0.30104554f;
      sa[266] = -0.19434163f;
      sa[267] = -0.08702673f;
      sa[268] = 0.35961735f;
      sa[269] = 0.08330666f;
      sa[270] = -0.13931936f;
      sa[271] = 0.094926655f;
      sa[272] = -0.061623216f;
      sa[273] = -0.16036311f;
      sa[274] = 0.083423175f;
      sa[275] = -0.1296586f;
      sa[276] = 0.18456702f;
      sa[277] = -0.13320763f;
      sa[278] = -0.26950336f;
      sa[279] = 0.14833412f;
      sa[280] = 0.017413575f;
      sa[281] = 0.37375575f;
      sa[282] = 0.15183647f;
      sa[283] = 0.123895496f;
      sa[284] = 0.040443912f;
      sa[285] = -0.10986293f;
      sa[286] = 0.18719131f;
      sa[287] = -0.054001413f;
      sa[288] = -0.16282935f;
      sa[289] = -0.058299966f;
      sa[290] = -0.14920907f;
      sa[291] = -0.11316058f;
      sa[292] = 0.16234544f;
      sa[293] = -0.14359836f;
      sa[294] = 0.051943466f;
      sa[295] = 0.1501097f;
      sa[296] = 0.15529083f;
      sa[297] = 0.20202671f;
      sa[298] = -0.020176949f;
      sa[299] = -0.22173734f;
      sa[300] = -0.12054275f;
      sa[301] = -0.18732794f;
      sa[302] = 0.011429433f;
      sa[303] = -0.063792884f;
      sa[304] = -0.17562066f;
      sa[305] = -0.05807973f;
      sa[306] = 0.13840191f;
      sa[307] = -0.09186323f;
      sa[308] = 0.07775165f;
      sa[309] = 0.20828074f;
      sa[310] = 0.28671214f;
      sa[311] = 0.37083754f;
      sa[312] = -0.30479273f;
      sa[313] = -0.19194202f;
      sa[314] = -0.17533085f;
      sa[315] = 0.24793577f;
      sa[316] = -0.06060474f;
      sa[317] = -0.07992712f;
      sa[318] = 0.031922746f;
      sa[319] = 0.24412595f;
      sa[320] = -0.1633181f;
      sa[321] = 0.052043468f;
      sa[322] = 0.47425616f;
      sa[323] = -0.04369768f;
      sa[324] = -0.13310169f;
      sa[325] = 0.18615773f;
      sa[326] = -0.2100722f;
      sa[327] = 0.04655148f;
      sa[328] = -0.1760382f;
      sa[329] = 0.134182f;
      sa[330] = -0.25039437f;
      sa[331] = -0.09632234f;
      sa[332] = -0.2559533f;
      sa[333] = 0.095826216f;
      sa[334] = -0.06105493f;
      sa[335] = 0.42012203f;
      sa[336] = -0.1724101f;
      sa[337] = -0.17424622f;
      sa[338] = 0.26810646f;
      sa[339] = -0.30642214f;
      sa[340] = -0.2980048f;
      sa[341] = -0.32864445f;
      sa[342] = 0.27570564f;
      sa[343] = 0.025855452f;
      sa[344] = -0.23026422f;
      sa[345] = 0.059408195f;
      sa[346] = 0.10995942f;
      sa[347] = -0.24248426f;
      sa[348] = 0.33184293f;
      sa[349] = -0.24510516f;
      sa[350] = -0.16807479f;
      sa[351] = -0.23780766f;
      sa[352] = 0.121943936f;
      sa[353] = -0.13447249f;
      sa[354] = 0.004806354f;
      sa[355] = 0.011638747f;
      sa[356] = -0.06534876f;
      sa[357] = 0.23148544f;
      sa[358] = -0.42948562f;
      sa[359] = 0.036028348f;
      sa[360] = 0.052641593f;
      sa[361] = 0.12069916f;
      sa[362] = -0.010903864f;
      sa[363] = -0.26855907f;
      sa[364] = -0.106458046f;
      sa[365] = -0.15257758f;
      sa[366] = 0.016041778f;
      sa[367] = -0.20554037f;
      sa[368] = -0.14120717f;
      sa[369] = 0.3703041f;
      sa[370] = -0.14947927f;
      sa[371] = 0.5378437f;
      sa[372] = 0.034018315f;
      sa[373] = 0.3956995f;
      sa[374] = -0.068725474f;
      sa[375] = -0.19616999f;
      sa[376] = -0.15768813f;
      sa[377] = -0.124615565f;
      sa[378] = 0.22847168f;
      sa[379] = 0.2528654f;
      sa[380] = -0.08514611f;
      sa[381] = -0.06173336f;
      sa[382] = -0.037284434f;
      sa[383] = 0.012326177f;
      sa[384] = -0.014642165f;
      sa[385] = 0.13546567f;
      sa[386] = -0.3105399f;
      sa[387] = -0.23837301f;
      sa[388] = 0.13033499f;
      sa[389] = 0.023799915f;
      sa[390] = 0.058642287f;
      sa[391] = -0.057551406f;
      sa[392] = 0.114750676f;
      sa[393] = 0.10130622f;
      sa[394] = -0.070219256f;
      sa[395] = 0.42934126f;
      sa[396] = 0.2053504f;
      sa[397] = -0.2620012f;
      sa[398] = 0.1596244f;
      sa[399] = -0.0274884f;
      sa[400] = 0.13660654f;
      sa[401] = 0.20486122f;
      sa[402] = -0.14467253f;
      sa[403] = -0.010983385f;
      sa[404] = 0.26013198f;
      sa[405] = -0.25557745f;
      sa[406] = -0.04031825f;
      sa[407] = 0.07423274f;
      sa[408] = -0.19842045f;
      sa[409] = -0.22314267f;
      sa[410] = -0.093433976f;
      sa[411] = 0.08485876f;
      sa[412] = -0.11087829f;
      sa[413] = 0.0051997546f;
      sa[414] = 0.17289586f;
      sa[415] = 0.50838506f;
      sa[416] = -0.1625898f;
      sa[417] = 0.020492703f;
      sa[418] = -7.660273E-4f;
      sa[419] = 0.2708134f;
      sa[420] = 0.27407944f;
      sa[421] = 0.22700876f;
      sa[422] = 0.24988689f;
      sa[423] = -0.19738613f;
      sa[424] = 0.08275261f;
      sa[425] = -0.10326181f;
      sa[426] = -0.30889553f;
      sa[427] = 0.08936178f;
      sa[428] = -0.049155433f;
      sa[429] = -0.4047821f;
      sa[430] = 0.18982214f;
      sa[431] = 0.13445804f;
      sa[432] = -0.10730823f;
      sa[433] = 0.32570305f;
      sa[434] = 0.3227344f;
      sa[435] = -0.15140025f;
      sa[436] = -0.14533374f;
      sa[437] = -0.106755055f;
      sa[438] = 0.07137495f;
      sa[439] = 0.15282756f;
      sa[440] = 0.14050068f;
      sa[441] = -0.21174379f;
      sa[442] = 0.110929675f;
      sa[443] = 0.22828461f;
      sa[444] = -0.1548585f;
      sa[445] = 0.17803401f;
      sa[446] = 0.24844168f;
      sa[447] = 0.24188173f;
      sa[448] = 0.35288128f;
      sa[449] = 0.3699166f;
      sa[450] = -0.32892203f;
      sa[451] = 0.22145551f;
      sa[452] = 0.2201958f;
      sa[453] = 0.03148048f;
      sa[454] = -0.12760533f;
      sa[455] = 0.079477206f;
      sa[456] = 0.037004463f;
      sa[457] = 0.120740436f;
      sa[458] = -0.44481736f;
      sa[459] = 0.43250355f;
      sa[460] = 0.32290977f;
      sa[461] = 0.3806897f;
      sa[462] = 0.1924281f;
      sa[463] = 0.3391486f;
      sa[464] = -0.37945545f;
      sa[465] = 0.4390458f;
      sa[466] = -0.06296512f;
      sa[467] = 0.13698213f;
      sa[468] = 0.03049748f;
      sa[469] = 0.29925275f;
      sa[470] = 0.20374069f;
      sa[471] = -0.15497151f;
      sa[472] = 0.02984409f;
      sa[473] = -0.167426f;
      sa[474] = -0.014356037f;
      sa[475] = 0.18036048f;
      sa[476] = 0.13133164f;
      sa[477] = -0.14636655f;
      sa[478] = 0.105929f;
      sa[479] = -0.08708256f;
      sa[480] = -0.39746666f;
      sa[481] = -0.32240924f;
      sa[482] = -0.30656853f;
      sa[483] = 0.18105331f;
      sa[484] = 0.31555086f;
      sa[485] = 0.12431098f;
      sa[486] = -0.004490803f;
      sa[487] = 0.034247223f;
      sa[488] = -0.22094123f;
      sa[489] = 0.12286452f;
      sa[490] = 0.00799993f;
      sa[491] = -0.05172365f;
      sa[492] = 0.21032247f;
      sa[493] = 0.23292854f;
      sa[494] = -0.2033685f;
      sa[495] = 0.3005563f;
      sa[496] = -0.10087911f;
      sa[497] = 0.014265237f;
      sa[498] = 0.045392416f;
      sa[499] = 0.07943278f;
      sa[500] = -0.1324435f;
      sa[501] = 0.0973075f;
      sa[502] = 0.34455404f;
      sa[503] = 0.1767774f;
      sa[504] = -0.045414396f;
      sa[505] = -0.08727578f;
      sa[506] = 0.20822889f;
      sa[507] = -0.08789636f;
      sa[508] = 0.13958535f;
      sa[509] = 0.28631186f;
      sa[510] = 0.17751196f;
      sa[511] = 0.02516418f;
      sa[512] = 0.08728668f;
      sa[513] = -0.05528208f;
      sa[514] = 0.26936173f;
      sa[515] = -0.35243943f;
      sa[516] = 0.04256522f;
      sa[517] = 0.12707949f;
      sa[518] = 0.121122375f;
      sa[519] = -0.052480236f;
      sa[520] = 0.2186991f;
      sa[521] = 0.21685983f;
      sa[522] = -0.015772725f;
      sa[523] = 0.1431448f;
      sa[524] = 0.22206074f;
      sa[525] = 0.21979916f;
      sa[526] = 0.012563721f;
      sa[527] = -0.12712269f;
      sa[528] = -0.02149871f;
      sa[529] = 0.14534543f;
      sa[530] = -0.25891465f;
      sa[531] = 0.35678297f;
      sa[532] = 0.19786952f;
      sa[533] = 0.19240525f;
      sa[534] = 0.20795587f;
      sa[535] = -0.017290315f;
      sa[536] = 1.5223425E-4f;
      sa[537] = -0.24494913f;
      sa[538] = 0.34452197f;
      sa[539] = 0.27898797f;
      sa[540] = -0.2412769f;
      sa[541] = -0.27120802f;
      sa[542] = -0.20253254f;
      sa[543] = -0.04092354f;
      sa[544] = 0.18913521f;
      sa[545] = 0.11281777f;
      sa[546] = 0.13838525f;
      sa[547] = 0.30980244f;
      sa[548] = 0.039513312f;
      sa[549] = 0.048254997f;
      sa[550] = -0.0579209f;
      sa[551] = -0.14270003f;
      sa[552] = 7.8902853E-4f;
      sa[553] = -0.11080993f;
      sa[554] = -0.13874185f;
      sa[555] = -0.054467406f;
      sa[556] = -0.1803905f;
      sa[557] = -0.25436035f;
      sa[558] = -0.17298928f;
      sa[559] = -0.1214769f;
      sa[560] = -0.32976285f;
      sa[561] = -0.107282266f;
      sa[562] = 0.20452994f;
      sa[563] = -0.04175456f;
      sa[564] = 0.11881f;
      sa[565] = 0.03997726f;
      sa[566] = 0.31483704f;
      sa[567] = 0.019738143f;
      sa[568] = -0.13188545f;
      sa[569] = 0.0014478248f;
      sa[570] = -0.05927599f;
      sa[571] = -0.03625264f;
      sa[572] = 0.0011661702f;
      sa[573] = 0.36954936f;
      sa[574] = 0.036122154f;
      sa[575] = -0.5536853f;
      sa[576] = -0.1978949f;
      sa[577] = -0.086003564f;
      sa[578] = 0.00937816f;
      sa[579] = 0.1599453f;
      sa[580] = -0.02020673f;
      sa[581] = -0.2920475f;
      sa[582] = 0.0015445743f;
      sa[583] = -0.21325593f;
      sa[584] = 0.093938306f;
      sa[585] = 0.09553669f;
      sa[586] = -0.23567764f;
      sa[587] = -0.29198867f;
      sa[588] = 0.03008525f;
      sa[589] = -0.036108315f;
      sa[590] = -0.037237365f;
      sa[591] = -0.23254599f;
      sa[592] = -0.35418585f;
      sa[593] = -0.31683436f;
      sa[594] = 0.061841063f;
      sa[595] = 0.05723588f;
      sa[596] = 0.20688634f;
      sa[597] = -0.1179974f;
      sa[598] = 0.18457274f;
      sa[599] = -0.07527988f;
      sa[600] = -0.30757204f;
      sa[601] = 0.14479707f;
      sa[602] = 0.06221058f;
      sa[603] = -0.20732817f;
      sa[604] = 0.11218453f;
      sa[605] = 0.0115991905f;
      sa[606] = -0.014875104f;
      sa[607] = -0.20453078f;
      sa[608] = 0.051085528f;
      sa[609] = -0.0653309f;
      sa[610] = 0.09755873f;
      sa[611] = -0.039914194f;
      sa[612] = -0.20145233f;
      sa[613] = 0.20744431f;
      sa[614] = 0.18548298f;
      sa[615] = -0.33611882f;
      sa[616] = 0.04688684f;
      sa[617] = -0.22148077f;
      sa[618] = -0.13645071f;
      sa[619] = -0.11799692f;
      sa[620] = -0.039990835f;
      sa[621] = -0.15633632f;
      sa[622] = -0.23921403f;
      sa[623] = -0.08853877f;
      sa[624] = -0.020785747f;
      sa[625] = 0.3994623f;
      sa[626] = 0.049646266f;
      sa[627] = 0.28852177f;
      sa[628] = -0.11675506f;
      sa[629] = 0.019303838f;
      sa[630] = -0.19837826f;
      sa[631] = 0.49518698f;
      sa[632] = 0.077573195f;
      sa[633] = -0.17011644f;
      sa[634] = -0.22192657f;
      sa[635] = 0.23861708f;
      sa[636] = -0.008026998f;
      sa[637] = 0.023512773f;
      sa[638] = -0.21587296f;
      sa[639] = -0.1374456f;
      sa[640] = -0.123544395f;
      sa[641] = -0.3001633f;
      sa[642] = 0.21874905f;
      sa[643] = -0.3362869f;
      sa[644] = -0.14918174f;
      sa[645] = -0.25443813f;
      sa[646] = 0.22177652f;
      sa[647] = -0.16590503f;
      sa[648] = -0.0076655853f;
      sa[649] = -0.056009926f;
      sa[650] = 0.09882232f;
      sa[651] = -0.096043296f;
      sa[652] = 0.02899109f;
      sa[653] = -0.1336385f;
      sa[654] = -0.1759941f;
      sa[655] = -0.20789824f;
      sa[656] = 0.14871421f;
      sa[657] = 0.21804826f;
      sa[658] = -0.21977057f;
      sa[659] = 0.008624779f;
      sa[660] = -0.17105086f;
      sa[661] = -0.035901934f;
      sa[662] = -0.21682541f;
      sa[663] = 0.20526329f;
      sa[664] = -0.23019154f;
      sa[665] = 0.3202468f;
      sa[666] = 0.039232362f;
      sa[667] = -0.3782271f;
      sa[668] = 0.25505927f;
      sa[669] = -0.17547582f;
      sa[670] = 0.080220744f;
      sa[671] = -0.050839197f;
      sa[672] = -0.19476771f;
      sa[673] = 0.19488968f;
      sa[674] = 0.24561578f;
      sa[675] = -0.46736088f;
      sa[676] = -0.058657702f;
      sa[677] = -0.1920053f;
      sa[678] = 0.22452506f;
      sa[679] = -0.021655297f;
      sa[680] = 0.09565539f;
      sa[681] = 0.14136942f;
      sa[682] = -0.14475839f;
      sa[683] = -0.15085706f;
      sa[684] = 0.04346811f;
      sa[685] = 0.109182455f;
      sa[686] = -0.20825648f;
      sa[687] = -0.17076881f;
      sa[688] = -0.23512118f;
      sa[689] = -0.21489914f;
      sa[690] = -0.025169354f;
      sa[691] = 0.117964774f;
      sa[692] = -0.16112025f;
      sa[693] = -0.21427716f;
      sa[694] = 0.26388612f;
      sa[695] = -0.31149387f;
      sa[696] = -0.118729144f;
      sa[697] = -0.17452179f;
      sa[698] = -0.22548984f;
      sa[699] = 0.26105276f;
      sa[700] = 0.1614662f;
      sa[701] = 0.12166088f;
      sa[702] = 0.0863207f;
      sa[703] = -0.021294484f;
      sa[704] = -0.24914187f;
      sa[705] = 0.008445669f;
      sa[706] = -0.11946604f;
      sa[707] = 0.040734243f;
      sa[708] = -0.05914917f;
      sa[709] = -0.2892027f;
      sa[710] = 0.21071264f;
      sa[711] = 0.24060953f;
      sa[712] = 0.040790442f;
      sa[713] = 0.17743114f;
      sa[714] = 0.20028983f;
      sa[715] = 0.08457863f;
      sa[716] = -0.0075591514f;
      sa[717] = 0.090976454f;
      sa[718] = 0.073817514f;
      sa[719] = 0.08865295f;
      sa[720] = -0.27473316f;
      sa[721] = 0.22091599f;
      sa[722] = -0.009393631f;
      sa[723] = 0.42792127f;
      sa[724] = 0.021088168f;
      sa[725] = -0.19195694f;
      sa[726] = -0.18126957f;
      sa[727] = -0.41810083f;
      sa[728] = -0.051543508f;
      sa[729] = -0.12229871f;
      sa[730] = 0.12187093f;
      sa[731] = -0.57683307f;
      sa[732] = 0.2531976f;
      sa[733] = 0.3473273f;
      sa[734] = -0.02895801f;
      sa[735] = 0.2703308f;
      sa[736] = 0.0678224f;
      sa[737] = 0.22541797f;
      sa[738] = -0.30001613f;
      sa[739] = -0.08752037f;
      sa[740] = -0.27500015f;
      sa[741] = -0.35943046f;
      sa[742] = 0.06851111f;
      sa[743] = -0.20753121f;
      sa[744] = 0.19299847f;
      sa[745] = -0.18106857f;
      sa[746] = 0.04587382f;
      sa[747] = -0.28181723f;
      sa[748] = -0.11190021f;
      sa[749] = -0.1616887f;
      sa[750] = 0.27077842f;
      sa[751] = 0.21035668f;
      sa[752] = 0.008050095f;
      sa[753] = 0.015511519f;
      sa[754] = 0.007932243f;
      sa[755] = -0.04350132f;
      sa[756] = -0.13010672f;
      sa[757] = 0.19152357f;
      sa[758] = -0.20823185f;
      sa[759] = 0.19040889f;
      sa[760] = -0.12561445f;
      sa[761] = 0.033830076f;
      sa[762] = -0.13276444f;
      sa[763] = 0.03583055f;
      sa[764] = 0.1434367f;
      sa[765] = -0.13315944f;
      sa[766] = -0.23520392f;
      sa[767] = -0.17988263f;
      sa[768] = -0.14756615f;
      sa[769] = -0.25679624f;
      sa[770] = -0.008822369f;
      sa[771] = -0.085723914f;
      sa[772] = -0.052678686f;
      sa[773] = -0.32036582f;
      sa[774] = -0.005342518f;
      sa[775] = 0.2223979f;
      sa[776] = -0.048560705f;
      sa[777] = 0.031624418f;
      sa[778] = 0.15454291f;
      sa[779] = -0.28075442f;
      sa[780] = -0.040568568f;
      sa[781] = -0.071018375f;
      sa[782] = 0.15253201f;
      sa[783] = -0.21378556f;
      sa[784] = -0.13382374f;
      sa[785] = -0.11630374f;
      sa[786] = -0.06891477f;
      sa[787] = -0.26253343f;
      sa[788] = -0.23511453f;
      sa[789] = -0.07230412f;
      sa[790] = -0.012603017f;
      sa[791] = -0.11106773f;
      sa[792] = 0.19361515f;
      sa[793] = -0.08391688f;
      sa[794] = -0.25839058f;
      sa[795] = -0.14978112f;
      sa[796] = 0.2779989f;
      sa[797] = -0.237738f;
      sa[798] = -0.24702804f;
      sa[799] = -0.017098304f;
      sa[800] = 0.12490395f;
      sa[801] = 0.07876302f;
      sa[802] = 0.20052643f;
      sa[803] = 0.20686457f;
      sa[804] = 0.15930839f;
      sa[805] = 0.19918191f;
      sa[806] = 0.19346267f;
      sa[807] = 0.2919876f;
      sa[808] = -0.03514674f;
      sa[809] = -0.15630138f;
      sa[810] = 0.0752723f;
      sa[811] = -0.05500798f;
      sa[812] = 0.15067813f;
      sa[813] = -0.23952821f;
      sa[814] = 0.09865721f;
      sa[815] = -0.025389098f;
      sa[816] = -0.24156107f;
      sa[817] = -0.18769208f;
      sa[818] = -0.012654664f;
      sa[819] = 0.12725689f;
      sa[820] = -0.29999572f;
      sa[821] = -0.19092685f;
      sa[822] = -0.30334067f;
      sa[823] = 0.14054838f;
      sa[824] = 0.08103816f;
      sa[825] = 0.5286753f;
      sa[826] = -0.26272228f;
      sa[827] = -0.26943246f;
      sa[828] = 0.047815703f;
      sa[829] = -0.16966763f;
      sa[830] = 0.16004391f;
      sa[831] = 0.2605695f;
      sa[832] = 0.1388373f;
      sa[833] = 0.121442705f;
      sa[834] = 0.22439368f;
      sa[835] = -0.0059949164f;
      sa[836] = 0.16164634f;
      sa[837] = -0.17794278f;
      sa[838] = 0.13417579f;
      sa[839] = -0.110611305f;
      sa[840] = 0.21119897f;
      sa[841] = 0.15487528f;
      sa[842] = 0.20559911f;
      sa[843] = 0.1580102f;
      sa[844] = 0.050630026f;
      sa[845] = 0.18615134f;
      sa[846] = -0.26481918f;
      sa[847] = -0.1949133f;
      sa[848] = 0.16534017f;
      sa[849] = 0.18575984f;
      sa[850] = -0.022612842f;
      sa[851] = 0.090993255f;
      sa[852] = 0.27106678f;
      sa[853] = 0.25679815f;
      sa[854] = 0.2149147f;
      sa[855] = -0.016781395f;
      sa[856] = 0.07115281f;
      sa[857] = -0.17549153f;
      sa[858] = 0.16798371f;
      sa[859] = 0.124891445f;
      sa[860] = 0.39381194f;
      sa[861] = 0.0017280013f;
      sa[862] = -0.3484048f;
      sa[863] = -0.249867f;
      sa[864] = -0.12751608f;
      sa[865] = 0.27099773f;
      sa[866] = -0.2654893f;
      sa[867] = -0.11625318f;
      sa[868] = -0.14092134f;
      sa[869] = 0.10954936f;
      sa[870] = -0.06791427f;
      sa[871] = 0.16028295f;
      sa[872] = 0.19056201f;
      sa[873] = -0.067107305f;
      sa[874] = -0.04899482f;
      sa[875] = -0.34213138f;
      sa[876] = -0.34171808f;
      sa[877] = -0.37149408f;
      sa[878] = -0.116067916f;
      sa[879] = 0.0523637f;
      sa[880] = -0.17020497f;
      sa[881] = -0.18741302f;
      sa[882] = 0.200542f;
      sa[883] = 0.16607764f;
      sa[884] = -0.119183116f;
      sa[885] = -0.060472544f;
      sa[886] = 0.115247205f;
      sa[887] = 0.010666707f;
      sa[888] = -0.2615686f;
      sa[889] = -0.054475974f;
      sa[890] = -0.28704914f;
      sa[891] = 0.55284756f;
      sa[892] = 0.12092209f;
      sa[893] = 0.25490922f;
      sa[894] = -0.04002971f;
      sa[895] = 0.18080717f;
      sa[896] = -0.2822654f;
      sa[897] = 0.17312948f;
      sa[898] = 0.24146743f;
      sa[899] = 0.33600944f;
      sa[900] = -0.25021452f;
      sa[901] = 0.23278816f;
      sa[902] = -0.15789145f;
      sa[903] = -0.19330631f;
      sa[904] = 0.15462925f;
      sa[905] = 0.21351632f;
      sa[906] = -0.23703372f;
      sa[907] = -0.24413574f;
      sa[908] = -0.22198306f;
      sa[909] = -0.003231002f;
      sa[910] = 0.040542953f;
      sa[911] = -0.27944884f;
      sa[912] = 0.0045144055f;
      sa[913] = 0.10006551f;
      sa[914] = -0.14069523f;
      sa[915] = 0.031941194f;
      sa[916] = 0.35064453f;
      sa[917] = 0.020609057f;
      sa[918] = 0.07990074f;
      sa[919] = 0.27185625f;
      sa[920] = 0.12759587f;
      sa[921] = -0.10620756f;
      sa[922] = -0.1338365f;
      sa[923] = -0.06732318f;
      sa[924] = -0.007178742f;
      sa[925] = -0.18208988f;
      sa[926] = 0.048148602f;
      sa[927] = 0.016395563f;
      sa[928] = 0.23490937f;
      sa[929] = 0.10792143f;
      sa[930] = 0.16089337f;
      sa[931] = -0.088149495f;
      sa[932] = 0.201816f;
      sa[933] = -0.11562582f;
      sa[934] = 0.23551139f;
      sa[935] = -0.1463502f;
      sa[936] = 0.16586106f;
      sa[937] = 0.08767507f;
      sa[938] = -0.17777415f;
      sa[939] = 0.13992366f;
      sa[940] = -0.08216776f;
      sa[941] = -0.35046074f;
      sa[942] = -0.26903576f;
      sa[943] = -0.2896161f;
      sa[944] = -0.1350254f;
      sa[945] = 0.00558857f;
      sa[946] = 0.029991228f;
      sa[947] = 0.07353914f;
      sa[948] = 0.07702293f;
      sa[949] = -0.22304894f;
      sa[950] = 0.06649326f;
      sa[951] = -0.21448304f;
      sa[952] = -0.35563207f;
      sa[953] = -0.28451228f;
      sa[954] = -0.13267474f;
      sa[955] = -0.04443808f;
      sa[956] = 0.0014793242f;
      sa[957] = 0.03833511f;
      sa[958] = 0.09750086f;
      sa[959] = -0.23363952f;
      sa[960] = 0.26059768f;
      sa[961] = -0.15860182f;
      sa[962] = 0.03159113f;
      sa[963] = -0.109414026f;
      sa[964] = -0.1834136f;
      sa[965] = 0.23169087f;
      sa[966] = -0.1263317f;
      sa[967] = -0.31296194f;
      sa[968] = 0.112517156f;
      sa[969] = -0.16006242f;
      sa[970] = 0.4090195f;
      sa[971] = 0.074513026f;
      sa[972] = -0.3034928f;
      sa[973] = -0.2613397f;
      sa[974] = -0.21907967f;
      sa[975] = -0.21851756f;
      sa[976] = -0.1474139f;
      sa[977] = 0.06287463f;
      sa[978] = -0.10428271f;
      sa[979] = 0.09858832f;
      sa[980] = 0.10775076f;
      sa[981] = -0.2079259f;
      sa[982] = 0.15819623f;
      sa[983] = 0.060792115f;
      sa[984] = -0.20988682f;
      sa[985] = 0.18536057f;
      sa[986] = -0.1613182f;
      sa[987] = 0.12934077f;
      sa[988] = 0.20020907f;
      sa[989] = 0.23567316f;
      sa[990] = 0.278843f;
      sa[991] = -0.082095645f;
      sa[992] = -0.22913432f;
      sa[993] = -0.13002358f;
      sa[994] = -0.19300258f;
      sa[995] = -0.31496832f;
      sa[996] = 0.31235972f;
      sa[997] = 0.20774743f;
      sa[998] = 0.12211328f;
      sa[999] = -0.07172538f;
      sa[1000] = 0.03237124f;
      sa[1001] = 0.18026893f;
      sa[1002] = 0.28023434f;
      sa[1003] = -0.095648944f;
      sa[1004] = 0.2622752f;
      sa[1005] = -0.15411381f;
      sa[1006] = -0.30277985f;
      sa[1007] = -0.033089936f;
      sa[1008] = 0.27146035f;
      sa[1009] = 0.1580578f;
      sa[1010] = -1.384123E-4f;
      sa[1011] = 0.21516182f;
      sa[1012] = -0.015203762f;
      sa[1013] = 0.212894f;
      sa[1014] = 0.29925567f;
      sa[1015] = -0.14127518f;
      sa[1016] = 0.25776547f;
      sa[1017] = 0.14086188f;
      sa[1018] = 0.0013517288f;
      sa[1019] = 0.17646946f;
      sa[1020] = -0.24714948f;
      sa[1021] = 0.09105009f;
      sa[1022] = 0.19368541f;
      sa[1023] = 0.22076717f;
      sa[1024] = 0.03496072f;
      sa[1025] = 0.26748314f;
      sa[1026] = 0.044856217f;
      sa[1027] = 0.055616677f;
      sa[1028] = 0.28321314f;
      sa[1029] = -0.0044825096f;
      sa[1030] = -0.17416741f;
      sa[1031] = 0.0045817094f;
      sa[1032] = -0.26985702f;
      sa[1033] = 0.12030132f;
      sa[1034] = -0.13146938f;
      sa[1035] = 0.22380123f;
      sa[1036] = 0.30688074f;
      sa[1037] = 0.09482152f;
      sa[1038] = -0.119530156f;
      sa[1039] = 0.40884316f;
      sa[1040] = -0.061344057f;
      sa[1041] = 0.284045f;
      sa[1042] = -0.20024501f;
      sa[1043] = -0.107200705f;
      sa[1044] = 0.15173271f;
      sa[1045] = 0.51593596f;
      sa[1046] = 0.1326547f;
      sa[1047] = -0.61197436f;
      sa[1048] = 0.13931523f;
      sa[1049] = 0.015512065f;
      sa[1050] = 0.06958973f;
      sa[1051] = -0.17154315f;
      sa[1052] = 0.16095698f;
      sa[1053] = 0.3922943f;
      sa[1054] = 0.35836715f;
      sa[1055] = 0.30148786f;
      sa[1056] = 0.37389737f;
      sa[1057] = -0.007095891f;
      sa[1058] = 0.31585115f;
      sa[1059] = 0.018965965f;
      sa[1060] = -0.042618275f;
      sa[1061] = 0.2988961f;
      sa[1062] = -0.042304836f;
      sa[1063] = 0.3263591f;
      sa[1064] = 0.12470789f;
      sa[1065] = -0.054718472f;
      sa[1066] = 0.13082258f;
      sa[1067] = -0.3310353f;
      sa[1068] = -0.06250103f;
      sa[1069] = 0.29818505f;
      sa[1070] = 0.016931226f;
      sa[1071] = 0.051284518f;
      sa[1072] = -0.12960832f;
      sa[1073] = 0.16699843f;
      sa[1074] = 0.24936351f;
      sa[1075] = -0.089785345f;
      sa[1076] = -0.18007329f;
      sa[1077] = 0.1345778f;
      sa[1078] = -0.1473161f;
      sa[1079] = 0.052133f;
      sa[1080] = 0.18474436f;
      sa[1081] = 0.0953197f;
      sa[1082] = -0.40941024f;
      sa[1083] = 0.24305724f;
      sa[1084] = 0.14958698f;
      sa[1085] = -0.29213727f;
      sa[1086] = -0.30462706f;
      sa[1087] = -0.40599674f;
      sa[1088] = -0.16015506f;
      sa[1089] = -0.08951934f;
      sa[1090] = -0.30521607f;
      sa[1091] = -0.21441829f;
      sa[1092] = -0.24304114f;
      sa[1093] = -0.30184716f;
      sa[1094] = 0.0218251f;
      sa[1095] = -0.3587025f;
      sa[1096] = 0.018340841f;
      sa[1097] = -0.28424788f;
      sa[1098] = 0.07114079f;
      sa[1099] = -0.045063872f;
      sa[1100] = -0.15747143f;
      sa[1101] = 0.042531304f;
      sa[1102] = -0.13832253f;
      sa[1103] = 0.07405675f;
      sa[1104] = -0.2737915f;
      sa[1105] = -0.16172692f;
      sa[1106] = 0.0010827996f;
      sa[1107] = -0.057634823f;
      sa[1108] = -0.25437424f;
      sa[1109] = 0.14290738f;
      sa[1110] = 0.0914298f;
      sa[1111] = -0.36682138f;
      sa[1112] = 0.26491797f;
      sa[1113] = -0.014178553f;
      sa[1114] = 0.11066096f;
      sa[1115] = 0.12851724f;
      sa[1116] = -0.017031206f;
      sa[1117] = 0.055448726f;
      sa[1118] = -0.010419035f;
      sa[1119] = -0.06469425f;
      sa[1120] = 0.1526853f;
      sa[1121] = 0.20334986f;
      sa[1122] = 0.24687018f;
      sa[1123] = 0.16466884f;
      sa[1124] = 0.06878341f;
      sa[1125] = 0.0021688885f;
      sa[1126] = 0.26585084f;
      sa[1127] = 0.25943545f;
      sa[1128] = 0.09696262f;
      sa[1129] = 0.030832129f;
      sa[1130] = 0.2696619f;
      sa[1131] = 0.33592543f;
      sa[1132] = 0.07276615f;
      sa[1133] = 0.041792337f;
      sa[1134] = 0.1145947f;
      sa[1135] = -0.23194689f;
      sa[1136] = -0.02450518f;
      sa[1137] = 0.12332964f;
      sa[1138] = -0.13487275f;
      sa[1139] = -0.051378734f;
      sa[1140] = 0.39332676f;
      sa[1141] = -0.16126326f;
      sa[1142] = 0.0045589707f;
      sa[1143] = -0.107550815f;
      sa[1144] = -0.18636866f;
      sa[1145] = 0.20919214f;
      sa[1146] = 0.33228722f;
      sa[1147] = -3.368284E-4f;
      sa[1148] = -0.041173648f;
      sa[1149] = -0.023119215f;
      sa[1150] = -0.30689532f;
      sa[1151] = -0.37483367f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_04_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_04_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.3416438f;
      sa[1] = -0.09444691f;
      sa[2] = -0.5989925f;
      sa[3] = -1.0312856f;
      sa[4] = 0.0358019f;
      sa[5] = 0.42631117f;
      sa[6] = 1.2872543f;
      sa[7] = -0.6747777f;
      sa[8] = -1.0059125f;
      sa[9] = 0.70779616f;
      sa[10] = -0.22924034f;
      sa[11] = 0.50510013f;
      sa[12] = -0.07903727f;
      sa[13] = -0.032397155f;
      sa[14] = -1.3231224f;
      sa[15] = 1.2178497f;
      sa[16] = 1.6205571f;
      sa[17] = -0.33827132f;
      sa[18] = 0.12120084f;
      sa[19] = -0.42748806f;
      sa[20] = 1.2333097f;
      sa[21] = 0.35071367f;
      sa[22] = -0.91509813f;
      sa[23] = 0.8324457f;
      sa[24] = -1.4394706f;
      sa[25] = 0.5154655f;
      sa[26] = -0.21105112f;
      sa[27] = 1.5234436f;
      sa[28] = -1.4152825f;
      sa[29] = -0.7017393f;
      sa[30] = 0.42835683f;
      sa[31] = -0.600265f;
      sa[32] = -1.0891846f;
      sa[33] = -1.5564066f;
      sa[34] = 0.0069745397f;
      sa[35] = 1.4942774f;
      sa[36] = -0.19962606f;
      sa[37] = -0.13552535f;
      sa[38] = 0.17167088f;
      sa[39] = 0.7961201f;
      sa[40] = -0.67364573f;
      sa[41] = -1.3796966f;
      sa[42] = -1.1286459f;
      sa[43] = -1.5687517f;
      sa[44] = 0.22657521f;
      sa[45] = -1.1500074f;
      sa[46] = 1.1116096f;
      sa[47] = 1.3476442f;
      sa[48] = -1.2879496f;
      sa[49] = -1.0486927f;
      sa[50] = 0.4827185f;
      sa[51] = -0.29514018f;
      sa[52] = 0.8728978f;
      sa[53] = 0.67464167f;
      sa[54] = -0.19819103f;
      sa[55] = 1.1346835f;
      sa[56] = -0.90423787f;
      sa[57] = -1.028358f;
      sa[58] = 0.1334479f;
      sa[59] = -0.24141394f;
      sa[60] = 1.4153647f;
      sa[61] = -0.5644663f;
      sa[62] = -0.27148247f;
      sa[63] = 0.6533191f;
      sa[64] = 1.3029156f;
      sa[65] = -0.59449494f;
      sa[66] = 0.7528545f;
      sa[67] = 1.5359255f;
      sa[68] = 0.72996145f;
      sa[69] = -1.2480292f;
      sa[70] = -1.4218459f;
      sa[71] = -0.4542123f;
      sa[72] = -1.3862909f;
      sa[73] = 1.3963491f;
      sa[74] = 1.5647447f;
      sa[75] = -0.14232172f;
      sa[76] = 0.99997336f;
      sa[77] = 0.43175635f;
      sa[78] = -1.4235709f;
      sa[79] = 0.9071475f;
      sa[80] = -0.96164536f;
      sa[81] = 0.11842572f;
      sa[82] = 0.8976916f;
      sa[83] = -0.57165927f;
      sa[84] = -1.6844008f;
      sa[85] = -1.2636284f;
      sa[86] = 0.37590146f;
      sa[87] = 1.1375121f;
      sa[88] = -1.6061537f;
      sa[89] = -0.70314157f;
      sa[90] = -1.073104f;
      sa[91] = 1.511667f;
      sa[92] = -0.21319915f;
      sa[93] = 0.54546946f;
      sa[94] = -1.5657071f;
      sa[95] = -0.13814008f;
      sa[96] = -0.93063724f;
      sa[97] = 0.26836053f;
      sa[98] = -0.052201442f;
      sa[99] = 0.3636086f;
      sa[100] = -1.2764397f;
      sa[101] = -0.49790716f;
      sa[102] = 1.1441134f;
      sa[103] = 0.23256943f;
      sa[104] = -0.35917938f;
      sa[105] = -0.70582175f;
      sa[106] = 1.51974f;
      sa[107] = 1.2551295f;
      sa[108] = 0.9837933f;
      sa[109] = 0.32021913f;
      sa[110] = 0.84140635f;
      sa[111] = -0.89531606f;
      sa[112] = -1.214183f;
      sa[113] = 0.42664075f;
      sa[114] = 0.037704207f;
      sa[115] = -0.4155737f;
      sa[116] = 1.2987305f;
      sa[117] = 0.024608022f;
      sa[118] = -1.4791131f;
      sa[119] = -0.7174107f;
      sa[120] = -0.43705034f;
      sa[121] = 1.0716825f;
      sa[122] = -0.056483988f;
      sa[123] = 0.3903739f;
      sa[124] = -0.7363008f;
      sa[125] = 0.8390922f;
      sa[126] = -1.1082976f;
      sa[127] = 0.3922009f;
      sa[128] = -0.9516339f;
      sa[129] = 0.8600689f;
      sa[130] = -0.46929282f;
      sa[131] = 0.77123564f;
      sa[132] = 0.5586658f;
      sa[133] = 0.85189825f;
      sa[134] = 0.6461863f;
      sa[135] = -1.0724101f;
      sa[136] = 0.6126035f;
      sa[137] = -0.6556739f;
      sa[138] = 0.052323f;
      sa[139] = 1.3326056f;
      sa[140] = -0.92899495f;
      sa[141] = -0.10880288f;
      sa[142] = 0.38191122f;
      sa[143] = -0.8591399f;
      sa[144] = 1.065127f;
      sa[145] = -0.75551045f;
      sa[146] = 0.10449528f;
      sa[147] = -0.27022585f;
      sa[148] = -0.99779576f;
      sa[149] = 1.1283402f;
      sa[150] = -1.1773776f;
      sa[151] = -1.6308656f;
      sa[152] = 1.5816188f;
      sa[153] = -0.6029249f;
      sa[154] = 1.6531472f;
      sa[155] = -1.5036837f;
      sa[156] = -1.5544506f;
      sa[157] = -1.2306393f;
      sa[158] = 0.0026111724f;
      sa[159] = -0.7891683f;
      sa[160] = 1.3433661f;
      sa[161] = -1.2985629f;
      sa[162] = 1.5577053f;
      sa[163] = -0.76493543f;
      sa[164] = 0.7185057f;
      sa[165] = -0.5824106f;
      sa[166] = 1.2459165f;
      sa[167] = -1.3473147f;
      sa[168] = 1.1319238f;
      sa[169] = -1.5183113f;
      sa[170] = 1.0126376f;
      sa[171] = 0.83029264f;
      sa[172] = 1.585881f;
      sa[173] = 1.6147506f;
      sa[174] = -0.08595547f;
      sa[175] = 0.08922835f;
      sa[176] = -0.80094105f;
      sa[177] = 0.14022228f;
      sa[178] = -1.118499f;
      sa[179] = -0.14463314f;
      sa[180] = -1.4554883f;
      sa[181] = -0.9543125f;
      sa[182] = 0.28459266f;
      sa[183] = -1.0564933f;
      sa[184] = 1.6696297f;
      sa[185] = 1.2706281f;
      sa[186] = -0.51424885f;
      sa[187] = -1.0780584f;
      sa[188] = -0.65844697f;
      sa[189] = -0.68691933f;
      sa[190] = -1.371343f;
      sa[191] = -1.2428955f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_04 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_04_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_04_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_04_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_04_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_04_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


