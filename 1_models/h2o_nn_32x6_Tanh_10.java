/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:48:50.021+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_10 > h2o_nn_32x6_Tanh_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_10", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-5007840084817761408L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.06056835893298191;
      sa[1] = -0.07898584744068894;
      sa[2] = 0.18289463847423373;
      sa[3] = -0.1274737461999003;
      sa[4] = 0.014893064597631015;
      sa[5] = -0.025393709312624902;
      sa[6] = 0.259795692864034;
      sa[7] = -0.010281799733763645;
      sa[8] = 0.016897968693369254;
      sa[9] = -0.20819935297522538;
      sa[10] = 0.09703950359966015;
      sa[11] = 0.0866200369966161;
      sa[12] = 0.19062602710092008;
      sa[13] = 0.04765598344966517;
      sa[14] = 0.10066010053643726;
      sa[15] = -0.06879527518584773;
      sa[16] = -0.08652522231020462;
      sa[17] = 0.24467167596028574;
      sa[18] = -0.27167127096548316;
      sa[19] = 0.056601120803711276;
      sa[20] = 0.09791694609938771;
      sa[21] = -0.033958012565543025;
      sa[22] = -0.027602300302619263;
      sa[23] = -0.021894047828917153;
      sa[24] = -0.03015908056889771;
      sa[25] = 0.23587046492059474;
      sa[26] = -0.08241653814291787;
      sa[27] = 0.1303275015549584;
      sa[28] = -0.07991755569688874;
      sa[29] = 0.004850937293667861;
      sa[30] = 0.012644859281858493;
      sa[31] = 0.03639534665538584;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.005152636604207689;
      sa[1] = -0.17706027360816542;
      sa[2] = -0.2620306110032921;
      sa[3] = -0.037954141670476324;
      sa[4] = -0.10343746324106186;
      sa[5] = 0.07301867323184752;
    }
  }
}
class h2o_nn_32x6_Tanh_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.07943905f;
      sa[1] = 0.036197856f;
      sa[2] = 0.055396866f;
      sa[3] = -0.012287365f;
      sa[4] = -0.16316295f;
      sa[5] = -0.38046682f;
      sa[6] = -0.0769543f;
      sa[7] = 0.29852697f;
      sa[8] = 0.071899846f;
      sa[9] = -0.16264051f;
      sa[10] = -0.1483937f;
      sa[11] = -0.16231383f;
      sa[12] = 0.052625567f;
      sa[13] = -0.4919463f;
      sa[14] = -0.18368329f;
      sa[15] = -0.20352569f;
      sa[16] = 0.027197113f;
      sa[17] = 0.060863823f;
      sa[18] = -0.0010853681f;
      sa[19] = 0.5730394f;
      sa[20] = 0.34240192f;
      sa[21] = -0.13110277f;
      sa[22] = 0.35480615f;
      sa[23] = -0.14170203f;
      sa[24] = 0.08123374f;
      sa[25] = 0.15487792f;
      sa[26] = -0.16593455f;
      sa[27] = 0.4984771f;
      sa[28] = 0.22161467f;
      sa[29] = -0.22897902f;
      sa[30] = -0.32541993f;
      sa[31] = 0.045180913f;
      sa[32] = 0.12548468f;
      sa[33] = -0.06903446f;
      sa[34] = 0.03738917f;
      sa[35] = -0.019764422f;
      sa[36] = 0.07139279f;
      sa[37] = 0.11876125f;
      sa[38] = -0.101865634f;
      sa[39] = 0.44264153f;
      sa[40] = 0.10935336f;
      sa[41] = 0.0072397892f;
      sa[42] = -0.11665072f;
      sa[43] = 0.046319373f;
      sa[44] = 0.2504509f;
      sa[45] = -0.32620165f;
      sa[46] = -0.015035213f;
      sa[47] = 0.058509372f;
      sa[48] = 0.22360699f;
      sa[49] = 0.33716065f;
      sa[50] = 0.22342409f;
      sa[51] = -0.3182958f;
      sa[52] = -0.15659648f;
      sa[53] = 0.10723207f;
      sa[54] = 0.19637212f;
      sa[55] = 0.14505847f;
      sa[56] = -0.18845366f;
      sa[57] = -0.26016408f;
      sa[58] = 0.2249746f;
      sa[59] = -0.3092601f;
      sa[60] = -0.19945121f;
      sa[61] = 0.10916395f;
      sa[62] = 0.1604336f;
      sa[63] = -0.3651015f;
      sa[64] = 0.13989691f;
      sa[65] = 0.19071639f;
      sa[66] = 0.07155652f;
      sa[67] = 0.05646328f;
      sa[68] = 0.11354614f;
      sa[69] = -0.22627117f;
      sa[70] = -0.076206885f;
      sa[71] = 0.3085381f;
      sa[72] = -0.19562759f;
      sa[73] = 0.2422941f;
      sa[74] = -0.08388606f;
      sa[75] = -0.0138587095f;
      sa[76] = -0.2112058f;
      sa[77] = -0.076065995f;
      sa[78] = -0.013980653f;
      sa[79] = 0.28220296f;
      sa[80] = -0.30268037f;
      sa[81] = 0.09561154f;
      sa[82] = 0.05657981f;
      sa[83] = 0.17124715f;
      sa[84] = -0.065472744f;
      sa[85] = -0.20251244f;
      sa[86] = 0.11505309f;
      sa[87] = 0.3468933f;
      sa[88] = 0.23822051f;
      sa[89] = 0.13265948f;
      sa[90] = -0.058177967f;
      sa[91] = -0.13396856f;
      sa[92] = 0.01513032f;
      sa[93] = -0.27644095f;
      sa[94] = -0.14471568f;
      sa[95] = -0.06813834f;
      sa[96] = 0.14389992f;
      sa[97] = 0.10082145f;
      sa[98] = 0.1157579f;
      sa[99] = 0.08924954f;
      sa[100] = -0.1794479f;
      sa[101] = -0.3614783f;
      sa[102] = -0.3278589f;
      sa[103] = -0.09709181f;
      sa[104] = -0.11755645f;
      sa[105] = 0.004727677f;
      sa[106] = -0.27885857f;
      sa[107] = 0.1913809f;
      sa[108] = 0.18916933f;
      sa[109] = -0.103239805f;
      sa[110] = -0.2451677f;
      sa[111] = 0.013955914f;
      sa[112] = 0.08316708f;
      sa[113] = 0.060479566f;
      sa[114] = -0.18950142f;
      sa[115] = -0.1460472f;
      sa[116] = -0.19743192f;
      sa[117] = 0.006816742f;
      sa[118] = -0.27322277f;
      sa[119] = -0.069540545f;
      sa[120] = 0.12586781f;
      sa[121] = 0.26297918f;
      sa[122] = 0.21346869f;
      sa[123] = 0.422361f;
      sa[124] = 0.26686904f;
      sa[125] = 0.28881517f;
      sa[126] = -0.20619889f;
      sa[127] = -0.5859933f;
      sa[128] = -0.026002673f;
      sa[129] = 0.05912682f;
      sa[130] = -0.28317347f;
      sa[131] = 0.23722485f;
      sa[132] = 0.14706673f;
      sa[133] = -0.2753658f;
      sa[134] = 0.14277302f;
      sa[135] = -0.27310434f;
      sa[136] = -0.30353236f;
      sa[137] = -0.07944549f;
      sa[138] = 0.10124535f;
      sa[139] = -0.030209398f;
      sa[140] = -0.102592744f;
      sa[141] = -0.114007354f;
      sa[142] = 0.07659389f;
      sa[143] = -0.2054659f;
      sa[144] = 0.33458176f;
      sa[145] = -0.23665053f;
      sa[146] = -0.35331237f;
      sa[147] = 0.102550685f;
      sa[148] = 0.14463975f;
      sa[149] = 0.10257044f;
      sa[150] = 0.26677585f;
      sa[151] = -0.070606194f;
      sa[152] = -0.06468279f;
      sa[153] = 0.29689395f;
      sa[154] = 0.3213326f;
      sa[155] = -0.038687304f;
      sa[156] = 0.101050854f;
      sa[157] = -0.27399775f;
      sa[158] = 0.077130936f;
      sa[159] = 0.22027051f;
      sa[160] = -0.12347669f;
      sa[161] = 0.16983742f;
      sa[162] = 0.2536564f;
      sa[163] = -0.33887002f;
      sa[164] = 0.24306595f;
      sa[165] = 0.007709262f;
      sa[166] = -0.025848562f;
      sa[167] = 0.08286436f;
      sa[168] = 0.039417334f;
      sa[169] = 0.2505765f;
      sa[170] = 0.15333287f;
      sa[171] = -0.16749656f;
      sa[172] = -0.1363677f;
      sa[173] = -0.17947517f;
      sa[174] = -0.12866494f;
      sa[175] = -0.20543778f;
      sa[176] = -0.08596406f;
      sa[177] = 0.06283998f;
      sa[178] = -0.16688997f;
      sa[179] = 0.19888873f;
      sa[180] = 0.057861503f;
      sa[181] = -0.3129333f;
      sa[182] = -0.20887624f;
      sa[183] = 0.2473915f;
      sa[184] = 0.315197f;
      sa[185] = 0.18342885f;
      sa[186] = -0.29212067f;
      sa[187] = 0.10620105f;
      sa[188] = -0.04697717f;
      sa[189] = 0.117170185f;
      sa[190] = 0.15469772f;
      sa[191] = -0.24065234f;
      sa[192] = -0.096246295f;
      sa[193] = 0.21901852f;
      sa[194] = 0.110671006f;
      sa[195] = 0.29450798f;
      sa[196] = 0.13942279f;
      sa[197] = -0.0615291f;
      sa[198] = 0.12323474f;
      sa[199] = -0.025966715f;
      sa[200] = 0.08842085f;
      sa[201] = -0.19246678f;
      sa[202] = 0.13552567f;
      sa[203] = 0.06498478f;
      sa[204] = -0.2046991f;
      sa[205] = 0.25456113f;
      sa[206] = 0.3064885f;
      sa[207] = -0.12040798f;
      sa[208] = -0.18091635f;
      sa[209] = 0.050563302f;
      sa[210] = -0.24000049f;
      sa[211] = -0.19611543f;
      sa[212] = 0.26497558f;
      sa[213] = -0.4979876f;
      sa[214] = 0.09378615f;
      sa[215] = 0.061972097f;
      sa[216] = 0.07889319f;
      sa[217] = 0.15683495f;
      sa[218] = -0.02740375f;
      sa[219] = 0.6389142f;
      sa[220] = -0.1270189f;
      sa[221] = 0.16728528f;
      sa[222] = 0.3139612f;
      sa[223] = 0.17779616f;
      sa[224] = 0.15421054f;
      sa[225] = 0.21291615f;
      sa[226] = -0.16782558f;
      sa[227] = -0.12376814f;
      sa[228] = 0.20124847f;
      sa[229] = 0.19166347f;
      sa[230] = 0.3360843f;
      sa[231] = -0.25711977f;
      sa[232] = -0.17487955f;
      sa[233] = 0.115802765f;
      sa[234] = 0.038692944f;
      sa[235] = -0.023446117f;
      sa[236] = 0.06586432f;
      sa[237] = -0.120754376f;
      sa[238] = -0.096086636f;
      sa[239] = 0.17535359f;
      sa[240] = 0.119943276f;
      sa[241] = -0.18555304f;
      sa[242] = -0.07342048f;
      sa[243] = -0.123406f;
      sa[244] = -0.1115586f;
      sa[245] = -0.037435915f;
      sa[246] = -0.13376606f;
      sa[247] = -0.05964865f;
      sa[248] = 0.28568158f;
      sa[249] = 0.038187873f;
      sa[250] = 0.022223866f;
      sa[251] = -0.09759222f;
      sa[252] = -0.28515443f;
      sa[253] = -0.13102384f;
      sa[254] = -0.19538085f;
      sa[255] = 0.10550042f;
      sa[256] = -0.17753398f;
      sa[257] = 0.32230872f;
      sa[258] = -0.23622032f;
      sa[259] = -0.29452607f;
      sa[260] = -0.031912956f;
      sa[261] = -0.10885981f;
      sa[262] = -0.22174597f;
      sa[263] = 0.212535f;
      sa[264] = -0.10327329f;
      sa[265] = 0.14869651f;
      sa[266] = -0.25507542f;
      sa[267] = -0.21370412f;
      sa[268] = 0.298738f;
      sa[269] = -0.080776565f;
      sa[270] = -0.16213222f;
      sa[271] = 0.1948328f;
      sa[272] = -0.08723276f;
      sa[273] = -0.15273768f;
      sa[274] = 0.08694731f;
      sa[275] = -0.03894566f;
      sa[276] = 0.12062228f;
      sa[277] = -0.25134847f;
      sa[278] = -0.19564536f;
      sa[279] = 0.35536548f;
      sa[280] = -0.08568391f;
      sa[281] = 0.3037841f;
      sa[282] = 0.031266432f;
      sa[283] = 0.042994242f;
      sa[284] = 0.16514236f;
      sa[285] = 0.016575325f;
      sa[286] = 0.16786666f;
      sa[287] = -0.041878145f;
      sa[288] = -0.21254998f;
      sa[289] = -0.08716277f;
      sa[290] = -0.021686727f;
      sa[291] = 0.20803528f;
      sa[292] = 0.13634008f;
      sa[293] = -0.0137710925f;
      sa[294] = 0.15033326f;
      sa[295] = 0.30826402f;
      sa[296] = 0.09127345f;
      sa[297] = 0.23261109f;
      sa[298] = 0.087520525f;
      sa[299] = -0.101856574f;
      sa[300] = -0.054663226f;
      sa[301] = -0.028622722f;
      sa[302] = 0.16909075f;
      sa[303] = 0.09382741f;
      sa[304] = -0.15935695f;
      sa[305] = 0.05350342f;
      sa[306] = 0.12714566f;
      sa[307] = -0.32806954f;
      sa[308] = -0.02718602f;
      sa[309] = 0.07006527f;
      sa[310] = 0.27230394f;
      sa[311] = 0.39464104f;
      sa[312] = -0.08687927f;
      sa[313] = -0.098241374f;
      sa[314] = -0.15131566f;
      sa[315] = -0.038670707f;
      sa[316] = -0.1649879f;
      sa[317] = -0.21955214f;
      sa[318] = 0.03579704f;
      sa[319] = 0.2265013f;
      sa[320] = -0.076077916f;
      sa[321] = -0.022205051f;
      sa[322] = 0.33063096f;
      sa[323] = -0.12006456f;
      sa[324] = -0.04154726f;
      sa[325] = 0.16061093f;
      sa[326] = -0.343047f;
      sa[327] = -0.010850191f;
      sa[328] = -0.106672876f;
      sa[329] = 0.08722925f;
      sa[330] = -0.29291013f;
      sa[331] = -0.19685373f;
      sa[332] = -0.24755111f;
      sa[333] = 0.017518394f;
      sa[334] = -0.10085119f;
      sa[335] = 0.29653084f;
      sa[336] = -0.22248904f;
      sa[337] = -0.25304627f;
      sa[338] = 0.1983907f;
      sa[339] = -0.40931588f;
      sa[340] = -0.36686978f;
      sa[341] = -0.39666837f;
      sa[342] = 0.27312255f;
      sa[343] = 0.22815259f;
      sa[344] = -0.17200412f;
      sa[345] = 0.19733055f;
      sa[346] = 0.12281292f;
      sa[347] = -0.39626515f;
      sa[348] = 0.14461122f;
      sa[349] = -0.29773244f;
      sa[350] = -0.18493673f;
      sa[351] = -0.01861048f;
      sa[352] = 0.16594185f;
      sa[353] = -0.028972272f;
      sa[354] = -0.02414326f;
      sa[355] = -0.0883269f;
      sa[356] = -0.14438304f;
      sa[357] = 0.23865943f;
      sa[358] = -0.4111844f;
      sa[359] = 0.07370867f;
      sa[360] = -0.07005945f;
      sa[361] = -0.09027869f;
      sa[362] = 0.032017853f;
      sa[363] = 0.21912913f;
      sa[364] = -0.03619607f;
      sa[365] = -0.022390367f;
      sa[366] = 0.13603534f;
      sa[367] = -0.113175705f;
      sa[368] = -0.23086931f;
      sa[369] = 0.32482624f;
      sa[370] = -0.16769579f;
      sa[371] = 0.501966f;
      sa[372] = -0.004771198f;
      sa[373] = 0.47809914f;
      sa[374] = -0.081422746f;
      sa[375] = -0.31263855f;
      sa[376] = -0.20243984f;
      sa[377] = -0.2063063f;
      sa[378] = 0.20747179f;
      sa[379] = 0.15054531f;
      sa[380] = -0.20329407f;
      sa[381] = -0.138846f;
      sa[382] = -0.02050929f;
      sa[383] = -0.23524159f;
      sa[384] = 5.5368326E-4f;
      sa[385] = 0.077510014f;
      sa[386] = -0.29365107f;
      sa[387] = -0.27323878f;
      sa[388] = 3.4321667E-4f;
      sa[389] = -0.1322274f;
      sa[390] = 0.071442135f;
      sa[391] = -0.19131005f;
      sa[392] = 0.16017723f;
      sa[393] = 0.16465294f;
      sa[394] = -0.12419141f;
      sa[395] = 0.34855306f;
      sa[396] = 0.19096717f;
      sa[397] = -0.3576212f;
      sa[398] = 0.18533911f;
      sa[399] = 0.43813574f;
      sa[400] = 0.32912558f;
      sa[401] = 0.46481895f;
      sa[402] = 0.0040830374f;
      sa[403] = 0.27659288f;
      sa[404] = 0.16121824f;
      sa[405] = -0.2541908f;
      sa[406] = -0.009225349f;
      sa[407] = 0.23278712f;
      sa[408] = -0.18916182f;
      sa[409] = -0.1104888f;
      sa[410] = -0.042538874f;
      sa[411] = 0.1301212f;
      sa[412] = -0.13803214f;
      sa[413] = 0.030859865f;
      sa[414] = 0.11273594f;
      sa[415] = 0.36764205f;
      sa[416] = -0.19666782f;
      sa[417] = 0.06102708f;
      sa[418] = 0.03971493f;
      sa[419] = 0.20324473f;
      sa[420] = 0.27596015f;
      sa[421] = 0.31108442f;
      sa[422] = 0.21896078f;
      sa[423] = -0.35205433f;
      sa[424] = 0.06786017f;
      sa[425] = -0.06270423f;
      sa[426] = -0.2112552f;
      sa[427] = 0.06883273f;
      sa[428] = 0.06273015f;
      sa[429] = -0.41919822f;
      sa[430] = 0.1939549f;
      sa[431] = -0.026021486f;
      sa[432] = -0.13402767f;
      sa[433] = 0.15295601f;
      sa[434] = 0.39961123f;
      sa[435] = -0.054859925f;
      sa[436] = -0.22579062f;
      sa[437] = -0.20885381f;
      sa[438] = 0.07224358f;
      sa[439] = 0.041287605f;
      sa[440] = 0.28510574f;
      sa[441] = -0.18708253f;
      sa[442] = 0.090334475f;
      sa[443] = 0.12416587f;
      sa[444] = -0.16549978f;
      sa[445] = 0.11286597f;
      sa[446] = 0.23201148f;
      sa[447] = 0.062673755f;
      sa[448] = 0.26998287f;
      sa[449] = 0.3051063f;
      sa[450] = -0.20192648f;
      sa[451] = 0.09081614f;
      sa[452] = 0.18815824f;
      sa[453] = -0.041990787f;
      sa[454] = -0.07239244f;
      sa[455] = -0.0068037813f;
      sa[456] = 0.06418948f;
      sa[457] = 0.1190124f;
      sa[458] = -0.31701896f;
      sa[459] = 0.47687083f;
      sa[460] = 0.21170782f;
      sa[461] = 0.19854619f;
      sa[462] = 0.0818547f;
      sa[463] = 0.21598938f;
      sa[464] = -0.3702878f;
      sa[465] = 0.37482804f;
      sa[466] = -0.041277867f;
      sa[467] = 0.13561445f;
      sa[468] = 0.031307217f;
      sa[469] = 0.20962526f;
      sa[470] = 0.3691529f;
      sa[471] = 0.2243292f;
      sa[472] = 0.011331597f;
      sa[473] = -0.03649817f;
      sa[474] = 0.116722114f;
      sa[475] = 0.30902016f;
      sa[476] = 0.14748508f;
      sa[477] = -0.09630609f;
      sa[478] = 0.20511986f;
      sa[479] = 0.02167698f;
      sa[480] = -0.35889253f;
      sa[481] = -0.14736788f;
      sa[482] = -0.1961155f;
      sa[483] = 0.14736603f;
      sa[484] = 0.16590959f;
      sa[485] = 0.08884528f;
      sa[486] = 0.05297959f;
      sa[487] = -0.17132758f;
      sa[488] = -0.2861684f;
      sa[489] = 0.0028227333f;
      sa[490] = 0.04674026f;
      sa[491] = -0.2528481f;
      sa[492] = 0.29261506f;
      sa[493] = 0.31899405f;
      sa[494] = -0.20506701f;
      sa[495] = 0.12119097f;
      sa[496] = -0.15995684f;
      sa[497] = -0.11242961f;
      sa[498] = 0.08872208f;
      sa[499] = 0.0031791313f;
      sa[500] = -0.07529254f;
      sa[501] = 0.03871152f;
      sa[502] = 0.24969326f;
      sa[503] = 0.079536736f;
      sa[504] = -0.15703161f;
      sa[505] = -0.03906774f;
      sa[506] = 0.31600714f;
      sa[507] = -0.08256127f;
      sa[508] = 0.18908781f;
      sa[509] = 0.4129929f;
      sa[510] = 0.24661389f;
      sa[511] = 0.07284506f;
      sa[512] = 0.08619424f;
      sa[513] = -0.089586355f;
      sa[514] = 0.23861285f;
      sa[515] = -0.3869125f;
      sa[516] = 0.06391291f;
      sa[517] = 0.25077045f;
      sa[518] = 0.1368387f;
      sa[519] = 0.077956654f;
      sa[520] = 0.2572317f;
      sa[521] = 0.22197527f;
      sa[522] = -0.056865904f;
      sa[523] = 0.11138559f;
      sa[524] = 0.15036163f;
      sa[525] = 0.12160773f;
      sa[526] = -0.029196749f;
      sa[527] = 0.009336659f;
      sa[528] = 0.15909813f;
      sa[529] = 0.13162372f;
      sa[530] = -0.16987638f;
      sa[531] = 0.3226144f;
      sa[532] = 0.17719647f;
      sa[533] = 0.14085925f;
      sa[534] = 0.3334317f;
      sa[535] = 0.10618526f;
      sa[536] = 0.04876939f;
      sa[537] = -0.25653753f;
      sa[538] = 0.38956422f;
      sa[539] = 0.27733785f;
      sa[540] = -0.17960767f;
      sa[541] = -0.147734f;
      sa[542] = -0.21212454f;
      sa[543] = -0.5975437f;
      sa[544] = 0.018717822f;
      sa[545] = -0.19321899f;
      sa[546] = -0.040175267f;
      sa[547] = -0.023246229f;
      sa[548] = 0.07883899f;
      sa[549] = 0.16846855f;
      sa[550] = -0.06930819f;
      sa[551] = -0.17870604f;
      sa[552] = 0.039961256f;
      sa[553] = -0.22387885f;
      sa[554] = -0.19850966f;
      sa[555] = -0.14897054f;
      sa[556] = -0.18815771f;
      sa[557] = -0.25638637f;
      sa[558] = -0.11670066f;
      sa[559] = 0.15447824f;
      sa[560] = -0.116020866f;
      sa[561] = 0.020163408f;
      sa[562] = 0.23061371f;
      sa[563] = -0.033775445f;
      sa[564] = 0.09124861f;
      sa[565] = -0.080548964f;
      sa[566] = 0.23247671f;
      sa[567] = 0.26208428f;
      sa[568] = 0.038208023f;
      sa[569] = 0.13498391f;
      sa[570] = -0.1660359f;
      sa[571] = 0.0031440768f;
      sa[572] = -0.15964808f;
      sa[573] = 0.35877517f;
      sa[574] = 0.15622056f;
      sa[575] = -0.29381332f;
      sa[576] = -0.055850726f;
      sa[577] = -0.0815109f;
      sa[578] = -0.047298428f;
      sa[579] = 0.14407757f;
      sa[580] = 0.11711034f;
      sa[581] = -0.16675909f;
      sa[582] = 0.08025114f;
      sa[583] = 0.02924874f;
      sa[584] = 0.094433494f;
      sa[585] = 0.089116044f;
      sa[586] = -0.17976838f;
      sa[587] = -0.19775502f;
      sa[588] = 0.10962235f;
      sa[589] = 0.0808746f;
      sa[590] = 0.036895506f;
      sa[591] = 0.050642133f;
      sa[592] = -0.32778347f;
      sa[593] = -0.26253062f;
      sa[594] = 0.08552751f;
      sa[595] = 0.100602105f;
      sa[596] = 0.34671643f;
      sa[597] = 0.07800335f;
      sa[598] = 0.25767535f;
      sa[599] = 0.014158563f;
      sa[600] = -0.3421436f;
      sa[601] = 0.18174496f;
      sa[602] = 0.10528279f;
      sa[603] = -0.04798923f;
      sa[604] = 0.27563572f;
      sa[605] = 0.28702167f;
      sa[606] = 0.17774764f;
      sa[607] = 0.031705648f;
      sa[608] = 0.03755375f;
      sa[609] = 0.034736726f;
      sa[610] = 0.14503823f;
      sa[611] = -0.11578817f;
      sa[612] = -0.23899312f;
      sa[613] = 0.0025649474f;
      sa[614] = 0.20114984f;
      sa[615] = 0.14122716f;
      sa[616] = 0.10984992f;
      sa[617] = -0.14166997f;
      sa[618] = -0.04376729f;
      sa[619] = -0.09129849f;
      sa[620] = -0.018582987f;
      sa[621] = -0.2416901f;
      sa[622] = -0.27088422f;
      sa[623] = -0.057201676f;
      sa[624] = -0.07691116f;
      sa[625] = 0.3805811f;
      sa[626] = 0.013840024f;
      sa[627] = 0.06727151f;
      sa[628] = -0.18163216f;
      sa[629] = -0.14051099f;
      sa[630] = -0.23303601f;
      sa[631] = 0.55141884f;
      sa[632] = 0.018710358f;
      sa[633] = -0.17738502f;
      sa[634] = -0.17906825f;
      sa[635] = -0.13406171f;
      sa[636] = -0.102622986f;
      sa[637] = -0.062108636f;
      sa[638] = -0.13396457f;
      sa[639] = 0.06997515f;
      sa[640] = -0.21001136f;
      sa[641] = -0.3518374f;
      sa[642] = 0.24617386f;
      sa[643] = -0.5020372f;
      sa[644] = -0.14345355f;
      sa[645] = -0.3275852f;
      sa[646] = 0.27397066f;
      sa[647] = -0.14537655f;
      sa[648] = 0.0010235002f;
      sa[649] = -0.06705833f;
      sa[650] = -0.07124162f;
      sa[651] = -0.2411846f;
      sa[652] = 0.035285693f;
      sa[653] = -0.20633474f;
      sa[654] = -0.27822423f;
      sa[655] = -0.3164455f;
      sa[656] = 0.3007757f;
      sa[657] = 0.05934013f;
      sa[658] = -0.37601143f;
      sa[659] = -0.21796139f;
      sa[660] = -0.3027342f;
      sa[661] = -0.15431182f;
      sa[662] = -0.3621219f;
      sa[663] = 0.0746963f;
      sa[664] = -0.16892226f;
      sa[665] = 0.07069134f;
      sa[666] = 0.07521964f;
      sa[667] = -0.23622571f;
      sa[668] = 0.20475686f;
      sa[669] = -0.1790888f;
      sa[670] = -0.032870263f;
      sa[671] = -0.15514591f;
      sa[672] = -0.40464628f;
      sa[673] = 0.10828105f;
      sa[674] = 0.31769085f;
      sa[675] = -0.30667248f;
      sa[676] = -0.0862577f;
      sa[677] = -0.1760373f;
      sa[678] = 0.16624433f;
      sa[679] = -0.09817893f;
      sa[680] = 0.1435828f;
      sa[681] = 0.16175233f;
      sa[682] = -0.2952141f;
      sa[683] = -0.11174852f;
      sa[684] = 0.030594287f;
      sa[685] = 0.17520522f;
      sa[686] = -0.097318746f;
      sa[687] = -0.14236411f;
      sa[688] = -0.28258023f;
      sa[689] = -0.13165765f;
      sa[690] = 0.0158083f;
      sa[691] = 0.34685504f;
      sa[692] = -0.18650164f;
      sa[693] = -0.08514499f;
      sa[694] = 0.37091923f;
      sa[695] = -0.12927392f;
      sa[696] = -0.15104602f;
      sa[697] = -0.10584301f;
      sa[698] = -0.20073387f;
      sa[699] = 0.7625483f;
      sa[700] = 0.15240718f;
      sa[701] = 0.31371608f;
      sa[702] = 0.05376736f;
      sa[703] = -0.8496056f;
      sa[704] = -0.4371636f;
      sa[705] = -0.21472324f;
      sa[706] = -0.22770049f;
      sa[707] = 0.2733187f;
      sa[708] = 0.07602026f;
      sa[709] = -0.1768588f;
      sa[710] = 0.16774549f;
      sa[711] = -0.051945675f;
      sa[712] = -0.09938037f;
      sa[713] = -0.030684065f;
      sa[714] = 0.16153768f;
      sa[715] = 0.3058702f;
      sa[716] = 0.04130095f;
      sa[717] = 0.06080633f;
      sa[718] = 0.049889263f;
      sa[719] = 0.14121671f;
      sa[720] = -0.2319309f;
      sa[721] = 0.23825517f;
      sa[722] = -0.084912844f;
      sa[723] = -0.06670005f;
      sa[724] = 0.10355867f;
      sa[725] = -0.22294857f;
      sa[726] = -0.21196459f;
      sa[727] = -0.49883586f;
      sa[728] = 0.03265723f;
      sa[729] = -0.14779381f;
      sa[730] = 0.026256027f;
      sa[731] = -0.45919836f;
      sa[732] = 0.24655896f;
      sa[733] = 0.2807573f;
      sa[734] = -0.111477f;
      sa[735] = 0.12394177f;
      sa[736] = 0.031009542f;
      sa[737] = 0.16496663f;
      sa[738] = -0.61901486f;
      sa[739] = 0.054267503f;
      sa[740] = -0.15103239f;
      sa[741] = -0.1903752f;
      sa[742] = 0.123379976f;
      sa[743] = -0.047592577f;
      sa[744] = 0.110879384f;
      sa[745] = -0.23582931f;
      sa[746] = 0.0013616353f;
      sa[747] = -0.003325668f;
      sa[748] = 0.02944932f;
      sa[749] = -0.0014897553f;
      sa[750] = 0.35335848f;
      sa[751] = 0.3043375f;
      sa[752] = 0.011762674f;
      sa[753] = 0.08616676f;
      sa[754] = 0.11769428f;
      sa[755] = -0.024357978f;
      sa[756] = -0.092864566f;
      sa[757] = 0.28746954f;
      sa[758] = -0.24942094f;
      sa[759] = -0.054324828f;
      sa[760] = -0.0652545f;
      sa[761] = 0.093323044f;
      sa[762] = -0.11586537f;
      sa[763] = 0.109849036f;
      sa[764] = 0.14690167f;
      sa[765] = -0.14648019f;
      sa[766] = -0.21094532f;
      sa[767] = -0.049920127f;
      sa[768] = -0.123864315f;
      sa[769] = -0.22484092f;
      sa[770] = 0.020339426f;
      sa[771] = 0.07403231f;
      sa[772] = 0.049220826f;
      sa[773] = -0.21445209f;
      sa[774] = -0.08961417f;
      sa[775] = 0.26827583f;
      sa[776] = -0.0043163286f;
      sa[777] = 0.09089281f;
      sa[778] = 0.13448156f;
      sa[779] = -0.09780422f;
      sa[780] = -0.018294334f;
      sa[781] = -0.032549758f;
      sa[782] = 0.15595885f;
      sa[783] = -0.28889453f;
      sa[784] = -0.031727728f;
      sa[785] = 0.028284255f;
      sa[786] = -0.0016393042f;
      sa[787] = -0.11470176f;
      sa[788] = -0.21356933f;
      sa[789] = -0.08385208f;
      sa[790] = 0.008692471f;
      sa[791] = -0.1093029f;
      sa[792] = 0.20402232f;
      sa[793] = -0.031149551f;
      sa[794] = -0.24906492f;
      sa[795] = -0.3874946f;
      sa[796] = 0.06641852f;
      sa[797] = -0.36974677f;
      sa[798] = -0.32126984f;
      sa[799] = -0.14692064f;
      sa[800] = 0.118082784f;
      sa[801] = 0.20530751f;
      sa[802] = 0.23306201f;
      sa[803] = 0.19589257f;
      sa[804] = 0.1496212f;
      sa[805] = 0.11437188f;
      sa[806] = 0.21781345f;
      sa[807] = 0.37090793f;
      sa[808] = 0.012056329f;
      sa[809] = -0.1187397f;
      sa[810] = 0.2701929f;
      sa[811] = -0.013827716f;
      sa[812] = 0.11068773f;
      sa[813] = -0.356427f;
      sa[814] = 0.08023069f;
      sa[815] = -0.037863486f;
      sa[816] = -0.22350968f;
      sa[817] = -0.20109154f;
      sa[818] = -0.020985933f;
      sa[819] = 0.16038623f;
      sa[820] = -0.38481545f;
      sa[821] = -0.32638046f;
      sa[822] = -0.44788378f;
      sa[823] = 0.103055805f;
      sa[824] = 0.0019228596f;
      sa[825] = 0.50357413f;
      sa[826] = -0.35060406f;
      sa[827] = -0.24568921f;
      sa[828] = 0.15104268f;
      sa[829] = -0.11696834f;
      sa[830] = 0.11689822f;
      sa[831] = -0.23001803f;
      sa[832] = 0.06827586f;
      sa[833] = -0.063045785f;
      sa[834] = 0.099413656f;
      sa[835] = -0.25490153f;
      sa[836] = 0.2898041f;
      sa[837] = -0.17003559f;
      sa[838] = 0.105993144f;
      sa[839] = -0.40939745f;
      sa[840] = 0.18894812f;
      sa[841] = -9.0441614E-4f;
      sa[842] = 0.10867952f;
      sa[843] = -0.0029901413f;
      sa[844] = -0.0012337151f;
      sa[845] = 0.10777529f;
      sa[846] = -0.1995314f;
      sa[847] = 0.05150994f;
      sa[848] = 0.26549998f;
      sa[849] = 0.27914637f;
      sa[850] = -0.008244152f;
      sa[851] = 0.07872342f;
      sa[852] = 0.1793994f;
      sa[853] = 0.13837847f;
      sa[854] = 0.25016272f;
      sa[855] = 0.48139143f;
      sa[856] = 0.15672857f;
      sa[857] = -0.096716054f;
      sa[858] = 0.10175885f;
      sa[859] = 0.10588321f;
      sa[860] = 0.2212531f;
      sa[861] = -0.034401674f;
      sa[862] = -0.1594708f;
      sa[863] = 0.032323528f;
      sa[864] = -0.18069236f;
      sa[865] = 0.2827243f;
      sa[866] = -0.1531008f;
      sa[867] = 0.25054374f;
      sa[868] = -0.1761618f;
      sa[869] = 0.25386038f;
      sa[870] = 0.019018583f;
      sa[871] = 0.32174623f;
      sa[872] = 0.1450946f;
      sa[873] = -0.06964811f;
      sa[874] = 0.066818096f;
      sa[875] = -0.21978563f;
      sa[876] = -0.27975968f;
      sa[877] = -0.19699049f;
      sa[878] = 0.046728034f;
      sa[879] = 0.2468911f;
      sa[880] = -0.089129895f;
      sa[881] = -0.08451066f;
      sa[882] = 0.19523531f;
      sa[883] = -0.06110219f;
      sa[884] = -0.23171663f;
      sa[885] = -0.21019f;
      sa[886] = 0.07666901f;
      sa[887] = 0.02143778f;
      sa[888] = -0.063049555f;
      sa[889] = 0.07121145f;
      sa[890] = -0.25453672f;
      sa[891] = 0.20046479f;
      sa[892] = 0.025476946f;
      sa[893] = 0.12315838f;
      sa[894] = -0.036644664f;
      sa[895] = 0.16692983f;
      sa[896] = -0.14878379f;
      sa[897] = 0.09234764f;
      sa[898] = -0.012089901f;
      sa[899] = 0.18242954f;
      sa[900] = -0.22043978f;
      sa[901] = 0.11393078f;
      sa[902] = -0.059490263f;
      sa[903] = 0.05885595f;
      sa[904] = 0.2914477f;
      sa[905] = 0.2933596f;
      sa[906] = -0.111918055f;
      sa[907] = -0.11463453f;
      sa[908] = -0.206917f;
      sa[909] = 0.077032335f;
      sa[910] = 0.11220542f;
      sa[911] = -0.1147162f;
      sa[912] = 0.05452652f;
      sa[913] = 0.14773479f;
      sa[914] = -0.13211183f;
      sa[915] = -0.03969355f;
      sa[916] = 0.30615723f;
      sa[917] = 0.053237315f;
      sa[918] = -0.1147508f;
      sa[919] = 0.10738081f;
      sa[920] = 0.17900065f;
      sa[921] = -0.0048002773f;
      sa[922] = -0.020229334f;
      sa[923] = -0.14806145f;
      sa[924] = -0.0014399296f;
      sa[925] = -0.12842311f;
      sa[926] = -0.001705529f;
      sa[927] = -0.0428892f;
      sa[928] = 0.27368262f;
      sa[929] = 0.14642486f;
      sa[930] = 0.24173416f;
      sa[931] = -0.05196859f;
      sa[932] = 0.28350627f;
      sa[933] = -0.061510377f;
      sa[934] = 0.25615776f;
      sa[935] = -0.26415431f;
      sa[936] = 0.10028363f;
      sa[937] = 0.18293908f;
      sa[938] = -0.15276949f;
      sa[939] = 0.15521207f;
      sa[940] = -0.039570503f;
      sa[941] = -0.27383706f;
      sa[942] = -0.24492995f;
      sa[943] = -0.1515851f;
      sa[944] = -0.34452793f;
      sa[945] = 6.623084E-4f;
      sa[946] = 0.08921309f;
      sa[947] = 0.18764131f;
      sa[948] = 0.0762479f;
      sa[949] = -0.16050118f;
      sa[950] = 0.09396856f;
      sa[951] = -0.059429593f;
      sa[952] = -0.245093f;
      sa[953] = -0.1656222f;
      sa[954] = -0.23039778f;
      sa[955] = -0.0065221973f;
      sa[956] = -0.058086295f;
      sa[957] = 0.005670687f;
      sa[958] = 0.037882976f;
      sa[959] = -0.14450328f;
      sa[960] = 0.33843133f;
      sa[961] = -0.10987633f;
      sa[962] = 0.026684983f;
      sa[963] = -0.2620004f;
      sa[964] = -0.18439123f;
      sa[965] = 0.2672494f;
      sa[966] = -0.088111386f;
      sa[967] = -0.23023735f;
      sa[968] = 0.15507579f;
      sa[969] = -0.2858161f;
      sa[970] = 0.39530852f;
      sa[971] = 0.08696238f;
      sa[972] = -0.19677024f;
      sa[973] = -0.32528603f;
      sa[974] = -0.30217278f;
      sa[975] = -0.46671727f;
      sa[976] = -0.062371943f;
      sa[977] = -0.015704464f;
      sa[978] = -0.12246759f;
      sa[979] = 0.01601675f;
      sa[980] = 0.16097964f;
      sa[981] = -0.2107678f;
      sa[982] = 0.031122815f;
      sa[983] = -0.08452401f;
      sa[984] = -0.21584779f;
      sa[985] = 0.03779765f;
      sa[986] = -0.26074016f;
      sa[987] = -0.0031078623f;
      sa[988] = 0.11851008f;
      sa[989] = 0.15721773f;
      sa[990] = 0.27743527f;
      sa[991] = 0.039250515f;
      sa[992] = -0.07567224f;
      sa[993] = 0.07494303f;
      sa[994] = -0.09642609f;
      sa[995] = -0.37691635f;
      sa[996] = 0.14656128f;
      sa[997] = 0.1322224f;
      sa[998] = 0.055718664f;
      sa[999] = 0.3814628f;
      sa[1000] = 0.14590566f;
      sa[1001] = 0.35065383f;
      sa[1002] = 0.30174848f;
      sa[1003] = -0.10252617f;
      sa[1004] = 0.13339067f;
      sa[1005] = -0.12163969f;
      sa[1006] = -0.1437759f;
      sa[1007] = 0.049066775f;
      sa[1008] = 0.18941738f;
      sa[1009] = 0.22751155f;
      sa[1010] = -0.002289331f;
      sa[1011] = 0.04797954f;
      sa[1012] = -0.14444701f;
      sa[1013] = 0.07278433f;
      sa[1014] = 0.20620629f;
      sa[1015] = -0.4312869f;
      sa[1016] = 0.27542588f;
      sa[1017] = 0.112303086f;
      sa[1018] = -0.028353069f;
      sa[1019] = 0.0020744537f;
      sa[1020] = -0.27181843f;
      sa[1021] = 9.6434867E-4f;
      sa[1022] = 0.16244745f;
      sa[1023] = 0.09621551f;
      sa[1024] = 0.06646917f;
      sa[1025] = 0.21952449f;
      sa[1026] = 0.11448671f;
      sa[1027] = 0.115401424f;
      sa[1028] = 0.25534317f;
      sa[1029] = -0.09476151f;
      sa[1030] = -0.20074771f;
      sa[1031] = 0.0733557f;
      sa[1032] = -0.23688366f;
      sa[1033] = 0.053649817f;
      sa[1034] = -0.07192857f;
      sa[1035] = 0.09066045f;
      sa[1036] = 0.23233625f;
      sa[1037] = -0.040517926f;
      sa[1038] = -0.24592781f;
      sa[1039] = 0.30170768f;
      sa[1040] = -0.058044523f;
      sa[1041] = 0.26492873f;
      sa[1042] = -0.27769688f;
      sa[1043] = -0.069590606f;
      sa[1044] = 0.030920863f;
      sa[1045] = 0.24973845f;
      sa[1046] = -0.047251463f;
      sa[1047] = -0.19803551f;
      sa[1048] = 0.18004215f;
      sa[1049] = 0.0048315166f;
      sa[1050] = 0.08215923f;
      sa[1051] = -0.23731218f;
      sa[1052] = 0.22655001f;
      sa[1053] = 0.2584123f;
      sa[1054] = 0.063524604f;
      sa[1055] = 0.0974119f;
      sa[1056] = 0.274482f;
      sa[1057] = -0.1060247f;
      sa[1058] = 0.22426155f;
      sa[1059] = -0.25695175f;
      sa[1060] = -0.15517865f;
      sa[1061] = 0.056100115f;
      sa[1062] = -0.08176649f;
      sa[1063] = 0.13317311f;
      sa[1064] = 0.040140286f;
      sa[1065] = -0.06707607f;
      sa[1066] = 0.14688955f;
      sa[1067] = -0.48493597f;
      sa[1068] = -0.14294666f;
      sa[1069] = 0.2202312f;
      sa[1070] = -0.01266212f;
      sa[1071] = 0.28564015f;
      sa[1072] = -0.22650242f;
      sa[1073] = 0.0946312f;
      sa[1074] = 0.23187079f;
      sa[1075] = -0.20942816f;
      sa[1076] = -0.030353231f;
      sa[1077] = 0.15283746f;
      sa[1078] = -0.15926269f;
      sa[1079] = -0.0051093874f;
      sa[1080] = 0.30800083f;
      sa[1081] = 0.15249279f;
      sa[1082] = -0.4597996f;
      sa[1083] = -0.25321472f;
      sa[1084] = 0.25194553f;
      sa[1085] = -0.28914282f;
      sa[1086] = -0.30730277f;
      sa[1087] = -0.35716367f;
      sa[1088] = -0.1595047f;
      sa[1089] = -0.036069755f;
      sa[1090] = -0.28896907f;
      sa[1091] = 0.0020802703f;
      sa[1092] = -0.14583054f;
      sa[1093] = -0.33247986f;
      sa[1094] = 0.050013892f;
      sa[1095] = -0.19431058f;
      sa[1096] = 0.020267863f;
      sa[1097] = -0.14559673f;
      sa[1098] = -0.005526797f;
      sa[1099] = 0.16157609f;
      sa[1100] = 0.06549403f;
      sa[1101] = 0.2933226f;
      sa[1102] = -0.062893696f;
      sa[1103] = 0.2867691f;
      sa[1104] = -0.379568f;
      sa[1105] = -0.15460368f;
      sa[1106] = -0.036250137f;
      sa[1107] = 0.14420931f;
      sa[1108] = -0.004883634f;
      sa[1109] = 0.46951985f;
      sa[1110] = 0.20599017f;
      sa[1111] = -0.11173774f;
      sa[1112] = 0.12167878f;
      sa[1113] = 0.15981783f;
      sa[1114] = 0.19261071f;
      sa[1115] = 0.1857102f;
      sa[1116] = -0.11241573f;
      sa[1117] = 0.031604774f;
      sa[1118] = -0.081831835f;
      sa[1119] = -0.13231501f;
      sa[1120] = 0.16148253f;
      sa[1121] = 0.18105419f;
      sa[1122] = 0.27462566f;
      sa[1123] = 0.09655726f;
      sa[1124] = 0.13441227f;
      sa[1125] = -0.032880697f;
      sa[1126] = 0.20401323f;
      sa[1127] = 0.28622684f;
      sa[1128] = 0.061440565f;
      sa[1129] = 0.04421015f;
      sa[1130] = 0.2501552f;
      sa[1131] = 0.36044243f;
      sa[1132] = 0.030476907f;
      sa[1133] = 0.039170142f;
      sa[1134] = 0.1099251f;
      sa[1135] = -0.2934439f;
      sa[1136] = -0.07189547f;
      sa[1137] = 0.10194269f;
      sa[1138] = -0.1527304f;
      sa[1139] = 0.10626592f;
      sa[1140] = 0.34841028f;
      sa[1141] = -0.21105042f;
      sa[1142] = 0.04077828f;
      sa[1143] = -0.046526525f;
      sa[1144] = -0.23262563f;
      sa[1145] = 0.14511667f;
      sa[1146] = 0.335546f;
      sa[1147] = 0.004092278f;
      sa[1148] = 0.05438192f;
      sa[1149] = 0.060880166f;
      sa[1150] = -0.4420812f;
      sa[1151] = -0.5271095f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.3198465f;
      sa[1] = -0.10104032f;
      sa[2] = -0.65623075f;
      sa[3] = -1.0624149f;
      sa[4] = -0.038370065f;
      sa[5] = 0.15569125f;
      sa[6] = 1.114128f;
      sa[7] = -0.6105038f;
      sa[8] = -0.9333613f;
      sa[9] = 0.7144437f;
      sa[10] = -0.15361533f;
      sa[11] = 0.5071735f;
      sa[12] = 0.18814932f;
      sa[13] = -0.04656246f;
      sa[14] = -1.2324756f;
      sa[15] = 1.2944583f;
      sa[16] = 1.7054563f;
      sa[17] = -0.2616641f;
      sa[18] = 0.29434797f;
      sa[19] = -0.6991469f;
      sa[20] = 1.0420421f;
      sa[21] = 0.22120184f;
      sa[22] = -0.9363408f;
      sa[23] = 0.8103001f;
      sa[24] = -1.2827731f;
      sa[25] = 0.4835755f;
      sa[26] = -0.22018106f;
      sa[27] = 1.4692914f;
      sa[28] = -1.3101543f;
      sa[29] = -0.38564065f;
      sa[30] = 0.53629804f;
      sa[31] = -0.6618181f;
      sa[32] = -1.0439267f;
      sa[33] = -1.5481392f;
      sa[34] = 0.02637258f;
      sa[35] = 1.3451917f;
      sa[36] = -0.43552303f;
      sa[37] = -0.26586416f;
      sa[38] = 0.0682159f;
      sa[39] = 0.80994236f;
      sa[40] = -0.7480835f;
      sa[41] = -1.361632f;
      sa[42] = -1.1722533f;
      sa[43] = -1.696743f;
      sa[44] = 0.24002093f;
      sa[45] = -1.1994188f;
      sa[46] = 1.1306014f;
      sa[47] = 1.4176437f;
      sa[48] = -1.2985697f;
      sa[49] = -1.0489202f;
      sa[50] = 0.5379192f;
      sa[51] = -0.108332776f;
      sa[52] = 0.989083f;
      sa[53] = 0.765888f;
      sa[54] = -0.14586581f;
      sa[55] = 1.1753145f;
      sa[56] = -0.7599608f;
      sa[57] = -1.0811114f;
      sa[58] = 0.09568598f;
      sa[59] = -0.04202637f;
      sa[60] = 1.3687061f;
      sa[61] = -0.4348445f;
      sa[62] = -0.0757468f;
      sa[63] = 0.62721574f;
      sa[64] = 1.2906204f;
      sa[65] = -0.6276682f;
      sa[66] = 0.83344734f;
      sa[67] = 1.4337229f;
      sa[68] = 0.68903387f;
      sa[69] = -1.1108141f;
      sa[70] = -1.4107835f;
      sa[71] = -0.39326623f;
      sa[72] = -1.3615131f;
      sa[73] = 1.4382498f;
      sa[74] = 1.5788618f;
      sa[75] = -0.23775518f;
      sa[76] = 0.85426295f;
      sa[77] = 0.40592286f;
      sa[78] = -1.5129087f;
      sa[79] = 0.98433274f;
      sa[80] = -0.94595635f;
      sa[81] = 0.1331709f;
      sa[82] = 0.9537669f;
      sa[83] = -0.500034f;
      sa[84] = -1.6320094f;
      sa[85] = -1.1057397f;
      sa[86] = 0.47705963f;
      sa[87] = 0.95053715f;
      sa[88] = -1.5218031f;
      sa[89] = -0.83074975f;
      sa[90] = -1.0217352f;
      sa[91] = 1.5008849f;
      sa[92] = -0.22152703f;
      sa[93] = 0.38616067f;
      sa[94] = -1.4315226f;
      sa[95] = -0.16958347f;
      sa[96] = -0.95827955f;
      sa[97] = 0.19723247f;
      sa[98] = -0.086484216f;
      sa[99] = 0.29511738f;
      sa[100] = -1.3416514f;
      sa[101] = -0.37040445f;
      sa[102] = 1.3128916f;
      sa[103] = 0.15735805f;
      sa[104] = -0.29618874f;
      sa[105] = -0.651121f;
      sa[106] = 1.440404f;
      sa[107] = 1.3036449f;
      sa[108] = 0.8288507f;
      sa[109] = 0.29547846f;
      sa[110] = 0.8581898f;
      sa[111] = -0.8716744f;
      sa[112] = -1.1530061f;
      sa[113] = 0.33567256f;
      sa[114] = 0.030053116f;
      sa[115] = -0.45491245f;
      sa[116] = 1.2156086f;
      sa[117] = 0.09426513f;
      sa[118] = -1.6042168f;
      sa[119] = -0.7085145f;
      sa[120] = -0.38544348f;
      sa[121] = 1.0953337f;
      sa[122] = -0.012180913f;
      sa[123] = 0.31288028f;
      sa[124] = -0.78996474f;
      sa[125] = 0.6577717f;
      sa[126] = -1.2509408f;
      sa[127] = 0.381239f;
      sa[128] = -0.9891045f;
      sa[129] = 0.84578955f;
      sa[130] = -0.2871644f;
      sa[131] = 1.0245546f;
      sa[132] = 0.65273684f;
      sa[133] = 0.86600965f;
      sa[134] = 0.7255777f;
      sa[135] = -1.1463059f;
      sa[136] = 0.5630633f;
      sa[137] = -0.7379395f;
      sa[138] = -0.052854333f;
      sa[139] = 1.2909237f;
      sa[140] = -0.85810053f;
      sa[141] = -0.03837902f;
      sa[142] = 0.3034583f;
      sa[143] = -0.88725865f;
      sa[144] = 0.9068999f;
      sa[145] = -0.7656845f;
      sa[146] = 0.0786645f;
      sa[147] = 0.007764778f;
      sa[148] = -0.7993637f;
      sa[149] = 1.0502422f;
      sa[150] = -1.1957543f;
      sa[151] = -1.6547168f;
      sa[152] = 1.3488679f;
      sa[153] = -0.5214955f;
      sa[154] = 1.4186422f;
      sa[155] = -1.590993f;
      sa[156] = -1.433997f;
      sa[157] = -1.2362348f;
      sa[158] = -0.32014483f;
      sa[159] = -0.64036f;
      sa[160] = 1.3978888f;
      sa[161] = -1.3477386f;
      sa[162] = 1.5755025f;
      sa[163] = -0.75444216f;
      sa[164] = 0.7929414f;
      sa[165] = -0.53143066f;
      sa[166] = 1.354771f;
      sa[167] = -1.3684376f;
      sa[168] = 1.0967773f;
      sa[169] = -1.512573f;
      sa[170] = 1.1015705f;
      sa[171] = 0.74555856f;
      sa[172] = 1.5744841f;
      sa[173] = 1.6017331f;
      sa[174] = -0.13484086f;
      sa[175] = 0.033221375f;
      sa[176] = -0.8169595f;
      sa[177] = 0.09648208f;
      sa[178] = -1.1329502f;
      sa[179] = -0.18252635f;
      sa[180] = -1.3774427f;
      sa[181] = -1.0566809f;
      sa[182] = 0.34549582f;
      sa[183] = -1.0241284f;
      sa[184] = 1.4925611f;
      sa[185] = 1.1511236f;
      sa[186] = -0.53571576f;
      sa[187] = -1.0136997f;
      sa[188] = -0.59199035f;
      sa[189] = -0.674699f;
      sa[190] = -1.4549366f;
      sa[191] = -1.0611521f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


