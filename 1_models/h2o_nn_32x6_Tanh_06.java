/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:47:47.091+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_06

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_06 > h2o_nn_32x6_Tanh_06.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_06.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_06", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_06 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_06_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_06_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_06_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_06_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_06_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_06_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_06_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_06_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_06_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_06.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_06_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_06() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-2251441774936214656L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_06_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_06_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_06_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_06_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_06_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_06_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_06_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_06_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_06_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.030939071207865824;
      sa[1] = 0.036657204785909205;
      sa[2] = -7.698456705436839E-4;
      sa[3] = -0.11058322275837057;
      sa[4] = -0.01060414786926852;
      sa[5] = 0.023503870390662495;
      sa[6] = 0.25701867797418426;
      sa[7] = -0.09920042019375087;
      sa[8] = -0.04414413330303723;
      sa[9] = 7.020411376751966E-4;
      sa[10] = -0.06985571454419538;
      sa[11] = 0.044529315450915534;
      sa[12] = 0.053092521838403746;
      sa[13] = 0.07338202685079456;
      sa[14] = -0.06484142790079554;
      sa[15] = 0.010578359773664711;
      sa[16] = 0.047852502198734125;
      sa[17] = 0.009336680778110812;
      sa[18] = -0.046513129288831515;
      sa[19] = 0.014912691722865624;
      sa[20] = 0.04898343247281373;
      sa[21] = -0.014916413108730257;
      sa[22] = -0.2085791492225316;
      sa[23] = 0.00431067044886817;
      sa[24] = -0.04240746879329528;
      sa[25] = 0.12170629107488355;
      sa[26] = -0.013609346675621515;
      sa[27] = 0.057856594280417735;
      sa[28] = -0.15118145865785357;
      sa[29] = 0.018296235318159333;
      sa[30] = 0.12330319979403642;
      sa[31] = -0.018639425178128867;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_06_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_06_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.05907847684837072;
      sa[1] = -0.12037898817050899;
      sa[2] = -0.10362728618646827;
      sa[3] = 0.0017194605927743627;
      sa[4] = -0.04478941269113817;
      sa[5] = -0.038683816906556784;
    }
  }
}
class h2o_nn_32x6_Tanh_06_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_06_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_06_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.050272368f;
      sa[1] = 0.14430644f;
      sa[2] = 0.089062884f;
      sa[3] = 0.06313282f;
      sa[4] = -0.19461402f;
      sa[5] = -0.18119891f;
      sa[6] = -0.09442579f;
      sa[7] = 0.24241649f;
      sa[8] = 0.033440366f;
      sa[9] = -0.15083726f;
      sa[10] = -0.11393579f;
      sa[11] = -0.1559021f;
      sa[12] = 0.08571982f;
      sa[13] = -0.24939285f;
      sa[14] = -0.19612989f;
      sa[15] = 0.009865558f;
      sa[16] = 0.0068297517f;
      sa[17] = 0.12137659f;
      sa[18] = -0.21657355f;
      sa[19] = 0.105476476f;
      sa[20] = 0.21629667f;
      sa[21] = -0.31733173f;
      sa[22] = 0.19561446f;
      sa[23] = -0.16390194f;
      sa[24] = 0.26080033f;
      sa[25] = 0.095625535f;
      sa[26] = -0.19402161f;
      sa[27] = 0.3180169f;
      sa[28] = 0.2580336f;
      sa[29] = -0.23426005f;
      sa[30] = -0.1289233f;
      sa[31] = 0.22931406f;
      sa[32] = 0.23586422f;
      sa[33] = -0.13801467f;
      sa[34] = -0.0070040165f;
      sa[35] = -0.13941337f;
      sa[36] = 0.17743118f;
      sa[37] = 0.22290832f;
      sa[38] = -0.20283094f;
      sa[39] = 0.1904324f;
      sa[40] = -0.035794433f;
      sa[41] = -0.07495424f;
      sa[42] = -0.16312839f;
      sa[43] = -0.07782817f;
      sa[44] = 0.31708878f;
      sa[45] = -0.3253531f;
      sa[46] = 0.057742134f;
      sa[47] = 0.056695744f;
      sa[48] = 0.17946112f;
      sa[49] = 0.25551137f;
      sa[50] = 0.17288296f;
      sa[51] = -0.3746562f;
      sa[52] = -0.1327992f;
      sa[53] = 0.1278164f;
      sa[54] = 0.18830585f;
      sa[55] = 0.04932797f;
      sa[56] = -0.23267367f;
      sa[57] = -0.36358333f;
      sa[58] = 0.21940953f;
      sa[59] = -0.2970898f;
      sa[60] = -0.39150938f;
      sa[61] = 0.20192322f;
      sa[62] = 0.117189415f;
      sa[63] = -0.037462458f;
      sa[64] = 0.06680523f;
      sa[65] = 0.03906443f;
      sa[66] = -0.0088738175f;
      sa[67] = 0.01454691f;
      sa[68] = -0.1740361f;
      sa[69] = 0.08541155f;
      sa[70] = -0.03490796f;
      sa[71] = 0.33837333f;
      sa[72] = -0.3155412f;
      sa[73] = 0.2759936f;
      sa[74] = -0.08760167f;
      sa[75] = -0.0227184f;
      sa[76] = -0.13438419f;
      sa[77] = -0.03653323f;
      sa[78] = -0.06985002f;
      sa[79] = 0.27618125f;
      sa[80] = -0.37653893f;
      sa[81] = -0.0062004756f;
      sa[82] = -0.02134744f;
      sa[83] = 0.080134094f;
      sa[84] = 0.046079967f;
      sa[85] = -0.09528406f;
      sa[86] = 0.16462483f;
      sa[87] = 0.39376095f;
      sa[88] = 0.29114482f;
      sa[89] = 0.12090834f;
      sa[90] = -0.18369351f;
      sa[91] = 0.1063242f;
      sa[92] = 0.1671845f;
      sa[93] = -0.12877524f;
      sa[94] = -0.12764542f;
      sa[95] = -0.120244145f;
      sa[96] = 0.20776424f;
      sa[97] = -0.0111176465f;
      sa[98] = 0.20133542f;
      sa[99] = 0.011159775f;
      sa[100] = 0.04626007f;
      sa[101] = -0.07399291f;
      sa[102] = -0.12727726f;
      sa[103] = 0.10095608f;
      sa[104] = -0.034320753f;
      sa[105] = -0.10602829f;
      sa[106] = -0.2101494f;
      sa[107] = 0.13557237f;
      sa[108] = 0.15493742f;
      sa[109] = -0.113394246f;
      sa[110] = -0.13117671f;
      sa[111] = 0.20651868f;
      sa[112] = 0.11607955f;
      sa[113] = 0.016612357f;
      sa[114] = -0.10294878f;
      sa[115] = -0.006737565f;
      sa[116] = -0.2251003f;
      sa[117] = -0.024574121f;
      sa[118] = -0.30969524f;
      sa[119] = -0.035077363f;
      sa[120] = 0.22293934f;
      sa[121] = 0.23298387f;
      sa[122] = 0.3452419f;
      sa[123] = 0.3820598f;
      sa[124] = 0.2908568f;
      sa[125] = 0.23781241f;
      sa[126] = -0.29678744f;
      sa[127] = -0.38338295f;
      sa[128] = 0.08098273f;
      sa[129] = 0.15957241f;
      sa[130] = -0.067238815f;
      sa[131] = 0.3113906f;
      sa[132] = 0.16834632f;
      sa[133] = -0.256353f;
      sa[134] = -0.010880196f;
      sa[135] = -0.37365216f;
      sa[136] = -0.29412723f;
      sa[137] = -0.06544475f;
      sa[138] = 0.045368023f;
      sa[139] = -0.16460775f;
      sa[140] = -0.09077769f;
      sa[141] = -0.112316675f;
      sa[142] = 0.19102906f;
      sa[143] = -0.24810697f;
      sa[144] = 0.11877754f;
      sa[145] = -0.2104332f;
      sa[146] = -0.34827918f;
      sa[147] = 0.029171383f;
      sa[148] = 0.15252402f;
      sa[149] = 0.12535857f;
      sa[150] = 0.22329408f;
      sa[151] = -0.23875087f;
      sa[152] = -0.06808744f;
      sa[153] = 0.27104098f;
      sa[154] = 0.19531082f;
      sa[155] = -0.13451631f;
      sa[156] = 0.1397547f;
      sa[157] = -0.21388222f;
      sa[158] = 0.060128793f;
      sa[159] = 0.11040836f;
      sa[160] = -0.012309471f;
      sa[161] = 0.15235114f;
      sa[162] = -0.06068741f;
      sa[163] = -0.2946914f;
      sa[164] = 0.22703283f;
      sa[165] = -0.035949588f;
      sa[166] = -0.08457924f;
      sa[167] = -0.040473137f;
      sa[168] = 0.15873894f;
      sa[169] = 0.22045325f;
      sa[170] = 0.1321624f;
      sa[171] = 0.025730118f;
      sa[172] = -0.058791038f;
      sa[173] = -0.13915431f;
      sa[174] = -0.04878801f;
      sa[175] = -0.17839222f;
      sa[176] = 0.0016531713f;
      sa[177] = 0.02713888f;
      sa[178] = -0.0910598f;
      sa[179] = 0.11266656f;
      sa[180] = -0.091809615f;
      sa[181] = -0.3474543f;
      sa[182] = -0.20532857f;
      sa[183] = 0.10002356f;
      sa[184] = 0.2689756f;
      sa[185] = 0.12519567f;
      sa[186] = -0.31578586f;
      sa[187] = 0.009059265f;
      sa[188] = -0.07999806f;
      sa[189] = 0.19256343f;
      sa[190] = 0.024972502f;
      sa[191] = -0.123390086f;
      sa[192] = -0.16697411f;
      sa[193] = 0.15299715f;
      sa[194] = 0.035117757f;
      sa[195] = 0.17117609f;
      sa[196] = 0.18340226f;
      sa[197] = -0.0435452f;
      sa[198] = 0.26499316f;
      sa[199] = -0.07440422f;
      sa[200] = -0.017101489f;
      sa[201] = -0.29273722f;
      sa[202] = 0.08320794f;
      sa[203] = -0.11025878f;
      sa[204] = -0.2894583f;
      sa[205] = 0.21415228f;
      sa[206] = 0.37037686f;
      sa[207] = 0.1475258f;
      sa[208] = -0.31058496f;
      sa[209] = -0.1248526f;
      sa[210] = -0.3811344f;
      sa[211] = -0.35915986f;
      sa[212] = 0.26417512f;
      sa[213] = -0.27094525f;
      sa[214] = -0.035672605f;
      sa[215] = 0.10608966f;
      sa[216] = 0.13906929f;
      sa[217] = 0.085373804f;
      sa[218] = -0.15227135f;
      sa[219] = 0.20381661f;
      sa[220] = -0.14748488f;
      sa[221] = 0.10214915f;
      sa[222] = 0.22443025f;
      sa[223] = 0.06783153f;
      sa[224] = 0.14605533f;
      sa[225] = 0.28934053f;
      sa[226] = -0.18213528f;
      sa[227] = 0.046320118f;
      sa[228] = 0.13175818f;
      sa[229] = 0.11544193f;
      sa[230] = 0.23655425f;
      sa[231] = -0.26581392f;
      sa[232] = -0.27729338f;
      sa[233] = 0.122564346f;
      sa[234] = 0.25193825f;
      sa[235] = -0.1691054f;
      sa[236] = 0.012644801f;
      sa[237] = -0.15211543f;
      sa[238] = -0.2089892f;
      sa[239] = 0.15801607f;
      sa[240] = 0.04716571f;
      sa[241] = -0.23693356f;
      sa[242] = 0.046848517f;
      sa[243] = -0.18317056f;
      sa[244] = -0.0878277f;
      sa[245] = 0.0065712803f;
      sa[246] = -0.1431011f;
      sa[247] = 0.03632958f;
      sa[248] = 0.19846836f;
      sa[249] = 0.12475526f;
      sa[250] = -0.15224962f;
      sa[251] = -0.08324869f;
      sa[252] = -0.14706595f;
      sa[253] = -0.18598883f;
      sa[254] = -0.14303975f;
      sa[255] = 0.34100366f;
      sa[256] = -0.16491693f;
      sa[257] = 0.27182746f;
      sa[258] = -0.18783082f;
      sa[259] = -0.112763874f;
      sa[260] = -0.10440532f;
      sa[261] = -0.07504862f;
      sa[262] = -0.13922408f;
      sa[263] = 0.3018826f;
      sa[264] = -0.16404456f;
      sa[265] = 0.049628f;
      sa[266] = -0.23731793f;
      sa[267] = -0.23116538f;
      sa[268] = 0.18310831f;
      sa[269] = -0.114980996f;
      sa[270] = -0.07431423f;
      sa[271] = 0.26250198f;
      sa[272] = -0.092618585f;
      sa[273] = -0.111245975f;
      sa[274] = 0.13928801f;
      sa[275] = -0.018799068f;
      sa[276] = 0.08438959f;
      sa[277] = -0.17863679f;
      sa[278] = -0.21297273f;
      sa[279] = 0.09668352f;
      sa[280] = -0.19575101f;
      sa[281] = 0.23566012f;
      sa[282] = -0.12279664f;
      sa[283] = -0.11124228f;
      sa[284] = 0.050633047f;
      sa[285] = -0.13880412f;
      sa[286] = 0.20436694f;
      sa[287] = 0.081043534f;
      sa[288] = -0.25925925f;
      sa[289] = -0.15780103f;
      sa[290] = -0.09900548f;
      sa[291] = -0.07473064f;
      sa[292] = 0.10993714f;
      sa[293] = -0.13002038f;
      sa[294] = 0.0146094365f;
      sa[295] = 0.09503799f;
      sa[296] = 0.103907354f;
      sa[297] = 0.20415448f;
      sa[298] = -0.029590108f;
      sa[299] = -0.12585515f;
      sa[300] = -0.014912271f;
      sa[301] = -0.090749286f;
      sa[302] = 0.100351766f;
      sa[303] = 0.0022761652f;
      sa[304] = -0.17208871f;
      sa[305] = -0.013766304f;
      sa[306] = 0.2550487f;
      sa[307] = -0.103415094f;
      sa[308] = 0.078868f;
      sa[309] = 0.14011784f;
      sa[310] = 0.24438746f;
      sa[311] = 0.3076868f;
      sa[312] = -0.14754042f;
      sa[313] = -0.18002588f;
      sa[314] = -0.08929786f;
      sa[315] = 0.10702935f;
      sa[316] = -0.0013508504f;
      sa[317] = -0.057375483f;
      sa[318] = 0.104691826f;
      sa[319] = 0.31054085f;
      sa[320] = -0.14350697f;
      sa[321] = 0.071022995f;
      sa[322] = 0.3229296f;
      sa[323] = -0.03844682f;
      sa[324] = 0.04982009f;
      sa[325] = 0.22373253f;
      sa[326] = -0.35448438f;
      sa[327] = 0.049024608f;
      sa[328] = -0.10614667f;
      sa[329] = 0.23460944f;
      sa[330] = -0.19279979f;
      sa[331] = -0.02007624f;
      sa[332] = -0.1765154f;
      sa[333] = 0.062831804f;
      sa[334] = -0.044581085f;
      sa[335] = 0.34676576f;
      sa[336] = -0.16533752f;
      sa[337] = -0.14008197f;
      sa[338] = 0.25567022f;
      sa[339] = -0.20037682f;
      sa[340] = -0.40237966f;
      sa[341] = -0.32674828f;
      sa[342] = 0.12125062f;
      sa[343] = -0.13608214f;
      sa[344] = -0.20360363f;
      sa[345] = 0.13194303f;
      sa[346] = 0.17118558f;
      sa[347] = -0.24791367f;
      sa[348] = 0.18615875f;
      sa[349] = -0.2343666f;
      sa[350] = -0.28047433f;
      sa[351] = 0.05995397f;
      sa[352] = 0.11028154f;
      sa[353] = -0.13172898f;
      sa[354] = 0.03099004f;
      sa[355] = 0.032305688f;
      sa[356] = -0.09645946f;
      sa[357] = 0.3292658f;
      sa[358] = -0.3437212f;
      sa[359] = -0.03429276f;
      sa[360] = 0.20641169f;
      sa[361] = 0.02084398f;
      sa[362] = -0.15884815f;
      sa[363] = 0.15062776f;
      sa[364] = -0.17072749f;
      sa[365] = -0.1751511f;
      sa[366] = -0.023516687f;
      sa[367] = -0.24140245f;
      sa[368] = -0.0769827f;
      sa[369] = 0.23058245f;
      sa[370] = -0.1355228f;
      sa[371] = 0.17342259f;
      sa[372] = -3.328672E-4f;
      sa[373] = 0.32264334f;
      sa[374] = -0.12361198f;
      sa[375] = -0.22276077f;
      sa[376] = -0.22807483f;
      sa[377] = -0.24261858f;
      sa[378] = 0.1521567f;
      sa[379] = 0.109593764f;
      sa[380] = -0.113562815f;
      sa[381] = -0.11373935f;
      sa[382] = -0.037849557f;
      sa[383] = -0.093545504f;
      sa[384] = -0.09458115f;
      sa[385] = 0.13856764f;
      sa[386] = -0.4046121f;
      sa[387] = -0.12918295f;
      sa[388] = 0.1063924f;
      sa[389] = 0.008743168f;
      sa[390] = 0.074022815f;
      sa[391] = -0.029461842f;
      sa[392] = 0.16195257f;
      sa[393] = 0.15538503f;
      sa[394] = -0.0012210256f;
      sa[395] = 0.2762979f;
      sa[396] = 0.33794507f;
      sa[397] = -0.29288805f;
      sa[398] = 0.041340962f;
      sa[399] = -0.03839326f;
      sa[400] = 0.14328255f;
      sa[401] = 0.25672117f;
      sa[402] = -0.16157237f;
      sa[403] = 0.046541445f;
      sa[404] = 0.2771852f;
      sa[405] = -0.29653352f;
      sa[406] = -0.03506346f;
      sa[407] = 0.0952912f;
      sa[408] = -0.22626959f;
      sa[409] = -0.20398802f;
      sa[410] = -0.13739313f;
      sa[411] = 0.13981573f;
      sa[412] = -0.14934833f;
      sa[413] = 0.045201924f;
      sa[414] = 0.12181475f;
      sa[415] = 0.34736905f;
      sa[416] = -0.19822371f;
      sa[417] = -0.009672865f;
      sa[418] = -0.03653544f;
      sa[419] = 0.2173076f;
      sa[420] = 0.18568766f;
      sa[421] = 0.2530534f;
      sa[422] = 0.26576874f;
      sa[423] = 0.04917523f;
      sa[424] = 0.103016704f;
      sa[425] = -0.06268288f;
      sa[426] = -0.22964454f;
      sa[427] = 0.21677908f;
      sa[428] = -0.12400535f;
      sa[429] = -0.21614753f;
      sa[430] = 0.24556234f;
      sa[431] = 0.032273926f;
      sa[432] = -0.0030448325f;
      sa[433] = 0.18266733f;
      sa[434] = 0.33078006f;
      sa[435] = -0.02295203f;
      sa[436] = -0.22713087f;
      sa[437] = -0.18768594f;
      sa[438] = 0.0064763245f;
      sa[439] = 0.081459835f;
      sa[440] = 0.31139076f;
      sa[441] = -0.2462047f;
      sa[442] = 0.13316421f;
      sa[443] = 0.03344086f;
      sa[444] = -0.16247824f;
      sa[445] = 0.1333407f;
      sa[446] = 0.23827617f;
      sa[447] = 0.15273784f;
      sa[448] = 0.24427146f;
      sa[449] = 0.28398076f;
      sa[450] = -0.21488728f;
      sa[451] = 0.15317988f;
      sa[452] = 0.20971446f;
      sa[453] = -0.008569181f;
      sa[454] = -0.13012248f;
      sa[455] = 0.02020576f;
      sa[456] = 0.034850307f;
      sa[457] = 0.07191632f;
      sa[458] = -0.25687814f;
      sa[459] = 0.32790482f;
      sa[460] = 0.30397162f;
      sa[461] = 0.3677648f;
      sa[462] = 0.18765599f;
      sa[463] = 0.36911568f;
      sa[464] = -0.3059703f;
      sa[465] = 0.22424062f;
      sa[466] = -0.036495555f;
      sa[467] = 0.0847737f;
      sa[468] = 0.041644953f;
      sa[469] = 0.27700067f;
      sa[470] = 0.1450914f;
      sa[471] = -0.05991125f;
      sa[472] = -0.0014279789f;
      sa[473] = -0.07927303f;
      sa[474] = -0.040839717f;
      sa[475] = 0.12981352f;
      sa[476] = 0.1633201f;
      sa[477] = -0.18919879f;
      sa[478] = 0.10947315f;
      sa[479] = -0.1717278f;
      sa[480] = -0.25229323f;
      sa[481] = -0.15325153f;
      sa[482] = -0.25159517f;
      sa[483] = 0.24643071f;
      sa[484] = 0.21318094f;
      sa[485] = 0.08130108f;
      sa[486] = -0.07118137f;
      sa[487] = -0.17490059f;
      sa[488] = -0.174555f;
      sa[489] = 0.07080698f;
      sa[490] = -0.016739449f;
      sa[491] = -0.188783f;
      sa[492] = 0.23486109f;
      sa[493] = 0.20726466f;
      sa[494] = -0.1829943f;
      sa[495] = 0.21707155f;
      sa[496] = 0.054662734f;
      sa[497] = 0.11457438f;
      sa[498] = 0.22948891f;
      sa[499] = 0.27006477f;
      sa[500] = -0.12183738f;
      sa[501] = 0.057529822f;
      sa[502] = 0.28310764f;
      sa[503] = 0.05685278f;
      sa[504] = -0.10009901f;
      sa[505] = -0.13382024f;
      sa[506] = 0.27475667f;
      sa[507] = -0.016787102f;
      sa[508] = 0.12125803f;
      sa[509] = 0.20916076f;
      sa[510] = 0.21495736f;
      sa[511] = 0.009672511f;
      sa[512] = 0.102039896f;
      sa[513] = -0.042744644f;
      sa[514] = 0.19972418f;
      sa[515] = -0.29947326f;
      sa[516] = 0.023351835f;
      sa[517] = 0.07531683f;
      sa[518] = 0.15727021f;
      sa[519] = -0.10770253f;
      sa[520] = 0.3579462f;
      sa[521] = 0.19087042f;
      sa[522] = 0.097418115f;
      sa[523] = 0.2697616f;
      sa[524] = 0.20699023f;
      sa[525] = 0.2017067f;
      sa[526] = 0.04265662f;
      sa[527] = -0.035116863f;
      sa[528] = 0.066630065f;
      sa[529] = 0.14103623f;
      sa[530] = -0.22293098f;
      sa[531] = 0.07194076f;
      sa[532] = 0.13257092f;
      sa[533] = 0.11893814f;
      sa[534] = 0.10906804f;
      sa[535] = -0.10319341f;
      sa[536] = 0.021264177f;
      sa[537] = -0.4125801f;
      sa[538] = 0.28474206f;
      sa[539] = 0.36638236f;
      sa[540] = -0.29514444f;
      sa[541] = -0.16818953f;
      sa[542] = -0.03794992f;
      sa[543] = -0.18989602f;
      sa[544] = 0.1710796f;
      sa[545] = 0.08806712f;
      sa[546] = 0.0878526f;
      sa[547] = 0.18791153f;
      sa[548] = 0.013339591f;
      sa[549] = 0.21317571f;
      sa[550] = -0.032684624f;
      sa[551] = -0.07324975f;
      sa[552] = 0.041403748f;
      sa[553] = -0.092984274f;
      sa[554] = -0.14214411f;
      sa[555] = -0.14780658f;
      sa[556] = -0.20330495f;
      sa[557] = -0.17734353f;
      sa[558] = -0.15265442f;
      sa[559] = -0.009952399f;
      sa[560] = -0.27875546f;
      sa[561] = -0.062388506f;
      sa[562] = 0.18810466f;
      sa[563] = -0.052034043f;
      sa[564] = 0.23985498f;
      sa[565] = 0.00922311f;
      sa[566] = 0.2759057f;
      sa[567] = -0.115104645f;
      sa[568] = -0.07964997f;
      sa[569] = 0.024611842f;
      sa[570] = -0.06260351f;
      sa[571] = -0.086594075f;
      sa[572] = 0.010577757f;
      sa[573] = 0.20082594f;
      sa[574] = 0.105319515f;
      sa[575] = -0.34275374f;
      sa[576] = -0.14139563f;
      sa[577] = -0.05103441f;
      sa[578] = -0.008218012f;
      sa[579] = -0.054723278f;
      sa[580] = 0.0711975f;
      sa[581] = -0.1433154f;
      sa[582] = 0.04505547f;
      sa[583] = -0.1566797f;
      sa[584] = 0.079024926f;
      sa[585] = 0.14447825f;
      sa[586] = -0.1935883f;
      sa[587] = -0.12561235f;
      sa[588] = 0.03465437f;
      sa[589] = 0.08124128f;
      sa[590] = -0.07142193f;
      sa[591] = -0.2048003f;
      sa[592] = -0.37660825f;
      sa[593] = -0.21681096f;
      sa[594] = 0.003955497f;
      sa[595] = -0.0932651f;
      sa[596] = 0.20480372f;
      sa[597] = -0.07179137f;
      sa[598] = 0.15477514f;
      sa[599] = -0.08674332f;
      sa[600] = -0.4014882f;
      sa[601] = 0.21601996f;
      sa[602] = 0.04634343f;
      sa[603] = 0.27595457f;
      sa[604] = 0.17121486f;
      sa[605] = 0.124727234f;
      sa[606] = 0.122220546f;
      sa[607] = -0.08983863f;
      sa[608] = -0.0019898165f;
      sa[609] = 0.080981806f;
      sa[610] = 0.11912683f;
      sa[611] = -0.030701559f;
      sa[612] = -0.00616053f;
      sa[613] = 0.1301861f;
      sa[614] = 0.08501412f;
      sa[615] = -0.03672865f;
      sa[616] = 0.019366123f;
      sa[617] = -0.2554443f;
      sa[618] = -0.17069432f;
      sa[619] = -0.124131404f;
      sa[620] = 0.012680747f;
      sa[621] = -0.23733151f;
      sa[622] = -0.24222778f;
      sa[623] = -0.2489872f;
      sa[624] = -0.030775985f;
      sa[625] = 0.28411394f;
      sa[626] = -0.0038507513f;
      sa[627] = 0.29607236f;
      sa[628] = -0.22116956f;
      sa[629] = -0.07230589f;
      sa[630] = -0.2730282f;
      sa[631] = 0.231525f;
      sa[632] = 0.101876065f;
      sa[633] = -0.16579065f;
      sa[634] = -0.20509967f;
      sa[635] = 0.18490689f;
      sa[636] = -0.123120084f;
      sa[637] = -0.0090194475f;
      sa[638] = -0.20613189f;
      sa[639] = -0.029308079f;
      sa[640] = -0.09266357f;
      sa[641] = -0.23135202f;
      sa[642] = 0.2901291f;
      sa[643] = -0.21081068f;
      sa[644] = -0.12488418f;
      sa[645] = -0.20971961f;
      sa[646] = 0.29719222f;
      sa[647] = -0.26195115f;
      sa[648] = 0.042528003f;
      sa[649] = -0.006653375f;
      sa[650] = 0.06711972f;
      sa[651] = -0.026837382f;
      sa[652] = 0.06905713f;
      sa[653] = -0.12440628f;
      sa[654] = -0.08739641f;
      sa[655] = -0.14612135f;
      sa[656] = 0.21878132f;
      sa[657] = 0.060205013f;
      sa[658] = -0.25403237f;
      sa[659] = -0.08604213f;
      sa[660] = -0.22993739f;
      sa[661] = -0.07736948f;
      sa[662] = -0.21137027f;
      sa[663] = 0.17913575f;
      sa[664] = -0.1931814f;
      sa[665] = 0.19880775f;
      sa[666] = -0.12735187f;
      sa[667] = -0.33317116f;
      sa[668] = 0.2482564f;
      sa[669] = -0.13622317f;
      sa[670] = 0.16679905f;
      sa[671] = 0.025337113f;
      sa[672] = -0.3106553f;
      sa[673] = 0.20204686f;
      sa[674] = 0.11768032f;
      sa[675] = -0.3500202f;
      sa[676] = -0.16258316f;
      sa[677] = -0.27935284f;
      sa[678] = 0.12033647f;
      sa[679] = -0.15104178f;
      sa[680] = 0.13718887f;
      sa[681] = 0.17351244f;
      sa[682] = -0.0696588f;
      sa[683] = -0.19747041f;
      sa[684] = -0.09610865f;
      sa[685] = 0.012218411f;
      sa[686] = -0.13324825f;
      sa[687] = -0.23820221f;
      sa[688] = -0.25069964f;
      sa[689] = -0.25728992f;
      sa[690] = -0.060496762f;
      sa[691] = 0.07645823f;
      sa[692] = -0.23067331f;
      sa[693] = -0.13854466f;
      sa[694] = 0.23498908f;
      sa[695] = -0.18517068f;
      sa[696] = -0.09879382f;
      sa[697] = -0.17025144f;
      sa[698] = -0.21041946f;
      sa[699] = 0.24994734f;
      sa[700] = 0.19942345f;
      sa[701] = 0.16303957f;
      sa[702] = 0.319216f;
      sa[703] = 0.016655201f;
      sa[704] = -0.25257358f;
      sa[705] = -0.005160705f;
      sa[706] = -0.16096272f;
      sa[707] = 0.05024528f;
      sa[708] = 0.044760548f;
      sa[709] = -0.33056918f;
      sa[710] = 0.37296474f;
      sa[711] = -0.039894935f;
      sa[712] = 0.086022705f;
      sa[713] = 0.20585662f;
      sa[714] = 0.20613518f;
      sa[715] = 0.12850499f;
      sa[716] = 0.007957156f;
      sa[717] = 0.080145545f;
      sa[718] = 0.026548728f;
      sa[719] = 0.15870142f;
      sa[720] = -0.08599952f;
      sa[721] = 0.26621482f;
      sa[722] = -0.04692507f;
      sa[723] = 0.1193758f;
      sa[724] = 0.07423562f;
      sa[725] = -0.24941687f;
      sa[726] = -0.18850204f;
      sa[727] = -0.30827287f;
      sa[728] = -0.004711985f;
      sa[729] = -0.0058329743f;
      sa[730] = 0.14092451f;
      sa[731] = -0.33070982f;
      sa[732] = 0.12227694f;
      sa[733] = 0.19633372f;
      sa[734] = -0.15651028f;
      sa[735] = 0.22346221f;
      sa[736] = 0.040499195f;
      sa[737] = 0.25204957f;
      sa[738] = -0.2071605f;
      sa[739] = -0.11798696f;
      sa[740] = -0.29409724f;
      sa[741] = -0.29125616f;
      sa[742] = 0.06563862f;
      sa[743] = -0.031419694f;
      sa[744] = 0.033565097f;
      sa[745] = -0.13181928f;
      sa[746] = 0.033314817f;
      sa[747] = -0.15747158f;
      sa[748] = -0.16738869f;
      sa[749] = -0.1914408f;
      sa[750] = 0.18592231f;
      sa[751] = 0.15909259f;
      sa[752] = -0.04020332f;
      sa[753] = 0.1188302f;
      sa[754] = 0.0037634338f;
      sa[755] = 0.15641676f;
      sa[756] = -0.1929421f;
      sa[757] = 0.20889027f;
      sa[758] = -0.1812498f;
      sa[759] = -0.078676336f;
      sa[760] = -0.09454212f;
      sa[761] = 0.02056474f;
      sa[762] = -0.09025104f;
      sa[763] = 0.10707655f;
      sa[764] = 0.06109243f;
      sa[765] = -0.06688581f;
      sa[766] = -0.23999652f;
      sa[767] = 0.0738327f;
      sa[768] = -0.19718769f;
      sa[769] = -0.30800906f;
      sa[770] = -0.017490014f;
      sa[771] = -0.042096548f;
      sa[772] = 0.022089837f;
      sa[773] = -0.26220086f;
      sa[774] = 0.108088925f;
      sa[775] = 0.29095668f;
      sa[776] = -0.08379722f;
      sa[777] = 0.043803103f;
      sa[778] = 0.15100297f;
      sa[779] = -0.20110798f;
      sa[780] = -0.074799314f;
      sa[781] = -0.027385134f;
      sa[782] = 0.17688592f;
      sa[783] = -0.18616174f;
      sa[784] = -0.21130632f;
      sa[785] = -0.18361098f;
      sa[786] = -0.17571083f;
      sa[787] = -0.3331581f;
      sa[788] = -0.2591667f;
      sa[789] = 0.10871913f;
      sa[790] = -0.05410325f;
      sa[791] = -0.035407074f;
      sa[792] = 0.06566293f;
      sa[793] = -0.09277831f;
      sa[794] = -0.12707317f;
      sa[795] = -0.09902889f;
      sa[796] = 0.21313637f;
      sa[797] = -0.25254986f;
      sa[798] = -0.28886166f;
      sa[799] = -0.13382147f;
      sa[800] = 0.08450131f;
      sa[801] = 0.110410325f;
      sa[802] = 0.2022643f;
      sa[803] = 0.13445796f;
      sa[804] = 0.25898713f;
      sa[805] = 0.26231068f;
      sa[806] = 0.28022778f;
      sa[807] = 0.29125997f;
      sa[808] = -0.004619348f;
      sa[809] = -0.19484714f;
      sa[810] = 0.07062928f;
      sa[811] = 0.09943472f;
      sa[812] = 0.1840152f;
      sa[813] = -0.26037145f;
      sa[814] = 0.08759077f;
      sa[815] = -0.08083988f;
      sa[816] = 0.04733259f;
      sa[817] = -0.25822255f;
      sa[818] = 0.0041475073f;
      sa[819] = -0.05339437f;
      sa[820] = -0.25309017f;
      sa[821] = -0.17845532f;
      sa[822] = -0.28448963f;
      sa[823] = 0.16306655f;
      sa[824] = 0.21009243f;
      sa[825] = 0.39671734f;
      sa[826] = -0.3870514f;
      sa[827] = -0.34098443f;
      sa[828] = 0.12636276f;
      sa[829] = -0.06747213f;
      sa[830] = 0.22523335f;
      sa[831] = 0.2243449f;
      sa[832] = 0.15291837f;
      sa[833] = 0.07516642f;
      sa[834] = 0.20875584f;
      sa[835] = -0.055502653f;
      sa[836] = 0.20246948f;
      sa[837] = -0.11225236f;
      sa[838] = 0.15056625f;
      sa[839] = -0.19335543f;
      sa[840] = 0.19179864f;
      sa[841] = 0.10113953f;
      sa[842] = 0.17848793f;
      sa[843] = 0.06435919f;
      sa[844] = 0.04284996f;
      sa[845] = 0.17477767f;
      sa[846] = -0.2734162f;
      sa[847] = -0.078939885f;
      sa[848] = 0.21233332f;
      sa[849] = 0.25611776f;
      sa[850] = 0.0065066307f;
      sa[851] = 0.123018846f;
      sa[852] = 0.26454815f;
      sa[853] = 0.16538337f;
      sa[854] = 0.17882779f;
      sa[855] = 0.04845694f;
      sa[856] = 0.08479158f;
      sa[857] = -0.15229271f;
      sa[858] = 0.11836507f;
      sa[859] = 0.0472164f;
      sa[860] = 0.35237667f;
      sa[861] = -0.16896515f;
      sa[862] = -0.20043968f;
      sa[863] = -0.04231473f;
      sa[864] = -0.25155953f;
      sa[865] = 0.1919156f;
      sa[866] = -0.22701287f;
      sa[867] = -0.06952237f;
      sa[868] = -0.1980501f;
      sa[869] = 0.16435191f;
      sa[870] = -0.08159957f;
      sa[871] = 0.1080931f;
      sa[872] = 0.15420184f;
      sa[873] = -0.09713086f;
      sa[874] = -0.048877362f;
      sa[875] = -0.25890103f;
      sa[876] = -0.22975133f;
      sa[877] = -0.2338867f;
      sa[878] = -7.56011E-4f;
      sa[879] = 0.1561725f;
      sa[880] = -0.12755455f;
      sa[881] = -0.14571117f;
      sa[882] = 0.24097054f;
      sa[883] = 0.15120926f;
      sa[884] = -0.13401654f;
      sa[885] = -0.14035621f;
      sa[886] = 0.07104305f;
      sa[887] = -0.055278935f;
      sa[888] = -0.09537254f;
      sa[889] = -0.004609478f;
      sa[890] = -0.22312881f;
      sa[891] = 0.42131385f;
      sa[892] = 0.16928285f;
      sa[893] = 0.25712174f;
      sa[894] = 0.029600097f;
      sa[895] = 0.23968342f;
      sa[896] = -0.21592236f;
      sa[897] = 0.22801203f;
      sa[898] = 0.001253903f;
      sa[899] = 0.26513335f;
      sa[900] = -0.06651177f;
      sa[901] = 0.16298017f;
      sa[902] = -0.24215257f;
      sa[903] = -0.17469536f;
      sa[904] = 0.1666864f;
      sa[905] = 0.2367295f;
      sa[906] = -0.2900599f;
      sa[907] = -0.20264499f;
      sa[908] = -0.1990931f;
      sa[909] = 0.072015345f;
      sa[910] = 0.08640146f;
      sa[911] = -0.2477601f;
      sa[912] = -0.022081133f;
      sa[913] = 0.09416692f;
      sa[914] = -0.21874581f;
      sa[915] = 0.05757714f;
      sa[916] = 0.2574503f;
      sa[917] = 0.07318226f;
      sa[918] = 0.10105185f;
      sa[919] = 0.19344701f;
      sa[920] = 0.13586633f;
      sa[921] = -0.08876752f;
      sa[922] = -0.16243342f;
      sa[923] = -0.109947555f;
      sa[924] = -0.083851986f;
      sa[925] = -0.17958765f;
      sa[926] = 0.09369771f;
      sa[927] = 0.0688287f;
      sa[928] = 0.2829756f;
      sa[929] = 0.19835456f;
      sa[930] = 0.23504142f;
      sa[931] = 0.08458118f;
      sa[932] = 0.19681183f;
      sa[933] = -0.03087631f;
      sa[934] = 0.25729865f;
      sa[935] = -0.20262036f;
      sa[936] = 0.05292472f;
      sa[937] = 0.14668564f;
      sa[938] = -0.1789994f;
      sa[939] = -0.0026901239f;
      sa[940] = -0.06108706f;
      sa[941] = -0.3180029f;
      sa[942] = -0.23581843f;
      sa[943] = -0.22350527f;
      sa[944] = -0.23943721f;
      sa[945] = 7.3212053E-4f;
      sa[946] = 0.007118245f;
      sa[947] = 0.2351672f;
      sa[948] = 0.070987426f;
      sa[949] = -0.20496853f;
      sa[950] = 0.078369334f;
      sa[951] = -0.13328166f;
      sa[952] = -0.24413091f;
      sa[953] = -0.23094141f;
      sa[954] = -0.12667772f;
      sa[955] = 0.040558916f;
      sa[956] = -0.034930892f;
      sa[957] = 0.0146730095f;
      sa[958] = 0.08294421f;
      sa[959] = -0.20837241f;
      sa[960] = 0.2199661f;
      sa[961] = -0.13670541f;
      sa[962] = 0.03856048f;
      sa[963] = -0.068001896f;
      sa[964] = -0.22315976f;
      sa[965] = 0.19481646f;
      sa[966] = -0.15464294f;
      sa[967] = -0.3666945f;
      sa[968] = 0.08563205f;
      sa[969] = 0.0150994165f;
      sa[970] = 0.35579425f;
      sa[971] = 0.082700506f;
      sa[972] = -0.11027168f;
      sa[973] = -0.1976658f;
      sa[974] = -0.31873864f;
      sa[975] = -0.20965229f;
      sa[976] = -0.08135655f;
      sa[977] = 0.07229339f;
      sa[978] = -0.073669545f;
      sa[979] = 0.1693748f;
      sa[980] = 0.16506177f;
      sa[981] = -0.19163927f;
      sa[982] = 0.184504f;
      sa[983] = -0.034021158f;
      sa[984] = -0.27835533f;
      sa[985] = 0.07904057f;
      sa[986] = -0.24935935f;
      sa[987] = 0.10316032f;
      sa[988] = 0.14876112f;
      sa[989] = 0.2336277f;
      sa[990] = 0.20595142f;
      sa[991] = -0.20969169f;
      sa[992] = -0.21037532f;
      sa[993] = -0.05591211f;
      sa[994] = -0.1539186f;
      sa[995] = -0.28440347f;
      sa[996] = 0.14059688f;
      sa[997] = 0.20387025f;
      sa[998] = 0.02573181f;
      sa[999] = 0.16067825f;
      sa[1000] = 0.017215226f;
      sa[1001] = 0.22112304f;
      sa[1002] = 0.27067268f;
      sa[1003] = -0.092290826f;
      sa[1004] = 0.19782312f;
      sa[1005] = -0.19982737f;
      sa[1006] = -0.14510356f;
      sa[1007] = -0.016341567f;
      sa[1008] = 0.1462058f;
      sa[1009] = 0.091165625f;
      sa[1010] = 0.12085542f;
      sa[1011] = 0.31369463f;
      sa[1012] = -0.0557364f;
      sa[1013] = 0.11611294f;
      sa[1014] = 0.29258224f;
      sa[1015] = -0.24956867f;
      sa[1016] = 0.22248927f;
      sa[1017] = 0.113659084f;
      sa[1018] = -0.04376604f;
      sa[1019] = 0.0675046f;
      sa[1020] = -0.23288815f;
      sa[1021] = 0.040950913f;
      sa[1022] = 0.2518858f;
      sa[1023] = 0.09923481f;
      sa[1024] = 0.023955926f;
      sa[1025] = 0.14747104f;
      sa[1026] = 0.13810396f;
      sa[1027] = 0.27964535f;
      sa[1028] = 0.31075838f;
      sa[1029] = 0.0028049296f;
      sa[1030] = -0.13267113f;
      sa[1031] = 0.06377652f;
      sa[1032] = -0.14697255f;
      sa[1033] = 0.043235004f;
      sa[1034] = -0.11314499f;
      sa[1035] = -0.28305435f;
      sa[1036] = 0.24930187f;
      sa[1037] = 0.020719826f;
      sa[1038] = -0.24386024f;
      sa[1039] = 0.23327626f;
      sa[1040] = 0.014919365f;
      sa[1041] = 0.10666705f;
      sa[1042] = -0.27491936f;
      sa[1043] = -0.07001884f;
      sa[1044] = 0.30662903f;
      sa[1045] = 0.31076518f;
      sa[1046] = -0.13502043f;
      sa[1047] = -0.09978401f;
      sa[1048] = 0.15486604f;
      sa[1049] = -0.02366374f;
      sa[1050] = 0.097432755f;
      sa[1051] = -0.09776578f;
      sa[1052] = 0.23562196f;
      sa[1053] = 0.2508603f;
      sa[1054] = 0.29238802f;
      sa[1055] = 0.050486054f;
      sa[1056] = 0.2873698f;
      sa[1057] = -0.10735456f;
      sa[1058] = 0.27994746f;
      sa[1059] = -0.084350884f;
      sa[1060] = -0.20442346f;
      sa[1061] = 0.036655407f;
      sa[1062] = 0.059393585f;
      sa[1063] = 0.07870263f;
      sa[1064] = 0.112753525f;
      sa[1065] = -0.022744171f;
      sa[1066] = 0.21863854f;
      sa[1067] = -0.293156f;
      sa[1068] = -0.253382f;
      sa[1069] = 0.27930734f;
      sa[1070] = -0.021104826f;
      sa[1071] = 0.11950346f;
      sa[1072] = -0.20962746f;
      sa[1073] = 0.13343064f;
      sa[1074] = 0.18334998f;
      sa[1075] = -0.13669999f;
      sa[1076] = -0.1440727f;
      sa[1077] = 0.12600435f;
      sa[1078] = -0.04693055f;
      sa[1079] = -0.03707048f;
      sa[1080] = 0.18829885f;
      sa[1081] = 0.11239006f;
      sa[1082] = -0.35536197f;
      sa[1083] = -0.10363153f;
      sa[1084] = 0.2545957f;
      sa[1085] = -0.20570797f;
      sa[1086] = -0.24769665f;
      sa[1087] = -0.33151463f;
      sa[1088] = -0.20138504f;
      sa[1089] = 0.064794675f;
      sa[1090] = -0.28454512f;
      sa[1091] = 0.07807802f;
      sa[1092] = -0.2701407f;
      sa[1093] = -0.2946193f;
      sa[1094] = -0.020422809f;
      sa[1095] = -0.3690416f;
      sa[1096] = 0.011332916f;
      sa[1097] = -0.12052624f;
      sa[1098] = 0.11678093f;
      sa[1099] = -0.060296338f;
      sa[1100] = -0.14017114f;
      sa[1101] = 0.12006431f;
      sa[1102] = -0.16473891f;
      sa[1103] = 0.16608848f;
      sa[1104] = -0.34682807f;
      sa[1105] = -0.13182221f;
      sa[1106] = 0.018840892f;
      sa[1107] = 0.13104956f;
      sa[1108] = -0.23112509f;
      sa[1109] = 0.20355296f;
      sa[1110] = 0.08021314f;
      sa[1111] = -0.36142272f;
      sa[1112] = 0.18207593f;
      sa[1113] = 0.18235879f;
      sa[1114] = 0.069499135f;
      sa[1115] = 0.22862485f;
      sa[1116] = 0.060552295f;
      sa[1117] = -0.1510943f;
      sa[1118] = -0.08796442f;
      sa[1119] = 0.08856625f;
      sa[1120] = 0.20629527f;
      sa[1121] = 0.11953072f;
      sa[1122] = 0.31688547f;
      sa[1123] = 0.31467304f;
      sa[1124] = 0.12451683f;
      sa[1125] = -0.080917574f;
      sa[1126] = 0.24252264f;
      sa[1127] = 0.18197498f;
      sa[1128] = 0.012683451f;
      sa[1129] = -0.070870064f;
      sa[1130] = 0.26312387f;
      sa[1131] = 0.31414855f;
      sa[1132] = -0.099844225f;
      sa[1133] = -0.13934654f;
      sa[1134] = 0.17379314f;
      sa[1135] = -0.12941355f;
      sa[1136] = -0.03754134f;
      sa[1137] = 0.19767168f;
      sa[1138] = -0.04688746f;
      sa[1139] = 0.13034542f;
      sa[1140] = 0.26214525f;
      sa[1141] = -0.19921994f;
      sa[1142] = -0.028845709f;
      sa[1143] = -0.23562665f;
      sa[1144] = -0.28635946f;
      sa[1145] = 0.14243448f;
      sa[1146] = 0.232211f;
      sa[1147] = -0.14576875f;
      sa[1148] = 0.0013163283f;
      sa[1149] = -0.028846882f;
      sa[1150] = -0.283342f;
      sa[1151] = -0.31125095f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_06_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_06_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.239779f;
      sa[1] = -0.06147328f;
      sa[2] = -0.5785154f;
      sa[3] = -1.1045f;
      sa[4] = 0.1182463f;
      sa[5] = 0.3506789f;
      sa[6] = 1.2882003f;
      sa[7] = -0.69819576f;
      sa[8] = -0.9128709f;
      sa[9] = 0.7569794f;
      sa[10] = -0.08169172f;
      sa[11] = 0.4436222f;
      sa[12] = 0.13593008f;
      sa[13] = 0.024050117f;
      sa[14] = -1.3346802f;
      sa[15] = 1.1210601f;
      sa[16] = 1.5764518f;
      sa[17] = -0.49494338f;
      sa[18] = 0.12657061f;
      sa[19] = -0.41143343f;
      sa[20] = 1.1163605f;
      sa[21] = 0.059522964f;
      sa[22] = -0.9322027f;
      sa[23] = 0.74005556f;
      sa[24] = -1.3036709f;
      sa[25] = 0.4799973f;
      sa[26] = -0.2539043f;
      sa[27] = 1.5736289f;
      sa[28] = -1.3138348f;
      sa[29] = -0.40921396f;
      sa[30] = 0.43094942f;
      sa[31] = -0.6065391f;
      sa[32] = -1.079435f;
      sa[33] = -1.520697f;
      sa[34] = 0.07329935f;
      sa[35] = 1.3563726f;
      sa[36] = -0.33974084f;
      sa[37] = -0.048540834f;
      sa[38] = 0.23041871f;
      sa[39] = 0.78941447f;
      sa[40] = -0.76096535f;
      sa[41] = -1.3398966f;
      sa[42] = -0.9593739f;
      sa[43] = -1.4669594f;
      sa[44] = 0.031533092f;
      sa[45] = -1.3228959f;
      sa[46] = 1.1975019f;
      sa[47] = 1.2280265f;
      sa[48] = -1.3477031f;
      sa[49] = -1.0584153f;
      sa[50] = 0.49433786f;
      sa[51] = -0.34799156f;
      sa[52] = 0.7821652f;
      sa[53] = 0.83335364f;
      sa[54] = -0.20463698f;
      sa[55] = 1.1384637f;
      sa[56] = -1.0732892f;
      sa[57] = -1.1041204f;
      sa[58] = 0.08190448f;
      sa[59] = -0.24718381f;
      sa[60] = 1.4707896f;
      sa[61] = -0.61270934f;
      sa[62] = -0.37035522f;
      sa[63] = 0.6605923f;
      sa[64] = 1.3870798f;
      sa[65] = -0.66499925f;
      sa[66] = 0.6345123f;
      sa[67] = 1.59025f;
      sa[68] = 0.68198f;
      sa[69] = -1.091116f;
      sa[70] = -1.4484118f;
      sa[71] = -0.43068415f;
      sa[72] = -1.2912477f;
      sa[73] = 1.299281f;
      sa[74] = 1.345005f;
      sa[75] = -0.27115384f;
      sa[76] = 0.9458099f;
      sa[77] = 0.4704377f;
      sa[78] = -1.3821638f;
      sa[79] = 0.98250943f;
      sa[80] = -0.79901284f;
      sa[81] = 0.23003827f;
      sa[82] = 0.867005f;
      sa[83] = -0.67162687f;
      sa[84] = -1.5075686f;
      sa[85] = -1.1766566f;
      sa[86] = 0.43032598f;
      sa[87] = 1.1500748f;
      sa[88] = -1.5394981f;
      sa[89] = -0.67405003f;
      sa[90] = -0.96938556f;
      sa[91] = 1.4620878f;
      sa[92] = -0.2892278f;
      sa[93] = 0.2625472f;
      sa[94] = -1.4970834f;
      sa[95] = -0.17113289f;
      sa[96] = -0.97441643f;
      sa[97] = 0.18472947f;
      sa[98] = -0.07238708f;
      sa[99] = 0.38988653f;
      sa[100] = -1.1988956f;
      sa[101] = -0.62968284f;
      sa[102] = 1.1762909f;
      sa[103] = 0.051510304f;
      sa[104] = -0.22932728f;
      sa[105] = -0.82052547f;
      sa[106] = 1.3397921f;
      sa[107] = 1.2652807f;
      sa[108] = 0.9191065f;
      sa[109] = 0.25317347f;
      sa[110] = 0.8353454f;
      sa[111] = -0.856491f;
      sa[112] = -1.1422818f;
      sa[113] = 0.29944777f;
      sa[114] = 0.038780153f;
      sa[115] = -0.40934047f;
      sa[116] = 1.12661f;
      sa[117] = 0.014100917f;
      sa[118] = -1.3783759f;
      sa[119] = -0.68300176f;
      sa[120] = -0.35823175f;
      sa[121] = 1.0007098f;
      sa[122] = -0.0658801f;
      sa[123] = 0.12514907f;
      sa[124] = -0.66702455f;
      sa[125] = 0.7624844f;
      sa[126] = -1.1245495f;
      sa[127] = 0.34099853f;
      sa[128] = -0.9607269f;
      sa[129] = 0.8064773f;
      sa[130] = -0.37293056f;
      sa[131] = 0.86166704f;
      sa[132] = 0.42576978f;
      sa[133] = 0.7665882f;
      sa[134] = 0.6652711f;
      sa[135] = -0.97124887f;
      sa[136] = 0.5856747f;
      sa[137] = -0.5841867f;
      sa[138] = -0.051652033f;
      sa[139] = 1.1737664f;
      sa[140] = -0.55955434f;
      sa[141] = -0.066116676f;
      sa[142] = 0.3007687f;
      sa[143] = -0.73421896f;
      sa[144] = 0.99728525f;
      sa[145] = -0.7444274f;
      sa[146] = 0.08316822f;
      sa[147] = -0.21420598f;
      sa[148] = -0.8061723f;
      sa[149] = 1.218312f;
      sa[150] = -1.1330371f;
      sa[151] = -1.6943659f;
      sa[152] = 1.6104542f;
      sa[153] = -0.52005374f;
      sa[154] = 1.4413042f;
      sa[155] = -1.4248805f;
      sa[156] = -1.6062895f;
      sa[157] = -1.0985463f;
      sa[158] = -0.012795497f;
      sa[159] = -0.64705646f;
      sa[160] = 1.3593637f;
      sa[161] = -1.178291f;
      sa[162] = 1.6314207f;
      sa[163] = -0.76081604f;
      sa[164] = 0.7254494f;
      sa[165] = -0.5389526f;
      sa[166] = 1.2761978f;
      sa[167] = -1.3802884f;
      sa[168] = 1.0346727f;
      sa[169] = -1.5304222f;
      sa[170] = 1.0792418f;
      sa[171] = 0.8678921f;
      sa[172] = 1.5550312f;
      sa[173] = 1.5501728f;
      sa[174] = -0.07085943f;
      sa[175] = 0.039667495f;
      sa[176] = -0.8033186f;
      sa[177] = -0.014502854f;
      sa[178] = -1.1149261f;
      sa[179] = -0.09530247f;
      sa[180] = -1.2089356f;
      sa[181] = -0.971603f;
      sa[182] = 0.28493595f;
      sa[183] = -0.97919595f;
      sa[184] = 1.5271552f;
      sa[185] = 1.3222731f;
      sa[186] = -0.48396066f;
      sa[187] = -0.8955689f;
      sa[188] = -0.5715921f;
      sa[189] = -0.77503604f;
      sa[190] = -1.4563448f;
      sa[191] = -1.0606995f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_06 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_06_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_06_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_06_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_06_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_06_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


