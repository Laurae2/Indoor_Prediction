/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:47:32.292+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_05 > h2o_nn_32x6_Tanh_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_05", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3630248847045509904L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_05_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_05_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_05_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_05_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_05_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_05_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0024148395196519528;
      sa[1] = 0.022403585089435463;
      sa[2] = -0.08223896252977113;
      sa[3] = -0.06277956768935432;
      sa[4] = -0.019575743744043743;
      sa[5] = 0.028093654734313835;
      sa[6] = 0.08354913380709877;
      sa[7] = -0.02234450147127326;
      sa[8] = -0.005949896068453222;
      sa[9] = 0.021613500207555165;
      sa[10] = -0.001853660505768749;
      sa[11] = 0.02669782687323808;
      sa[12] = 0.00732597955061098;
      sa[13] = 0.02045717515229297;
      sa[14] = -0.02944571498335299;
      sa[15] = 0.00891166069403537;
      sa[16] = 0.030833492358022834;
      sa[17] = -0.0011971294647184498;
      sa[18] = -0.08286214297279991;
      sa[19] = 0.01678133819715836;
      sa[20] = 0.06921799845434327;
      sa[21] = -0.007784920322660042;
      sa[22] = -0.04562520910756872;
      sa[23] = 0.018067570621076105;
      sa[24] = -0.05002741031898676;
      sa[25] = 0.04404268467386542;
      sa[26] = -0.022351252626183645;
      sa[27] = 0.05924384350364928;
      sa[28] = -0.04325887964456437;
      sa[29] = 0.00466750107778171;
      sa[30] = 0.0344236817105557;
      sa[31] = 0.015642863574899694;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_05_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.03228160913216354;
      sa[1] = -0.02665072980450483;
      sa[2] = -0.0671101378921247;
      sa[3] = 0.013958602356836524;
      sa[4] = -0.039878912586179094;
    }
  }
}
class h2o_nn_32x6_Tanh_05_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_05_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_05_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.07120085f;
      sa[1] = 0.22953929f;
      sa[2] = 0.13983564f;
      sa[3] = 0.1735296f;
      sa[4] = -0.16613393f;
      sa[5] = -0.16375841f;
      sa[6] = -0.031777877f;
      sa[7] = 0.22656721f;
      sa[8] = 0.1621192f;
      sa[9] = -0.16961177f;
      sa[10] = -0.14940135f;
      sa[11] = -0.1721694f;
      sa[12] = 0.078168124f;
      sa[13] = -0.24295145f;
      sa[14] = -0.155788f;
      sa[15] = -0.019318614f;
      sa[16] = 0.079262756f;
      sa[17] = 0.12949704f;
      sa[18] = -0.21599227f;
      sa[19] = 0.15255202f;
      sa[20] = 0.21917765f;
      sa[21] = -0.29956967f;
      sa[22] = 0.23075324f;
      sa[23] = -0.18577015f;
      sa[24] = 0.2331328f;
      sa[25] = 0.1629084f;
      sa[26] = -0.2656802f;
      sa[27] = 0.25107452f;
      sa[28] = 0.22035916f;
      sa[29] = -0.2714623f;
      sa[30] = -0.16256371f;
      sa[31] = 0.130052f;
      sa[32] = 0.18969093f;
      sa[33] = -0.25318125f;
      sa[34] = 0.060704317f;
      sa[35] = -0.110254705f;
      sa[36] = 0.083853155f;
      sa[37] = 0.2736963f;
      sa[38] = -0.10609592f;
      sa[39] = 0.14026457f;
      sa[40] = 0.021276472f;
      sa[41] = -0.07903271f;
      sa[42] = -0.14882825f;
      sa[43] = 0.022863347f;
      sa[44] = 0.23513864f;
      sa[45] = -0.24777211f;
      sa[46] = 0.030796785f;
      sa[47] = 0.0058670687f;
      sa[48] = 0.22327559f;
      sa[49] = 0.2478384f;
      sa[50] = 0.18526772f;
      sa[51] = -0.27639925f;
      sa[52] = -0.07276918f;
      sa[53] = 0.19822252f;
      sa[54] = 0.20255566f;
      sa[55] = 0.03230038f;
      sa[56] = -0.15477824f;
      sa[57] = -0.27426362f;
      sa[58] = 0.2535108f;
      sa[59] = -0.17965968f;
      sa[60] = -0.2691524f;
      sa[61] = 0.16405445f;
      sa[62] = 0.12666474f;
      sa[63] = 0.012019442f;
      sa[64] = 0.14150771f;
      sa[65] = 0.12145399f;
      sa[66] = 0.024391286f;
      sa[67] = 0.14192091f;
      sa[68] = -0.11360181f;
      sa[69] = 0.12852688f;
      sa[70] = -0.104734935f;
      sa[71] = 0.31109515f;
      sa[72] = -0.13130572f;
      sa[73] = 0.21491474f;
      sa[74] = -0.16720177f;
      sa[75] = 0.090195574f;
      sa[76] = -0.2066434f;
      sa[77] = -0.072670095f;
      sa[78] = -0.07324805f;
      sa[79] = 0.11960394f;
      sa[80] = -0.20266744f;
      sa[81] = -0.1050183f;
      sa[82] = -0.011279557f;
      sa[83] = 0.12263762f;
      sa[84] = -0.030094242f;
      sa[85] = -0.17870732f;
      sa[86] = 0.13613589f;
      sa[87] = 0.22911651f;
      sa[88] = 0.2570762f;
      sa[89] = 0.07133547f;
      sa[90] = -0.13139726f;
      sa[91] = 0.15970227f;
      sa[92] = 0.087890975f;
      sa[93] = -0.21373975f;
      sa[94] = -0.17989619f;
      sa[95] = -0.23872375f;
      sa[96] = 0.12020811f;
      sa[97] = 0.05431416f;
      sa[98] = 0.17437917f;
      sa[99] = -0.08375018f;
      sa[100] = -0.061089523f;
      sa[101] = -0.1926788f;
      sa[102] = -0.2560837f;
      sa[103] = -0.09131772f;
      sa[104] = -0.013370796f;
      sa[105] = -0.15913843f;
      sa[106] = -0.19000737f;
      sa[107] = 0.14199477f;
      sa[108] = 0.1426881f;
      sa[109] = -0.19957367f;
      sa[110] = -0.14862694f;
      sa[111] = 0.13532741f;
      sa[112] = 0.10754059f;
      sa[113] = 0.021206303f;
      sa[114] = -0.1598025f;
      sa[115] = -0.056622468f;
      sa[116] = -0.24847771f;
      sa[117] = 0.0043138633f;
      sa[118] = -0.23574664f;
      sa[119] = -0.168503f;
      sa[120] = 0.19286048f;
      sa[121] = 0.20282884f;
      sa[122] = 0.2788576f;
      sa[123] = 0.24308309f;
      sa[124] = 0.27953285f;
      sa[125] = 0.2886145f;
      sa[126] = -0.27836737f;
      sa[127] = -0.16391563f;
      sa[128] = 0.058993913f;
      sa[129] = 0.1384304f;
      sa[130] = -0.12478596f;
      sa[131] = 0.2935389f;
      sa[132] = 0.19209735f;
      sa[133] = -0.2676816f;
      sa[134] = 0.06591718f;
      sa[135] = -0.17078799f;
      sa[136] = -0.27027088f;
      sa[137] = -0.03394625f;
      sa[138] = 0.10092601f;
      sa[139] = -0.08893624f;
      sa[140] = -0.092643134f;
      sa[141] = -0.16075458f;
      sa[142] = 0.1909238f;
      sa[143] = -0.23823158f;
      sa[144] = 0.26022094f;
      sa[145] = -0.12722228f;
      sa[146] = -0.24328563f;
      sa[147] = 0.18562049f;
      sa[148] = 0.16317108f;
      sa[149] = 0.18310013f;
      sa[150] = 0.27927765f;
      sa[151] = -0.23449057f;
      sa[152] = 0.025711734f;
      sa[153] = 0.27554184f;
      sa[154] = 0.23397872f;
      sa[155] = -0.16535355f;
      sa[156] = 0.122642934f;
      sa[157] = -0.17972773f;
      sa[158] = 0.08376678f;
      sa[159] = 0.090391695f;
      sa[160] = 0.09217143f;
      sa[161] = 0.22603126f;
      sa[162] = -0.17070794f;
      sa[163] = -0.05261669f;
      sa[164] = 0.22284909f;
      sa[165] = -0.031320326f;
      sa[166] = -0.06645867f;
      sa[167] = -0.07771443f;
      sa[168] = 0.18394291f;
      sa[169] = 0.30113193f;
      sa[170] = 0.01390307f;
      sa[171] = -0.026042316f;
      sa[172] = -0.05922742f;
      sa[173] = -0.13730386f;
      sa[174] = -0.01586431f;
      sa[175] = -0.22525223f;
      sa[176] = -0.020761222f;
      sa[177] = -0.026516594f;
      sa[178] = -0.05331478f;
      sa[179] = 0.07221115f;
      sa[180] = -0.06382733f;
      sa[181] = -0.2636701f;
      sa[182] = -0.1144716f;
      sa[183] = 0.041256316f;
      sa[184] = 0.28619674f;
      sa[185] = 0.16579086f;
      sa[186] = -0.28612345f;
      sa[187] = 0.09110989f;
      sa[188] = -0.052648507f;
      sa[189] = 0.23153916f;
      sa[190] = 0.061675034f;
      sa[191] = -0.054223463f;
      sa[192] = -0.1196728f;
      sa[193] = 0.21957237f;
      sa[194] = 0.075101815f;
      sa[195] = 0.2662176f;
      sa[196] = 0.2540965f;
      sa[197] = -0.0066972724f;
      sa[198] = 0.119861886f;
      sa[199] = -0.06437075f;
      sa[200] = 0.029678365f;
      sa[201] = -0.2512936f;
      sa[202] = 0.13095853f;
      sa[203] = -0.0036069637f;
      sa[204] = -0.15151604f;
      sa[205] = 0.23121348f;
      sa[206] = 0.22504728f;
      sa[207] = 0.17340921f;
      sa[208] = -0.24325691f;
      sa[209] = -0.0615464f;
      sa[210] = -0.26262945f;
      sa[211] = -0.22805776f;
      sa[212] = 0.24952088f;
      sa[213] = -0.23527877f;
      sa[214] = -0.0992411f;
      sa[215] = 0.0427517f;
      sa[216] = 0.08855804f;
      sa[217] = 0.15318808f;
      sa[218] = -0.17685753f;
      sa[219] = 0.18816276f;
      sa[220] = -0.19033179f;
      sa[221] = 0.04782075f;
      sa[222] = 0.22498706f;
      sa[223] = 0.07861362f;
      sa[224] = 0.09772511f;
      sa[225] = 0.28161794f;
      sa[226] = -0.21587141f;
      sa[227] = 0.26483378f;
      sa[228] = 0.12702404f;
      sa[229] = 0.089686856f;
      sa[230] = 0.2545498f;
      sa[231] = -0.22394736f;
      sa[232] = -0.25889936f;
      sa[233] = 0.06003369f;
      sa[234] = 0.1865851f;
      sa[235] = -0.30326697f;
      sa[236] = -0.010845885f;
      sa[237] = -0.18918903f;
      sa[238] = -0.18890761f;
      sa[239] = 0.162089f;
      sa[240] = -3.7048702E-4f;
      sa[241] = -0.22221875f;
      sa[242] = -0.039767344f;
      sa[243] = -0.23126554f;
      sa[244] = -0.18304136f;
      sa[245] = -0.10339555f;
      sa[246] = -0.24375916f;
      sa[247] = -0.030221907f;
      sa[248] = 0.26834607f;
      sa[249] = 0.2531216f;
      sa[250] = -0.20972382f;
      sa[251] = -0.10879026f;
      sa[252] = -0.2780868f;
      sa[253] = -0.27955416f;
      sa[254] = -0.23522323f;
      sa[255] = 0.20911151f;
      sa[256] = -0.17635047f;
      sa[257] = 0.25423524f;
      sa[258] = -0.23449087f;
      sa[259] = -0.11990226f;
      sa[260] = -0.21783282f;
      sa[261] = -0.10315033f;
      sa[262] = -0.1560306f;
      sa[263] = 0.2762112f;
      sa[264] = -0.15378958f;
      sa[265] = 0.046403233f;
      sa[266] = -0.2623443f;
      sa[267] = -0.23147672f;
      sa[268] = 0.09993109f;
      sa[269] = -0.16808522f;
      sa[270] = -0.0027308657f;
      sa[271] = 0.1575735f;
      sa[272] = -0.09891262f;
      sa[273] = -0.12801398f;
      sa[274] = 0.11056519f;
      sa[275] = -0.012041125f;
      sa[276] = 0.059928488f;
      sa[277] = -0.23182121f;
      sa[278] = -0.12044454f;
      sa[279] = 0.1661046f;
      sa[280] = -0.17937487f;
      sa[281] = 0.25278562f;
      sa[282] = -0.10982358f;
      sa[283] = -0.060132246f;
      sa[284] = 0.033569448f;
      sa[285] = -0.14198357f;
      sa[286] = 0.24555004f;
      sa[287] = 0.12522678f;
      sa[288] = -0.20931552f;
      sa[289] = -0.14583887f;
      sa[290] = -0.0784155f;
      sa[291] = -0.0065127416f;
      sa[292] = 0.11912456f;
      sa[293] = -0.09260131f;
      sa[294] = 0.06914527f;
      sa[295] = 0.11369582f;
      sa[296] = 0.18778992f;
      sa[297] = 0.19895671f;
      sa[298] = -0.009232401f;
      sa[299] = -0.053992014f;
      sa[300] = -0.0025683474f;
      sa[301] = -0.05937496f;
      sa[302] = 0.15227145f;
      sa[303] = 0.032397594f;
      sa[304] = -0.18062621f;
      sa[305] = -0.015276945f;
      sa[306] = 0.18759687f;
      sa[307] = -0.1297851f;
      sa[308] = 0.086093456f;
      sa[309] = 0.14630683f;
      sa[310] = 0.2730834f;
      sa[311] = 0.2933747f;
      sa[312] = -0.17234114f;
      sa[313] = -0.14587756f;
      sa[314] = -0.15238875f;
      sa[315] = 0.01920992f;
      sa[316] = -0.014499431f;
      sa[317] = -0.077370994f;
      sa[318] = 0.09020032f;
      sa[319] = 0.2765967f;
      sa[320] = -0.078113906f;
      sa[321] = 0.118339695f;
      sa[322] = 0.22224578f;
      sa[323] = -0.13941728f;
      sa[324] = 0.024920758f;
      sa[325] = 0.27742052f;
      sa[326] = -0.29738483f;
      sa[327] = 0.031305857f;
      sa[328] = -0.059381224f;
      sa[329] = 0.23830692f;
      sa[330] = -0.17388281f;
      sa[331] = -0.011275326f;
      sa[332] = -0.20908299f;
      sa[333] = 0.10087317f;
      sa[334] = -0.08468683f;
      sa[335] = 0.23615956f;
      sa[336] = -0.14954662f;
      sa[337] = -0.14328936f;
      sa[338] = 0.2606266f;
      sa[339] = -0.20859155f;
      sa[340] = -0.30685896f;
      sa[341] = -0.2654107f;
      sa[342] = 0.16364524f;
      sa[343] = -0.09403987f;
      sa[344] = -0.16294451f;
      sa[345] = 0.18840815f;
      sa[346] = 0.19405858f;
      sa[347] = -0.17546365f;
      sa[348] = 0.23463695f;
      sa[349] = -0.28344253f;
      sa[350] = -0.22997203f;
      sa[351] = 0.097334035f;
      sa[352] = 0.19039744f;
      sa[353] = -0.03236241f;
      sa[354] = 0.09009174f;
      sa[355] = 0.107952215f;
      sa[356] = -0.12874396f;
      sa[357] = 0.22168839f;
      sa[358] = -0.28249836f;
      sa[359] = 0.020173239f;
      sa[360] = 0.09980084f;
      sa[361] = -0.02939669f;
      sa[362] = -0.1688964f;
      sa[363] = 0.1861683f;
      sa[364] = -0.11550414f;
      sa[365] = -0.20238571f;
      sa[366] = -4.5823245E-4f;
      sa[367] = -0.27446952f;
      sa[368] = -0.1447516f;
      sa[369] = 0.2522845f;
      sa[370] = -0.1990288f;
      sa[371] = 0.103918806f;
      sa[372] = -0.0036090533f;
      sa[373] = 0.28195736f;
      sa[374] = -0.12440728f;
      sa[375] = -0.26731226f;
      sa[376] = -0.28054655f;
      sa[377] = -0.21445572f;
      sa[378] = 0.28731424f;
      sa[379] = 0.08044047f;
      sa[380] = -0.099638715f;
      sa[381] = -0.08462587f;
      sa[382] = -0.030198319f;
      sa[383] = -0.10112681f;
      sa[384] = -0.15846518f;
      sa[385] = 0.09097156f;
      sa[386] = -0.23100439f;
      sa[387] = -0.172548f;
      sa[388] = 0.092784315f;
      sa[389] = 0.004811036f;
      sa[390] = 0.0059766f;
      sa[391] = -0.0858789f;
      sa[392] = 0.20026362f;
      sa[393] = 0.18036032f;
      sa[394] = -0.019201364f;
      sa[395] = 0.3001369f;
      sa[396] = 0.28603306f;
      sa[397] = -0.2550009f;
      sa[398] = 0.11046245f;
      sa[399] = 0.058695707f;
      sa[400] = 0.18227714f;
      sa[401] = 0.24514341f;
      sa[402] = -0.124302156f;
      sa[403] = 0.07651383f;
      sa[404] = 0.24358863f;
      sa[405] = -0.23474203f;
      sa[406] = -0.06714618f;
      sa[407] = 0.14262035f;
      sa[408] = -0.19557254f;
      sa[409] = -0.22655715f;
      sa[410] = -0.10686914f;
      sa[411] = 0.16937937f;
      sa[412] = -0.13443488f;
      sa[413] = 0.08544684f;
      sa[414] = 0.1508194f;
      sa[415] = 0.26852614f;
      sa[416] = -0.15690011f;
      sa[417] = 0.040051453f;
      sa[418] = 0.0045176824f;
      sa[419] = 0.2738623f;
      sa[420] = 0.19035144f;
      sa[421] = 0.24308749f;
      sa[422] = 0.2468352f;
      sa[423] = -0.022821005f;
      sa[424] = 0.11886598f;
      sa[425] = -0.0474156f;
      sa[426] = -0.2588899f;
      sa[427] = 0.21037187f;
      sa[428] = -0.05083098f;
      sa[429] = -0.124022745f;
      sa[430] = 0.14534982f;
      sa[431] = -0.028237032f;
      sa[432] = -0.025292316f;
      sa[433] = 0.12856606f;
      sa[434] = 0.23589802f;
      sa[435] = 0.05887975f;
      sa[436] = -0.25290996f;
      sa[437] = -0.23702124f;
      sa[438] = 0.0032518713f;
      sa[439] = -0.018126633f;
      sa[440] = 0.32576966f;
      sa[441] = -0.30393767f;
      sa[442] = 0.08629227f;
      sa[443] = 0.050279126f;
      sa[444] = -0.20793729f;
      sa[445] = 0.06163899f;
      sa[446] = 0.21962787f;
      sa[447] = 0.06103474f;
      sa[448] = 0.17696637f;
      sa[449] = 0.2219765f;
      sa[450] = -0.0878281f;
      sa[451] = 0.07609836f;
      sa[452] = 0.17033647f;
      sa[453] = -0.05102586f;
      sa[454] = -0.15526645f;
      sa[455] = -0.05872155f;
      sa[456] = -0.06255701f;
      sa[457] = 0.08646841f;
      sa[458] = -0.20164305f;
      sa[459] = 0.24658665f;
      sa[460] = 0.21196665f;
      sa[461] = 0.2689727f;
      sa[462] = 0.05254546f;
      sa[463] = 0.2073873f;
      sa[464] = -0.2876701f;
      sa[465] = 0.21761662f;
      sa[466] = -0.0027501998f;
      sa[467] = 0.12511748f;
      sa[468] = 0.13434306f;
      sa[469] = 0.29188466f;
      sa[470] = 0.1616561f;
      sa[471] = 0.0572021f;
      sa[472] = 0.010852987f;
      sa[473] = -0.09552949f;
      sa[474] = -0.009546422f;
      sa[475] = 0.090557724f;
      sa[476] = 0.27982584f;
      sa[477] = -0.18762606f;
      sa[478] = 0.087247625f;
      sa[479] = -0.14314415f;
      sa[480] = -0.27967355f;
      sa[481] = -0.18835689f;
      sa[482] = -0.23785603f;
      sa[483] = 0.20099129f;
      sa[484] = 0.21409106f;
      sa[485] = 0.10093469f;
      sa[486] = -0.015420417f;
      sa[487] = -0.18149377f;
      sa[488] = -0.18365303f;
      sa[489] = 0.07781267f;
      sa[490] = -0.00409974f;
      sa[491] = -0.2293271f;
      sa[492] = 0.18365766f;
      sa[493] = 0.23310542f;
      sa[494] = -0.21011272f;
      sa[495] = 0.15827818f;
      sa[496] = 0.002118651f;
      sa[497] = 0.06512763f;
      sa[498] = 0.17086497f;
      sa[499] = 0.16354686f;
      sa[500] = -0.07008878f;
      sa[501] = 0.08274314f;
      sa[502] = 0.23155813f;
      sa[503] = 0.037957963f;
      sa[504] = -0.20093796f;
      sa[505] = -0.22580233f;
      sa[506] = 0.1914425f;
      sa[507] = -0.08197465f;
      sa[508] = 0.07171469f;
      sa[509] = 0.19372644f;
      sa[510] = 0.14617923f;
      sa[511] = -0.009439529f;
      sa[512] = 0.018847503f;
      sa[513] = -0.081455804f;
      sa[514] = 0.24479404f;
      sa[515] = -0.23059505f;
      sa[516] = 0.00565651f;
      sa[517] = 0.067329615f;
      sa[518] = 0.11901872f;
      sa[519] = -0.107701816f;
      sa[520] = 0.20135465f;
      sa[521] = 0.13768055f;
      sa[522] = 0.09118153f;
      sa[523] = 0.21130595f;
      sa[524] = 0.1634558f;
      sa[525] = 0.13902946f;
      sa[526] = -0.01935668f;
      sa[527] = -0.10945085f;
      sa[528] = 0.0073764836f;
      sa[529] = 0.118795514f;
      sa[530] = -0.16737121f;
      sa[531] = 0.07164385f;
      sa[532] = 0.11335144f;
      sa[533] = 0.09214377f;
      sa[534] = 0.10015701f;
      sa[535] = -0.113774724f;
      sa[536] = 0.081200324f;
      sa[537] = -0.20691895f;
      sa[538] = 0.22111796f;
      sa[539] = 0.29147652f;
      sa[540] = -0.22840391f;
      sa[541] = -0.1498667f;
      sa[542] = -0.06376063f;
      sa[543] = -0.24428467f;
      sa[544] = 0.14425796f;
      sa[545] = 0.10552197f;
      sa[546] = 0.082512915f;
      sa[547] = 0.17715845f;
      sa[548] = 0.08015595f;
      sa[549] = 0.1619836f;
      sa[550] = -2.4469776E-4f;
      sa[551] = -0.109130986f;
      sa[552] = 0.037707817f;
      sa[553] = -0.05298152f;
      sa[554] = -0.13816477f;
      sa[555] = -0.1442247f;
      sa[556] = -0.17276749f;
      sa[557] = -0.2119095f;
      sa[558] = -0.1994944f;
      sa[559] = 0.11424043f;
      sa[560] = -0.29737702f;
      sa[561] = -0.09407369f;
      sa[562] = 0.18307748f;
      sa[563] = -0.08505571f;
      sa[564] = 0.2592955f;
      sa[565] = 0.040060516f;
      sa[566] = 0.24541365f;
      sa[567] = -0.012366035f;
      sa[568] = -0.08183694f;
      sa[569] = 0.01673806f;
      sa[570] = -0.026500696f;
      sa[571] = -0.07370886f;
      sa[572] = -0.11161245f;
      sa[573] = 0.10316468f;
      sa[574] = 0.23709059f;
      sa[575] = -0.23739144f;
      sa[576] = -0.06664053f;
      sa[577] = 0.049164437f;
      sa[578] = 0.10407065f;
      sa[579] = -0.07274286f;
      sa[580] = 0.11188828f;
      sa[581] = -0.11286869f;
      sa[582] = 0.10481239f;
      sa[583] = 0.03956858f;
      sa[584] = 0.14085911f;
      sa[585] = 0.19324653f;
      sa[586] = -0.2095214f;
      sa[587] = -0.1189833f;
      sa[588] = 0.093592815f;
      sa[589] = 0.14358789f;
      sa[590] = -0.004063028f;
      sa[591] = 0.058797486f;
      sa[592] = -0.289188f;
      sa[593] = -0.16887583f;
      sa[594] = -0.08208293f;
      sa[595] = -0.020937586f;
      sa[596] = 0.27927715f;
      sa[597] = 0.006545756f;
      sa[598] = 0.23184788f;
      sa[599] = 0.05767689f;
      sa[600] = -0.2801171f;
      sa[601] = 0.21369858f;
      sa[602] = -0.07532956f;
      sa[603] = 0.27314323f;
      sa[604] = 0.24987666f;
      sa[605] = 0.1990787f;
      sa[606] = 0.22899425f;
      sa[607] = 0.09639746f;
      sa[608] = -0.033532333f;
      sa[609] = 0.073207684f;
      sa[610] = 0.108480565f;
      sa[611] = -0.06086741f;
      sa[612] = -0.079779305f;
      sa[613] = 0.0860087f;
      sa[614] = 0.048479166f;
      sa[615] = 0.023711054f;
      sa[616] = 0.042297076f;
      sa[617] = -0.29414845f;
      sa[618] = -0.1619738f;
      sa[619] = -0.17452288f;
      sa[620] = -0.021367725f;
      sa[621] = -0.2306871f;
      sa[622] = -0.29277864f;
      sa[623] = -0.2941556f;
      sa[624] = -0.052468773f;
      sa[625] = 0.2257309f;
      sa[626] = -0.0162103f;
      sa[627] = 0.23797056f;
      sa[628] = -0.27607554f;
      sa[629] = -0.06622537f;
      sa[630] = -0.13070254f;
      sa[631] = 0.19299151f;
      sa[632] = 0.093857564f;
      sa[633] = -0.15965825f;
      sa[634] = -0.21179758f;
      sa[635] = 0.15197127f;
      sa[636] = -0.20481741f;
      sa[637] = -0.04194911f;
      sa[638] = -0.09116663f;
      sa[639] = -0.07564684f;
      sa[640] = -0.1366602f;
      sa[641] = -0.28388786f;
      sa[642] = 0.17570877f;
      sa[643] = -0.30555826f;
      sa[644] = -0.087241f;
      sa[645] = -0.1950697f;
      sa[646] = 0.2923987f;
      sa[647] = -0.23183903f;
      sa[648] = -0.036605153f;
      sa[649] = -0.04579571f;
      sa[650] = 0.070995264f;
      sa[651] = -0.10625202f;
      sa[652] = 0.053252153f;
      sa[653] = -0.16474454f;
      sa[654] = -0.16535592f;
      sa[655] = -0.17586505f;
      sa[656] = 0.084615335f;
      sa[657] = 0.12648614f;
      sa[658] = -0.23442283f;
      sa[659] = -0.2229308f;
      sa[660] = -0.25501847f;
      sa[661] = -0.12599921f;
      sa[662] = -0.2879708f;
      sa[663] = 0.13223714f;
      sa[664] = -0.1556242f;
      sa[665] = 0.27606136f;
      sa[666] = -0.03130583f;
      sa[667] = -0.22128095f;
      sa[668] = 0.22921084f;
      sa[669] = -0.1529676f;
      sa[670] = 0.109933324f;
      sa[671] = 0.024658011f;
      sa[672] = -0.26441234f;
      sa[673] = 0.16851392f;
      sa[674] = 0.2186921f;
      sa[675] = -0.25039348f;
      sa[676] = -0.11526104f;
      sa[677] = -0.22539634f;
      sa[678] = 0.16627079f;
      sa[679] = -0.09880605f;
      sa[680] = 0.048137613f;
      sa[681] = 0.07857305f;
      sa[682] = 0.06579068f;
      sa[683] = -0.092526965f;
      sa[684] = -0.057068247f;
      sa[685] = 0.02001587f;
      sa[686] = -0.15501754f;
      sa[687] = -0.20710847f;
      sa[688] = -0.28320134f;
      sa[689] = -0.23911947f;
      sa[690] = -0.036192015f;
      sa[691] = 0.09116982f;
      sa[692] = -0.18541509f;
      sa[693] = -0.17622215f;
      sa[694] = 0.26308668f;
      sa[695] = -0.026685575f;
      sa[696] = -0.08474124f;
      sa[697] = -0.13783737f;
      sa[698] = -0.1690736f;
      sa[699] = 0.28774938f;
      sa[700] = 0.15509395f;
      sa[701] = 0.10596753f;
      sa[702] = 0.19474225f;
      sa[703] = -0.03918726f;
      sa[704] = -0.26437438f;
      sa[705] = -0.047587495f;
      sa[706] = -0.13959776f;
      sa[707] = 0.009279609f;
      sa[708] = 0.0072706016f;
      sa[709] = -0.27063113f;
      sa[710] = 0.2647107f;
      sa[711] = -0.10444994f;
      sa[712] = 0.031260874f;
      sa[713] = 0.12840226f;
      sa[714] = 0.17511751f;
      sa[715] = 0.07380719f;
      sa[716] = 0.06162037f;
      sa[717] = 0.18657143f;
      sa[718] = -0.06854431f;
      sa[719] = 0.07519081f;
      sa[720] = -0.2450656f;
      sa[721] = 0.22298837f;
      sa[722] = -0.13092327f;
      sa[723] = 0.004423902f;
      sa[724] = 0.06768447f;
      sa[725] = -0.27480778f;
      sa[726] = -0.19767858f;
      sa[727] = -0.26560318f;
      sa[728] = -0.11253049f;
      sa[729] = -0.028878514f;
      sa[730] = 0.095946915f;
      sa[731] = -0.27039814f;
      sa[732] = 0.16922657f;
      sa[733] = 0.2141495f;
      sa[734] = -0.13044111f;
      sa[735] = 0.2870175f;
      sa[736] = -0.021321585f;
      sa[737] = 0.15977603f;
      sa[738] = -0.1618551f;
      sa[739] = -0.30645138f;
      sa[740] = -0.26811126f;
      sa[741] = -0.2771796f;
      sa[742] = 0.09400006f;
      sa[743] = 0.039370134f;
      sa[744] = 0.046567813f;
      sa[745] = -0.24164946f;
      sa[746] = 0.114437595f;
      sa[747] = -0.14597587f;
      sa[748] = -0.14752777f;
      sa[749] = -0.17488845f;
      sa[750] = 0.18931822f;
      sa[751] = 0.24257152f;
      sa[752] = -0.040809132f;
      sa[753] = 0.17518799f;
      sa[754] = 0.020989422f;
      sa[755] = 0.19134645f;
      sa[756] = -0.23921856f;
      sa[757] = 0.23775676f;
      sa[758] = -0.14636159f;
      sa[759] = -0.15901017f;
      sa[760] = -0.09573709f;
      sa[761] = 0.034350056f;
      sa[762] = -0.10589117f;
      sa[763] = 0.15186064f;
      sa[764] = 0.020984262f;
      sa[765] = -0.034463655f;
      sa[766] = -0.20679735f;
      sa[767] = 0.11026721f;
      sa[768] = -0.17368692f;
      sa[769] = -0.27781802f;
      sa[770] = -0.01587104f;
      sa[771] = 0.012527239f;
      sa[772] = 0.047436938f;
      sa[773] = -0.23409262f;
      sa[774] = -0.018461395f;
      sa[775] = 0.28898916f;
      sa[776] = -0.06213209f;
      sa[777] = 0.057819907f;
      sa[778] = 0.16046335f;
      sa[779] = -0.14157565f;
      sa[780] = 0.012538808f;
      sa[781] = -0.04721839f;
      sa[782] = 0.1297025f;
      sa[783] = -0.1476426f;
      sa[784] = -0.14302747f;
      sa[785] = -0.11775011f;
      sa[786] = -0.0936681f;
      sa[787] = -0.22962858f;
      sa[788] = -0.24067289f;
      sa[789] = 0.1755528f;
      sa[790] = -0.11949931f;
      sa[791] = -0.0793543f;
      sa[792] = 0.20025848f;
      sa[793] = -0.14943309f;
      sa[794] = -0.20021795f;
      sa[795] = 0.0035866871f;
      sa[796] = 0.21703033f;
      sa[797] = -0.2049276f;
      sa[798] = -0.2630018f;
      sa[799] = -0.18827376f;
      sa[800] = 0.19812548f;
      sa[801] = 0.03563425f;
      sa[802] = 0.25161138f;
      sa[803] = 0.061714638f;
      sa[804] = 0.21380234f;
      sa[805] = 0.27803034f;
      sa[806] = 0.2815448f;
      sa[807] = 0.19579722f;
      sa[808] = -0.045826145f;
      sa[809] = -0.2285239f;
      sa[810] = 0.074686214f;
      sa[811] = 0.21668184f;
      sa[812] = 0.1465919f;
      sa[813] = -0.2975131f;
      sa[814] = 0.0758797f;
      sa[815] = -0.17645517f;
      sa[816] = -0.09858972f;
      sa[817] = -0.14787894f;
      sa[818] = -0.015843235f;
      sa[819] = -0.08469405f;
      sa[820] = -0.29312703f;
      sa[821] = -0.20971265f;
      sa[822] = -0.27918127f;
      sa[823] = 0.045970205f;
      sa[824] = 0.10652467f;
      sa[825] = 0.2856859f;
      sa[826] = -0.24925211f;
      sa[827] = -0.28657374f;
      sa[828] = 0.13246934f;
      sa[829] = -0.082553454f;
      sa[830] = 0.17295517f;
      sa[831] = 0.14535414f;
      sa[832] = 0.14031121f;
      sa[833] = 0.06740271f;
      sa[834] = 0.18645354f;
      sa[835] = -0.08203319f;
      sa[836] = 0.21301417f;
      sa[837] = -0.14834708f;
      sa[838] = 0.15561739f;
      sa[839] = -0.26473117f;
      sa[840] = 0.18481648f;
      sa[841] = 0.10216038f;
      sa[842] = 0.15911931f;
      sa[843] = 0.032996427f;
      sa[844] = 0.035894673f;
      sa[845] = 0.1463283f;
      sa[846] = -0.24541543f;
      sa[847] = -0.046645273f;
      sa[848] = 0.19853565f;
      sa[849] = 0.23975417f;
      sa[850] = -0.011438424f;
      sa[851] = 0.10974907f;
      sa[852] = 0.26671076f;
      sa[853] = 0.16081958f;
      sa[854] = 0.22822031f;
      sa[855] = 0.1614299f;
      sa[856] = 0.08650095f;
      sa[857] = -0.14877935f;
      sa[858] = 0.13497217f;
      sa[859] = 0.07427806f;
      sa[860] = 0.26536253f;
      sa[861] = -0.25276497f;
      sa[862] = -0.0751775f;
      sa[863] = 0.050637033f;
      sa[864] = -0.2111517f;
      sa[865] = 0.22463676f;
      sa[866] = -0.16612178f;
      sa[867] = 0.012337705f;
      sa[868] = -0.19428426f;
      sa[869] = 0.19346927f;
      sa[870] = -0.05125033f;
      sa[871] = 0.13284352f;
      sa[872] = 0.21442156f;
      sa[873] = -0.057377778f;
      sa[874] = 0.002090608f;
      sa[875] = -0.20798889f;
      sa[876] = -0.23152497f;
      sa[877] = -0.21706255f;
      sa[878] = 0.022267656f;
      sa[879] = 0.18012261f;
      sa[880] = -0.09717991f;
      sa[881] = -0.07857082f;
      sa[882] = 0.15545578f;
      sa[883] = 0.21025994f;
      sa[884] = -0.13193826f;
      sa[885] = -0.13677469f;
      sa[886] = 0.08506423f;
      sa[887] = -0.063694276f;
      sa[888] = -0.08449554f;
      sa[889] = 0.049375925f;
      sa[890] = -0.30173555f;
      sa[891] = 0.34365946f;
      sa[892] = 0.16495095f;
      sa[893] = 0.2498945f;
      sa[894] = 0.03227511f;
      sa[895] = 0.21410236f;
      sa[896] = -0.16748053f;
      sa[897] = 0.25857732f;
      sa[898] = -0.080741994f;
      sa[899] = 0.17688914f;
      sa[900] = -0.11920542f;
      sa[901] = 0.15927999f;
      sa[902] = -0.2596463f;
      sa[903] = -0.09733743f;
      sa[904] = 0.17531003f;
      sa[905] = 0.18126781f;
      sa[906] = -0.24219589f;
      sa[907] = -0.24323705f;
      sa[908] = -0.21395034f;
      sa[909] = 0.05757652f;
      sa[910] = 0.006091241f;
      sa[911] = -0.1200783f;
      sa[912] = -0.009268581f;
      sa[913] = 0.051004153f;
      sa[914] = -0.1852637f;
      sa[915] = 0.056591727f;
      sa[916] = 0.21344534f;
      sa[917] = 0.006131557f;
      sa[918] = 0.19436164f;
      sa[919] = -0.0684982f;
      sa[920] = 0.14617638f;
      sa[921] = -0.069969155f;
      sa[922] = -0.12777784f;
      sa[923] = -0.1216463f;
      sa[924] = -0.13818541f;
      sa[925] = -0.20274334f;
      sa[926] = 0.113421865f;
      sa[927] = -0.10174143f;
      sa[928] = 0.24365704f;
      sa[929] = 0.13378115f;
      sa[930] = 0.15139438f;
      sa[931] = -3.8623207E-4f;
      sa[932] = 0.24740745f;
      sa[933] = 0.029204002f;
      sa[934] = 0.19184335f;
      sa[935] = -0.20438266f;
      sa[936] = 0.032692797f;
      sa[937] = 0.18715009f;
      sa[938] = -0.10939027f;
      sa[939] = -0.038474113f;
      sa[940] = -0.051011994f;
      sa[941] = -0.29946458f;
      sa[942] = -0.24122545f;
      sa[943] = -0.16492769f;
      sa[944] = -0.27013293f;
      sa[945] = 0.06412803f;
      sa[946] = 0.059249137f;
      sa[947] = 0.26505086f;
      sa[948] = 0.088003844f;
      sa[949] = -0.1792251f;
      sa[950] = 0.08049952f;
      sa[951] = -0.08272775f;
      sa[952] = -0.1986482f;
      sa[953] = -0.1608519f;
      sa[954] = -0.24852906f;
      sa[955] = 0.068247646f;
      sa[956] = -0.012362688f;
      sa[957] = 0.03967953f;
      sa[958] = 0.093272686f;
      sa[959] = -0.15228494f;
      sa[960] = 0.33055457f;
      sa[961] = -0.12384417f;
      sa[962] = -0.031312f;
      sa[963] = -0.048556067f;
      sa[964] = -0.16602345f;
      sa[965] = 0.2502988f;
      sa[966] = -0.08587052f;
      sa[967] = -0.256908f;
      sa[968] = 0.12239396f;
      sa[969] = 0.07160066f;
      sa[970] = 0.27303934f;
      sa[971] = 0.009446023f;
      sa[972] = -0.1498612f;
      sa[973] = -0.20383626f;
      sa[974] = -0.33613187f;
      sa[975] = -0.2630294f;
      sa[976] = -0.06481169f;
      sa[977] = 0.044320595f;
      sa[978] = -0.07877295f;
      sa[979] = 0.15377939f;
      sa[980] = 0.12208619f;
      sa[981] = -0.20651385f;
      sa[982] = 0.12829539f;
      sa[983] = -0.1162507f;
      sa[984] = -0.2667592f;
      sa[985] = 0.058265053f;
      sa[986] = -0.25452352f;
      sa[987] = 0.082040705f;
      sa[988] = 0.13270834f;
      sa[989] = 0.20239542f;
      sa[990] = 0.29660538f;
      sa[991] = -0.24480839f;
      sa[992] = -0.18907695f;
      sa[993] = -0.028020358f;
      sa[994] = -0.1423882f;
      sa[995] = -0.25734475f;
      sa[996] = 0.13959576f;
      sa[997] = 0.15463136f;
      sa[998] = 0.1253357f;
      sa[999] = 0.2299959f;
      sa[1000] = 0.031661086f;
      sa[1001] = 0.241578f;
      sa[1002] = 0.26415855f;
      sa[1003] = -0.06362588f;
      sa[1004] = 0.16516285f;
      sa[1005] = -0.25974095f;
      sa[1006] = -0.05005065f;
      sa[1007] = 0.072761506f;
      sa[1008] = 0.16810945f;
      sa[1009] = 0.011334152f;
      sa[1010] = 0.0036966987f;
      sa[1011] = 0.28060004f;
      sa[1012] = -0.08345008f;
      sa[1013] = 0.13458599f;
      sa[1014] = 0.2609851f;
      sa[1015] = -0.2907486f;
      sa[1016] = 0.23556656f;
      sa[1017] = 0.04709402f;
      sa[1018] = -0.022283444f;
      sa[1019] = 0.070324704f;
      sa[1020] = -0.24872297f;
      sa[1021] = 0.061406206f;
      sa[1022] = 0.22821768f;
      sa[1023] = 0.05772255f;
      sa[1024] = -0.067908034f;
      sa[1025] = 0.08467131f;
      sa[1026] = 0.1581097f;
      sa[1027] = 0.26833078f;
      sa[1028] = 0.27086887f;
      sa[1029] = -0.047688685f;
      sa[1030] = -0.1697228f;
      sa[1031] = -0.01622565f;
      sa[1032] = -0.21024245f;
      sa[1033] = 0.042546f;
      sa[1034] = -0.04131751f;
      sa[1035] = -0.2720335f;
      sa[1036] = 0.22888474f;
      sa[1037] = -0.0019546875f;
      sa[1038] = -0.23276035f;
      sa[1039] = 0.20677805f;
      sa[1040] = -0.021053262f;
      sa[1041] = 0.07201659f;
      sa[1042] = -0.22809595f;
      sa[1043] = -0.054188192f;
      sa[1044] = 0.19883293f;
      sa[1045] = 0.22460227f;
      sa[1046] = -0.2121268f;
      sa[1047] = -0.17841989f;
      sa[1048] = 0.16155536f;
      sa[1049] = -0.09305472f;
      sa[1050] = 0.05208141f;
      sa[1051] = -0.1751894f;
      sa[1052] = 0.16847368f;
      sa[1053] = 0.2539634f;
      sa[1054] = 0.23381248f;
      sa[1055] = -0.043040212f;
      sa[1056] = 0.2669902f;
      sa[1057] = -0.18989749f;
      sa[1058] = 0.22430381f;
      sa[1059] = -0.15950912f;
      sa[1060] = -0.2826116f;
      sa[1061] = 0.026729118f;
      sa[1062] = 0.2569583f;
      sa[1063] = -0.054656383f;
      sa[1064] = 0.10878839f;
      sa[1065] = -0.015957024f;
      sa[1066] = 0.18729357f;
      sa[1067] = -0.2901544f;
      sa[1068] = -0.3102607f;
      sa[1069] = 0.21128987f;
      sa[1070] = 0.15490861f;
      sa[1071] = 0.20030867f;
      sa[1072] = -0.22942549f;
      sa[1073] = 0.123836175f;
      sa[1074] = 0.12035668f;
      sa[1075] = -0.16239753f;
      sa[1076] = -0.12512957f;
      sa[1077] = 0.13465041f;
      sa[1078] = -0.02853181f;
      sa[1079] = 0.05423169f;
      sa[1080] = 0.20216712f;
      sa[1081] = 0.24704261f;
      sa[1082] = -0.29670772f;
      sa[1083] = -0.20009422f;
      sa[1084] = 0.24976069f;
      sa[1085] = -0.20084581f;
      sa[1086] = -0.24972224f;
      sa[1087] = -0.20900302f;
      sa[1088] = -0.20151998f;
      sa[1089] = 0.10002771f;
      sa[1090] = -0.25741935f;
      sa[1091] = 0.13584162f;
      sa[1092] = -0.22956116f;
      sa[1093] = -0.24515444f;
      sa[1094] = 0.010165309f;
      sa[1095] = -0.19527368f;
      sa[1096] = 0.09639726f;
      sa[1097] = -0.10702204f;
      sa[1098] = -0.01987924f;
      sa[1099] = -0.06562534f;
      sa[1100] = -0.10849295f;
      sa[1101] = 0.15583575f;
      sa[1102] = -0.12286702f;
      sa[1103] = 0.24744801f;
      sa[1104] = -0.25502068f;
      sa[1105] = -0.13218312f;
      sa[1106] = -0.12020084f;
      sa[1107] = 0.1993393f;
      sa[1108] = -0.17717518f;
      sa[1109] = 0.25129277f;
      sa[1110] = 0.18094371f;
      sa[1111] = -0.2225484f;
      sa[1112] = 0.13884537f;
      sa[1113] = 0.19750208f;
      sa[1114] = 0.08646688f;
      sa[1115] = 0.219153f;
      sa[1116] = -0.0949896f;
      sa[1117] = -0.22462739f;
      sa[1118] = -0.19347139f;
      sa[1119] = -0.09209595f;
      sa[1120] = 0.19105585f;
      sa[1121] = 0.07231602f;
      sa[1122] = 0.24650842f;
      sa[1123] = 0.26019657f;
      sa[1124] = 0.00732326f;
      sa[1125] = -0.09122724f;
      sa[1126] = 0.22420916f;
      sa[1127] = 0.12745635f;
      sa[1128] = 0.012272721f;
      sa[1129] = -0.1112991f;
      sa[1130] = 0.20788372f;
      sa[1131] = 0.26511356f;
      sa[1132] = -0.21275349f;
      sa[1133] = -0.18214104f;
      sa[1134] = 0.28214154f;
      sa[1135] = -0.31484652f;
      sa[1136] = -0.037682097f;
      sa[1137] = 0.1898046f;
      sa[1138] = -0.07601291f;
      sa[1139] = 0.1429927f;
      sa[1140] = 0.2261597f;
      sa[1141] = -0.2642171f;
      sa[1142] = 0.12868711f;
      sa[1143] = -0.02451818f;
      sa[1144] = -0.27706462f;
      sa[1145] = 0.1569879f;
      sa[1146] = 0.2104577f;
      sa[1147] = -0.082729965f;
      sa[1148] = 0.008554417f;
      sa[1149] = -0.0074758306f;
      sa[1150] = -0.25790378f;
      sa[1151] = -0.22716083f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_05_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_05_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2701018f;
      sa[1] = -0.10670052f;
      sa[2] = -0.55611384f;
      sa[3] = -0.9321847f;
      sa[4] = 0.08930742f;
      sa[5] = 0.23948982f;
      sa[6] = 1.241515f;
      sa[7] = -0.69377226f;
      sa[8] = -0.9164774f;
      sa[9] = 0.7153936f;
      sa[10] = -0.13624176f;
      sa[11] = 0.42354307f;
      sa[12] = 0.20300129f;
      sa[13] = 0.05976583f;
      sa[14] = -1.2875569f;
      sa[15] = 1.1180434f;
      sa[16] = 1.573646f;
      sa[17] = -0.4709621f;
      sa[18] = 0.055389453f;
      sa[19] = -0.44786263f;
      sa[20] = 1.1560105f;
      sa[21] = 0.013855788f;
      sa[22] = -0.9959368f;
      sa[23] = 0.7780852f;
      sa[24] = -1.3511102f;
      sa[25] = 0.46816093f;
      sa[26] = -0.23869975f;
      sa[27] = 1.5094066f;
      sa[28] = -1.3862374f;
      sa[29] = -0.4388854f;
      sa[30] = 0.4081176f;
      sa[31] = -0.6323042f;
      sa[32] = -1.153858f;
      sa[33] = -1.4918324f;
      sa[34] = 0.04746758f;
      sa[35] = 1.3711698f;
      sa[36] = -0.31608582f;
      sa[37] = -0.060490884f;
      sa[38] = 0.19210471f;
      sa[39] = 0.82991314f;
      sa[40] = -0.763078f;
      sa[41] = -1.3463471f;
      sa[42] = -1.0107245f;
      sa[43] = -1.4134899f;
      sa[44] = 0.021376396f;
      sa[45] = -1.3389558f;
      sa[46] = 1.2068784f;
      sa[47] = 1.3213922f;
      sa[48] = -1.3574942f;
      sa[49] = -1.0205708f;
      sa[50] = 0.41205633f;
      sa[51] = -0.3229578f;
      sa[52] = 0.80304897f;
      sa[53] = 0.89636713f;
      sa[54] = -0.22816865f;
      sa[55] = 1.1208113f;
      sa[56] = -1.0213856f;
      sa[57] = -1.1277083f;
      sa[58] = 0.17876387f;
      sa[59] = -0.20558628f;
      sa[60] = 1.373f;
      sa[61] = -0.6208276f;
      sa[62] = -0.36305514f;
      sa[63] = 0.6842226f;
      sa[64] = 1.4881651f;
      sa[65] = -0.62648165f;
      sa[66] = 0.6407416f;
      sa[67] = 1.5990264f;
      sa[68] = 0.7439622f;
      sa[69] = -1.0358979f;
      sa[70] = -1.5469366f;
      sa[71] = -0.413504f;
      sa[72] = -1.3004323f;
      sa[73] = 1.1587842f;
      sa[74] = 1.3251837f;
      sa[75] = -0.099548794f;
      sa[76] = 0.9497392f;
      sa[77] = 0.5481686f;
      sa[78] = -1.2721305f;
      sa[79] = 0.980223f;
      sa[80] = -0.7967092f;
      sa[81] = 0.28520125f;
      sa[82] = 0.78966624f;
      sa[83] = -0.6383517f;
      sa[84] = -1.5882708f;
      sa[85] = -1.2715495f;
      sa[86] = 0.24405937f;
      sa[87] = 1.2308679f;
      sa[88] = -1.5338778f;
      sa[89] = -0.52978945f;
      sa[90] = -1.0295314f;
      sa[91] = 1.5243943f;
      sa[92] = -0.31954655f;
      sa[93] = 0.23841369f;
      sa[94] = -1.5263958f;
      sa[95] = -0.24123342f;
      sa[96] = -1.118675f;
      sa[97] = 0.18206263f;
      sa[98] = -0.0640556f;
      sa[99] = 0.32259557f;
      sa[100] = -1.2633599f;
      sa[101] = -0.39724347f;
      sa[102] = 1.3042182f;
      sa[103] = 0.049852256f;
      sa[104] = -0.15685837f;
      sa[105] = -0.58210176f;
      sa[106] = 1.4359639f;
      sa[107] = 1.1914966f;
      sa[108] = 0.73187536f;
      sa[109] = 0.118282855f;
      sa[110] = 0.7020629f;
      sa[111] = -0.755467f;
      sa[112] = -1.1153505f;
      sa[113] = 0.17554447f;
      sa[114] = 0.1885788f;
      sa[115] = -0.30605358f;
      sa[116] = 1.1848696f;
      sa[117] = 0.06578283f;
      sa[118] = -1.3192263f;
      sa[119] = -0.79964054f;
      sa[120] = -0.31161508f;
      sa[121] = 1.0840218f;
      sa[122] = -0.062498342f;
      sa[123] = 0.35499114f;
      sa[124] = -0.74535197f;
      sa[125] = 0.78478795f;
      sa[126] = -0.93156296f;
      sa[127] = 0.4579078f;
      sa[128] = -0.84907174f;
      sa[129] = 0.7297142f;
      sa[130] = -0.36275208f;
      sa[131] = 0.8826235f;
      sa[132] = 0.48143217f;
      sa[133] = 0.6088666f;
      sa[134] = 0.66107225f;
      sa[135] = -1.085982f;
      sa[136] = 0.5182702f;
      sa[137] = -0.60587335f;
      sa[138] = -0.13788563f;
      sa[139] = 1.155344f;
      sa[140] = -0.41737434f;
      sa[141] = 0.017790793f;
      sa[142] = 0.29540586f;
      sa[143] = -0.7880793f;
      sa[144] = 0.984178f;
      sa[145] = -0.7908049f;
      sa[146] = 0.05359588f;
      sa[147] = -0.28893653f;
      sa[148] = -0.7883107f;
      sa[149] = 1.105646f;
      sa[150] = -1.09593f;
      sa[151] = -1.5542358f;
      sa[152] = 1.6068081f;
      sa[153] = -0.5902783f;
      sa[154] = 1.3425422f;
      sa[155] = -1.5360278f;
      sa[156] = -1.4423056f;
      sa[157] = -1.1255772f;
      sa[158] = -0.19652289f;
      sa[159] = -0.6702985f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


