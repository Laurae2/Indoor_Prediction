/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:17.794+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_12 > h2o_rf_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_12", algorithm="drf")
public class h2o_rf_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};

  public h2o_rf_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4747862937608220416L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_12_Forest_0.score0(data,preds);
    h2o_rf_12_Forest_1.score0(data,preds);
    h2o_rf_12_Forest_2.score0(data,preds);
    h2o_rf_12_Forest_3.score0(data,preds);
    h2o_rf_12_Forest_4.score0(data,preds);
    h2o_rf_12_Forest_5.score0(data,preds);
    h2o_rf_12_Forest_6.score0(data,preds);
    h2o_rf_12_Forest_7.score0(data,preds);
    h2o_rf_12_Forest_8.score0(data,preds);
    h2o_rf_12_Forest_9.score0(data,preds);
    h2o_rf_12_Forest_10.score0(data,preds);
    h2o_rf_12_Forest_11.score0(data,preds);
    h2o_rf_12_Forest_12.score0(data,preds);
    h2o_rf_12_Forest_13.score0(data,preds);
    h2o_rf_12_Forest_14.score0(data,preds);
    h2o_rf_12_Forest_15.score0(data,preds);
    h2o_rf_12_Forest_16.score0(data,preds);
    h2o_rf_12_Forest_17.score0(data,preds);
    h2o_rf_12_Forest_18.score0(data,preds);
    h2o_rf_12_Forest_19.score0(data,preds);
    h2o_rf_12_Forest_20.score0(data,preds);
    h2o_rf_12_Forest_21.score0(data,preds);
    h2o_rf_12_Forest_22.score0(data,preds);
    h2o_rf_12_Forest_23.score0(data,preds);
    h2o_rf_12_Forest_24.score0(data,preds);
    h2o_rf_12_Forest_25.score0(data,preds);
    h2o_rf_12_Forest_26.score0(data,preds);
    h2o_rf_12_Forest_27.score0(data,preds);
    h2o_rf_12_Forest_28.score0(data,preds);
    h2o_rf_12_Forest_29.score0(data,preds);
    h2o_rf_12_Forest_30.score0(data,preds);
    h2o_rf_12_Forest_31.score0(data,preds);
    h2o_rf_12_Forest_32.score0(data,preds);
    h2o_rf_12_Forest_33.score0(data,preds);
    h2o_rf_12_Forest_34.score0(data,preds);
    h2o_rf_12_Forest_35.score0(data,preds);
    h2o_rf_12_Forest_36.score0(data,preds);
    h2o_rf_12_Forest_37.score0(data,preds);
    h2o_rf_12_Forest_38.score0(data,preds);
    h2o_rf_12_Forest_39.score0(data,preds);
    h2o_rf_12_Forest_40.score0(data,preds);
    h2o_rf_12_Forest_41.score0(data,preds);
    h2o_rf_12_Forest_42.score0(data,preds);
    h2o_rf_12_Forest_43.score0(data,preds);
    h2o_rf_12_Forest_44.score0(data,preds);
    h2o_rf_12_Forest_45.score0(data,preds);
    h2o_rf_12_Forest_46.score0(data,preds);
    h2o_rf_12_Forest_47.score0(data,preds);
    h2o_rf_12_Forest_48.score0(data,preds);
    h2o_rf_12_Forest_49.score0(data,preds);
    h2o_rf_12_Forest_50.score0(data,preds);
    h2o_rf_12_Forest_51.score0(data,preds);
    h2o_rf_12_Forest_52.score0(data,preds);
    h2o_rf_12_Forest_53.score0(data,preds);
    h2o_rf_12_Forest_54.score0(data,preds);
    h2o_rf_12_Forest_55.score0(data,preds);
    h2o_rf_12_Forest_56.score0(data,preds);
    h2o_rf_12_Forest_57.score0(data,preds);
    h2o_rf_12_Forest_58.score0(data,preds);
    h2o_rf_12_Forest_59.score0(data,preds);
    h2o_rf_12_Forest_60.score0(data,preds);
    h2o_rf_12_Forest_61.score0(data,preds);
    h2o_rf_12_Forest_62.score0(data,preds);
    h2o_rf_12_Forest_63.score0(data,preds);
    h2o_rf_12_Forest_64.score0(data,preds);
    h2o_rf_12_Forest_65.score0(data,preds);
    h2o_rf_12_Forest_66.score0(data,preds);
    h2o_rf_12_Forest_67.score0(data,preds);
    h2o_rf_12_Forest_68.score0(data,preds);
    h2o_rf_12_Forest_69.score0(data,preds);
    h2o_rf_12_Forest_70.score0(data,preds);
    h2o_rf_12_Forest_71.score0(data,preds);
    h2o_rf_12_Forest_72.score0(data,preds);
    h2o_rf_12_Forest_73.score0(data,preds);
    h2o_rf_12_Forest_74.score0(data,preds);
    h2o_rf_12_Forest_75.score0(data,preds);
    h2o_rf_12_Forest_76.score0(data,preds);
    h2o_rf_12_Forest_77.score0(data,preds);
    h2o_rf_12_Forest_78.score0(data,preds);
    h2o_rf_12_Forest_79.score0(data,preds);
    h2o_rf_12_Forest_80.score0(data,preds);
    h2o_rf_12_Forest_81.score0(data,preds);
    h2o_rf_12_Forest_82.score0(data,preds);
    h2o_rf_12_Forest_83.score0(data,preds);
    h2o_rf_12_Forest_84.score0(data,preds);
    h2o_rf_12_Forest_85.score0(data,preds);
    h2o_rf_12_Forest_86.score0(data,preds);
    h2o_rf_12_Forest_87.score0(data,preds);
    h2o_rf_12_Forest_88.score0(data,preds);
    h2o_rf_12_Forest_89.score0(data,preds);
    h2o_rf_12_Forest_90.score0(data,preds);
    h2o_rf_12_Forest_91.score0(data,preds);
    h2o_rf_12_Forest_92.score0(data,preds);
    h2o_rf_12_Forest_93.score0(data,preds);
    h2o_rf_12_Forest_94.score0(data,preds);
    h2o_rf_12_Forest_95.score0(data,preds);
    h2o_rf_12_Forest_96.score0(data,preds);
    h2o_rf_12_Forest_97.score0(data,preds);
    h2o_rf_12_Forest_98.score0(data,preds);
    h2o_rf_12_Forest_99.score0(data,preds);
    h2o_rf_12_Forest_100.score0(data,preds);
    h2o_rf_12_Forest_101.score0(data,preds);
    h2o_rf_12_Forest_102.score0(data,preds);
    h2o_rf_12_Forest_103.score0(data,preds);
    h2o_rf_12_Forest_104.score0(data,preds);
    h2o_rf_12_Forest_105.score0(data,preds);
    h2o_rf_12_Forest_106.score0(data,preds);
    h2o_rf_12_Forest_107.score0(data,preds);
    h2o_rf_12_Forest_108.score0(data,preds);
    h2o_rf_12_Forest_109.score0(data,preds);
    h2o_rf_12_Forest_110.score0(data,preds);
    h2o_rf_12_Forest_111.score0(data,preds);
    h2o_rf_12_Forest_112.score0(data,preds);
    h2o_rf_12_Forest_113.score0(data,preds);
    h2o_rf_12_Forest_114.score0(data,preds);
    h2o_rf_12_Forest_115.score0(data,preds);
    h2o_rf_12_Forest_116.score0(data,preds);
    h2o_rf_12_Forest_117.score0(data,preds);
    h2o_rf_12_Forest_118.score0(data,preds);
    h2o_rf_12_Forest_119.score0(data,preds);
    h2o_rf_12_Forest_120.score0(data,preds);
    h2o_rf_12_Forest_121.score0(data,preds);
    h2o_rf_12_Forest_122.score0(data,preds);
    h2o_rf_12_Forest_123.score0(data,preds);
    h2o_rf_12_Forest_124.score0(data,preds);
    h2o_rf_12_Forest_125.score0(data,preds);
    h2o_rf_12_Forest_126.score0(data,preds);
    h2o_rf_12_Forest_127.score0(data,preds);
    h2o_rf_12_Forest_128.score0(data,preds);
    h2o_rf_12_Forest_129.score0(data,preds);
    h2o_rf_12_Forest_130.score0(data,preds);
    h2o_rf_12_Forest_131.score0(data,preds);
    h2o_rf_12_Forest_132.score0(data,preds);
    h2o_rf_12_Forest_133.score0(data,preds);
    h2o_rf_12_Forest_134.score0(data,preds);
    h2o_rf_12_Forest_135.score0(data,preds);
    h2o_rf_12_Forest_136.score0(data,preds);
    h2o_rf_12_Forest_137.score0(data,preds);
    h2o_rf_12_Forest_138.score0(data,preds);
    h2o_rf_12_Forest_139.score0(data,preds);
    h2o_rf_12_Forest_140.score0(data,preds);
    h2o_rf_12_Forest_141.score0(data,preds);
    h2o_rf_12_Forest_142.score0(data,preds);
    h2o_rf_12_Forest_143.score0(data,preds);
    h2o_rf_12_Forest_144.score0(data,preds);
    h2o_rf_12_Forest_145.score0(data,preds);
    h2o_rf_12_Forest_146.score0(data,preds);
    h2o_rf_12_Forest_147.score0(data,preds);
    h2o_rf_12_Forest_148.score0(data,preds);
    h2o_rf_12_Forest_149.score0(data,preds);
    h2o_rf_12_Forest_150.score0(data,preds);
    h2o_rf_12_Forest_151.score0(data,preds);
    h2o_rf_12_Forest_152.score0(data,preds);
    h2o_rf_12_Forest_153.score0(data,preds);
    h2o_rf_12_Forest_154.score0(data,preds);
    h2o_rf_12_Forest_155.score0(data,preds);
    h2o_rf_12_Forest_156.score0(data,preds);
    h2o_rf_12_Forest_157.score0(data,preds);
    h2o_rf_12_Forest_158.score0(data,preds);
    h2o_rf_12_Forest_159.score0(data,preds);
    h2o_rf_12_Forest_160.score0(data,preds);
    h2o_rf_12_Forest_161.score0(data,preds);
    h2o_rf_12_Forest_162.score0(data,preds);
    h2o_rf_12_Forest_163.score0(data,preds);
    h2o_rf_12_Forest_164.score0(data,preds);
    h2o_rf_12_Forest_165.score0(data,preds);
    h2o_rf_12_Forest_166.score0(data,preds);
    h2o_rf_12_Forest_167.score0(data,preds);
    h2o_rf_12_Forest_168.score0(data,preds);
    h2o_rf_12_Forest_169.score0(data,preds);
    h2o_rf_12_Forest_170.score0(data,preds);
    h2o_rf_12_Forest_171.score0(data,preds);
    h2o_rf_12_Forest_172.score0(data,preds);
    h2o_rf_12_Forest_173.score0(data,preds);
    h2o_rf_12_Forest_174.score0(data,preds);
    h2o_rf_12_Forest_175.score0(data,preds);
    h2o_rf_12_Forest_176.score0(data,preds);
    h2o_rf_12_Forest_177.score0(data,preds);
    h2o_rf_12_Forest_178.score0(data,preds);
    h2o_rf_12_Forest_179.score0(data,preds);
    h2o_rf_12_Forest_180.score0(data,preds);
    h2o_rf_12_Forest_181.score0(data,preds);
    h2o_rf_12_Forest_182.score0(data,preds);
    h2o_rf_12_Forest_183.score0(data,preds);
    h2o_rf_12_Forest_184.score0(data,preds);
    h2o_rf_12_Forest_185.score0(data,preds);
    h2o_rf_12_Forest_186.score0(data,preds);
    h2o_rf_12_Forest_187.score0(data,preds);
    h2o_rf_12_Forest_188.score0(data,preds);
    h2o_rf_12_Forest_189.score0(data,preds);
    h2o_rf_12_Forest_190.score0(data,preds);
    h2o_rf_12_Forest_191.score0(data,preds);
    h2o_rf_12_Forest_192.score0(data,preds);
    h2o_rf_12_Forest_193.score0(data,preds);
    h2o_rf_12_Forest_194.score0(data,preds);
    h2o_rf_12_Forest_195.score0(data,preds);
    h2o_rf_12_Forest_196.score0(data,preds);
    h2o_rf_12_Forest_197.score0(data,preds);
    h2o_rf_12_Forest_198.score0(data,preds);
    h2o_rf_12_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_12_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[27 /* X28 */] <-0.14745566f ? 
             (data[31 /* X32 */] <0.075074606f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09414863f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18850428f ? 
                 (data[32 /* X33 */] <-0.140625f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.033611197f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.045636848f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[27 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4323159f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.09744427f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08657321f ? 
             (data[30 /* X31 */] <0.03709078f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.057485092f ? 
                     (data[20 /* X21 */] <0.1736317f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[3 /* X4 */] <0.1255185f ? 
                 (data[34 /* X35 */] <-0.75f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10714018f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.1270933f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20437251f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.32133326f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15919453f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.49635005f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[5 /* X6 */] <0.09422457f ? 
             (data[32 /* X33 */] <-0.0546875f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.06108074f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060073942f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15669958f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21395874f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06280109f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.32860547f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61284673f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30991608f ? 
                 (data[10 /* X11 */] <-0.8176507f ? 
                     (data[4 /* X5 */] <0.1118229f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.08156831f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15040208f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.60061014f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
                     (data[29 /* X30 */] <0.087232135f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.12935664f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.114294186f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0703125f ? 
                     (data[26 /* X27 */] <0.088692136f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.41768977f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9225632f ? 
         (data[35 /* X36 */] <-0.37109375f ? 
             (data[19 /* X20 */] <-0.30303314f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109563366f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37109375f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.096808195f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
             (data[8 /* X9 */] <-0.19259486f ? 
                 (data[3 /* X4 */] <-0.021921981f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.08391449f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18897134f ? 
                     (data[29 /* X30 */] <0.08985967f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <0.062346112f ? 
             (data[23 /* X24 */] <0.06223384f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (data[35 /* X36 */] <-0.0859375f ? 
            0.0f : 
             (data[26 /* X27 */] <0.05388803f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07828425f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.04353375f ? 
            1.0f : 
             (data[15 /* X16 */] <0.05075863f ? 
                 (data[10 /* X11 */] <-0.31642273f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.18843654f ? 
             (data[8 /* X9 */] <-0.07853431f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <0.04102266f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.39848655f ? 
             (data[23 /* X24 */] <0.1611697f ? 
                 (data[10 /* X11 */] <-0.115931556f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053800933f ? 
             (data[34 /* X35 */] <-0.33984375f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0390625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1171875f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09220345f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16408765f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.6224375f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97763103f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2410317f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.13785283f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.091200225f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.018061876f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13009855f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17348847f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.099935606f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26891595f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.093321316f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.046800274f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20673242f ? 
                 (data[35 /* X36 */] <-0.2109375f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04256833f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1776447f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14978905f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26254207f ? 
            0.0f : 
             (data[15 /* X16 */] <0.100956164f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[19 /* X20 */] <-0.08162783f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41796875f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16864643f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19955942f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.1291476f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.18554688f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X5 */] <0.07032639f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.0078125f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.048073683f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10840741f ? 
                         (data[33 /* X34 */] <-0.27884766f ? 
                             (data[7 /* X8 */] <0.071916565f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11691395f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35772565f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19284627f ? 
                     (data[29 /* X30 */] <0.087232135f ? 
                         (data[21 /* X22 */] <0.08130335f ? 
                             (data[21 /* X22 */] <0.06020711f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.5792417f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.11858395f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.78882706f ? 
             (data[19 /* X20 */] <-0.31997123f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0993907f ? 
             (data[4 /* X5 */] <0.09370471f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18589966f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.0853366f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[30 /* X31 */] <0.12366824f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.48798183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21289062f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08085632f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.107988514f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12714204f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.13026832f ? 
             (data[14 /* X15 */] <0.17342953f ? 
                 (data[29 /* X30 */] <0.11087999f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.0794491f ? 
                         (data[21 /* X22 */] <0.1274186f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (data[3 /* X4 */] <-0.32180092f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26560345f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[28 /* X29 */] <0.10838406f ? 
            0.0f : 
             (data[31 /* X32 */] <0.09760378f ? 
                 (data[33 /* X34 */] <-0.92067325f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24953888f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.488066f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[35 /* X36 */] <-0.40429688f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.39546853f ? 
                 (data[12 /* X13 */] <0.13967012f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11050174f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12016373f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.04130857f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05732521f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.24495961f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11050174f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5851093f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.11607147f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13848011f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.053267658f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[13 /* X14 */] <0.14617293f ? 
            0.0f : 
             (data[19 /* X20 */] <0.055086922f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.17026152f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.03515625f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.20538f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.054861613f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.06464445f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1496803f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.19373508f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.07315877f ? 
                 (data[3 /* X4 */] <-0.14687154f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.04111701f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09378239f ? 
            1.0f : 
             (data[13 /* X14 */] <0.14776915f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1981769f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12270059f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1643578f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <-0.20628218f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16873491f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9650808f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23871548f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.270664f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1083122f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12531964f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.50512695f ? 
             (data[14 /* X15 */] <0.0897786f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14906263f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16770072f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[21 /* X22 */] <0.02823033f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21548218f ? 
                 (data[19 /* X20 */] <-0.43127882f ? 
                     (data[2 /* X3 */] <-0.08380565f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.2632129f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030389385f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[20 /* X21 */] <0.21993573f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.056907855f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20434402f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.20673242f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.14467512f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20061637f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085537896f ? 
         (data[27 /* X28 */] <0.031439014f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5313726f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15086573f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.06264469f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-5.668693E-4f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.3093986f ? 
                        0.0f : 
                        1.0f))) : 
             (data[14 /* X15 */] <0.12342083f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[30 /* X31 */] <0.10930337f ? 
             (data[3 /* X4 */] <-0.041913908f ? 
                 (data[34 /* X35 */] <-0.4140625f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.0988711f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39996928f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[14 /* X15 */] <0.085232355f ? 
                 (data[20 /* X21 */] <0.17804606f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.30680695f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.099077776f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13576216f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26623827f ? 
             (data[3 /* X4 */] <-0.25182915f ? 
                 (data[17 /* X18 */] <-0.3480171f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.21327019f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X5 */] <0.1007182f ? 
                0.0f : 
                1.0f)) : 
        0.90909094f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (data[18 /* X19 */] <0.2581735f ? 
             (data[4 /* X5 */] <0.11591411f ? 
                 (data[2 /* X3 */] <-0.40265003f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0070010414f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27038586f ? 
                     (data[2 /* X3 */] <-0.41209057f ? 
                         (data[13 /* X14 */] <0.16365725f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.123616144f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.83462346f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.10592654f ? 
                     (data[17 /* X18 */] <0.14900024f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2581735f ? 
             (data[4 /* X5 */] <0.076170966f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <0.28125f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.22095664f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.31810486f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23101844f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19681469f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.10853729f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (data[3 /* X4 */] <-0.2930625f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3762032f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04914688f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.21033819f ? 
                 (data[11 /* X12 */] <-0.6827195f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14657438f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.217595f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.33203125f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.5946239f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.33184513f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.33817574f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26189247f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.0968797f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.27182108f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5202424f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.123326175f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21460614f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.021035137f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X6 */] <0.14059778f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04508724f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08959341f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18114156f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17364554f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.11653542f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.090532616f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.080044515f ? 
            1.0f : 
             (data[5 /* X6 */] <0.09377345f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.08172852f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0070511987f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19798924f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.26244435f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.080078125f ? 
             (data[23 /* X24 */] <0.027659485f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.50403345f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11331686f ? 
                     (data[21 /* X22 */] <0.045168526f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18463843f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.09066786f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.067962386f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1709069f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04508724f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030505348f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.0997446f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.68269295f ? 
                         (data[10 /* X11 */] <0.09568034f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.020560868f ? 
                 (data[8 /* X9 */] <0.2945485f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14587641f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20212916f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.43750116f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.25361943f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2243475f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1419155f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.116886705f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.081897765f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.066772886f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.23207803f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.09852452f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.7050913f ? 
                 (data[33 /* X34 */] <-0.14904024f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.52777123f ? 
                     (data[15 /* X16 */] <0.05720612f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3969064f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.027093256f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22057182f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.43945312f ? 
             (data[31 /* X32 */] <0.06355081f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09175502f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.051619228f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35004252f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.13441676f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[8 /* X9 */] <-0.12276579f ? 
            0.0f : 
             (data[28 /* X29 */] <0.08796844f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34185943f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.026145032f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.81186444f ? 
            0.0f : 
             (data[1 /* X2 */] <0.08628623f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42307812f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07106102f ? 
             (data[18 /* X19 */] <0.20239049f ? 
                 (data[25 /* X26 */] <-0.5999667f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09814177f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.42023164f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.10076209f ? 
                 (data[6 /* X7 */] <0.17221296f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.17111954f ? 
                     (data[13 /* X14 */] <0.12868862f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14281869f ? 
             (data[33 /* X34 */] <-0.5889432f ? 
                 (data[16 /* X17 */] <-0.56771487f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[14 /* X15 */] <0.08204998f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0012791834f ? 
                 (data[17 /* X18 */] <0.2699173f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.056448933f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.09785411f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09654224f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10546875f ? 
                 (data[3 /* X4 */] <-0.24683118f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.096514605f ? 
             (data[12 /* X13 */] <0.18957701f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.35096288f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.6484806f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.25249794f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13721229f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[30 /* X31 */] <0.03476134f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.3774631f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21342129f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.12651874f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[13 /* X14 */] <0.1501069f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18537432f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.16291612f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.086567745f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33180693f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2051825f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6398547f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22616367f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16120888f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11918533f ? 
                     (data[3 /* X4 */] <-0.1818574f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.13504075f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.068359375f ? 
             (data[0 /* X1 */] <-0.07752683f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.026145032f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.49176168f ? 
                 (data[24 /* X25 */] <-0.10032766f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11169933f ? 
                    0.0f : 
                    1.0f))) : 
         (data[13 /* X14 */] <0.098091066f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.12572122f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.350012f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.050826233f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.090288565f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29826295f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.022838574f ? 
             (data[13 /* X14 */] <0.092845775f ? 
                 (data[12 /* X13 */] <0.10604863f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.091846325f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.30078125f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19990067f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.13478495f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.23870574f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[27 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38457617f ? 
                 (data[19 /* X20 */] <-0.31513178f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1963873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08984375f ? 
             (data[19 /* X20 */] <-0.4070815f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09015928f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.88671875f ? 
             (data[13 /* X14 */] <0.14879557f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08896314f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.015169999f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (data[34 /* X35 */] <-0.53515625f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01024579f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27929688f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19921875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[27 /* X28 */] <0.20713915f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17131999f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50103754f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16165099f ? 
         (data[27 /* X28 */] <-0.102731995f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10493975f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18445107f ? 
                     (data[10 /* X11 */] <-0.49378031f ? 
                         (data[10 /* X11 */] <-0.5189959f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.66796875f ? 
                 (data[1 /* X2 */] <-0.7388024f ? 
                     (data[5 /* X6 */] <0.26883972f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14239362f ? 
             (data[34 /* X35 */] <-0.4765625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.086033024f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.095016584f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[23 /* X24 */] <0.025797788f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28242722f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.18726015f ? 
             (data[32 /* X33 */] <0.078125f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13861944f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.25f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26496932f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26244363f ? 
             (data[8 /* X9 */] <-0.19392076f ? 
                 (data[27 /* X28 */] <-0.06629501f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19430503f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.046379555f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1347321f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17985289f ? 
                 (data[26 /* X27 */] <-0.11317166f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20547138f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.005895746f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (data[27 /* X28 */] <-0.14745566f ? 
            0.0f : 
             (data[26 /* X27 */] <0.0434468f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.1484375f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3448446f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17702296f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[17 /* X18 */] <-0.33526155f ? 
             (data[34 /* X35 */] <-0.453125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                 (data[2 /* X3 */] <-0.23762442f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20089464f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1327661f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1893414f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[19 /* X20 */] <-0.46999452f ? 
                 (data[28 /* X29 */] <0.1390075f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1306785f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16349812f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.15156604f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08767715f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.23500083f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.16794331f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1404783f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[19 /* X20 */] <-0.35626718f ? 
                 (data[28 /* X29 */] <0.1390075f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34301758f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22878805f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08767715f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.2140043f ? 
             (data[31 /* X32 */] <0.06547444f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (data[18 /* X19 */] <-0.19524209f ? 
             (data[7 /* X8 */] <0.05822787f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10348152f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07953542f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.02363043f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114954785f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.108616546f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[30 /* X31 */] <0.09455026f ? 
             (data[19 /* X20 */] <-0.22318204f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1995209f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12908736f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.25693986f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11923218f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.1875f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.8701926f ? 
                     (data[19 /* X20 */] <-0.10219553f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13671875f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.059829574f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21188954f ? 
             (data[3 /* X4 */] <-0.33429587f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5318092f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.21720883f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.23958331f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15784724f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20047842f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27872983f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.047005136f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.45898438f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114119045f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16211699f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19932292f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6420773f ? 
                 (data[25 /* X26 */] <-0.61518157f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06334618f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10742161f ? 
                 (data[31 /* X32 */] <0.016999383f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29222733f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17889602f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07890983f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.16796875f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4049143f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <0.1494564f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4519242f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[32 /* X33 */] <-0.056640625f ? 
             (data[16 /* X17 */] <-0.20934165f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13592038f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.03502273f ? 
                     (data[16 /* X17 */] <-0.015061812f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06999159f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06295749f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.26629993f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.76171875f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.532983f ? 
                 (data[25 /* X26 */] <-0.5472317f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053800933f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24879101f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
             (data[15 /* X16 */] <0.08891915f ? 
                 (data[30 /* X31 */] <0.18695131f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.021484375f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.115193605f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.09205172f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12109375f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.21773572f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22754131f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077127405f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11331686f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[21 /* X22 */] <0.13550559f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.029984051f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14039266f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24462801f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.53487206f ? 
                 (data[8 /* X9 */] <-0.38213363f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.086106755f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06051799f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1806463f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-0.1983291f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.10792287f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.484375f ? 
             (data[23 /* X24 */] <0.038829662f ? 
                 (data[2 /* X3 */] <-0.34674862f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.39990065f ? 
                     (data[17 /* X18 */] <-0.42738482f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.04559674f ? 
                         (data[10 /* X11 */] <-0.24702194f ? 
                             (data[32 /* X33 */] <-0.40340936f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2966176f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06999159f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16241547f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.06890052f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.052521855f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5732422f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.36983952f ? 
             (data[3 /* X4 */] <-0.42176056f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                     (data[14 /* X15 */] <0.08432311f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.1584986f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.40871722f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18034518f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.13550559f ? 
                        0.0f : 
                        1.0f))) : 
             (data[21 /* X22 */] <0.08243256f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.07961645f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18674378f ? 
             (data[27 /* X28 */] <-0.14426112f ? 
                 (data[30 /* X31 */] <0.113673806f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.075074606f ? 
                         (data[26 /* X27 */] <0.022877619f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10261027f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.328125f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.07765867f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15711147f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.33398438f ? 
             (data[30 /* X31 */] <0.108526886f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.059554502f ? 
                 (data[30 /* X31 */] <0.07980262f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2667115f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2520928f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.018923294f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.10331437f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[26 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.005191208f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17107579f ? 
            1.0f : 
             (data[31 /* X32 */] <0.0925973f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[19 /* X20 */] <-0.061060123f ? 
             (data[35 /* X36 */] <-0.12591605f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.121827535f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18232463f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.10464449f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44103387f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29410547f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_12_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[11 /* X12 */] <-0.3348523f ? 
             (data[10 /* X11 */] <-0.43323857f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.06846168f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.2109375f ? 
                 (data[31 /* X32 */] <0.05705126f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.14615206f ? 
                         (data[18 /* X19 */] <0.2624645f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.107000746f ? 
                     (data[15 /* X16 */] <0.046379555f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[19 /* X20 */] <-0.32723042f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26532516f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2652637f ? 
                 (data[35 /* X36 */] <-0.8621654f ? 
                     (data[35 /* X36 */] <-0.97846335f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06001946f ? 
                    1.0f : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.1287303f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23656668f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.27681908f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.0054063294f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16903205f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17794625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.061060123f ? 
             (data[19 /* X20 */] <-0.19744757f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.203125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.265625f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40625f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.119987465f ? 
             (data[3 /* X4 */] <-0.47174037f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.043033104f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.095234096f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30673885f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.3867747f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.27286264f ? 
                 (data[14 /* X15 */] <0.08250461f ? 
                     (data[11 /* X12 */] <0.19455752f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.066579044f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078191236f ? 
                 (data[32 /* X33 */] <-0.390625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.059053853f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.10260391f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06971347f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06082504f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[2 /* X3 */] <-0.23174775f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.14342165f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15740064f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
             (data[34 /* X35 */] <-0.91051143f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16463923f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.3293271f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.81186444f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.1796875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.009192192f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.52403945f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[2 /* X3 */] <-0.53537565f ? 
             (data[34 /* X35 */] <-0.57699966f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.52403945f ? 
                 (data[19 /* X20 */] <-0.04412201f ? 
                     (data[35 /* X36 */] <-0.375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.096192606f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[14 /* X15 */] <0.08386848f ? 
             (data[34 /* X35 */] <-0.3203125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20438759f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1643578f ? 
                    0.0f : 
                    1.0f))) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09017032f ? 
            1.0f : 
             (data[21 /* X22 */] <0.0942893f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.15703931f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19412968f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4576156f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[7 /* X8 */] <0.049405083f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25238502f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26546198f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.34226626f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[7 /* X8 */] <0.025877643f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (data[22 /* X23 */] <0.06528548f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.2124128f ? 
                     (data[26 /* X27 */] <0.06084885f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[33 /* X34 */] <-0.52403945f ? 
             (data[2 /* X3 */] <-0.23370664f ? 
                 (data[18 /* X19 */] <0.005004534f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.4721487f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.09154117f ? 
                 (data[9 /* X10 */] <-0.334979f ? 
                     (data[33 /* X34 */] <-0.20290129f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12567818f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17414783f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17078528f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5803194f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31287378f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.73604846f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10742161f ? 
                     (data[30 /* X31 */] <0.09459336f ? 
                         (data[1 /* X2 */] <-0.15740064f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15226373f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.31659463f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.890625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.18588457f ? 
                     (data[3 /* X4 */] <-0.16186549f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[4 /* X5 */] <0.046804354f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.14426112f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.58116823f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13387094f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15667641f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.33648407f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.4603156f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24869627f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12903768f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2308139f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.30100036f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.11237749f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09700907f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2354328f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26980397f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42307812f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6032631f ? 
                 (data[19 /* X20 */] <-0.02476417f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16601562f ? 
             (data[30 /* X31 */] <0.09377378f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12773761f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18972814f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.044264372f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.5865611f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.09371999f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.45471662f ? 
             (data[29 /* X30 */] <0.06227051f ? 
                 (data[20 /* X21 */] <0.04568192f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[4 /* X5 */] <0.10855656f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4333888f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16241547f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.462703f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[27 /* X28 */] <-0.14426112f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14797056f ? 
                 (data[17 /* X18 */] <-0.54643637f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.06605897f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.088171884f ? 
             (data[26 /* X27 */] <0.07129008f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19084181f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.10518429f ? 
                 (data[19 /* X20 */] <-0.55710477f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
        0.024590164f : 
         (data[7 /* X8 */] <0.07827967f ? 
             (data[23 /* X24 */] <0.036170095f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.086957954f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.112193756f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4453125f ? 
                    1.0f : 
                     (data[33 /* X34 */] <0.21525438f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.47159126f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[18 /* X19 */] <-0.19524209f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5637836f ? 
                 (data[7 /* X8 */] <0.028534403f ? 
                     (data[26 /* X27 */] <0.2139869f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16836981f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15603344f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.16803777f ? 
                                 (data[17 /* X18 */] <0.21662757f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[5 /* X6 */] <0.13143763f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.087237425f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0074943327f ? 
                 (data[34 /* X35 */] <-0.5078125f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.080161f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X6 */] <0.08925231f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.45209172f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12466535f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28359511f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.11800278f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.20431773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[12 /* X13 */] <0.11918203f ? 
             (data[35 /* X36 */] <-0.27734375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (data[11 /* X12 */] <-0.41686976f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16365725f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17372622f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.080822974f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.018700734f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[24 /* X25 */] <-0.6700521f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026579723f ? 
                 (data[35 /* X36 */] <-0.8653593f ? 
                     (data[23 /* X24 */] <0.074467845f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.29577395f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.25f ? 
                             (data[9 /* X10 */] <-0.6175306f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.15021437f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.044680707f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59961134f ? 
             (data[4 /* X5 */] <0.060975064f ? 
                 (data[23 /* X24 */] <0.047872186f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.06329767f ? 
             (data[35 /* X36 */] <-0.27734375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08567082f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.14615296f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06977045f ? 
             (data[35 /* X36 */] <0.171875f ? 
                 (data[19 /* X20 */] <-0.053800933f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.64579374f ? 
                 (data[24 /* X25 */] <-0.45599163f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.42668387f ? 
             (data[22 /* X23 */] <0.12126393f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[25 /* X26 */] <-0.051120326f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14928466f ? 
                 (data[13 /* X14 */] <0.09721685f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659533f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.733017f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26560345f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24809079f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (data[33 /* X34 */] <-0.5114193f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18445107f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                     (data[2 /* X3 */] <-0.59022456f ? 
                         (data[24 /* X25 */] <-0.21779232f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.61075366f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.06305904f ? 
                     (data[12 /* X13 */] <0.17224093f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56898874f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10080521f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.083329834f ? 
                 (data[19 /* X20 */] <-0.38288423f ? 
                     (data[9 /* X10 */] <-0.14941795f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.09659259f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49108258f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (data[14 /* X15 */] <0.119783826f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25781247f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23805234f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0775828f ? 
             (data[33 /* X34 */] <-0.66466415f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08654341f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18274765f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.024182135f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0695261f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08592396f ? 
                         (data[26 /* X27 */] <0.0051622894f ? 
                             (data[11 /* X12 */] <-0.33654922f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21875f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.03444309f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16793086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.580998f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[14 /* X15 */] <0.08204998f ? 
             (data[24 /* X25 */] <-0.2322026f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22667913f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.15751402f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35008672f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.43945312f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44369397f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.095478415f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.083329834f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08574633f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3816343f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18182354f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1357135f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15469038f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27435622f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1603886f ? 
                 (data[23 /* X24 */] <0.025531832f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19731864f ? 
                         (data[35 /* X36 */] <-0.875f ? 
                             (data[14 /* X15 */] <0.14325838f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20329383f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.14026612f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[16 /* X17 */] <-0.38255537f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[22 /* X23 */] <0.15194762f ? 
             (data[16 /* X17 */] <-0.107802555f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (data[14 /* X15 */] <0.119783826f ? 
            0.0f : 
             (data[29 /* X30 */] <0.08985967f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.05292536f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17414783f ? 
                 (data[6 /* X7 */] <0.14152381f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.004272591f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.042588376f ? 
                     (data[4 /* X5 */] <0.11649857f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22647408f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09737359f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.10494136f ? 
                         (data[10 /* X11 */] <-0.27786675f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.25608638f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13919783f ? 
             (data[26 /* X27 */] <0.06084885f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.23269553f ? 
                     (data[35 /* X36 */] <-0.109375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.65730816f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33398438f ? 
             (data[23 /* X24 */] <0.038667858f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.03368333f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[34 /* X35 */] <0.03515625f ? 
             (data[26 /* X27 */] <0.23834977f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19999935f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3969064f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[17 /* X18 */] <-0.58612025f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.016479202f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.096103214f ? 
                 (data[24 /* X25 */] <-0.34030378f ? 
                     (data[32 /* X33 */] <-0.34407043f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09009406f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18914321f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0057215537f ? 
                     (data[33 /* X34 */] <-0.4250032f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.390625f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9661884f ? 
             (data[27 /* X28 */] <-0.35829583f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.528068f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06731455f ? 
             (data[23 /* X24 */] <0.01010635f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.12703648f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16698757f ? 
                     (data[32 /* X33 */] <0.203125f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.32810667f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
             (data[8 /* X9 */] <0.38301146f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12172704f ? 
            0.0f : 
             (data[7 /* X8 */] <0.027749144f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17036822f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.20752992f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.01359818f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.123701096f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12393577f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.08924132f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.1155152f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12273814f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.556289f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.3885879f ? 
            0.0f : 
             (data[21 /* X22 */] <0.081867956f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0019300516f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.26541653f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[17 /* X18 */] <-0.3480171f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X12 */] <-0.67564905f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0737346f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14451823f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.09454939f ? 
                 (data[24 /* X25 */] <-0.16293828f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10849104f ? 
            0.0f : 
             (data[21 /* X22 */] <0.12760109f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26344523f ? 
             (data[27 /* X28 */] <-0.33885142f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.55226535f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.30775917f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33928168f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.051120326f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15611652f ? 
             (data[21 /* X22 */] <0.107275255f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[7 /* X8 */] <0.025877643f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22485234f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11558017f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.1537476f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.32133326f ? 
             (data[17 /* X18 */] <0.10551275f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.06605897f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.033203125f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10219553f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.16639131f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20443419f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.01508525f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058797274f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.0024017578f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.2789182f ? 
             (data[33 /* X34 */] <-0.35456866f ? 
                 (data[27 /* X28 */] <-0.022868298f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
         (data[14 /* X15 */] <0.08204998f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12632938f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.121252164f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[13 /* X14 */] <0.092845775f ? 
                 (data[31 /* X32 */] <0.040507276f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.006147455f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20099995f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <0.14663129f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.11330204f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.104112215f ? 
             (data[13 /* X14 */] <0.036021754f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19681469f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17841569f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.109375f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.026444336f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20911646f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.14187355f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (data[13 /* X14 */] <0.11338984f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.01953125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[18 /* X19 */] <-0.08796711f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04877377f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16879156f ? 
                 (data[32 /* X33 */] <-0.953125f ? 
                     (data[16 /* X17 */] <-0.5497962f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18519096f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.19493042f ? 
                             (data[14 /* X15 */] <0.12505747f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35318583f ? 
                         (data[1 /* X2 */] <-0.15740064f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1496698f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.01848933f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.01508525f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.213354f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.29296204f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.6192723f ? 
            1.0f : 
             (data[31 /* X32 */] <0.05655061f ? 
                 (data[16 /* X17 */] <-0.48409444f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.33190668f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X6 */] <0.09937715f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12664522f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
             (data[6 /* X7 */] <0.050165128f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.27681908f ? 
                     (data[24 /* X25 */] <-0.43999562f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.092030875f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.46909314f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37890625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07845719f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.120886356f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11394244f ? 
                     (data[33 /* X34 */] <-0.20673242f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13785283f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.15703931f ? 
             (data[2 /* X3 */] <-0.11225548f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19364746f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[21 /* X22 */] <0.13494098f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12548605f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92327833f ? 
             (data[0 /* X1 */] <-0.13701701f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.1499758f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010071439f ? 
            0.0f : 
             (data[12 /* X13 */] <0.15332885f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17898029f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19343302f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.056640625f ? 
             (data[28 /* X29 */] <0.06959438f ? 
                 (data[29 /* X30 */] <0.09905606f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.50240487f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.31088072f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.032794803f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08271122f ? 
             (data[15 /* X16 */] <0.076613076f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058469f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08641682f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20284384f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20558682f ? 
                 (data[13 /* X14 */] <0.09371999f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0944156f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.7752727f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18349715f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20558682f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[30 /* X31 */] <0.024667108f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3832998f ? 
                 (data[19 /* X20 */] <-0.38288423f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.79455644f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (data[26 /* X27 */] <-0.18974069f ? 
             (data[30 /* X31 */] <0.17530411f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24758196f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1475102f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15589213f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[30 /* X31 */] <0.13104479f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19333133f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18263704f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08356192f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[14 /* X15 */] <0.11660146f ? 
             (data[6 /* X7 */] <0.101425216f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.2618873f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.1164496f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.022018433f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.22003275f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35004252f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46843246f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.29293862f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.05638887f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (data[14 /* X15 */] <0.08204998f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.63671875f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.010393205f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124733634f ? 
             (data[17 /* X18 */] <-0.05626625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18944983f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05380085f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13094905f ? 
                     (data[2 /* X3 */] <-0.5745535f ? 
                         (data[2 /* X3 */] <-0.6260849f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4711508f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[15 /* X16 */] <0.08579124f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.07062984f ? 
             (data[22 /* X23 */] <0.06875196f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18650693f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10768662f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
                     (data[21 /* X22 */] <0.061925717f ? 
                         (data[33 /* X34 */] <-0.22115546f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17047898f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[15 /* X16 */] <0.08579124f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26758093f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085537896f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21218689f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15948041f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5523692f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22796464f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5637836f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.019232813f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[27 /* X28 */] <-0.067591965f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06702377f ? 
                 (data[35 /* X36 */] <-0.1953125f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.04158339f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43077236f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16763863f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57686514f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3577768f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.25390625f ? 
            0.0f : 
             (data[15 /* X16 */] <0.05357375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09138017f ? 
         (data[35 /* X36 */] <-0.1015625f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16707897f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.05111366f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.17951752f ? 
                         (data[12 /* X13 */] <0.2016933f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                 (data[24 /* X25 */] <-0.3939205f ? 
                     (data[4 /* X5 */] <0.100710995f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.22384876f ? 
                    0.0f : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.08260934f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.4993948f ? 
                 (data[0 /* X1 */] <0.25991392f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16758612f ? 
             (data[28 /* X29 */] <0.05836579f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21680893f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14639144f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13989316f ? 
             (data[3 /* X4 */] <0.08303565f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.003954213f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.12647188f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[33 /* X34 */] <-0.76021683f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43688822f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.039679434f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35192814f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[26 /* X27 */] <-0.029641813f ? 
                 (data[8 /* X9 */] <0.08685292f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.03723664f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08654341f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.37482882f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16601562f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30284286f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07016287f ? 
                     (data[32 /* X33 */] <-0.5f ? 
                         (data[8 /* X9 */] <0.45608956f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03125f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.1428377f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06288822f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.09387022f ? 
            1.0f : 
             (data[8 /* X9 */] <0.05223699f ? 
                 (data[13 /* X14 */] <0.10595901f ? 
                     (data[6 /* X7 */] <0.12197902f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21006958f ? 
             (data[26 /* X27 */] <0.04692721f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.050775193f ? 
                     (data[13 /* X14 */] <0.08672626f ? 
                         (data[18 /* X19 */] <-0.03923324f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.660094f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.33679485f ? 
                1.0f : 
                0.0f)) : 
        0.90909094f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10346393f ? 
             (data[26 /* X27 */] <-0.015720172f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.23500083f ? 
             (data[21 /* X22 */] <0.04629774f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1585864f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.26919284f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[13 /* X14 */] <0.036021754f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32793677f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38538983f ? 
                     (data[19 /* X20 */] <-0.40224206f ? 
                         (data[18 /* X19 */] <-0.05793012f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.11887458f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17773438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[13 /* X14 */] <0.15229245f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14592105f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.70109457f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5407063f ? 
                 (data[26 /* X27 */] <-0.106210835f ? 
                     (data[23 /* X24 */] <0.089361414f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.03068524f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04914688f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20673242f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.013284654f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.8215148f ? 
             (data[15 /* X16 */] <0.07314702f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
             (data[3 /* X4 */] <-0.30180898f ? 
                 (data[14 /* X15 */] <0.113419086f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.021484375f ? 
             (data[21 /* X22 */] <0.12308424f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09309795f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.20273773f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26442462f ? 
                         (data[14 /* X15 */] <0.12796707f ? 
                             (data[15 /* X16 */] <0.048881885f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.080044515f ? 
            1.0f : 
             (data[29 /* X30 */] <0.06883936f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10853729f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.50546414f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.484375f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.4603156f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92327833f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08631628f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
                     (data[24 /* X25 */] <-0.71705294f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31392482f ? 
                             (data[19 /* X20 */] <-0.37126952f ? 
                                 (data[3 /* X4 */] <-0.20984611f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.07920505f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[24 /* X25 */] <0.09432923f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <-0.2784583f ? 
                     (data[8 /* X9 */] <0.1330075f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18111958f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <-0.57855797f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[26 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17666979f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6993449f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1395275f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.48077032f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.07070276f ? 
                     (data[13 /* X14 */] <0.20260689f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.09125174f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5022441f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (data[23 /* X24 */] <0.060106188f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16990995f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1976123f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067591965f ? 
                 (data[24 /* X25 */] <-0.24209751f ? 
                     (data[14 /* X15 */] <0.12796707f ? 
                         (data[15 /* X16 */] <0.046379555f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.09855957f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.054749615f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.5169453f ? 
             (data[17 /* X18 */] <-0.08754746f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.10299737f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25933594f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.13576216f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[22 /* X23 */] <0.086662136f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.32564545f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.30078125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07694288f ? 
             (data[21 /* X22 */] <0.029359542f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.08281496f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.13889322f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21261333f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.06305904f ? 
                     (data[5 /* X6 */] <0.20929882f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42252144f ? 
             (data[19 /* X20 */] <-0.31755152f ? 
                 (data[21 /* X22 */] <0.059848297f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.859375f ? 
                     (data[32 /* X33 */] <0.234375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17773438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[7 /* X8 */] <0.061970875f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16147749f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.07509412f ? 
             (data[3 /* X4 */] <-0.17685942f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1613275f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.45902306f ? 
                     (data[13 /* X14 */] <0.14730547f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.068359375f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
                 (data[34 /* X35 */] <-0.13636719f ? 
                     (data[10 /* X11 */] <-0.23159955f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09627628f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.10510223f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14338364f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13927852f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15156604f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <0.07403627f ? 
                 (data[30 /* X31 */] <0.18073948f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <1.0411987f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08178615f ? 
             (data[17 /* X18 */] <-0.48974517f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09237448f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.14912616f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10362033f ? 
             (data[19 /* X20 */] <-0.46515504f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09726365f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1154942f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (data[23 /* X24 */] <0.025797788f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13127671f ? 
                 (data[24 /* X25 */] <-0.4696803f ? 
                     (data[23 /* X24 */] <0.095137656f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.029984051f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.16834965f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.07180828f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[18 /* X19 */] <-0.08653678f ? 
             (data[1 /* X2 */] <-0.19140346f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18025324f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28359511f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.051735368f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.13554876f ? 
            1.0f : 
             (data[23 /* X24 */] <0.070212536f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0714376f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[18 /* X19 */] <0.1938085f ? 
             (data[1 /* X2 */] <-0.45775887f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.30398852f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2048353f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.20032129f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08859211f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.002165727f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07418496f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19821279f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011830366f ? 
            0.0f : 
             (data[30 /* X31 */] <0.08756194f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                         (data[25 /* X26 */] <-0.5547568f ? 
                             (data[28 /* X29 */] <0.091847405f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.109267205f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.8333333f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1706565f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.107061036f ? 
                 (data[26 /* X27 */] <0.06780967f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.42412272f ? 
                         (data[22 /* X23 */] <0.16639131f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.15384476f ? 
             (data[33 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07140285f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1706565f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09142148f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.953125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2222975f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4323159f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23713477f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0073585417f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.053191315f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.23106958f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13354251f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14519662f ? 
                 (data[26 /* X27 */] <-0.21062315f ? 
                     (data[15 /* X16 */] <0.056504093f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.051063664f ? 
                         (data[12 /* X13 */] <0.1500504f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.097792834f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.0029865995f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.47716454f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.1335176f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3064156f ? 
             (data[2 /* X3 */] <-0.5941424f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.23327814f ? 
                     (data[11 /* X12 */] <-0.3659624f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16186549f ? 
                            1.0f : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.09248721f ? 
                             (data[14 /* X15 */] <0.18525882f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[3 /* X4 */] <-0.15186952f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5599738f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27582192f ? 
             (data[22 /* X23 */] <0.10130488f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.953125f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5732422f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26623827f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3577768f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.27330175f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12806806f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <0.21991734f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09384892f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26903757f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5483987f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.087137155f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[12 /* X13 */] <0.09055123f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9533154f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31867036f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.56911147f ? 
             (data[3 /* X4 */] <-0.40006095f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14676322f ? 
                 (data[9 /* X10 */] <-0.42023164f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30224094f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.002525f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06264469f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.14091122f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.4870809f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.4218185f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (data[11 /* X12 */] <-0.39848655f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1723677f ? 
                 (data[34 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.11558305f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.14620534f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X5 */] <0.12468097f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.31983897f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14584713f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19432786f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08235054f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.15945834f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05929523f ? 
             (data[34 /* X35 */] <-0.19060516f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.050480794f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14125969f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1941232f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0875345f ? 
                 (data[3 /* X4 */] <-0.2418332f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16346328f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18256824f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.268596f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.008065913f ? 
             (data[34 /* X35 */] <-0.484375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20178553f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14615206f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.13750392f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X7 */] <0.15838087f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4519242f ? 
                 (data[14 /* X15 */] <0.13160408f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26541653f ? 
                         (data[9 /* X10 */] <-0.34224495f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.53487206f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.28557897f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16601562f ? 
             (data[32 /* X33 */] <-0.3515625f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22740944f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5656951f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.3221168f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[6 /* X7 */] <0.08271122f ? 
             (data[9 /* X10 */] <-0.5237527f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
        0.009433962f : 
         (data[3 /* X4 */] <-0.23308672f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07609471f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0859375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18073948f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0808508f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.33593774f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.09572965f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.16513386f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.83462346f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.14702481f ? 
                     (data[4 /* X5 */] <0.1702687f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14677775f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3204398f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17262715f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11644477f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2764161f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[12 /* X13 */] <0.13546742f ? 
                 (data[25 /* X26 */] <-0.25661078f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.009259259f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5313726f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11199954f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01508525f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.1790659f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.20006526f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.13104479f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.018095156f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077127405f ? 
                 (data[19 /* X20 */] <-0.05864039f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.006147455f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.10039997f ? 
             (data[30 /* X31 */] <0.07513827f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12818773f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.16293828f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.04412201f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.06347985f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12598833f ? 
            1.0f : 
             (data[14 /* X15 */] <0.11614683f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1716404f ? 
         (data[11 /* X12 */] <-0.51868457f ? 
             (data[4 /* X5 */] <0.12468097f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
             (data[26 /* X27 */] <-0.033122223f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <0.03058123f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1803918f ? 
             (data[33 /* X34 */] <-0.50240487f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92613906f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.6171875f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.38557363f ? 
                 (data[32 /* X33 */] <0.0078125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[29 /* X30 */] <0.113507524f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.16686346f ? 
                 (data[18 /* X19 */] <0.2281365f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[30 /* X31 */] <0.0343731f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.6447744f ? 
                 (data[32 /* X33 */] <-0.25f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2942608f ? 
                     (data[0 /* X1 */] <-0.12651874f ? 
                         (data[34 /* X35 */] <-0.8249997f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.37633204f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[33 /* X34 */] <-0.97656256f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16186549f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10688689f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.1875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2804287f ? 
                 (data[21 /* X22 */] <0.16147749f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37109375f ? 
             (data[23 /* X24 */] <0.037765834f ? 
                 (data[24 /* X25 */] <-0.083779044f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X9 */] <0.14454615f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10100503f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.055010796f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.73437625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.27286264f ? 
             (data[3 /* X4 */] <-0.39427164f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.57029307f ? 
                     (data[0 /* X1 */] <0.027455833f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X2 */] <0.0976205f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.31997123f ? 
            0.0f : 
             (data[5 /* X6 */] <0.11540739f ? 
                 (data[25 /* X26 */] <0.0074943327f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[27 /* X28 */] <-0.14745566f ? 
             (data[27 /* X28 */] <-0.20050925f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21188954f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.058832202f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14398739f ? 
             (data[18 /* X19 */] <0.06507852f ? 
                 (data[8 /* X9 */] <-0.5075647f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3214073f ? 
                    1.0f : 
                     (data[33 /* X34 */] <0.37243602f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <-0.23044123f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.002842638f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[22 /* X23 */] <0.08608439f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14398739f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21567972f ? 
                 (data[22 /* X23 */] <0.04159783f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X8 */] <0.0774776f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13607176f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[2 /* X3 */] <-0.20824108f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18463843f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.074467845f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.05480585f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4964748f ? 
             (data[18 /* X19 */] <-0.035044793f ? 
                 (data[34 /* X35 */] <0.1388875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.18950833f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.21378557f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.13607176f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[2 /* X3 */] <-0.23566553f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30224094f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.10430094f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.25858876f ? 
                 (data[18 /* X19 */] <0.17092317f ? 
                     (data[27 /* X28 */] <-0.23372288f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75f ? 
                     (data[5 /* X6 */] <0.08105687f ? 
                         (data[32 /* X33 */] <-0.15625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.53759444f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.065024056f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32853198f ? 
             (data[10 /* X11 */] <-0.8215063f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-4.9857557E-4f ? 
             (data[11 /* X12 */] <-0.39707246f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17241152f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.52020484f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08657321f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.00930891f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.17101395f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16676284f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.2703668f ? 
             (data[10 /* X11 */] <-0.18918796f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26261306f ? 
             (data[22 /* X23 */] <0.042175576f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.15930483f ? 
                     (data[34 /* X35 */] <-0.546875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.025531832f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.25705826f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.421875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[4 /* X5 */] <0.09136687f ? 
             (data[16 /* X17 */] <-0.3078943f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23534293f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17292315f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14629394f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.124080904f ? 
                             (data[19 /* X20 */] <-0.1683652f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06355598f ? 
            0.0f : 
             (data[5 /* X6 */] <0.12800258f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[35 /* X36 */] <-0.103515625f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3984375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.30042422f ? 
                    1.0f : 
                    0.0f))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26560345f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17138745f ? 
                 (data[25 /* X26 */] <-0.5679951f ? 
                     (data[10 /* X11 */] <-0.6325819f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08563802f ? 
             (data[18 /* X19 */] <0.08187378f ? 
                 (data[1 /* X2 */] <-0.22540627f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20558682f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.06255839f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.03167837f ? 
            1.0f : 
             (data[14 /* X15 */] <0.09057512f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.08566385f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08058485f ? 
             (data[18 /* X19 */] <0.06520553f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20558682f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.11328125f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.033650193f ? 
             (data[20 /* X21 */] <0.112566315f ? 
                 (data[19 /* X20 */] <-0.43127882f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.11649857f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[18 /* X19 */] <-0.08796711f ? 
             (data[14 /* X15 */] <0.13433182f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13962388f ? 
                     (data[30 /* X31 */] <0.116158396f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5523692f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2521756f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1430587f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53125095f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[33 /* X34 */] <-0.2842563f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.168743f ? 
                 (data[14 /* X15 */] <0.08655146f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                     (data[15 /* X16 */] <0.04121926f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062331904f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14787185f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16542499f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.23014829f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.11558305f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13031873f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24984615f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.207674f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[32 /* X33 */] <-0.23632812f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.40014398f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.114907615f ? 
                    1.0f : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06255839f ? 
                 (data[32 /* X33 */] <-0.25f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.16070005f ? 
                     (data[17 /* X18 */] <-0.26686296f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.10052968f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.0979035f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22422864f ? 
             (data[19 /* X20 */] <-0.31755152f ? 
                 (data[0 /* X1 */] <-0.25442243f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12818925f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.484375f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X9 */] <0.17545408f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.035557203f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5157059f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5523692f ? 
                 (data[8 /* X9 */] <-0.33854616f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22930887f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19578287f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.083143495f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[19 /* X20 */] <0.062346112f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5557935f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23231688f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.021484375f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09886618f ? 
                     (data[26 /* X27 */] <-0.022680992f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17437744f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.013669973f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.12433007f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.68161076f ? 
            1.0f : 
             (data[30 /* X31 */] <0.09144434f ? 
                 (data[18 /* X19 */] <0.78310573f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.4092614f ? 
                     (data[22 /* X23 */] <0.14097041f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47916684f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
             (data[3 /* X4 */] <-0.33179688f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.07513827f ? 
                     (data[12 /* X13 */] <0.1070993f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.080704026f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[32 /* X33 */] <-0.0546875f ? 
                 (data[12 /* X13 */] <0.11970736f ? 
                     (data[0 /* X1 */] <0.24373007f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11913167f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.125f ? 
             (data[21 /* X22 */] <0.12421345f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.05404737f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.43490842f ? 
             (data[8 /* X9 */] <-0.13622753f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41664478f ? 
                 (data[34 /* X35 */] <-0.890625f ? 
                     (data[0 /* X1 */] <-0.11252105f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18073948f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1554951f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11195058f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.13542497f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41185808f ? 
             (data[4 /* X5 */] <0.11416073f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.076864496f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1441114f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0546875f ? 
                 (data[18 /* X19 */] <-0.012159463f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.007234351f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46484375f ? 
                 (data[14 /* X15 */] <0.109782085f ? 
                     (data[6 /* X7 */] <0.08433852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.05748364f ? 
             (data[0 /* X1 */] <0.09744427f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43618235f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44103387f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30182207f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.12117423f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.095478415f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10261027f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3546329f ? 
                         (data[14 /* X15 */] <0.16433704f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.83462346f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.33648407f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.5488479f ? 
                     (data[26 /* X27 */] <0.0051622894f ? 
                         (data[16 /* X17 */] <-0.21531452f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.095478415f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09860508f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34545064f ? 
                     (data[29 /* X30 */] <0.087232135f ? 
                         (data[17 /* X18 */] <-0.35411164f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
        0.009259259f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[26 /* X27 */] <-0.19322109f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1258094f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59786165f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14519662f ? 
                     (data[26 /* X27 */] <-0.037527118f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19084181f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21179865f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.06314941f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15278621f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.20298558f ? 
            0.0f : 
             (data[5 /* X6 */] <0.13372767f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0546875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28125f ? 
             (data[31 /* X32 */] <0.03502273f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13403231f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04390335f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.09937715f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.09377378f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[15 /* X16 */] <0.07109006f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14292076f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.26849553f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04600363f ? 
         (data[3 /* X4 */] <-0.33679485f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5721314f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16220398f ? 
                         (data[26 /* X27 */] <-0.008991254f ? 
                             (data[3 /* X4 */] <-0.2912182f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14232592f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.1118229f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.39141607f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[35 /* X36 */] <-0.40429688f ? 
             (data[29 /* X30 */] <0.19890255f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07054069f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.46515504f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1015625f ? 
                 (data[25 /* X26 */] <-0.25360733f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13449354f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.09919703f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.37109375f ? 
             (data[19 /* X20 */] <-0.24253988f ? 
                 (data[35 /* X36 */] <-0.9508667f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.12169489f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29632014f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.015169999f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5233983f ? 
             (data[21 /* X22 */] <0.06267133f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1671541f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.15135707f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.09615156f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.090532616f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5711563f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[2 /* X3 */] <-0.23174775f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20700878f ? 
                 (data[35 /* X36 */] <-0.4062486f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.07006812f ? 
                 (data[18 /* X19 */] <0.18808717f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3221168f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <-0.43305394f ? 
                     (data[0 /* X1 */] <-0.025964804f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[26 /* X27 */] <-0.17233863f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15135707f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21533923f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X5 */] <0.101010434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13829318f ? 
             (data[19 /* X20 */] <-0.32723042f ? 
                 (data[17 /* X18 */] <-0.4500613f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101430796f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17159499f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.33114216f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.1791532f ? 
                 (data[25 /* X26 */] <-0.45076573f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13829318f ? 
             (data[19 /* X20 */] <-0.32723042f ? 
                 (data[5 /* X6 */] <0.10853729f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.25287575f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17159499f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38701713f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (data[26 /* X27 */] <-0.21410355f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12283937f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.13753904f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.06639819f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[34 /* X35 */] <-0.5957031f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4851339f ? 
                 (data[25 /* X26 */] <-0.23046412f ? 
                     (data[25 /* X26 */] <-0.32930958f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[16 /* X17 */] <-0.2825095f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09025955f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08156831f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-5.326794E-4f ? 
                        1.0f : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.27178222f ? 
                 (data[1 /* X2 */] <-0.31608045f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.12069705f ? 
                         (data[14 /* X15 */] <0.15706305f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.103316344f ? 
             (data[18 /* X19 */] <0.016447198f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.106697865f ? 
         (data[11 /* X12 */] <-0.43101072f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13729046f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47867572f ? 
             (data[25 /* X26 */] <-0.57065934f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.11912447f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[16 /* X17 */] <-0.35717058f ? 
             (data[34 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (data[33 /* X34 */] <-0.42307812f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.39226612f ? 
                     (data[31 /* X32 */] <0.10311092f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.9101851f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2930403f ? 
             (data[19 /* X20 */] <-0.39256313f ? 
                 (data[33 /* X34 */] <0.21874747f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19185337f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16753446f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67691565f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13715537f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X5 */] <0.19832267f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.14606637f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (data[32 /* X33 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6328559f ? 
                 (data[26 /* X27 */] <-0.4264086f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1395275f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18182354f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.0029865995f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5997605f ? 
                1.0f : 
                 (data[1 /* X2 */] <0.0012791834f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[7 /* X8 */] <0.06918952f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0588912f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31620085f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.17473483f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.68656033f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.09449124f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15847138f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.099985614f ? 
                     (data[28 /* X29 */] <0.1114464f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[18 /* X19 */] <-0.15948378f ? 
            1.0f : 
             (data[23 /* X24 */] <0.038829662f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2421875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3969064f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22057182f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <6.339786E-4f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18615903f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22842425f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13391043f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07670948f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.14338364f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12391005f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[34 /* X35 */] <-0.7519531f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16881737f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.5379327f ? 
                 (data[4 /* X5 */] <0.10118734f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.31788316f ? 
            0.0f : 
             (data[15 /* X16 */] <0.10518429f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.041243542f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24649481f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1414889f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (data[18 /* X19 */] <-0.08510645f ? 
             (data[11 /* X12 */] <-0.26537162f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5330138f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16055101f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.08909276f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8404607f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.23524372f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.046580464f ? 
             (data[26 /* X27 */] <-0.15841699f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.099157974f ? 
                     (data[5 /* X6 */] <0.16735886f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (data[35 /* X36 */] <-0.103515625f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07158189f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.481108f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0024017578f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14792137f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.06195316f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X6 */] <0.119987465f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.118836395f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.12849528f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[26 /* X27 */] <0.088692136f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.021488504f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X6 */] <0.13294943f ? 
                     (data[26 /* X27 */] <-0.21758397f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (data[11 /* X12 */] <-0.6431249f ? 
            1.0f : 
             (data[28 /* X29 */] <0.072146334f ? 
                 (data[4 /* X5 */] <0.11416073f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4621208f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4176274f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09140008f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.09468054f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0737346f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31047702f ? 
                1.0f : 
                0.0f) : 
             (data[18 /* X19 */] <0.24530049f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06303171f ? 
            0.0f : 
             (data[21 /* X22 */] <0.14002243f ? 
                 (data[11 /* X12 */] <-0.3320241f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.38062617f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.41115397f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
             (data[17 /* X18 */] <-0.54076725f ? 
                 (data[23 /* X24 */] <0.03404244f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23261791f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.15058051f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1659569f ? 
             (data[23 /* X24 */] <0.06346451f ? 
                 (data[8 /* X9 */] <0.40224254f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61710846f ? 
             (data[7 /* X8 */] <0.028283859f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17005678f ? 
                     (data[0 /* X1 */] <-0.18192892f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.07910517f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.5673086f ? 
                         (data[11 /* X12 */] <-0.69403225f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1703965f ? 
             (data[14 /* X15 */] <0.12614858f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08809146f ? 
                     (data[19 /* X20 */] <-0.16994798f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.09314835f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.234375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.053905968f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.08216453f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24368659f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.49966612f ? 
             (data[30 /* X31 */] <0.12949184f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12881018f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124733634f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.56986624f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17489634f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.1340264f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16211699f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17629169f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20914464f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.5087631f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.064454116f ? 
            1.0f : 
             (data[14 /* X15 */] <0.0915971f ? 
                 (data[34 /* X35 */] <-0.1171875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3984375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.26171875f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10060768f ? 
                 (data[9 /* X10 */] <-0.7490632f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30393207f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22616367f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010071439f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09227083f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17107579f ? 
            1.0f : 
             (data[31 /* X32 */] <0.096387275f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.123701096f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.077998236f ? 
                 (data[19 /* X20 */] <-0.4368119f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08309196f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.080730885f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29561776f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15720648f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.08833842f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21006958f ? 
             (data[11 /* X12 */] <-0.5865611f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.7868059f ? 
                     (data[16 /* X17 */] <-0.08391101f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21003366f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.06911132f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32067454f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12664844f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.20431773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (data[15 /* X16 */] <0.068118535f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.075899184f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10476632f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0026064452f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17841569f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2517679f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.18898478f ? 
             (data[31 /* X32 */] <0.07657655f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[27 /* X28 */] <-0.38864404f ? 
            1.0f : 
             (data[22 /* X23 */] <0.023687651f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1160087f ? 
                     (data[23 /* X24 */] <0.025531832f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21680893f ? 
                            0.0f : 
                             (data[8 /* X9 */] <-0.09459059f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[34 /* X35 */] <-0.25f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[18 /* X19 */] <0.13373451f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[34 /* X35 */] <-0.033203125f ? 
            0.0f : 
             (data[18 /* X19 */] <0.20239049f ? 
                 (data[11 /* X12 */] <-0.360306f ? 
                     (data[4 /* X5 */] <0.12818773f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3945501f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.14199255f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42531982f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.1894193f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[14 /* X15 */] <0.12796707f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21516222f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18528025f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.484375f ? 
             (data[13 /* X14 */] <0.09197156f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.072265625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.09485391f ? 
                     (data[25 /* X26 */] <-0.17900686f ? 
                         (data[27 /* X28 */] <-0.039786387f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06479567f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0684383f ? 
             (data[18 /* X19 */] <0.2087852f ? 
                 (data[13 /* X14 */] <0.1444245f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09585122f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.23590259f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25579217f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.0703125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.84840345f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[35 /* X36 */] <-0.40429688f ? 
             (data[3 /* X4 */] <-0.14687154f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07303968f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16333151f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06931715f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09193136f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5837708f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.067852736f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.6942579f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[35 /* X36 */] <-0.5078125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05106013f ? 
                 (data[19 /* X20 */] <-0.3248107f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6948071f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.0698178f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32057896f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3070697f ? 
                 (data[7 /* X8 */] <0.028283859f ? 
                     (data[9 /* X10 */] <-0.3836948f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10346306f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.19007455f ? 
                             (data[23 /* X24 */] <0.04085093f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19430503f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25964087f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.018210437f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2659387f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[10 /* X11 */] <-0.20268255f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.024182135f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4473865f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23209728f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.10833769f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.02960363f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27941424f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.05855437f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5885804f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07807849f ? 
            0.0f : 
             (data[14 /* X15 */] <0.12251158f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.07265401f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26560345f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24669823f ? 
                 (data[29 /* X30 */] <0.060956743f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.03125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.32311353f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09148906f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.08135011f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.07062984f ? 
             (data[1 /* X2 */] <-0.49176168f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.35456866f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.13576216f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.08037016f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1781169f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09148906f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106435455f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5851093f ? 
                         (data[3 /* X4 */] <-0.2418332f ? 
                             (data[7 /* X8 */] <0.08777524f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.07746771f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26758093f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.6447744f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14961277f ? 
            0.0f : 
             (data[7 /* X8 */] <0.05341544f ? 
                 (data[26 /* X27 */] <-0.015720172f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.13218547f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.15021992f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33500353f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17305192f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53125095f ? 
                 (data[11 /* X12 */] <-0.67140675f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.049725045f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28125f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0024528503f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07015168f ? 
                     (data[7 /* X8 */] <0.048411313f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.061556257f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.11274848f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.35515782f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.03781766f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.31608045f ? 
                 (data[33 /* X34 */] <-0.7548082f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.106697865f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3572829f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12712725f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.124138154f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[4 /* X5 */] <0.12935664f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.006303102f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05795055f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10053429f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23557852f ? 
                 (data[15 /* X16 */] <0.038246986f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3046875f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.61077154f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X13 */] <0.10867531f ? 
                 (data[18 /* X19 */] <0.09654585f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.15029307f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09175502f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.066579044f ? 
                 (data[32 /* X33 */] <-0.3046875f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19005723f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16267075f ? 
             (data[30 /* X31 */] <0.03476134f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.6640625f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1660583f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23109904f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15910754f ? 
                 (data[27 /* X28 */] <-0.3295449f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.49436837f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[32 /* X33 */] <0.6855469f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (data[4 /* X5 */] <0.060390607f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.23529142f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.024182135f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24496499f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[32 /* X33 */] <-0.19140625f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11062065f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09737359f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6171875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.054094333f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20673242f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.41604656f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08759313f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22093026f ? 
                 (data[33 /* X34 */] <-0.379809f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.0588912f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46843246f ? 
                     (data[28 /* X29 */] <0.10532172f ? 
                         (data[26 /* X27 */] <0.7285001f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-7.13492E-4f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.546875f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.14241046f ? 
                         (data[7 /* X8 */] <0.16089307f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[9 /* X10 */] <-0.14620534f ? 
             (data[25 /* X26 */] <-0.4124418f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15611652f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30393207f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <0.2983262f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.018660825f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[33 /* X34 */] <-0.19050649f ? 
             (data[29 /* X30 */] <0.051760357f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14361513f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.18277551f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.12311562f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10518429f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.328125f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20099995f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[7 /* X8 */] <0.045662083f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.29907906f ? 
                 (data[26 /* X27 */] <0.10261378f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26197746f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X1 */] <-0.2140043f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10542097f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35313147f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18639848f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8002697f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.57089233f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[7 /* X8 */] <0.025877643f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1170209f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.125f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.2149794f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[33 /* X34 */] <-0.3599773f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.011155787f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.1484375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.010605735f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16220398f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                 (data[31 /* X32 */] <0.033020135f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.094456255f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.06299573f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[26 /* X27 */] <-0.34287873f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14005342f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16887192f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.32564545f ? 
            0.0f : 
             (data[13 /* X14 */] <0.100713715f ? 
                 (data[15 /* X16 */] <0.04450281f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2755468f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13977748f ? 
                         (data[33 /* X34 */] <-0.42307812f ? 
                             (data[13 /* X14 */] <0.1573096f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.88222563f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.43490842f ? 
             (data[2 /* X3 */] <-0.120091036f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12818925f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39496824f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.111328125f ? 
             (data[24 /* X25 */] <-0.108516306f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19906086f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24818026f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
             (data[4 /* X5 */] <0.1410458f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13104479f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.078125f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19791484f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.068359375f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1496698f ? 
                 (data[34 /* X35 */] <0.015625f ? 
                     (data[2 /* X3 */] <-0.48219186f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.064534396f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15451899f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.27163613f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.5273979f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.55076313f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.50108343f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11416073f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25592452f ? 
             (data[13 /* X14 */] <0.08672626f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.107802555f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27385235f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17158735f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17021221f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.076925f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2844688f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.07056877f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07266516f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[18 /* X19 */] <-0.05220879f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09910573f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.15243234f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.033650193f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10612266f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.08591836f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.0078125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06476584f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18174693f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1110749f ? 
             (data[18 /* X19 */] <-0.08653678f ? 
                 (data[3 /* X4 */] <-0.15186952f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22596715f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14631797f ? 
                        0.0f : 
                        1.0f))) : 
             (data[32 /* X33 */] <-0.14453125f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.06327028f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[19 /* X20 */] <-0.09493634f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1431606f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.39190507f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.25120184f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.26426455f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[7 /* X8 */] <0.03897815f ? 
                 (data[32 /* X33 */] <-0.421875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (data[17 /* X18 */] <-0.3480171f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22714859f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.24548858f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23138791f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.12109375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.033434123f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.16803825f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.33648407f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.19060516f ? 
                 (data[17 /* X18 */] <-0.13259041f ? 
                     (data[21 /* X22 */] <0.21906735f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0031027184f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10444312f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.009259259f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[14 /* X15 */] <0.14524281f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5214752f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.19140625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17499003f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12908939f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07046447f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.016479202f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.07287598f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.014806787f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.01653975f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1732916f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06139353f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3538537f ? 
            0.0f : 
             (data[3 /* X4 */] <0.04804977f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.07374878f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.5078125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101430796f ? 
             (data[2 /* X3 */] <-0.3394867f ? 
                 (data[16 /* X17 */] <-0.15154557f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.06259429f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.33114216f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10174359f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.04189207f ? 
                     (data[17 /* X18 */] <0.08951899f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14475237f ? 
            0.0f : 
             (data[4 /* X5 */] <0.17728218f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18545698f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11050174f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.17235677f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
             (data[26 /* X27 */] <-0.029641813f ? 
                 (data[22 /* X23 */] <0.13634843f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.11422331f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[15 /* X16 */] <0.07109006f ? 
             (data[2 /* X3 */] <-0.2219533f ? 
                 (data[35 /* X36 */] <-0.21875f ? 
                     (data[6 /* X7 */] <0.10061157f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.010090107f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.064560935f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14005364f ? 
             (data[22 /* X23 */] <0.10159442f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1860328f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.10958943f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14049053f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.10546875f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2024809f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21064734f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.24702194f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19032082f ? 
             (data[35 /* X36 */] <-0.859375f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21298318f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.18268985f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.875f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.09831307f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[22 /* X23 */] <0.13172646f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22457679f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20471875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.6894531f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (data[26 /* X27 */] <0.06606947f ? 
             (data[9 /* X10 */] <-0.1340264f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16796875f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26943734f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.27931806f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.008826484f ? 
             (data[35 /* X36 */] <-0.125f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10080521f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.03496268f ? 
            1.0f : 
             (data[13 /* X14 */] <0.09371999f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.32413393f ? 
                     (data[2 /* X3 */] <-0.30814445f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[11 /* X12 */] <-0.51868457f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.56986624f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07453076f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <-0.1385935f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18114156f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.421875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.041578643f ? 
            1.0f : 
             (data[23 /* X24 */] <0.0501758f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4140625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09234697f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10518429f ? 
                 (data[21 /* X22 */] <0.072143264f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2581735f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.48362163f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19049226f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4406963f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.059113234f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.027626297f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.69070864f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11062065f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17074412f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013875385f ? 
             (data[34 /* X35 */] <-0.5039651f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1984449f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07765867f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11062065f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17074412f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08656589f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.00930891f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16834965f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46457642f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.22975169f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10546875f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.4183927f ? 
                 (data[26 /* X27 */] <0.0051622894f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-5.7981786E-5f ? 
                 (data[19 /* X20 */] <-0.43127882f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.093336664f ? 
                        1.0f : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.5706555f ? 
                         (data[30 /* X31 */] <0.15481274f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.1794772f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.009259259f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14981322f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13977748f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.49040267f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35742188f ? 
             (data[3 /* X4 */] <-0.31430393f ? 
                 (data[27 /* X28 */] <0.11769181f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.07163595f ? 
                     (data[30 /* X31 */] <0.08135011f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.83077675f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.06831931f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0084914835f ? 
             (data[11 /* X12 */] <-0.4281825f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10234182f ? 
             (data[14 /* X15 */] <0.08254933f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.07516823f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0444129f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66867906f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.32564545f ? 
            0.0f : 
             (data[13 /* X14 */] <0.09896529f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11225548f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13848242f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08454696f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.125f ? 
                     (data[20 /* X21 */] <0.011454239f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34145263f ? 
                             (data[35 /* X36 */] <-0.85f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4177745f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1575188f ? 
                 (data[24 /* X25 */] <-0.083779044f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1657371f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97763103f ? 
                 (data[30 /* X31 */] <0.035205886f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.033203125f ? 
             (data[2 /* X3 */] <-0.35515782f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16894531f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26102322f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11118188f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15741062f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.031917945f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X3 */] <-0.049571f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21484375f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1443811f ? 
                 (data[26 /* X27 */] <0.01212311f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.76753217f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.379809f ? 
                     (data[20 /* X21 */] <0.13172375f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19862036f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.11194219f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.5423301f ? 
             (data[2 /* X3 */] <0.013113473f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26818812f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.0546875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28061375f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30393207f ? 
                     (data[18 /* X19 */] <-0.05793012f ? 
                         (data[20 /* X21 */] <0.10098109f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.031917945f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[26 /* X27 */] <-0.33591792f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08657321f ? 
            1.0f : 
             (data[28 /* X29 */] <0.1339036f ? 
                 (data[21 /* X22 */] <0.16034827f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.33648407f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.24968119f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.19060516f ? 
                     (data[16 /* X17 */] <-0.4064469f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019207953f ? 
                 (data[19 /* X20 */] <-0.55710477f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.0029847263f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2273989f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1875f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.12582682f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.31029233f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.09532835f ? 
             (data[27 /* X28 */] <-0.12828837f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[15 /* X16 */] <0.07046447f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09765625f ? 
                 (data[3 /* X4 */] <-0.28181705f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.061286926f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.15286224f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.20096016f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.363672f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26623827f ? 
            0.0f : 
             (data[28 /* X29 */] <0.27630255f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.21617715f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3828393f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04804977f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17558314f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.041884445f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06065642f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.046875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.50546414f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.20336875f ? 
                         (data[34 /* X35 */] <-0.59375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22048016f ? 
             (data[19 /* X20 */] <-0.31755152f ? 
                 (data[20 /* X21 */] <0.14714551f ? 
                     (data[7 /* X8 */] <0.08942776f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.03531492f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.114621915f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.03986553f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[16 /* X17 */] <-0.32835093f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13825953f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12401768f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.008668744f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.058162592f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.1410458f ? 
                 (data[2 /* X3 */] <-0.21411775f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12436717f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19094558f ? 
             (data[8 /* X9 */] <0.32916445f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.09921927f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08148795f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
                 (data[35 /* X36 */] <-0.0859375f ? 
                     (data[24 /* X25 */] <-0.3309087f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.76894945f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2602198f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0546875f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.21003713f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3430348f ? 
                 (data[30 /* X31 */] <0.0760357f ? 
                     (data[25 /* X26 */] <-0.488066f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[15 /* X16 */] <0.04935107f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12019414f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.050023872f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.24828903f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.515625f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.19727413f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (data[33 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.62001777f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38574615f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19779506f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13111293f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14380376f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.25705826f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.18259569f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.067492954f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34590325f ? 
             (data[33 /* X34 */] <-0.92067325f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16517328f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.28025037f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.67140675f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17499003f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.8557695f ? 
                 (data[19 /* X20 */] <0.04782773f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (data[15 /* X16 */] <0.05357375f ? 
             (data[33 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11972004f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08654341f ? 
                     (data[16 /* X17 */] <-0.7050913f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.112409286f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.45913574f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.29242948f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[15 /* X16 */] <0.0729668f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.11722466f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.015939288f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.12139014f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37564835f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16837907f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20713915f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.18395686f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.015625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25102183f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13114743f ? 
                        1.0f : 
                        0.0f))) : 
             (data[20 /* X21 */] <0.07945857f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13301547f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.048923f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[29 /* X30 */] <0.0993845f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0648934f ? 
                 (data[35 /* X36 */] <-0.125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[27 /* X28 */] <-0.06527093f ? 
                 (data[28 /* X29 */] <0.08796844f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24108702f ? 
             (data[23 /* X24 */] <0.026063744f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.25926483f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17898855f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21050648f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0918555f ? 
             (data[28 /* X29 */] <0.096134685f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6007804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37739804f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.05190987f ? 
                 (data[2 /* X3 */] <-0.027058754f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.049725045f ? 
             (data[26 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.94230783f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0686168f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.07509412f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[35 /* X36 */] <-0.0859375f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10592654f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <0.3125f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07315877f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[14 /* X15 */] <0.0915971f ? 
             (data[26 /* X27 */] <0.29403633f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.36502445f ? 
                 (data[14 /* X15 */] <0.12401015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41930473f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19480516f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3223106f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[22 /* X23 */] <0.09301736f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14199856f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.078125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.120233394f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.15703931f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[35 /* X36 */] <-0.3828125f ? 
                 (data[15 /* X16 */] <0.06827494f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18540333f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.08818722f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1772812f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28125f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17910394f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.12985952f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.064907126f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <0.0234375f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17838335f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[33 /* X34 */] <-0.5961547f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08977603f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.42632112f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.15921906f ? 
                 (data[26 /* X27 */] <-0.1270933f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5753222f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2539545f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18800499f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.32280007f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.066368885f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.080822974f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.05322269f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (data[35 /* X36 */] <-0.0859375f ? 
             (data[32 /* X33 */] <-0.4765625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
                 (data[18 /* X19 */] <0.050775193f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103933126f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.055221383f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19767958f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.48028573f ? 
            1.0f : 
             (data[5 /* X6 */] <0.086781956f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.5275401f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.09106227f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (data[18 /* X19 */] <-0.059360456f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.086430624f ? 
                 (data[5 /* X6 */] <0.12544656f ? 
                     (data[9 /* X10 */] <0.12782095f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2817387f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24751201f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4179793f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18073948f ? 
                 (data[19 /* X20 */] <-0.4845129f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20475905f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.19230938f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.2667372f ? 
             (data[26 /* X27 */] <0.16874157f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.5602895f ? 
                 (data[26 /* X27 */] <0.28359511f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.400416f ? 
                     (data[34 /* X35 */] <0.085225314f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42252144f ? 
             (data[19 /* X20 */] <-0.48209316f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2927105f ? 
                     (data[8 /* X9 */] <-0.14588831f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07026429f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.0046198107f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10775041f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48108995f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.06382958f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.10546875f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[2 /* X3 */] <-0.2415422f ? 
             (data[35 /* X36 */] <-0.37109375f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.12515251f ? 
                     (data[16 /* X17 */] <-0.2750434f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.083779044f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2854623f ? 
                 (data[19 /* X20 */] <-0.16994798f ? 
                     (data[13 /* X14 */] <0.100713715f ? 
                         (data[23 /* X24 */] <0.051873293f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062331904f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19549258f ? 
                 (data[26 /* X27 */] <0.088692136f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0737346f ? 
             (data[29 /* X30 */] <0.09051656f ? 
                 (data[4 /* X5 */] <0.089613505f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23105414f ? 
                 (data[29 /* X30 */] <0.09380098f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.4453125f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.43631136f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.12213077f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.059574272f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07721024f ? 
             (data[23 /* X24 */] <0.02180844f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2344892f ? 
                 (data[31 /* X32 */] <0.059053853f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34470722f ? 
                    0.0f : 
                    1.0f))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30730563f ? 
             (data[26 /* X27 */] <-0.033122223f ? 
                 (data[31 /* X32 */] <0.097103134f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.09779591f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17322749f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5564913f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14859463f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.022733688f ? 
             (data[23 /* X24 */] <0.04893601f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.13750392f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.05753912f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.14959778f ? 
                 (data[35 /* X36 */] <0.2265625f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14803784f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.21288495f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.052667193f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09508132f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08208368f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.12181437f ? 
                 (data[8 /* X9 */] <0.24070151f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09865522f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22911924f ? 
                 (data[31 /* X32 */] <0.033020135f ? 
                     (data[22 /* X23 */] <0.14559239f ? 
                         (data[33 /* X34 */] <-0.076925f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26984608f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.20431773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[33 /* X34 */] <-0.50240487f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18850428f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.09574437f ? 
                 (data[9 /* X10 */] <0.012120965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08738578f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.5432112f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24249853f ? 
             (data[22 /* X23 */] <0.086662136f ? 
                 (data[19 /* X20 */] <-0.25705826f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3002909f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12083665f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.13143763f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.39498287f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.044995245f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.011926016f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[14 /* X15 */] <0.15206218f ? 
             (data[22 /* X23 */] <0.11786051f ? 
                 (data[19 /* X20 */] <0.028469892f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.074467845f ? 
                 (data[7 /* X8 */] <0.03790872f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.07795152f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18642499f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.234375f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10835523f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.34765625f ? 
             (data[24 /* X25 */] <-0.5933666f ? 
                 (data[9 /* X10 */] <-0.1766527f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.03502273f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1391792f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12499959f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14288782f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47572836f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.20096016f ? 
             (data[2 /* X3 */] <-0.17885773f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.2691569f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.106697865f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6855469f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.09787202f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.4861604f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28738102f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[15 /* X16 */] <0.03840338f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.052127488f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13724682f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19862588f ? 
                 (data[30 /* X31 */] <0.025443587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18430148f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.22329639f ? 
                         (data[25 /* X26 */] <-0.2216357f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19773822f ? 
                 (data[23 /* X24 */] <0.027964931f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.25926483f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09705238f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.18141274f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.1132498f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.0546875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16436328f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49839792f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.07307768f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39839458f ? 
                 (data[5 /* X6 */] <0.14179645f ? 
                     (data[28 /* X29 */] <0.16199158f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09802959f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.046800274f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15741062f ? 
                 (data[27 /* X28 */] <-0.10592654f ? 
                     (data[32 /* X33 */] <-0.109375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.13640863f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0546875f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.32381558f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X9 */] <0.12916128f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2570977f ? 
                 (data[17 /* X18 */] <-0.48974517f ? 
                     (data[11 /* X12 */] <-0.37727514f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (data[3 /* X4 */] <-0.33679485f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1537229f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08706961f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.67147756f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.61778927f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.33012924f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[21 /* X22 */] <0.07001121f ? 
             (data[1 /* X2 */] <0.18262756f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.13126475f ? 
                 (data[34 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09592525f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019207953f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.094456255f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.17916209f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.09932321f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[0 /* X1 */] <-0.1335176f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11618071f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.34220695f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26261306f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.29828498f ? 
                    1.0f : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.19140625f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.35515782f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34590325f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.00694632f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1796875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3621628f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.028016502f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6171875f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26109073f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.075074606f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16707897f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04914688f ? 
                 (data[34 /* X35 */] <0.015625f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21875f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.36541098f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57916844f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0234375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.62405086f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08474535f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11728276f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2935553f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.085087575f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4176414f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.4178115f ? 
                 (data[10 /* X11 */] <-0.8176507f ? 
                     (data[22 /* X23 */] <0.06008575f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3817505f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (data[27 /* X28 */] <-0.102731995f ? 
             (data[32 /* X33 */] <-0.0546875f ? 
                 (data[34 /* X35 */] <-0.4609375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.115193605f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08244866f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6094724f ? 
                     (data[20 /* X21 */] <0.07557248f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[18 /* X19 */] <0.24530049f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3204398f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23101844f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.120198265f ? 
                     (data[23 /* X24 */] <0.025531832f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.9375f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18791334f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13907307f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17582236f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.34726754f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38586372f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10190982f ? 
             (data[33 /* X34 */] <-0.6899045f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (data[18 /* X19 */] <-0.35686973f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16055101f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5022441f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.25f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.07241513f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657035f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23317987f ? 
                 (data[18 /* X19 */] <-0.08081545f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00483003f ? 
                 (data[20 /* X21 */] <0.13831678f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2415422f ? 
         (data[27 /* X28 */] <-0.14106657f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19167681f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.11328125f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.009765625f ? 
            0.0f : 
             (data[15 /* X16 */] <0.06890052f ? 
                 (data[8 /* X9 */] <-0.10612423f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.018326402f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1496698f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30991608f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.078125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.076925f ? 
                 (data[35 /* X36 */] <-0.40625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.15218443f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.4134655f ? 
                 (data[31 /* X32 */] <0.08308498f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13970727f ? 
                        0.0f : 
                        1.0f)))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22048016f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.618987f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21906735f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.59375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.108309425f ? 
                    0.0f : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.17161104f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14267607f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.029890068f ? 
            1.0f : 
             (data[11 /* X12 */] <0.035510622f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1683574f ? 
             (data[14 /* X15 */] <0.11432833f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17414783f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19140163f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48685926f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.27734375f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.214072f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12192288f ? 
                 (data[18 /* X19 */] <0.033611197f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06672645f ? 
                     (data[34 /* X35 */] <-0.09375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.0942893f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.0941571f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.42282164f ? 
                 (data[13 /* X14 */] <0.106927134f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13114595f ? 
             (data[10 /* X11 */] <-0.8176482f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.16542973f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06931715f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29544988f ? 
                 (data[28 /* X29 */] <0.07163595f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.08975876f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.48112637f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.085035205f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.35637152f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13967994f ? 
                 (data[17 /* X18 */] <-0.2743185f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.006441371f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06856617f ? 
             (data[3 /* X4 */] <-0.25182915f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49108258f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.5237527f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16278489f ? 
                     (data[7 /* X8 */] <0.10314389f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.08579012f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38701713f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37739804f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41796875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05387706f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11512648f ? 
                 (data[14 /* X15 */] <0.115237586f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[30 /* X31 */] <0.09183258f ? 
             (data[34 /* X35 */] <-0.50746536f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2600874f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.34765625f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21466778f ? 
                     (data[31 /* X32 */] <0.038574833f ? 
                         (data[24 /* X25 */] <-0.083779044f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.13286339f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.42176056f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15641536f ? 
            1.0f : 
             (data[20 /* X21 */] <0.15744568f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07703309f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5163868f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06839762f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.215255f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16055112f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.28609502f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.18883166f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.070212536f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.037632603f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10518429f ? 
                 (data[29 /* X30 */] <0.08591836f ? 
                     (data[29 /* X30 */] <0.07652691f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[22 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23929891f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.24024996f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.43631136f ? 
                 (data[34 /* X35 */] <0.01128006f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.27157664f ? 
                     (data[28 /* X29 */] <0.12573734f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38701713f ? 
             (data[27 /* X28 */] <-0.35829583f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09672732f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14324819f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05795055f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.2750434f ? 
                 (data[34 /* X35 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12402821f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.528068f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[17 /* X18 */] <-0.33526155f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.45311934f ? 
                 (data[10 /* X11 */] <-0.33211485f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.012236361f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.035044793f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16080323f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18445107f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12839451f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.37117487f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0554924f ? 
             (data[33 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30990508f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.07015168f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1347321f ? 
                     (data[35 /* X36 */] <0.21875f ? 
                         (data[19 /* X20 */] <0.08170395f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08229002f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.026587406f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04793143f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.095800556f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.0849289f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.4281825f ? 
             (data[22 /* X23 */] <0.14848113f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15936942f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.11019685f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.041578643f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.15384476f ? 
                 (data[15 /* X16 */] <0.045573674f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08563802f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.047411755f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.03125f ? 
                         (data[30 /* X31 */] <0.03786726f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[15 /* X16 */] <0.10049242f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3515625f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.009840393f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.25926483f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.094518706f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.21050487f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25162497f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[26 /* X27 */] <-0.17407884f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16516097f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.011597948f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[17 /* X18 */] <-0.51950806f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05859375f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19325435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.12584989f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.110856324f ? 
                     (data[16 /* X17 */] <-0.47812155f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.11574303f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062331904f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.26629993f ? 
                 (data[30 /* X31 */] <0.112409286f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14162445f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6032631f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.51253474f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
             (data[15 /* X16 */] <0.03968916f ? 
                 (data[31 /* X32 */] <0.043033104f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22455293f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09627628f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.03655386f ? 
                         (data[29 /* X30 */] <0.0894656f ? 
                             (data[0 /* X1 */] <-0.0049171452f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
        0.033898305f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08563484f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.45789585f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[19 /* X20 */] <0.009112051f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.56959194f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40144354f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23742507f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[33 /* X34 */] <-0.83413494f ? 
             (data[23 /* X24 */] <0.055850882f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39311895f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.22208564f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
             (data[11 /* X12 */] <-0.51868457f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.113507524f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3167221f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.42668387f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22172475f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1716404f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3538537f ? 
             (data[3 /* X4 */] <-0.27681908f ? 
                 (data[29 /* X30 */] <0.08460459f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[15 /* X16 */] <0.0767203f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.44797984f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6993449f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08859211f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26903757f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.009677744f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20099995f ? 
                        1.0f : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.19707002f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.04361688f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.26048145f ? 
             (data[15 /* X16 */] <0.03386791f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.104112215f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3126842f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12818925f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08849424f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08665938f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.10141024f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0546875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (data[26 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.68184775f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12041964f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14750588f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0686168f ? 
             (data[15 /* X16 */] <0.04794351f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18256824f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.41666833f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36340037f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3064156f ? 
             (data[17 /* X18 */] <-0.30833322f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.04680836f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3055934f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-2.635672E-4f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.35606372f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06076795f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17615725f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15092285f ? 
             (data[10 /* X11 */] <-0.8215063f ? 
                 (data[27 /* X28 */] <-0.051181067f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.19127534f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.07978697f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[34 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (data[26 /* X27 */] <0.11653542f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0625f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20134504f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.071595736f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.30276686f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.10441992f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.049040884f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32843417f ? 
             (data[19 /* X20 */] <-0.31755152f ? 
                 (data[1 /* X2 */] <-0.2934119f ? 
                     (data[13 /* X14 */] <0.1391792f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1580814f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10576901f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19933036f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[8 /* X9 */] <0.30608717f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18180332f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02721443f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.30485594f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5522449f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.091382876f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.09655241f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.06691041f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.11148518f ? 
                         (data[1 /* X2 */] <0.023947729f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (data[34 /* X35 */] <-0.18164062f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19469166f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.08686458f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
                     (data[8 /* X9 */] <-0.18099232f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.0054063294f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[26 /* X27 */] <-0.27327052f ? 
             (data[27 /* X28 */] <-0.016479202f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.098091066f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.055392183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26623827f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16919652f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_12_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13699366f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.069002554f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.12647188f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.14905293f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18182354f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.089815564f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13699366f ? 
             (data[18 /* X19 */] <-0.06651212f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1719976f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.12647188f ? 
                0.0f : 
                1.0f)) : 
        0.009259259f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[32 /* X33 */] <-0.88671875f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.08653678f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06599235f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18800499f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.17794828f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[30 /* X31 */] <0.10658569f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20968235f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[13 /* X14 */] <0.08410362f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.23762442f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15483636f ? 
                     (data[34 /* X35 */] <0.019836426f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.875f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14731598f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.07315877f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X12 */] <-0.37020466f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14292076f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.13943735f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[13 /* X14 */] <0.08672626f ? 
             (data[18 /* X19 */] <-0.18379943f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.092631534f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11112732f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.046875f ? 
                     (data[18 /* X19 */] <-0.002781679f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.08591836f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18921234f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109876156f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.08591836f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0025401188f ? 
             (data[8 /* X9 */] <-0.34898296f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.12139042f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[18 /* X19 */] <-0.035044793f ? 
             (data[19 /* X20 */] <0.03572908f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5523692f ? 
                 (data[8 /* X9 */] <-0.19259486f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14805803f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.8557695f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4228115f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5366596f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[33 /* X34 */] <-0.25901598f ? 
             (data[19 /* X20 */] <-0.08283769f ? 
                 (data[2 /* X3 */] <-0.23858243f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.14437869f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.3885879f ? 
             (data[13 /* X14 */] <0.09896529f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61535877f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24554273f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32853198f ? 
                 (data[20 /* X21 */] <0.09123021f ? 
                     (data[13 /* X14 */] <0.10232852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17479564f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.42111206f ? 
             (data[4 /* X5 */] <0.12468097f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09860508f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.21642463f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16165099f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16837776f ? 
                 (data[20 /* X21 */] <0.09711603f ? 
                     (data[13 /* X14 */] <0.14218268f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.34375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09394212f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20932513f ? 
                     (data[3 /* X4 */] <-0.2418332f ? 
                         (data[26 /* X27 */] <0.17222197f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[0 /* X1 */] <0.15343504f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.056907855f ? 
             (data[34 /* X35 */] <-0.546875f ? 
                 (data[32 /* X33 */] <-0.04971599f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.20242694f ? 
                 (data[19 /* X20 */] <-0.6006599f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.054749615f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[29 /* X30 */] <0.12533145f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17142539f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14466473f ? 
             (data[28 /* X29 */] <0.05836579f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1976123f ? 
                     (data[4 /* X5 */] <0.0987239f ? 
                         (data[12 /* X13 */] <0.1512275f ? 
                             (data[18 /* X19 */] <-0.021313595f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12362732f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12468097f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.056907855f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.34765625f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.38288423f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39678097f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[33 /* X34 */] <-0.6664671f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.65035295f ? 
                     (data[4 /* X5 */] <0.11529819f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13988905f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20325738f ? 
             (data[33 /* X34 */] <-0.97475964f ? 
                 (data[21 /* X22 */] <0.12195502f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.23580655f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15891272f ? 
                 (data[34 /* X35 */] <-0.5078125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09250704f ? 
                     (data[13 /* X14 */] <0.08255665f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[30 /* X31 */] <0.0852325f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.5199318f ? 
                 (data[21 /* X22 */] <0.17841569f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09937715f ? 
                     (data[32 /* X33 */] <-0.25426173f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10786708f ? 
             (data[26 /* X27 */] <-0.04356345f ? 
                 (data[14 /* X15 */] <0.15888155f ? 
                     (data[23 /* X24 */] <0.036170095f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40234375f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21158886f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5457612f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.021921981f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09234697f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13469204f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19084181f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                        1.0f : 
                         (data[3 /* X4 */] <0.09802959f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08447719f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.34441614f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09234697f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13469204f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-5.7981786E-5f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13861944f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.10080521f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.009259259f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (data[18 /* X19 */] <-0.032184124f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16540568f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20791626f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.099476784f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42307812f ? 
             (data[32 /* X33 */] <-0.80078125f ? 
                 (data[12 /* X13 */] <0.110251315f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (data[29 /* X30 */] <0.108226694f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.09140008f ? 
                     (data[13 /* X14 */] <0.13636786f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06280109f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[33 /* X34 */] <-0.9224761f ? 
             (data[7 /* X8 */] <0.14859463f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13114595f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2008732f ? 
                 (data[31 /* X32 */] <0.033020135f ? 
                     (data[3 /* X4 */] <-0.22184126f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17849316f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17559265f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09560119f ? 
                 (data[32 /* X33 */] <-0.2578125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.42307812f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08979624f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24958695f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17520429f ? 
                 (data[23 /* X24 */] <0.027659485f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.06638592f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.23632812f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.13220918f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2894466f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26253596f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.0976773f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25683594f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.046616275f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.10008411f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
                 (data[29 /* X30 */] <0.06227051f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.045394722f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15164958f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.14453928f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[21 /* X22 */] <0.13098873f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.16660514f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[25 /* X26 */] <-0.6252776f ? 
            1.0f : 
             (data[31 /* X32 */] <0.03502273f ? 
                 (data[0 /* X1 */] <0.13087177f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.072032355f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.104982376f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09375f ? 
                            0.0f : 
                            1.0f) : 
                         (data[21 /* X22 */] <0.099914365f ? 
                             (data[13 /* X14 */] <0.18883465f ? 
                                 (data[25 /* X26 */] <-0.13926278f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))))) : 
         (data[18 /* X19 */] <0.19237816f ? 
             (data[7 /* X8 */] <0.07854702f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06890052f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2732746f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49464846f ? 
                 (data[29 /* X30 */] <0.060956743f ? 
                     (data[33 /* X34 */] <-0.48077032f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.33984375f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.84840345f ? 
                 (data[34 /* X35 */] <-0.1171875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
                 (data[10 /* X11 */] <-0.69899195f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.06937279f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24867941f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <0.083122976f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.43611827f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.009567263f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25969076f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19542809f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21289062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058969397f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06476584f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15063195f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40031943f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31120536f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24473725f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25027263f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.1334522f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <0.31090903f ? 
                 (data[3 /* X4 */] <0.018061876f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08162783f ? 
             (data[27 /* X28 */] <-0.10592654f ? 
                 (data[33 /* X34 */] <-0.1995209f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15272327f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.59683204f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18236583f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.3671875f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27157578f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34739324f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.31608045f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33920002f ? 
             (data[10 /* X11 */] <-0.7829503f ? 
                 (data[3 /* X4 */] <-0.0019300516f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X6 */] <0.3748923f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26623827f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33259735f ? 
                 (data[16 /* X17 */] <-0.31088072f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22057182f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.015625f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.31400236f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[15 /* X16 */] <0.049822282f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.15907298f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19990067f ? 
                     (data[25 /* X26 */] <-0.5661118f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.06288577f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[31 /* X32 */] <0.04890898f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[31 /* X32 */] <0.09234697f ? 
             (data[19 /* X20 */] <-0.40922242f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.16796994f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92327833f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25998643f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.13208432f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22616367f ? 
             (data[26 /* X27 */] <-0.17581904f ? 
                 (data[6 /* X7 */] <0.11169588f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.14938882f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13804516f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20713915f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.016269874f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015685966f ? 
                     (data[7 /* X8 */] <0.032561574f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14311352f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16486512f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12231009f ? 
                        1.0f : 
                        0.0f))) : 
             (data[33 /* X34 */] <-0.3978378f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5022441f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.10395722f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13885322f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13568142f ? 
            0.0f : 
             (data[26 /* X27 */] <0.26619306f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14938882f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13005225f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19328746f ? 
                     (data[10 /* X11 */] <-0.6480043f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.054217514f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.065061636f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19050649f ? 
             (data[25 /* X26 */] <-0.5466806f ? 
                 (data[26 /* X27 */] <0.06780967f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37029025f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.09937715f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0076638767f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106435455f ? 
                     (data[6 /* X7 */] <0.11532256f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.37847713f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.08641682f ? 
                         (data[32 /* X33 */] <0.03125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9225632f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09439299f ? 
             (data[31 /* X32 */] <0.016498733f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.14051643f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3655288f ? 
                        0.0f : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.06775279f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17578125f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1394207f ? 
                     (data[25 /* X26 */] <-0.3921511f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[15 /* X16 */] <0.05967318f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.65726584f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.49519336f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.39346787f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.292762f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15543018f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.17906256f ? 
                         (data[13 /* X14 */] <0.13568234f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05998597f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                 (data[7 /* X8 */] <0.03243289f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25177622f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.012822938f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[31 /* X32 */] <0.036524672f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.08148097f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.0522951f ? 
             (data[9 /* X10 */] <-0.52070796f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.5933666f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25096762f ? 
             (data[11 /* X12 */] <-0.614843f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.08250461f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.11260285f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54537034f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19999935f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20089464f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.12502554f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)))) : 
             (data[31 /* X32 */] <0.097103134f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3804652f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[15 /* X16 */] <0.031052789f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.1328125f ? 
                 (data[12 /* X13 */] <0.14597414f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.076786496f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.087369815f ? 
             (data[18 /* X19 */] <0.042193193f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15813498f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09042524f ? 
                    1.0f : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.1258094f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.044569682f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.0546875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.087369815f ? 
             (data[18 /* X19 */] <0.042193193f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19327828f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1899133f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.11624495f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15638247f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.22132578f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[7 /* X8 */] <0.02721443f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4907055f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.024182135f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.49519336f ? 
                         (data[15 /* X16 */] <0.07294036f ? 
                            1.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19015726f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.29893494f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21847047f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06264469f ? 
             (data[34 /* X35 */] <-0.12109375f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11708176f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.10356885f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X6 */] <0.10395722f ? 
                 (data[33 /* X34 */] <-0.55553f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.15252537f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[17 /* X18 */] <-0.4004565f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17078528f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12393577f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.22185507f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[1 /* X2 */] <-0.5200974f ? 
             (data[35 /* X36 */] <-0.12890625f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.3828125f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.58612025f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
                 (data[19 /* X20 */] <-0.5038707f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.039996624f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.08143109f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
             (data[35 /* X36 */] <-0.9375f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32666302f ? 
                     (data[19 /* X20 */] <-0.40224206f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008355156f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.28515625f ? 
                 (data[17 /* X18 */] <-0.48407605f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.05705126f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20138684f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17728648f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.061967883f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.32554352f ? 
                 (data[26 /* X27 */] <-0.04356345f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07132838f ? 
             (data[18 /* X19 */] <0.19666916f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.10325785f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.0884747f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.42668387f ? 
             (data[24 /* X25 */] <-0.15799083f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (data[25 /* X26 */] <-0.57065934f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23837572f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32536003f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08209481f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19932292f ? 
                 (data[33 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.04204468f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.08297845f ? 
                     (data[19 /* X20 */] <-0.29577395f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[34 /* X35 */] <-0.9316406f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15812288f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.013829743f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.049410883f ? 
             (data[22 /* X23 */] <0.08630873f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28315243f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15841195f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0054063294f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06836962f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.12832394f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19140625f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12606342f ? 
                 (data[19 /* X20 */] <-0.08283769f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.01171875f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14879557f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.07315877f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25854206f ? 
            0.0f : 
             (data[8 /* X9 */] <0.12916128f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7871094f ? 
             (data[13 /* X14 */] <0.087600484f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08283769f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3591823f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.12606342f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.13206728f ? 
            0.0f : 
             (data[22 /* X23 */] <0.086781524f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.37804475f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09138017f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[34 /* X35 */] <-0.68359375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2773396f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28886545f ? 
                     (data[19 /* X20 */] <-0.4603156f ? 
                         (data[24 /* X25 */] <-0.083779044f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.15625f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.07909071f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09290655f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14551042f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.08954473f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.107373826f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.40625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.38967913f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15928599f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1768194f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17828073f ? 
             (data[33 /* X34 */] <-0.4519242f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51737493f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.091382876f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.086084574f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.19140625f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18897134f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.51762897f ? 
                 (data[7 /* X8 */] <0.03147988f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.27362913f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.011037812f ? 
                 (data[15 /* X16 */] <0.040454634f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.095234096f ? 
             (data[17 /* X18 */] <-0.29982954f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.095016584f ? 
                 (data[2 /* X3 */] <-0.30814445f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20410529f ? 
             (data[22 /* X23 */] <0.0485308f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.08690957f ? 
                     (data[9 /* X10 */] <0.06995159f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1071161f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                             (data[35 /* X36 */] <-0.257144f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[25 /* X26 */] <-0.38149387f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.076864496f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19025065f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20707177f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10611481f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.62147087f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08610403f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.25463852f ? 
                 (data[32 /* X33 */] <0.0f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24720445f ? 
                 (data[19 /* X20 */] <-0.39256313f ? 
                     (data[20 /* X21 */] <0.1438108f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X7 */] <0.19743618f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.036594823f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38089746f ? 
             (data[7 /* X8 */] <0.02721443f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5637836f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.625f ? 
                             (data[15 /* X16 */] <0.042983018f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42307812f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957394f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.022733688f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27884072f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.24219252f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.013951511f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.32280007f ? 
                     (data[32 /* X33 */] <-0.640625f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.043877225f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06483423f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
                 (data[14 /* X15 */] <0.08068611f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.4519242f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09654224f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1760806f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.066579044f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1776447f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.40124592f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.062450055f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.743915f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.53602344f ? 
                 (data[33 /* X34 */] <-0.36097735f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.12905127f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[23 /* X24 */] <0.025797788f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12818925f ? 
                 (data[25 /* X26 */] <-0.58398086f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10956047f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.12792659f ? 
                     (data[23 /* X24 */] <0.09038827f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.022838574f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25683594f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42531982f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.04405791f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1806463f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44170976f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14655645f ? 
                        1.0f : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.10231505f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25000155f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
             (data[3 /* X4 */] <-0.05069101f ? 
                 (data[15 /* X16 */] <0.04568891f ? 
                    0.0f : 
                     (data[8 /* X9 */] <-0.25292715f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20744205f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26310667f ? 
             (data[5 /* X6 */] <0.10510223f ? 
                 (data[13 /* X14 */] <0.10595901f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[35 /* X36 */] <0.0234375f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21336098f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12819107f ? 
            0.0f : 
             (data[0 /* X1 */] <0.37557566f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10635218f ? 
                 (data[18 /* X19 */] <0.27390715f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
                         (data[35 /* X36 */] <-0.375f ? 
                            1.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2174414f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.046651304f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.081897765f ? 
                         (data[35 /* X36 */] <-0.34375f ? 
                            1.0f : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.4519242f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.56622165f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.105113514f ? 
             (data[9 /* X10 */] <-0.8738974f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.25926483f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0945755f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.12705782f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.171875f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1612081f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2533317f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18616232f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23405053f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10049578f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2362436f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.021921981f ? 
                     (data[33 /* X34 */] <-0.65384686f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.0064381305f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.023947729f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.10930206f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42668387f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40993497f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06999159f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16582265f ? 
                     (data[26 /* X27 */] <0.01908393f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16346328f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.071498014f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5f ? 
                         (data[25 /* X26 */] <-0.54135203f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3422625f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.16052938f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                 (data[26 /* X27 */] <0.18614362f ? 
                     (data[14 /* X15 */] <0.13524106f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.51950806f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04600363f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
             (data[6 /* X7 */] <0.053419735f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.091016f ? 
                     (data[23 /* X24 */] <0.053392343f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52850646f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5703125f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3112995f ? 
             (data[23 /* X24 */] <0.09042524f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16873491f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17197026f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25443062f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27795696f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.07941823f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30820078f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17515074f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.10123155f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.60247475f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.046800274f ? 
            0.0f : 
             (data[6 /* X7 */] <0.1153679f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24816115f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28090665f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92327833f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.28545392f ? 
                 (data[35 /* X36 */] <-0.859375f ? 
                     (data[4 /* X5 */] <0.1632552f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.13743603f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[26 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.003965401f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.25307867f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2732596f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[32 /* X33 */] <-0.021484375f ? 
             (data[19 /* X20 */] <-0.0029865995f ? 
                 (data[5 /* X6 */] <0.1222775f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.24702194f ? 
                         (data[19 /* X20 */] <-0.20827387f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06384237f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.18217254f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.1562417f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37964472f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15472741f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28496128f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78125f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27895525f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.04609768f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[17 /* X18 */] <-0.18928164f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.31930193f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3574757f ? 
                     (data[5 /* X6 */] <0.14459889f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1806741f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2367236f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2750434f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067591965f ? 
                     (data[3 /* X4 */] <-0.021921981f ? 
                         (data[32 /* X33 */] <-0.0625f ? 
                             (data[13 /* X14 */] <0.10049543f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.13021669f ? 
                         (data[27 /* X28 */] <-0.022075292f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23572102f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[18 /* X19 */] <0.23957916f ? 
                     (data[4 /* X5 */] <0.07520132f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.10592654f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.34375f ? 
                             (data[20 /* X21 */] <0.13081704f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[19 /* X20 */] <-0.43611827f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.007447632f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.031821124f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.15930483f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6156459f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16802832f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07054069f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26922813f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.1509217f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.07907979f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.109533675f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23911145f ? 
            0.0f : 
             (data[20 /* X21 */] <0.242336f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
             (data[4 /* X5 */] <0.12818773f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.081897765f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36378038f ? 
                     (data[8 /* X9 */] <-0.19282886f ? 
                         (data[16 /* X17 */] <-0.17302905f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06250195f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (data[2 /* X3 */] <-0.2415422f ? 
             (data[27 /* X28 */] <-0.13148293f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16559303f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20673242f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.63721174f ? 
                 (data[32 /* X33 */] <-0.328125f ? 
                     (data[35 /* X36 */] <0.53125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.07672197f ? 
                    0.0f : 
                    1.0f))) : 
         (data[13 /* X14 */] <0.116886705f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.014425007f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20106317f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.031108364f ? 
                         (data[18 /* X19 */] <-0.03218211f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13257535f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1484375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.52273035f ? 
                 (data[3 /* X4 */] <0.04804977f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50265086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35505912f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
                 (data[3 /* X4 */] <-0.28181705f ? 
                     (data[31 /* X32 */] <0.085087575f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <0.24961042f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.2672321f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7516384f ? 
                 (data[34 /* X35 */] <-0.390625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[1 /* X2 */] <-0.6447744f ? 
             (data[22 /* X23 */] <0.12652673f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.068176314f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09148906f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38376254f ? 
                     (data[8 /* X9 */] <-0.37469286f ? 
                         (data[0 /* X1 */] <-0.3073923f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.87085265f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[1 /* X2 */] <-0.86295915f ? 
            1.0f : 
             (data[22 /* X23 */] <0.086662136f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16233279f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1767764f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.203125f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[10 /* X11 */] <-0.6595711f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17394093f ? 
                 (data[29 /* X30 */] <0.083781175f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10518429f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.19006278f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[13 /* X14 */] <0.15054402f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.123997755f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.59393275f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.059438284f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3070697f ? 
                 (data[25 /* X26 */] <-0.4187941f ? 
                     (data[15 /* X16 */] <0.06639819f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.115552284f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[13 /* X14 */] <0.092408665f ? 
             (data[7 /* X8 */] <0.04860301f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75f ? 
                 (data[31 /* X32 */] <0.03502273f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.953125f ? 
                         (data[8 /* X9 */] <0.28270006f ? 
                            1.0f : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.042611636f ? 
                             (data[2 /* X3 */] <-0.35829204f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.020614518f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.12533145f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.106697865f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14813781f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.23590259f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.730341f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.09517497f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25141886f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1818574f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.2930625f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.614843f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.43945312f ? 
             (data[27 /* X28 */] <-0.048618108f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[26 /* X27 */] <0.10957459f ? 
             (data[12 /* X13 */] <0.16488624f ? 
                 (data[34 /* X35 */] <-0.5f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16500857f ? 
                 (data[20 /* X21 */] <0.09590005f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19862588f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X10 */] <-0.2436369f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.089720726f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[27 /* X28 */] <-0.37267128f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.003954213f ? 
                 (data[21 /* X22 */] <0.02823033f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.4603156f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.87085265f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.85f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18473928f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20376107f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.17433879f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16894531f ? 
         (data[34 /* X35 */] <0.34960938f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16540568f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14433356f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.14889558f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.0054063294f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2475167f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.23743148f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[26 /* X27 */] <-0.010499557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[10 /* X11 */] <-0.20461035f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.015222805f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030389385f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07140285f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4905933f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.10697393f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23456553f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0026165775f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.08433852f ? 
                     (data[0 /* X1 */] <-0.028534923f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.117510706f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1307167f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.011990487f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5121657f ? 
                 (data[14 /* X15 */] <0.08068611f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.03196348f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.41159022f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0935986f ? 
             (data[30 /* X31 */] <0.09377378f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012826202f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.203125f ? 
                     (data[14 /* X15 */] <0.10400389f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11130271f ? 
                         (data[2 /* X3 */] <-0.46485564f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19121887f ? 
                                 (data[0 /* X1 */] <-0.1601132f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15176626f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[3 /* X4 */] <-0.10313919f ? 
             (data[32 /* X33 */] <-0.19921875f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.908975f ? 
             (data[30 /* X31 */] <0.034685485f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18979603f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24770024f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.098598816f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13687557f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06327028f ? 
             (data[30 /* X31 */] <0.09377378f ? 
                 (data[30 /* X31 */] <0.034445897f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067591965f ? 
                     (data[3 /* X4 */] <-0.27101338f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.07960171f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0153825f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[28 /* X29 */] <0.0685736f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08861291f ? 
                 (data[30 /* X31 */] <0.07824419f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.026064323f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1268796f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17131999f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.29705992f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24609375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[17 /* X18 */] <-0.5776166f ? 
                 (data[3 /* X4 */] <0.0030679307f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.114880815f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.10625172f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.060189947f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26407418f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11362965f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12818925f ? 
                     (data[9 /* X10 */] <-0.8830316f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16797327f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <0.046875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.30664062f ? 
             (data[4 /* X5 */] <0.11766748f ? 
                 (data[27 /* X28 */] <0.10330402f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.65625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053058337f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.098843224f ? 
            0.0f : 
             (data[15 /* X16 */] <0.05263538f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5256458f ? 
                    1.0f : 
                    0.0f))) : 
         (data[18 /* X19 */] <-0.08796711f ? 
             (data[13 /* X14 */] <0.11470117f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16977675f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.0234375f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5457612f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06201911f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.10853729f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.08585205f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.3786645f ? 
             (data[34 /* X35 */] <-0.31640625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6208626f ? 
                0.0f : 
                 (data[9 /* X10 */] <-5.7981786E-5f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06391795f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21072647f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.056907855f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.2218791f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.008335625f ? 
                 (data[27 /* X28 */] <-0.40621403f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.021484375f ? 
            0.0f : 
             (data[4 /* X5 */] <0.14799118f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24047208f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26344523f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.347765f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.3064474f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.08984375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12283937f ? 
            0.0f : 
             (data[14 /* X15 */] <0.12251158f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.6664671f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18897134f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.001798531f ? 
                 (data[29 /* X30 */] <0.08985967f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.0f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.32950637f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.12651874f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.087237425f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.120659314f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2935553f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13802736f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.532983f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08984375f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.25182915f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19022179f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.36328125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15324906f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10319115f ? 
                 (data[32 /* X33 */] <0.011718321f ? 
                     (data[15 /* X16 */] <0.04262606f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10268063f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030389385f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.18543425f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[20 /* X21 */] <0.16112433f ? 
                 (data[15 /* X16 */] <0.06514702f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[19 /* X20 */] <-0.46394518f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.86328125f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12839451f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.23632812f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18726107f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19061467f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.12563619f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.10268196f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16894531f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.2546134f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.22059177f ? 
             (data[23 /* X24 */] <0.04361688f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
             (data[34 /* X35 */] <-0.0546875f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.3885879f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.20117188f ? 
             (data[23 /* X24 */] <0.0404254f ? 
                 (data[32 /* X33 */] <0.011718321f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (data[34 /* X35 */] <-0.2578125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15086573f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09109536f ? 
                    0.0f : 
                    1.0f))) : 
        0.90909094f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[20 /* X21 */] <0.11330204f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2594091f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0546875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.10246215f ? 
                 (data[20 /* X21 */] <0.18318245f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.09017074f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.08829019f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9032537f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12584989f ? 
             (data[24 /* X25 */] <-0.63294625f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.10205638f ? 
                 (data[2 /* X3 */] <-0.28463778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32965466f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.101539746f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1976123f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.5587345f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27546033f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2899774f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.25f ? 
                         (data[20 /* X21 */] <0.108362354f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[4 /* X5 */] <0.09078242f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30768606f ? 
             (data[7 /* X8 */] <0.02721443f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.30212224f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18484898f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.19140625f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.39115393f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09685281f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08015117f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5253214f ? 
                     (data[34 /* X35 */] <0.015625f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042684294f ? 
                             (data[2 /* X3 */] <-0.45064303f ? 
                                 (data[35 /* X36 */] <-0.25379625f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.02363043f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14324819f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12519176f ? 
                        1.0f : 
                        0.0f))) : 
             (data[13 /* X14 */] <0.09371999f ? 
                1.0f : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[31 /* X32 */] <0.095100544f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06672645f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.09371999f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3833686f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16220398f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2704429f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.109375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18151596f ? 
                 (data[2 /* X3 */] <-0.59022456f ? 
                     (data[7 /* X8 */] <0.06250559f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.07171564f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.31836396f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.19060516f ? 
                 (data[15 /* X16 */] <0.04450281f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[27 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (data[30 /* X31 */] <0.024667108f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.87788993f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21680893f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08302133f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31735104f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13729046f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5157059f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32014185f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17393099f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.039027914f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.059574272f ? 
                             (data[32 /* X33 */] <-0.25f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[7 /* X8 */] <0.037374005f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.14963663f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2631837f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.09843089f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6372216f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[27 /* X28 */] <-0.15384476f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14424494f ? 
                 (data[34 /* X35 */] <-0.1171875f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886249f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.5933666f ? 
            1.0f : 
             (data[13 /* X14 */] <0.098091066f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657035f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26925814f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.033203125f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13743077f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.1379303f ? 
                     (data[32 /* X33 */] <-0.1875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.33984375f ? 
             (data[15 /* X16 */] <0.0836017f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18262756f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.03502273f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[8 /* X9 */] <-0.21315183f ? 
            0.0f : 
             (data[28 /* X29 */] <0.08796844f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.042578373f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7058677f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.0819165f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[26 /* X27 */] <-0.17407884f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.16496857f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.12614858f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38671875f ? 
             (data[2 /* X3 */] <-0.4883623f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15342605f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28125f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36731213f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
         (data[13 /* X14 */] <0.09371999f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.84916174f ? 
             (data[10 /* X11 */] <-0.8099395f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0390625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22091216f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1431628f ? 
                        0.0f : 
                        1.0f))) : 
             (data[18 /* X19 */] <0.23385783f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.255887f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19174176f ? 
             (data[34 /* X35 */] <-0.6171875f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19987074f ? 
                 (data[32 /* X33 */] <-0.140625f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.052330583f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.014425007f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05732521f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1048715f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19987074f ? 
                 (data[13 /* X14 */] <0.051757637f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.062459607f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39561749f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[13 /* X14 */] <0.1501069f ? 
            0.0f : 
             (data[20 /* X21 */] <0.07945857f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.108211935f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15932584f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
             (data[7 /* X8 */] <0.027749144f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6643507f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.14097041f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[31 /* X32 */] <0.0668139f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06577261f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14657438f ? 
                     (data[1 /* X2 */] <-0.61077154f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.3026641f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.09779591f ? 
                     (data[19 /* X20 */] <0.07202503f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16329734f ? 
             (data[13 /* X14 */] <0.0868306f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03444309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.15982363f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.25182915f ? 
             (data[13 /* X14 */] <0.09371999f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.1671541f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17434227f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.24385448f ? 
                         (data[21 /* X22 */] <0.14593144f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (data[34 /* X35 */] <-0.34179688f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14180185f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21838859f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.23370846f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.11517975f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41095626f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[0 /* X1 */] <-0.23293139f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.1269213f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.25143787f ? 
                     (data[27 /* X28 */] <-0.1698175f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06856617f ? 
         (data[29 /* X30 */] <0.04946126f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.79473424f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25326172f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.34960938f ? 
             (data[22 /* X23 */] <0.12594898f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15127291f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.234375f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0859375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[31 /* X32 */] <0.08608887f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <0.018790971f ? 
            0.0f : 
             (data[30 /* X31 */] <0.10619745f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.25f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.155483f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11558305f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[13 /* X14 */] <0.116886705f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1773685f ? 
                 (data[31 /* X32 */] <0.06339151f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.29791167f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.0311966f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16951162f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2811741f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.05576329f ? 
                 (data[34 /* X35 */] <0.1640625f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.1938085f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.37117165f ? 
             (data[12 /* X13 */] <0.087136544f ? 
                 (data[27 /* X28 */] <-0.07398106f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78125f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.71023124f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.09614621f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4445509f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11897228f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14199856f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
             (data[32 /* X33 */] <-0.2421875f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                     (data[31 /* X32 */] <0.019174075f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.37109375f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15070216f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28612426f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.0879601f ? 
                 (data[23 /* X24 */] <0.073404014f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.55078125f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16737208f ? 
                     (data[34 /* X35 */] <-0.28125f ? 
                         (data[3 /* X4 */] <-0.2418332f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10893778f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.008101298f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.6386719f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66274446f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085537896f ? 
         (data[34 /* X35 */] <-0.19140625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5313726f ? 
             (data[18 /* X19 */] <-0.015020129f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15888155f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.20815207f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.23176016f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30425197f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19325435f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3978378f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2415422f ? 
         (data[34 /* X35 */] <0.0f ? 
             (data[32 /* X33 */] <-0.39453125f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.9062502f ? 
                 (data[25 /* X26 */] <-0.34952223f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7519531f ? 
             (data[25 /* X26 */] <-0.2109785f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46514428f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28125f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.13299875f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23500209f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (data[14 /* X15 */] <0.10432659f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.125f ? 
                 (data[17 /* X18 */] <-0.3990392f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14938498f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.27783203f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[23 /* X24 */] <0.074467845f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[22 /* X23 */] <0.084640026f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (data[18 /* X19 */] <0.3711698f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[26 /* X27 */] <0.12523644f ? 
             (data[14 /* X15 */] <0.09122037f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.39353475f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.15625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18406175f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.066579044f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[9 /* X10 */] <-0.8449724f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.46515504f ? 
                 (data[30 /* X31 */] <0.15123326f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.03476134f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21680893f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23944181f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16024542f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17547832f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.056907855f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.09170097f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.614374f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (data[33 /* X34 */] <-0.83413494f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.028469892f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16977675f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.124080904f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.12647188f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.057033014f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5317007f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.2578125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19921875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[10 /* X11 */] <-0.25473315f ? 
             (data[18 /* X19 */] <-0.0035774645f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.14676322f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13725662f ? 
                     (data[21 /* X22 */] <0.078087725f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.103866175f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.101538576f ? 
                     (data[11 /* X12 */] <-0.40542227f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[26 /* X27 */] <-0.17233863f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3703992f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[10 /* X11 */] <-0.8215063f ? 
             (data[18 /* X19 */] <-0.03790546f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.060682625f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.39177266f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[25 /* X26 */] <0.008826484f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09760378f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.041578643f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                 (data[16 /* X17 */] <-0.770793f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.038872566f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.123695776f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.010090107f ? 
                 (data[35 /* X36 */] <-0.875f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36352637f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30794483f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.095100544f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X11 */] <-0.32922548f ? 
                     (data[2 /* X3 */] <-0.29247335f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.08507825f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[19 /* X20 */] <-0.5365371f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11200152f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
             (data[27 /* X28 */] <-0.34551764f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22667913f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.06051799f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[19 /* X20 */] <0.05387706f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <-0.19392076f ? 
             (data[33 /* X34 */] <0.090028115f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.68184775f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.34170184f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16695026f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4805354f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.10200401f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.32071134f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011455655f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-1.1008735E-4f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.015625f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16241547f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.2630976f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[24 /* X25 */] <-0.10356885f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.065024056f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21757782f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27269685f ? 
                 (data[10 /* X11 */] <-0.81791824f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3914294f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X9 */] <0.051804546f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <0.33492106f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19423206f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12499959f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26027521f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14704715f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101430796f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16349812f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.09651015f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.259478f ? 
             (data[20 /* X21 */] <0.15450278f ? 
                 (data[32 /* X33 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.19060516f ? 
                 (data[24 /* X25 */] <-0.19262299f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
                 (data[23 /* X24 */] <0.026874816f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X6 */] <0.06731666f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38701713f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2676346f ? 
            0.0f : 
             (data[8 /* X9 */] <0.59070706f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1702687f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07133425f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.15526691f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0554924f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18554679f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5381012f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.5432112f ? 
                         (data[18 /* X19 */] <0.6558663f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.24219252f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.013951511f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.09367395f ? 
                     (data[19 /* X20 */] <-0.08283769f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.057301585f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.23024674f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2196203f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20015146f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.10182967f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.10010703f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.014641631f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13771456f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[20 /* X21 */] <0.19864643f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21484375f ? 
                 (data[25 /* X26 */] <-0.5679951f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.251642f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28983483f ? 
            0.0f : 
             (data[20 /* X21 */] <0.12728086f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10534068f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21484375f ? 
                 (data[25 /* X26 */] <-0.5679951f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11118188f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[33 /* X34 */] <-0.83413494f ? 
             (data[15 /* X16 */] <0.05388654f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14255273f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12339782f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09570705f ? 
                     (data[7 /* X8 */] <0.030422717f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.13505337f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12492436f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.118678145f ? 
                                    0.0f : 
                                     (data[14 /* X15 */] <0.20354612f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[23 /* X24 */] <0.043953594f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16702074f ? 
                 (data[35 /* X36 */] <-0.0625f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35004252f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[23 /* X24 */] <0.038297746f ? 
                 (data[16 /* X17 */] <-0.060773343f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.0879601f ? 
                     (data[5 /* X6 */] <0.09937715f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.050632913f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
        0.009433962f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.081833355f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1579782f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <0.0234375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.021484375f ? 
             (data[35 /* X36 */] <-0.40625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30513588f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.24313831f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09175502f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03564649f ? 
                 (data[22 /* X23 */] <0.046219807f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.25360733f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.007869706f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[22 /* X23 */] <0.08637326f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12727545f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09175502f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1048715f ? 
                 (data[22 /* X23 */] <0.046219807f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39561749f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4964748f ? 
             (data[32 /* X33 */] <-0.88671875f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16752633f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.028283859f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18536168f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14070947f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.1461963f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[35 /* X36 */] <-0.10546875f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19527869f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40993497f ? 
             (data[11 /* X12 */] <-0.41686976f ? 
                 (data[17 /* X18 */] <-0.2573111f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26659662f ? 
                         (data[27 /* X28 */] <-0.13979362f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.13171364f ? 
                         (data[17 /* X18 */] <-0.40470833f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.35497874f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[22 /* X23 */] <0.08897313f ? 
             (data[10 /* X11 */] <-0.14292076f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14797056f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06541117f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20547138f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.11420996f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.078125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.02960363f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0546875f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13522677f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18834625f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.34952223f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.2109785f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16211699f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1583843f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2686621f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.061436158f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08723376f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[19 /* X20 */] <-0.47084993f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.59375f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.19744031f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.84375f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26171967f ? 
            0.0f : 
             (data[8 /* X9 */] <0.3137796f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[8 /* X9 */] <-0.38046217f ? 
             (data[35 /* X36 */] <-0.26171875f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12567818f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.84840345f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[19 /* X20 */] <-0.27110818f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25883093f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.15459967f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.120254755f ? 
                     (data[34 /* X35 */] <-0.125f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06338816f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[9 /* X10 */] <-0.16599613f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06897879f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19822574f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09234697f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19816743f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19657995f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.62147087f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.087137155f ? 
             (data[15 /* X16 */] <0.03949815f ? 
                 (data[16 /* X17 */] <-0.3816217f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11551019f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32965466f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2151417f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19715376f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19923542f ? 
                         (data[23 /* X24 */] <0.032384124f ? 
                             (data[30 /* X31 */] <0.11986349f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.22176461f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.13950448f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0870424f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (data[18 /* X19 */] <-0.10942211f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15741062f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22172979f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.30390698f ? 
                    1.0f : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.6448325f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5297885f ? 
                 (data[12 /* X13 */] <0.10079528f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.028818574f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20884292f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.17161104f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[30 /* X31 */] <0.09455026f ? 
             (data[11 /* X12 */] <-0.26980397f ? 
                 (data[23 /* X24 */] <0.073404014f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.03514641f ? 
                     (data[22 /* X23 */] <0.12021353f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.49824885f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1795449f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.18665683f ? 
             (data[27 /* X28 */] <0.015466277f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.113419086f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0806191f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2567084f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                 (data[17 /* X18 */] <0.16787311f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.07978697f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09565789f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20801365f ? 
                     (data[26 /* X27 */] <0.06084885f ? 
                         (data[7 /* X8 */] <0.045722194f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.0784925f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.0404254f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.3840861f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[5 /* X6 */] <0.10052217f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.099598125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18928075f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09565789f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.4324106f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.40539342f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.008584482f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29574764f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[34 /* X35 */] <-0.5957031f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4732185f ? 
                 (data[3 /* X4 */] <-0.3517888f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.3228265f ? 
                         (data[1 /* X2 */] <-0.33874902f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1716404f ? 
                            1.0f : 
                             (data[14 /* X15 */] <0.13669586f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34068593f ? 
             (data[33 /* X34 */] <-0.83413494f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27456552f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.11188566f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35742188f ? 
             (data[29 /* X30 */] <0.087232135f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.07650537f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.31680292f ? 
                     (data[16 /* X17 */] <-0.10875093f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.356033f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11302354f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10205666f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.007974766f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[2 /* X3 */] <0.007236803f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10053429f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37109375f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.04505386f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.02287003f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[8 /* X9 */] <-0.028533522f ? 
             (data[34 /* X35 */] <-0.1875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (data[26 /* X27 */] <0.04692721f ? 
                     (data[27 /* X28 */] <-0.18259569f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.09852452f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20707205f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21596202f ? 
             (data[21 /* X22 */] <0.06327012f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.054241963f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26803038f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.049410883f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14878327f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
             (data[25 /* X26 */] <-0.4187941f ? 
                 (data[26 /* X27 */] <-0.07836755f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.5673086f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4778308f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.101037204f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[18 /* X19 */] <0.17378384f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4140625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42307812f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.390625f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.580998f ? 
            1.0f : 
             (data[15 /* X16 */] <0.065851904f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14963728f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16268809f ? 
             (data[25 /* X26 */] <-0.56533074f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.32055143f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3378679f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19412968f ? 
                     (data[32 /* X33 */] <-0.734375f ? 
                         (data[13 /* X14 */] <0.1776447f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.057348795f ? 
                         (data[30 /* X31 */] <0.14966662f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20070702f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.24702194f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.15703931f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[7 /* X8 */] <0.04592944f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.608616f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26171967f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3099334f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[7 /* X8 */] <0.02721443f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.97475964f ? 
                 (data[27 /* X28 */] <0.4179793f ? 
                     (data[1 /* X2 */] <-0.14383714f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.101859294f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6060919f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (data[34 /* X35 */] <-0.11328125f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22878805f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04804977f ? 
                     (data[21 /* X22 */] <0.08130335f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.54135203f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.27327052f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5999667f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.023947729f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.092051566f ? 
                     (data[29 /* X30 */] <0.11412791f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17907335f ? 
             (data[33 /* X34 */] <-0.90264446f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20713915f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.25307867f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.356518f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17139657f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[34 /* X35 */] <-0.16796875f ? 
             (data[21 /* X22 */] <0.11574435f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19156966f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (data[25 /* X26 */] <-0.57332367f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.112768754f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04237091f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
                 (data[10 /* X11 */] <-0.9835449f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19940743f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.087237425f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08078658f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053058337f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.049040884f ? 
             (data[25 /* X26 */] <-0.4108012f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.2168509f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.16190882f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17269327f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[22 /* X23 */] <0.09735047f ? 
             (data[35 /* X36 */] <0.0078125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.19140625f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.023602128f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
         (data[10 /* X11 */] <-0.24316634f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07109006f ? 
                 (data[7 /* X8 */] <0.029353287f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.15703931f ? 
                         (data[19 /* X20 */] <-0.07315877f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[13 /* X14 */] <0.09371999f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.09937715f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47987512f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14692532f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[12 /* X13 */] <0.115767345f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15865445f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22101364f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22911924f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.17669228f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.2672321f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.6855469f ? 
             (data[16 /* X17 */] <-0.2272603f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.46515504f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.01171875f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11144011f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
                         (data[23 /* X24 */] <0.042553052f ? 
                             (data[13 /* X14 */] <0.18883465f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (data[34 /* X35 */] <-0.6660156f ? 
             (data[16 /* X17 */] <-0.23920608f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.10302711f ? 
                 (data[23 /* X24 */] <0.025531832f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.31997123f ? 
             (data[9 /* X10 */] <-0.5394292f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39139575f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19123445f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.059311535f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (data[18 /* X19 */] <-0.19524209f ? 
             (data[16 /* X17 */] <-0.06599235f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.0763185f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.12364276f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.058716517f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18797752f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21611018f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.06644098f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.763446f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[18 /* X19 */] <0.17092317f ? 
             (data[16 /* X17 */] <-0.65730816f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.093462214f ? 
                     (data[2 /* X3 */] <-0.37798303f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4243684f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15899806f ? 
                     (data[35 /* X36 */] <-0.27362913f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.17233863f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2582519f ? 
                 (data[31 /* X32 */] <0.039027914f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.0968797f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (data[11 /* X12 */] <-0.51868457f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3969064f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                     (data[14 /* X15 */] <0.08432311f ? 
                         (data[24 /* X25 */] <-0.28167713f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[28 /* X29 */] <0.08133336f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[30 /* X31 */] <0.058055725f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.14426112f ? 
                 (data[28 /* X29 */] <0.19412968f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05638887f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10612266f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11525668f ? 
                 (data[18 /* X19 */] <-7.1679824E-4f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20105617f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[19 /* X20 */] <-0.5304878f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2672887f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.0078125f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08657321f ? 
             (data[9 /* X10 */] <-0.8738974f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.1339036f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11561102f ? 
                     (data[7 /* X8 */] <0.13522677f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.05793012f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[19 /* X20 */] <0.018790971f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46589753f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6661004f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27639237f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.1431965f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13143303f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06764935f ? 
                 (data[14 /* X15 */] <0.12796707f ? 
                     (data[34 /* X35 */] <-0.21875f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.32504573f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.30079398f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.27286264f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3572829f ? 
                 (data[22 /* X23 */] <0.0485308f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.05793012f ? 
                         (data[28 /* X29 */] <0.08286454f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[20 /* X21 */] <0.18319616f ? 
                0.0f : 
                1.0f)) : 
        0.90909094f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.43945312f ? 
             (data[35 /* X36 */] <-0.5234375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.013538829f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16080323f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.117695935f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.1688833f ? 
                 (data[3 /* X4 */] <-0.10188969f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[0 /* X1 */] <-0.1352673f ? 
             (data[35 /* X36 */] <-0.5859375f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.10619745f ? 
                     (data[3 /* X4 */] <-0.11188566f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.08329082f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.10123859f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3924229f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.39346787f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39839458f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21261333f ? 
                 (data[23 /* X24 */] <0.05531897f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13522373f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15255976f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06672645f ? 
                    0.0f : 
                     (data[1 /* X2 */] <0.0891198f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.056640625f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.12978557f ? 
                    0.0f : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.09576961f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.5946239f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07515634f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.49506173f ? 
             (data[13 /* X14 */] <0.08672626f ? 
                 (data[14 /* X15 */] <0.08432311f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34290743f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25933594f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3671875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
                 (data[30 /* X31 */] <0.10055434f ? 
                     (data[35 /* X36 */] <-0.15625f ? 
                        1.0f : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.421875f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.36538595f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.15f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14679772f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17674781f ? 
            0.0f : 
             (data[3 /* X4 */] <0.18668261f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34185943f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07961645f ? 
             (data[9 /* X10 */] <-0.84345f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1255185f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15045314f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08429f ? 
                         (data[35 /* X36 */] <-0.75f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.21889655f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[31 /* X32 */] <0.09099603f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09783785f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21207263f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.21019997f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2934119f ? 
                     (data[31 /* X32 */] <0.07808614f ? 
                         (data[30 /* X31 */] <0.14127918f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.091030784f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11495621f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.020125184f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20955357f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11547818f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13453895f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.060544726f ? 
                 (data[3 /* X4 */] <-0.22534604f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.15625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.092845775f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2051218f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.14346847f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2109375f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.37727514f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14799397f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12667133f ? 
             (data[3 /* X4 */] <-0.30180898f ? 
                 (data[24 /* X25 */] <-0.17799309f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.021921981f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.1831069f ? 
             (data[2 /* X3 */] <-0.03781766f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3763272f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.007058462f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026185043f ? 
                     (data[11 /* X12 */] <-0.67254376f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[13 /* X14 */] <0.098091066f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015685966f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18839788f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14817041f ? 
                 (data[4 /* X5 */] <0.16559303f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.28125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07132838f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10455871f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.31271204f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.34240383f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16186006f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026579723f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10166589f ? 
                 (data[19 /* X20 */] <-0.43127882f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17951752f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.03125f ? 
                        0.0f : 
                        1.0f))) : 
             (data[18 /* X19 */] <0.13373451f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1410458f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.10929311f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1289564f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[32 /* X33 */] <-0.88671875f ? 
             (data[13 /* X14 */] <0.1671541f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.08081545f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10188969f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09893585f ? 
             (data[15 /* X16 */] <0.04293885f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.0469559f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10955254f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06999159f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1785189f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07013703f ? 
                     (data[18 /* X19 */] <0.07938185f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16535059f ? 
                            0.0f : 
                            1.0f) : 
                         (data[13 /* X14 */] <0.09326186f ? 
                             (data[14 /* X15 */] <0.121831566f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.0934156f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18274218f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.080646046f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.06764935f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1806741f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14281869f ? 
            0.0f : 
             (data[15 /* X16 */] <0.08547845f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[2 /* X3 */] <-0.120091036f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13329728f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15611652f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.60965216f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.13208432f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[35 /* X36 */] <-0.1015625f ? 
             (data[31 /* X32 */] <0.05354672f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.05075863f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.10864567f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.52984214f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.113004066f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15950459f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3005555f ? 
                 (data[18 /* X19 */] <-0.10370078f ? 
                     (data[31 /* X32 */] <0.05843742f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.22966738f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.08672961f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3771014f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.12818773f ? 
                     (data[0 /* X1 */] <0.19542809f ? 
                        1.0f : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.22329639f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[17 /* X18 */] <-0.5166735f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0680417f ? 
             (data[14 /* X15 */] <0.14524281f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11361207f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16365725f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.21845895f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.1164496f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[21 /* X22 */] <0.068882f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.19392076f ? 
                 (data[14 /* X15 */] <0.15160756f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3046292f ? 
             (data[14 /* X15 */] <0.0934156f ? 
                 (data[18 /* X19 */] <-0.1368331f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.103711866f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33481938f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.029128917f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04555078f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13286339f ? 
                     (data[12 /* X13 */] <0.13489883f ? 
                         (data[34 /* X35 */] <-0.15625f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.109375f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16080323f ? 
                             (data[11 /* X12 */] <-0.5537541f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.013983943f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[28 /* X29 */] <0.10557691f ? 
            0.0f : 
             (data[14 /* X15 */] <0.0915971f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.571616f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1395913f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20415762f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.11129521f ? 
                         (data[5 /* X6 */] <0.09937715f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.15017682f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.08653678f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09592525f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2570977f ? 
                 (data[29 /* X30 */] <0.08591836f ? 
                     (data[22 /* X23 */] <0.19839558f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.13494098f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.24024996f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.33273944f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.23621668f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.37083665f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
             (data[34 /* X35 */] <-0.93359375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17930192f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.08460459f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.099985614f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.13380978f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.11237749f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29118478f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16297317f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68359375f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.20382419f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59786165f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07183074f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.070348166f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[14 /* X15 */] <0.12705782f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0546875f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.4564644f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08041796f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.046875f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.171875f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0026880847f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-0.3168536f ? 
             (data[25 /* X26 */] <-0.40280828f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20021631f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[7 /* X8 */] <0.07560609f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.2588606f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.08859211f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15398885f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23665209f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.045670897f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4036408f ? 
                 (data[1 /* X2 */] <-0.6447744f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.021855371f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.10223778f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1181159f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
                 (data[26 /* X27 */] <0.11537998f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11312389f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[34 /* X35 */] <-0.63671875f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.102165334f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.30474618f ? 
                    0.0f : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.0343731f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26287517f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.16732751f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3070697f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.22115546f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7808593f ? 
                 (data[13 /* X14 */] <0.13999203f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[34 /* X35 */] <-0.08984375f ? 
             (data[33 /* X34 */] <-0.7656255f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0084914835f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25374463f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.09845143f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1289564f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14366345f ? 
                 (data[25 /* X26 */] <-0.5381941f ? 
                     (data[8 /* X9 */] <-0.005456233f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[26 /* X27 */] <0.23486936f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3149188f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (data[3 /* X4 */] <-0.23183723f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[9 /* X10 */] <-0.51005137f ? 
             (data[15 /* X16 */] <0.054512125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3703992f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.10464449f ? 
                     (data[32 /* X33 */] <-0.16719055f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08563802f ? 
             (data[33 /* X34 */] <-0.4615425f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13515241f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[28 /* X29 */] <0.09894184f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18510579f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
            0.0f : 
             (data[31 /* X32 */] <0.076075904f ? 
                 (data[11 /* X12 */] <-0.39784953f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13391043f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1760806f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8099413f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <-0.16315104f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030505348f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06201911f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.26500502f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26197746f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.055549316f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.46093863f ? 
             (data[0 /* X1 */] <-0.095023945f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[3 /* X4 */] <-0.30180898f ? 
             (data[15 /* X16 */] <0.04450281f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26541653f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.07978697f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05255335f ? 
             (data[35 /* X36 */] <-0.125f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10518429f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17881796f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.47820663f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09175502f ? 
             (data[33 /* X34 */] <-0.52764523f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9533154f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13915761f ? 
                 (data[19 /* X20 */] <-0.46515504f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6948071f ? 
                         (data[18 /* X19 */] <-0.106265515f ? 
                             (data[19 /* X20 */] <-0.31048527f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21970315f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <-0.106387906f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.10531881f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5086264f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5560911f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                     (data[8 /* X9 */] <-0.47491705f ? 
                         (data[33 /* X34 */] <0.09615156f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.369874f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17898029f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16089307f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026919963f ? 
             (data[35 /* X36 */] <-0.1484375f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13415733f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03444309f ? 
                         (data[21 /* X22 */] <0.078282446f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.52403945f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.110776655f ? 
             (data[24 /* X25 */] <-0.16788574f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3853287f ? 
            1.0f : 
             (data[6 /* X7 */] <0.1307167f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12606342f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2704429f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <0.13671875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08454696f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20403387f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.27492175f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.234375f ? 
             (data[9 /* X10 */] <-0.2679948f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (data[16 /* X17 */] <-0.2814739f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17256306f ? 
                     (data[30 /* X31 */] <0.03786726f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.047411755f ? 
                             (data[21 /* X22 */] <0.07328692f ? 
                                 (data[30 /* X31 */] <0.14376874f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.7864528f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12499959f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3762032f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.023480149f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.7998802f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3907039f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23984717f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.24251993f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15831953f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                 (data[7 /* X8 */] <0.075338736f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20434402f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.032515496f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.2579969f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[30 /* X31 */] <0.11463781f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06296856f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08710246f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0546875f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.03413736f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354277f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.061436158f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.078125f ? 
                 (data[27 /* X28 */] <0.11769181f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[29 /* X30 */] <0.12040481f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13699366f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.15740064f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.2877448f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.044680707f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14091122f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09173427f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.42375606f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1530074f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15054402f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.1204027f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.4603156f ? 
                        1.0f : 
                        0.0f))) : 
             (data[22 /* X23 */] <0.16465807f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19161019f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.047872186f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2611323f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44559833f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.023947729f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11471525f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1626067f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[15 /* X16 */] <0.06639819f ? 
                         (data[20 /* X21 */] <0.09494814f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17414783f ? 
             (data[35 /* X36 */] <-0.0859375f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.09622233f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28335336f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[13 /* X14 */] <0.108581655f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07407331f ? 
                 (data[24 /* X25 */] <-0.33779f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.010055089f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33203125f ? 
                 (data[23 /* X24 */] <0.04680836f ? 
                     (data[19 /* X20 */] <-0.14091122f ? 
                         (data[21 /* X22 */] <0.08130335f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.053800933f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062331904f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.37117165f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
                 (data[12 /* X13 */] <0.08923789f ? 
                     (data[21 /* X22 */] <0.09485391f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[35 /* X36 */] <0.08203125f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16759121f ? 
             (data[35 /* X36 */] <-0.33984375f ? 
                 (data[3 /* X4 */] <-0.33179688f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.13607176f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19637202f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (data[35 /* X36 */] <-0.40625f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.0879601f ? 
                     (data[13 /* X14 */] <0.10604927f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1048715f ? 
                 (data[26 /* X27 */] <0.03300557f ? 
                     (data[11 /* X12 */] <-0.34333685f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.14391996f ? 
                         (data[22 /* X23 */] <0.18025725f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.08170186f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[33 /* X34 */] <-0.123799905f ? 
            0.0f : 
             (data[15 /* X16 */] <0.1048715f ? 
                 (data[35 /* X36 */] <-0.59375f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.11191034f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41411048f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.027344648f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22485234f ? 
             (data[7 /* X8 */] <0.026145f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28844437f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28594542f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (data[27 /* X28 */] <-0.14863849f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0078125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17958026f ? 
                     (data[18 /* X19 */] <0.014013049f ? 
                         (data[22 /* X23 */] <0.1432814f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[30 /* X31 */] <0.07785595f ? 
            1.0f : 
             (data[14 /* X15 */] <0.11705608f ? 
                 (data[19 /* X20 */] <0.07214937f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5527344f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2060814f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.60127527f ? 
                     (data[19 /* X20 */] <-0.0031055182f ? 
                         (data[13 /* X14 */] <0.100713715f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[27 /* X28 */] <-0.107523814f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14912616f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0f ? 
                     (data[26 /* X27 */] <0.07140377f ? 
                         (data[24 /* X25 */] <-0.36083636f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.17978533f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.088171884f ? 
             (data[26 /* X27 */] <-0.16885822f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.055549316f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[29 /* X30 */] <0.1575188f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22796464f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101430796f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16676195f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66867906f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0077816746f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.022680992f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10314389f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19140625f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13641226f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[27 /* X28 */] <-0.15384476f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13880959f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11540249f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06389586f ? 
                         (data[35 /* X36 */] <-0.3125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.051043477f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0019300516f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.028960446f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[25 /* X26 */] <-0.5573378f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[9 /* X10 */] <-0.34411323f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17212206f ? 
             (data[26 /* X27 */] <-0.116652064f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.18632825f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.20564988f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[1 /* X2 */] <-0.5200974f ? 
             (data[28 /* X29 */] <0.12012304f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.037934195f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.056382794f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.15413491f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3097202f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.075338736f ? 
                 (data[33 /* X34 */] <-0.4519242f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09267264f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9032537f ? 
             (data[27 /* X28 */] <-0.31996125f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.31997123f ? 
             (data[15 /* X16 */] <0.10174359f ? 
                 (data[25 /* X26 */] <-0.4347799f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2942608f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.096808195f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.12169489f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.00694632f ? 
             (data[32 /* X33 */] <-0.9296875f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20251171f ? 
                     (data[26 /* X27 */] <-0.022680992f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08624231f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27089593f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.30702862f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.097432196f ? 
             (data[6 /* X7 */] <0.098984264f ? 
                 (data[3 /* X4 */] <-0.17450725f ? 
                     (data[30 /* X31 */] <0.18073948f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20156455f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13065656f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34240383f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07765867f ? 
                     (data[22 /* X23 */] <0.1201715f ? 
                         (data[8 /* X9 */] <0.1377569f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.1366348f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.25893593f ? 
                 (data[19 /* X20 */] <-0.077998236f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[1 /* X2 */] <-0.6504415f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.042035587f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44103387f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15804599f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37143362f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12553151f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.08309196f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16165099f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14228086f ? 
             (data[33 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.13477293f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.29893494f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2010456f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.04012373f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.9296875f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X5 */] <0.07558651f ? 
             (data[17 /* X18 */] <-0.075899184f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041913908f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30224094f ? 
                     (data[26 /* X27 */] <0.15830034f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09638322f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16687942f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21203336f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.123638965f ? 
                 (data[17 /* X18 */] <-0.54076725f ? 
                     (data[21 /* X22 */] <0.08348667f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.17900686f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.328125f ? 
                 (data[16 /* X17 */] <-0.5647023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.1042448f ? 
             (data[30 /* X31 */] <0.15589213f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21023007f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.04414879f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10576901f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54712003f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15123326f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11118188f ? 
                     (data[10 /* X11 */] <-0.5102685f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.07106102f ? 
                             (data[23 /* X24 */] <0.04085093f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19854549f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21667175f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15106913f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.203125f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0093754325f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2617147f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17021368f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.49966612f ? 
             (data[0 /* X1 */] <0.062450055f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.10785528f ? 
                 (data[10 /* X11 */] <-0.24702194f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.106697865f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5356648f ? 
             (data[11 /* X12 */] <-0.60070205f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4371466f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29826295f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.120091036f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[4 /* X5 */] <0.12731104f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.3828125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (data[34 /* X35 */] <-0.28320312f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15141822f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0322361f ? 
                     (data[28 /* X29 */] <0.07256481f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <0.07451699f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23157468f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.086418726f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15859202f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10893778f ? 
             (data[0 /* X1 */] <-0.22800198f ? 
                 (data[17 /* X18 */] <-0.10991392f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.9375f ? 
                     (data[1 /* X2 */] <-0.089395f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21464628f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.59375f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[33 /* X34 */] <-0.20312665f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50641924f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.23143274f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[29 /* X30 */] <0.096756965f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05255335f ? 
             (data[0 /* X1 */] <-0.18950833f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.214072f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.099077776f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4473865f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.099935606f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.012159463f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[2 /* X3 */] <-0.21411775f ? 
             (data[18 /* X19 */] <0.113709845f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (data[34 /* X35 */] <0.25f ? 
             (data[2 /* X3 */] <-0.5941424f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[13 /* X14 */] <0.116886705f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3978378f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.029469095f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84375f ? 
                 (data[30 /* X31 */] <0.09066786f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.034700435f ? 
                         (data[25 /* X26 */] <-0.14479421f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.50634134f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12690152f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30386364f ? 
             (data[22 /* X23 */] <0.08897313f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.033631f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.8176507f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.06399745f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.14839236f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[32 /* X33 */] <0.0f ? 
             (data[5 /* X6 */] <0.09136203f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19325435f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17197026f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.07793812f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2958881f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0024138812f ? 
                             (data[1 /* X2 */] <-0.5382322f ? 
                                 (data[31 /* X32 */] <0.04143103f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[20 /* X21 */] <0.14125969f ? 
                         (data[23 /* X24 */] <0.012765916f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2955927f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
         (data[19 /* X20 */] <-0.47120437f ? 
             (data[23 /* X24 */] <0.040957313f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4323159f ? 
                 (data[24 /* X25 */] <-0.33115166f ? 
                     (data[35 /* X36 */] <-0.828125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20911646f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.26757812f ? 
            0.0f : 
             (data[29 /* X30 */] <0.08591836f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13936125f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.08653678f ? 
            1.0f : 
             (data[31 /* X32 */] <0.07106942f ? 
                 (data[12 /* X13 */] <0.18169697f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.10394729f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24758196f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07828425f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04804977f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.018536394f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.5017154f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.203125f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.110776655f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.10580341f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.6585814f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2631837f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
                 (data[11 /* X12 */] <-0.52999735f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.7800997f ? 
                         (data[6 /* X7 */] <0.14630221f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.4621208f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08108239f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.158771f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.15558812f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.041578643f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.42578125f ? 
                 (data[31 /* X32 */] <0.12714204f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.171875f ? 
                     (data[27 /* X28 */] <-0.14426112f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16802832f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1640625f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15906823f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.5054843f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[28 /* X29 */] <0.09894184f ? 
            0.0f : 
             (data[30 /* X31 */] <0.10656187f ? 
                 (data[22 /* X23 */] <0.22416607f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.9969361f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28480613f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15771662f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
             (data[22 /* X23 */] <0.06528548f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14269198f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26385137f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0588912f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.10595901f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30991608f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
             (data[22 /* X23 */] <0.19238995f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10580987f ? 
                 (data[21 /* X22 */] <0.120150164f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.110960886f ? 
                         (data[20 /* X21 */] <0.069350556f ? 
                             (data[13 /* X14 */] <0.11050493f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21875f ? 
                             (data[33 /* X34 */] <-0.67692375f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.020757005f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[21 /* X22 */] <0.1199789f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12109375f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.50679255f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23671849f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18070354f ? 
                     (data[35 /* X36 */] <-0.484375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[5 /* X6 */] <0.031248614f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.643876f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.81186444f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.19140625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18445107f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17479564f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.06524212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (data[9 /* X10 */] <-0.44306716f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2109375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.021195693f ? 
                 (data[19 /* X20 */] <-0.16026905f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.09375f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.03125f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.095942095f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.33667883f ? 
                 (data[2 /* X3 */] <-0.32791793f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22944768f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3043191f ? 
                 (data[10 /* X11 */] <-0.8176507f ? 
                     (data[19 /* X20 */] <-0.10060759f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.099304624f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7120509f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.10182967f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0963429f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.31505498f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5703125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.104329266f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.091469064f ? 
                 (data[30 /* X31 */] <0.10619745f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16425401f ? 
                         (data[33 /* X34 */] <-0.36538595f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1776447f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.453125f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06406034f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[27 /* X28 */] <-0.36947674f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06971347f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6007804f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.114621915f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11802152f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19937499f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16908722f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.040607575f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53109074f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.057033014f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.0134256575f ? 
                     (data[34 /* X35 */] <0.0625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.890625f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53485674f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.11710526f ? 
         (data[27 /* X28 */] <-0.067591965f ? 
             (data[33 /* X34 */] <-0.379809f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.010781045f ? 
                 (data[21 /* X22 */] <0.11743817f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.24545997f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0703125f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19951887f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.91015625f ? 
                 (data[30 /* X31 */] <0.09222082f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.08712131f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2567084f ? 
                 (data[25 /* X26 */] <-0.5466806f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11277395f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[26 /* X27 */] <-0.33939832f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1015625f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10580987f ? 
                     (data[3 /* X4 */] <-0.2418332f ? 
                         (data[24 /* X25 */] <-0.0046198107f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15653348f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106748246f ? 
                 (data[12 /* X13 */] <0.1333661f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14819452f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18928531f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45386368f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26546198f ? 
                 (data[8 /* X9 */] <-0.14743508f ? 
                     (data[35 /* X36 */] <-0.6875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.3046875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.009966541f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.0728721f ? 
            1.0f : 
             (data[7 /* X8 */] <0.07266516f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.056640625f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12290573f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.08685292f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <-0.16699725f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.38634172f ? 
                     (data[4 /* X5 */] <0.118836395f ? 
                         (data[16 /* X17 */] <-0.57368773f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.07785595f ? 
             (data[24 /* X25 */] <-0.098621406f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21598154f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13896573f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1081174f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.047411755f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.070615165f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23802325f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.14069992f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.117695935f ? 
                1.0f : 
                0.0f)) : 
        0.90909094f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[1 /* X2 */] <-0.4209225f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21484375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19015004f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36010918f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.08391449f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17728648f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089361414f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.113004066f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29314542f ? 
             (data[35 /* X36 */] <-0.859375f ? 
                 (data[22 /* X23 */] <0.15985775f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21906735f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3501026f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.41546467f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[27 /* X28 */] <-0.118704736f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27258006f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.08670185f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17397468f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5022441f ? 
             (data[7 /* X8 */] <0.028818574f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17888503f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06355598f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.090471074f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (data[28 /* X29 */] <0.12216461f ? 
             (data[35 /* X36 */] <-0.10546875f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.06358428f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2109375f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.001207812f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.056640625f ? 
            0.0f : 
             (data[15 /* X16 */] <0.07171564f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[1 /* X2 */] <-0.13189852f ? 
             (data[7 /* X8 */] <0.11704647f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12632938f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (data[32 /* X33 */] <-0.0546875f ? 
                 (data[9 /* X10 */] <-0.45676848f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13314983f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1817458f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.57421875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.79296875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29669937f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16006307f ? 
                 (data[24 /* X25 */] <-0.74673766f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.087232135f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09374917f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.6640625f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17408995f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0073585417f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21207263f ? 
         (data[26 /* X27 */] <-0.17581904f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15404087f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.105113514f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.113507524f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.15716039f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13825953f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.046875f ? 
                 (data[34 /* X35 */] <0.28125f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21531452f ? 
                         (data[16 /* X17 */] <-0.3435186f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2716869f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75390625f ? 
                 (data[15 /* X16 */] <0.05576329f ? 
                     (data[33 /* X34 */] <-0.4519242f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26737902f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.11069134f ? 
                 (data[13 /* X14 */] <0.11187413f ? 
                     (data[16 /* X17 */] <-0.15558565f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.115819186f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.07978697f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[14 /* X15 */] <0.09023323f ? 
             (data[24 /* X25 */] <-0.37549216f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.3828125f ? 
                 (data[9 /* X10 */] <-0.05453228f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10612266f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16080323f ? 
                 (data[29 /* X30 */] <0.083482176f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3540058f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22913976f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.07640816f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26670426f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28789365f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.27031156f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.22012472f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.38530394f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11990995f ? 
                1.0f : 
                 (data[26 /* X27 */] <-3.5219715E-4f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24706896f ? 
                 (data[35 /* X36 */] <-0.859375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16316797f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[14 /* X15 */] <0.14751594f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23270032f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.1496698f ? 
                0.0f : 
                1.0f)) : 
         (data[26 /* X27 */] <-0.1967015f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6993449f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11564201f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.13577871f ? 
                         (data[14 /* X15 */] <0.09901808f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07106102f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
                 (data[35 /* X36 */] <-0.2734375f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.15703931f ? 
                         (data[7 /* X8 */] <0.048171338f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[30 /* X31 */] <0.112409286f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18549578f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.0884747f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[4 /* X5 */] <0.12497321f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26923305f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5489558f ? 
                 (data[7 /* X8 */] <0.032561574f ? 
                     (data[2 /* X3 */] <-0.24545997f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19022179f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.2578125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18490866f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3239568f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11331686f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.07023006f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.034633562f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.6485806f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (data[1 /* X2 */] <-0.16023421f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11762972f ? 
                 (data[8 /* X9 */] <0.0075529544f ? 
                     (data[18 /* X19 */] <0.07938185f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.37144718f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.76378673f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16035709f ? 
                     (data[14 /* X15 */] <0.14251506f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.31754592f ? 
                 (data[3 /* X4 */] <0.043051787f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (data[32 /* X33 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6060919f ? 
                 (data[8 /* X9 */] <-0.19406547f ? 
                     (data[27 /* X28 */] <-0.05318695f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.035044793f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.47716454f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22330286f ? 
                 (data[17 /* X18 */] <-0.46706867f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[26 /* X27 */] <-0.19322109f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08148795f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5253214f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022433897f ? 
                     (data[21 /* X22 */] <0.07904492f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.38568735f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X4 */] <-0.17186144f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1395994f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13593781f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.15106334f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.01171875f ? 
            0.0f : 
             (data[26 /* X27 */] <0.20702608f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (data[14 /* X15 */] <0.08204998f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.88671875f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.021484375f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.48813188f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.075074606f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.08574633f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18477952f ? 
             (data[33 /* X34 */] <-0.51322216f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.030546198f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.10078929f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.32617188f ? 
             (data[19 /* X20 */] <-0.44095775f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042684294f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10294082f ? 
             (data[23 /* X24 */] <0.029787136f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.31513178f ? 
                     (data[17 /* X18 */] <-0.5180908f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13469204f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.078125f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3934189f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17447963f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17005678f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23656668f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.097070366f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.47716454f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.46875f ? 
                     (data[16 /* X17 */] <-0.5856335f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24664694f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.13224106f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.11710526f ? 
         (data[29 /* X30 */] <0.11580662f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25000155f ? 
                1.0f : 
                0.0f) : 
             (data[29 /* X30 */] <0.13117163f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22923027f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17788632f ? 
                         (data[34 /* X35 */] <-0.34375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.048404098f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07640816f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0054063294f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37890625f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61146575f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24061473f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10795632f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3817505f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.074467845f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16006307f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.17283319f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1328125f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[0 /* X1 */] <-0.21050487f ? 
             (data[12 /* X13 */] <0.09764326f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.07325698f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.069800116f ? 
                        0.0f : 
                        1.0f))) : 
             (data[23 /* X24 */] <0.028191397f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026579723f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.19343302f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[27 /* X28 */] <0.31735104f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04094914f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25265515f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2149221f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657035f ? 
             (data[33 /* X34 */] <-0.5564913f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13186203f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <-0.123046875f ? 
             (data[32 /* X33 */] <-0.3203125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3565442f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1343224f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.10395722f ? 
             (data[15 /* X16 */] <0.06621491f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (data[33 /* X34 */] <-0.97656256f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19123445f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.112445354f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <0.25346008f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.999713f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <-0.3840861f ? 
                 (data[31 /* X32 */] <0.115179285f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03515625f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18289f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.06376578f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[0 /* X1 */] <-0.070527986f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.12675418f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.109375f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.39377302f ? 
             (data[1 /* X2 */] <-0.34441614f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.43750116f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70300704f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06890052f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[19 /* X20 */] <0.027260026f ? 
            0.0f : 
             (data[14 /* X15 */] <0.14524281f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12714204f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59786165f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1212762f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (data[23 /* X24 */] <0.040691357f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.100369826f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.045394722f ? 
                 (data[35 /* X36 */] <-0.2109375f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.13148293f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.16046456f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12573734f ? 
                 (data[0 /* X1 */] <-0.28225896f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.46875f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.00907718f ? 
                     (data[24 /* X25 */] <-0.5023713f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.14904024f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.04296875f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.03901879f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0392926f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[21 /* X22 */] <0.09231318f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21830097f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                 (data[28 /* X29 */] <0.07980219f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.015281675f ? 
                         (data[34 /* X35 */] <-0.375f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17416131f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.265625f ? 
                 (data[5 /* X6 */] <0.14059778f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06551507f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[5 /* X6 */] <0.066744156f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.40108752f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.011771641f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.608616f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.116851f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.29144984f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32191202f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17722535f ? 
            1.0f : 
             (data[27 /* X28 */] <0.08574633f ? 
                 (data[12 /* X13 */] <0.15330087f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05830288f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0234375f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06702106f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.13148293f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03515625f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27101117f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.3026641f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.11961801f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22126396f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                 (data[28 /* X29 */] <0.102259375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.123046875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
             (data[15 /* X16 */] <0.03981094f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.203125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15490486f ? 
                 (data[32 /* X33 */] <-0.328125f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18293254f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.4064469f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.13697188f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.030012354f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2584177f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18950121f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26660514f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
             (data[27 /* X28 */] <-0.35829583f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.734375f ? 
                     (data[32 /* X33 */] <0.03125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2750434f ? 
                 (data[19 /* X20 */] <-0.3732053f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5278188f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16408032f ? 
                     (data[21 /* X22 */] <0.07904492f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2154653f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.40429688f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17502205f ? 
             (data[18 /* X19 */] <-0.3571519f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.9296875f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.11130199f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5695529f ? 
             (data[20 /* X21 */] <0.08681585f ? 
                 (data[32 /* X33 */] <-0.5859375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (data[13 /* X14 */] <0.10595901f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15176725f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.125f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1380331f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8857422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18094486f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30386364f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.6682337f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[35 /* X36 */] <0.33789062f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12638591f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (data[5 /* X6 */] <0.13029262f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11140214f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22876911f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.1147735f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.5373556f ? 
             (data[32 /* X33 */] <0.01171875f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.6171875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[5 /* X6 */] <0.10510223f ? 
             (data[18 /* X19 */] <0.23099716f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41239226f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42056257f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.1875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28480613f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.07239359f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11062065f ? 
            1.0f : 
             (data[27 /* X28 */] <0.08574633f ? 
                 (data[32 /* X33 */] <-0.4375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[33 /* X34 */] <-0.38161185f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.03839077f ? 
                 (data[10 /* X11 */] <-0.25473315f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.10976476f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.07752813f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062331904f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14583433f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05078125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7871094f ? 
             (data[3 /* X4 */] <-0.33429587f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11012f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.52020484f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.43301225f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.16299926f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
             (data[24 /* X25 */] <-0.3262042f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.20890054f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13286339f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.11762264f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.1118229f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <-0.890625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.16874157f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19874518f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106435455f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16507298f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18279044f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.08404228f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[19 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09255289f ? 
                 (data[34 /* X35 */] <-0.890625f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.1875f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0074943327f ? 
             (data[33 /* X34 */] <-0.2463958f ? 
                 (data[22 /* X23 */] <0.10277203f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02555885f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05629679f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28727987f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.1526522f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.13707113f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15543018f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.18950121f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[5 /* X6 */] <0.13315517f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53125095f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19591513f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14657438f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0074943327f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06631786f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.40625f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.5152562f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23138896f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[17 /* X18 */] <-0.14251138f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.37117165f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19946744f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57166517f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.13064685f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.60379285f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (data[17 /* X18 */] <-0.3182542f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16825277f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10080521f ? 
                     (data[28 /* X29 */] <0.070615165f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.29086405f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.259478f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15340348f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08309196f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.5502566f ? 
                 (data[3 /* X4 */] <-0.23989464f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (data[17 /* X18 */] <-0.3182542f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16825277f ? 
                 (data[10 /* X11 */] <-0.98932785f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.117695935f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.29086405f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (data[33 /* X34 */] <-0.76021683f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16006307f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.15948945f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.072992824f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.079906836f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.0054063294f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114125185f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.6171875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (data[5 /* X6 */] <0.13143763f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.11575797f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48685926f ? 
                        1.0f : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.20032129f ? 
                         (data[9 /* X10 */] <-0.051072534f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.051384214f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10356885f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14005364f ? 
             (data[22 /* X23 */] <0.10572781f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[11 /* X12 */] <-0.51868457f ? 
             (data[4 /* X5 */] <0.13052556f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09140008f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[32 /* X33 */] <0.056640625f ? 
             (data[20 /* X21 */] <0.10005894f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30500424f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0812206f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05380085f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17502804f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16444479f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.08715432f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.65116876f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[32 /* X33 */] <0.24414062f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18530445f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.04592944f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25238502f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35313147f ? 
                 (data[35 /* X36 */] <-0.9375f ? 
                     (data[32 /* X33 */] <0.23260133f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[12 /* X13 */] <0.09869393f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29673374f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[32 /* X33 */] <-0.021484375f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15265907f ? 
                 (data[35 /* X36 */] <-0.2734375f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.06924195f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.1340264f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3703992f ? 
                 (data[13 /* X14 */] <0.09721685f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16150402f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23129576f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3389044f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.578125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.1457442f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12579747f ? 
             (data[9 /* X10 */] <-0.08835535f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[34 /* X35 */] <-0.34179688f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15070216f ? 
                 (data[31 /* X32 */] <0.036163416f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.09084774f ? 
                 (data[28 /* X29 */] <0.19734254f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.59070706f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.22342347f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[19 /* X20 */] <-0.31755152f ? 
             (data[4 /* X5 */] <0.065650724f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.28021127f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6713005f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <0.6855469f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
             (data[7 /* X8 */] <0.026679715f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.097103134f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.7403852f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (data[23 /* X24 */] <0.040957313f ? 
             (data[4 /* X5 */] <0.13052556f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.08410362f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29760656f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.06036673f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[32 /* X33 */] <-0.27929688f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37964472f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05859375f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14492348f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.242654f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25576678f ? 
             (data[14 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07830257f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2774192f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19327828f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[5 /* X6 */] <0.07017921f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.12109375f ? 
                 (data[12 /* X13 */] <0.117606014f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17841004f ? 
                 (data[26 /* X27 */] <0.051337965f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.22172475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35731885f ? 
             (data[9 /* X10 */] <-0.8743016f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.03400885f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.015625f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.11974833f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (data[3 /* X4 */] <0.008065913f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[5 /* X6 */] <0.13372767f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2773396f ? 
                 (data[19 /* X20 */] <-0.03444309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3735492f ? 
             (data[26 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (data[26 /* X27 */] <0.05545337f ? 
                     (data[9 /* X10 */] <-0.14391907f ? 
                         (data[33 /* X34 */] <-0.42067406f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.19007455f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.064560935f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.13405089f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[27 /* X28 */] <-0.07238379f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.078125f ? 
                 (data[12 /* X13 */] <0.108149976f ? 
                     (data[2 /* X3 */] <-0.38650006f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0012791834f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.01212311f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17262715f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.242654f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.116851f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[13 /* X14 */] <0.10027661f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.39424425f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18321468f ? 
             (data[10 /* X11 */] <-0.8215063f ? 
                 (data[15 /* X16 */] <0.043877225f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[26 /* X27 */] <0.23486936f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.255887f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13301547f ? 
             (data[15 /* X16 */] <0.046066765f ? 
                 (data[13 /* X14 */] <0.09197156f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.3125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1918764f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12038937f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23819895f ? 
                     (data[31 /* X32 */] <0.03502273f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.13908137f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1886885f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22189495f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.6325819f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026579723f ? 
             (data[10 /* X11 */] <-0.9950083f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19715376f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4228115f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11672824f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13160408f ? 
                        0.0f : 
                        1.0f))) : 
             (data[21 /* X22 */] <0.12760109f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <0.11237749f ? 
             (data[35 /* X36 */] <-0.546875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19768514f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18296342f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.017628074f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.21261333f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16797404f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.4449046f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.04782773f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.56959194f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.16796875f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015685966f ? 
                 (data[18 /* X19 */] <0.1938085f ? 
                     (data[11 /* X12 */] <-0.12544739f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.53250897f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08271122f ? 
             (data[21 /* X22 */] <0.14058705f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.098091066f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06718557f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0739248f ? 
             (data[25 /* X26 */] <-0.5466806f ? 
                 (data[21 /* X22 */] <0.17051119f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22667913f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.066926226f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39728016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
             (data[7 /* X8 */] <0.052346013f ? 
                 (data[34 /* X35 */] <-0.1875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.033550084f ? 
                 (data[10 /* X11 */] <-0.6634267f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.7638111f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.3706936f ? 
            1.0f : 
             (data[21 /* X22 */] <0.13607019f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21261333f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.44825712f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.06305904f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[35 /* X36 */] <-0.8339844f ? 
             (data[7 /* X8 */] <0.07694288f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.35829583f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.041296806f ? 
                     (data[23 /* X24 */] <0.025531832f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1430587f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.24737933f ? 
                                 (data[12 /* X13 */] <0.18807639f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07292539f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[28 /* X29 */] <0.07112555f ? 
            0.0f : 
             (data[21 /* X22 */] <0.1202612f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32916445f ? 
             (data[7 /* X8 */] <0.028818574f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.25329554f ? 
                     (data[3 /* X4 */] <-0.24075142f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19140625f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14893569f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45935583f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18229243f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.2962362f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13415071f ? 
                 (data[21 /* X22 */] <0.08130335f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.6875f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.33526155f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47916684f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.39827663f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17051792f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25633138f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26783556f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13110441f ? 
                     (data[25 /* X26 */] <-0.5626665f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09585678f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.53069484f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17609331f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.095478415f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35121644f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.7734375f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.014806787f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26246515f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[34 /* X35 */] <-0.7519531f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077127405f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.8830316f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3300615f ? 
                     (data[2 /* X3 */] <-0.51541054f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15543018f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[21 /* X22 */] <0.1199789f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[21 /* X22 */] <0.061259814f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26795164f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10346306f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.10563549f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <0.027889863f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.041884445f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.37440035f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[29 /* X30 */] <0.121718585f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.087237425f ? 
                 (data[18 /* X19 */] <0.033611197f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.20070702f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14463069f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.04486001f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.111098535f ? 
                     (data[27 /* X28 */] <0.2961632f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.45733285f ? 
             (data[27 /* X28 */] <-0.02716119f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15753153f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30991608f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2676947f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                     (data[14 /* X15 */] <0.0847774f ? 
                         (data[34 /* X35 */] <-0.3125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23662437f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[27 /* X28 */] <0.32853198f ? 
             (data[7 /* X8 */] <0.112768754f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.12109375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1662799f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08766799f ? 
                 (data[3 /* X4 */] <-0.15402447f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11169933f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.07708578f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.09148906f ? 
                     (data[0 /* X1 */] <-0.0031007733f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.04361688f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1772812f ? 
             (data[23 /* X24 */] <0.026063744f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08579124f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.091095015f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.11114596f ? 
            0.0f : 
             (data[21 /* X22 */] <0.10614604f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[18 /* X19 */] <-0.19524209f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1170209f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06190584f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08575099f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[18 /* X19 */] <0.1938085f ? 
             (data[23 /* X24 */] <0.040957313f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.036942616f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.074574694f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07077726f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.058421675f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.23828125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (data[10 /* X11 */] <0.04600363f ? 
             (data[23 /* X24 */] <0.120212376f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.27286264f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14146806f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16808456f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1681118f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08443433f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.01171875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26378196f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.17364554f ? 
                             (data[9 /* X10 */] <-0.6123612f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44288236f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (data[19 /* X20 */] <-0.33327976f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.083779044f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.073935926f ? 
             (data[19 /* X20 */] <-0.5304878f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32840613f ? 
                 (data[7 /* X8 */] <0.09458846f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22781545f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3070697f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.18073948f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22218062f ? 
                 (data[11 /* X12 */] <-0.3829315f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.38671875f ? 
             (data[22 /* X23 */] <0.15079212f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.040492415f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08158304f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07303968f ? 
                     (data[26 /* X27 */] <-0.008759351f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.097796746f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.76894945f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.5427659f ? 
                 (data[5 /* X6 */] <0.1612081f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.29222047f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12163491f ? 
                 (data[3 /* X4 */] <-0.3867747f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.42252615f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.34375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.19791071f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.08243256f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16796875f ? 
             (data[35 /* X36 */] <-0.34375f ? 
                 (data[26 /* X27 */] <0.44135198f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2750434f ? 
                 (data[21 /* X22 */] <0.09353593f ? 
                     (data[33 /* X34 */] <-0.26442462f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27941424f ? 
                     (data[24 /* X25 */] <-0.17166913f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-0.6354659f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[27 /* X28 */] <-0.3231558f ? 
            1.0f : 
             (data[29 /* X30 */] <0.051103473f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27162847f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13004072f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0384625f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.08765423f ? 
                                 (data[19 /* X20 */] <-0.34029698f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[10 /* X11 */] <-0.18533236f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19140625f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23963763f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.37677872f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[32 /* X33 */] <-0.9550781f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0046198107f ? 
                1.0f : 
                0.0f) : 
             (data[18 /* X19 */] <-0.035044793f ? 
                 (data[3 /* X4 */] <-0.2418332f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.16293828f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X9 */] <-0.19259486f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14463569f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21801049f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08170395f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[5 /* X6 */] <0.12800258f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09287034f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.22265625f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.030155024f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08923902f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.110936016f ? 
                 (data[33 /* X34 */] <-0.27163613f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.79086584f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.18583699f ? 
                         (data[6 /* X7 */] <0.12590893f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[5 /* X6 */] <0.09365206f ? 
             (data[14 /* X15 */] <0.11614683f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61284673f ? 
             (data[3 /* X4 */] <-0.30180898f ? 
                 (data[16 /* X17 */] <-0.16137332f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.3828125f ? 
            0.0f : 
             (data[28 /* X29 */] <0.10693177f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3703992f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14109668f ? 
                    0.0f : 
                    1.0f)) : 
             (data[26 /* X27 */] <0.07129008f ? 
                 (data[12 /* X13 */] <0.13934466f ? 
                     (data[26 /* X27 */] <-0.031467382f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[19 /* X20 */] <-0.31997123f ? 
             (data[3 /* X4 */] <0.07054069f ? 
                 (data[8 /* X9 */] <-0.17468968f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08308498f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27045998f ? 
                 (data[10 /* X11 */] <-0.9950083f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.9375f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.9785156f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.029890068f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053058337f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.012741646f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6398547f ? 
             (data[26 /* X27 */] <-0.18230888f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2415422f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23377563f ? 
             (data[26 /* X27 */] <-0.1305737f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.40625f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.14392866f ? 
             (data[32 /* X33 */] <-0.03125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11082733f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.55420005f ? 
                         (data[35 /* X36 */] <0.07845875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.350012f ? 
             (data[3 /* X4 */] <-0.39427164f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.060956743f ? 
                     (data[24 /* X25 */] <-0.14314847f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.03196348f ? 
             (data[32 /* X33 */] <-0.12109375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[34 /* X35 */] <-0.68359375f ? 
                 (data[20 /* X21 */] <0.14861695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.32564545f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0086578f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.014881928f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13830774f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0774776f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.13160408f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.13324715f ? 
                         (data[31 /* X32 */] <0.043033104f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3720703f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08859211f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.104245916f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.33912852f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.46473286f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.109173335f ? 
                     (data[34 /* X35 */] <-0.28125f ? 
                         (data[18 /* X19 */] <-0.08081545f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <0.0767662f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (data[14 /* X15 */] <0.1229662f ? 
            0.0f : 
             (data[5 /* X6 */] <0.1291476f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25676122f ? 
             (data[32 /* X33 */] <-0.9296875f ? 
                 (data[5 /* X6 */] <0.119987465f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.06621182f ? 
                     (data[25 /* X26 */] <-0.072519615f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14124681f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15740064f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.042983018f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.117094435f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[33 /* X34 */] <-0.2842563f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43359375f ? 
                 (data[29 /* X30 */] <0.09380098f ? 
                     (data[26 /* X27 */] <0.24183019f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.023480149f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.09852452f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23159955f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16592523f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.12342251f ? 
                 (data[30 /* X31 */] <0.0988048f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1819143f ? 
             (data[18 /* X19 */] <-0.06079079f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.047411755f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.18966407f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21072647f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.17065097f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49464846f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9650808f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18476395f ? 
                 (data[3 /* X4 */] <-0.021921981f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.015625f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14363988f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39602116f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.34179688f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22241516f ? 
                 (data[7 /* X8 */] <0.044325296f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[15 /* X16 */] <0.10268196f ? 
             (data[18 /* X19 */] <-0.0035774645f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6713005f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.908975f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.080798864f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.84375f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13666236f ? 
             (data[11 /* X12 */] <-0.6176712f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.0021438678f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06327028f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11617325f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
                     (data[25 /* X26 */] <-0.54135203f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1467606f ? 
                            0.0f : 
                            1.0f) : 
                         (data[35 /* X36 */] <-0.34375f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.21875f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0513812f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.033852443f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0859375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16027942f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25933594f ? 
             (data[29 /* X30 */] <0.060323328f ? 
                 (data[18 /* X19 */] <-0.036765292f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20125045f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43982401f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[34 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (data[7 /* X8 */] <0.07213045f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08422728f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.24772488f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.23007087f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09148906f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.10052217f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.09889186f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21548218f ? 
             (data[23 /* X24 */] <0.026063744f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16958433f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.765625f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0073585417f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[15 /* X16 */] <0.09392381f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4964748f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.53487206f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11708176f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.04227802f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14231445f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.203125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1346172f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11621613f ? 
                 (data[25 /* X26 */] <-0.28025037f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[33 /* X34 */] <-0.2842563f ? 
             (data[5 /* X6 */] <0.097087115f ? 
                 (data[23 /* X24 */] <0.062765755f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.33955634f ? 
                     (data[34 /* X35 */] <0.140625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.055010796f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32853198f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[3 /* X4 */] <-0.25307867f ? 
             (data[25 /* X26 */] <-0.4108012f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.074467845f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[0 /* X1 */] <-0.24899852f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.19140625f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.077077195f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09517497f ? 
                         (data[19 /* X20 */] <-0.34416854f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.4f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1012744f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12720604f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[21 /* X22 */] <0.1199789f ? 
             (data[9 /* X10 */] <-0.7642869f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.120758034f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.49781194f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26171967f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34226626f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.27435693f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16063057f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.18600892f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.11769181f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026919963f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.21033819f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07828425f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.578125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.17578125f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.052667193f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.05357375f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33984375f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[21 /* X22 */] <0.12449575f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.34411323f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <0.23589008f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13192792f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11512648f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1659569f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.16419987f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.03125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.1671541f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (data[34 /* X35 */] <-0.6015625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17502804f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09910573f ? 
                     (data[7 /* X8 */] <0.027362028f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.03786726f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23671849f ? 
             (data[8 /* X9 */] <-0.32084584f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.35936573f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.093885265f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X2 */] <-0.59377015f ? 
             (data[7 /* X8 */] <0.09726203f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.03476134f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[18 /* X19 */] <-0.1351681f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.23933421f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.07426931f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[18 /* X19 */] <0.17097485f ? 
                 (data[16 /* X17 */] <-0.53785044f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.484375f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.012421082f ? 
                     (data[8 /* X9 */] <-0.14267792f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.5698164f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.10395722f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12584989f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19893552f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.23933421f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14592105f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.07426931f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[35 /* X36 */] <-0.33984375f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17615725f ? 
                 (data[22 /* X23 */] <0.10048222f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.8317899f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.1698175f ? 
                     (data[31 /* X32 */] <0.07243245f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7916877f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.066579044f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23984717f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.028569957f ? 
            0.0f : 
             (data[21 /* X22 */] <0.10614604f ? 
                0.0f : 
                1.0f)) : 
        0.7777778f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02721443f ? 
        1.0f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0286618f ? 
             (data[18 /* X19 */] <-0.100840114f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1347321f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12041964f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.14288782f ? 
                 (data[33 /* X34 */] <-0.64663535f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4604407f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10311092f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.1496698f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16601562f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.044315785f ? 
                 (data[10 /* X11 */] <-0.25473315f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.014348083f ? 
                         (data[35 /* X36 */] <-0.14370728f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.54076725f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2676947f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29561776f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16115467f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.04412201f ? 
                 (data[20 /* X21 */] <0.14861695f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.07833148f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.13353825f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[35 /* X36 */] <-0.33984375f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6658184f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3833686f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11863102f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40865508f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.13645554f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101430796f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16006307f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.16293828f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4375f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.35637152f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.039251976f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08707428f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09309795f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106748246f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.109025754f ? 
                 (data[10 /* X11 */] <-0.9872971f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.085106105f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15945834f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.2140043f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[8 /* X9 */] <0.32916445f ? 
             (data[7 /* X8 */] <0.028818574f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1391891f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.1758536f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.046917066f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.34952223f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18539836f ? 
             (data[29 /* X30 */] <0.060956743f ? 
                 (data[1 /* X2 */] <0.18262756f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09622233f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.25360733f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.121904746f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0554924f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27957645f ? 
                 (data[32 /* X33 */] <-0.3203125f ? 
                     (data[19 /* X20 */] <-0.10219553f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.10714724f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0705851f ? 
                 (data[18 /* X19 */] <0.07938185f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0054063294f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16382925f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.11611318f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09955405f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3352589f ? 
                 (data[29 /* X30 */] <0.060956743f ? 
                     (data[32 /* X33 */] <-0.125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31201714f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2578125f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.081897765f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.90909094f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (data[18 /* X19 */] <0.16949284f ? 
             (data[7 /* X8 */] <0.046464153f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.081382714f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17265677f ? 
                     (data[28 /* X29 */] <0.070615165f ? 
                         (data[8 /* X9 */] <0.08685292f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.17872217f ? 
                     (data[35 /* X36 */] <-0.59375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.24169482f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.0078125f ? 
                 (data[34 /* X35 */] <-0.18945149f ? 
                     (data[23 /* X24 */] <0.04372978f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16220398f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.430357f ? 
             (data[19 /* X20 */] <-0.43611827f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11701496f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.6796875f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07665192f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.123046875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (data[18 /* X19 */] <-0.16377477f ? 
             (data[0 /* X1 */] <0.079947166f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18333831f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.19262299f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
                 (data[19 /* X20 */] <0.04782773f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08283769f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4677951f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13250683f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.09250635f ? 
             (data[2 /* X3 */] <-0.11225548f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.10510223f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11065399f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
         (data[3 /* X4 */] <-0.30180898f ? 
             (data[26 /* X27 */] <0.085211724f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12501013f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2109375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0421008f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20433748f ? 
                     (data[23 /* X24 */] <0.04972793f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0625f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13801345f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
             (data[30 /* X31 */] <0.058055725f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0907959f ? 
                 (data[32 /* X33 */] <0.140625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[29 /* X30 */] <0.15456282f ? 
             (data[14 /* X15 */] <0.17136674f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8099413f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.9969361f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.07240688f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18632017f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.046875f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1417977f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[4 /* X5 */] <0.089613505f ? 
             (data[18 /* X19 */] <0.06793919f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.56911147f ? 
             (data[11 /* X12 */] <-0.65726584f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.085106105f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2410856f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (data[23 /* X24 */] <0.04893601f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2463958f ? 
                 (data[11 /* X12 */] <-0.34899324f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17546663f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.49305376f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06764935f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16859414f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.09021701f ? 
                     (data[24 /* X25 */] <-0.6668805f ? 
                        0.0f : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.08135011f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.71916777f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.10450517f ? 
                                    1.0f : 
                                    0.0f))))))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2567084f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.41686976f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33301067f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[16 /* X17 */] <-0.7125574f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.235363f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.25072312f ? 
                 (data[15 /* X16 */] <0.038872566f ? 
                     (data[13 /* X14 */] <0.111204304f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06178722f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16712594f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
                     (data[19 /* X20 */] <-0.321146f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10576901f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09362878f ? 
                     (data[9 /* X10 */] <-0.5176632f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
        0.033898305f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24047208f ? 
             (data[32 /* X33 */] <0.11327553f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24727598f ? 
                     (data[19 /* X20 */] <-0.4603156f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11394244f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (data[8 /* X9 */] <-0.4738127f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.953125f ? 
                 (data[22 /* X23 */] <0.15021437f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.062346112f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.07765867f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.091782115f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.021195693f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14372422f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.10219553f ? 
                     (data[35 /* X36 */] <-0.31487092f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.09774229f ? 
                 (data[13 /* X14 */] <0.16365725f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09634264f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45088592f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15648086f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.0404254f ? 
                 (data[16 /* X17 */] <-0.2690705f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18882917f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.53937215f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25854155f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
        0.8333333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[27 /* X28 */] <-0.14745566f ? 
             (data[7 /* X8 */] <0.06250559f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.07075171f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.38530394f ? 
             (data[22 /* X23 */] <0.10919429f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09734011f ? 
                 (data[26 /* X27 */] <0.01908393f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[27 /* X28 */] <-0.32635033f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4283981f ? 
                 (data[22 /* X23 */] <0.09128412f ? 
                     (data[19 /* X20 */] <-0.3248107f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.07500218f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.38530394f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18254231f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19320941f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <0.1796875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6032631f ? 
             (data[5 /* X6 */] <0.13372767f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.13707113f ? 
                 (data[21 /* X22 */] <0.109533675f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.17788222f ? 
                     (data[16 /* X17 */] <-0.32096544f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[9 /* X10 */] <-0.13250403f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08283769f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17717887f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.055019584f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14617608f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03368344f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44034114f ? 
             (data[14 /* X15 */] <0.083413854f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.35021788f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.1918764f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.09259548f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16165099f ? 
         (data[11 /* X12 */] <-0.4097993f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.047411755f ? 
                 (data[32 /* X33 */] <-0.015625f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26442462f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09672732f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.12217926f ? 
                             (data[33 /* X34 */] <-0.246151f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[8 /* X9 */] <-0.5073873f ? 
            1.0f : 
             (data[29 /* X30 */] <0.037965775f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.4375f ? 
                     (data[7 /* X8 */] <0.06923497f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.019232813f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[10 /* X11 */] <-0.9969361f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.3902413f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10768662f ? 
                     (data[35 /* X36 */] <-0.859375f ? 
                         (data[32 /* X33 */] <0.25f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <0.38887897f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.046891477f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14832242f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[18 /* X19 */] <-0.08796711f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.049725045f ? 
                 (data[29 /* X30 */] <0.14241046f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25950408f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6993449f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023600962f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.07106102f ? 
                             (data[5 /* X6 */] <0.08329426f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.11704647f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.11710526f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11164532f ? 
             (data[20 /* X21 */] <0.1309595f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.038246986f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.045047197f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.54135203f ? 
                         (data[20 /* X21 */] <0.19464028f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.046800274f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06406034f ? 
                 (data[35 /* X36 */] <-0.0859375f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28556705f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (data[3 /* X4 */] <-0.18060791f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19478928f ? 
                 (data[31 /* X32 */] <0.03464183f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22517793f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.092449605f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[34 /* X35 */] <-0.19140625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.031659875f ? 
                 (data[29 /* X30 */] <0.08460459f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28125f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.11177749f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.236646f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[4 /* X5 */] <0.076170966f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.2125545f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.02823033f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7864528f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14834946f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6972857f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.048821524f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[30 /* X31 */] <0.08756194f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22485234f ? 
             (data[8 /* X9 */] <-0.4734803f ? 
                 (data[11 /* X12 */] <-0.21889655f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2049522f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11863102f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (data[34 /* X35 */] <0.0f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.13826422f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06051799f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.1155152f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17869799f ? 
            0.0f : 
             (data[21 /* X22 */] <0.18214738f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.5264595f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0743705f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0887265f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11863102f ? 
                 (data[12 /* X13 */] <0.092389904f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[34 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15070216f ? 
                 (data[17 /* X18 */] <-0.54076725f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.09377378f ? 
                         (data[21 /* X22 */] <0.11743817f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09334827f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25767544f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.012120965f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.10395722f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (data[34 /* X35 */] <-0.6621094f ? 
             (data[18 /* X19 */] <0.22241516f ? 
                 (data[15 /* X16 */] <0.0907959f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19874153f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.015497438f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.7734211f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3642349f ? 
                        0.0f : 
                        1.0f)))) : 
        0.7777778f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5926125f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.064627446f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27280685f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1433448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.12109375f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.1547022f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.01171875f ? 
             (data[33 /* X34 */] <-0.7656255f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.5667179f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.013951511f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.60129887f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.49824885f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.13920087f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30991608f ? 
             (data[12 /* X13 */] <0.087136544f ? 
                 (data[31 /* X32 */] <0.033020135f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.733017f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.09267264f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3926248f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10768662f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.5246251f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.031492088f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09860508f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                     (data[32 /* X33 */] <-0.25f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.02637872f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (data[22 /* X23 */] <0.025420895f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2725377f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.229547f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.16442412f ? 
                    0.0f : 
                    1.0f))) : 
         (data[34 /* X35 */] <-0.17773438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23777655f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5564913f ? 
             (data[11 /* X12 */] <-0.62214226f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <-0.47084823f ? 
                 (data[4 /* X5 */] <0.07909326f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.03802662f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12483296f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.051620606f ? 
             (data[35 /* X36 */] <-0.3203125f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.00346854f ? 
                     (data[15 /* X16 */] <0.03949452f ? 
                         (data[30 /* X31 */] <0.10855852f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.546875f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07365368f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16903752f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25592452f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4243684f ? 
                 (data[10 /* X11 */] <-0.8176507f ? 
                     (data[0 /* X1 */] <-0.20399702f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46378198f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.056907855f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <0.03515625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[33 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5170638f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
            0.0f : 
             (data[31 /* X32 */] <0.067064226f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114119045f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14905614f ? 
                         (data[20 /* X21 */] <0.094173126f ? 
                             (data[2 /* X3 */] <-0.35829204f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[6 /* X7 */] <0.12664844f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.10123155f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2934119f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2329525f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18487923f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[23 /* X24 */] <0.04734027f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.21315183f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.11707327f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.009840393f ? 
            1.0f : 
             (data[10 /* X11 */] <-1.0913982f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18429568f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19084181f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.41974297f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.45209172f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (data[33 /* X34 */] <-0.97656256f ? 
             (data[23 /* X24 */] <0.054941993f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.103837624f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.12115233f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1396272f ? 
             (data[24 /* X25 */] <-0.07883159f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16880457f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06990243f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9661884f ? 
                     (data[18 /* X19 */] <0.0031718838f ? 
                         (data[27 /* X28 */] <-0.10592654f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.61077154f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.32104945f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.484375f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13987689f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.10726015f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15611652f ? 
             (data[18 /* X19 */] <-0.05793012f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.0865888f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.29296875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.43030366f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
                 (data[2 /* X3 */] <-0.4335134f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44070467f ? 
                         (data[33 /* X34 */] <-0.48077032f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33393434f ? 
                                 (data[32 /* X33 */] <-0.25f ? 
                                    0.0f : 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.20653476f ? 
                                        1.0f : 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10893582f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[19 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25032356f ? 
                 (data[33 /* X34 */] <-0.45913574f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.10853729f ? 
                         (data[28 /* X29 */] <0.16861014f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.58119154f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27295896f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26741028f ? 
                 (data[4 /* X5 */] <0.11766748f ? 
                     (data[5 /* X6 */] <0.09479708f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2696907f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20968235f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.18073948f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
         (data[31 /* X32 */] <0.052545425f ? 
             (data[34 /* X35 */] <-0.4921875f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20673242f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.53785044f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13415071f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.089114904f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2169822f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.580998f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04749251f ? 
             (data[12 /* X13 */] <0.08916403f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.07806073f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.18685539f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.201415f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.1435977f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06983889f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9650808f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.12360223f ? 
                 (data[25 /* X26 */] <-0.24295013f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.06731666f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (data[31 /* X32 */] <0.08258433f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.53069484f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11003255f ? 
             (data[30 /* X31 */] <0.024667108f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.92909706f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.2418332f ? 
                         (data[30 /* X31 */] <0.15244757f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.37109375f ? 
             (data[33 /* X34 */] <-0.14904024f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1585822f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18705294f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20683299f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.021834422f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.10184595f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
         (data[7 /* X8 */] <0.02721443f ? 
            1.0f : 
             (data[18 /* X19 */] <0.07549442f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.05386803f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.26171875f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42988938f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4714744f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18484898f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[32 /* X33 */] <-0.021484375f ? 
             (data[30 /* X31 */] <0.10930337f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.097103134f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0084914835f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.6585814f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.019014431f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41239226f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1687801f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0739248f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.25087756f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.094099246f ? 
                    0.0f : 
                    1.0f))) : 
        0.90909094f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3057253f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                 (data[34 /* X35 */] <-0.171875f ? 
                     (data[1 /* X2 */] <-0.15740064f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.13849148f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09512317f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.07907979f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20887296f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.101430796f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
        0.024590164f : 
         (data[19 /* X20 */] <-0.31755152f ? 
             (data[28 /* X29 */] <0.13645554f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16599433f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.88036835f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09710918f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.25142094f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49551326f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22441524f ? 
             (data[18 /* X19 */] <-0.035044793f ? 
                 (data[8 /* X9 */] <0.09171329f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.5974585f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10346306f ? 
                     (data[26 /* X27 */] <0.06084885f ? 
                         (data[31 /* X32 */] <0.064002916f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16452701f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.07390518f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[17 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.030889621f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07703309f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.62004775f ? 
                 (data[34 /* X35 */] <-0.015625f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1037439f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12165695f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16938198f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.0767203f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.21769884f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.06968062f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (data[15 /* X16 */] <0.039654545f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12109375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0546875f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12675811f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31216115f ? 
                         (data[32 /* X33 */] <-0.025989765f ? 
                             (data[30 /* X31 */] <0.099985614f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.13324715f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.18188247f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.059053853f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.15714735f ? 
                     (data[19 /* X20 */] <-0.4111024f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24422057f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10580987f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4283981f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.118757874f ? 
                     (data[9 /* X10 */] <-0.87085265f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.011376046f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3924229f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17607951f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.094571605f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16093925f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24382587f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28430724f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45788476f ? 
                 (data[8 /* X9 */] <-0.19007455f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1557893f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4907055f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.0029865995f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26758403f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.06398924f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
         (data[15 /* X16 */] <0.0588912f ? 
             (data[34 /* X35 */] <0.0f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.16699725f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.02667598f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X7 */] <0.08027026f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.48690546f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2598492f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.2524539f ? 
         (data[15 /* X16 */] <0.0729668f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.04654174f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08203125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22667913f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.25575343f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0737346f ? 
             (data[20 /* X21 */] <0.09564458f ? 
                 (data[10 /* X11 */] <-0.23931076f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X13 */] <0.11865669f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12664522f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.24024996f ? 
            1.0f : 
             (data[26 /* X27 */] <0.09565295f ? 
                 (data[27 /* X28 */] <-0.2848212f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.4064469f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.099935606f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14366345f ? 
                 (data[0 /* X1 */] <-0.0025329897f ? 
                     (data[21 /* X22 */] <0.07838266f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.11331686f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27663428f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31378844f ? 
                     (data[23 /* X24 */] <0.07234019f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.07691744f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023551095f ? 
         (data[14 /* X15 */] <0.12342083f ? 
            0.0f : 
             (data[30 /* X31 */] <0.1477791f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37739804f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5637836f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24925184f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <0.17292315f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5522449f ? 
                 (data[33 /* X34 */] <-0.53125095f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48339844f ? 
         (data[24 /* X25 */] <-0.13325357f ? 
             (data[20 /* X21 */] <0.10741622f ? 
                 (data[26 /* X27 */] <0.25284293f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13098873f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[18 /* X19 */] <-0.16091411f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.038108826f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06631922f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.013284654f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.45423f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06280109f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (data[14 /* X15 */] <0.08386848f ? 
             (data[26 /* X27 */] <-0.015720172f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13185668f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12173148f ? 
                    0.0f : 
                    1.0f))) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07928716f ? 
             (data[0 /* X1 */] <-0.07933098f ? 
                 (data[21 /* X22 */] <0.12534267f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.40625f ? 
                     (data[29 /* X30 */] <0.18757366f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17723562f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7751675f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09243097f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.041666366f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.119148545f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[18 /* X19 */] <0.21835172f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                     (data[11 /* X12 */] <-0.27546033f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2792096f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22048016f ? 
             (data[19 /* X20 */] <-0.31755152f ? 
                 (data[18 /* X19 */] <0.23385783f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28090665f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6948071f ? 
                     (data[35 /* X36 */] <-0.9375f ? 
                         (data[22 /* X23 */] <0.1710133f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.29880384f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12041964f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.18519096f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[30 /* X31 */] <0.14540966f ? 
             (data[18 /* X19 */] <0.0873929f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.037044145f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13753904f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1111213f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.11249509f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[10 /* X11 */] <-0.25473315f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009112051f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29679248f ? 
                 (data[14 /* X15 */] <0.0915971f ? 
                     (data[22 /* X23 */] <0.08319566f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2791678f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14766553f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[18 /* X19 */] <-0.16663544f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.3394867f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0546875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43513852f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.018280594f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19999935f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11813037f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17377543f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.2032071f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.1626067f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (data[34 /* X35 */] <-0.6171875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16408765f ? 
                 (data[29 /* X30 */] <0.08363514f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (data[19 /* X20 */] <-0.4603156f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7864528f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16408765f ? 
                 (data[21 /* X22 */] <0.06312787f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18114156f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.09892847f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[19 /* X20 */] <0.05387706f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.39926964f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12172704f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.07509412f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.116851f ? 
                     (data[30 /* X31 */] <0.13900371f ? 
                         (data[26 /* X27 */] <0.06084885f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.06639819f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011455655f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.009124672f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12987962f ? 
                     (data[35 /* X36 */] <-0.08909226f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18576485f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1716404f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21757782f ? 
             (data[3 /* X4 */] <-0.25182915f ? 
                 (data[30 /* X31 */] <0.13415071f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.13645554f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.57421875f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.45311934f ? 
                 (data[22 /* X23 */] <0.14064457f ? 
                     (data[14 /* X15 */] <0.09146349f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[34 /* X35 */] <-0.6855469f ? 
             (data[11 /* X12 */] <-0.10576901f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35205248f ? 
                     (data[29 /* X30 */] <0.08726386f ? 
                         (data[13 /* X14 */] <0.15666352f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.7328275f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07910156f ? 
         (data[34 /* X35 */] <-0.7988281f ? 
            1.0f : 
             (data[23 /* X24 */] <0.026063744f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08063018f ? 
             (data[5 /* X6 */] <0.036401194f ? 
                1.0f : 
                0.0f) : 
             (data[29 /* X30 */] <0.09905606f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1420753f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.09458846f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35552666f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.012613457f ? 
             (data[6 /* X7 */] <0.09572965f ? 
                 (data[26 /* X27 */] <-0.11317166f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.067852736f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <0.05387706f ? 
             (data[6 /* X7 */] <0.12325969f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6621094f ? 
             (data[30 /* X31 */] <0.15045677f ? 
                 (data[26 /* X27 */] <0.06780967f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2934119f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.31394073f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.007826059f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13067073f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.19172555f ? 
            0.0f : 
             (data[26 /* X27 */] <0.18614362f ? 
                 (data[13 /* X14 */] <0.10770744f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.40144354f ? 
                     (data[15 /* X16 */] <0.047352325f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2466155f ? 
         (data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
             (data[6 /* X7 */] <0.0591153f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.032561574f ? 
                     (data[14 /* X15 */] <0.113419086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.07386674f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1753317f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.57421875f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09384892f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18406175f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.026145032f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03612791f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10505285f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37109375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31735104f ? 
             (data[21 /* X22 */] <0.09146627f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (data[8 /* X9 */] <0.35224175f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17065097f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15808985f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.074920624f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13735774f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.042807773f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <0.13515468f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19301154f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.016269874f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0546875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58323824f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.022868298f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.3978378f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16999961f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.091846325f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.36502445f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30386364f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20393938f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18817207f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.061970875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22057182f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093749695f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[11 /* X12 */] <-0.34616506f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12435217f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.117697425f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.6796875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.063384496f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.115193605f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35004252f ? 
                         (data[32 /* X33 */] <-0.023620605f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15529552f ? 
                                1.0f : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.041812804f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12563486f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10047032f ? 
         (data[24 /* X25 */] <-0.74673766f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.9375f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.076575264f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4281825f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.37109375f ? 
                 (data[15 /* X16 */] <0.08829357f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.37073126f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13502634f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2056196f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021389363f ? 
         (data[32 /* X33 */] <-0.9550781f ? 
             (data[11 /* X12 */] <-0.26697576f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12283937f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                    1.0f : 
                    0.0f))) : 
         (data[30 /* X31 */] <0.13104479f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.099935606f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26560345f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07052631f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
             (data[35 /* X36 */] <-0.125f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06264469f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24207191f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15204795f ? 
                    0.0f : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.0852325f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.5834717f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.32413393f ? 
                     (data[5 /* X6 */] <0.11311736f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.043877225f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0665036f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26464102f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.046875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[30 /* X31 */] <0.08833842f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.3203125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.49846944f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.125f ? 
             (data[15 /* X16 */] <0.06827494f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.137764f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16210397f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.5466806f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06831931f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34185943f ? 
         (data[19 /* X20 */] <-0.31392193f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.37109375f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.004667031f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.24157171f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27526546f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10576901f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70837307f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.12872835f ? 
         (data[13 /* X14 */] <0.1444245f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20127514f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32721066f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354277f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.10061157f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.13342257f ? 
             (data[8 /* X9 */] <-0.17468968f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.094102345f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14566466f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
         (data[13 /* X14 */] <0.10595901f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24646872f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.035744656f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.125f ? 
            0.0f : 
             (data[18 /* X19 */] <0.20087077f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.007974766f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15278621f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
        0.009433962f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22063856f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.054749615f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.733017f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.16285244f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.35396442f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030151514f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13191447f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.021484375f ? 
             (data[35 /* X36 */] <-0.3828125f ? 
                 (data[32 /* X33 */] <-0.2546463f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14615296f ? 
                 (data[10 /* X11 */] <-0.44751313f ? 
                     (data[27 /* X28 */] <-0.118704736f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25162497f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.0915971f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16507298f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7916877f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                     (data[33 /* X34 */] <-0.57478875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10588807f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26261306f ? 
             (data[19 /* X20 */] <-0.43611827f ? 
                 (data[28 /* X29 */] <0.09904448f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.9950083f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <1.0893694f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.049410883f ? 
             (data[34 /* X35 */] <-0.484375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058969397f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.012613457f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.114016436f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <0.11736693f ? 
                1.0f : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.14797576f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.7115391f ? 
                 (data[0 /* X1 */] <0.19542809f ? 
                     (data[31 /* X32 */] <0.09109536f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.062253706f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.021484375f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0126655195f ? 
                 (data[35 /* X36 */] <-0.25325492f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09138017f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.107693225f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.16686346f ? 
             (data[10 /* X11 */] <-0.23159955f ? 
                 (data[14 /* X15 */] <0.14433356f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0015543848f ? 
             (data[14 /* X15 */] <0.06977512f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.56986624f ? 
                 (data[10 /* X11 */] <-0.6634267f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.17685942f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.3905355f ? 
         (data[26 /* X27 */] <0.08347152f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36378038f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.043033104f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.08689575f ? 
                     (data[21 /* X22 */] <0.11066289f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1048715f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09267806f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22366117f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.08170186f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10627905f ? 
             (data[35 /* X36 */] <-0.859375f ? 
                 (data[0 /* X1 */] <0.020456988f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.025531832f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21834257f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17800392f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[8 /* X9 */] <-0.10545782f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22572656f ? 
         (data[26 /* X27 */] <-0.16885822f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1632552f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5253214f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07202503f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.09787202f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.07926563f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06327028f ? 
             (data[35 /* X36 */] <-0.125f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.032561574f ? 
                     (data[33 /* X34 */] <-0.5961547f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.09615156f ? 
                        1.0f : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.081958674f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.10432659f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.49902666f ? 
             (data[25 /* X26 */] <-0.22430001f ? 
                 (data[12 /* X13 */] <0.11865669f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.54712903f ? 
                 (data[26 /* X27 */] <0.34825304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41930473f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2704429f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22132578f ? 
                         (data[3 /* X4 */] <-0.28181705f ? 
                             (data[30 /* X31 */] <0.09479703f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16089307f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.056640625f ? 
         (data[15 /* X16 */] <0.038246986f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11961266f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18321484f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16890255f ? 
                 (data[17 /* X18 */] <-0.6995027f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.097765386f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026579723f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.22232376f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.31392193f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2265625f ? 
                 (data[13 /* X14 */] <0.11693841f ? 
                     (data[32 /* X33 */] <0.15625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22343825f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40224254f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0026958566f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07023006f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[7 /* X8 */] <0.08335946f ? 
                 (data[13 /* X14 */] <0.1362167f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12013922f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.10499796f ? 
                     (data[27 /* X28 */] <0.49464846f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07046447f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08283769f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.112467185f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09747862f ? 
         (data[11 /* X12 */] <-0.6431249f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1379279f ? 
                 (data[10 /* X11 */] <-0.8176507f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.5078125f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X1 */] <0.10444312f ? 
             (data[34 /* X35 */] <-0.4765625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11449726f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.4215999f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09197149f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1368695f ? 
                 (data[14 /* X15 */] <0.0934156f ? 
                     (data[6 /* X7 */] <0.0778293f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07023006f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09140008f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.11348797f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.11323853f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02728677f ? 
         (data[19 /* X20 */] <-0.31997123f ? 
             (data[17 /* X18 */] <-0.5549401f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14862473f ? 
                     (data[2 /* X3 */] <-0.49619788f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2852672f ? 
                 (data[27 /* X28 */] <-0.25926483f ? 
                     (data[35 /* X36 */] <-0.59375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[5 /* X6 */] <0.1612081f ? 
             (data[34 /* X35 */] <-0.6875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02721443f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.02363043f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48187026f ? 
                 (data[13 /* X14 */] <0.14267607f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.12364276f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.046787966f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20492955f ? 
             (data[4 /* X5 */] <0.07149531f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.10395722f ? 
             (data[35 /* X36 */] <-0.39453125f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.039602917f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.083633505f ? 
                         (data[22 /* X23 */] <0.12302448f ? 
                             (data[31 /* X32 */] <0.08154789f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.13707113f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13936125f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.484375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48346755f ? 
             (data[25 /* X26 */] <-0.5682949f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11206355f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.125f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1803918f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09560119f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19758968f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.25283483f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.03167837f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.21773572f ? 
                 (data[13 /* X14 */] <0.095468424f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (data[20 /* X21 */] <0.15155987f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26378196f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.14251506f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6713005f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.92327833f ? 
                 (data[35 /* X36 */] <-0.9375f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15830168f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2394793f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.040766124f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.14569743f ? 
             (data[27 /* X28 */] <0.047411755f ? 
                 (data[35 /* X36 */] <-0.109375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[18 /* X19 */] <-0.15519276f ? 
                 (data[11 /* X12 */] <-0.22455293f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16992188f ? 
         (data[13 /* X14 */] <0.116886705f ? 
             (data[33 /* X34 */] <-0.26081884f ? 
                 (data[15 /* X16 */] <0.041374896f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.47256395f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[28 /* X29 */] <0.07163595f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.049205232f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0660854f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18545303f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.27286264f ? 
             (data[25 /* X26 */] <-0.57065934f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11206355f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14146806f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.46875f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14228086f ? 
             (data[17 /* X18 */] <-0.38770095f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1953125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.23557852f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12801749f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40625f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.28698918f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.375f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.00591084f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[7 /* X8 */] <0.06624859f ? 
                 (data[14 /* X15 */] <0.12614858f ? 
                     (data[2 /* X3 */] <-0.23858243f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.515625f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.33679277f ? 
                     (data[30 /* X31 */] <0.11178239f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26532516f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.23743148f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10268196f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31867036f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26171967f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.14380376f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.63743436f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (data[11 /* X12 */] <-0.42676842f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39880252f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114125185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
         (data[18 /* X19 */] <0.17378384f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.088171884f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.107415035f ? 
                     (data[3 /* X4 */] <-0.15186952f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.03125f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08027026f ? 
             (data[22 /* X23 */] <0.11612727f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <-0.3217476f ? 
                 (data[24 /* X25 */] <-0.19262299f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17131338f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (data[11 /* X12 */] <-0.43076766f ? 
             (data[7 /* X8 */] <0.09886618f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.121134266f ? 
                 (data[26 /* X27 */] <-0.029641813f ? 
                     (data[25 /* X26 */] <-0.45609435f ? 
                         (data[23 /* X24 */] <0.051063664f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}



