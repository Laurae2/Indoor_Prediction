/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:46:54.781+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_02

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_02 > h2o_nn_32x6_Tanh_02.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_02.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_02", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_02 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_02.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_02_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_02() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6198741736871774992L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_02_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_02_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_02_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_02_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_02_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_02_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.012129529483471405;
      sa[1] = 8.466970153594056E-4;
      sa[2] = -0.04260132680059162;
      sa[3] = -0.07409595591565574;
      sa[4] = -0.027106170499601505;
      sa[5] = 0.019725960232141085;
      sa[6] = 0.03755253656328169;
      sa[7] = 0.010470141031809611;
      sa[8] = -0.02347420969074444;
      sa[9] = -5.464306575906506E-4;
      sa[10] = 0.002440210470711595;
      sa[11] = 0.00277038913667478;
      sa[12] = 0.01548066758271819;
      sa[13] = -0.0067729303436671415;
      sa[14] = -0.0076878630564517466;
      sa[15] = 0.03839915177885587;
      sa[16] = 0.028745272962783605;
      sa[17] = 0.006726630411928344;
      sa[18] = -0.0440628370376895;
      sa[19] = 0.002835637233678541;
      sa[20] = 0.06160113759641541;
      sa[21] = 0.0032615841231659337;
      sa[22] = -0.025526938891673828;
      sa[23] = 0.028905878511063743;
      sa[24] = -0.049434568656237035;
      sa[25] = 0.03820614599747586;
      sa[26] = -0.020593937514840375;
      sa[27] = 0.04313205326519001;
      sa[28] = -0.01586063350381183;
      sa[29] = 4.7844161582021906E-4;
      sa[30] = 0.054997663218705806;
      sa[31] = 0.020996095620528087;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_02_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.042313084778361564;
      sa[1] = -0.0061575513143286706;
      sa[2] = -0.03560428610184808;
      sa[3] = 0.003121534737031468;
      sa[4] = -0.07519139304152746;
    }
  }
}
class h2o_nn_32x6_Tanh_02_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_02_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_02_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.049867224f;
      sa[1] = 0.21616034f;
      sa[2] = 0.1384047f;
      sa[3] = 0.17036404f;
      sa[4] = -0.14928621f;
      sa[5] = -0.16139235f;
      sa[6] = -0.026062617f;
      sa[7] = 0.24041873f;
      sa[8] = 0.12092359f;
      sa[9] = -0.17366423f;
      sa[10] = -0.15542123f;
      sa[11] = -0.20017058f;
      sa[12] = 0.08420138f;
      sa[13] = -0.24461102f;
      sa[14] = -0.15679303f;
      sa[15] = -0.02012012f;
      sa[16] = 0.071763694f;
      sa[17] = 0.11922496f;
      sa[18] = -0.21640971f;
      sa[19] = 0.15262032f;
      sa[20] = 0.23031652f;
      sa[21] = -0.28183797f;
      sa[22] = 0.24299324f;
      sa[23] = -0.18518129f;
      sa[24] = 0.23023508f;
      sa[25] = 0.16224335f;
      sa[26] = -0.26648045f;
      sa[27] = 0.28414148f;
      sa[28] = 0.22977723f;
      sa[29] = -0.2565146f;
      sa[30] = -0.15542877f;
      sa[31] = 0.13989833f;
      sa[32] = 0.19072862f;
      sa[33] = -0.27109638f;
      sa[34] = 0.11162072f;
      sa[35] = -0.057913493f;
      sa[36] = 0.07511171f;
      sa[37] = 0.25274646f;
      sa[38] = -0.08253085f;
      sa[39] = 0.22076324f;
      sa[40] = 0.023508674f;
      sa[41] = -0.069756f;
      sa[42] = -0.12755236f;
      sa[43] = 0.039476775f;
      sa[44] = 0.22599415f;
      sa[45] = -0.2391826f;
      sa[46] = 0.045203295f;
      sa[47] = 0.043562736f;
      sa[48] = 0.22331804f;
      sa[49] = 0.25484714f;
      sa[50] = 0.20476186f;
      sa[51] = -0.27039844f;
      sa[52] = -0.08697837f;
      sa[53] = 0.21599828f;
      sa[54] = 0.21287909f;
      sa[55] = -0.004060656f;
      sa[56] = -0.17397241f;
      sa[57] = -0.2941246f;
      sa[58] = 0.25854713f;
      sa[59] = -0.19367139f;
      sa[60] = -0.26056075f;
      sa[61] = 0.18308257f;
      sa[62] = 0.11874648f;
      sa[63] = -0.043861747f;
      sa[64] = 0.11811435f;
      sa[65] = 0.09731658f;
      sa[66] = 0.014124354f;
      sa[67] = 0.11953253f;
      sa[68] = -0.057218343f;
      sa[69] = 0.1708883f;
      sa[70] = -0.13854864f;
      sa[71] = 0.26029286f;
      sa[72] = -0.16184543f;
      sa[73] = 0.19655389f;
      sa[74] = -0.18093702f;
      sa[75] = 0.07046189f;
      sa[76] = -0.1869947f;
      sa[77] = -0.061262853f;
      sa[78] = -0.06650707f;
      sa[79] = 0.12108452f;
      sa[80] = -0.23391448f;
      sa[81] = -0.11972394f;
      sa[82] = -0.023217497f;
      sa[83] = 0.09504487f;
      sa[84] = -0.02862429f;
      sa[85] = -0.17462094f;
      sa[86] = 0.13146448f;
      sa[87] = 0.22765705f;
      sa[88] = 0.23900549f;
      sa[89] = 0.0551203f;
      sa[90] = -0.1026967f;
      sa[91] = 0.13692431f;
      sa[92] = 0.0887764f;
      sa[93] = -0.20500158f;
      sa[94] = -0.17991133f;
      sa[95] = -0.23728551f;
      sa[96] = 0.13293532f;
      sa[97] = 0.037879523f;
      sa[98] = 0.21071248f;
      sa[99] = -0.08376177f;
      sa[100] = -0.05633801f;
      sa[101] = -0.17899351f;
      sa[102] = -0.24381298f;
      sa[103] = -0.078037135f;
      sa[104] = 0.024858318f;
      sa[105] = -0.10445283f;
      sa[106] = -0.22844784f;
      sa[107] = 0.10960268f;
      sa[108] = 0.1357706f;
      sa[109] = -0.1989685f;
      sa[110] = -0.1551248f;
      sa[111] = 0.13548636f;
      sa[112] = 0.10321152f;
      sa[113] = 0.017447863f;
      sa[114] = -0.16740257f;
      sa[115] = -0.07088798f;
      sa[116] = -0.2544289f;
      sa[117] = -3.3749337E-4f;
      sa[118] = -0.26082075f;
      sa[119] = -0.13010891f;
      sa[120] = 0.18429765f;
      sa[121] = 0.19860034f;
      sa[122] = 0.26700664f;
      sa[123] = 0.23482357f;
      sa[124] = 0.27081087f;
      sa[125] = 0.2746985f;
      sa[126] = -0.26300445f;
      sa[127] = -0.19470575f;
      sa[128] = 0.04808764f;
      sa[129] = 0.13092053f;
      sa[130] = -0.13492467f;
      sa[131] = 0.28085887f;
      sa[132] = 0.18774372f;
      sa[133] = -0.296608f;
      sa[134] = 0.08240366f;
      sa[135] = -0.22724214f;
      sa[136] = -0.2805146f;
      sa[137] = -0.040950842f;
      sa[138] = 0.09379922f;
      sa[139] = -0.09480632f;
      sa[140] = -0.06822207f;
      sa[141] = -0.1057196f;
      sa[142] = 0.15356135f;
      sa[143] = -0.28433427f;
      sa[144] = 0.2451623f;
      sa[145] = -0.13069925f;
      sa[146] = -0.24398504f;
      sa[147] = 0.19141458f;
      sa[148] = 0.1617154f;
      sa[149] = 0.17970851f;
      sa[150] = 0.27824968f;
      sa[151] = -0.23825103f;
      sa[152] = 0.019597612f;
      sa[153] = 0.27627248f;
      sa[154] = 0.22781023f;
      sa[155] = -0.14845529f;
      sa[156] = 0.122973666f;
      sa[157] = -0.18208359f;
      sa[158] = 0.08265577f;
      sa[159] = 0.08423256f;
      sa[160] = 0.07805284f;
      sa[161] = 0.21641998f;
      sa[162] = -0.16133296f;
      sa[163] = -0.07576538f;
      sa[164] = 0.21806863f;
      sa[165] = -0.036612682f;
      sa[166] = -0.06753466f;
      sa[167] = -0.09088489f;
      sa[168] = 0.17004666f;
      sa[169] = 0.28944677f;
      sa[170] = 0.014450714f;
      sa[171] = -0.039584424f;
      sa[172] = -0.06669713f;
      sa[173] = -0.14770006f;
      sa[174] = -0.021065151f;
      sa[175] = -0.23648341f;
      sa[176] = -0.02805613f;
      sa[177] = -0.014701896f;
      sa[178] = -0.027604062f;
      sa[179] = 0.10061517f;
      sa[180] = -0.023632249f;
      sa[181] = -0.25728935f;
      sa[182] = -0.10820639f;
      sa[183] = 0.043407872f;
      sa[184] = 0.27078518f;
      sa[185] = 0.1600114f;
      sa[186] = -0.29015815f;
      sa[187] = 0.0788734f;
      sa[188] = 0.0018169833f;
      sa[189] = 0.23183542f;
      sa[190] = 0.064130954f;
      sa[191] = -0.03588575f;
      sa[192] = -0.11727743f;
      sa[193] = 0.22084554f;
      sa[194] = 0.08346341f;
      sa[195] = 0.2637973f;
      sa[196] = 0.25797054f;
      sa[197] = -0.018335158f;
      sa[198] = 0.10036582f;
      sa[199] = -0.053850085f;
      sa[200] = 0.031899918f;
      sa[201] = -0.25829414f;
      sa[202] = 0.13211244f;
      sa[203] = -0.0063407337f;
      sa[204] = -0.16315092f;
      sa[205] = 0.23291314f;
      sa[206] = 0.20843895f;
      sa[207] = 0.16408478f;
      sa[208] = -0.24372895f;
      sa[209] = -0.07133369f;
      sa[210] = -0.2699678f;
      sa[211] = -0.24042164f;
      sa[212] = 0.17630383f;
      sa[213] = -0.28238645f;
      sa[214] = -0.052727003f;
      sa[215] = 0.0766764f;
      sa[216] = 0.10558881f;
      sa[217] = 0.16508059f;
      sa[218] = -0.17363359f;
      sa[219] = 0.22062074f;
      sa[220] = -0.20838383f;
      sa[221] = 0.03996924f;
      sa[222] = 0.21861087f;
      sa[223] = 0.07139533f;
      sa[224] = 0.10845119f;
      sa[225] = 0.29401565f;
      sa[226] = -0.20064269f;
      sa[227] = 0.27573115f;
      sa[228] = 0.124195434f;
      sa[229] = 0.08755844f;
      sa[230] = 0.25779834f;
      sa[231] = -0.22651157f;
      sa[232] = -0.24138434f;
      sa[233] = 0.08644992f;
      sa[234] = 0.1508466f;
      sa[235] = -0.27526513f;
      sa[236] = -0.021181226f;
      sa[237] = -0.20397481f;
      sa[238] = -0.19762944f;
      sa[239] = 0.15257356f;
      sa[240] = -0.0036642416f;
      sa[241] = -0.19968545f;
      sa[242] = -0.06750583f;
      sa[243] = -0.22469066f;
      sa[244] = -0.18880683f;
      sa[245] = -0.113564156f;
      sa[246] = -0.25063634f;
      sa[247] = -0.04477784f;
      sa[248] = 0.24143757f;
      sa[249] = 0.2246453f;
      sa[250] = -0.20629579f;
      sa[251] = -0.104233205f;
      sa[252] = -0.26115495f;
      sa[253] = -0.2635606f;
      sa[254] = -0.2550497f;
      sa[255] = 0.14637755f;
      sa[256] = -0.17532353f;
      sa[257] = 0.2540166f;
      sa[258] = -0.25252205f;
      sa[259] = -0.13472699f;
      sa[260] = -0.20903529f;
      sa[261] = -0.100482605f;
      sa[262] = -0.1386787f;
      sa[263] = 0.23054183f;
      sa[264] = -0.15044877f;
      sa[265] = 0.047631465f;
      sa[266] = -0.2762688f;
      sa[267] = -0.22705692f;
      sa[268] = 0.1347649f;
      sa[269] = -0.1554101f;
      sa[270] = -0.019380642f;
      sa[271] = 0.19430615f;
      sa[272] = -0.08134222f;
      sa[273] = -0.115426175f;
      sa[274] = 0.10791415f;
      sa[275] = 0.012561296f;
      sa[276] = 0.0793728f;
      sa[277] = -0.22570872f;
      sa[278] = -0.11234002f;
      sa[279] = 0.22307102f;
      sa[280] = -0.15909147f;
      sa[281] = 0.27361876f;
      sa[282] = -0.09460003f;
      sa[283] = -0.03499508f;
      sa[284] = 0.018798973f;
      sa[285] = -0.15270726f;
      sa[286] = 0.23417723f;
      sa[287] = 0.13838018f;
      sa[288] = -0.19184169f;
      sa[289] = -0.14384234f;
      sa[290] = -0.05409456f;
      sa[291] = 0.052899215f;
      sa[292] = 0.10672668f;
      sa[293] = -0.08996039f;
      sa[294] = 0.08351022f;
      sa[295] = 0.11893567f;
      sa[296] = 0.21476324f;
      sa[297] = 0.2031527f;
      sa[298] = -0.017447516f;
      sa[299] = -0.01666824f;
      sa[300] = -0.0050985115f;
      sa[301] = -0.052925866f;
      sa[302] = 0.17231049f;
      sa[303] = 0.036241535f;
      sa[304] = -0.18093398f;
      sa[305] = -0.013914248f;
      sa[306] = 0.20225507f;
      sa[307] = -0.16682921f;
      sa[308] = 0.06638327f;
      sa[309] = 0.12302527f;
      sa[310] = 0.27062383f;
      sa[311] = 0.28455806f;
      sa[312] = -0.1603124f;
      sa[313] = -0.14755733f;
      sa[314] = -0.15307073f;
      sa[315] = -0.043679554f;
      sa[316] = -0.039127838f;
      sa[317] = -0.10714616f;
      sa[318] = 0.07454798f;
      sa[319] = 0.25487107f;
      sa[320] = -0.036517847f;
      sa[321] = 0.14940129f;
      sa[322] = 0.17014483f;
      sa[323] = -0.21302064f;
      sa[324] = -0.009811142f;
      sa[325] = 0.27082056f;
      sa[326] = -0.27332428f;
      sa[327] = 0.042209465f;
      sa[328] = -0.04930113f;
      sa[329] = 0.2368099f;
      sa[330] = -0.16730843f;
      sa[331] = 0.0018128844f;
      sa[332] = -0.25782308f;
      sa[333] = 0.11032616f;
      sa[334] = -0.09056284f;
      sa[335] = 0.2253976f;
      sa[336] = -0.15042408f;
      sa[337] = -0.14795347f;
      sa[338] = 0.26026282f;
      sa[339] = -0.21307415f;
      sa[340] = -0.31203318f;
      sa[341] = -0.26469576f;
      sa[342] = 0.16344512f;
      sa[343] = -0.103472896f;
      sa[344] = -0.1637088f;
      sa[345] = 0.19541799f;
      sa[346] = 0.19917563f;
      sa[347] = -0.1784137f;
      sa[348] = 0.25072944f;
      sa[349] = -0.27682608f;
      sa[350] = -0.23538923f;
      sa[351] = 0.09425963f;
      sa[352] = 0.18785837f;
      sa[353] = -0.029781803f;
      sa[354] = 0.08843105f;
      sa[355] = 0.109063484f;
      sa[356] = -0.11371982f;
      sa[357] = 0.2214358f;
      sa[358] = -0.25733367f;
      sa[359] = 0.03367345f;
      sa[360] = 0.07158736f;
      sa[361] = -0.041919425f;
      sa[362] = -0.15547593f;
      sa[363] = 0.2352689f;
      sa[364] = -0.099569336f;
      sa[365] = -0.1904367f;
      sa[366] = 0.01908826f;
      sa[367] = -0.25615263f;
      sa[368] = -0.1953801f;
      sa[369] = 0.24699926f;
      sa[370] = -0.2177082f;
      sa[371] = 0.10510111f;
      sa[372] = -0.0044759656f;
      sa[373] = 0.2876068f;
      sa[374] = -0.11358468f;
      sa[375] = -0.2577243f;
      sa[376] = -0.2891745f;
      sa[377] = -0.2215107f;
      sa[378] = 0.30391654f;
      sa[379] = 0.05998493f;
      sa[380] = -0.1130336f;
      sa[381] = -0.089301415f;
      sa[382] = -0.025643645f;
      sa[383] = -0.10096876f;
      sa[384] = -0.13646069f;
      sa[385] = 0.088216744f;
      sa[386] = -0.22254388f;
      sa[387] = -0.1997538f;
      sa[388] = 0.08082433f;
      sa[389] = -0.0016654625f;
      sa[390] = 0.005401754f;
      sa[391] = -0.08892395f;
      sa[392] = 0.28374526f;
      sa[393] = 0.23274237f;
      sa[394] = -0.06676019f;
      sa[395] = 0.24494164f;
      sa[396] = 0.26692313f;
      sa[397] = -0.27432472f;
      sa[398] = 0.12670198f;
      sa[399] = 0.1378238f;
      sa[400] = 0.18500634f;
      sa[401] = 0.25298852f;
      sa[402] = -0.10498701f;
      sa[403] = 0.09030761f;
      sa[404] = 0.22560525f;
      sa[405] = -0.22884959f;
      sa[406] = -0.057377726f;
      sa[407] = 0.17420156f;
      sa[408] = -0.19853331f;
      sa[409] = -0.22138092f;
      sa[410] = -0.09384742f;
      sa[411] = 0.17477788f;
      sa[412] = -0.14516068f;
      sa[413] = 0.098526366f;
      sa[414] = 0.15512438f;
      sa[415] = 0.23874475f;
      sa[416] = -0.17781258f;
      sa[417] = 0.021025885f;
      sa[418] = 0.006161996f;
      sa[419] = 0.25952584f;
      sa[420] = 0.19577822f;
      sa[421] = 0.2599798f;
      sa[422] = 0.2406784f;
      sa[423] = -0.07639056f;
      sa[424] = 0.096178904f;
      sa[425] = -0.07092167f;
      sa[426] = -0.26849937f;
      sa[427] = 0.18741646f;
      sa[428] = 0.014014335f;
      sa[429] = -0.08589714f;
      sa[430] = 0.11156798f;
      sa[431] = -0.082664296f;
      sa[432] = -0.052834485f;
      sa[433] = 0.11864324f;
      sa[434] = 0.23333363f;
      sa[435] = 0.06366194f;
      sa[436] = -0.23618636f;
      sa[437] = -0.23122627f;
      sa[438] = 0.01161161f;
      sa[439] = -0.0046115434f;
      sa[440] = 0.27675426f;
      sa[441] = -0.30476958f;
      sa[442] = 0.08294478f;
      sa[443] = 0.033437204f;
      sa[444] = -0.20853543f;
      sa[445] = 0.061494965f;
      sa[446] = 0.21918367f;
      sa[447] = 0.06928833f;
      sa[448] = 0.17324498f;
      sa[449] = 0.22498862f;
      sa[450] = -0.08165717f;
      sa[451] = 0.07394208f;
      sa[452] = 0.17228988f;
      sa[453] = -0.038292773f;
      sa[454] = -0.15027662f;
      sa[455] = -0.05170558f;
      sa[456] = -0.059890028f;
      sa[457] = 0.09078366f;
      sa[458] = -0.19360398f;
      sa[459] = 0.2603809f;
      sa[460] = 0.2137896f;
      sa[461] = 0.28135312f;
      sa[462] = 0.058199733f;
      sa[463] = 0.21542914f;
      sa[464] = -0.22453685f;
      sa[465] = 0.24559346f;
      sa[466] = -0.036189985f;
      sa[467] = 0.1054369f;
      sa[468] = 0.09695476f;
      sa[469] = 0.27975705f;
      sa[470] = 0.18034436f;
      sa[471] = 0.12305807f;
      sa[472] = 0.018131923f;
      sa[473] = -0.092511944f;
      sa[474] = 0.0050576483f;
      sa[475] = 0.10820631f;
      sa[476] = 0.23911259f;
      sa[477] = -0.18009426f;
      sa[478] = 0.08098911f;
      sa[479] = -0.11987668f;
      sa[480] = -0.28402522f;
      sa[481] = -0.18885596f;
      sa[482] = -0.22993748f;
      sa[483] = 0.2025964f;
      sa[484] = 0.19748929f;
      sa[485] = 0.10749145f;
      sa[486] = -0.007251034f;
      sa[487] = -0.20780534f;
      sa[488] = -0.19752593f;
      sa[489] = 0.07151763f;
      sa[490] = -0.0022707307f;
      sa[491] = -0.23956104f;
      sa[492] = 0.19068687f;
      sa[493] = 0.23906961f;
      sa[494] = -0.21296571f;
      sa[495] = 0.12746662f;
      sa[496] = -0.01025658f;
      sa[497] = 0.054725185f;
      sa[498] = 0.16421893f;
      sa[499] = 0.15096426f;
      sa[500] = -0.0068744277f;
      sa[501] = 0.13174902f;
      sa[502] = 0.20692158f;
      sa[503] = 0.004265033f;
      sa[504] = -0.17423807f;
      sa[505] = -0.21694703f;
      sa[506] = 0.1824142f;
      sa[507] = -0.09917119f;
      sa[508] = 0.06530491f;
      sa[509] = 0.19518763f;
      sa[510] = 0.14125279f;
      sa[511] = -0.01897279f;
      sa[512] = 0.05655928f;
      sa[513] = -0.08355204f;
      sa[514] = 0.2548433f;
      sa[515] = -0.22670148f;
      sa[516] = 0.006844209f;
      sa[517] = 0.07380572f;
      sa[518] = 0.11995956f;
      sa[519] = -0.1007239f;
      sa[520] = 0.20771903f;
      sa[521] = 0.1442406f;
      sa[522] = 0.09751632f;
      sa[523] = 0.22386535f;
      sa[524] = 0.16429578f;
      sa[525] = 0.13379215f;
      sa[526] = -0.024873095f;
      sa[527] = -0.105272904f;
      sa[528] = 0.0045349617f;
      sa[529] = 0.11983559f;
      sa[530] = -0.15989417f;
      sa[531] = 0.06669712f;
      sa[532] = 0.117028885f;
      sa[533] = 0.09243686f;
      sa[534] = 0.10451387f;
      sa[535] = -0.111743756f;
      sa[536] = 0.06773369f;
      sa[537] = -0.19608179f;
      sa[538] = 0.1834177f;
      sa[539] = 0.269454f;
      sa[540] = -0.21656159f;
      sa[541] = -0.14196575f;
      sa[542] = -0.08000662f;
      sa[543] = -0.32817444f;
      sa[544] = 0.14998765f;
      sa[545] = 0.09605338f;
      sa[546] = 0.06416509f;
      sa[547] = 0.15928887f;
      sa[548] = 0.08010005f;
      sa[549] = 0.15674444f;
      sa[550] = -0.008107148f;
      sa[551] = -0.14274295f;
      sa[552] = 0.044234294f;
      sa[553] = -0.061371658f;
      sa[554] = -0.15684746f;
      sa[555] = -0.15195042f;
      sa[556] = -0.16890712f;
      sa[557] = -0.23575237f;
      sa[558] = -0.21742252f;
      sa[559] = 0.15468708f;
      sa[560] = -0.27217013f;
      sa[561] = -0.07236972f;
      sa[562] = 0.18728897f;
      sa[563] = -0.06809318f;
      sa[564] = 0.24770732f;
      sa[565] = 0.01278592f;
      sa[566] = 0.23887955f;
      sa[567] = 0.066374995f;
      sa[568] = -0.050081097f;
      sa[569] = 0.047733355f;
      sa[570] = -0.010372486f;
      sa[571] = -0.04681118f;
      sa[572] = -0.18711458f;
      sa[573] = 0.05332433f;
      sa[574] = 0.30338612f;
      sa[575] = -0.14701825f;
      sa[576] = -0.06259364f;
      sa[577] = 0.04030935f;
      sa[578] = 0.11825821f;
      sa[579] = -0.015837185f;
      sa[580] = 0.11722864f;
      sa[581] = -0.110066056f;
      sa[582] = 0.118857734f;
      sa[583] = 0.055167995f;
      sa[584] = 0.14460948f;
      sa[585] = 0.21301353f;
      sa[586] = -0.1765676f;
      sa[587] = -0.08008965f;
      sa[588] = 0.09936625f;
      sa[589] = 0.14826745f;
      sa[590] = 0.00753214f;
      sa[591] = 0.05993783f;
      sa[592] = -0.3016021f;
      sa[593] = -0.16049932f;
      sa[594] = -0.09057113f;
      sa[595] = -0.040728416f;
      sa[596] = 0.27891105f;
      sa[597] = 0.006717106f;
      sa[598] = 0.24530515f;
      sa[599] = 0.045018125f;
      sa[600] = -0.28919676f;
      sa[601] = 0.23684278f;
      sa[602] = -0.08677416f;
      sa[603] = 0.26078227f;
      sa[604] = 0.24275427f;
      sa[605] = 0.18933149f;
      sa[606] = 0.22363897f;
      sa[607] = 0.07758046f;
      sa[608] = -0.030829508f;
      sa[609] = 0.042861074f;
      sa[610] = 0.15258478f;
      sa[611] = -0.04053511f;
      sa[612] = -0.11335584f;
      sa[613] = 0.07287902f;
      sa[614] = 0.061060693f;
      sa[615] = 0.060688894f;
      sa[616] = 0.06243561f;
      sa[617] = -0.281976f;
      sa[618] = -0.13969441f;
      sa[619] = -0.15297137f;
      sa[620] = -0.08208174f;
      sa[621] = -0.23109652f;
      sa[622] = -0.3075365f;
      sa[623] = -0.29993472f;
      sa[624] = -0.05167106f;
      sa[625] = 0.23151246f;
      sa[626] = -0.004978672f;
      sa[627] = 0.2485901f;
      sa[628] = -0.29385576f;
      sa[629] = -0.07159703f;
      sa[630] = -0.11373365f;
      sa[631] = 0.17293265f;
      sa[632] = 0.086083494f;
      sa[633] = -0.15566988f;
      sa[634] = -0.20309137f;
      sa[635] = 0.15393881f;
      sa[636] = -0.19142392f;
      sa[637] = -0.041555263f;
      sa[638] = -0.08135374f;
      sa[639] = -0.09094586f;
      sa[640] = -0.14361195f;
      sa[641] = -0.28340948f;
      sa[642] = 0.17821854f;
      sa[643] = -0.30429837f;
      sa[644] = 0.0054884753f;
      sa[645] = -0.1421853f;
      sa[646] = 0.25056624f;
      sa[647] = -0.27906036f;
      sa[648] = -0.06736149f;
      sa[649] = -0.05628033f;
      sa[650] = 0.059254285f;
      sa[651] = -0.13555746f;
      sa[652] = 0.07425426f;
      sa[653] = -0.15551741f;
      sa[654] = -0.16233397f;
      sa[655] = -0.16594104f;
      sa[656] = 0.057733085f;
      sa[657] = 0.11167536f;
      sa[658] = -0.24428537f;
      sa[659] = -0.24987406f;
      sa[660] = -0.25112998f;
      sa[661] = -0.122155145f;
      sa[662] = -0.2924146f;
      sa[663] = 0.13829885f;
      sa[664] = -0.16828464f;
      sa[665] = 0.25573766f;
      sa[666] = -9.74991E-4f;
      sa[667] = -0.24346776f;
      sa[668] = 0.23571198f;
      sa[669] = -0.13803612f;
      sa[670] = 0.112631515f;
      sa[671] = 0.034849763f;
      sa[672] = -0.2521479f;
      sa[673] = 0.15385585f;
      sa[674] = 0.2508652f;
      sa[675] = -0.23809855f;
      sa[676] = -0.108093545f;
      sa[677] = -0.20877011f;
      sa[678] = 0.17871737f;
      sa[679] = -0.07814337f;
      sa[680] = 0.08155763f;
      sa[681] = 0.10891813f;
      sa[682] = 0.043040548f;
      sa[683] = -0.1111154f;
      sa[684] = -0.03315928f;
      sa[685] = 0.03005875f;
      sa[686] = -0.14843194f;
      sa[687] = -0.1952761f;
      sa[688] = -0.29580027f;
      sa[689] = -0.23994146f;
      sa[690] = -0.03818204f;
      sa[691] = 0.0828065f;
      sa[692] = -0.14987542f;
      sa[693] = -0.1748586f;
      sa[694] = 0.27051932f;
      sa[695] = -0.002789152f;
      sa[696] = -0.08825322f;
      sa[697] = -0.13654566f;
      sa[698] = -0.16518438f;
      sa[699] = 0.28671616f;
      sa[700] = 0.17447725f;
      sa[701] = 0.11326827f;
      sa[702] = 0.18599337f;
      sa[703] = -0.037542604f;
      sa[704] = -0.27335653f;
      sa[705] = -0.06596672f;
      sa[706] = -0.14957027f;
      sa[707] = 0.00963826f;
      sa[708] = 0.015145566f;
      sa[709] = -0.26719022f;
      sa[710] = 0.25900328f;
      sa[711] = -0.1312805f;
      sa[712] = 0.023267647f;
      sa[713] = 0.11464965f;
      sa[714] = 0.16845699f;
      sa[715] = 0.06356434f;
      sa[716] = 0.055995993f;
      sa[717] = 0.19443096f;
      sa[718] = -0.1000942f;
      sa[719] = 0.04143876f;
      sa[720] = -0.23539613f;
      sa[721] = 0.243784f;
      sa[722] = -0.13428879f;
      sa[723] = -0.049733747f;
      sa[724] = 0.061788414f;
      sa[725] = -0.28236523f;
      sa[726] = -0.21267672f;
      sa[727] = -0.26972106f;
      sa[728] = -0.106186695f;
      sa[729] = -0.018728247f;
      sa[730] = 0.12224705f;
      sa[731] = -0.30588692f;
      sa[732] = 0.17297462f;
      sa[733] = 0.21130985f;
      sa[734] = -0.13743195f;
      sa[735] = 0.2907617f;
      sa[736] = 0.014937277f;
      sa[737] = 0.18247415f;
      sa[738] = -0.20926909f;
      sa[739] = -0.25762638f;
      sa[740] = -0.2473898f;
      sa[741] = -0.26863292f;
      sa[742] = 0.093532436f;
      sa[743] = 0.06305255f;
      sa[744] = 0.049622286f;
      sa[745] = -0.21172181f;
      sa[746] = 0.090108186f;
      sa[747] = -0.08996465f;
      sa[748] = -0.12798382f;
      sa[749] = -0.15859132f;
      sa[750] = 0.19740129f;
      sa[751] = 0.26430467f;
      sa[752] = -0.11105321f;
      sa[753] = 0.114930935f;
      sa[754] = 0.048540168f;
      sa[755] = 0.23473442f;
      sa[756] = -0.16835092f;
      sa[757] = 0.24246384f;
      sa[758] = -0.14840871f;
      sa[759] = -0.18283412f;
      sa[760] = -0.10991031f;
      sa[761] = 0.032689027f;
      sa[762] = -0.11218127f;
      sa[763] = 0.13953327f;
      sa[764] = 0.087576434f;
      sa[765] = -0.040650062f;
      sa[766] = -0.20509486f;
      sa[767] = 0.13325731f;
      sa[768] = -0.16950586f;
      sa[769] = -0.27452397f;
      sa[770] = -0.011069248f;
      sa[771] = 0.019261299f;
      sa[772] = 0.0563892f;
      sa[773] = -0.24350475f;
      sa[774] = -0.028446322f;
      sa[775] = 0.30019307f;
      sa[776] = -0.058929022f;
      sa[777] = 0.048934177f;
      sa[778] = 0.15687251f;
      sa[779] = -0.13125f;
      sa[780] = 0.0038469632f;
      sa[781] = -0.0527777f;
      sa[782] = 0.12295787f;
      sa[783] = -0.14997284f;
      sa[784] = -0.1390506f;
      sa[785] = -0.122976676f;
      sa[786] = -0.095370635f;
      sa[787] = -0.23266429f;
      sa[788] = -0.31645933f;
      sa[789] = 0.14732067f;
      sa[790] = -0.10650209f;
      sa[791] = -0.06625309f;
      sa[792] = 0.1774266f;
      sa[793] = -0.14998795f;
      sa[794] = -0.21487139f;
      sa[795] = -0.050081432f;
      sa[796] = 0.2213645f;
      sa[797] = -0.20692682f;
      sa[798] = -0.27104372f;
      sa[799] = -0.19237787f;
      sa[800] = 0.18209824f;
      sa[801] = 0.026112672f;
      sa[802] = 0.24150708f;
      sa[803] = 0.043355234f;
      sa[804] = 0.21520407f;
      sa[805] = 0.274327f;
      sa[806] = 0.2715897f;
      sa[807] = 0.19280787f;
      sa[808] = -0.03996236f;
      sa[809] = -0.24715434f;
      sa[810] = 0.09561087f;
      sa[811] = 0.21282467f;
      sa[812] = 0.1512483f;
      sa[813] = -0.29144734f;
      sa[814] = 0.072545506f;
      sa[815] = -0.17100134f;
      sa[816] = -0.10116461f;
      sa[817] = -0.16433601f;
      sa[818] = 0.0051954514f;
      sa[819] = -0.051989682f;
      sa[820] = -0.28613314f;
      sa[821] = -0.20150276f;
      sa[822] = -0.2741778f;
      sa[823] = 0.06129456f;
      sa[824] = 0.09615227f;
      sa[825] = 0.29970717f;
      sa[826] = -0.23857805f;
      sa[827] = -0.2627269f;
      sa[828] = 0.13274315f;
      sa[829] = -0.08372613f;
      sa[830] = 0.15129445f;
      sa[831] = 0.06575443f;
      sa[832] = 0.14538525f;
      sa[833] = 0.05744982f;
      sa[834] = 0.16348173f;
      sa[835] = -0.09812387f;
      sa[836] = 0.20274076f;
      sa[837] = -0.16309422f;
      sa[838] = 0.1513756f;
      sa[839] = -0.30107805f;
      sa[840] = 0.18543553f;
      sa[841] = 0.09086601f;
      sa[842] = 0.13777395f;
      sa[843] = 0.022229375f;
      sa[844] = 0.03615577f;
      sa[845] = 0.12224743f;
      sa[846] = -0.2620662f;
      sa[847] = -0.007387553f;
      sa[848] = 0.21857335f;
      sa[849] = 0.25938976f;
      sa[850] = -0.012208854f;
      sa[851] = 0.12014234f;
      sa[852] = 0.25171387f;
      sa[853] = 0.14284419f;
      sa[854] = 0.22708115f;
      sa[855] = 0.23387425f;
      sa[856] = 0.114072174f;
      sa[857] = -0.1201073f;
      sa[858] = 0.14781679f;
      sa[859] = 0.095481336f;
      sa[860] = 0.2018055f;
      sa[861] = -0.2945336f;
      sa[862] = -0.016540144f;
      sa[863] = 0.13562103f;
      sa[864] = -0.18215863f;
      sa[865] = 0.22086444f;
      sa[866] = -0.16299443f;
      sa[867] = 0.08518938f;
      sa[868] = -0.20035443f;
      sa[869] = 0.19705236f;
      sa[870] = -0.031811517f;
      sa[871] = 0.13699879f;
      sa[872] = 0.25428858f;
      sa[873] = -0.07332784f;
      sa[874] = -0.021881498f;
      sa[875] = -0.16723005f;
      sa[876] = -0.23250969f;
      sa[877] = -0.20666097f;
      sa[878] = 0.04364621f;
      sa[879] = 0.18207243f;
      sa[880] = -0.12078092f;
      sa[881] = -0.12108914f;
      sa[882] = 0.18537273f;
      sa[883] = 0.14806154f;
      sa[884] = -0.14421313f;
      sa[885] = -0.14985473f;
      sa[886] = 0.08747389f;
      sa[887] = -0.079350546f;
      sa[888] = -0.100389585f;
      sa[889] = 0.035805993f;
      sa[890] = -0.2948083f;
      sa[891] = 0.26710224f;
      sa[892] = 0.14425777f;
      sa[893] = 0.22513118f;
      sa[894] = 0.015423411f;
      sa[895] = 0.182768f;
      sa[896] = -0.12553892f;
      sa[897] = 0.3011745f;
      sa[898] = -0.14691183f;
      sa[899] = 0.09080472f;
      sa[900] = -0.13027109f;
      sa[901] = 0.1308769f;
      sa[902] = -0.25162297f;
      sa[903] = -0.067559965f;
      sa[904] = 0.18488787f;
      sa[905] = 0.18755852f;
      sa[906] = -0.23167379f;
      sa[907] = -0.22951615f;
      sa[908] = -0.23362502f;
      sa[909] = 0.051164094f;
      sa[910] = 0.008241034f;
      sa[911] = -0.12871295f;
      sa[912] = -0.009561387f;
      sa[913] = 0.055071995f;
      sa[914] = -0.17850949f;
      sa[915] = 0.065737106f;
      sa[916] = 0.2014916f;
      sa[917] = -0.004705989f;
      sa[918] = 0.18905786f;
      sa[919] = -0.0643385f;
      sa[920] = 0.14513469f;
      sa[921] = -0.06332137f;
      sa[922] = -0.12150602f;
      sa[923] = -0.11650366f;
      sa[924] = -0.13732389f;
      sa[925] = -0.17924632f;
      sa[926] = 0.10490557f;
      sa[927] = -0.093297206f;
      sa[928] = 0.24220549f;
      sa[929] = 0.139666f;
      sa[930] = 0.15472856f;
      sa[931] = -0.001212596f;
      sa[932] = 0.27800557f;
      sa[933] = 0.013778113f;
      sa[934] = 0.17780028f;
      sa[935] = -0.22159195f;
      sa[936] = 0.08107958f;
      sa[937] = 0.18730728f;
      sa[938] = -0.10497989f;
      sa[939] = -0.012721295f;
      sa[940] = -0.06429627f;
      sa[941] = -0.29801235f;
      sa[942] = -0.2336815f;
      sa[943] = -0.16999538f;
      sa[944] = -0.20763129f;
      sa[945] = 0.054184753f;
      sa[946] = 0.045166016f;
      sa[947] = 0.29829496f;
      sa[948] = 0.08862441f;
      sa[949] = -0.1733785f;
      sa[950] = 0.093684085f;
      sa[951] = -0.082154445f;
      sa[952] = -0.20780088f;
      sa[953] = -0.1858797f;
      sa[954] = -0.23874763f;
      sa[955] = 0.053707648f;
      sa[956] = -0.02163052f;
      sa[957] = 0.023412846f;
      sa[958] = 0.09166651f;
      sa[959] = -0.16230474f;
      sa[960] = 0.3211251f;
      sa[961] = -0.13490278f;
      sa[962] = -0.034552317f;
      sa[963] = -0.085731186f;
      sa[964] = -0.17619663f;
      sa[965] = 0.23129234f;
      sa[966] = -0.095068045f;
      sa[967] = -0.27157232f;
      sa[968] = 0.10139239f;
      sa[969] = 0.06542321f;
      sa[970] = 0.26362386f;
      sa[971] = -0.015698193f;
      sa[972] = -0.18162626f;
      sa[973] = -0.20632474f;
      sa[974] = -0.32687774f;
      sa[975] = -0.28403017f;
      sa[976] = -0.058205277f;
      sa[977] = 0.045335215f;
      sa[978] = -0.083778724f;
      sa[979] = 0.16373774f;
      sa[980] = 0.069061585f;
      sa[981] = -0.20316625f;
      sa[982] = 0.13828775f;
      sa[983] = -0.15598676f;
      sa[984] = -0.26781794f;
      sa[985] = 0.051709563f;
      sa[986] = -0.2640237f;
      sa[987] = 0.08006045f;
      sa[988] = 0.15509976f;
      sa[989] = 0.22276345f;
      sa[990] = 0.2744295f;
      sa[991] = -0.22260246f;
      sa[992] = -0.18147759f;
      sa[993] = -0.016856782f;
      sa[994] = -0.14205308f;
      sa[995] = -0.24575639f;
      sa[996] = 0.1633622f;
      sa[997] = 0.16712622f;
      sa[998] = 0.11555797f;
      sa[999] = 0.28106967f;
      sa[1000] = 0.04143863f;
      sa[1001] = 0.25703576f;
      sa[1002] = 0.2708976f;
      sa[1003] = -0.046140675f;
      sa[1004] = 0.16467074f;
      sa[1005] = -0.27207205f;
      sa[1006] = -0.005665601f;
      sa[1007] = 0.12270184f;
      sa[1008] = 0.18461038f;
      sa[1009] = 0.026226908f;
      sa[1010] = -0.019107234f;
      sa[1011] = 0.20658877f;
      sa[1012] = -0.08975093f;
      sa[1013] = 0.13084178f;
      sa[1014] = 0.24167882f;
      sa[1015] = -0.31216037f;
      sa[1016] = 0.25387034f;
      sa[1017] = 0.03922077f;
      sa[1018] = -0.03205127f;
      sa[1019] = 0.03465763f;
      sa[1020] = -0.24861799f;
      sa[1021] = 0.05904808f;
      sa[1022] = 0.21265617f;
      sa[1023] = 0.05287921f;
      sa[1024] = -0.046051703f;
      sa[1025] = 0.08195873f;
      sa[1026] = 0.15878128f;
      sa[1027] = 0.2923856f;
      sa[1028] = 0.28061607f;
      sa[1029] = -0.044128362f;
      sa[1030] = -0.17804253f;
      sa[1031] = -0.00444227f;
      sa[1032] = -0.20889045f;
      sa[1033] = 0.029825455f;
      sa[1034] = -0.025849437f;
      sa[1035] = -0.23567362f;
      sa[1036] = 0.24259768f;
      sa[1037] = 0.009434088f;
      sa[1038] = -0.22360015f;
      sa[1039] = 0.22437176f;
      sa[1040] = -0.042981736f;
      sa[1041] = 0.05886173f;
      sa[1042] = -0.22361846f;
      sa[1043] = -0.032172438f;
      sa[1044] = 0.18088064f;
      sa[1045] = 0.21097246f;
      sa[1046] = -0.21253727f;
      sa[1047] = -0.16542701f;
      sa[1048] = 0.17161843f;
      sa[1049] = -0.08694489f;
      sa[1050] = 0.060023762f;
      sa[1051] = -0.16092263f;
      sa[1052] = 0.13337353f;
      sa[1053] = 0.24380174f;
      sa[1054] = 0.22313601f;
      sa[1055] = -0.061717954f;
      sa[1056] = 0.2616745f;
      sa[1057] = -0.18951108f;
      sa[1058] = 0.2247801f;
      sa[1059] = -0.1503946f;
      sa[1060] = -0.2895864f;
      sa[1061] = 0.00218442f;
      sa[1062] = 0.2675437f;
      sa[1063] = -0.053894524f;
      sa[1064] = 0.09940223f;
      sa[1065] = -0.01644789f;
      sa[1066] = 0.18642531f;
      sa[1067] = -0.28494158f;
      sa[1068] = -0.3045026f;
      sa[1069] = 0.21086532f;
      sa[1070] = 0.1629715f;
      sa[1071] = 0.2064767f;
      sa[1072] = -0.23998784f;
      sa[1073] = 0.12414646f;
      sa[1074] = 0.12074486f;
      sa[1075] = -0.16197306f;
      sa[1076] = -0.0625284f;
      sa[1077] = 0.14848849f;
      sa[1078] = -0.06545937f;
      sa[1079] = 0.0138757005f;
      sa[1080] = 0.2322619f;
      sa[1081] = 0.24899049f;
      sa[1082] = -0.3058907f;
      sa[1083] = -0.27274787f;
      sa[1084] = 0.24355854f;
      sa[1085] = -0.20661487f;
      sa[1086] = -0.25733393f;
      sa[1087] = -0.21771467f;
      sa[1088] = -0.16345322f;
      sa[1089] = 0.105137914f;
      sa[1090] = -0.24603482f;
      sa[1091] = 0.09353434f;
      sa[1092] = -0.21882324f;
      sa[1093] = -0.24377608f;
      sa[1094] = 0.015458072f;
      sa[1095] = -0.1911905f;
      sa[1096] = 0.0972694f;
      sa[1097] = -0.109990716f;
      sa[1098] = -0.04240309f;
      sa[1099] = -0.011814288f;
      sa[1100] = -0.096803956f;
      sa[1101] = 0.15835492f;
      sa[1102] = -0.11549823f;
      sa[1103] = 0.25859138f;
      sa[1104] = -0.27067026f;
      sa[1105] = -0.12277613f;
      sa[1106] = -0.13555385f;
      sa[1107] = 0.27011213f;
      sa[1108] = -0.16318908f;
      sa[1109] = 0.2568566f;
      sa[1110] = 0.18586457f;
      sa[1111] = -0.2148687f;
      sa[1112] = 0.045520023f;
      sa[1113] = 0.11362615f;
      sa[1114] = 0.17036489f;
      sa[1115] = 0.3327355f;
      sa[1116] = -0.09083781f;
      sa[1117] = -0.20526467f;
      sa[1118] = -0.18898183f;
      sa[1119] = -0.13409641f;
      sa[1120] = 0.1864577f;
      sa[1121] = 0.07124107f;
      sa[1122] = 0.2357236f;
      sa[1123] = 0.24328463f;
      sa[1124] = 0.0048492723f;
      sa[1125] = -0.081248015f;
      sa[1126] = 0.23019566f;
      sa[1127] = 0.10062619f;
      sa[1128] = 0.005739245f;
      sa[1129] = -0.11335112f;
      sa[1130] = 0.19753493f;
      sa[1131] = 0.27303094f;
      sa[1132] = -0.16952977f;
      sa[1133] = -0.15058655f;
      sa[1134] = 0.26319605f;
      sa[1135] = -0.2850585f;
      sa[1136] = -0.03548132f;
      sa[1137] = 0.1880603f;
      sa[1138] = -0.087051466f;
      sa[1139] = 0.17283799f;
      sa[1140] = 0.25410563f;
      sa[1141] = -0.26007643f;
      sa[1142] = 0.12378418f;
      sa[1143] = 0.008920934f;
      sa[1144] = -0.26894793f;
      sa[1145] = 0.16630544f;
      sa[1146] = 0.21655373f;
      sa[1147] = -0.058602326f;
      sa[1148] = 0.01332863f;
      sa[1149] = 0.012298185f;
      sa[1150] = -0.3134097f;
      sa[1151] = -0.25769362f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_02_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_02_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2868804f;
      sa[1] = -0.106328614f;
      sa[2] = -0.5647724f;
      sa[3] = -0.9498633f;
      sa[4] = 0.10587511f;
      sa[5] = 0.22367696f;
      sa[6] = 1.1775321f;
      sa[7] = -0.6655656f;
      sa[8] = -0.91485447f;
      sa[9] = 0.65681547f;
      sa[10] = -0.17368391f;
      sa[11] = 0.4396635f;
      sa[12] = 0.22486189f;
      sa[13] = 0.07595434f;
      sa[14] = -1.1879922f;
      sa[15] = 1.151885f;
      sa[16] = 1.6092112f;
      sa[17] = -0.41430068f;
      sa[18] = 0.031664126f;
      sa[19] = -0.49992704f;
      sa[20] = 1.156794f;
      sa[21] = -0.008561676f;
      sa[22] = -1.042319f;
      sa[23] = 0.8049825f;
      sa[24] = -1.3209267f;
      sa[25] = 0.4372961f;
      sa[26] = -0.2313493f;
      sa[27] = 1.51424f;
      sa[28] = -1.4122689f;
      sa[29] = -0.43840876f;
      sa[30] = 0.4618406f;
      sa[31] = -0.667748f;
      sa[32] = -1.1432468f;
      sa[33] = -1.4855894f;
      sa[34] = 0.038433574f;
      sa[35] = 1.3504139f;
      sa[36] = -0.32132524f;
      sa[37] = -0.07316679f;
      sa[38] = 0.14083752f;
      sa[39] = 0.83829945f;
      sa[40] = -0.7826683f;
      sa[41] = -1.3574128f;
      sa[42] = -1.0607154f;
      sa[43] = -1.4066799f;
      sa[44] = 0.0625695f;
      sa[45] = -1.3178227f;
      sa[46] = 1.238599f;
      sa[47] = 1.3617108f;
      sa[48] = -1.3388959f;
      sa[49] = -1.0163273f;
      sa[50] = 0.38322568f;
      sa[51] = -0.3150353f;
      sa[52] = 0.81537306f;
      sa[53] = 0.91737884f;
      sa[54] = -0.27022684f;
      sa[55] = 1.1300051f;
      sa[56] = -0.986677f;
      sa[57] = -1.1345034f;
      sa[58] = 0.18104929f;
      sa[59] = -0.16674498f;
      sa[60] = 1.3356981f;
      sa[61] = -0.577059f;
      sa[62] = -0.33752745f;
      sa[63] = 0.6668549f;
      sa[64] = 1.4515653f;
      sa[65] = -0.6383894f;
      sa[66] = 0.6257665f;
      sa[67] = 1.5983748f;
      sa[68] = 0.7122354f;
      sa[69] = -1.0124927f;
      sa[70] = -1.5099714f;
      sa[71] = -0.41265333f;
      sa[72] = -1.2857842f;
      sa[73] = 1.1867481f;
      sa[74] = 1.3701416f;
      sa[75] = -0.10958115f;
      sa[76] = 0.8684238f;
      sa[77] = 0.50497293f;
      sa[78] = -1.2952375f;
      sa[79] = 0.97574186f;
      sa[80] = -0.80404514f;
      sa[81] = 0.2818546f;
      sa[82] = 0.82242185f;
      sa[83] = -0.57388467f;
      sa[84] = -1.5862565f;
      sa[85] = -1.2837512f;
      sa[86] = 0.26453182f;
      sa[87] = 1.2285674f;
      sa[88] = -1.546243f;
      sa[89] = -0.46923643f;
      sa[90] = -1.0430971f;
      sa[91] = 1.5410988f;
      sa[92] = -0.3264341f;
      sa[93] = 0.24622674f;
      sa[94] = -1.5316865f;
      sa[95] = -0.2123235f;
      sa[96] = -1.1124233f;
      sa[97] = 0.1729072f;
      sa[98] = -0.031611674f;
      sa[99] = 0.3250417f;
      sa[100] = -1.234801f;
      sa[101] = -0.37105843f;
      sa[102] = 1.3424711f;
      sa[103] = 0.017327106f;
      sa[104] = -0.16874334f;
      sa[105] = -0.5781757f;
      sa[106] = 1.4458451f;
      sa[107] = 1.1996328f;
      sa[108] = 0.7116821f;
      sa[109] = 0.108916715f;
      sa[110] = 0.6732176f;
      sa[111] = -0.78169644f;
      sa[112] = -1.1499215f;
      sa[113] = 0.15974982f;
      sa[114] = 0.21854706f;
      sa[115] = -0.29067755f;
      sa[116] = 1.1719868f;
      sa[117] = 0.06325136f;
      sa[118] = -1.2743455f;
      sa[119] = -0.77422374f;
      sa[120] = -0.32296374f;
      sa[121] = 1.0965283f;
      sa[122] = -0.08554373f;
      sa[123] = 0.3481674f;
      sa[124] = -0.6994405f;
      sa[125] = 0.771346f;
      sa[126] = -0.97105956f;
      sa[127] = 0.4808684f;
      sa[128] = -0.89160985f;
      sa[129] = 0.7535527f;
      sa[130] = -0.35748988f;
      sa[131] = 0.90794843f;
      sa[132] = 0.47816026f;
      sa[133] = 0.6152171f;
      sa[134] = 0.7292487f;
      sa[135] = -1.0822718f;
      sa[136] = 0.53726774f;
      sa[137] = -0.57269377f;
      sa[138] = -0.07555319f;
      sa[139] = 1.1771679f;
      sa[140] = -0.46561584f;
      sa[141] = -0.009924219f;
      sa[142] = 0.22800769f;
      sa[143] = -0.8305329f;
      sa[144] = 0.9595981f;
      sa[145] = -0.78603977f;
      sa[146] = 0.06587377f;
      sa[147] = -0.28645512f;
      sa[148] = -0.830915f;
      sa[149] = 1.1121994f;
      sa[150] = -1.0604602f;
      sa[151] = -1.6070256f;
      sa[152] = 1.543029f;
      sa[153] = -0.58154905f;
      sa[154] = 1.3743333f;
      sa[155] = -1.5609983f;
      sa[156] = -1.4085034f;
      sa[157] = -1.1307236f;
      sa[158] = -0.23156945f;
      sa[159] = -0.62471986f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_02 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_02_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_02_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_02_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_02_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


