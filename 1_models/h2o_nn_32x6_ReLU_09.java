/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:48:30.506+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_09 > h2o_nn_32x6_ReLU_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_09", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-7728873972337859836L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3775983526206106;
      sa[1] = 0.5378865219960415;
      sa[2] = 0.5217011568281558;
      sa[3] = 0.36520866145844016;
      sa[4] = 0.5092176923875202;
      sa[5] = 0.590994557559165;
      sa[6] = 0.3633459766522064;
      sa[7] = 0.41323664743568056;
      sa[8] = 0.49063192515290777;
      sa[9] = 0.594773004549754;
      sa[10] = 0.2550708991747392;
      sa[11] = 0.5615348126160848;
      sa[12] = 0.5988823450973864;
      sa[13] = 0.4444003186896426;
      sa[14] = 0.6034946904068301;
      sa[15] = 0.5456765163719137;
      sa[16] = 0.5538330071705708;
      sa[17] = 0.5494085296128948;
      sa[18] = 0.4951008289627614;
      sa[19] = 0.6307214590280469;
      sa[20] = 0.42428277006151877;
      sa[21] = 0.557758558824944;
      sa[22] = 0.457314151583153;
      sa[23] = 0.5318015942180515;
      sa[24] = 0.4978982272613846;
      sa[25] = 0.548821896582064;
      sa[26] = 0.44954523137514973;
      sa[27] = 0.520073979958116;
      sa[28] = 0.4180259406019873;
      sa[29] = 0.4997147858419809;
      sa[30] = 0.7176238029419147;
      sa[31] = 0.4288612953313058;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.03708140810105236;
      sa[1] = -0.04317719630480108;
      sa[2] = -0.08460956006914767;
      sa[3] = -0.015051842995355835;
      sa[4] = -0.028458408391187733;
      sa[5] = 0.009322304631268838;
    }
  }
}
class h2o_nn_32x6_ReLU_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.0912559f;
      sa[1] = 0.22069767f;
      sa[2] = 0.07916586f;
      sa[3] = -0.0065865708f;
      sa[4] = -0.23787852f;
      sa[5] = -0.2352187f;
      sa[6] = -0.17737795f;
      sa[7] = 0.18768254f;
      sa[8] = 0.037430353f;
      sa[9] = -0.13526326f;
      sa[10] = -0.1651752f;
      sa[11] = -0.28397232f;
      sa[12] = 0.060458127f;
      sa[13] = -0.30230692f;
      sa[14] = -0.26982254f;
      sa[15] = -0.02138706f;
      sa[16] = -1.8483738E-4f;
      sa[17] = 0.16360506f;
      sa[18] = -0.1712639f;
      sa[19] = 0.15088475f;
      sa[20] = 0.20314947f;
      sa[21] = -0.34489167f;
      sa[22] = 0.13874091f;
      sa[23] = -0.16148274f;
      sa[24] = 0.25516346f;
      sa[25] = -0.03882667f;
      sa[26] = -0.11077945f;
      sa[27] = 0.43285143f;
      sa[28] = 0.24251156f;
      sa[29] = -0.26234102f;
      sa[30] = -0.17260078f;
      sa[31] = 0.22400142f;
      sa[32] = 0.22791857f;
      sa[33] = -0.18869302f;
      sa[34] = 0.03031185f;
      sa[35] = -0.111320205f;
      sa[36] = 0.23009036f;
      sa[37] = 0.1998311f;
      sa[38] = -0.25741324f;
      sa[39] = 0.19150434f;
      sa[40] = -0.05470511f;
      sa[41] = -0.092207946f;
      sa[42] = -0.18539102f;
      sa[43] = -0.105781026f;
      sa[44] = 0.34654626f;
      sa[45] = -0.39814028f;
      sa[46] = 0.07099629f;
      sa[47] = 0.04258039f;
      sa[48] = 0.16473073f;
      sa[49] = 0.23727764f;
      sa[50] = 0.15302494f;
      sa[51] = -0.40059042f;
      sa[52] = -0.17145418f;
      sa[53] = 0.057272382f;
      sa[54] = 0.19798252f;
      sa[55] = 0.067427956f;
      sa[56] = -0.25484693f;
      sa[57] = -0.387427f;
      sa[58] = 0.18555114f;
      sa[59] = -0.3614887f;
      sa[60] = -0.4061189f;
      sa[61] = 0.23768397f;
      sa[62] = 0.1328444f;
      sa[63] = -0.014405139f;
      sa[64] = 0.046236776f;
      sa[65] = -0.0070384727f;
      sa[66] = -0.04431969f;
      sa[67] = 0.002519735f;
      sa[68] = -0.1783055f;
      sa[69] = 0.05537506f;
      sa[70] = 0.010063569f;
      sa[71] = 0.34730566f;
      sa[72] = -0.32341802f;
      sa[73] = 0.24803767f;
      sa[74] = -0.08440488f;
      sa[75] = -0.05962772f;
      sa[76] = -0.13085572f;
      sa[77] = -0.03433995f;
      sa[78] = -0.058752846f;
      sa[79] = 0.34955922f;
      sa[80] = -0.4024762f;
      sa[81] = 0.09539862f;
      sa[82] = -0.046103146f;
      sa[83] = 0.07601333f;
      sa[84] = 0.07735838f;
      sa[85] = -0.08443187f;
      sa[86] = 0.19300105f;
      sa[87] = 0.4058954f;
      sa[88] = 0.28531674f;
      sa[89] = 0.16916753f;
      sa[90] = -0.20375177f;
      sa[91] = 0.1039582f;
      sa[92] = 0.17409495f;
      sa[93] = -0.1153399f;
      sa[94] = -0.119056076f;
      sa[95] = -0.08561678f;
      sa[96] = 0.2109281f;
      sa[97] = -0.043323454f;
      sa[98] = 0.21337897f;
      sa[99] = 0.051553026f;
      sa[100] = 0.0874255f;
      sa[101] = -0.031858392f;
      sa[102] = -0.09755699f;
      sa[103] = 0.122934446f;
      sa[104] = -0.067852594f;
      sa[105] = -0.12432865f;
      sa[106] = -0.19888866f;
      sa[107] = 0.14165697f;
      sa[108] = 0.12621634f;
      sa[109] = -0.08535006f;
      sa[110] = -0.1127626f;
      sa[111] = 0.18373285f;
      sa[112] = 0.136016f;
      sa[113] = 0.026512705f;
      sa[114] = -0.038611766f;
      sa[115] = 0.006460466f;
      sa[116] = -0.23729536f;
      sa[117] = -0.058310054f;
      sa[118] = -0.33631393f;
      sa[119] = 0.0956332f;
      sa[120] = 0.26823428f;
      sa[121] = 0.2862003f;
      sa[122] = 0.4272564f;
      sa[123] = 0.40382573f;
      sa[124] = 0.31700355f;
      sa[125] = 0.1885684f;
      sa[126] = -0.29901582f;
      sa[127] = -0.40331104f;
      sa[128] = 0.11603356f;
      sa[129] = 0.18929955f;
      sa[130] = -0.0015728576f;
      sa[131] = 0.35303107f;
      sa[132] = 0.16500117f;
      sa[133] = -0.2382314f;
      sa[134] = -0.043468576f;
      sa[135] = -0.40261832f;
      sa[136] = -0.3132369f;
      sa[137] = -0.106831156f;
      sa[138] = 0.023559906f;
      sa[139] = -0.1760069f;
      sa[140] = -0.089568965f;
      sa[141] = -0.121307544f;
      sa[142] = 0.18612213f;
      sa[143] = -0.2446107f;
      sa[144] = 0.089182965f;
      sa[145] = -0.2181113f;
      sa[146] = -0.37890497f;
      sa[147] = -0.025506387f;
      sa[148] = 0.16400975f;
      sa[149] = 0.14504738f;
      sa[150] = 0.24270222f;
      sa[151] = -0.21985555f;
      sa[152] = -0.07909203f;
      sa[153] = 0.27815053f;
      sa[154] = 0.16299102f;
      sa[155] = -0.121092394f;
      sa[156] = 0.13584617f;
      sa[157] = -0.20377067f;
      sa[158] = 0.06612407f;
      sa[159] = 0.13027838f;
      sa[160] = -0.038346287f;
      sa[161] = 0.15931807f;
      sa[162] = 0.0018198179f;
      sa[163] = -0.30580047f;
      sa[164] = 0.22232492f;
      sa[165] = -0.033269573f;
      sa[166] = -0.07875943f;
      sa[167] = -0.033742044f;
      sa[168] = 0.15198012f;
      sa[169] = 0.1974415f;
      sa[170] = 0.21569052f;
      sa[171] = 0.030235253f;
      sa[172] = -0.067213506f;
      sa[173] = -0.14024718f;
      sa[174] = -0.05036088f;
      sa[175] = -0.17329772f;
      sa[176] = 0.029983709f;
      sa[177] = 0.07013055f;
      sa[178] = -0.10705674f;
      sa[179] = 0.10191313f;
      sa[180] = -0.117257446f;
      sa[181] = -0.3903027f;
      sa[182] = -0.21493912f;
      sa[183] = 0.1513609f;
      sa[184] = 0.29701406f;
      sa[185] = 0.12510015f;
      sa[186] = -0.30097976f;
      sa[187] = -0.0091187535f;
      sa[188] = -0.12404764f;
      sa[189] = 0.17816412f;
      sa[190] = 0.02195855f;
      sa[191] = -0.1893733f;
      sa[192] = -0.16970778f;
      sa[193] = 0.112452246f;
      sa[194] = 0.028771147f;
      sa[195] = 0.119466364f;
      sa[196] = 0.169298f;
      sa[197] = -0.040096674f;
      sa[198] = 0.3255918f;
      sa[199] = -0.09074099f;
      sa[200] = -0.009977515f;
      sa[201] = -0.28530997f;
      sa[202] = 0.09292574f;
      sa[203] = -0.092979506f;
      sa[204] = -0.31378245f;
      sa[205] = 0.23206505f;
      sa[206] = 0.4100822f;
      sa[207] = 0.1236594f;
      sa[208] = -0.32315814f;
      sa[209] = -0.1156468f;
      sa[210] = -0.3572583f;
      sa[211] = -0.3874083f;
      sa[212] = 0.27746797f;
      sa[213] = -0.25953528f;
      sa[214] = -0.04459253f;
      sa[215] = 0.09962512f;
      sa[216] = 0.07879491f;
      sa[217] = 0.10196133f;
      sa[218] = -0.17701298f;
      sa[219] = 0.2629663f;
      sa[220] = -0.27036488f;
      sa[221] = -0.038512215f;
      sa[222] = 0.1302485f;
      sa[223] = -0.0010605445f;
      sa[224] = 0.06881971f;
      sa[225] = 0.35056704f;
      sa[226] = -0.14828767f;
      sa[227] = 0.15448886f;
      sa[228] = 0.023693437f;
      sa[229] = -0.0037726613f;
      sa[230] = 0.14407359f;
      sa[231] = -0.32912308f;
      sa[232] = -0.23506813f;
      sa[233] = 0.19163875f;
      sa[234] = 0.23918414f;
      sa[235] = -0.17461748f;
      sa[236] = -0.121872075f;
      sa[237] = -0.28939772f;
      sa[238] = -0.29683462f;
      sa[239] = 0.05991145f;
      sa[240] = -0.04133006f;
      sa[241] = -0.11370199f;
      sa[242] = -0.0017250923f;
      sa[243] = -0.15895927f;
      sa[244] = -0.26036832f;
      sa[245] = -0.1656303f;
      sa[246] = -0.31230512f;
      sa[247] = -0.122109145f;
      sa[248] = 0.26782137f;
      sa[249] = 0.19813044f;
      sa[250] = -0.12719032f;
      sa[251] = -0.061892387f;
      sa[252] = -0.10052468f;
      sa[253] = -0.222664f;
      sa[254] = -0.12144491f;
      sa[255] = 0.3273618f;
      sa[256] = -0.19487734f;
      sa[257] = 0.2924794f;
      sa[258] = -0.18729588f;
      sa[259] = -0.13732924f;
      sa[260] = -0.09131672f;
      sa[261] = -0.10928937f;
      sa[262] = -0.108799554f;
      sa[263] = 0.35257736f;
      sa[264] = -0.16648808f;
      sa[265] = 0.07860702f;
      sa[266] = -0.22164823f;
      sa[267] = -0.22651881f;
      sa[268] = 0.18851061f;
      sa[269] = -0.15479201f;
      sa[270] = -0.13004793f;
      sa[271] = 0.35533643f;
      sa[272] = -0.12795977f;
      sa[273] = -0.16887914f;
      sa[274] = 0.10657044f;
      sa[275] = -0.07177045f;
      sa[276] = 0.07026327f;
      sa[277] = -0.12351915f;
      sa[278] = -0.2616375f;
      sa[279] = 0.1301894f;
      sa[280] = -0.23095211f;
      sa[281] = 0.18633224f;
      sa[282] = -0.14211543f;
      sa[283] = -0.15887693f;
      sa[284] = 0.02839694f;
      sa[285] = -0.15905708f;
      sa[286] = 0.24664564f;
      sa[287] = 0.082795635f;
      sa[288] = -0.2994472f;
      sa[289] = -0.18178533f;
      sa[290] = -0.13703065f;
      sa[291] = -0.117655024f;
      sa[292] = 0.12732422f;
      sa[293] = -0.129492f;
      sa[294] = 0.014317468f;
      sa[295] = 0.10557119f;
      sa[296] = 0.07738693f;
      sa[297] = 0.21773635f;
      sa[298] = -0.052599624f;
      sa[299] = -0.19510889f;
      sa[300] = -0.013929336f;
      sa[301] = -0.09709265f;
      sa[302] = 0.096124835f;
      sa[303] = -0.013732201f;
      sa[304] = -0.18472454f;
      sa[305] = 0.0108926995f;
      sa[306] = 0.32180792f;
      sa[307] = -0.11013679f;
      sa[308] = 0.086724f;
      sa[309] = 0.15729575f;
      sa[310] = 0.24084964f;
      sa[311] = 0.33242387f;
      sa[312] = -0.15320083f;
      sa[313] = -0.18882939f;
      sa[314] = -0.060598783f;
      sa[315] = 0.16357744f;
      sa[316] = 0.006683467f;
      sa[317] = -0.04015674f;
      sa[318] = 0.11753455f;
      sa[319] = 0.33456698f;
      sa[320] = -0.16243735f;
      sa[321] = 0.040454905f;
      sa[322] = 0.35805708f;
      sa[323] = -0.008985418f;
      sa[324] = 0.100437455f;
      sa[325] = 0.18412223f;
      sa[326] = -0.41206032f;
      sa[327] = 0.03798824f;
      sa[328] = -0.15289597f;
      sa[329] = 0.27278504f;
      sa[330] = -0.18260093f;
      sa[331] = -0.008302681f;
      sa[332] = -0.088921204f;
      sa[333] = 0.030036392f;
      sa[334] = -0.032298673f;
      sa[335] = 0.40143913f;
      sa[336] = -0.15849154f;
      sa[337] = -0.10619712f;
      sa[338] = 0.28019574f;
      sa[339] = -0.16993923f;
      sa[340] = -0.43845275f;
      sa[341] = -0.38989562f;
      sa[342] = 0.055061765f;
      sa[343] = -0.20189339f;
      sa[344] = -0.21631074f;
      sa[345] = 0.1067363f;
      sa[346] = 0.17839421f;
      sa[347] = -0.26355743f;
      sa[348] = 0.15932761f;
      sa[349] = -0.21434832f;
      sa[350] = -0.30562484f;
      sa[351] = 0.05396045f;
      sa[352] = 0.10671486f;
      sa[353] = -0.15562537f;
      sa[354] = 0.008572459f;
      sa[355] = 0.01622458f;
      sa[356] = -0.075280756f;
      sa[357] = 0.3719957f;
      sa[358] = -0.39686576f;
      sa[359] = -0.06092325f;
      sa[360] = 0.060170554f;
      sa[361] = 0.0458111f;
      sa[362] = -0.18674418f;
      sa[363] = 0.1579185f;
      sa[364] = -0.21848522f;
      sa[365] = -0.2548864f;
      sa[366] = -0.083284415f;
      sa[367] = -0.29868427f;
      sa[368] = -0.1931054f;
      sa[369] = 0.2643439f;
      sa[370] = -0.13681678f;
      sa[371] = 0.26341835f;
      sa[372] = -0.04356724f;
      sa[373] = 0.26816058f;
      sa[374] = -0.16844168f;
      sa[375] = -0.2395042f;
      sa[376] = -0.24727687f;
      sa[377] = -0.2550504f;
      sa[378] = 0.17446332f;
      sa[379] = 0.05579374f;
      sa[380] = -0.15535243f;
      sa[381] = -0.168449f;
      sa[382] = -0.081300214f;
      sa[383] = -0.15301393f;
      sa[384] = -0.12037044f;
      sa[385] = 0.13178124f;
      sa[386] = -0.37197948f;
      sa[387] = -0.16031481f;
      sa[388] = 0.036921978f;
      sa[389] = -0.07240696f;
      sa[390] = -0.038722303f;
      sa[391] = -0.11733918f;
      sa[392] = 0.20398103f;
      sa[393] = 0.2903721f;
      sa[394] = -0.034182385f;
      sa[395] = 0.24456447f;
      sa[396] = 0.40812698f;
      sa[397] = -0.29609367f;
      sa[398] = -0.046222832f;
      sa[399] = -0.15022564f;
      sa[400] = 0.12829728f;
      sa[401] = 0.25234762f;
      sa[402] = -0.1946002f;
      sa[403] = -0.0045808367f;
      sa[404] = 0.36337098f;
      sa[405] = -0.4113838f;
      sa[406] = -0.050605725f;
      sa[407] = -0.0505328f;
      sa[408] = -0.2404591f;
      sa[409] = -0.21029373f;
      sa[410] = -0.17515525f;
      sa[411] = 0.07014511f;
      sa[412] = -0.15385413f;
      sa[413] = -0.021454157f;
      sa[414] = 0.15364122f;
      sa[415] = 0.4588609f;
      sa[416] = -0.22117782f;
      sa[417] = -0.031794764f;
      sa[418] = -0.061647158f;
      sa[419] = 0.1815535f;
      sa[420] = 0.18142463f;
      sa[421] = 0.19912025f;
      sa[422] = 0.31813294f;
      sa[423] = 0.1287511f;
      sa[424] = 0.096107736f;
      sa[425] = -0.06749172f;
      sa[426] = -0.22995211f;
      sa[427] = 0.19724402f;
      sa[428] = -0.14429446f;
      sa[429] = -0.36327484f;
      sa[430] = 0.2905754f;
      sa[431] = 0.029106991f;
      sa[432] = 0.051540993f;
      sa[433] = 0.15695155f;
      sa[434] = 0.33750796f;
      sa[435] = -0.05874211f;
      sa[436] = -0.21002948f;
      sa[437] = -0.1400727f;
      sa[438] = 0.022672622f;
      sa[439] = 0.15172862f;
      sa[440] = 0.3585965f;
      sa[441] = -0.23982863f;
      sa[442] = 0.104753315f;
      sa[443] = 0.046247683f;
      sa[444] = -0.14238666f;
      sa[445] = 0.1983226f;
      sa[446] = 0.26190683f;
      sa[447] = 0.23038225f;
      sa[448] = 0.24197778f;
      sa[449] = 0.2837794f;
      sa[450] = -0.25139514f;
      sa[451] = 0.20532684f;
      sa[452] = 0.22690417f;
      sa[453] = -2.6696388E-4f;
      sa[454] = -0.11637241f;
      sa[455] = 0.052565265f;
      sa[456] = 0.037252508f;
      sa[457] = 0.031866387f;
      sa[458] = -0.24649395f;
      sa[459] = 0.3377581f;
      sa[460] = 0.31694934f;
      sa[461] = 0.3999667f;
      sa[462] = 0.21341032f;
      sa[463] = 0.38746378f;
      sa[464] = -0.29545796f;
      sa[465] = 0.21290141f;
      sa[466] = -0.05506185f;
      sa[467] = 0.07266306f;
      sa[468] = -0.01526949f;
      sa[469] = 0.29971725f;
      sa[470] = 0.16046546f;
      sa[471] = -0.052801f;
      sa[472] = -0.015471161f;
      sa[473] = -0.07300163f;
      sa[474] = -0.06270019f;
      sa[475] = 0.16400123f;
      sa[476] = 0.106906086f;
      sa[477] = -0.101224035f;
      sa[478] = 0.09512834f;
      sa[479] = -0.19230767f;
      sa[480] = -0.29226622f;
      sa[481] = -0.1616518f;
      sa[482] = -0.28383794f;
      sa[483] = 0.24849473f;
      sa[484] = 0.26345846f;
      sa[485] = 0.17014056f;
      sa[486] = -0.069252215f;
      sa[487] = -0.13440937f;
      sa[488] = -0.2013959f;
      sa[489] = 0.057494145f;
      sa[490] = -0.042173076f;
      sa[491] = -0.16962034f;
      sa[492] = 0.24337478f;
      sa[493] = 0.15904287f;
      sa[494] = -0.18375267f;
      sa[495] = 0.26610953f;
      sa[496] = 0.026029458f;
      sa[497] = 0.10439013f;
      sa[498] = 0.23045109f;
      sa[499] = 0.2715547f;
      sa[500] = -0.09342362f;
      sa[501] = 0.0890513f;
      sa[502] = 0.29065645f;
      sa[503] = 0.059045944f;
      sa[504] = -0.1495336f;
      sa[505] = -0.09830272f;
      sa[506] = 0.30397758f;
      sa[507] = -0.0023909318f;
      sa[508] = 0.23260213f;
      sa[509] = 0.2647303f;
      sa[510] = 0.2778943f;
      sa[511] = 0.05524085f;
      sa[512] = 0.054808844f;
      sa[513] = -0.07630454f;
      sa[514] = 0.13029096f;
      sa[515] = -0.37046152f;
      sa[516] = 0.088964045f;
      sa[517] = 0.12315608f;
      sa[518] = 0.2161868f;
      sa[519] = -0.07768925f;
      sa[520] = 0.35097772f;
      sa[521] = 0.19886054f;
      sa[522] = 0.10505679f;
      sa[523] = 0.2782926f;
      sa[524] = 0.27577597f;
      sa[525] = 0.2664636f;
      sa[526] = 0.10228986f;
      sa[527] = 0.030896703f;
      sa[528] = 0.10136492f;
      sa[529] = 0.12495986f;
      sa[530] = -0.20636621f;
      sa[531] = 0.02631789f;
      sa[532] = 0.23634264f;
      sa[533] = 0.24306817f;
      sa[534] = 0.2175989f;
      sa[535] = -0.03361813f;
      sa[536] = 0.0014941728f;
      sa[537] = -0.41006202f;
      sa[538] = 0.30615273f;
      sa[539] = 0.33517277f;
      sa[540] = -0.35200697f;
      sa[541] = -0.17245813f;
      sa[542] = -0.023242611f;
      sa[543] = -0.144608f;
      sa[544] = 0.19486949f;
      sa[545] = 0.09486269f;
      sa[546] = 0.097122476f;
      sa[547] = 0.20131427f;
      sa[548] = -0.023510018f;
      sa[549] = 0.25626102f;
      sa[550] = -0.047080282f;
      sa[551] = -0.09668284f;
      sa[552] = 0.040593594f;
      sa[553] = -0.118555054f;
      sa[554] = -0.15327987f;
      sa[555] = -0.16495693f;
      sa[556] = -0.2257143f;
      sa[557] = -0.14909783f;
      sa[558] = -0.12025449f;
      sa[559] = -0.037574638f;
      sa[560] = -0.25780612f;
      sa[561] = -0.039824553f;
      sa[562] = 0.1939286f;
      sa[563] = -0.031659704f;
      sa[564] = 0.21845591f;
      sa[565] = 0.0023600825f;
      sa[566] = 0.28739935f;
      sa[567] = -0.11134973f;
      sa[568] = -0.06732948f;
      sa[569] = 0.03915471f;
      sa[570] = -0.07032766f;
      sa[571] = -0.08522834f;
      sa[572] = 0.08672832f;
      sa[573] = 0.28798166f;
      sa[574] = -0.009868187f;
      sa[575] = -0.37172687f;
      sa[576] = -0.16606538f;
      sa[577] = -0.073130906f;
      sa[578] = -0.060090523f;
      sa[579] = -0.030670235f;
      sa[580] = 0.043912295f;
      sa[581] = -0.16866659f;
      sa[582] = -7.002271E-4f;
      sa[583] = -0.16018963f;
      sa[584] = 0.0481473f;
      sa[585] = 0.12410541f;
      sa[586] = -0.18592086f;
      sa[587] = -0.1605932f;
      sa[588] = 0.0062214197f;
      sa[589] = 0.036543403f;
      sa[590] = -0.09557662f;
      sa[591] = -0.1950625f;
      sa[592] = -0.4328419f;
      sa[593] = -0.22342819f;
      sa[594] = 0.03466441f;
      sa[595] = -0.110900834f;
      sa[596] = 0.18691227f;
      sa[597] = -0.08511333f;
      sa[598] = 0.14188847f;
      sa[599] = -0.091499776f;
      sa[600] = -0.46086854f;
      sa[601] = 0.2176631f;
      sa[602] = 0.07053965f;
      sa[603] = 0.2801727f;
      sa[604] = 0.11501383f;
      sa[605] = 0.075549014f;
      sa[606] = 0.103162125f;
      sa[607] = -0.08595159f;
      sa[608] = 0.0035950628f;
      sa[609] = 0.12909943f;
      sa[610] = 0.11176374f;
      sa[611] = -0.030569376f;
      sa[612] = 0.09705697f;
      sa[613] = 0.12132496f;
      sa[614] = 0.09604038f;
      sa[615] = -0.09042144f;
      sa[616] = 0.031877603f;
      sa[617] = -0.24383745f;
      sa[618] = -0.16834025f;
      sa[619] = -0.09833659f;
      sa[620] = 0.109014556f;
      sa[621] = -0.26600236f;
      sa[622] = -0.27117094f;
      sa[623] = -0.23390219f;
      sa[624] = -0.0142314f;
      sa[625] = 0.31235877f;
      sa[626] = -0.0019696376f;
      sa[627] = 0.3208729f;
      sa[628] = -0.2363429f;
      sa[629] = -0.06483271f;
      sa[630] = -0.3280018f;
      sa[631] = 0.29212284f;
      sa[632] = 0.11175944f;
      sa[633] = -0.1505031f;
      sa[634] = -0.19232924f;
      sa[635] = 0.18529058f;
      sa[636] = -0.102402024f;
      sa[637] = -0.0497343f;
      sa[638] = -0.24153668f;
      sa[639] = 0.008832196f;
      sa[640] = -0.06934401f;
      sa[641] = -0.22736666f;
      sa[642] = 0.2825744f;
      sa[643] = -0.18691872f;
      sa[644] = -0.11344979f;
      sa[645] = -0.24270496f;
      sa[646] = 0.27112326f;
      sa[647] = -0.24845752f;
      sa[648] = 0.107780285f;
      sa[649] = -0.054007124f;
      sa[650] = 0.096409164f;
      sa[651] = -0.04875235f;
      sa[652] = 0.08882296f;
      sa[653] = -0.08036462f;
      sa[654] = 0.013110378f;
      sa[655] = -0.10296592f;
      sa[656] = 0.2457305f;
      sa[657] = 0.016917715f;
      sa[658] = -0.29698715f;
      sa[659] = -0.040680178f;
      sa[660] = -0.19839448f;
      sa[661] = -0.0070792735f;
      sa[662] = -0.15264405f;
      sa[663] = 0.23456357f;
      sa[664] = -0.22602211f;
      sa[665] = 0.0891024f;
      sa[666] = -0.22797172f;
      sa[667] = -0.39931116f;
      sa[668] = 0.2676072f;
      sa[669] = -0.10866011f;
      sa[670] = 0.20755132f;
      sa[671] = 0.048250686f;
      sa[672] = -0.28150576f;
      sa[673] = 0.18301208f;
      sa[674] = 0.086829096f;
      sa[675] = -0.39100254f;
      sa[676] = -0.14260426f;
      sa[677] = -0.26512077f;
      sa[678] = 0.1388028f;
      sa[679] = -0.13335693f;
      sa[680] = 0.06576057f;
      sa[681] = 0.16258731f;
      sa[682] = -0.12766528f;
      sa[683] = -0.20317537f;
      sa[684] = -0.13081297f;
      sa[685] = -0.07769426f;
      sa[686] = -0.10272301f;
      sa[687] = -0.19982009f;
      sa[688] = -0.16838117f;
      sa[689] = -0.23241158f;
      sa[690] = -0.043231204f;
      sa[691] = 0.10397687f;
      sa[692] = -0.28197932f;
      sa[693] = -0.10760064f;
      sa[694] = 0.20360097f;
      sa[695] = -0.28566602f;
      sa[696] = -0.10027962f;
      sa[697] = -0.18965115f;
      sa[698] = -0.2355729f;
      sa[699] = 0.23810327f;
      sa[700] = 0.19179027f;
      sa[701] = 0.24043387f;
      sa[702] = 0.40652677f;
      sa[703] = 0.05025315f;
      sa[704] = -0.21677664f;
      sa[705] = 0.04191433f;
      sa[706] = -0.15552992f;
      sa[707] = 0.13585906f;
      sa[708] = 0.052268367f;
      sa[709] = -0.34591562f;
      sa[710] = 0.38328832f;
      sa[711] = -0.046122313f;
      sa[712] = 0.1487789f;
      sa[713] = 0.29265156f;
      sa[714] = 0.2549325f;
      sa[715] = 0.18932636f;
      sa[716] = -0.0019087708f;
      sa[717] = 0.074564904f;
      sa[718] = 0.06805056f;
      sa[719] = 0.17540957f;
      sa[720] = -0.2551332f;
      sa[721] = 0.3685447f;
      sa[722] = -0.053533737f;
      sa[723] = 0.044703815f;
      sa[724] = 0.011918172f;
      sa[725] = -0.35454214f;
      sa[726] = -0.26746538f;
      sa[727] = -0.38111678f;
      sa[728] = -0.10804161f;
      sa[729] = 5.280822E-4f;
      sa[730] = 0.17495474f;
      sa[731] = -0.2442517f;
      sa[732] = 0.13316119f;
      sa[733] = 0.14597598f;
      sa[734] = -0.19775161f;
      sa[735] = 0.19008374f;
      sa[736] = 0.055196635f;
      sa[737] = 0.23945338f;
      sa[738] = -0.18069507f;
      sa[739] = -0.21063048f;
      sa[740] = -0.2880022f;
      sa[741] = -0.30602682f;
      sa[742] = 0.040704608f;
      sa[743] = -0.03359181f;
      sa[744] = 0.055266812f;
      sa[745] = -0.1179398f;
      sa[746] = 0.07186895f;
      sa[747] = -0.14691472f;
      sa[748] = -0.15609957f;
      sa[749] = -0.20745194f;
      sa[750] = 0.13814293f;
      sa[751] = 0.1428124f;
      sa[752] = -0.007960336f;
      sa[753] = 0.15688619f;
      sa[754] = 0.0063003544f;
      sa[755] = 0.18708383f;
      sa[756] = -0.21849456f;
      sa[757] = 0.19875899f;
      sa[758] = -0.18833995f;
      sa[759] = -0.0029987127f;
      sa[760] = -0.057899408f;
      sa[761] = 0.047555488f;
      sa[762] = -0.049355235f;
      sa[763] = 0.1064815f;
      sa[764] = 0.03089746f;
      sa[765] = -0.053680133f;
      sa[766] = -0.21303841f;
      sa[767] = 0.046465285f;
      sa[768] = -0.18966594f;
      sa[769] = -0.30188248f;
      sa[770] = 0.003915308f;
      sa[771] = -0.059008416f;
      sa[772] = 0.026058875f;
      sa[773] = -0.24439983f;
      sa[774] = 0.13457987f;
      sa[775] = 0.25183773f;
      sa[776] = -0.066980444f;
      sa[777] = 0.071537934f;
      sa[778] = 0.17191909f;
      sa[779] = -0.19459102f;
      sa[780] = -0.08655419f;
      sa[781] = 0.0132807745f;
      sa[782] = 0.19621994f;
      sa[783] = -0.27472433f;
      sa[784] = -0.18509834f;
      sa[785] = -0.14963478f;
      sa[786] = -0.17691045f;
      sa[787] = -0.34208462f;
      sa[788] = -0.24264865f;
      sa[789] = 0.10940753f;
      sa[790] = -0.051217407f;
      sa[791] = -0.04046329f;
      sa[792] = 0.07005852f;
      sa[793] = -0.006343718f;
      sa[794] = -0.1274883f;
      sa[795] = -0.10113133f;
      sa[796] = 0.24958664f;
      sa[797] = -0.20607781f;
      sa[798] = -0.23412473f;
      sa[799] = -0.12021216f;
      sa[800] = 0.092096895f;
      sa[801] = 0.10018978f;
      sa[802] = 0.15181749f;
      sa[803] = 0.2865578f;
      sa[804] = 0.33619025f;
      sa[805] = 0.3435884f;
      sa[806] = 0.3675357f;
      sa[807] = 0.3275982f;
      sa[808] = 0.0010028338f;
      sa[809] = -0.22884645f;
      sa[810] = 0.072666325f;
      sa[811] = 0.09117613f;
      sa[812] = 0.31925198f;
      sa[813] = -0.1931905f;
      sa[814] = 0.15770628f;
      sa[815] = -0.033406917f;
      sa[816] = 0.082283385f;
      sa[817] = -0.3919186f;
      sa[818] = 0.040139854f;
      sa[819] = -0.14985432f;
      sa[820] = -0.12637465f;
      sa[821] = -0.08536321f;
      sa[822] = -0.21259145f;
      sa[823] = 0.20029302f;
      sa[824] = 0.25146013f;
      sa[825] = 0.43491757f;
      sa[826] = -0.40082234f;
      sa[827] = -0.40647954f;
      sa[828] = 0.11490376f;
      sa[829] = -0.048453663f;
      sa[830] = 0.25250703f;
      sa[831] = 0.25398296f;
      sa[832] = 0.1698745f;
      sa[833] = 0.083681524f;
      sa[834] = 0.23265731f;
      sa[835] = -0.04222013f;
      sa[836] = 0.22549023f;
      sa[837] = -0.10029699f;
      sa[838] = 0.1467547f;
      sa[839] = -0.16040446f;
      sa[840] = 0.21107352f;
      sa[841] = 0.10834095f;
      sa[842] = 0.20095326f;
      sa[843] = 0.0965682f;
      sa[844] = 0.040467106f;
      sa[845] = 0.1744061f;
      sa[846] = -0.28228292f;
      sa[847] = -0.10593392f;
      sa[848] = 0.24143477f;
      sa[849] = 0.28337264f;
      sa[850] = 0.036894914f;
      sa[851] = 0.13940914f;
      sa[852] = 0.24725617f;
      sa[853] = 0.16549201f;
      sa[854] = 0.17122702f;
      sa[855] = -0.020368753f;
      sa[856] = 0.09260704f;
      sa[857] = -0.15211786f;
      sa[858] = 0.11711743f;
      sa[859] = 0.047454607f;
      sa[860] = 0.42905167f;
      sa[861] = -0.11809202f;
      sa[862] = -0.32103837f;
      sa[863] = -0.12021203f;
      sa[864] = -0.2914134f;
      sa[865] = 0.17123073f;
      sa[866] = -0.2587033f;
      sa[867] = -0.07724999f;
      sa[868] = -0.1818602f;
      sa[869] = 0.1735944f;
      sa[870] = -0.06582581f;
      sa[871] = 0.14045337f;
      sa[872] = 0.12005299f;
      sa[873] = -0.087683395f;
      sa[874] = -0.07030839f;
      sa[875] = -0.29312903f;
      sa[876] = -0.22294062f;
      sa[877] = -0.22507614f;
      sa[878] = 0.011239282f;
      sa[879] = 0.17275588f;
      sa[880] = -0.14484443f;
      sa[881] = -0.1367508f;
      sa[882] = 0.2931616f;
      sa[883] = 0.085669845f;
      sa[884] = -0.1280841f;
      sa[885] = -0.12802555f;
      sa[886] = 0.076760925f;
      sa[887] = -0.027660498f;
      sa[888] = -0.09742802f;
      sa[889] = -0.006336702f;
      sa[890] = -0.19778322f;
      sa[891] = 0.4535513f;
      sa[892] = 0.17399456f;
      sa[893] = 0.27123576f;
      sa[894] = 0.04146245f;
      sa[895] = 0.25180387f;
      sa[896] = -0.22499703f;
      sa[897] = 0.21818832f;
      sa[898] = 0.01895352f;
      sa[899] = 0.28633764f;
      sa[900] = -0.022424718f;
      sa[901] = 0.15065041f;
      sa[902] = -0.2258788f;
      sa[903] = -0.15967332f;
      sa[904] = 0.1399033f;
      sa[905] = 0.20450962f;
      sa[906] = -0.32052296f;
      sa[907] = -0.2341009f;
      sa[908] = -0.16666444f;
      sa[909] = 0.09190193f;
      sa[910] = 0.10404769f;
      sa[911] = -0.25413716f;
      sa[912] = -0.046405718f;
      sa[913] = 0.06871868f;
      sa[914] = -0.26530442f;
      sa[915] = 0.01793929f;
      sa[916] = 0.25062174f;
      sa[917] = 0.09205128f;
      sa[918] = 0.06407766f;
      sa[919] = 0.23752095f;
      sa[920] = 0.10518161f;
      sa[921] = -0.11906464f;
      sa[922] = -0.20485853f;
      sa[923] = -0.14064114f;
      sa[924] = -0.07990982f;
      sa[925] = -0.19256397f;
      sa[926] = 0.08195779f;
      sa[927] = 0.11389426f;
      sa[928] = 0.28434306f;
      sa[929] = 0.17871672f;
      sa[930] = 0.23000956f;
      sa[931] = 0.08104759f;
      sa[932] = 0.17486095f;
      sa[933] = -0.052181937f;
      sa[934] = 0.26071385f;
      sa[935] = -0.18870604f;
      sa[936] = 0.03431954f;
      sa[937] = 0.13667569f;
      sa[938] = -0.21168491f;
      sa[939] = -0.0090433955f;
      sa[940] = -0.07957915f;
      sa[941] = -0.3336183f;
      sa[942] = -0.24221127f;
      sa[943] = -0.27062303f;
      sa[944] = -0.25467303f;
      sa[945] = -0.027255896f;
      sa[946] = 0.0020379794f;
      sa[947] = 0.23328006f;
      sa[948] = 0.04541064f;
      sa[949] = -0.22311284f;
      sa[950] = 0.0708918f;
      sa[951] = -0.16937697f;
      sa[952] = -0.24357826f;
      sa[953] = -0.25939113f;
      sa[954] = -0.09786071f;
      sa[955] = 0.024775056f;
      sa[956] = -0.074196406f;
      sa[957] = -0.017655786f;
      sa[958] = 0.055307347f;
      sa[959] = -0.2609198f;
      sa[960] = 0.23460269f;
      sa[961] = -0.11884984f;
      sa[962] = 0.086716354f;
      sa[963] = -0.014471089f;
      sa[964] = -0.2503713f;
      sa[965] = 0.16557951f;
      sa[966] = -0.1929646f;
      sa[967] = -0.38816634f;
      sa[968] = 0.057883635f;
      sa[969] = -0.011727803f;
      sa[970] = 0.39731002f;
      sa[971] = 0.10270344f;
      sa[972] = -0.05599485f;
      sa[973] = -0.1861454f;
      sa[974] = -0.2906982f;
      sa[975] = -0.20979887f;
      sa[976] = -0.1138458f;
      sa[977] = 0.06266112f;
      sa[978] = -0.094489545f;
      sa[979] = 0.14145838f;
      sa[980] = 0.2169035f;
      sa[981] = -0.18278272f;
      sa[982] = 0.22356202f;
      sa[983] = -0.003934823f;
      sa[984] = -0.28818142f;
      sa[985] = 0.07312839f;
      sa[986] = -0.26418585f;
      sa[987] = 0.08722079f;
      sa[988] = 0.14396134f;
      sa[989] = 0.23476963f;
      sa[990] = 0.15650465f;
      sa[991] = -0.1407371f;
      sa[992] = -0.22724521f;
      sa[993] = -0.07760902f;
      sa[994] = -0.17669837f;
      sa[995] = -0.3222981f;
      sa[996] = 0.13757172f;
      sa[997] = 0.21741824f;
      sa[998] = 0.004887782f;
      sa[999] = 0.18576875f;
      sa[1000] = 0.0046005575f;
      sa[1001] = 0.18110281f;
      sa[1002] = 0.25109893f;
      sa[1003] = -0.11246137f;
      sa[1004] = 0.20562325f;
      sa[1005] = -0.20878135f;
      sa[1006] = -0.1324591f;
      sa[1007] = -0.009196222f;
      sa[1008] = 0.1220234f;
      sa[1009] = 0.13368347f;
      sa[1010] = 0.14598645f;
      sa[1011] = 0.34005684f;
      sa[1012] = -0.0070155617f;
      sa[1013] = 0.13905111f;
      sa[1014] = 0.3447821f;
      sa[1015] = -0.217192f;
      sa[1016] = 0.21684504f;
      sa[1017] = 0.19919924f;
      sa[1018] = -0.07267408f;
      sa[1019] = 0.06399361f;
      sa[1020] = -0.18827493f;
      sa[1021] = 0.06592462f;
      sa[1022] = 0.2976491f;
      sa[1023] = 0.12656397f;
      sa[1024] = 0.067863435f;
      sa[1025] = 0.20259975f;
      sa[1026] = 0.15334803f;
      sa[1027] = 0.27140856f;
      sa[1028] = 0.37768155f;
      sa[1029] = 0.073364645f;
      sa[1030] = -0.07059452f;
      sa[1031] = 0.10301087f;
      sa[1032] = -0.12018572f;
      sa[1033] = 0.029579116f;
      sa[1034] = -0.15355733f;
      sa[1035] = -0.32047346f;
      sa[1036] = 0.2995733f;
      sa[1037] = 0.07113796f;
      sa[1038] = -0.20965871f;
      sa[1039] = 0.2628854f;
      sa[1040] = 0.024196187f;
      sa[1041] = 0.13159312f;
      sa[1042] = -0.30514196f;
      sa[1043] = -0.08807009f;
      sa[1044] = 0.39224654f;
      sa[1045] = 0.3081707f;
      sa[1046] = -0.09734276f;
      sa[1047] = -0.12377527f;
      sa[1048] = 0.13624045f;
      sa[1049] = -0.039570104f;
      sa[1050] = 0.08139302f;
      sa[1051] = -0.12389344f;
      sa[1052] = 0.31081834f;
      sa[1053] = 0.24487604f;
      sa[1054] = 0.3120273f;
      sa[1055] = 0.078597404f;
      sa[1056] = 0.29003423f;
      sa[1057] = -0.108763196f;
      sa[1058] = 0.27705264f;
      sa[1059] = -0.06865414f;
      sa[1060] = -0.19426434f;
      sa[1061] = 0.0300805f;
      sa[1062] = -5.5642595E-4f;
      sa[1063] = 0.20465204f;
      sa[1064] = 0.107098445f;
      sa[1065] = -0.034753323f;
      sa[1066] = 0.20314099f;
      sa[1067] = -0.31376994f;
      sa[1068] = -0.21251522f;
      sa[1069] = 0.27314404f;
      sa[1070] = -0.07374737f;
      sa[1071] = 0.14193912f;
      sa[1072] = -0.204426f;
      sa[1073] = 0.1325141f;
      sa[1074] = 0.19104809f;
      sa[1075] = -0.14283276f;
      sa[1076] = -0.17226404f;
      sa[1077] = 0.08561794f;
      sa[1078] = -0.02150478f;
      sa[1079] = -0.01797996f;
      sa[1080] = 0.15977804f;
      sa[1081] = 0.0967747f;
      sa[1082] = -0.37012047f;
      sa[1083] = -0.087331906f;
      sa[1084] = 0.29663253f;
      sa[1085] = -0.1583313f;
      sa[1086] = -0.23347105f;
      sa[1087] = -0.30612338f;
      sa[1088] = -0.23991528f;
      sa[1089] = 0.068551496f;
      sa[1090] = -0.23065697f;
      sa[1091] = 0.01642708f;
      sa[1092] = -0.2564312f;
      sa[1093] = -0.27980486f;
      sa[1094] = -0.014618779f;
      sa[1095] = -0.3248501f;
      sa[1096] = -0.018230751f;
      sa[1097] = -0.11568733f;
      sa[1098] = 0.12876791f;
      sa[1099] = -0.10284842f;
      sa[1100] = -0.14005755f;
      sa[1101] = 0.13337281f;
      sa[1102] = -0.16038686f;
      sa[1103] = 0.17183626f;
      sa[1104] = -0.3564627f;
      sa[1105] = -0.11626745f;
      sa[1106] = 0.03856657f;
      sa[1107] = 0.06939093f;
      sa[1108] = -0.20567222f;
      sa[1109] = 0.23491603f;
      sa[1110] = 0.15881284f;
      sa[1111] = -0.294501f;
      sa[1112] = 0.20738348f;
      sa[1113] = 0.19837517f;
      sa[1114] = 0.064383276f;
      sa[1115] = 0.20681143f;
      sa[1116] = 0.10986669f;
      sa[1117] = -0.05843736f;
      sa[1118] = -0.036030818f;
      sa[1119] = 0.09901101f;
      sa[1120] = 0.22433884f;
      sa[1121] = 0.11411123f;
      sa[1122] = 0.32626596f;
      sa[1123] = 0.29247323f;
      sa[1124] = 0.13233571f;
      sa[1125] = -0.07627561f;
      sa[1126] = 0.24223192f;
      sa[1127] = 0.19661742f;
      sa[1128] = 0.025419328f;
      sa[1129] = -0.06885512f;
      sa[1130] = 0.26642394f;
      sa[1131] = 0.3100505f;
      sa[1132] = -0.045781363f;
      sa[1133] = -0.11299456f;
      sa[1134] = 0.13874201f;
      sa[1135] = -0.14762658f;
      sa[1136] = -0.005291979f;
      sa[1137] = 0.24185595f;
      sa[1138] = -0.021309117f;
      sa[1139] = 0.171268f;
      sa[1140] = 0.25828418f;
      sa[1141] = -0.15988411f;
      sa[1142] = -0.055117346f;
      sa[1143] = -0.22434095f;
      sa[1144] = -0.2602814f;
      sa[1145] = 0.15822095f;
      sa[1146] = 0.21713667f;
      sa[1147] = -0.14107127f;
      sa[1148] = 0.0017908537f;
      sa[1149] = -0.06468922f;
      sa[1150] = -0.27121156f;
      sa[1151] = -0.284212f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2516387f;
      sa[1] = -0.05863131f;
      sa[2] = -0.5787879f;
      sa[3] = -0.9825125f;
      sa[4] = 0.1539701f;
      sa[5] = 0.30694917f;
      sa[6] = 1.2330573f;
      sa[7] = -0.71876734f;
      sa[8] = -0.89676064f;
      sa[9] = 0.7181991f;
      sa[10] = -0.116182424f;
      sa[11] = 0.45204177f;
      sa[12] = 0.14220318f;
      sa[13] = -0.001295453f;
      sa[14] = -1.2891483f;
      sa[15] = 1.1558316f;
      sa[16] = 1.6035271f;
      sa[17] = -0.43079427f;
      sa[18] = 0.10304522f;
      sa[19] = -0.41545436f;
      sa[20] = 1.1612469f;
      sa[21] = 0.039711237f;
      sa[22] = -0.9546377f;
      sa[23] = 0.7801041f;
      sa[24] = -1.2803758f;
      sa[25] = 0.4979899f;
      sa[26] = -0.28014958f;
      sa[27] = 1.5429066f;
      sa[28] = -1.3482169f;
      sa[29] = -0.3975176f;
      sa[30] = 0.4559691f;
      sa[31] = -0.6221967f;
      sa[32] = -1.1632406f;
      sa[33] = -1.5845737f;
      sa[34] = 0.088631585f;
      sa[35] = 1.349005f;
      sa[36] = -0.35393232f;
      sa[37] = -0.059685886f;
      sa[38] = 0.19296159f;
      sa[39] = 0.777664f;
      sa[40] = -0.75837463f;
      sa[41] = -1.3760412f;
      sa[42] = -1.0498531f;
      sa[43] = -1.5531399f;
      sa[44] = -0.025239844f;
      sa[45] = -1.3732429f;
      sa[46] = 1.2191197f;
      sa[47] = 1.2450382f;
      sa[48] = -1.3614559f;
      sa[49] = -1.1210794f;
      sa[50] = 0.41528964f;
      sa[51] = -0.33689508f;
      sa[52] = 0.71752137f;
      sa[53] = 0.81722575f;
      sa[54] = -0.25610337f;
      sa[55] = 1.1389331f;
      sa[56] = -1.1588495f;
      sa[57] = -1.0929395f;
      sa[58] = 0.030553866f;
      sa[59] = -0.26972842f;
      sa[60] = 1.389365f;
      sa[61] = -0.6653817f;
      sa[62] = -0.4691752f;
      sa[63] = 0.65831894f;
      sa[64] = 1.3232049f;
      sa[65] = -0.6957433f;
      sa[66] = 0.54174566f;
      sa[67] = 1.579454f;
      sa[68] = 0.62715477f;
      sa[69] = -1.1678443f;
      sa[70] = -1.4568244f;
      sa[71] = -0.52553207f;
      sa[72] = -1.3233893f;
      sa[73] = 1.2666473f;
      sa[74] = 1.3485984f;
      sa[75] = -0.30299473f;
      sa[76] = 0.8930472f;
      sa[77] = 0.3945035f;
      sa[78] = -1.5465672f;
      sa[79] = 0.89290917f;
      sa[80] = -0.8223038f;
      sa[81] = 0.17720011f;
      sa[82] = 0.8449624f;
      sa[83] = -0.91375786f;
      sa[84] = -1.5757788f;
      sa[85] = -1.2783979f;
      sa[86] = 0.40527242f;
      sa[87] = 1.138747f;
      sa[88] = -1.6031086f;
      sa[89] = -0.7803659f;
      sa[90] = -1.0624453f;
      sa[91] = 1.3776081f;
      sa[92] = -0.32905304f;
      sa[93] = 0.21973129f;
      sa[94] = -1.5440116f;
      sa[95] = -0.17500882f;
      sa[96] = -1.002459f;
      sa[97] = 0.17515488f;
      sa[98] = -0.094867654f;
      sa[99] = 0.3556507f;
      sa[100] = -1.2662328f;
      sa[101] = -0.5075806f;
      sa[102] = 1.144516f;
      sa[103] = 0.066381775f;
      sa[104] = -0.21658291f;
      sa[105] = -0.747823f;
      sa[106] = 1.3655465f;
      sa[107] = 1.2241893f;
      sa[108] = 0.85972714f;
      sa[109] = 0.2424674f;
      sa[110] = 0.7373346f;
      sa[111] = -0.87570363f;
      sa[112] = -1.1630841f;
      sa[113] = 0.22629072f;
      sa[114] = 0.08379652f;
      sa[115] = -0.41989374f;
      sa[116] = 1.1217798f;
      sa[117] = 0.021823987f;
      sa[118] = -1.4293739f;
      sa[119] = -0.73650163f;
      sa[120] = -0.3585963f;
      sa[121] = 1.0155827f;
      sa[122] = -0.07208353f;
      sa[123] = 0.26491427f;
      sa[124] = -0.6894609f;
      sa[125] = 0.7789932f;
      sa[126] = -1.0782641f;
      sa[127] = 0.39438745f;
      sa[128] = -1.0123829f;
      sa[129] = 0.78764206f;
      sa[130] = -0.42355114f;
      sa[131] = 0.8572428f;
      sa[132] = 0.43108988f;
      sa[133] = 0.6623294f;
      sa[134] = 0.60409945f;
      sa[135] = -1.0589287f;
      sa[136] = 0.563505f;
      sa[137] = -0.59574395f;
      sa[138] = -0.12265625f;
      sa[139] = 1.1562357f;
      sa[140] = -0.63913465f;
      sa[141] = -0.11160931f;
      sa[142] = 0.2556817f;
      sa[143] = -0.78958684f;
      sa[144] = 0.98929375f;
      sa[145] = -0.7851441f;
      sa[146] = 0.066915005f;
      sa[147] = -0.25127533f;
      sa[148] = -0.84985673f;
      sa[149] = 1.1166918f;
      sa[150] = -1.1968046f;
      sa[151] = -1.6436944f;
      sa[152] = 1.5705259f;
      sa[153] = -0.5714354f;
      sa[154] = 1.3744293f;
      sa[155] = -1.4989743f;
      sa[156] = -1.4986682f;
      sa[157] = -1.1126088f;
      sa[158] = -0.14851108f;
      sa[159] = -0.6404268f;
      sa[160] = 1.3558941f;
      sa[161] = -1.1807458f;
      sa[162] = 1.5993875f;
      sa[163] = -0.74112445f;
      sa[164] = 0.7354977f;
      sa[165] = -0.54789335f;
      sa[166] = 1.167961f;
      sa[167] = -1.4223274f;
      sa[168] = 1.0574024f;
      sa[169] = -1.5729178f;
      sa[170] = 1.0403913f;
      sa[171] = 0.8869025f;
      sa[172] = 1.5006337f;
      sa[173] = 1.5059884f;
      sa[174] = -0.08431727f;
      sa[175] = 0.027989257f;
      sa[176] = -0.7952558f;
      sa[177] = 0.07590745f;
      sa[178] = -1.2707807f;
      sa[179] = -0.118782155f;
      sa[180] = -1.360088f;
      sa[181] = -0.98974276f;
      sa[182] = 0.24626946f;
      sa[183] = -0.96942246f;
      sa[184] = 1.4932112f;
      sa[185] = 1.29293f;
      sa[186] = -0.50007707f;
      sa[187] = -0.94357675f;
      sa[188] = -0.7384424f;
      sa[189] = -0.77926266f;
      sa[190] = -1.4621314f;
      sa[191] = -1.0425673f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


