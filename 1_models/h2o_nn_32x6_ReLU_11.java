/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:06.121+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_11 > h2o_nn_32x6_ReLU_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_11", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-1399623292930784016L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.43187735253692955;
      sa[1] = 0.5053884047027677;
      sa[2] = 0.6026502503517743;
      sa[3] = 0.5012746289870655;
      sa[4] = 0.5045689327309298;
      sa[5] = 0.5195847354669171;
      sa[6] = 0.45050536780177125;
      sa[7] = 0.426690027110661;
      sa[8] = 0.5539707661332304;
      sa[9] = 0.4321474678318598;
      sa[10] = 0.2890284466701538;
      sa[11] = 0.5509615879979276;
      sa[12] = 0.5836065094540344;
      sa[13] = 0.44217242168254717;
      sa[14] = 0.5659293552730155;
      sa[15] = 0.5790123482798912;
      sa[16] = 0.4437879921285265;
      sa[17] = 0.5735565025415595;
      sa[18] = 0.4261808815945725;
      sa[19] = 0.5573140577552735;
      sa[20] = 0.545081422138033;
      sa[21] = 0.5262953248829635;
      sa[22] = 0.40655217204273375;
      sa[23] = 0.4883079346969915;
      sa[24] = 0.5078617631357659;
      sa[25] = 0.4907509666134153;
      sa[26] = 0.40445053150353066;
      sa[27] = 0.5282954533724544;
      sa[28] = 0.5299494690216012;
      sa[29] = 0.3888627411790966;
      sa[30] = 0.6078465980832902;
      sa[31] = 0.4739394324275247;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0220675200170341;
      sa[1] = 0.00468650904319366;
      sa[2] = -0.053597437458388825;
      sa[3] = -0.01959054609152556;
      sa[4] = -0.031247388468030237;
      sa[5] = 0.01717577313804995;
    }
  }
}
class h2o_nn_32x6_ReLU_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.058535185f;
      sa[1] = 0.22245662f;
      sa[2] = 0.118597515f;
      sa[3] = 0.08162704f;
      sa[4] = -0.14588663f;
      sa[5] = -0.1765555f;
      sa[6] = -0.104874745f;
      sa[7] = 0.27236545f;
      sa[8] = 0.041711643f;
      sa[9] = -0.1156573f;
      sa[10] = -0.046464417f;
      sa[11] = -0.27764392f;
      sa[12] = 0.042407054f;
      sa[13] = -0.28320384f;
      sa[14] = -0.23917578f;
      sa[15] = -0.051042087f;
      sa[16] = 0.044186026f;
      sa[17] = 0.15924731f;
      sa[18] = -0.1735034f;
      sa[19] = 0.24450491f;
      sa[20] = 0.2062961f;
      sa[21] = -0.28799185f;
      sa[22] = 0.18214278f;
      sa[23] = -0.18458955f;
      sa[24] = 0.26362672f;
      sa[25] = 0.12149066f;
      sa[26] = -0.15816301f;
      sa[27] = 0.4097168f;
      sa[28] = 0.22481336f;
      sa[29] = -0.2128583f;
      sa[30] = -0.14043653f;
      sa[31] = 0.15453641f;
      sa[32] = 0.20964289f;
      sa[33] = -0.22749913f;
      sa[34] = 0.092892155f;
      sa[35] = -0.059634242f;
      sa[36] = 0.17223506f;
      sa[37] = 0.19590755f;
      sa[38] = -0.2746008f;
      sa[39] = 0.44890988f;
      sa[40] = 0.052260555f;
      sa[41] = 0.006083427f;
      sa[42] = -0.11687308f;
      sa[43] = 0.12389876f;
      sa[44] = 0.3161496f;
      sa[45] = -0.50372064f;
      sa[46] = 0.04657533f;
      sa[47] = 0.046460323f;
      sa[48] = 0.21600088f;
      sa[49] = 0.33146295f;
      sa[50] = 0.2201603f;
      sa[51] = -0.24807729f;
      sa[52] = -0.15884387f;
      sa[53] = 0.06475003f;
      sa[54] = 0.14370526f;
      sa[55] = -0.056972396f;
      sa[56] = -0.23233557f;
      sa[57] = -0.37590033f;
      sa[58] = 0.19671117f;
      sa[59] = -0.30686662f;
      sa[60] = -0.27776587f;
      sa[61] = 0.18016684f;
      sa[62] = 0.13357982f;
      sa[63] = -0.23663008f;
      sa[64] = 0.10265169f;
      sa[65] = 0.09944772f;
      sa[66] = 0.074076645f;
      sa[67] = 0.1080159f;
      sa[68] = -0.060906984f;
      sa[69] = -0.035859235f;
      sa[70] = -0.029849533f;
      sa[71] = 0.2855216f;
      sa[72] = -0.2500486f;
      sa[73] = 0.2138055f;
      sa[74] = -0.017843207f;
      sa[75] = -0.05718131f;
      sa[76] = -0.1806878f;
      sa[77] = -0.085866705f;
      sa[78] = -0.056710023f;
      sa[79] = 0.22309452f;
      sa[80] = -0.31779376f;
      sa[81] = 0.07063219f;
      sa[82] = 0.061622478f;
      sa[83] = 0.083090596f;
      sa[84] = 0.03631371f;
      sa[85] = -0.15821457f;
      sa[86] = 0.18384503f;
      sa[87] = 0.30362108f;
      sa[88] = 0.27476192f;
      sa[89] = 0.20246086f;
      sa[90] = -0.098354094f;
      sa[91] = 0.038227625f;
      sa[92] = 0.14235137f;
      sa[93] = -0.16118455f;
      sa[94] = -0.0905028f;
      sa[95] = -0.112037346f;
      sa[96] = 0.21266207f;
      sa[97] = 0.059940957f;
      sa[98] = 0.21708561f;
      sa[99] = -0.06149349f;
      sa[100] = -0.030018091f;
      sa[101] = -0.16248997f;
      sa[102] = -0.23145674f;
      sa[103] = -0.00970539f;
      sa[104] = -0.025782831f;
      sa[105] = -0.10251755f;
      sa[106] = -0.2058923f;
      sa[107] = 0.10477853f;
      sa[108] = 0.14827023f;
      sa[109] = -0.16135213f;
      sa[110] = -0.08611419f;
      sa[111] = 0.13337462f;
      sa[112] = 0.07827984f;
      sa[113] = 0.019095836f;
      sa[114] = -0.05805738f;
      sa[115] = -0.095717676f;
      sa[116] = -0.23088786f;
      sa[117] = -0.109759375f;
      sa[118] = -0.36652344f;
      sa[119] = -0.047710814f;
      sa[120] = 0.23108357f;
      sa[121] = 0.24341024f;
      sa[122] = 0.4517246f;
      sa[123] = 0.33592552f;
      sa[124] = 0.3033193f;
      sa[125] = 0.18367061f;
      sa[126] = -0.3197203f;
      sa[127] = -0.4902892f;
      sa[128] = 0.06806543f;
      sa[129] = 0.11612659f;
      sa[130] = -0.058375638f;
      sa[131] = 0.38487327f;
      sa[132] = 0.17547765f;
      sa[133] = -0.24926126f;
      sa[134] = 0.01538141f;
      sa[135] = -0.42163005f;
      sa[136] = -0.28877914f;
      sa[137] = -0.077958584f;
      sa[138] = 0.061166555f;
      sa[139] = -0.07709203f;
      sa[140] = -0.060572814f;
      sa[141] = -0.13919698f;
      sa[142] = 0.08366374f;
      sa[143] = -0.303291f;
      sa[144] = 0.1682267f;
      sa[145] = -0.1279885f;
      sa[146] = -0.41048774f;
      sa[147] = 0.122286f;
      sa[148] = 0.120922856f;
      sa[149] = 0.13032125f;
      sa[150] = 0.23258138f;
      sa[151] = -0.19297618f;
      sa[152] = -0.060671486f;
      sa[153] = 0.35149437f;
      sa[154] = 0.27840105f;
      sa[155] = -0.11995591f;
      sa[156] = 0.1488504f;
      sa[157] = -0.20426996f;
      sa[158] = 0.10803611f;
      sa[159] = 0.17112485f;
      sa[160] = 0.002376817f;
      sa[161] = 0.2555883f;
      sa[162] = 0.036177363f;
      sa[163] = -0.21695729f;
      sa[164] = 0.23107313f;
      sa[165] = -0.060672853f;
      sa[166] = -0.07340047f;
      sa[167] = -0.008434031f;
      sa[168] = 0.15583785f;
      sa[169] = 0.30487356f;
      sa[170] = 0.09430931f;
      sa[171] = -0.13546608f;
      sa[172] = -0.076919205f;
      sa[173] = -0.15799816f;
      sa[174] = -0.05110256f;
      sa[175] = -0.22168742f;
      sa[176] = 0.016373558f;
      sa[177] = 0.010831387f;
      sa[178] = -0.10838721f;
      sa[179] = 0.059632957f;
      sa[180] = -0.04585941f;
      sa[181] = -0.299418f;
      sa[182] = -0.30975455f;
      sa[183] = 0.15747388f;
      sa[184] = 0.28291973f;
      sa[185] = 0.17105429f;
      sa[186] = -0.3119196f;
      sa[187] = 0.0992466f;
      sa[188] = -3.759735E-4f;
      sa[189] = 0.16491976f;
      sa[190] = 0.07919109f;
      sa[191] = -0.08606366f;
      sa[192] = -0.107585646f;
      sa[193] = 0.23330264f;
      sa[194] = 0.08228521f;
      sa[195] = 0.2952921f;
      sa[196] = 0.209674f;
      sa[197] = 0.003545229f;
      sa[198] = 0.26040527f;
      sa[199] = -0.11645182f;
      sa[200] = 0.01211532f;
      sa[201] = -0.27986532f;
      sa[202] = 0.07835532f;
      sa[203] = -0.0035107587f;
      sa[204] = -0.26792607f;
      sa[205] = 0.27493414f;
      sa[206] = 0.31762752f;
      sa[207] = 0.052715372f;
      sa[208] = -0.21956243f;
      sa[209] = -0.036491618f;
      sa[210] = -0.24614196f;
      sa[211] = -0.2037559f;
      sa[212] = 0.25775486f;
      sa[213] = -0.305866f;
      sa[214] = -0.03788967f;
      sa[215] = 0.12298165f;
      sa[216] = 0.100887485f;
      sa[217] = 0.14351541f;
      sa[218] = -0.1801543f;
      sa[219] = 0.31043214f;
      sa[220] = -0.17151023f;
      sa[221] = 0.12378249f;
      sa[222] = 0.18932566f;
      sa[223] = 0.11420175f;
      sa[224] = 0.12236148f;
      sa[225] = 0.29439542f;
      sa[226] = -0.13517195f;
      sa[227] = 0.2731497f;
      sa[228] = 0.10282544f;
      sa[229] = 0.092018f;
      sa[230] = 0.18464476f;
      sa[231] = -0.27193063f;
      sa[232] = -0.2017001f;
      sa[233] = 0.11918014f;
      sa[234] = 0.16529919f;
      sa[235] = -0.19693613f;
      sa[236] = -0.036027312f;
      sa[237] = -0.20897435f;
      sa[238] = -0.24202937f;
      sa[239] = 0.11732383f;
      sa[240] = 0.027461275f;
      sa[241] = -0.20502083f;
      sa[242] = -0.035571337f;
      sa[243] = -0.20601319f;
      sa[244] = -0.16413264f;
      sa[245] = -0.08051999f;
      sa[246] = -0.13747674f;
      sa[247] = -0.006318153f;
      sa[248] = 0.24104255f;
      sa[249] = 0.23080897f;
      sa[250] = -0.1551727f;
      sa[251] = -0.07622599f;
      sa[252] = -0.19163f;
      sa[253] = -0.17850162f;
      sa[254] = -0.1601133f;
      sa[255] = 0.17426799f;
      sa[256] = -0.18323568f;
      sa[257] = 0.29600045f;
      sa[258] = -0.1692643f;
      sa[259] = -0.21546488f;
      sa[260] = -0.10092652f;
      sa[261] = -0.07968679f;
      sa[262] = -0.13706288f;
      sa[263] = 0.46054396f;
      sa[264] = -0.12308732f;
      sa[265] = 0.09663185f;
      sa[266] = -0.205716f;
      sa[267] = -0.17535405f;
      sa[268] = 0.199725f;
      sa[269] = -0.13344353f;
      sa[270] = -0.34204537f;
      sa[271] = 0.26806265f;
      sa[272] = -0.08378048f;
      sa[273] = -0.1463832f;
      sa[274] = 0.11001829f;
      sa[275] = 8.770591E-4f;
      sa[276] = 0.060736194f;
      sa[277] = -0.18666095f;
      sa[278] = -0.28248298f;
      sa[279] = 0.19164045f;
      sa[280] = -0.14603554f;
      sa[281] = 0.23988314f;
      sa[282] = -0.086599536f;
      sa[283] = -0.030903151f;
      sa[284] = -0.0016759813f;
      sa[285] = -0.02678983f;
      sa[286] = 0.17564286f;
      sa[287] = 0.09184656f;
      sa[288] = -0.29887816f;
      sa[289] = -0.16210923f;
      sa[290] = -0.03919133f;
      sa[291] = 0.05622026f;
      sa[292] = 0.1466386f;
      sa[293] = -0.035084914f;
      sa[294] = 0.08193867f;
      sa[295] = 0.29010758f;
      sa[296] = 0.12772462f;
      sa[297] = 0.21566401f;
      sa[298] = 0.07487147f;
      sa[299] = -0.06435565f;
      sa[300] = 0.035899647f;
      sa[301] = 0.0067987256f;
      sa[302] = 0.20405842f;
      sa[303] = 0.13489111f;
      sa[304] = -0.13109988f;
      sa[305] = 0.08730675f;
      sa[306] = 0.2995239f;
      sa[307] = -0.3031216f;
      sa[308] = 0.05266723f;
      sa[309] = 0.11377562f;
      sa[310] = 0.26356927f;
      sa[311] = 0.3805976f;
      sa[312] = -0.10469995f;
      sa[313] = -0.105679825f;
      sa[314] = -0.077618666f;
      sa[315] = -0.1252471f;
      sa[316] = -0.03387842f;
      sa[317] = -0.08034877f;
      sa[318] = 0.13642874f;
      sa[319] = 0.34860846f;
      sa[320] = -0.061105527f;
      sa[321] = 0.051070184f;
      sa[322] = 0.3150814f;
      sa[323] = -0.09918832f;
      sa[324] = 0.0059387586f;
      sa[325] = 0.26705882f;
      sa[326] = -0.44780973f;
      sa[327] = 0.13671125f;
      sa[328] = -0.12101522f;
      sa[329] = 0.18367843f;
      sa[330] = -0.22332682f;
      sa[331] = -0.098559245f;
      sa[332] = -0.24144433f;
      sa[333] = 0.024277609f;
      sa[334] = -0.111348614f;
      sa[335] = 0.21459512f;
      sa[336] = -0.22016826f;
      sa[337] = -0.20488313f;
      sa[338] = 0.18521193f;
      sa[339] = -0.29884237f;
      sa[340] = -0.40005454f;
      sa[341] = -0.47167513f;
      sa[342] = 0.10131929f;
      sa[343] = -0.09342496f;
      sa[344] = -0.21345097f;
      sa[345] = 0.14800884f;
      sa[346] = 0.16180395f;
      sa[347] = -0.31205618f;
      sa[348] = 0.13524331f;
      sa[349] = -0.3074238f;
      sa[350] = -0.25793493f;
      sa[351] = 0.15113895f;
      sa[352] = 0.09912804f;
      sa[353] = -0.11277479f;
      sa[354] = 0.004014957f;
      sa[355] = -0.04405456f;
      sa[356] = -0.010653124f;
      sa[357] = 0.25501835f;
      sa[358] = -0.40336904f;
      sa[359] = -0.12138875f;
      sa[360] = 0.010449354f;
      sa[361] = -0.024796955f;
      sa[362] = -0.16440801f;
      sa[363] = 0.20759895f;
      sa[364] = -0.0900343f;
      sa[365] = -0.16819184f;
      sa[366] = -0.004218665f;
      sa[367] = -0.20867005f;
      sa[368] = -0.21007894f;
      sa[369] = 0.23388743f;
      sa[370] = -0.12074313f;
      sa[371] = 0.42563182f;
      sa[372] = -0.009633268f;
      sa[373] = 0.30249938f;
      sa[374] = -0.16897309f;
      sa[375] = -0.23782308f;
      sa[376] = -0.2588657f;
      sa[377] = -0.3055861f;
      sa[378] = 0.049141552f;
      sa[379] = -0.014118951f;
      sa[380] = -0.12263557f;
      sa[381] = -0.11606602f;
      sa[382] = -0.018831959f;
      sa[383] = -0.13905713f;
      sa[384] = -0.027085915f;
      sa[385] = 0.072657675f;
      sa[386] = -0.35624176f;
      sa[387] = -0.15346041f;
      sa[388] = 0.07506095f;
      sa[389] = -0.019628573f;
      sa[390] = 0.023373855f;
      sa[391] = -0.086916946f;
      sa[392] = 0.20675679f;
      sa[393] = 0.45457223f;
      sa[394] = -0.04553448f;
      sa[395] = 0.23434377f;
      sa[396] = 0.29440612f;
      sa[397] = -0.3035514f;
      sa[398] = 0.079371326f;
      sa[399] = 0.31985715f;
      sa[400] = 0.21995234f;
      sa[401] = 0.34696934f;
      sa[402] = -0.101181895f;
      sa[403] = 0.29648638f;
      sa[404] = 0.25930068f;
      sa[405] = -0.3489328f;
      sa[406] = -0.025012547f;
      sa[407] = 0.1337534f;
      sa[408] = -0.20626967f;
      sa[409] = -0.13800754f;
      sa[410] = -0.099738814f;
      sa[411] = 0.17106171f;
      sa[412] = -0.14724277f;
      sa[413] = 0.011231919f;
      sa[414] = 0.104656294f;
      sa[415] = 0.21747684f;
      sa[416] = -0.24128573f;
      sa[417] = -0.03031458f;
      sa[418] = -0.03006693f;
      sa[419] = 0.18887657f;
      sa[420] = 0.24930882f;
      sa[421] = 0.2457867f;
      sa[422] = 0.27954525f;
      sa[423] = -0.20729724f;
      sa[424] = 0.07486536f;
      sa[425] = -0.05969897f;
      sa[426] = -0.1977901f;
      sa[427] = 0.18934995f;
      sa[428] = -0.0155487135f;
      sa[429] = -0.2360503f;
      sa[430] = 0.29027677f;
      sa[431] = -0.06550549f;
      sa[432] = -0.064953156f;
      sa[433] = 0.087125376f;
      sa[434] = 0.38700956f;
      sa[435] = -0.020604828f;
      sa[436] = -0.21062857f;
      sa[437] = -0.20085678f;
      sa[438] = 0.033314787f;
      sa[439] = 0.03783014f;
      sa[440] = 0.24224356f;
      sa[441] = -0.19420694f;
      sa[442] = 0.12918346f;
      sa[443] = 0.033685047f;
      sa[444] = -0.21159714f;
      sa[445] = 0.06697843f;
      sa[446] = 0.19916955f;
      sa[447] = 0.014516014f;
      sa[448] = 0.21371052f;
      sa[449] = 0.24890307f;
      sa[450] = -0.16079025f;
      sa[451] = 0.13410586f;
      sa[452] = 0.18568528f;
      sa[453] = -0.007393963f;
      sa[454] = -0.092925765f;
      sa[455] = -0.051522806f;
      sa[456] = 0.031997092f;
      sa[457] = -0.012334538f;
      sa[458] = -0.2133188f;
      sa[459] = 0.34518397f;
      sa[460] = 0.20816019f;
      sa[461] = 0.27645576f;
      sa[462] = 0.08552209f;
      sa[463] = 0.20128006f;
      sa[464] = -0.26676837f;
      sa[465] = 0.24432434f;
      sa[466] = -0.02296375f;
      sa[467] = 0.07573598f;
      sa[468] = -0.057665467f;
      sa[469] = 0.2659734f;
      sa[470] = 0.21010037f;
      sa[471] = 0.13287726f;
      sa[472] = 0.018169256f;
      sa[473] = -0.07508543f;
      sa[474] = -0.029923698f;
      sa[475] = 0.22140767f;
      sa[476] = 0.07805288f;
      sa[477] = -0.12595093f;
      sa[478] = 0.17093961f;
      sa[479] = -0.21707068f;
      sa[480] = -0.34375384f;
      sa[481] = -0.19470303f;
      sa[482] = -0.2879791f;
      sa[483] = 0.15651579f;
      sa[484] = 0.24522048f;
      sa[485] = 0.119750865f;
      sa[486] = 0.023099825f;
      sa[487] = -0.18109356f;
      sa[488] = -0.24216402f;
      sa[489] = 0.03536265f;
      sa[490] = -0.01204494f;
      sa[491] = -0.25157422f;
      sa[492] = 0.2401032f;
      sa[493] = 0.2326097f;
      sa[494] = -0.16222903f;
      sa[495] = 0.13784434f;
      sa[496] = -0.07899717f;
      sa[497] = 0.003679031f;
      sa[498] = 0.14439717f;
      sa[499] = 0.09250326f;
      sa[500] = 0.006995584f;
      sa[501] = 0.014135676f;
      sa[502] = 0.38787806f;
      sa[503] = -0.0039997664f;
      sa[504] = -0.17794195f;
      sa[505] = -0.20733076f;
      sa[506] = 0.37484592f;
      sa[507] = -0.120151415f;
      sa[508] = 0.108063884f;
      sa[509] = 0.23217428f;
      sa[510] = 0.21244973f;
      sa[511] = -0.016153343f;
      sa[512] = 0.05238641f;
      sa[513] = -0.110632636f;
      sa[514] = 0.17527476f;
      sa[515] = -0.33805642f;
      sa[516] = 0.05084172f;
      sa[517] = 0.11274123f;
      sa[518] = 0.17930716f;
      sa[519] = -0.06041284f;
      sa[520] = 0.30122414f;
      sa[521] = 0.17990756f;
      sa[522] = 0.102571525f;
      sa[523] = 0.19040217f;
      sa[524] = 0.20358163f;
      sa[525] = 0.16691366f;
      sa[526] = 0.04607408f;
      sa[527] = -0.027932199f;
      sa[528] = 0.06538423f;
      sa[529] = 0.12725301f;
      sa[530] = -0.1920982f;
      sa[531] = 0.029812953f;
      sa[532] = 0.14415355f;
      sa[533] = 0.10871113f;
      sa[534] = 0.13502628f;
      sa[535] = -0.05931062f;
      sa[536] = 0.017001173f;
      sa[537] = -0.30203548f;
      sa[538] = 0.26829308f;
      sa[539] = 0.3758589f;
      sa[540] = -0.26255846f;
      sa[541] = -0.11355156f;
      sa[542] = -0.023393711f;
      sa[543] = -0.47534582f;
      sa[544] = 0.13854046f;
      sa[545] = 0.04749794f;
      sa[546] = 0.063153885f;
      sa[547] = 0.08662087f;
      sa[548] = 0.03490182f;
      sa[549] = 0.28967464f;
      sa[550] = -0.041393775f;
      sa[551] = -0.052659094f;
      sa[552] = 0.06983151f;
      sa[553] = -0.11748824f;
      sa[554] = -0.1508568f;
      sa[555] = -0.14188643f;
      sa[556] = -0.18702784f;
      sa[557] = -0.15698873f;
      sa[558] = -0.1325982f;
      sa[559] = 0.19288924f;
      sa[560] = -0.12930922f;
      sa[561] = 0.018964386f;
      sa[562] = 0.26000932f;
      sa[563] = 0.030801514f;
      sa[564] = 0.15715891f;
      sa[565] = -2.5971126E-4f;
      sa[566] = 0.2283636f;
      sa[567] = 0.2491353f;
      sa[568] = 0.009077569f;
      sa[569] = 0.08254512f;
      sa[570] = -0.05520558f;
      sa[571] = -0.03973216f;
      sa[572] = -0.11742315f;
      sa[573] = 0.2207531f;
      sa[574] = 0.057355683f;
      sa[575] = -0.28826824f;
      sa[576] = -0.082476676f;
      sa[577] = -0.0122038415f;
      sa[578] = -0.14456487f;
      sa[579] = 0.0996446f;
      sa[580] = 0.082127616f;
      sa[581] = -0.14267108f;
      sa[582] = 0.024424102f;
      sa[583] = 0.03712896f;
      sa[584] = 0.1614057f;
      sa[585] = 0.12223539f;
      sa[586] = -0.101780824f;
      sa[587] = -0.12510015f;
      sa[588] = 0.06865441f;
      sa[589] = 0.11442803f;
      sa[590] = -0.051502857f;
      sa[591] = 0.028833242f;
      sa[592] = -0.52584934f;
      sa[593] = -0.20928079f;
      sa[594] = 0.01736341f;
      sa[595] = -0.015160328f;
      sa[596] = 0.24077569f;
      sa[597] = -0.03521607f;
      sa[598] = 0.15470599f;
      sa[599] = -0.026001994f;
      sa[600] = -0.42188624f;
      sa[601] = 0.24670106f;
      sa[602] = 0.025288511f;
      sa[603] = 0.24458246f;
      sa[604] = 0.23543426f;
      sa[605] = 0.20600048f;
      sa[606] = 0.20830429f;
      sa[607] = 0.043326784f;
      sa[608] = 0.02184033f;
      sa[609] = 0.06514911f;
      sa[610] = 0.13720061f;
      sa[611] = -0.0074415547f;
      sa[612] = -0.038987104f;
      sa[613] = 0.08652096f;
      sa[614] = 0.10653746f;
      sa[615] = 0.122602604f;
      sa[616] = 0.07611932f;
      sa[617] = -0.2072215f;
      sa[618] = -0.14086339f;
      sa[619] = -0.13131368f;
      sa[620] = -0.010068803f;
      sa[621] = -0.35159212f;
      sa[622] = -0.32111406f;
      sa[623] = -0.37338337f;
      sa[624] = -0.08758675f;
      sa[625] = 0.24806564f;
      sa[626] = -0.047156207f;
      sa[627] = 0.15807563f;
      sa[628] = -0.28422078f;
      sa[629] = -0.117383726f;
      sa[630] = -0.38706094f;
      sa[631] = 0.27703714f;
      sa[632] = 0.07710766f;
      sa[633] = -0.148537f;
      sa[634] = -0.17957382f;
      sa[635] = 0.07550962f;
      sa[636] = -0.12830062f;
      sa[637] = -0.17942017f;
      sa[638] = -0.15523311f;
      sa[639] = 0.009892864f;
      sa[640] = -0.17274112f;
      sa[641] = -0.290737f;
      sa[642] = 0.20031525f;
      sa[643] = -0.37289193f;
      sa[644] = -0.059610642f;
      sa[645] = -0.26662266f;
      sa[646] = 0.29622293f;
      sa[647] = -0.2688925f;
      sa[648] = 0.031747848f;
      sa[649] = -0.051636584f;
      sa[650] = 0.025615605f;
      sa[651] = -0.087099984f;
      sa[652] = 0.043876275f;
      sa[653] = -0.18678191f;
      sa[654] = -0.14006849f;
      sa[655] = -0.23480909f;
      sa[656] = 0.15578556f;
      sa[657] = 0.043292545f;
      sa[658] = -0.3575536f;
      sa[659] = -0.23916623f;
      sa[660] = -0.2940741f;
      sa[661] = -0.15420477f;
      sa[662] = -0.27432346f;
      sa[663] = 0.107250445f;
      sa[664] = -0.257401f;
      sa[665] = 0.10904665f;
      sa[666] = -0.10713783f;
      sa[667] = -0.28439865f;
      sa[668] = 0.21844883f;
      sa[669] = -0.14420643f;
      sa[670] = 0.12170888f;
      sa[671] = -0.015329417f;
      sa[672] = -0.3223309f;
      sa[673] = 0.13001229f;
      sa[674] = 0.19628683f;
      sa[675] = -0.25805423f;
      sa[676] = -0.16066436f;
      sa[677] = -0.25077763f;
      sa[678] = 0.12470304f;
      sa[679] = -0.16118018f;
      sa[680] = 0.13877939f;
      sa[681] = 0.12878524f;
      sa[682] = -0.10184533f;
      sa[683] = -0.13092661f;
      sa[684] = -0.08485469f;
      sa[685] = 0.03109913f;
      sa[686] = 0.014141007f;
      sa[687] = -0.27577668f;
      sa[688] = -0.2500448f;
      sa[689] = -0.21316095f;
      sa[690] = -0.027223764f;
      sa[691] = 0.18650337f;
      sa[692] = -0.21115083f;
      sa[693] = -0.11002975f;
      sa[694] = 0.3170581f;
      sa[695] = -0.06798488f;
      sa[696] = -0.043743365f;
      sa[697] = -0.1102529f;
      sa[698] = -0.14488085f;
      sa[699] = 0.34796816f;
      sa[700] = 0.26042315f;
      sa[701] = 0.32897642f;
      sa[702] = 0.31253278f;
      sa[703] = -0.100756206f;
      sa[704] = -0.24466407f;
      sa[705] = -0.036309298f;
      sa[706] = -0.13863268f;
      sa[707] = 0.15588365f;
      sa[708] = 0.120154895f;
      sa[709] = -0.22113588f;
      sa[710] = 0.31843752f;
      sa[711] = -0.18072052f;
      sa[712] = 0.06019417f;
      sa[713] = 0.17211568f;
      sa[714] = 0.21471097f;
      sa[715] = 0.18607935f;
      sa[716] = 0.031334646f;
      sa[717] = 0.10861718f;
      sa[718] = 0.0043725534f;
      sa[719] = 0.14525859f;
      sa[720] = -0.12891434f;
      sa[721] = 0.26676065f;
      sa[722] = -0.10371752f;
      sa[723] = -0.014813925f;
      sa[724] = 0.12074736f;
      sa[725] = -0.24295083f;
      sa[726] = -0.18260975f;
      sa[727] = -0.3717033f;
      sa[728] = 0.03161031f;
      sa[729] = -0.071880415f;
      sa[730] = 0.08722319f;
      sa[731] = -0.27404156f;
      sa[732] = 0.16389397f;
      sa[733] = 0.21507783f;
      sa[734] = -0.19333152f;
      sa[735] = 0.20534714f;
      sa[736] = 0.045094714f;
      sa[737] = 0.08314338f;
      sa[738] = -0.3615522f;
      sa[739] = -0.008502668f;
      sa[740] = -0.20065327f;
      sa[741] = -0.20183946f;
      sa[742] = 0.09156467f;
      sa[743] = -0.012752223f;
      sa[744] = 0.0060163205f;
      sa[745] = -0.23805985f;
      sa[746] = 0.04869468f;
      sa[747] = 0.033042964f;
      sa[748] = -0.07041134f;
      sa[749] = -0.1031012f;
      sa[750] = 0.24246345f;
      sa[751] = 0.24915506f;
      sa[752] = -0.116760865f;
      sa[753] = 0.13809991f;
      sa[754] = 0.03158047f;
      sa[755] = 0.22539884f;
      sa[756] = -0.15493828f;
      sa[757] = 0.22105174f;
      sa[758] = -0.23693898f;
      sa[759] = -0.121711835f;
      sa[760] = -0.082488775f;
      sa[761] = 0.060522527f;
      sa[762] = -0.06884797f;
      sa[763] = 0.12502757f;
      sa[764] = 0.11997429f;
      sa[765] = -0.10159907f;
      sa[766] = -0.23646505f;
      sa[767] = 0.09589376f;
      sa[768] = -0.14688025f;
      sa[769] = -0.24465618f;
      sa[770] = 0.025017753f;
      sa[771] = 0.057988472f;
      sa[772] = 0.068890765f;
      sa[773] = -0.20965803f;
      sa[774] = 0.13153024f;
      sa[775] = 0.2606121f;
      sa[776] = -0.05422836f;
      sa[777] = 0.05443147f;
      sa[778] = 0.1281442f;
      sa[779] = -0.10504619f;
      sa[780] = -0.062180046f;
      sa[781] = -0.008687085f;
      sa[782] = 0.15277807f;
      sa[783] = -0.23279855f;
      sa[784] = -0.10300266f;
      sa[785] = -0.09112312f;
      sa[786] = -0.0677306f;
      sa[787] = -0.18409385f;
      sa[788] = -0.29163808f;
      sa[789] = 0.100540094f;
      sa[790] = -0.08334118f;
      sa[791] = -0.019960728f;
      sa[792] = 0.15113614f;
      sa[793] = -0.10731872f;
      sa[794] = -0.11685393f;
      sa[795] = -0.22658212f;
      sa[796] = 0.17154442f;
      sa[797] = -0.27670413f;
      sa[798] = -0.30979273f;
      sa[799] = -0.20235391f;
      sa[800] = 0.14633536f;
      sa[801] = 0.18298751f;
      sa[802] = 0.29235443f;
      sa[803] = 0.20957208f;
      sa[804] = 0.22711669f;
      sa[805] = 0.23584892f;
      sa[806] = 0.28552327f;
      sa[807] = 0.24145323f;
      sa[808] = -0.04188991f;
      sa[809] = -0.14085293f;
      sa[810] = 0.11798027f;
      sa[811] = 0.16025025f;
      sa[812] = 0.17702584f;
      sa[813] = -0.3023347f;
      sa[814] = 0.10271307f;
      sa[815] = -0.08525386f;
      sa[816] = -0.09533073f;
      sa[817] = -0.1537792f;
      sa[818] = -0.022470973f;
      sa[819] = -0.09768604f;
      sa[820] = -0.29941508f;
      sa[821] = -0.23562606f;
      sa[822] = -0.33098587f;
      sa[823] = 0.056235895f;
      sa[824] = 0.096961625f;
      sa[825] = 0.38916227f;
      sa[826] = -0.30974016f;
      sa[827] = -0.38714355f;
      sa[828] = 0.1425683f;
      sa[829] = -0.0511844f;
      sa[830] = 0.17911102f;
      sa[831] = -0.093755126f;
      sa[832] = 0.09975032f;
      sa[833] = -0.005310292f;
      sa[834] = 0.15069282f;
      sa[835] = -0.25321773f;
      sa[836] = 0.20178846f;
      sa[837] = -0.06672973f;
      sa[838] = 0.086089f;
      sa[839] = -0.25006807f;
      sa[840] = 0.1712834f;
      sa[841] = 0.026211709f;
      sa[842] = 0.1145388f;
      sa[843] = -0.031852484f;
      sa[844] = 0.0056387815f;
      sa[845] = 0.13349651f;
      sa[846] = -0.2564705f;
      sa[847] = 0.121545315f;
      sa[848] = 0.28047517f;
      sa[849] = 0.305554f;
      sa[850] = 0.0075398744f;
      sa[851] = 0.10413118f;
      sa[852] = 0.18435445f;
      sa[853] = 0.12002594f;
      sa[854] = 0.18166955f;
      sa[855] = 0.39308175f;
      sa[856] = 0.1247355f;
      sa[857] = -0.13562186f;
      sa[858] = 0.082386054f;
      sa[859] = 0.03383828f;
      sa[860] = 0.23191512f;
      sa[861] = -0.118192725f;
      sa[862] = -0.16533992f;
      sa[863] = 0.045689113f;
      sa[864] = -0.28134456f;
      sa[865] = 0.20518771f;
      sa[866] = -0.19094361f;
      sa[867] = 0.12803844f;
      sa[868] = -0.18109274f;
      sa[869] = 0.24444741f;
      sa[870] = -0.043593056f;
      sa[871] = 0.30478677f;
      sa[872] = 0.18564078f;
      sa[873] = -0.105211295f;
      sa[874] = 0.07186315f;
      sa[875] = -0.25198993f;
      sa[876] = -0.19970228f;
      sa[877] = -0.12824634f;
      sa[878] = 0.07741055f;
      sa[879] = 0.2790439f;
      sa[880] = -0.06079453f;
      sa[881] = -0.06516325f;
      sa[882] = 0.28647375f;
      sa[883] = -0.044126317f;
      sa[884] = -0.18088673f;
      sa[885] = -0.19602166f;
      sa[886] = 0.06450618f;
      sa[887] = 0.0010336476f;
      sa[888] = -0.044279587f;
      sa[889] = 0.091978475f;
      sa[890] = -0.18181793f;
      sa[891] = 0.13315602f;
      sa[892] = 0.13529143f;
      sa[893] = 0.23109668f;
      sa[894] = 0.05937355f;
      sa[895] = 0.27503714f;
      sa[896] = -0.1443773f;
      sa[897] = 0.15985878f;
      sa[898] = -0.016585639f;
      sa[899] = 0.21338585f;
      sa[900] = -0.119462155f;
      sa[901] = 0.14365947f;
      sa[902] = -0.16800645f;
      sa[903] = -0.03322892f;
      sa[904] = 0.19155626f;
      sa[905] = 0.21787174f;
      sa[906] = -0.26470476f;
      sa[907] = -0.22340514f;
      sa[908] = -0.2247629f;
      sa[909] = 0.020968255f;
      sa[910] = 0.029596439f;
      sa[911] = -0.29262787f;
      sa[912] = -0.053606566f;
      sa[913] = 0.061255246f;
      sa[914] = -0.26595905f;
      sa[915] = -0.035354964f;
      sa[916] = 0.23393378f;
      sa[917] = -0.04340274f;
      sa[918] = 0.029555904f;
      sa[919] = 0.12126397f;
      sa[920] = 0.09991101f;
      sa[921] = -0.09215581f;
      sa[922] = -0.15815422f;
      sa[923] = -0.2527814f;
      sa[924] = -0.044784427f;
      sa[925] = -0.24714461f;
      sa[926] = 0.10848463f;
      sa[927] = 0.055142574f;
      sa[928] = 0.21836562f;
      sa[929] = 0.13024545f;
      sa[930] = 0.18315467f;
      sa[931] = -0.0441934f;
      sa[932] = 0.2004785f;
      sa[933] = -0.05872244f;
      sa[934] = 0.34016737f;
      sa[935] = -0.12605797f;
      sa[936] = -0.010340754f;
      sa[937] = 0.15218586f;
      sa[938] = -0.17741145f;
      sa[939] = 0.11494086f;
      sa[940] = -0.08246008f;
      sa[941] = -0.33488297f;
      sa[942] = -0.27856037f;
      sa[943] = -0.14710945f;
      sa[944] = -0.29501367f;
      sa[945] = -0.051679052f;
      sa[946] = -0.047787465f;
      sa[947] = 0.24635008f;
      sa[948] = 0.07329514f;
      sa[949] = -0.18791631f;
      sa[950] = 0.07337318f;
      sa[951] = -0.06645091f;
      sa[952] = -0.18912576f;
      sa[953] = -0.1823194f;
      sa[954] = -0.061983816f;
      sa[955] = -0.075667545f;
      sa[956] = -0.097869486f;
      sa[957] = -0.044119053f;
      sa[958] = 0.004546094f;
      sa[959] = -0.16744657f;
      sa[960] = 0.30104142f;
      sa[961] = -0.07706286f;
      sa[962] = 0.08918088f;
      sa[963] = -0.21277525f;
      sa[964] = -0.22538505f;
      sa[965] = 0.19463323f;
      sa[966] = -0.12796506f;
      sa[967] = -0.25572884f;
      sa[968] = 0.11833599f;
      sa[969] = -0.06240388f;
      sa[970] = 0.3862922f;
      sa[971] = 0.085840955f;
      sa[972] = -0.104663506f;
      sa[973] = -0.20324886f;
      sa[974] = -0.3196453f;
      sa[975] = -0.21316499f;
      sa[976] = -0.055803824f;
      sa[977] = 0.03357549f;
      sa[978] = -0.072936535f;
      sa[979] = 0.06977452f;
      sa[980] = 0.12846528f;
      sa[981] = -0.18280356f;
      sa[982] = 0.094155f;
      sa[983] = -0.028862985f;
      sa[984] = -0.2853619f;
      sa[985] = 0.023271607f;
      sa[986] = -0.29026216f;
      sa[987] = 0.022982918f;
      sa[988] = 0.06539608f;
      sa[989] = 0.15251288f;
      sa[990] = 0.12972115f;
      sa[991] = -0.06961977f;
      sa[992] = -0.15187013f;
      sa[993] = 0.02076452f;
      sa[994] = -0.11959235f;
      sa[995] = -0.3360522f;
      sa[996] = 0.10559812f;
      sa[997] = 0.09469206f;
      sa[998] = 0.0030701768f;
      sa[999] = 0.35379094f;
      sa[1000] = 0.053976446f;
      sa[1001] = 0.26224434f;
      sa[1002] = 0.25088504f;
      sa[1003] = -0.12798595f;
      sa[1004] = 0.20441821f;
      sa[1005] = -0.14543235f;
      sa[1006] = -0.13101591f;
      sa[1007] = -0.01458991f;
      sa[1008] = 0.13715678f;
      sa[1009] = 0.13086063f;
      sa[1010] = 0.14590652f;
      sa[1011] = -0.003947776f;
      sa[1012] = -0.09487564f;
      sa[1013] = 0.06512312f;
      sa[1014] = 0.27827927f;
      sa[1015] = -0.5621004f;
      sa[1016] = 0.20584746f;
      sa[1017] = 0.25091457f;
      sa[1018] = -0.080680415f;
      sa[1019] = 0.036467656f;
      sa[1020] = -0.21867733f;
      sa[1021] = 0.011930114f;
      sa[1022] = 0.2449394f;
      sa[1023] = 0.07959048f;
      sa[1024] = 0.0314075f;
      sa[1025] = 0.19590321f;
      sa[1026] = 0.16755168f;
      sa[1027] = 0.309052f;
      sa[1028] = 0.35165277f;
      sa[1029] = 0.022782782f;
      sa[1030] = -0.12155207f;
      sa[1031] = 0.094223395f;
      sa[1032] = -0.18787663f;
      sa[1033] = 0.022615904f;
      sa[1034] = -0.12713206f;
      sa[1035] = -0.15699099f;
      sa[1036] = 0.28678182f;
      sa[1037] = 0.024253469f;
      sa[1038] = -0.25884196f;
      sa[1039] = 0.2664891f;
      sa[1040] = -0.076410316f;
      sa[1041] = 0.17589764f;
      sa[1042] = -0.30984294f;
      sa[1043] = -0.028418815f;
      sa[1044] = 0.271061f;
      sa[1045] = 0.2523401f;
      sa[1046] = -0.10711134f;
      sa[1047] = 0.014850005f;
      sa[1048] = 0.14061984f;
      sa[1049] = -0.07656837f;
      sa[1050] = 0.069311f;
      sa[1051] = -0.19756605f;
      sa[1052] = 0.19627964f;
      sa[1053] = 0.20263189f;
      sa[1054] = 0.30793932f;
      sa[1055] = 0.051050503f;
      sa[1056] = 0.18531875f;
      sa[1057] = -0.19345367f;
      sa[1058] = 0.19314866f;
      sa[1059] = -0.22971608f;
      sa[1060] = -0.24801189f;
      sa[1061] = 0.006983496f;
      sa[1062] = -0.073803544f;
      sa[1063] = 0.05044593f;
      sa[1064] = 0.026691759f;
      sa[1065] = -0.064284146f;
      sa[1066] = 0.15947297f;
      sa[1067] = -0.4027877f;
      sa[1068] = -0.24820866f;
      sa[1069] = 0.26304302f;
      sa[1070] = -0.013329572f;
      sa[1071] = 0.17764698f;
      sa[1072] = -0.27585626f;
      sa[1073] = 0.09743549f;
      sa[1074] = 0.121833324f;
      sa[1075] = -0.20528747f;
      sa[1076] = -0.1015244f;
      sa[1077] = 0.09485366f;
      sa[1078] = -0.038068242f;
      sa[1079] = -0.085450955f;
      sa[1080] = 0.25541613f;
      sa[1081] = 0.16749665f;
      sa[1082] = -0.3689668f;
      sa[1083] = -0.22537859f;
      sa[1084] = 0.27960527f;
      sa[1085] = -0.20136979f;
      sa[1086] = -0.25870222f;
      sa[1087] = -0.2756801f;
      sa[1088] = -0.063853525f;
      sa[1089] = 0.13030823f;
      sa[1090] = -0.17178716f;
      sa[1091] = 0.14791785f;
      sa[1092] = -0.18873155f;
      sa[1093] = -0.25008774f;
      sa[1094] = 0.003168009f;
      sa[1095] = -0.22055925f;
      sa[1096] = -0.026357383f;
      sa[1097] = -0.041082215f;
      sa[1098] = 0.1259794f;
      sa[1099] = 0.07924522f;
      sa[1100] = -0.054643705f;
      sa[1101] = 0.18310626f;
      sa[1102] = -0.15459515f;
      sa[1103] = 0.23193529f;
      sa[1104] = -0.35849136f;
      sa[1105] = -0.10732728f;
      sa[1106] = -0.0034947286f;
      sa[1107] = 0.26477867f;
      sa[1108] = -0.055464786f;
      sa[1109] = 0.36736217f;
      sa[1110] = 0.23946589f;
      sa[1111] = -0.20290104f;
      sa[1112] = 0.09131512f;
      sa[1113] = 0.18058546f;
      sa[1114] = 0.09283999f;
      sa[1115] = 0.26464194f;
      sa[1116] = 0.015643314f;
      sa[1117] = -0.17590018f;
      sa[1118] = -0.029694136f;
      sa[1119] = -0.14699163f;
      sa[1120] = 0.21054944f;
      sa[1121] = 0.08759478f;
      sa[1122] = 0.31287253f;
      sa[1123] = 0.13954307f;
      sa[1124] = 0.1037659f;
      sa[1125] = -0.15212211f;
      sa[1126] = 0.10920639f;
      sa[1127] = 0.13071188f;
      sa[1128] = -0.004366963f;
      sa[1129] = -0.10971547f;
      sa[1130] = 0.21501428f;
      sa[1131] = 0.23356259f;
      sa[1132] = -0.10711528f;
      sa[1133] = -0.19345959f;
      sa[1134] = 0.06225578f;
      sa[1135] = -0.18430631f;
      sa[1136] = -0.019308824f;
      sa[1137] = 0.21958195f;
      sa[1138] = -0.024964808f;
      sa[1139] = 0.14749189f;
      sa[1140] = 0.24125698f;
      sa[1141] = -0.27464285f;
      sa[1142] = 0.008028597f;
      sa[1143] = 0.041836016f;
      sa[1144] = -0.26159516f;
      sa[1145] = 0.15488422f;
      sa[1146] = 0.21789154f;
      sa[1147] = -0.07214451f;
      sa[1148] = -0.016156182f;
      sa[1149] = -0.025211304f;
      sa[1150] = -0.2975651f;
      sa[1151] = -0.25817847f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2280598f;
      sa[1] = -0.09166561f;
      sa[2] = -0.6924214f;
      sa[3] = -1.1003973f;
      sa[4] = 0.044053283f;
      sa[5] = 0.20514737f;
      sa[6] = 1.1961744f;
      sa[7] = -0.6338005f;
      sa[8] = -0.94834405f;
      sa[9] = 0.7251606f;
      sa[10] = -0.12684412f;
      sa[11] = 0.39480343f;
      sa[12] = 0.24423201f;
      sa[13] = 0.028367223f;
      sa[14] = -1.2517709f;
      sa[15] = 1.1498163f;
      sa[16] = 1.6325209f;
      sa[17] = -0.45799953f;
      sa[18] = 0.0588761f;
      sa[19] = -0.4964556f;
      sa[20] = 1.0618324f;
      sa[21] = 0.07879045f;
      sa[22] = -0.9678603f;
      sa[23] = 0.7584322f;
      sa[24] = -1.2494403f;
      sa[25] = 0.45713925f;
      sa[26] = -0.29205918f;
      sa[27] = 1.4984202f;
      sa[28] = -1.3233969f;
      sa[29] = -0.3495117f;
      sa[30] = 0.5283068f;
      sa[31] = -0.6797089f;
      sa[32] = -1.1774108f;
      sa[33] = -1.5315799f;
      sa[34] = 0.06490876f;
      sa[35] = 1.2897818f;
      sa[36] = -0.34815136f;
      sa[37] = -0.13956146f;
      sa[38] = 0.06407957f;
      sa[39] = 0.7179593f;
      sa[40] = -0.7404731f;
      sa[41] = -1.3931328f;
      sa[42] = -1.0824018f;
      sa[43] = -1.4715312f;
      sa[44] = 0.070106275f;
      sa[45] = -1.3396467f;
      sa[46] = 1.2235812f;
      sa[47] = 1.3293729f;
      sa[48] = -1.3199207f;
      sa[49] = -1.2022846f;
      sa[50] = 0.42529762f;
      sa[51] = -0.26971135f;
      sa[52] = 0.8046608f;
      sa[53] = 0.9122985f;
      sa[54] = -0.25720266f;
      sa[55] = 1.1149131f;
      sa[56] = -0.96873665f;
      sa[57] = -1.1056403f;
      sa[58] = 0.07501996f;
      sa[59] = -0.1877204f;
      sa[60] = 1.4251552f;
      sa[61] = -0.5725522f;
      sa[62] = -0.30637944f;
      sa[63] = 0.6318081f;
      sa[64] = 1.3145128f;
      sa[65] = -0.6569251f;
      sa[66] = 0.56860465f;
      sa[67] = 1.5488666f;
      sa[68] = 0.68103135f;
      sa[69] = -1.0419812f;
      sa[70] = -1.4800476f;
      sa[71] = -0.4771872f;
      sa[72] = -1.3049291f;
      sa[73] = 1.2042876f;
      sa[74] = 1.3495073f;
      sa[75] = -0.16739771f;
      sa[76] = 0.8133306f;
      sa[77] = 0.42210737f;
      sa[78] = -1.4990805f;
      sa[79] = 0.92049867f;
      sa[80] = -0.8013453f;
      sa[81] = 0.20729023f;
      sa[82] = 0.8056466f;
      sa[83] = -0.6747418f;
      sa[84] = -1.619508f;
      sa[85] = -1.2821382f;
      sa[86] = 0.28376412f;
      sa[87] = 1.17394f;
      sa[88] = -1.5837286f;
      sa[89] = -0.59740925f;
      sa[90] = -1.0371596f;
      sa[91] = 1.466345f;
      sa[92] = -0.33888626f;
      sa[93] = 0.25057143f;
      sa[94] = -1.5491596f;
      sa[95] = -0.213585f;
      sa[96] = -1.0429406f;
      sa[97] = 0.18493119f;
      sa[98] = -0.21046709f;
      sa[99] = 0.33700418f;
      sa[100] = -1.2623426f;
      sa[101] = -0.42408934f;
      sa[102] = 1.2254739f;
      sa[103] = 0.11593182f;
      sa[104] = -0.21780287f;
      sa[105] = -0.6394209f;
      sa[106] = 1.3866693f;
      sa[107] = 1.2085925f;
      sa[108] = 0.73463744f;
      sa[109] = 0.14098229f;
      sa[110] = 0.6979572f;
      sa[111] = -0.79302055f;
      sa[112] = -1.1267341f;
      sa[113] = 0.27540633f;
      sa[114] = 0.12314824f;
      sa[115] = -0.3981011f;
      sa[116] = 1.0710689f;
      sa[117] = 0.016746262f;
      sa[118] = -1.3454379f;
      sa[119] = -0.7655018f;
      sa[120] = -0.3626277f;
      sa[121] = 1.018099f;
      sa[122] = -0.07538556f;
      sa[123] = 0.2918041f;
      sa[124] = -0.7318925f;
      sa[125] = 0.72156525f;
      sa[126] = -1.1432548f;
      sa[127] = 0.43481678f;
      sa[128] = -0.9759956f;
      sa[129] = 0.8158689f;
      sa[130] = -0.35854065f;
      sa[131] = 0.9410534f;
      sa[132] = 0.5018759f;
      sa[133] = 0.69169194f;
      sa[134] = 0.699996f;
      sa[135] = -1.1184771f;
      sa[136] = 0.5617256f;
      sa[137] = -0.65241736f;
      sa[138] = -0.12900329f;
      sa[139] = 1.1986513f;
      sa[140] = -0.60568964f;
      sa[141] = -0.06510232f;
      sa[142] = 0.21141158f;
      sa[143] = -1.0051453f;
      sa[144] = 0.9399803f;
      sa[145] = -0.79054207f;
      sa[146] = 0.108260356f;
      sa[147] = -0.26354125f;
      sa[148] = -0.7960597f;
      sa[149] = 1.0241218f;
      sa[150] = -1.0821753f;
      sa[151] = -1.5831417f;
      sa[152] = 1.5202378f;
      sa[153] = -0.5794387f;
      sa[154] = 1.4645764f;
      sa[155] = -1.4933388f;
      sa[156] = -1.4291576f;
      sa[157] = -1.1273277f;
      sa[158] = -0.3949814f;
      sa[159] = -0.60868096f;
      sa[160] = 1.3893367f;
      sa[161] = -1.2809539f;
      sa[162] = 1.6308184f;
      sa[163] = -0.71782136f;
      sa[164] = 0.7491791f;
      sa[165] = -0.5370923f;
      sa[166] = 1.3470105f;
      sa[167] = -1.4309918f;
      sa[168] = 1.0465769f;
      sa[169] = -1.5266f;
      sa[170] = 1.1372069f;
      sa[171] = 0.85182196f;
      sa[172] = 1.4922228f;
      sa[173] = 1.5184132f;
      sa[174] = -0.08618983f;
      sa[175] = 0.024532596f;
      sa[176] = -0.82361573f;
      sa[177] = 0.13578369f;
      sa[178] = -1.1008451f;
      sa[179] = -0.09919349f;
      sa[180] = -1.341276f;
      sa[181] = -0.9610608f;
      sa[182] = 0.33502394f;
      sa[183] = -0.9746126f;
      sa[184] = 1.4323952f;
      sa[185] = 1.2632222f;
      sa[186] = -0.48288202f;
      sa[187] = -0.9490475f;
      sa[188] = -0.54173684f;
      sa[189] = -0.76341605f;
      sa[190] = -1.48409f;
      sa[191] = -0.9864095f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


