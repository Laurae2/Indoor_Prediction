/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:47:07.291+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_03 > h2o_nn_32x6_Tanh_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_03", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(169964689069353752L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.010675144019413172;
      sa[1] = 0.049167272692271065;
      sa[2] = -0.04374183714947401;
      sa[3] = -0.03380946363402222;
      sa[4] = -0.034786415532426486;
      sa[5] = 0.034366796698667434;
      sa[6] = 0.06958657448945141;
      sa[7] = -0.014298124723757546;
      sa[8] = 0.006706464317187564;
      sa[9] = -0.013852882205264084;
      sa[10] = -0.01152154631697428;
      sa[11] = 0.043282389888231076;
      sa[12] = -0.01470921639942389;
      sa[13] = -0.007212962179717213;
      sa[14] = -0.002346958022650303;
      sa[15] = -0.012234987865565589;
      sa[16] = 0.020946466705899416;
      sa[17] = -0.023932089591674012;
      sa[18] = -0.05667968823902102;
      sa[19] = 0.02776382507701168;
      sa[20] = 0.07586989065551439;
      sa[21] = 0.025430851368041154;
      sa[22] = -0.07795515615650898;
      sa[23] = 0.00858800326152248;
      sa[24] = -0.011966062648964796;
      sa[25] = 0.0585074977944699;
      sa[26] = -0.007818758948628306;
      sa[27] = 0.01897853689329319;
      sa[28] = -0.027594371144861282;
      sa[29] = -7.582347394956054E-4;
      sa[30] = 0.033038369500621424;
      sa[31] = 0.018314882020190267;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.020786031741785258;
      sa[1] = -0.019637506211919207;
      sa[2] = -0.07000713932221299;
      sa[3] = 0.019951785146748006;
      sa[4] = -0.025465878757125214;
    }
  }
}
class h2o_nn_32x6_Tanh_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.039310463f;
      sa[1] = 0.23053424f;
      sa[2] = 0.16505522f;
      sa[3] = 0.17721908f;
      sa[4] = -0.17610502f;
      sa[5] = -0.17185374f;
      sa[6] = -0.0399447f;
      sa[7] = 0.21827206f;
      sa[8] = 0.11722609f;
      sa[9] = -0.17324577f;
      sa[10] = -0.1697676f;
      sa[11] = -0.17627273f;
      sa[12] = 0.08745664f;
      sa[13] = -0.2442682f;
      sa[14] = -0.15221927f;
      sa[15] = -0.013641453f;
      sa[16] = 0.088654794f;
      sa[17] = 0.13407737f;
      sa[18] = -0.21397676f;
      sa[19] = 0.16438289f;
      sa[20] = 0.22443382f;
      sa[21] = -0.3048215f;
      sa[22] = 0.22792569f;
      sa[23] = -0.18250726f;
      sa[24] = 0.2674779f;
      sa[25] = 0.15374087f;
      sa[26] = -0.26179504f;
      sa[27] = 0.25063205f;
      sa[28] = 0.22625062f;
      sa[29] = -0.27156094f;
      sa[30] = -0.16488254f;
      sa[31] = 0.13531569f;
      sa[32] = 0.19166262f;
      sa[33] = -0.2553284f;
      sa[34] = 0.07110514f;
      sa[35] = -0.09815653f;
      sa[36] = 0.09544034f;
      sa[37] = 0.24639128f;
      sa[38] = -0.09010722f;
      sa[39] = 0.14688054f;
      sa[40] = 0.031222472f;
      sa[41] = -0.071517244f;
      sa[42] = -0.1312827f;
      sa[43] = 0.03801048f;
      sa[44] = 0.2395416f;
      sa[45] = -0.24406238f;
      sa[46] = 0.041781712f;
      sa[47] = -0.009362516f;
      sa[48] = 0.22245272f;
      sa[49] = 0.25054184f;
      sa[50] = 0.1955993f;
      sa[51] = -0.27717438f;
      sa[52] = -0.10423662f;
      sa[53] = 0.20019104f;
      sa[54] = 0.20102575f;
      sa[55] = 0.036483638f;
      sa[56] = -0.15394397f;
      sa[57] = -0.26573133f;
      sa[58] = 0.26561052f;
      sa[59] = -0.16446213f;
      sa[60] = -0.2637211f;
      sa[61] = 0.17416012f;
      sa[62] = 0.107143745f;
      sa[63] = 0.006462749f;
      sa[64] = 0.13513094f;
      sa[65] = 0.11766054f;
      sa[66] = 0.01862259f;
      sa[67] = 0.12914698f;
      sa[68] = -0.11047786f;
      sa[69] = 0.10340282f;
      sa[70] = -0.104402676f;
      sa[71] = 0.31863686f;
      sa[72] = -0.13439927f;
      sa[73] = 0.21402878f;
      sa[74] = -0.18117823f;
      sa[75] = 0.06752942f;
      sa[76] = -0.19497846f;
      sa[77] = -0.06609556f;
      sa[78] = -0.07041333f;
      sa[79] = 0.12062236f;
      sa[80] = -0.20624146f;
      sa[81] = -0.098123096f;
      sa[82] = -0.008776333f;
      sa[83] = 0.123663865f;
      sa[84] = -0.02513791f;
      sa[85] = -0.17099036f;
      sa[86] = 0.13843286f;
      sa[87] = 0.22965908f;
      sa[88] = 0.24361236f;
      sa[89] = 0.07174141f;
      sa[90] = -0.11670953f;
      sa[91] = 0.14235343f;
      sa[92] = 0.09742127f;
      sa[93] = -0.20122434f;
      sa[94] = -0.1753061f;
      sa[95] = -0.23809466f;
      sa[96] = 0.123453505f;
      sa[97] = 0.04611139f;
      sa[98] = 0.19864085f;
      sa[99] = -0.09284921f;
      sa[100] = -0.050259814f;
      sa[101] = -0.17672776f;
      sa[102] = -0.24621119f;
      sa[103] = -0.08136709f;
      sa[104] = 7.000752E-4f;
      sa[105] = -0.12971021f;
      sa[106] = -0.20497108f;
      sa[107] = 0.12318524f;
      sa[108] = 0.1620045f;
      sa[109] = -0.19860715f;
      sa[110] = -0.17073451f;
      sa[111] = 0.12732865f;
      sa[112] = 0.11508462f;
      sa[113] = 0.027566921f;
      sa[114] = -0.15650934f;
      sa[115] = -0.05404307f;
      sa[116] = -0.23037435f;
      sa[117] = -0.0018099219f;
      sa[118] = -0.22424033f;
      sa[119] = -0.1619906f;
      sa[120] = 0.1936814f;
      sa[121] = 0.2084699f;
      sa[122] = 0.27983838f;
      sa[123] = 0.23962684f;
      sa[124] = 0.26851442f;
      sa[125] = 0.27974978f;
      sa[126] = -0.2739451f;
      sa[127] = -0.18612911f;
      sa[128] = 0.060964048f;
      sa[129] = 0.14215577f;
      sa[130] = -0.12318314f;
      sa[131] = 0.28508246f;
      sa[132] = 0.16509618f;
      sa[133] = -0.26118585f;
      sa[134] = 0.07623578f;
      sa[135] = -0.19998126f;
      sa[136] = -0.26636392f;
      sa[137] = -0.026434945f;
      sa[138] = 0.10733723f;
      sa[139] = -0.09119459f;
      sa[140] = -0.08855689f;
      sa[141] = -0.15025501f;
      sa[142] = 0.18659231f;
      sa[143] = -0.25364453f;
      sa[144] = 0.23144132f;
      sa[145] = -0.11892635f;
      sa[146] = -0.24372087f;
      sa[147] = 0.19728822f;
      sa[148] = 0.15022862f;
      sa[149] = 0.17926082f;
      sa[150] = 0.27155888f;
      sa[151] = -0.24614775f;
      sa[152] = 0.014194076f;
      sa[153] = 0.26626596f;
      sa[154] = 0.24292031f;
      sa[155] = -0.16089652f;
      sa[156] = 0.121547796f;
      sa[157] = -0.17925432f;
      sa[158] = 0.083737f;
      sa[159] = 0.087189406f;
      sa[160] = 0.09618681f;
      sa[161] = 0.21955915f;
      sa[162] = -0.17751202f;
      sa[163] = -0.047691368f;
      sa[164] = 0.21348687f;
      sa[165] = -0.04564263f;
      sa[166] = -0.07433854f;
      sa[167] = -0.08739303f;
      sa[168] = 0.18207893f;
      sa[169] = 0.32033363f;
      sa[170] = 0.005351956f;
      sa[171] = -0.036164816f;
      sa[172] = -0.06631526f;
      sa[173] = -0.14934443f;
      sa[174] = -0.02064462f;
      sa[175] = -0.23860687f;
      sa[176] = -0.02435577f;
      sa[177] = -0.018788898f;
      sa[178] = -0.056865547f;
      sa[179] = 0.07915684f;
      sa[180] = -0.042889755f;
      sa[181] = -0.27997658f;
      sa[182] = -0.118525244f;
      sa[183] = 0.05554904f;
      sa[184] = 0.28633192f;
      sa[185] = 0.1700771f;
      sa[186] = -0.27829564f;
      sa[187] = 0.09451322f;
      sa[188] = -0.02293787f;
      sa[189] = 0.20808177f;
      sa[190] = 0.07217231f;
      sa[191] = -0.06896854f;
      sa[192] = -0.11815509f;
      sa[193] = 0.22158138f;
      sa[194] = 0.08080636f;
      sa[195] = 0.26675728f;
      sa[196] = 0.24493998f;
      sa[197] = -0.036383927f;
      sa[198] = 0.106223546f;
      sa[199] = -0.068207584f;
      sa[200] = 0.022933701f;
      sa[201] = -0.26055965f;
      sa[202] = 0.13340299f;
      sa[203] = -0.008508092f;
      sa[204] = -0.16996424f;
      sa[205] = 0.23605679f;
      sa[206] = 0.21789151f;
      sa[207] = 0.17147624f;
      sa[208] = -0.24863517f;
      sa[209] = -0.07189035f;
      sa[210] = -0.2650894f;
      sa[211] = -0.23745658f;
      sa[212] = 0.21932168f;
      sa[213] = -0.25654083f;
      sa[214] = -0.08652144f;
      sa[215] = 0.055054758f;
      sa[216] = 0.09371246f;
      sa[217] = 0.13744839f;
      sa[218] = -0.16733775f;
      sa[219] = 0.2279151f;
      sa[220] = -0.19507197f;
      sa[221] = 0.04554818f;
      sa[222] = 0.22773364f;
      sa[223] = 0.0801935f;
      sa[224] = 0.096941106f;
      sa[225] = 0.27894935f;
      sa[226] = -0.2399095f;
      sa[227] = 0.26239637f;
      sa[228] = 0.125987f;
      sa[229] = 0.0866867f;
      sa[230] = 0.256166f;
      sa[231] = -0.22608387f;
      sa[232] = -0.2535698f;
      sa[233] = 0.064479135f;
      sa[234] = 0.17975476f;
      sa[235] = -0.291204f;
      sa[236] = -0.018062243f;
      sa[237] = -0.1958357f;
      sa[238] = -0.18968406f;
      sa[239] = 0.15703622f;
      sa[240] = 4.0891548E-4f;
      sa[241] = -0.23470154f;
      sa[242] = -0.048730608f;
      sa[243] = -0.22045091f;
      sa[244] = -0.18862559f;
      sa[245] = -0.11226875f;
      sa[246] = -0.24711326f;
      sa[247] = -0.037946302f;
      sa[248] = 0.25569686f;
      sa[249] = 0.24614693f;
      sa[250] = -0.20668949f;
      sa[251] = -0.10157732f;
      sa[252] = -0.2663561f;
      sa[253] = -0.265761f;
      sa[254] = -0.2553704f;
      sa[255] = 0.19378665f;
      sa[256] = -0.1750377f;
      sa[257] = 0.25505933f;
      sa[258] = -0.24398458f;
      sa[259] = -0.121811405f;
      sa[260] = -0.21367112f;
      sa[261] = -0.09585792f;
      sa[262] = -0.14502566f;
      sa[263] = 0.274016f;
      sa[264] = -0.15382732f;
      sa[265] = 0.048136733f;
      sa[266] = -0.27051443f;
      sa[267] = -0.22866465f;
      sa[268] = 0.11787983f;
      sa[269] = -0.16309986f;
      sa[270] = -0.0011387801f;
      sa[271] = 0.15832333f;
      sa[272] = -0.0917676f;
      sa[273] = -0.122654185f;
      sa[274] = 0.10888125f;
      sa[275] = -0.018046895f;
      sa[276] = 0.06698101f;
      sa[277] = -0.23759606f;
      sa[278] = -0.102738045f;
      sa[279] = 0.17431383f;
      sa[280] = -0.16940731f;
      sa[281] = 0.26567766f;
      sa[282] = -0.098568015f;
      sa[283] = -0.04226287f;
      sa[284] = 0.04460423f;
      sa[285] = -0.12706748f;
      sa[286] = 0.23836875f;
      sa[287] = 0.11808338f;
      sa[288] = -0.17981714f;
      sa[289] = -0.15954904f;
      sa[290] = -0.0739485f;
      sa[291] = -0.017327389f;
      sa[292] = 0.12918505f;
      sa[293] = -0.08477968f;
      sa[294] = 0.08751714f;
      sa[295] = 0.12247841f;
      sa[296] = 0.2204497f;
      sa[297] = 0.20426407f;
      sa[298] = 0.010916522f;
      sa[299] = -0.052652653f;
      sa[300] = -0.011389552f;
      sa[301] = -0.05905769f;
      sa[302] = 0.15734135f;
      sa[303] = 0.028631546f;
      sa[304] = -0.19602332f;
      sa[305] = -0.020554148f;
      sa[306] = 0.18156776f;
      sa[307] = -0.1383536f;
      sa[308] = 0.08014021f;
      sa[309] = 0.14761049f;
      sa[310] = 0.27975932f;
      sa[311] = 0.29159597f;
      sa[312] = -0.18377416f;
      sa[313] = -0.13967904f;
      sa[314] = -0.16873762f;
      sa[315] = 0.0034980474f;
      sa[316] = -0.026979655f;
      sa[317] = -0.08652487f;
      sa[318] = 0.08377519f;
      sa[319] = 0.26353475f;
      sa[320] = -0.08065246f;
      sa[321] = 0.11140056f;
      sa[322] = 0.21773118f;
      sa[323] = -0.14629048f;
      sa[324] = -0.016314622f;
      sa[325] = 0.28135893f;
      sa[326] = -0.2563571f;
      sa[327] = 0.031599462f;
      sa[328] = -0.07222563f;
      sa[329] = 0.225825f;
      sa[330] = -0.1826255f;
      sa[331] = -0.025921796f;
      sa[332] = -0.25494534f;
      sa[333] = 0.11148054f;
      sa[334] = -0.103629254f;
      sa[335] = 0.23864229f;
      sa[336] = -0.14759211f;
      sa[337] = -0.14877601f;
      sa[338] = 0.26146495f;
      sa[339] = -0.21375257f;
      sa[340] = -0.2964246f;
      sa[341] = -0.25368655f;
      sa[342] = 0.16257869f;
      sa[343] = -0.07872374f;
      sa[344] = -0.16651617f;
      sa[345] = 0.17788503f;
      sa[346] = 0.18632443f;
      sa[347] = -0.17938235f;
      sa[348] = 0.278181f;
      sa[349] = -0.28723794f;
      sa[350] = -0.23416995f;
      sa[351] = 0.08749585f;
      sa[352] = 0.18811248f;
      sa[353] = -0.041037515f;
      sa[354] = 0.0803168f;
      sa[355] = 0.10038169f;
      sa[356] = -0.12148685f;
      sa[357] = 0.22215483f;
      sa[358] = -0.28313437f;
      sa[359] = 0.022028862f;
      sa[360] = 0.086864404f;
      sa[361] = -0.031366687f;
      sa[362] = -0.1595931f;
      sa[363] = 0.18406406f;
      sa[364] = -0.11377632f;
      sa[365] = -0.20733947f;
      sa[366] = 0.002009889f;
      sa[367] = -0.28726843f;
      sa[368] = -0.17127809f;
      sa[369] = 0.27382872f;
      sa[370] = -0.20562267f;
      sa[371] = 0.12196138f;
      sa[372] = -0.011484119f;
      sa[373] = 0.27615818f;
      sa[374] = -0.1266582f;
      sa[375] = -0.27900746f;
      sa[376] = -0.28175378f;
      sa[377] = -0.19088797f;
      sa[378] = 0.29527858f;
      sa[379] = 0.09477268f;
      sa[380] = -0.10308216f;
      sa[381] = -0.08179328f;
      sa[382] = -0.030365234f;
      sa[383] = -0.10694004f;
      sa[384] = -0.14373383f;
      sa[385] = 0.085124105f;
      sa[386] = -0.23608822f;
      sa[387] = -0.19463046f;
      sa[388] = 0.08495258f;
      sa[389] = -4.4230165E-4f;
      sa[390] = -0.0048028324f;
      sa[391] = -0.09822013f;
      sa[392] = 0.22409722f;
      sa[393] = 0.18162827f;
      sa[394] = -0.016056718f;
      sa[395] = 0.30701408f;
      sa[396] = 0.286f;
      sa[397] = -0.28956273f;
      sa[398] = 0.124152415f;
      sa[399] = 0.070795454f;
      sa[400] = 0.19164641f;
      sa[401] = 0.24974544f;
      sa[402] = -0.11039402f;
      sa[403] = 0.08552989f;
      sa[404] = 0.23881541f;
      sa[405] = -0.22801884f;
      sa[406] = -0.0614206f;
      sa[407] = 0.13416146f;
      sa[408] = -0.20025109f;
      sa[409] = -0.22888984f;
      sa[410] = -0.10123423f;
      sa[411] = 0.16401118f;
      sa[412] = -0.17116748f;
      sa[413] = 0.09005261f;
      sa[414] = 0.15132545f;
      sa[415] = 0.2751593f;
      sa[416] = -0.1582601f;
      sa[417] = 0.04795217f;
      sa[418] = 0.0143865505f;
      sa[419] = 0.28652033f;
      sa[420] = 0.19777606f;
      sa[421] = 0.25061888f;
      sa[422] = 0.230581f;
      sa[423] = -0.030061124f;
      sa[424] = 0.11032678f;
      sa[425] = -0.05249973f;
      sa[426] = -0.267022f;
      sa[427] = 0.19322287f;
      sa[428] = -0.05592622f;
      sa[429] = -0.16018529f;
      sa[430] = 0.16516598f;
      sa[431] = -0.014212869f;
      sa[432] = -0.052325595f;
      sa[433] = 0.13768665f;
      sa[434] = 0.24555738f;
      sa[435] = 0.051021706f;
      sa[436] = -0.25882605f;
      sa[437] = -0.2453496f;
      sa[438] = -0.005195827f;
      sa[439] = -0.028373215f;
      sa[440] = 0.2821991f;
      sa[441] = -0.28070828f;
      sa[442] = 0.062474553f;
      sa[443] = 0.0695307f;
      sa[444] = -0.21215539f;
      sa[445] = 0.05542562f;
      sa[446] = 0.2139954f;
      sa[447] = 0.05538707f;
      sa[448] = 0.18673635f;
      sa[449] = 0.24385335f;
      sa[450] = -0.076107875f;
      sa[451] = 0.08889492f;
      sa[452] = 0.1722406f;
      sa[453] = -0.04878644f;
      sa[454] = -0.15833509f;
      sa[455] = -0.059568238f;
      sa[456] = -0.043069992f;
      sa[457] = 0.077933796f;
      sa[458] = -0.19719829f;
      sa[459] = 0.2448574f;
      sa[460] = 0.21194309f;
      sa[461] = 0.27093205f;
      sa[462] = 0.048202097f;
      sa[463] = 0.20744745f;
      sa[464] = -0.25937006f;
      sa[465] = 0.22300906f;
      sa[466] = 0.0030249557f;
      sa[467] = 0.13009909f;
      sa[468] = 0.09971963f;
      sa[469] = 0.28481692f;
      sa[470] = 0.18296129f;
      sa[471] = 0.066814296f;
      sa[472] = 0.004720785f;
      sa[473] = -0.10384317f;
      sa[474] = -0.00966092f;
      sa[475] = 0.07681894f;
      sa[476] = 0.25007075f;
      sa[477] = -0.17350943f;
      sa[478] = 0.082766086f;
      sa[479] = -0.12729286f;
      sa[480] = -0.28533316f;
      sa[481] = -0.19468798f;
      sa[482] = -0.2371399f;
      sa[483] = 0.18959321f;
      sa[484] = 0.20921189f;
      sa[485] = 0.11582736f;
      sa[486] = -0.016441373f;
      sa[487] = -0.17008147f;
      sa[488] = -0.19274084f;
      sa[489] = 0.070394784f;
      sa[490] = -0.00905563f;
      sa[491] = -0.24043927f;
      sa[492] = 0.2070429f;
      sa[493] = 0.2320897f;
      sa[494] = -0.2210691f;
      sa[495] = 0.12531182f;
      sa[496] = -0.0097089f;
      sa[497] = 0.0518641f;
      sa[498] = 0.15671188f;
      sa[499] = 0.14433156f;
      sa[500] = -0.05149918f;
      sa[501] = 0.07983461f;
      sa[502] = 0.23375936f;
      sa[503] = 0.049599923f;
      sa[504] = -0.16504112f;
      sa[505] = -0.22283383f;
      sa[506] = 0.16070864f;
      sa[507] = -0.08500515f;
      sa[508] = 0.08332973f;
      sa[509] = 0.20192114f;
      sa[510] = 0.15326396f;
      sa[511] = 0.0036263333f;
      sa[512] = 0.057192247f;
      sa[513] = -0.08168356f;
      sa[514] = 0.26131344f;
      sa[515] = -0.22975238f;
      sa[516] = 0.0013735995f;
      sa[517] = 0.071343414f;
      sa[518] = 0.11594122f;
      sa[519] = -0.10766463f;
      sa[520] = 0.19481331f;
      sa[521] = 0.12991922f;
      sa[522] = 0.09451072f;
      sa[523] = 0.20083266f;
      sa[524] = 0.16633818f;
      sa[525] = 0.14945634f;
      sa[526] = -0.0132965315f;
      sa[527] = -0.10897236f;
      sa[528] = -0.027019061f;
      sa[529] = 0.12407607f;
      sa[530] = -0.1652438f;
      sa[531] = 0.08299988f;
      sa[532] = 0.11517755f;
      sa[533] = 0.101292245f;
      sa[534] = 0.10856019f;
      sa[535] = -0.10995703f;
      sa[536] = 0.08079686f;
      sa[537] = -0.1984556f;
      sa[538] = 0.21485987f;
      sa[539] = 0.2859102f;
      sa[540] = -0.24624822f;
      sa[541] = -0.13921256f;
      sa[542] = -0.06941012f;
      sa[543] = -0.24049307f;
      sa[544] = 0.1291797f;
      sa[545] = 0.09751008f;
      sa[546] = 0.064425685f;
      sa[547] = 0.16338487f;
      sa[548] = 0.060435858f;
      sa[549] = 0.14709862f;
      sa[550] = -0.014150976f;
      sa[551] = -0.11007217f;
      sa[552] = 0.04490372f;
      sa[553] = -0.052600645f;
      sa[554] = -0.14377046f;
      sa[555] = -0.13975011f;
      sa[556] = -0.15840685f;
      sa[557] = -0.2221627f;
      sa[558] = -0.20228308f;
      sa[559] = 0.11330521f;
      sa[560] = -0.29594356f;
      sa[561] = -0.105826125f;
      sa[562] = 0.17226614f;
      sa[563] = -0.089715436f;
      sa[564] = 0.26635394f;
      sa[565] = 0.028622344f;
      sa[566] = 0.2557808f;
      sa[567] = 0.010037051f;
      sa[568] = -0.07382834f;
      sa[569] = 0.018051855f;
      sa[570] = -0.022471096f;
      sa[571] = -0.059702713f;
      sa[572] = -0.12078016f;
      sa[573] = 0.109029755f;
      sa[574] = 0.24127996f;
      sa[575] = -0.23333593f;
      sa[576] = -0.077997856f;
      sa[577] = 0.04071488f;
      sa[578] = 0.11988177f;
      sa[579] = -0.056785002f;
      sa[580] = 0.10612726f;
      sa[581] = -0.115134075f;
      sa[582] = 0.105833456f;
      sa[583] = 0.03746044f;
      sa[584] = 0.13416734f;
      sa[585] = 0.18365537f;
      sa[586] = -0.21831183f;
      sa[587] = -0.12494231f;
      sa[588] = 0.095918946f;
      sa[589] = 0.14231664f;
      sa[590] = 8.925036E-4f;
      sa[591] = 0.05997121f;
      sa[592] = -0.2898481f;
      sa[593] = -0.17278974f;
      sa[594] = -0.086663656f;
      sa[595] = -0.0153652895f;
      sa[596] = 0.27523276f;
      sa[597] = -0.0024352588f;
      sa[598] = 0.23184559f;
      sa[599] = 0.058239147f;
      sa[600] = -0.27360785f;
      sa[601] = 0.21508223f;
      sa[602] = -0.08015488f;
      sa[603] = 0.27495813f;
      sa[604] = 0.24196225f;
      sa[605] = 0.18496671f;
      sa[606] = 0.21976198f;
      sa[607] = 0.082707115f;
      sa[608] = -0.044833608f;
      sa[609] = 0.05424825f;
      sa[610] = 0.11617658f;
      sa[611] = -0.040514957f;
      sa[612] = -0.1027246f;
      sa[613] = 0.08794228f;
      sa[614] = 0.06015639f;
      sa[615] = 0.016437946f;
      sa[616] = 0.0378517f;
      sa[617] = -0.30220616f;
      sa[618] = -0.16500896f;
      sa[619] = -0.19039564f;
      sa[620] = -0.059234817f;
      sa[621] = -0.20835659f;
      sa[622] = -0.3132715f;
      sa[623] = -0.274483f;
      sa[624] = -0.06039384f;
      sa[625] = 0.21912186f;
      sa[626] = -0.019220643f;
      sa[627] = 0.22723615f;
      sa[628] = -0.271287f;
      sa[629] = -0.04520669f;
      sa[630] = -0.119704f;
      sa[631] = 0.20475869f;
      sa[632] = 0.090945445f;
      sa[633] = -0.1600632f;
      sa[634] = -0.21542767f;
      sa[635] = 0.14624283f;
      sa[636] = -0.18227255f;
      sa[637] = -0.055103432f;
      sa[638] = -0.09274644f;
      sa[639] = -0.09166696f;
      sa[640] = -0.14236037f;
      sa[641] = -0.28926325f;
      sa[642] = 0.16513066f;
      sa[643] = -0.31376076f;
      sa[644] = -0.056476977f;
      sa[645] = -0.19414307f;
      sa[646] = 0.2998828f;
      sa[647] = -0.22428852f;
      sa[648] = -0.044511687f;
      sa[649] = -0.036259364f;
      sa[650] = 0.055311315f;
      sa[651] = -0.12778966f;
      sa[652] = 0.06182202f;
      sa[653] = -0.1622447f;
      sa[654] = -0.16917059f;
      sa[655] = -0.17225325f;
      sa[656] = 0.08010241f;
      sa[657] = 0.13177703f;
      sa[658] = -0.2313f;
      sa[659] = -0.21815206f;
      sa[660] = -0.24949273f;
      sa[661] = -0.12087122f;
      sa[662] = -0.28891894f;
      sa[663] = 0.13720438f;
      sa[664] = -0.1631807f;
      sa[665] = 0.27513486f;
      sa[666] = -0.016408999f;
      sa[667] = -0.23835197f;
      sa[668] = 0.24484347f;
      sa[669] = -0.1381465f;
      sa[670] = 0.10989162f;
      sa[671] = 0.031070491f;
      sa[672] = -0.26182175f;
      sa[673] = 0.16290869f;
      sa[674] = 0.23903781f;
      sa[675] = -0.25314283f;
      sa[676] = -0.10312502f;
      sa[677] = -0.20534545f;
      sa[678] = 0.1758102f;
      sa[679] = -0.08178639f;
      sa[680] = 0.0665151f;
      sa[681] = 0.09229342f;
      sa[682] = 0.05409579f;
      sa[683] = -0.110672735f;
      sa[684] = -0.026642628f;
      sa[685] = 0.013202947f;
      sa[686] = -0.17173871f;
      sa[687] = -0.20669274f;
      sa[688] = -0.27239025f;
      sa[689] = -0.23030208f;
      sa[690] = -0.026424492f;
      sa[691] = 0.10064914f;
      sa[692] = -0.15174915f;
      sa[693] = -0.17322665f;
      sa[694] = 0.28663567f;
      sa[695] = -0.027922971f;
      sa[696] = -0.09200946f;
      sa[697] = -0.13830213f;
      sa[698] = -0.17171238f;
      sa[699] = 0.28837523f;
      sa[700] = 0.14842416f;
      sa[701] = 0.10229409f;
      sa[702] = 0.18942131f;
      sa[703] = -0.055194143f;
      sa[704] = -0.26781604f;
      sa[705] = -0.04417579f;
      sa[706] = -0.13485219f;
      sa[707] = 0.009469895f;
      sa[708] = -0.021970352f;
      sa[709] = -0.25941405f;
      sa[710] = 0.25790626f;
      sa[711] = -0.09902959f;
      sa[712] = 0.025371473f;
      sa[713] = 0.12818153f;
      sa[714] = 0.17676401f;
      sa[715] = 0.073056035f;
      sa[716] = 0.05265491f;
      sa[717] = 0.17897435f;
      sa[718] = -0.06689405f;
      sa[719] = 0.075692706f;
      sa[720] = -0.2535177f;
      sa[721] = 0.2186762f;
      sa[722] = -0.11789121f;
      sa[723] = 0.018703423f;
      sa[724] = 0.068961084f;
      sa[725] = -0.27690002f;
      sa[726] = -0.20130411f;
      sa[727] = -0.26066068f;
      sa[728] = -0.12627651f;
      sa[729] = -0.03228991f;
      sa[730] = 0.07474916f;
      sa[731] = -0.28648853f;
      sa[732] = 0.17826696f;
      sa[733] = 0.21277048f;
      sa[734] = -0.1341152f;
      sa[735] = 0.29921582f;
      sa[736] = -0.0010036122f;
      sa[737] = 0.16326198f;
      sa[738] = -0.17137653f;
      sa[739] = -0.31120503f;
      sa[740] = -0.25473988f;
      sa[741] = -0.2677152f;
      sa[742] = 0.1013847f;
      sa[743] = 0.054057293f;
      sa[744] = 0.053895537f;
      sa[745] = -0.26675865f;
      sa[746] = 0.11743484f;
      sa[747] = -0.13379855f;
      sa[748] = -0.13470367f;
      sa[749] = -0.16431051f;
      sa[750] = 0.19740957f;
      sa[751] = 0.26487005f;
      sa[752] = -0.04719597f;
      sa[753] = 0.17278197f;
      sa[754] = 0.022252671f;
      sa[755] = 0.19321296f;
      sa[756] = -0.17837338f;
      sa[757] = 0.22029623f;
      sa[758] = -0.16654056f;
      sa[759] = -0.15350772f;
      sa[760] = -0.0854189f;
      sa[761] = 0.04439819f;
      sa[762] = -0.0963354f;
      sa[763] = 0.16308364f;
      sa[764] = 0.07055311f;
      sa[765] = -0.049968977f;
      sa[766] = -0.17448442f;
      sa[767] = 0.088996604f;
      sa[768] = -0.17323115f;
      sa[769] = -0.27352506f;
      sa[770] = -0.013325182f;
      sa[771] = 0.01814131f;
      sa[772] = 0.034703925f;
      sa[773] = -0.24698839f;
      sa[774] = -0.032403544f;
      sa[775] = 0.27196193f;
      sa[776] = -0.06189856f;
      sa[777] = 0.06046353f;
      sa[778] = 0.16674182f;
      sa[779] = -0.14203802f;
      sa[780] = -0.024886115f;
      sa[781] = -0.039911576f;
      sa[782] = 0.12523444f;
      sa[783] = -0.1375722f;
      sa[784] = -0.1422178f;
      sa[785] = -0.11513024f;
      sa[786] = -0.08792563f;
      sa[787] = -0.22642477f;
      sa[788] = -0.27489832f;
      sa[789] = 0.17183638f;
      sa[790] = -0.13277082f;
      sa[791] = -0.08593727f;
      sa[792] = 0.18608093f;
      sa[793] = -0.1081374f;
      sa[794] = -0.21275212f;
      sa[795] = -0.01513198f;
      sa[796] = 0.20646554f;
      sa[797] = -0.2118549f;
      sa[798] = -0.27949178f;
      sa[799] = -0.20521177f;
      sa[800] = 0.19368346f;
      sa[801] = 0.04161761f;
      sa[802] = 0.25631365f;
      sa[803] = 0.083036914f;
      sa[804] = 0.21102093f;
      sa[805] = 0.27681592f;
      sa[806] = 0.2718122f;
      sa[807] = 0.19312863f;
      sa[808] = -0.022845782f;
      sa[809] = -0.2243041f;
      sa[810] = 0.0692732f;
      sa[811] = 0.20942971f;
      sa[812] = 0.14205591f;
      sa[813] = -0.30644292f;
      sa[814] = 0.061133683f;
      sa[815] = -0.19322374f;
      sa[816] = -0.10217747f;
      sa[817] = -0.14737526f;
      sa[818] = -0.012852054f;
      sa[819] = -0.074655496f;
      sa[820] = -0.29092234f;
      sa[821] = -0.20883131f;
      sa[822] = -0.2783956f;
      sa[823] = 0.05124257f;
      sa[824] = 0.11544948f;
      sa[825] = 0.30708563f;
      sa[826] = -0.2559285f;
      sa[827] = -0.29181334f;
      sa[828] = 0.113918275f;
      sa[829] = -0.07154147f;
      sa[830] = 0.16570519f;
      sa[831] = 0.15170608f;
      sa[832] = 0.12982789f;
      sa[833] = 0.06462704f;
      sa[834] = 0.17114885f;
      sa[835] = -0.09393837f;
      sa[836] = 0.18996364f;
      sa[837] = -0.16211507f;
      sa[838] = 0.14238892f;
      sa[839] = -0.26460996f;
      sa[840] = 0.19517638f;
      sa[841] = 0.10674711f;
      sa[842] = 0.15851746f;
      sa[843] = 0.040544935f;
      sa[844] = 0.051686626f;
      sa[845] = 0.1391958f;
      sa[846] = -0.24640082f;
      sa[847] = -0.04398461f;
      sa[848] = 0.2037626f;
      sa[849] = 0.23379663f;
      sa[850] = -0.016685685f;
      sa[851] = 0.10704887f;
      sa[852] = 0.27558282f;
      sa[853] = 0.1477158f;
      sa[854] = 0.24118699f;
      sa[855] = 0.18111466f;
      sa[856] = 0.09592182f;
      sa[857] = -0.14407837f;
      sa[858] = 0.14187019f;
      sa[859] = 0.090939365f;
      sa[860] = 0.26549053f;
      sa[861] = -0.2395885f;
      sa[862] = -0.07011611f;
      sa[863] = 0.05721495f;
      sa[864] = -0.16806366f;
      sa[865] = 0.20804356f;
      sa[866] = -0.1730415f;
      sa[867] = 0.0038886468f;
      sa[868] = -0.1786667f;
      sa[869] = 0.20736769f;
      sa[870] = -0.02452094f;
      sa[871] = 0.14347912f;
      sa[872] = 0.26369277f;
      sa[873] = -0.077910766f;
      sa[874] = 0.006283989f;
      sa[875] = -0.20891036f;
      sa[876] = -0.23567593f;
      sa[877] = -0.20937042f;
      sa[878] = 0.033458337f;
      sa[879] = 0.1759611f;
      sa[880] = -0.1259964f;
      sa[881] = -0.12076923f;
      sa[882] = 0.15890901f;
      sa[883] = 0.1829733f;
      sa[884] = -0.13362977f;
      sa[885] = -0.13066028f;
      sa[886] = 0.0948463f;
      sa[887] = -0.065019645f;
      sa[888] = -0.108903795f;
      sa[889] = 0.045599252f;
      sa[890] = -0.31401187f;
      sa[891] = 0.3216572f;
      sa[892] = 0.15709007f;
      sa[893] = 0.24497022f;
      sa[894] = 0.029819736f;
      sa[895] = 0.19631948f;
      sa[896] = -0.17233796f;
      sa[897] = 0.2625211f;
      sa[898] = -0.095855564f;
      sa[899] = 0.16150945f;
      sa[900] = -0.14245361f;
      sa[901] = 0.13718835f;
      sa[902] = -0.24571833f;
      sa[903] = -0.08790836f;
      sa[904] = 0.17946364f;
      sa[905] = 0.18165207f;
      sa[906] = -0.23424661f;
      sa[907] = -0.24391164f;
      sa[908] = -0.24013165f;
      sa[909] = 0.05384781f;
      sa[910] = -0.020175457f;
      sa[911] = -0.1208019f;
      sa[912] = -0.004364576f;
      sa[913] = 0.053229906f;
      sa[914] = -0.17544639f;
      sa[915] = 0.05638045f;
      sa[916] = 0.1964456f;
      sa[917] = 0.006638104f;
      sa[918] = 0.20816375f;
      sa[919] = -0.05746853f;
      sa[920] = 0.15516602f;
      sa[921] = -0.05963023f;
      sa[922] = -0.116519496f;
      sa[923] = -0.111235194f;
      sa[924] = -0.120478265f;
      sa[925] = -0.2242055f;
      sa[926] = 0.11687384f;
      sa[927] = -0.12355999f;
      sa[928] = 0.24435751f;
      sa[929] = 0.13571592f;
      sa[930] = 0.14829955f;
      sa[931] = -0.003245304f;
      sa[932] = 0.2542082f;
      sa[933] = 0.019177271f;
      sa[934] = 0.19687143f;
      sa[935] = -0.19631492f;
      sa[936] = 0.084632985f;
      sa[937] = 0.17319037f;
      sa[938] = -0.12166181f;
      sa[939] = -0.04373497f;
      sa[940] = -0.045620997f;
      sa[941] = -0.29021415f;
      sa[942] = -0.2261336f;
      sa[943] = -0.15721287f;
      sa[944] = -0.20980838f;
      sa[945] = 0.051936414f;
      sa[946] = 0.089462675f;
      sa[947] = 0.25484458f;
      sa[948] = 0.08129479f;
      sa[949] = -0.1771394f;
      sa[950] = 0.08509836f;
      sa[951] = -0.08458544f;
      sa[952] = -0.21271539f;
      sa[953] = -0.18029474f;
      sa[954] = -0.2605787f;
      sa[955] = 0.059446312f;
      sa[956] = -0.018935315f;
      sa[957] = 0.03698362f;
      sa[958] = 0.0955897f;
      sa[959] = -0.15441167f;
      sa[960] = 0.31317413f;
      sa[961] = -0.119146876f;
      sa[962] = -0.045910604f;
      sa[963] = -0.051681012f;
      sa[964] = -0.17326468f;
      sa[965] = 0.24371198f;
      sa[966] = -0.08868242f;
      sa[967] = -0.26549208f;
      sa[968] = 0.10012175f;
      sa[969] = 0.05874866f;
      sa[970] = 0.2797189f;
      sa[971] = 0.012872264f;
      sa[972] = -0.1919187f;
      sa[973] = -0.19806421f;
      sa[974] = -0.30703777f;
      sa[975] = -0.2592643f;
      sa[976] = -0.07829551f;
      sa[977] = 0.0304971f;
      sa[978] = -0.09642395f;
      sa[979] = 0.14542076f;
      sa[980] = 0.06564145f;
      sa[981] = -0.19387403f;
      sa[982] = 0.10799246f;
      sa[983] = -0.11325667f;
      sa[984] = -0.2641685f;
      sa[985] = 0.049908977f;
      sa[986] = -0.2613643f;
      sa[987] = 0.08483684f;
      sa[988] = 0.15671521f;
      sa[989] = 0.22964533f;
      sa[990] = 0.2947537f;
      sa[991] = -0.22580898f;
      sa[992] = -0.18807364f;
      sa[993] = -0.033378616f;
      sa[994] = -0.14976612f;
      sa[995] = -0.25266686f;
      sa[996] = 0.17987986f;
      sa[997] = 0.15235567f;
      sa[998] = 0.12979637f;
      sa[999] = 0.24694924f;
      sa[1000] = 0.03424225f;
      sa[1001] = 0.24063943f;
      sa[1002] = 0.25915033f;
      sa[1003] = -0.054239064f;
      sa[1004] = 0.17311203f;
      sa[1005] = -0.2541665f;
      sa[1006] = -0.04574584f;
      sa[1007] = 0.08185016f;
      sa[1008] = 0.18487951f;
      sa[1009] = 0.023525415f;
      sa[1010] = -0.020668317f;
      sa[1011] = 0.25123224f;
      sa[1012] = -0.08184365f;
      sa[1013] = 0.13759717f;
      sa[1014] = 0.25458097f;
      sa[1015] = -0.2926472f;
      sa[1016] = 0.25218913f;
      sa[1017] = 0.04353703f;
      sa[1018] = -0.018387184f;
      sa[1019] = 0.06637602f;
      sa[1020] = -0.2473753f;
      sa[1021] = 0.06475568f;
      sa[1022] = 0.22240692f;
      sa[1023] = 0.05949858f;
      sa[1024] = -0.061759233f;
      sa[1025] = 0.07908605f;
      sa[1026] = 0.16375218f;
      sa[1027] = 0.26322296f;
      sa[1028] = 0.27294913f;
      sa[1029] = -0.04670369f;
      sa[1030] = -0.17398688f;
      sa[1031] = -0.023507325f;
      sa[1032] = -0.22255728f;
      sa[1033] = 0.038990907f;
      sa[1034] = -0.023215368f;
      sa[1035] = -0.26186615f;
      sa[1036] = 0.23736346f;
      sa[1037] = 0.0076687103f;
      sa[1038] = -0.22224413f;
      sa[1039] = 0.22190416f;
      sa[1040] = -0.017640632f;
      sa[1041] = 0.0763921f;
      sa[1042] = -0.22851114f;
      sa[1043] = -0.059556194f;
      sa[1044] = 0.18577915f;
      sa[1045] = 0.2266479f;
      sa[1046] = -0.20464185f;
      sa[1047] = -0.19287558f;
      sa[1048] = 0.16130319f;
      sa[1049] = -0.09840874f;
      sa[1050] = 0.05129731f;
      sa[1051] = -0.18404873f;
      sa[1052] = 0.14115466f;
      sa[1053] = 0.27434734f;
      sa[1054] = 0.21497685f;
      sa[1055] = -0.026334744f;
      sa[1056] = 0.26333612f;
      sa[1057] = -0.19411492f;
      sa[1058] = 0.22269808f;
      sa[1059] = -0.16533631f;
      sa[1060] = -0.27806425f;
      sa[1061] = 0.04376398f;
      sa[1062] = 0.2669824f;
      sa[1063] = -0.04245304f;
      sa[1064] = 0.11315643f;
      sa[1065] = -0.007661068f;
      sa[1066] = 0.19029352f;
      sa[1067] = -0.28631243f;
      sa[1068] = -0.2962109f;
      sa[1069] = 0.19745275f;
      sa[1070] = 0.15627322f;
      sa[1071] = 0.1974936f;
      sa[1072] = -0.22963457f;
      sa[1073] = 0.12754178f;
      sa[1074] = 0.115775794f;
      sa[1075] = -0.16200481f;
      sa[1076] = -0.105849385f;
      sa[1077] = 0.13034594f;
      sa[1078] = -0.023502363f;
      sa[1079] = 0.052603513f;
      sa[1080] = 0.20244944f;
      sa[1081] = 0.23822209f;
      sa[1082] = -0.29045877f;
      sa[1083] = -0.185566f;
      sa[1084] = 0.24514218f;
      sa[1085] = -0.20005722f;
      sa[1086] = -0.2507029f;
      sa[1087] = -0.20754425f;
      sa[1088] = -0.19668749f;
      sa[1089] = 0.08281803f;
      sa[1090] = -0.2617878f;
      sa[1091] = 0.11530576f;
      sa[1092] = -0.22472742f;
      sa[1093] = -0.24333586f;
      sa[1094] = 0.012639337f;
      sa[1095] = -0.18968797f;
      sa[1096] = 0.0992338f;
      sa[1097] = -0.120322265f;
      sa[1098] = -0.026863094f;
      sa[1099] = -0.057076637f;
      sa[1100] = -0.11092084f;
      sa[1101] = 0.1475292f;
      sa[1102] = -0.12376081f;
      sa[1103] = 0.24947666f;
      sa[1104] = -0.25776112f;
      sa[1105] = -0.12838748f;
      sa[1106] = -0.120938264f;
      sa[1107] = 0.2267841f;
      sa[1108] = -0.17645077f;
      sa[1109] = 0.2456438f;
      sa[1110] = 0.18285085f;
      sa[1111] = -0.21755628f;
      sa[1112] = 0.12591973f;
      sa[1113] = 0.17530195f;
      sa[1114] = 0.09534554f;
      sa[1115] = 0.24109301f;
      sa[1116] = -0.07970275f;
      sa[1117] = -0.21833102f;
      sa[1118] = -0.20660783f;
      sa[1119] = -0.09596855f;
      sa[1120] = 0.19489363f;
      sa[1121] = 0.07466878f;
      sa[1122] = 0.2435028f;
      sa[1123] = 0.2591646f;
      sa[1124] = 0.008634832f;
      sa[1125] = -0.0802694f;
      sa[1126] = 0.22122873f;
      sa[1127] = 0.13688761f;
      sa[1128] = 0.0063622557f;
      sa[1129] = -0.11219584f;
      sa[1130] = 0.20068684f;
      sa[1131] = 0.2624142f;
      sa[1132] = -0.20255028f;
      sa[1133] = -0.17174955f;
      sa[1134] = 0.28327236f;
      sa[1135] = -0.31506616f;
      sa[1136] = -0.033953376f;
      sa[1137] = 0.1996715f;
      sa[1138] = -0.07663196f;
      sa[1139] = 0.1417708f;
      sa[1140] = 0.228142f;
      sa[1141] = -0.289382f;
      sa[1142] = 0.13614273f;
      sa[1143] = -0.012193847f;
      sa[1144] = -0.27203196f;
      sa[1145] = 0.16815029f;
      sa[1146] = 0.21699083f;
      sa[1147] = -0.06750757f;
      sa[1148] = 0.020102233f;
      sa[1149] = 0.0042091263f;
      sa[1150] = -0.25918925f;
      sa[1151] = -0.24229604f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2752398f;
      sa[1] = -0.12231285f;
      sa[2] = -0.5473509f;
      sa[3] = -0.9175302f;
      sa[4] = 0.08265113f;
      sa[5] = 0.21724898f;
      sa[6] = 1.2235863f;
      sa[7] = -0.6767738f;
      sa[8] = -0.92040336f;
      sa[9] = 0.6987607f;
      sa[10] = -0.15404572f;
      sa[11] = 0.41703206f;
      sa[12] = 0.20197996f;
      sa[13] = 0.059019085f;
      sa[14] = -1.2593163f;
      sa[15] = 1.1265997f;
      sa[16] = 1.5723504f;
      sa[17] = -0.44047466f;
      sa[18] = 0.049086522f;
      sa[19] = -0.45440257f;
      sa[20] = 1.1638373f;
      sa[21] = 0.042715143f;
      sa[22] = -1.0132022f;
      sa[23] = 0.7838057f;
      sa[24] = -1.3445319f;
      sa[25] = 0.47095364f;
      sa[26] = -0.22915608f;
      sa[27] = 1.4950671f;
      sa[28] = -1.403207f;
      sa[29] = -0.49697718f;
      sa[30] = 0.41617718f;
      sa[31] = -0.6478478f;
      sa[32] = -1.1603063f;
      sa[33] = -1.4770558f;
      sa[34] = 0.040167905f;
      sa[35] = 1.3692533f;
      sa[36] = -0.31114393f;
      sa[37] = -0.05349875f;
      sa[38] = 0.18391375f;
      sa[39] = 0.82194924f;
      sa[40] = -0.7578021f;
      sa[41] = -1.3519686f;
      sa[42] = -1.0272478f;
      sa[43] = -1.4143956f;
      sa[44] = 0.02963694f;
      sa[45] = -1.3252981f;
      sa[46] = 1.1993428f;
      sa[47] = 1.3253754f;
      sa[48] = -1.3513348f;
      sa[49] = -1.0513748f;
      sa[50] = 0.41034856f;
      sa[51] = -0.3019981f;
      sa[52] = 0.8126985f;
      sa[53] = 0.8948437f;
      sa[54] = -0.22458816f;
      sa[55] = 1.1230148f;
      sa[56] = -1.0045958f;
      sa[57] = -1.1108161f;
      sa[58] = 0.17418087f;
      sa[59] = -0.19196242f;
      sa[60] = 1.3679111f;
      sa[61] = -0.57231414f;
      sa[62] = -0.34954876f;
      sa[63] = 0.6875181f;
      sa[64] = 1.4624919f;
      sa[65] = -0.6462103f;
      sa[66] = 0.6405109f;
      sa[67] = 1.598299f;
      sa[68] = 0.72884876f;
      sa[69] = -1.0241605f;
      sa[70] = -1.5281321f;
      sa[71] = -0.40940166f;
      sa[72] = -1.310676f;
      sa[73] = 1.1688492f;
      sa[74] = 1.3434693f;
      sa[75] = -0.11569846f;
      sa[76] = 0.9233471f;
      sa[77] = 0.5221452f;
      sa[78] = -1.279372f;
      sa[79] = 0.97201353f;
      sa[80] = -0.8109468f;
      sa[81] = 0.2710665f;
      sa[82] = 0.8123811f;
      sa[83] = -0.6069085f;
      sa[84] = -1.5860332f;
      sa[85] = -1.2654788f;
      sa[86] = 0.25708073f;
      sa[87] = 1.2253271f;
      sa[88] = -1.5594009f;
      sa[89] = -0.5022358f;
      sa[90] = -1.0165892f;
      sa[91] = 1.5318446f;
      sa[92] = -0.31724244f;
      sa[93] = 0.23757419f;
      sa[94] = -1.5217857f;
      sa[95] = -0.23453015f;
      sa[96] = -1.1146787f;
      sa[97] = 0.1765487f;
      sa[98] = -0.06930535f;
      sa[99] = 0.3328653f;
      sa[100] = -1.2490886f;
      sa[101] = -0.38719052f;
      sa[102] = 1.304531f;
      sa[103] = 0.05146153f;
      sa[104] = -0.15333387f;
      sa[105] = -0.5823566f;
      sa[106] = 1.4426577f;
      sa[107] = 1.2039051f;
      sa[108] = 0.72328806f;
      sa[109] = 0.11502281f;
      sa[110] = 0.71421176f;
      sa[111] = -0.75028455f;
      sa[112] = -1.1053826f;
      sa[113] = 0.19751234f;
      sa[114] = 0.1833571f;
      sa[115] = -0.31636256f;
      sa[116] = 1.1761628f;
      sa[117] = 0.055054747f;
      sa[118] = -1.3207062f;
      sa[119] = -0.7934848f;
      sa[120] = -0.3298312f;
      sa[121] = 1.0803432f;
      sa[122] = -0.06204733f;
      sa[123] = 0.36035463f;
      sa[124] = -0.73362243f;
      sa[125] = 0.79517144f;
      sa[126] = -0.94258255f;
      sa[127] = 0.45880365f;
      sa[128] = -0.8662466f;
      sa[129] = 0.75514644f;
      sa[130] = -0.37605527f;
      sa[131] = 0.8599718f;
      sa[132] = 0.48711044f;
      sa[133] = 0.62550646f;
      sa[134] = 0.65230566f;
      sa[135] = -1.0994074f;
      sa[136] = 0.5229649f;
      sa[137] = -0.6311636f;
      sa[138] = -0.1279831f;
      sa[139] = 1.1819458f;
      sa[140] = -0.41932738f;
      sa[141] = 0.02187964f;
      sa[142] = 0.31830287f;
      sa[143] = -0.765378f;
      sa[144] = 0.9918413f;
      sa[145] = -0.8008525f;
      sa[146] = 0.056696877f;
      sa[147] = -0.30853686f;
      sa[148] = -0.8359509f;
      sa[149] = 1.0870568f;
      sa[150] = -1.1030875f;
      sa[151] = -1.5523541f;
      sa[152] = 1.589472f;
      sa[153] = -0.6177132f;
      sa[154] = 1.3223922f;
      sa[155] = -1.5200495f;
      sa[156] = -1.4345317f;
      sa[157] = -1.0740309f;
      sa[158] = -0.21466655f;
      sa[159] = -0.6535678f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


