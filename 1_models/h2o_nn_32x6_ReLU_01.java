/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:46:40.212+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_01

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_01 > h2o_nn_32x6_ReLU_01.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_01.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_01", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_01 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_01.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_01_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_01() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4244722294774448920L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_01_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_01_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_01_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_01_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_01_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_01_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_01_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_01_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_01_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4842197232851161;
      sa[1] = 0.4689736456758929;
      sa[2] = 0.5047712604469583;
      sa[3] = 0.5152132503989997;
      sa[4] = 0.5107113217939409;
      sa[5] = 0.5302678909548351;
      sa[6] = 0.489635686731507;
      sa[7] = 0.5167071900116433;
      sa[8] = 0.5039249188890983;
      sa[9] = 0.47429199747809936;
      sa[10] = 0.488699212670255;
      sa[11] = 0.4611503763990622;
      sa[12] = 0.44299104819944435;
      sa[13] = 0.4479039795473175;
      sa[14] = 0.5235715433284565;
      sa[15] = 0.564107729893031;
      sa[16] = 0.5010616780496524;
      sa[17] = 0.49749960842078933;
      sa[18] = 0.4874520174947093;
      sa[19] = 0.5189031123150308;
      sa[20] = 0.49963722626525436;
      sa[21] = 0.5381188982314796;
      sa[22] = 0.5160505686242551;
      sa[23] = 0.5238853675890699;
      sa[24] = 0.4643186802434438;
      sa[25] = 0.45196829803339267;
      sa[26] = 0.5447045927618663;
      sa[27] = 0.497473314214883;
      sa[28] = 0.5268695440570776;
      sa[29] = 0.3929570138233375;
      sa[30] = 0.5245313675441098;
      sa[31] = 0.4997593199318841;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_01_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_01_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0050453567082263395;
      sa[1] = 0.01196076891341973;
      sa[2] = -0.011335682404858986;
      sa[3] = -0.03422313172447894;
      sa[4] = -0.0042244083187960545;
    }
  }
}
class h2o_nn_32x6_ReLU_01_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_01_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_01_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.04881849f;
      sa[1] = 0.21750502f;
      sa[2] = 0.15256296f;
      sa[3] = 0.16886093f;
      sa[4] = -0.16208093f;
      sa[5] = -0.16697225f;
      sa[6] = -0.034388788f;
      sa[7] = 0.23659377f;
      sa[8] = 0.11761004f;
      sa[9] = -0.17143683f;
      sa[10] = -0.15514584f;
      sa[11] = -0.19263451f;
      sa[12] = 0.07980354f;
      sa[13] = -0.24844716f;
      sa[14] = -0.15966064f;
      sa[15] = -0.016825117f;
      sa[16] = 0.081661746f;
      sa[17] = 0.12733178f;
      sa[18] = -0.21114723f;
      sa[19] = 0.1521443f;
      sa[20] = 0.22266014f;
      sa[21] = -0.29267737f;
      sa[22] = 0.23366389f;
      sa[23] = -0.18218462f;
      sa[24] = 0.24724548f;
      sa[25] = 0.16012825f;
      sa[26] = -0.26122743f;
      sa[27] = 0.27781838f;
      sa[28] = 0.22161697f;
      sa[29] = -0.26770812f;
      sa[30] = -0.16307797f;
      sa[31] = 0.13582756f;
      sa[32] = 0.18589628f;
      sa[33] = -0.27233735f;
      sa[34] = 0.105183125f;
      sa[35] = -0.07195214f;
      sa[36] = 0.0704829f;
      sa[37] = 0.2537304f;
      sa[38] = -0.07564384f;
      sa[39] = 0.22656053f;
      sa[40] = 0.014283648f;
      sa[41] = -0.074762665f;
      sa[42] = -0.12805295f;
      sa[43] = 0.044557583f;
      sa[44] = 0.22431801f;
      sa[45] = -0.23365602f;
      sa[46] = 0.052380554f;
      sa[47] = 0.049573734f;
      sa[48] = 0.21565624f;
      sa[49] = 0.25241098f;
      sa[50] = 0.20324908f;
      sa[51] = -0.27299595f;
      sa[52] = -0.08509865f;
      sa[53] = 0.22215997f;
      sa[54] = 0.21597326f;
      sa[55] = -0.0068450817f;
      sa[56] = -0.18757074f;
      sa[57] = -0.3064555f;
      sa[58] = 0.24813934f;
      sa[59] = -0.20431903f;
      sa[60] = -0.25647867f;
      sa[61] = 0.18043706f;
      sa[62] = 0.118135154f;
      sa[63] = -0.05870346f;
      sa[64] = 0.10873601f;
      sa[65] = 0.088153936f;
      sa[66] = 0.006484433f;
      sa[67] = 0.11196929f;
      sa[68] = -0.051281627f;
      sa[69] = 0.19432059f;
      sa[70] = -0.14488234f;
      sa[71] = 0.25455958f;
      sa[72] = -0.15394278f;
      sa[73] = 0.19265963f;
      sa[74] = -0.18406387f;
      sa[75] = 0.06376443f;
      sa[76] = -0.17552276f;
      sa[77] = -0.053838618f;
      sa[78] = -0.055270292f;
      sa[79] = 0.13046478f;
      sa[80] = -0.22291122f;
      sa[81] = -0.119870104f;
      sa[82] = -0.021126084f;
      sa[83] = 0.07972099f;
      sa[84] = -0.015408353f;
      sa[85] = -0.1650243f;
      sa[86] = 0.1433978f;
      sa[87] = 0.23706701f;
      sa[88] = 0.229382f;
      sa[89] = 0.04760552f;
      sa[90] = -0.10860423f;
      sa[91] = 0.14290462f;
      sa[92] = 0.10698379f;
      sa[93] = -0.18715078f;
      sa[94] = -0.16192596f;
      sa[95] = -0.21939361f;
      sa[96] = 0.12441801f;
      sa[97] = 0.039527323f;
      sa[98] = 0.21002619f;
      sa[99] = -0.06251661f;
      sa[100] = -0.040988203f;
      sa[101] = -0.16419157f;
      sa[102] = -0.23480289f;
      sa[103] = -0.06514943f;
      sa[104] = 0.0066602416f;
      sa[105] = -0.11500857f;
      sa[106] = -0.21936283f;
      sa[107] = 0.122944064f;
      sa[108] = 0.14139795f;
      sa[109] = -0.20335186f;
      sa[110] = -0.1532904f;
      sa[111] = 0.12766066f;
      sa[112] = 0.12853065f;
      sa[113] = 0.039430127f;
      sa[114] = -0.14038387f;
      sa[115] = -0.04800941f;
      sa[116] = -0.24544394f;
      sa[117] = -0.0041180206f;
      sa[118] = -0.25326157f;
      sa[119] = -0.13582061f;
      sa[120] = 0.21161136f;
      sa[121] = 0.21973631f;
      sa[122] = 0.29357225f;
      sa[123] = 0.256703f;
      sa[124] = 0.2683891f;
      sa[125] = 0.27787542f;
      sa[126] = -0.26241085f;
      sa[127] = -0.20303103f;
      sa[128] = 0.07518772f;
      sa[129] = 0.15232989f;
      sa[130] = -0.10917535f;
      sa[131] = 0.3095763f;
      sa[132] = 0.18682995f;
      sa[133] = -0.2913177f;
      sa[134] = 0.086237624f;
      sa[135] = -0.22659062f;
      sa[136] = -0.25449124f;
      sa[137] = -0.018672187f;
      sa[138] = 0.11621014f;
      sa[139] = -0.07129757f;
      sa[140] = -0.08284709f;
      sa[141] = -0.10904996f;
      sa[142] = 0.14803623f;
      sa[143] = -0.27517754f;
      sa[144] = 0.24784476f;
      sa[145] = -0.13209786f;
      sa[146] = -0.23677565f;
      sa[147] = 0.20487905f;
      sa[148] = 0.17366561f;
      sa[149] = 0.19019085f;
      sa[150] = 0.2912964f;
      sa[151] = -0.22973175f;
      sa[152] = 0.023417678f;
      sa[153] = 0.27606508f;
      sa[154] = 0.22539788f;
      sa[155] = -0.14642501f;
      sa[156] = 0.13614132f;
      sa[157] = -0.17194223f;
      sa[158] = 0.09496588f;
      sa[159] = 0.09408682f;
      sa[160] = 0.07449178f;
      sa[161] = 0.21126674f;
      sa[162] = -0.16168661f;
      sa[163] = -0.08679445f;
      sa[164] = 0.23446096f;
      sa[165] = -0.018667366f;
      sa[166] = -0.051813573f;
      sa[167] = -0.07609282f;
      sa[168] = 0.1678569f;
      sa[169] = 0.2894853f;
      sa[170] = 0.014388791f;
      sa[171] = -0.048793707f;
      sa[172] = -0.051515356f;
      sa[173] = -0.1324234f;
      sa[174] = -0.010551833f;
      sa[175] = -0.2254286f;
      sa[176] = -0.02067575f;
      sa[177] = -0.017231384f;
      sa[178] = -0.032439504f;
      sa[179] = 0.08998056f;
      sa[180] = -0.021560496f;
      sa[181] = -0.25641203f;
      sa[182] = -0.11877375f;
      sa[183] = 0.038134765f;
      sa[184] = 0.27375898f;
      sa[185] = 0.16202186f;
      sa[186] = -0.2876369f;
      sa[187] = 0.078239456f;
      sa[188] = 0.0015982469f;
      sa[189] = 0.23025957f;
      sa[190] = 0.060173314f;
      sa[191] = -0.03253671f;
      sa[192] = -0.11455804f;
      sa[193] = 0.22217983f;
      sa[194] = 0.08408647f;
      sa[195] = 0.26216146f;
      sa[196] = 0.25780454f;
      sa[197] = -0.020521661f;
      sa[198] = 0.10261106f;
      sa[199] = -0.060296066f;
      sa[200] = 0.036486983f;
      sa[201] = -0.25488496f;
      sa[202] = 0.13468757f;
      sa[203] = -0.008522043f;
      sa[204] = -0.17603752f;
      sa[205] = 0.22921363f;
      sa[206] = 0.20949996f;
      sa[207] = 0.15867347f;
      sa[208] = -0.24075024f;
      sa[209] = -0.0677174f;
      sa[210] = -0.2674726f;
      sa[211] = -0.23933238f;
      sa[212] = 0.18981695f;
      sa[213] = -0.27698418f;
      sa[214] = -0.06223787f;
      sa[215] = 0.071682885f;
      sa[216] = 0.101683855f;
      sa[217] = 0.16748773f;
      sa[218] = -0.17133334f;
      sa[219] = 0.22958231f;
      sa[220] = -0.2245308f;
      sa[221] = 0.029237488f;
      sa[222] = 0.20549813f;
      sa[223] = 0.061374042f;
      sa[224] = 0.10794193f;
      sa[225] = 0.29019392f;
      sa[226] = -0.19913872f;
      sa[227] = 0.27970174f;
      sa[228] = 0.10913634f;
      sa[229] = 0.07821105f;
      sa[230] = 0.24452208f;
      sa[231] = -0.23764123f;
      sa[232] = -0.23312648f;
      sa[233] = 0.082561746f;
      sa[234] = 0.14900328f;
      sa[235] = -0.2717128f;
      sa[236] = -0.040150676f;
      sa[237] = -0.22323592f;
      sa[238] = -0.21614112f;
      sa[239] = 0.1280862f;
      sa[240] = -0.0030104474f;
      sa[241] = -0.19250879f;
      sa[242] = -0.06804468f;
      sa[243] = -0.22361763f;
      sa[244] = -0.20783152f;
      sa[245] = -0.1348864f;
      sa[246] = -0.26514444f;
      sa[247] = -0.061760258f;
      sa[248] = 0.25396737f;
      sa[249] = 0.23608543f;
      sa[250] = -0.2058929f;
      sa[251] = -0.1071606f;
      sa[252] = -0.26430616f;
      sa[253] = -0.24775726f;
      sa[254] = -0.24116883f;
      sa[255] = 0.15233025f;
      sa[256] = -0.17361459f;
      sa[257] = 0.2557792f;
      sa[258] = -0.24811603f;
      sa[259] = -0.1233558f;
      sa[260] = -0.20516205f;
      sa[261] = -0.090641655f;
      sa[262] = -0.13363275f;
      sa[263] = 0.24777304f;
      sa[264] = -0.14676511f;
      sa[265] = 0.049435582f;
      sa[266] = -0.27219403f;
      sa[267] = -0.22222224f;
      sa[268] = 0.1563822f;
      sa[269] = -0.14255166f;
      sa[270] = -0.019060284f;
      sa[271] = 0.19551724f;
      sa[272] = -0.07953158f;
      sa[273] = -0.115492284f;
      sa[274] = 0.11062798f;
      sa[275] = 0.01239938f;
      sa[276] = 0.088489205f;
      sa[277] = -0.22634007f;
      sa[278] = -0.11452687f;
      sa[279] = 0.20903216f;
      sa[280] = -0.15605803f;
      sa[281] = 0.27388865f;
      sa[282] = -0.09339324f;
      sa[283] = -0.032599956f;
      sa[284] = 0.028403826f;
      sa[285] = -0.1495115f;
      sa[286] = 0.23417462f;
      sa[287] = 0.1285686f;
      sa[288] = -0.1875939f;
      sa[289] = -0.14403403f;
      sa[290] = -0.0446987f;
      sa[291] = 0.05752374f;
      sa[292] = 0.11599065f;
      sa[293] = -0.082310505f;
      sa[294] = 0.093603f;
      sa[295] = 0.12590554f;
      sa[296] = 0.21987031f;
      sa[297] = 0.20399359f;
      sa[298] = -0.017221352f;
      sa[299] = -0.010428093f;
      sa[300] = 0.003636319f;
      sa[301] = -0.045056697f;
      sa[302] = 0.18321757f;
      sa[303] = 0.047797464f;
      sa[304] = -0.17967144f;
      sa[305] = -0.01745914f;
      sa[306] = 0.20215283f;
      sa[307] = -0.17547421f;
      sa[308] = 0.07818473f;
      sa[309] = 0.13233668f;
      sa[310] = 0.28027552f;
      sa[311] = 0.29391658f;
      sa[312] = -0.15702409f;
      sa[313] = -0.14779049f;
      sa[314] = -0.15275432f;
      sa[315] = -0.048551627f;
      sa[316] = -0.02972284f;
      sa[317] = -0.09842154f;
      sa[318] = 0.081652045f;
      sa[319] = 0.26380178f;
      sa[320] = -0.04030226f;
      sa[321] = 0.15262455f;
      sa[322] = 0.16400024f;
      sa[323] = -0.22075933f;
      sa[324] = -0.01492717f;
      sa[325] = 0.26721632f;
      sa[326] = -0.27248913f;
      sa[327] = 0.04625222f;
      sa[328] = -0.056300264f;
      sa[329] = 0.23249893f;
      sa[330] = -0.17367794f;
      sa[331] = -0.0030655738f;
      sa[332] = -0.26292852f;
      sa[333] = 0.10787624f;
      sa[334] = -0.0920564f;
      sa[335] = 0.22827812f;
      sa[336] = -0.15759236f;
      sa[337] = -0.15269731f;
      sa[338] = 0.25216255f;
      sa[339] = -0.21830067f;
      sa[340] = -0.31434596f;
      sa[341] = -0.2655688f;
      sa[342] = 0.16346723f;
      sa[343] = -0.10151576f;
      sa[344] = -0.17467187f;
      sa[345] = 0.18705313f;
      sa[346] = 0.19090644f;
      sa[347] = -0.18729785f;
      sa[348] = 0.24994993f;
      sa[349] = -0.2774308f;
      sa[350] = -0.23530696f;
      sa[351] = 0.09304572f;
      sa[352] = 0.18064414f;
      sa[353] = -0.03772989f;
      sa[354] = 0.083121456f;
      sa[355] = 0.10445514f;
      sa[356] = -0.1080374f;
      sa[357] = 0.2285503f;
      sa[358] = -0.25640243f;
      sa[359] = 0.028562944f;
      sa[360] = 0.07084919f;
      sa[361] = -0.0436926f;
      sa[362] = -0.1499456f;
      sa[363] = 0.23234078f;
      sa[364] = -0.10291269f;
      sa[365] = -0.19189596f;
      sa[366] = 0.017194657f;
      sa[367] = -0.25810698f;
      sa[368] = -0.18708855f;
      sa[369] = 0.24029037f;
      sa[370] = -0.22272512f;
      sa[371] = 0.09467342f;
      sa[372] = -0.00951315f;
      sa[373] = 0.2845721f;
      sa[374] = -0.117048495f;
      sa[375] = -0.26016837f;
      sa[376] = -0.2831304f;
      sa[377] = -0.22134046f;
      sa[378] = 0.30935514f;
      sa[379] = 0.068680786f;
      sa[380] = -0.11579116f;
      sa[381] = -0.089630425f;
      sa[382] = -0.031714868f;
      sa[383] = -0.10196945f;
      sa[384] = -0.12579831f;
      sa[385] = 0.08721615f;
      sa[386] = -0.21893221f;
      sa[387] = -0.19331403f;
      sa[388] = 0.08038237f;
      sa[389] = -0.0017564945f;
      sa[390] = 0.0029083763f;
      sa[391] = -0.09041992f;
      sa[392] = 0.27151582f;
      sa[393] = 0.21006502f;
      sa[394] = -0.06973614f;
      sa[395] = 0.24671458f;
      sa[396] = 0.25966516f;
      sa[397] = -0.27930862f;
      sa[398] = 0.13386837f;
      sa[399] = 0.1462055f;
      sa[400] = 0.17106834f;
      sa[401] = 0.24715824f;
      sa[402] = -0.11283545f;
      sa[403] = 0.09082829f;
      sa[404] = 0.22115369f;
      sa[405] = -0.22923657f;
      sa[406] = -0.05465926f;
      sa[407] = 0.17508046f;
      sa[408] = -0.20965987f;
      sa[409] = -0.22618484f;
      sa[410] = -0.097570404f;
      sa[411] = 0.1688788f;
      sa[412] = -0.14104201f;
      sa[413] = 0.101106144f;
      sa[414] = 0.15985814f;
      sa[415] = 0.23974505f;
      sa[416] = -0.19416878f;
      sa[417] = 0.004629047f;
      sa[418] = -0.008098116f;
      sa[419] = 0.24576491f;
      sa[420] = 0.20179039f;
      sa[421] = 0.25890097f;
      sa[422] = 0.24268419f;
      sa[423] = -0.09068538f;
      sa[424] = 0.08182607f;
      sa[425] = -0.08587076f;
      sa[426] = -0.2780998f;
      sa[427] = 0.17645691f;
      sa[428] = 0.020913873f;
      sa[429] = -0.08416328f;
      sa[430] = 0.109163f;
      sa[431] = -0.08867567f;
      sa[432] = -0.061416086f;
      sa[433] = 0.1158328f;
      sa[434] = 0.23270838f;
      sa[435] = 0.073131904f;
      sa[436] = -0.2606383f;
      sa[437] = -0.24527484f;
      sa[438] = -0.009990291f;
      sa[439] = -0.015169568f;
      sa[440] = 0.27011988f;
      sa[441] = -0.3112979f;
      sa[442] = 0.081888914f;
      sa[443] = 0.033388942f;
      sa[444] = -0.23177348f;
      sa[445] = 0.04656192f;
      sa[446] = 0.19676143f;
      sa[447] = 0.05437675f;
      sa[448] = 0.16972952f;
      sa[449] = 0.2217657f;
      sa[450] = -0.08025797f;
      sa[451] = 0.08356154f;
      sa[452] = 0.1404711f;
      sa[453] = -0.07424151f;
      sa[454] = -0.17733084f;
      sa[455] = -0.0749045f;
      sa[456] = -0.05747568f;
      sa[457] = 0.08918916f;
      sa[458] = -0.19360803f;
      sa[459] = 0.26516f;
      sa[460] = 0.18845677f;
      sa[461] = 0.2539767f;
      sa[462] = 0.03991263f;
      sa[463] = 0.19355513f;
      sa[464] = -0.21872042f;
      sa[465] = 0.23982912f;
      sa[466] = -0.028224386f;
      sa[467] = 0.10952329f;
      sa[468] = 0.09577405f;
      sa[469] = 0.28418696f;
      sa[470] = 0.18275462f;
      sa[471] = 0.116386876f;
      sa[472] = 0.003419221f;
      sa[473] = -0.10415233f;
      sa[474] = -0.010817059f;
      sa[475] = 0.10008338f;
      sa[476] = 0.2404196f;
      sa[477] = -0.17732657f;
      sa[478] = 0.08686278f;
      sa[479] = -0.119256854f;
      sa[480] = -0.29699552f;
      sa[481] = -0.20102106f;
      sa[482] = -0.24479367f;
      sa[483] = 0.19116488f;
      sa[484] = 0.21091275f;
      sa[485] = 0.11293162f;
      sa[486] = -0.012813529f;
      sa[487] = -0.19969201f;
      sa[488] = -0.20894502f;
      sa[489] = 0.058792796f;
      sa[490] = -0.017409023f;
      sa[491] = -0.24730754f;
      sa[492] = 0.19617118f;
      sa[493] = 0.24520253f;
      sa[494] = -0.21653666f;
      sa[495] = 0.12594791f;
      sa[496] = -0.0190102f;
      sa[497] = 0.046414923f;
      sa[498] = 0.15458196f;
      sa[499] = 0.14242917f;
      sa[500] = -0.010670438f;
      sa[501] = 0.13798866f;
      sa[502] = 0.21391365f;
      sa[503] = 0.00862565f;
      sa[504] = -0.16830947f;
      sa[505] = -0.21241386f;
      sa[506] = 0.17823783f;
      sa[507] = -0.1029868f;
      sa[508] = 0.072630644f;
      sa[509] = 0.19984232f;
      sa[510] = 0.14934792f;
      sa[511] = -0.01628453f;
      sa[512] = 0.06125928f;
      sa[513] = -0.08119546f;
      sa[514] = 0.25563446f;
      sa[515] = -0.22934581f;
      sa[516] = 0.015674055f;
      sa[517] = 0.07885896f;
      sa[518] = 0.12901115f;
      sa[519] = -0.093510486f;
      sa[520] = 0.20932473f;
      sa[521] = 0.1479623f;
      sa[522] = 0.09387403f;
      sa[523] = 0.21978495f;
      sa[524] = 0.17710161f;
      sa[525] = 0.14433429f;
      sa[526] = -0.01384048f;
      sa[527] = -0.0926346f;
      sa[528] = 0.0022966028f;
      sa[529] = 0.12052197f;
      sa[530] = -0.1623439f;
      sa[531] = 0.06858277f;
      sa[532] = 0.12648292f;
      sa[533] = 0.102470204f;
      sa[534] = 0.11071241f;
      sa[535] = -0.10382371f;
      sa[536] = 0.06728827f;
      sa[537] = -0.19961357f;
      sa[538] = 0.17628868f;
      sa[539] = 0.27119553f;
      sa[540] = -0.22830538f;
      sa[541] = -0.14202644f;
      sa[542] = -0.08316014f;
      sa[543] = -0.32992184f;
      sa[544] = 0.1546507f;
      sa[545] = 0.10513327f;
      sa[546] = 0.07251086f;
      sa[547] = 0.16785274f;
      sa[548] = 0.072786346f;
      sa[549] = 0.15836833f;
      sa[550] = -0.007400044f;
      sa[551] = -0.14364332f;
      sa[552] = 0.053941686f;
      sa[553] = -0.052658018f;
      sa[554] = -0.14829011f;
      sa[555] = -0.14482966f;
      sa[556] = -0.16941164f;
      sa[557] = -0.2249381f;
      sa[558] = -0.22270592f;
      sa[559] = 0.14658108f;
      sa[560] = -0.26606694f;
      sa[561] = -0.06972246f;
      sa[562] = 0.19339405f;
      sa[563] = -0.054821923f;
      sa[564] = 0.25091177f;
      sa[565] = 0.026573462f;
      sa[566] = 0.2370212f;
      sa[567] = 0.091096714f;
      sa[568] = -0.04625952f;
      sa[569] = 0.048232973f;
      sa[570] = -0.0052816584f;
      sa[571] = -0.03685181f;
      sa[572] = -0.18496543f;
      sa[573] = 0.064665526f;
      sa[574] = 0.3068456f;
      sa[575] = -0.13785069f;
      sa[576] = -0.06659671f;
      sa[577] = 0.0413453f;
      sa[578] = 0.115517385f;
      sa[579] = -0.021881687f;
      sa[580] = 0.10721125f;
      sa[581] = -0.11499359f;
      sa[582] = 0.10813058f;
      sa[583] = 0.053401876f;
      sa[584] = 0.14186639f;
      sa[585] = 0.20651019f;
      sa[586] = -0.19315933f;
      sa[587] = -0.07555354f;
      sa[588] = 0.092085995f;
      sa[589] = 0.14269312f;
      sa[590] = 0.0033719724f;
      sa[591] = 0.054010756f;
      sa[592] = -0.29670796f;
      sa[593] = -0.16207942f;
      sa[594] = -0.09215825f;
      sa[595] = -0.038774077f;
      sa[596] = 0.2706694f;
      sa[597] = -0.0025087819f;
      sa[598] = 0.23430629f;
      sa[599] = 0.037270185f;
      sa[600] = -0.2912581f;
      sa[601] = 0.22539248f;
      sa[602] = -0.08929184f;
      sa[603] = 0.24590741f;
      sa[604] = 0.23537913f;
      sa[605] = 0.18172134f;
      sa[606] = 0.21704875f;
      sa[607] = 0.07190736f;
      sa[608] = -0.034202904f;
      sa[609] = 0.046464365f;
      sa[610] = 0.1512944f;
      sa[611] = -0.043499596f;
      sa[612] = -0.12052175f;
      sa[613] = 0.07208029f;
      sa[614] = 0.086429775f;
      sa[615] = 0.06627594f;
      sa[616] = 0.05791357f;
      sa[617] = -0.2821183f;
      sa[618] = -0.13853769f;
      sa[619] = -0.1459494f;
      sa[620] = -0.076352455f;
      sa[621] = -0.23137152f;
      sa[622] = -0.30582163f;
      sa[623] = -0.2852383f;
      sa[624] = -0.050903033f;
      sa[625] = 0.23224203f;
      sa[626] = -0.0011940188f;
      sa[627] = 0.25203475f;
      sa[628] = -0.28424224f;
      sa[629] = -0.068642944f;
      sa[630] = -0.10503f;
      sa[631] = 0.16896044f;
      sa[632] = 0.08481455f;
      sa[633] = -0.16003236f;
      sa[634] = -0.20449488f;
      sa[635] = 0.15710846f;
      sa[636] = -0.16350974f;
      sa[637] = -0.03912678f;
      sa[638] = -0.07771908f;
      sa[639] = -0.101157025f;
      sa[640] = -0.1435152f;
      sa[641] = -0.28640884f;
      sa[642] = 0.17564525f;
      sa[643] = -0.30326357f;
      sa[644] = -0.00229086f;
      sa[645] = -0.11218341f;
      sa[646] = 0.2404238f;
      sa[647] = -0.2870823f;
      sa[648] = -0.05721662f;
      sa[649] = -0.058190282f;
      sa[650] = 0.0593383f;
      sa[651] = -0.14108223f;
      sa[652] = 0.08526914f;
      sa[653] = -0.14916207f;
      sa[654] = -0.15403292f;
      sa[655] = -0.1593848f;
      sa[656] = 0.06301258f;
      sa[657] = 0.11381502f;
      sa[658] = -0.24306653f;
      sa[659] = -0.24866588f;
      sa[660] = -0.24387924f;
      sa[661] = -0.116062365f;
      sa[662] = -0.28965327f;
      sa[663] = 0.13913389f;
      sa[664] = -0.17561102f;
      sa[665] = 0.25785398f;
      sa[666] = -0.0017028884f;
      sa[667] = -0.24603003f;
      sa[668] = 0.2500923f;
      sa[669] = -0.121996194f;
      sa[670] = 0.123852596f;
      sa[671] = 0.04644401f;
      sa[672] = -0.25575128f;
      sa[673] = 0.15475418f;
      sa[674] = 0.2507121f;
      sa[675] = -0.23486109f;
      sa[676] = -0.09667867f;
      sa[677] = -0.19343908f;
      sa[678] = 0.18579845f;
      sa[679] = -0.06546966f;
      sa[680] = 0.07972628f;
      sa[681] = 0.10786718f;
      sa[682] = 0.043338664f;
      sa[683] = -0.10889294f;
      sa[684] = -0.028543912f;
      sa[685] = 0.031551827f;
      sa[686] = -0.1561336f;
      sa[687] = -0.21287738f;
      sa[688] = -0.29309413f;
      sa[689] = -0.23914714f;
      sa[690] = -0.037469953f;
      sa[691] = 0.08249132f;
      sa[692] = -0.1429503f;
      sa[693] = -0.17435665f;
      sa[694] = 0.27044228f;
      sa[695] = -0.010235037f;
      sa[696] = -0.08312889f;
      sa[697] = -0.13505222f;
      sa[698] = -0.16212633f;
      sa[699] = 0.29433206f;
      sa[700] = 0.17563723f;
      sa[701] = 0.11159489f;
      sa[702] = 0.1862619f;
      sa[703] = -0.034843124f;
      sa[704] = -0.2655045f;
      sa[705] = -0.059206713f;
      sa[706] = -0.14532173f;
      sa[707] = 0.01599627f;
      sa[708] = 0.011228891f;
      sa[709] = -0.2667316f;
      sa[710] = 0.2598804f;
      sa[711] = -0.124409616f;
      sa[712] = 0.029214032f;
      sa[713] = 0.12072139f;
      sa[714] = 0.1707693f;
      sa[715] = 0.067485794f;
      sa[716] = 0.040935628f;
      sa[717] = 0.18949178f;
      sa[718] = -0.09957123f;
      sa[719] = 0.051626056f;
      sa[720] = -0.24604733f;
      sa[721] = 0.24768478f;
      sa[722] = -0.13831164f;
      sa[723] = -0.06388052f;
      sa[724] = 0.043537375f;
      sa[725] = -0.2943387f;
      sa[726] = -0.23067892f;
      sa[727] = -0.28106052f;
      sa[728] = -0.11604548f;
      sa[729] = -0.01773461f;
      sa[730] = 0.12157438f;
      sa[731] = -0.3069853f;
      sa[732] = 0.15280351f;
      sa[733] = 0.19806936f;
      sa[734] = -0.15651976f;
      sa[735] = 0.2776765f;
      sa[736] = 0.019390592f;
      sa[737] = 0.18449935f;
      sa[738] = -0.21283616f;
      sa[739] = -0.24811524f;
      sa[740] = -0.2774513f;
      sa[741] = -0.29179668f;
      sa[742] = 0.07070938f;
      sa[743] = 0.040065516f;
      sa[744] = 0.053289954f;
      sa[745] = -0.21417281f;
      sa[746] = 0.087760076f;
      sa[747] = -0.081695944f;
      sa[748] = -0.15044846f;
      sa[749] = -0.17861935f;
      sa[750] = 0.18388218f;
      sa[751] = 0.24727893f;
      sa[752] = -0.10063007f;
      sa[753] = 0.13389394f;
      sa[754] = 0.053514868f;
      sa[755] = 0.2386967f;
      sa[756] = -0.15757477f;
      sa[757] = 0.24032076f;
      sa[758] = -0.16459087f;
      sa[759] = -0.17728606f;
      sa[760] = -0.09836288f;
      sa[761] = 0.039534513f;
      sa[762] = -0.10223678f;
      sa[763] = 0.14893255f;
      sa[764] = 0.09375574f;
      sa[765] = -0.03741314f;
      sa[766] = -0.20489489f;
      sa[767] = 0.12832698f;
      sa[768] = -0.16119063f;
      sa[769] = -0.2689307f;
      sa[770] = -0.0039368244f;
      sa[771] = 0.02036666f;
      sa[772] = 0.056726992f;
      sa[773] = -0.23246945f;
      sa[774] = -0.025439102f;
      sa[775] = 0.29175296f;
      sa[776] = -0.0450649f;
      sa[777] = 0.06512465f;
      sa[778] = 0.17000507f;
      sa[779] = -0.12939307f;
      sa[780] = -0.009692523f;
      sa[781] = -0.052279994f;
      sa[782] = 0.12392092f;
      sa[783] = -0.15086183f;
      sa[784] = -0.13000403f;
      sa[785] = -0.10876548f;
      sa[786] = -0.088408835f;
      sa[787] = -0.2238516f;
      sa[788] = -0.30357972f;
      sa[789] = 0.14858441f;
      sa[790] = -0.11384085f;
      sa[791] = -0.07388073f;
      sa[792] = 0.1805951f;
      sa[793] = -0.15434982f;
      sa[794] = -0.211836f;
      sa[795] = -0.055402063f;
      sa[796] = 0.23528913f;
      sa[797] = -0.19819857f;
      sa[798] = -0.26018935f;
      sa[799] = -0.18717606f;
      sa[800] = 0.1876038f;
      sa[801] = 0.02726557f;
      sa[802] = 0.2428855f;
      sa[803] = 0.045768656f;
      sa[804] = 0.22688003f;
      sa[805] = 0.28237548f;
      sa[806] = 0.279682f;
      sa[807] = 0.19881174f;
      sa[808] = -0.0496923f;
      sa[809] = -0.24681759f;
      sa[810] = 0.08986721f;
      sa[811] = 0.21011269f;
      sa[812] = 0.16979322f;
      sa[813] = -0.27226433f;
      sa[814] = 0.08895205f;
      sa[815] = -0.15357335f;
      sa[816] = -0.10024865f;
      sa[817] = -0.1625745f;
      sa[818] = 0.0036787495f;
      sa[819] = -0.049088147f;
      sa[820] = -0.2715744f;
      sa[821] = -0.18534599f;
      sa[822] = -0.26444465f;
      sa[823] = 0.073214695f;
      sa[824] = 0.08996269f;
      sa[825] = 0.29313073f;
      sa[826] = -0.23835854f;
      sa[827] = -0.25953865f;
      sa[828] = 0.12489313f;
      sa[829] = -0.078992575f;
      sa[830] = 0.13761443f;
      sa[831] = 0.056654163f;
      sa[832] = 0.14123335f;
      sa[833] = 0.054482326f;
      sa[834] = 0.1594653f;
      sa[835] = -0.101602755f;
      sa[836] = 0.19595301f;
      sa[837] = -0.15805918f;
      sa[838] = 0.15062086f;
      sa[839] = -0.30630216f;
      sa[840] = 0.18129171f;
      sa[841] = 0.085875034f;
      sa[842] = 0.12897013f;
      sa[843] = 0.016383916f;
      sa[844] = 0.038642146f;
      sa[845] = 0.13333218f;
      sa[846] = -0.26786566f;
      sa[847] = 4.594923E-6f;
      sa[848] = 0.21586156f;
      sa[849] = 0.25669912f;
      sa[850] = -0.015686274f;
      sa[851] = 0.117359385f;
      sa[852] = 0.24923652f;
      sa[853] = 0.15153125f;
      sa[854] = 0.22461168f;
      sa[855] = 0.24398589f;
      sa[856] = 0.10905402f;
      sa[857] = -0.12619044f;
      sa[858] = 0.14401901f;
      sa[859] = 0.09499244f;
      sa[860] = 0.19927773f;
      sa[861] = -0.2934089f;
      sa[862] = -0.014562024f;
      sa[863] = 0.14385337f;
      sa[864] = -0.17469293f;
      sa[865] = 0.22021687f;
      sa[866] = -0.1727114f;
      sa[867] = 0.06790638f;
      sa[868] = -0.19574685f;
      sa[869] = 0.1999754f;
      sa[870] = -0.029540371f;
      sa[871] = 0.13438386f;
      sa[872] = 0.26133004f;
      sa[873] = -0.08442451f;
      sa[874] = -0.032872003f;
      sa[875] = -0.16621217f;
      sa[876] = -0.23163903f;
      sa[877] = -0.20685004f;
      sa[878] = 0.04255874f;
      sa[879] = 0.18140423f;
      sa[880] = -0.11670741f;
      sa[881] = -0.12350066f;
      sa[882] = 0.18955798f;
      sa[883] = 0.15428095f;
      sa[884] = -0.14259247f;
      sa[885] = -0.14685935f;
      sa[886] = 0.08906268f;
      sa[887] = -0.075391814f;
      sa[888] = -0.1058624f;
      sa[889] = 0.029334622f;
      sa[890] = -0.2884159f;
      sa[891] = 0.26416028f;
      sa[892] = 0.14727026f;
      sa[893] = 0.22912356f;
      sa[894] = 0.018974071f;
      sa[895] = 0.18882802f;
      sa[896] = -0.13385487f;
      sa[897] = 0.29450133f;
      sa[898] = -0.14537998f;
      sa[899] = 0.10494458f;
      sa[900] = -0.13616164f;
      sa[901] = 0.14528102f;
      sa[902] = -0.25811395f;
      sa[903] = -0.06148732f;
      sa[904] = 0.15469034f;
      sa[905] = 0.16537535f;
      sa[906] = -0.25482094f;
      sa[907] = -0.24560548f;
      sa[908] = -0.24063207f;
      sa[909] = 0.05055286f;
      sa[910] = 0.008656614f;
      sa[911] = -0.13911436f;
      sa[912] = -0.035772663f;
      sa[913] = 0.036078904f;
      sa[914] = -0.19708537f;
      sa[915] = 0.048397314f;
      sa[916] = 0.20326844f;
      sa[917] = 0.009668902f;
      sa[918] = 0.18465137f;
      sa[919] = -0.050864857f;
      sa[920] = 0.112460986f;
      sa[921] = -0.09992366f;
      sa[922] = -0.1518384f;
      sa[923] = -0.14321053f;
      sa[924] = -0.13546365f;
      sa[925] = -0.18107392f;
      sa[926] = 0.10181205f;
      sa[927] = -0.086288795f;
      sa[928] = 0.21166211f;
      sa[929] = 0.10612479f;
      sa[930] = 0.13236819f;
      sa[931] = -0.0253688f;
      sa[932] = 0.2821616f;
      sa[933] = -0.0025094561f;
      sa[934] = 0.18338825f;
      sa[935] = -0.21633825f;
      sa[936] = 0.08527852f;
      sa[937] = 0.19453557f;
      sa[938] = -0.105802745f;
      sa[939] = -0.020810159f;
      sa[940] = -0.047338504f;
      sa[941] = -0.27505073f;
      sa[942] = -0.21270385f;
      sa[943] = -0.15161234f;
      sa[944] = -0.20382296f;
      sa[945] = 0.0840221f;
      sa[946] = 0.06573575f;
      sa[947] = 0.29421234f;
      sa[948] = 0.110844985f;
      sa[949] = -0.14685008f;
      sa[950] = 0.11652235f;
      sa[951] = -0.050569355f;
      sa[952] = -0.20389949f;
      sa[953] = -0.17827374f;
      sa[954] = -0.23762612f;
      sa[955] = 0.035938818f;
      sa[956] = -0.0022665167f;
      sa[957] = 0.03928656f;
      sa[958] = 0.108253725f;
      sa[959] = -0.1419566f;
      sa[960] = 0.3236152f;
      sa[961] = -0.117344156f;
      sa[962] = -0.03666772f;
      sa[963] = -0.093299925f;
      sa[964] = -0.15457243f;
      sa[965] = 0.25041038f;
      sa[966] = -0.070632994f;
      sa[967] = -0.24237396f;
      sa[968] = 0.08943668f;
      sa[969] = 0.07440805f;
      sa[970] = 0.2471888f;
      sa[971] = -0.019667264f;
      sa[972] = -0.18748261f;
      sa[973] = -0.21221045f;
      sa[974] = -0.3218735f;
      sa[975] = -0.26665103f;
      sa[976] = -0.06904541f;
      sa[977] = 0.03224331f;
      sa[978] = -0.096691735f;
      sa[979] = 0.15715031f;
      sa[980] = 0.063288145f;
      sa[981] = -0.19845739f;
      sa[982] = 0.14141524f;
      sa[983] = -0.13663553f;
      sa[984] = -0.2807663f;
      sa[985] = 0.04119379f;
      sa[986] = -0.2763142f;
      sa[987] = 0.07124463f;
      sa[988] = 0.14752601f;
      sa[989] = 0.22501999f;
      sa[990] = 0.2705009f;
      sa[991] = -0.22301967f;
      sa[992] = -0.19619979f;
      sa[993] = -0.028523695f;
      sa[994] = -0.15305229f;
      sa[995] = -0.26045448f;
      sa[996] = 0.1637535f;
      sa[997] = 0.17039844f;
      sa[998] = 0.111600265f;
      sa[999] = 0.2656655f;
      sa[1000] = 0.027569998f;
      sa[1001] = 0.24380414f;
      sa[1002] = 0.25903192f;
      sa[1003] = -0.060745254f;
      sa[1004] = 0.17323877f;
      sa[1005] = -0.2661216f;
      sa[1006] = -0.005255149f;
      sa[1007] = 0.10380072f;
      sa[1008] = 0.19012235f;
      sa[1009] = 0.04898048f;
      sa[1010] = -0.026171943f;
      sa[1011] = 0.19879238f;
      sa[1012] = -0.07616543f;
      sa[1013] = 0.13587087f;
      sa[1014] = 0.25047883f;
      sa[1015] = -0.3126178f;
      sa[1016] = 0.25651762f;
      sa[1017] = 0.037561093f;
      sa[1018] = -0.03710137f;
      sa[1019] = 0.03042142f;
      sa[1020] = -0.23831986f;
      sa[1021] = 0.06499778f;
      sa[1022] = 0.22043388f;
      sa[1023] = 0.060395703f;
      sa[1024] = -0.045634158f;
      sa[1025] = 0.07889386f;
      sa[1026] = 0.16041112f;
      sa[1027] = 0.29336965f;
      sa[1028] = 0.298771f;
      sa[1029] = -0.024958277f;
      sa[1030] = -0.16371511f;
      sa[1031] = 0.0102936f;
      sa[1032] = -0.2120974f;
      sa[1033] = 0.028775783f;
      sa[1034] = -0.025132291f;
      sa[1035] = -0.21437341f;
      sa[1036] = 0.25787088f;
      sa[1037] = 0.028362365f;
      sa[1038] = -0.21435384f;
      sa[1039] = 0.23480585f;
      sa[1040] = -0.052832898f;
      sa[1041] = 0.04347734f;
      sa[1042] = -0.21885993f;
      sa[1043] = -0.025830258f;
      sa[1044] = 0.16636969f;
      sa[1045] = 0.21333061f;
      sa[1046] = -0.2219905f;
      sa[1047] = -0.15588513f;
      sa[1048] = 0.13928215f;
      sa[1049] = -0.10974302f;
      sa[1050] = 0.028668031f;
      sa[1051] = -0.18353651f;
      sa[1052] = 0.119657055f;
      sa[1053] = 0.24155127f;
      sa[1054] = 0.23571043f;
      sa[1055] = -0.062872715f;
      sa[1056] = 0.23273225f;
      sa[1057] = -0.21467319f;
      sa[1058] = 0.19357468f;
      sa[1059] = -0.17964469f;
      sa[1060] = -0.2793208f;
      sa[1061] = 0.017930847f;
      sa[1062] = 0.26289296f;
      sa[1063] = -0.03734109f;
      sa[1064] = 0.06571719f;
      sa[1065] = -0.053389154f;
      sa[1066] = 0.14814687f;
      sa[1067] = -0.3195958f;
      sa[1068] = -0.29796746f;
      sa[1069] = 0.22513291f;
      sa[1070] = 0.16034652f;
      sa[1071] = 0.21877193f;
      sa[1072] = -0.27058288f;
      sa[1073] = 0.091341645f;
      sa[1074] = 0.09546681f;
      sa[1075] = -0.19010535f;
      sa[1076] = -0.0656045f;
      sa[1077] = 0.13977866f;
      sa[1078] = -0.05373735f;
      sa[1079] = 0.016847769f;
      sa[1080] = 0.22636674f;
      sa[1081] = 0.24733973f;
      sa[1082] = -0.302616f;
      sa[1083] = -0.24708973f;
      sa[1084] = 0.23544213f;
      sa[1085] = -0.21243879f;
      sa[1086] = -0.2641175f;
      sa[1087] = -0.22814804f;
      sa[1088] = -0.1761291f;
      sa[1089] = 0.09476145f;
      sa[1090] = -0.25155717f;
      sa[1091] = 0.11392008f;
      sa[1092] = -0.23017357f;
      sa[1093] = -0.24954547f;
      sa[1094] = 0.005415584f;
      sa[1095] = -0.2062756f;
      sa[1096] = 0.10119506f;
      sa[1097] = -0.113942936f;
      sa[1098] = -0.03617294f;
      sa[1099] = -0.02033923f;
      sa[1100] = -0.1092393f;
      sa[1101] = 0.14798911f;
      sa[1102] = -0.1285341f;
      sa[1103] = 0.2403394f;
      sa[1104] = -0.26569954f;
      sa[1105] = -0.12642577f;
      sa[1106] = -0.1313106f;
      sa[1107] = 0.26531062f;
      sa[1108] = -0.17333911f;
      sa[1109] = 0.24791805f;
      sa[1110] = 0.17970228f;
      sa[1111] = -0.22608767f;
      sa[1112] = 0.06480008f;
      sa[1113] = 0.12798116f;
      sa[1114] = 0.17408529f;
      sa[1115] = 0.30063793f;
      sa[1116] = -0.08382764f;
      sa[1117] = -0.20022832f;
      sa[1118] = -0.20440745f;
      sa[1119] = -0.1526557f;
      sa[1120] = 0.17669092f;
      sa[1121] = 0.059208833f;
      sa[1122] = 0.21887091f;
      sa[1123] = 0.23125501f;
      sa[1124] = 0.010332897f;
      sa[1125] = -0.091329865f;
      sa[1126] = 0.22600149f;
      sa[1127] = 0.08368798f;
      sa[1128] = -0.0030324345f;
      sa[1129] = -0.12564008f;
      sa[1130] = 0.18466991f;
      sa[1131] = 0.2608057f;
      sa[1132] = -0.17718194f;
      sa[1133] = -0.16367066f;
      sa[1134] = 0.26622435f;
      sa[1135] = -0.26086766f;
      sa[1136] = -0.040090844f;
      sa[1137] = 0.18321024f;
      sa[1138] = -0.09559173f;
      sa[1139] = 0.15833464f;
      sa[1140] = 0.251441f;
      sa[1141] = -0.26171544f;
      sa[1142] = 0.12788823f;
      sa[1143] = 0.04172724f;
      sa[1144] = -0.2708779f;
      sa[1145] = 0.16321f;
      sa[1146] = 0.21154155f;
      sa[1147] = -0.06363018f;
      sa[1148] = -0.0028385448f;
      sa[1149] = -0.028954322f;
      sa[1150] = -0.2848645f;
      sa[1151] = -0.2278019f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_01_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_01_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.291105f;
      sa[1] = -0.11541466f;
      sa[2] = -0.56886595f;
      sa[3] = -0.9359472f;
      sa[4] = 0.10168447f;
      sa[5] = 0.22675402f;
      sa[6] = 1.1861389f;
      sa[7] = -0.65852684f;
      sa[8] = -0.9258526f;
      sa[9] = 0.6559933f;
      sa[10] = -0.17402558f;
      sa[11] = 0.42669153f;
      sa[12] = 0.21866973f;
      sa[13] = 0.07301564f;
      sa[14] = -1.2239443f;
      sa[15] = 1.1405811f;
      sa[16] = 1.5947973f;
      sa[17] = -0.43399838f;
      sa[18] = 0.031763334f;
      sa[19] = -0.49512985f;
      sa[20] = 1.1500071f;
      sa[21] = -0.005183659f;
      sa[22] = -1.0388069f;
      sa[23] = 0.78680485f;
      sa[24] = -1.3376269f;
      sa[25] = 0.4362472f;
      sa[26] = -0.22107679f;
      sa[27] = 1.5121269f;
      sa[28] = -1.4213951f;
      sa[29] = -0.4513541f;
      sa[30] = 0.4323383f;
      sa[31] = -0.6729881f;
      sa[32] = -1.1449523f;
      sa[33] = -1.4787312f;
      sa[34] = 0.042859603f;
      sa[35] = 1.3705231f;
      sa[36] = -0.31651223f;
      sa[37] = -0.06457849f;
      sa[38] = 0.135465f;
      sa[39] = 0.83496857f;
      sa[40] = -0.76147455f;
      sa[41] = -1.3504742f;
      sa[42] = -1.0567372f;
      sa[43] = -1.3981819f;
      sa[44] = 0.03446257f;
      sa[45] = -1.326379f;
      sa[46] = 1.232186f;
      sa[47] = 1.3511306f;
      sa[48] = -1.3394978f;
      sa[49] = -1.0130855f;
      sa[50] = 0.3980917f;
      sa[51] = -0.31096607f;
      sa[52] = 0.8104914f;
      sa[53] = 0.92131656f;
      sa[54] = -0.24460311f;
      sa[55] = 1.1389849f;
      sa[56] = -1.000454f;
      sa[57] = -1.119201f;
      sa[58] = 0.18538907f;
      sa[59] = -0.17060208f;
      sa[60] = 1.3589244f;
      sa[61] = -0.5866266f;
      sa[62] = -0.34192422f;
      sa[63] = 0.6789844f;
      sa[64] = 1.429885f;
      sa[65] = -0.63946795f;
      sa[66] = 0.6044442f;
      sa[67] = 1.5901382f;
      sa[68] = 0.7097821f;
      sa[69] = -1.0212879f;
      sa[70] = -1.5263968f;
      sa[71] = -0.42530197f;
      sa[72] = -1.2834893f;
      sa[73] = 1.1733791f;
      sa[74] = 1.3422717f;
      sa[75] = -0.105240315f;
      sa[76] = 0.891722f;
      sa[77] = 0.4943476f;
      sa[78] = -1.2956965f;
      sa[79] = 0.9695625f;
      sa[80] = -0.7933339f;
      sa[81] = 0.26578757f;
      sa[82] = 0.8122779f;
      sa[83] = -0.61478007f;
      sa[84] = -1.6016442f;
      sa[85] = -1.3106768f;
      sa[86] = 0.25615492f;
      sa[87] = 1.2363946f;
      sa[88] = -1.5529772f;
      sa[89] = -0.5020849f;
      sa[90] = -1.0570906f;
      sa[91] = 1.5369675f;
      sa[92] = -0.3254867f;
      sa[93] = 0.25609106f;
      sa[94] = -1.5574223f;
      sa[95] = -0.21378848f;
      sa[96] = -1.1162345f;
      sa[97] = 0.156176f;
      sa[98] = -0.0643416f;
      sa[99] = 0.30625796f;
      sa[100] = -1.263151f;
      sa[101] = -0.3909383f;
      sa[102] = 1.3297379f;
      sa[103] = -0.0048717596f;
      sa[104] = -0.19258574f;
      sa[105] = -0.5950728f;
      sa[106] = 1.4315072f;
      sa[107] = 1.1725911f;
      sa[108] = 0.6822365f;
      sa[109] = 0.08356919f;
      sa[110] = 0.6572041f;
      sa[111] = -0.7965123f;
      sa[112] = -1.1577916f;
      sa[113] = 0.14560813f;
      sa[114] = 0.1888697f;
      sa[115] = -0.3057705f;
      sa[116] = 1.1498237f;
      sa[117] = 0.046079006f;
      sa[118] = -1.2948656f;
      sa[119] = -0.79656273f;
      sa[120] = -0.33828932f;
      sa[121] = 1.0819435f;
      sa[122] = -0.1038588f;
      sa[123] = 0.336527f;
      sa[124] = -0.7218161f;
      sa[125] = 0.75982887f;
      sa[126] = -0.987987f;
      sa[127] = 0.46277297f;
      sa[128] = -0.9296741f;
      sa[129] = 0.76505077f;
      sa[130] = -0.36086476f;
      sa[131] = 0.89915943f;
      sa[132] = 0.44826245f;
      sa[133] = 0.6009132f;
      sa[134] = 0.6952206f;
      sa[135] = -1.1127204f;
      sa[136] = 0.5469897f;
      sa[137] = -0.58446425f;
      sa[138] = -0.10068227f;
      sa[139] = 1.1709199f;
      sa[140] = -0.46517986f;
      sa[141] = -0.026244327f;
      sa[142] = 0.24924979f;
      sa[143] = -0.8211134f;
      sa[144] = 0.96971154f;
      sa[145] = -0.79424506f;
      sa[146] = 0.0734032f;
      sa[147] = -0.29385766f;
      sa[148] = -0.8517969f;
      sa[149] = 1.0894085f;
      sa[150] = -1.0704464f;
      sa[151] = -1.5783491f;
      sa[152] = 1.5502264f;
      sa[153] = -0.5862118f;
      sa[154] = 1.3312953f;
      sa[155] = -1.5797724f;
      sa[156] = -1.4022228f;
      sa[157] = -1.1198136f;
      sa[158] = -0.23284686f;
      sa[159] = -0.61953247f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_01 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_01_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_01_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_01_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_01_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


