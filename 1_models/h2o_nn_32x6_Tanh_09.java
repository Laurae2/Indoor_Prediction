/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:48:32.212+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_09 > h2o_nn_32x6_Tanh_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_09", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6179929742177020424L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.09536371274565635;
      sa[1] = 0.10890417049523239;
      sa[2] = -0.014444824885933356;
      sa[3] = -0.21450104246451152;
      sa[4] = -0.008978055295606567;
      sa[5] = 0.09109242733987365;
      sa[6] = 0.3618656712809961;
      sa[7] = -0.16006323776617726;
      sa[8] = -0.13964479883538633;
      sa[9] = 0.024435742019606993;
      sa[10] = -0.06811677929973932;
      sa[11] = 0.0757976227898548;
      sa[12] = 0.06096627350217085;
      sa[13] = 0.10639542761987575;
      sa[14] = -0.12587771246388138;
      sa[15] = 0.03442206660657991;
      sa[16] = 0.07073124451470077;
      sa[17] = 0.019911914386832458;
      sa[18] = -0.05158844558043339;
      sa[19] = 0.06596262672647885;
      sa[20] = 0.1638614744561783;
      sa[21] = -0.03321909788183947;
      sa[22] = -0.4293458157289829;
      sa[23] = 0.012322564961404082;
      sa[24] = -0.11748245422589138;
      sa[25] = 0.18615281505426845;
      sa[26] = -0.02634515566029634;
      sa[27] = 0.12140623734882973;
      sa[28] = -0.2699936719428346;
      sa[29] = 0.008881609066849958;
      sa[30] = 0.2693640391001482;
      sa[31] = -0.14688547042325573;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.13578734732106562;
      sa[1] = -0.18590450031045985;
      sa[2] = -0.1326290354245554;
      sa[3] = -0.012605851516417547;
      sa[4] = -0.07975809153854176;
      sa[5] = -0.06736137479214799;
    }
  }
}
class h2o_nn_32x6_Tanh_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.050545838f;
      sa[1] = 0.07846866f;
      sa[2] = 0.04097706f;
      sa[3] = -0.013415888f;
      sa[4] = -0.23272638f;
      sa[5] = -0.15964293f;
      sa[6] = -0.119905554f;
      sa[7] = 0.26048723f;
      sa[8] = 0.025753573f;
      sa[9] = -0.1229652f;
      sa[10] = -0.15292859f;
      sa[11] = -0.10804576f;
      sa[12] = 0.07023545f;
      sa[13] = -0.22764316f;
      sa[14] = -0.21308853f;
      sa[15] = 0.03257102f;
      sa[16] = -0.058105893f;
      sa[17] = 0.13988142f;
      sa[18] = -0.24292643f;
      sa[19] = 0.11449137f;
      sa[20] = 0.17622592f;
      sa[21] = -0.36625445f;
      sa[22] = 0.14854196f;
      sa[23] = -0.18789943f;
      sa[24] = 0.23647393f;
      sa[25] = -0.058293387f;
      sa[26] = -0.12164896f;
      sa[27] = 0.389046f;
      sa[28] = 0.24640079f;
      sa[29] = -0.24797665f;
      sa[30] = -0.10648596f;
      sa[31] = 0.28146863f;
      sa[32] = 0.2347109f;
      sa[33] = -0.090120636f;
      sa[34] = -0.040981844f;
      sa[35] = -0.14840013f;
      sa[36] = 0.25200906f;
      sa[37] = 0.17140046f;
      sa[38] = -0.32506758f;
      sa[39] = 0.23214298f;
      sa[40] = -0.10945146f;
      sa[41] = -0.06750662f;
      sa[42] = -0.17916286f;
      sa[43] = -0.17597216f;
      sa[44] = 0.32677385f;
      sa[45] = -0.41045895f;
      sa[46] = 0.07659663f;
      sa[47] = 0.1012795f;
      sa[48] = 0.11615343f;
      sa[49] = 0.25686127f;
      sa[50] = 0.15498038f;
      sa[51] = -0.47250107f;
      sa[52] = -0.22225113f;
      sa[53] = 0.08181221f;
      sa[54] = 0.16897336f;
      sa[55] = 0.036568064f;
      sa[56] = -0.35602117f;
      sa[57] = -0.5015743f;
      sa[58] = 0.16656183f;
      sa[59] = -0.41350204f;
      sa[60] = -0.49705395f;
      sa[61] = 0.2592079f;
      sa[62] = 0.11423051f;
      sa[63] = -0.045585696f;
      sa[64] = -0.04038709f;
      sa[65] = -0.07397007f;
      sa[66] = -0.05806321f;
      sa[67] = -0.11615347f;
      sa[68] = -0.22081596f;
      sa[69] = 0.056208543f;
      sa[70] = 0.0118806735f;
      sa[71] = 0.36896318f;
      sa[72] = -0.33780247f;
      sa[73] = 0.33845097f;
      sa[74] = -0.0677516f;
      sa[75] = -0.13146187f;
      sa[76] = -0.09767485f;
      sa[77] = -0.004702458f;
      sa[78] = -0.044815533f;
      sa[79] = 0.39980623f;
      sa[80] = -0.33399472f;
      sa[81] = 0.050828487f;
      sa[82] = -0.10207528f;
      sa[83] = 0.10580255f;
      sa[84] = 0.1151152f;
      sa[85] = 0.019184362f;
      sa[86] = 0.22731209f;
      sa[87] = 0.58036405f;
      sa[88] = 0.3401111f;
      sa[89] = 0.14390817f;
      sa[90] = -0.19609879f;
      sa[91] = 0.102184296f;
      sa[92] = 0.22704697f;
      sa[93] = -0.07530447f;
      sa[94] = -0.0762526f;
      sa[95] = -0.03010587f;
      sa[96] = 0.25737095f;
      sa[97] = -0.111651674f;
      sa[98] = 0.24432263f;
      sa[99] = 0.09896185f;
      sa[100] = 0.1134022f;
      sa[101] = -0.01568077f;
      sa[102] = -0.07675069f;
      sa[103] = 0.1922484f;
      sa[104] = -0.05549973f;
      sa[105] = -0.10477976f;
      sa[106] = -0.22551496f;
      sa[107] = 0.124867976f;
      sa[108] = 0.17448129f;
      sa[109] = -0.022629747f;
      sa[110] = -0.10401813f;
      sa[111] = 0.15577658f;
      sa[112] = 0.11070339f;
      sa[113] = 0.0027145427f;
      sa[114] = -0.048616f;
      sa[115] = 0.01872244f;
      sa[116] = -0.16557485f;
      sa[117] = -0.08130435f;
      sa[118] = -0.36785755f;
      sa[119] = 0.10832155f;
      sa[120] = 0.28991145f;
      sa[121] = 0.3237106f;
      sa[122] = 0.4461827f;
      sa[123] = 0.5905453f;
      sa[124] = 0.3070792f;
      sa[125] = 0.16836818f;
      sa[126] = -0.30963874f;
      sa[127] = -0.46105477f;
      sa[128] = 0.12973292f;
      sa[129] = 0.19555156f;
      sa[130] = 0.016897302f;
      sa[131] = 0.36311302f;
      sa[132] = 0.21026744f;
      sa[133] = -0.2430806f;
      sa[134] = -0.077804044f;
      sa[135] = -0.45227706f;
      sa[136] = -0.2945297f;
      sa[137] = -0.0921967f;
      sa[138] = -5.919631E-5f;
      sa[139] = -0.23630643f;
      sa[140] = -0.10170951f;
      sa[141] = -0.1514822f;
      sa[142] = 0.18846154f;
      sa[143] = -0.26720718f;
      sa[144] = 0.09585539f;
      sa[145] = -0.25411773f;
      sa[146] = -0.44754723f;
      sa[147] = -0.08818175f;
      sa[148] = 0.12645836f;
      sa[149] = 0.10871345f;
      sa[150] = 0.19746764f;
      sa[151] = -0.22209446f;
      sa[152] = -0.080720715f;
      sa[153] = 0.29012692f;
      sa[154] = 0.109070145f;
      sa[155] = -0.07868976f;
      sa[156] = 0.1300066f;
      sa[157] = -0.21800593f;
      sa[158] = 0.056188148f;
      sa[159] = 0.14573021f;
      sa[160] = -0.083716676f;
      sa[161] = 0.13318685f;
      sa[162] = 0.0071094413f;
      sa[163] = -0.38256404f;
      sa[164] = 0.19247824f;
      sa[165] = -0.072277665f;
      sa[166] = -0.11236641f;
      sa[167] = -0.029562853f;
      sa[168] = 0.1289181f;
      sa[169] = 0.10234295f;
      sa[170] = 0.21028039f;
      sa[171] = 0.15749644f;
      sa[172] = -0.09082234f;
      sa[173] = -0.16627151f;
      sa[174] = -0.080739066f;
      sa[175] = -0.13019118f;
      sa[176] = 0.0025344244f;
      sa[177] = 0.05911581f;
      sa[178] = -0.12557867f;
      sa[179] = 0.116798416f;
      sa[180] = -0.12299397f;
      sa[181] = -0.40841162f;
      sa[182] = -0.25201738f;
      sa[183] = 0.21502845f;
      sa[184] = 0.30409822f;
      sa[185] = 0.10967205f;
      sa[186] = -0.33853528f;
      sa[187] = -0.022614142f;
      sa[188] = -0.15261392f;
      sa[189] = 0.2191976f;
      sa[190] = 0.04072755f;
      sa[191] = -0.30005512f;
      sa[192] = -0.24103133f;
      sa[193] = 0.056803446f;
      sa[194] = -0.053621136f;
      sa[195] = 0.07281012f;
      sa[196] = 0.13760185f;
      sa[197] = 0.014591027f;
      sa[198] = 0.36399737f;
      sa[199] = -0.10403217f;
      sa[200] = -0.036592223f;
      sa[201] = -0.2803992f;
      sa[202] = 0.045730736f;
      sa[203] = -0.1451729f;
      sa[204] = -0.38181293f;
      sa[205] = 0.24723066f;
      sa[206] = 0.43192965f;
      sa[207] = 0.107460506f;
      sa[208] = -0.34369463f;
      sa[209] = -0.1194629f;
      sa[210] = -0.45247605f;
      sa[211] = -0.3998653f;
      sa[212] = 0.29782084f;
      sa[213] = -0.22673352f;
      sa[214] = -0.04107829f;
      sa[215] = 0.12277842f;
      sa[216] = 0.11735009f;
      sa[217] = 0.073994435f;
      sa[218] = -0.1381665f;
      sa[219] = 0.26072124f;
      sa[220] = -0.11890152f;
      sa[221] = 0.1037875f;
      sa[222] = 0.18958032f;
      sa[223] = 0.044049542f;
      sa[224] = 0.10218971f;
      sa[225] = 0.36762923f;
      sa[226] = -0.11539885f;
      sa[227] = -0.13486595f;
      sa[228] = 0.09486301f;
      sa[229] = 0.061363492f;
      sa[230] = 0.17282084f;
      sa[231] = -0.3506452f;
      sa[232] = -0.27806646f;
      sa[233] = 0.22510867f;
      sa[234] = 0.34479916f;
      sa[235] = -0.11512447f;
      sa[236] = 0.022905633f;
      sa[237] = -0.13119945f;
      sa[238] = -0.26589265f;
      sa[239] = 0.1504266f;
      sa[240] = 0.07135217f;
      sa[241] = -0.18828762f;
      sa[242] = 0.12670496f;
      sa[243] = -0.17209168f;
      sa[244] = -0.03007938f;
      sa[245] = 0.08371088f;
      sa[246] = -0.08997638f;
      sa[247] = 0.07224039f;
      sa[248] = 0.18201177f;
      sa[249] = 0.1049172f;
      sa[250] = -0.11696653f;
      sa[251] = -0.03756758f;
      sa[252] = -0.12807932f;
      sa[253] = -0.14103946f;
      sa[254] = -0.02185803f;
      sa[255] = 0.40130156f;
      sa[256] = -0.13292173f;
      sa[257] = 0.2725796f;
      sa[258] = -0.14633442f;
      sa[259] = -0.13402979f;
      sa[260] = -0.05014389f;
      sa[261] = -0.10974214f;
      sa[262] = -0.106946304f;
      sa[263] = 0.29233274f;
      sa[264] = -0.12902208f;
      sa[265] = 0.058088485f;
      sa[266] = -0.20730618f;
      sa[267] = -0.23980227f;
      sa[268] = 0.25281063f;
      sa[269] = -0.1425777f;
      sa[270] = -0.095814794f;
      sa[271] = 0.32160828f;
      sa[272] = -0.036663637f;
      sa[273] = -0.052480545f;
      sa[274] = 0.19529773f;
      sa[275] = -0.0032849077f;
      sa[276] = 0.117042325f;
      sa[277] = -0.11776272f;
      sa[278] = -0.27954113f;
      sa[279] = 0.030141305f;
      sa[280] = -0.16770089f;
      sa[281] = 0.2534356f;
      sa[282] = -0.11432452f;
      sa[283] = -0.1465423f;
      sa[284] = 0.06202048f;
      sa[285] = -0.17627792f;
      sa[286] = 0.22252358f;
      sa[287] = 0.07140866f;
      sa[288] = -0.2985046f;
      sa[289] = -0.15969077f;
      sa[290] = -0.17267202f;
      sa[291] = -0.111836575f;
      sa[292] = 0.10792927f;
      sa[293] = -0.17955641f;
      sa[294] = -0.04669974f;
      sa[295] = 0.09115853f;
      sa[296] = 0.014450267f;
      sa[297] = 0.27079692f;
      sa[298] = -0.037092496f;
      sa[299] = -0.2591338f;
      sa[300] = -0.053912994f;
      sa[301] = -0.15936351f;
      sa[302] = 0.02204637f;
      sa[303] = -0.043623157f;
      sa[304] = -0.14284141f;
      sa[305] = 0.06813335f;
      sa[306] = 0.35025173f;
      sa[307] = -0.10984225f;
      sa[308] = 0.074911974f;
      sa[309] = 0.15209705f;
      sa[310] = 0.2127307f;
      sa[311] = 0.34735617f;
      sa[312] = -0.12996225f;
      sa[313] = -0.1913237f;
      sa[314] = -0.02903143f;
      sa[315] = 0.16018213f;
      sa[316] = -0.0014938669f;
      sa[317] = -0.036111172f;
      sa[318] = 0.098237954f;
      sa[319] = 0.35661212f;
      sa[320] = -0.17261505f;
      sa[321] = 0.06291647f;
      sa[322] = 0.3804719f;
      sa[323] = 0.023521125f;
      sa[324] = 0.0989512f;
      sa[325] = 0.18954587f;
      sa[326] = -0.3968f;
      sa[327] = 0.035660625f;
      sa[328] = -0.16139776f;
      sa[329] = 0.24951962f;
      sa[330] = -0.2064289f;
      sa[331] = -0.032170366f;
      sa[332] = -0.1234549f;
      sa[333] = 0.014375093f;
      sa[334] = -0.054510165f;
      sa[335] = 0.45687708f;
      sa[336] = -0.17964882f;
      sa[337] = -0.11139614f;
      sa[338] = 0.26310858f;
      sa[339] = -0.18966271f;
      sa[340] = -0.4807869f;
      sa[341] = -0.38096178f;
      sa[342] = 0.056066424f;
      sa[343] = -0.14002156f;
      sa[344] = -0.25611037f;
      sa[345] = 0.0626979f;
      sa[346] = 0.13295849f;
      sa[347] = -0.3233024f;
      sa[348] = 0.121713385f;
      sa[349] = -0.26749617f;
      sa[350] = -0.29658478f;
      sa[351] = 0.08630383f;
      sa[352] = 0.049892332f;
      sa[353] = -0.2150584f;
      sa[354] = -0.0046611964f;
      sa[355] = -0.015765041f;
      sa[356] = -0.10751894f;
      sa[357] = 0.3388266f;
      sa[358] = -0.35344034f;
      sa[359] = -0.042261764f;
      sa[360] = 0.290564f;
      sa[361] = 0.04002204f;
      sa[362] = -0.17231418f;
      sa[363] = 0.06499511f;
      sa[364] = -0.23490952f;
      sa[365] = -0.14133546f;
      sa[366] = -0.021449367f;
      sa[367] = -0.22895324f;
      sa[368] = -0.01887875f;
      sa[369] = 0.17628445f;
      sa[370] = -0.15406749f;
      sa[371] = 0.28345227f;
      sa[372] = 0.020616097f;
      sa[373] = 0.38361862f;
      sa[374] = -0.07991827f;
      sa[375] = -0.17310622f;
      sa[376] = -0.21519317f;
      sa[377] = -0.31821007f;
      sa[378] = 0.04306274f;
      sa[379] = 0.11835349f;
      sa[380] = -0.13707282f;
      sa[381] = -0.1592636f;
      sa[382] = -0.04208784f;
      sa[383] = -0.11884734f;
      sa[384] = -0.06764236f;
      sa[385] = 0.105764f;
      sa[386] = -0.45689934f;
      sa[387] = -0.09546674f;
      sa[388] = 0.09333998f;
      sa[389] = -0.035496384f;
      sa[390] = 0.09715488f;
      sa[391] = -0.026575012f;
      sa[392] = 0.12300318f;
      sa[393] = 0.121334806f;
      sa[394] = 0.016988235f;
      sa[395] = 0.27546015f;
      sa[396] = 0.4280677f;
      sa[397] = -0.32442936f;
      sa[398] = -0.105833374f;
      sa[399] = -0.1162772f;
      sa[400] = 0.098014176f;
      sa[401] = 0.26391268f;
      sa[402] = -0.19324997f;
      sa[403] = 0.007769176f;
      sa[404] = 0.30251545f;
      sa[405] = -0.38958716f;
      sa[406] = -0.033467155f;
      sa[407] = 0.06269497f;
      sa[408] = -0.29151857f;
      sa[409] = -0.20209149f;
      sa[410] = -0.17119886f;
      sa[411] = 0.093686156f;
      sa[412] = -0.17866349f;
      sa[413] = 0.010970913f;
      sa[414] = 0.12210877f;
      sa[415] = 0.38930827f;
      sa[416] = -0.27031758f;
      sa[417] = -0.08694162f;
      sa[418] = -0.09606894f;
      sa[419] = 0.1303954f;
      sa[420] = 0.13670363f;
      sa[421] = 0.2528679f;
      sa[422] = 0.33071637f;
      sa[423] = 0.11645066f;
      sa[424] = 0.026326507f;
      sa[425] = -0.116991684f;
      sa[426] = -0.24407366f;
      sa[427] = 0.18221882f;
      sa[428] = -0.15905285f;
      sa[429] = -0.29910263f;
      sa[430] = 0.29819083f;
      sa[431] = 0.075771414f;
      sa[432] = 0.027832408f;
      sa[433] = 0.21736163f;
      sa[434] = 0.40964895f;
      sa[435] = -0.119823f;
      sa[436] = -0.24085887f;
      sa[437] = -0.15162519f;
      sa[438] = 0.017148482f;
      sa[439] = 0.13629714f;
      sa[440] = 0.35464355f;
      sa[441] = -0.23342866f;
      sa[442] = 0.10784877f;
      sa[443] = 0.09143663f;
      sa[444] = -0.105667375f;
      sa[445] = 0.22091833f;
      sa[446] = 0.29318362f;
      sa[447] = 0.24105315f;
      sa[448] = 0.29178798f;
      sa[449] = 0.2839381f;
      sa[450] = -0.33588266f;
      sa[451] = 0.21816595f;
      sa[452] = 0.2226158f;
      sa[453] = -0.018027974f;
      sa[454] = -0.11812963f;
      sa[455] = 0.051273856f;
      sa[456] = 0.10453778f;
      sa[457] = 3.469402E-4f;
      sa[458] = -0.25502145f;
      sa[459] = 0.38131702f;
      sa[460] = 0.3559697f;
      sa[461] = 0.39880142f;
      sa[462] = 0.25591502f;
      sa[463] = 0.43222752f;
      sa[464] = -0.32408556f;
      sa[465] = 0.20508033f;
      sa[466] = -0.035539307f;
      sa[467] = 0.06836988f;
      sa[468] = 0.05808198f;
      sa[469] = 0.2772101f;
      sa[470] = 0.10435539f;
      sa[471] = -0.14674379f;
      sa[472] = -0.044272244f;
      sa[473] = -0.052410424f;
      sa[474] = -0.055991255f;
      sa[475] = 0.16100971f;
      sa[476] = 0.15638512f;
      sa[477] = -0.17641753f;
      sa[478] = 0.083635546f;
      sa[479] = -0.12844951f;
      sa[480] = -0.24873644f;
      sa[481] = -0.11835812f;
      sa[482] = -0.24745037f;
      sa[483] = 0.28078488f;
      sa[484] = 0.21372908f;
      sa[485] = 0.09430884f;
      sa[486] = -0.14256553f;
      sa[487] = -0.15955672f;
      sa[488] = -0.2071806f;
      sa[489] = 0.021772234f;
      sa[490] = -0.04249448f;
      sa[491] = -0.20010918f;
      sa[492] = 0.24591021f;
      sa[493] = 0.14290182f;
      sa[494] = -0.15009095f;
      sa[495] = 0.2686808f;
      sa[496] = 0.050060827f;
      sa[497] = 0.105043754f;
      sa[498] = 0.24677223f;
      sa[499] = 0.3095183f;
      sa[500] = -0.15723406f;
      sa[501] = 0.059653085f;
      sa[502] = 0.30347478f;
      sa[503] = 0.06288065f;
      sa[504] = -0.106431365f;
      sa[505] = -0.10172563f;
      sa[506] = 0.3366935f;
      sa[507] = 0.02676089f;
      sa[508] = 0.1845105f;
      sa[509] = 0.19533627f;
      sa[510] = 0.25605592f;
      sa[511] = 0.021653146f;
      sa[512] = 0.10293648f;
      sa[513] = -0.028659362f;
      sa[514] = 0.19123876f;
      sa[515] = -0.3754019f;
      sa[516] = 0.059478518f;
      sa[517] = 0.05853019f;
      sa[518] = 0.18549557f;
      sa[519] = -0.10663218f;
      sa[520] = 0.4688664f;
      sa[521] = 0.20856997f;
      sa[522] = 0.15246184f;
      sa[523] = 0.26639417f;
      sa[524] = 0.26988178f;
      sa[525] = 0.2825943f;
      sa[526] = 0.11643366f;
      sa[527] = 0.052568186f;
      sa[528] = 0.13845825f;
      sa[529] = 0.21865894f;
      sa[530] = -0.26165137f;
      sa[531] = 0.02857501f;
      sa[532] = 0.17343035f;
      sa[533] = 0.16673031f;
      sa[534] = 0.12062198f;
      sa[535] = -0.085939564f;
      sa[536] = 0.025753736f;
      sa[537] = -0.4733124f;
      sa[538] = 0.29720777f;
      sa[539] = 0.3820126f;
      sa[540] = -0.37828267f;
      sa[541] = -0.17346507f;
      sa[542] = 0.019949118f;
      sa[543] = -0.14964892f;
      sa[544] = 0.22330683f;
      sa[545] = 0.08827812f;
      sa[546] = 0.08929107f;
      sa[547] = 0.22514533f;
      sa[548] = -0.038912825f;
      sa[549] = 0.3219004f;
      sa[550] = -0.043318998f;
      sa[551] = -0.100407355f;
      sa[552] = 0.034385365f;
      sa[553] = -0.13412227f;
      sa[554] = -0.17436025f;
      sa[555] = -0.1653485f;
      sa[556] = -0.22949682f;
      sa[557] = -0.09924489f;
      sa[558] = -0.11781182f;
      sa[559] = -0.01860873f;
      sa[560] = -0.24321824f;
      sa[561] = -0.0035346413f;
      sa[562] = 0.1886851f;
      sa[563] = 0.013185495f;
      sa[564] = 0.22275212f;
      sa[565] = -0.027151953f;
      sa[566] = 0.29491368f;
      sa[567] = -0.1173701f;
      sa[568] = -0.045930967f;
      sa[569] = 0.076670505f;
      sa[570] = -0.05668734f;
      sa[571] = -0.03719806f;
      sa[572] = 0.17864344f;
      sa[573] = 0.32877362f;
      sa[574] = -0.07183128f;
      sa[575] = -0.46941036f;
      sa[576] = -0.16094624f;
      sa[577] = -0.10891636f;
      sa[578] = -0.115996204f;
      sa[579] = 0.02189243f;
      sa[580] = 0.026295613f;
      sa[581] = -0.16142374f;
      sa[582] = -0.023022072f;
      sa[583] = -0.33129784f;
      sa[584] = 0.021954196f;
      sa[585] = 0.14608125f;
      sa[586] = -0.15409696f;
      sa[587] = -0.17401032f;
      sa[588] = -0.08605267f;
      sa[589] = -0.008222875f;
      sa[590] = -0.18577187f;
      sa[591] = -0.5289176f;
      sa[592] = -0.436957f;
      sa[593] = -0.19959657f;
      sa[594] = 0.035937726f;
      sa[595] = -0.09079333f;
      sa[596] = 0.078721106f;
      sa[597] = -0.18435824f;
      sa[598] = 0.033544824f;
      sa[599] = -0.24975283f;
      sa[600] = -0.5371371f;
      sa[601] = 0.23644152f;
      sa[602] = 0.10242647f;
      sa[603] = 0.36021784f;
      sa[604] = 0.06682905f;
      sa[605] = 0.045356765f;
      sa[606] = 0.008740758f;
      sa[607] = -0.25227275f;
      sa[608] = -0.0037473724f;
      sa[609] = 0.1237258f;
      sa[610] = 0.13262887f;
      sa[611] = 0.00898184f;
      sa[612] = 0.05464005f;
      sa[613] = 0.1490126f;
      sa[614] = 0.10140009f;
      sa[615] = -0.10492412f;
      sa[616] = -0.04274156f;
      sa[617] = -0.22605146f;
      sa[618] = -0.16377498f;
      sa[619] = -0.10727576f;
      sa[620] = 0.07052426f;
      sa[621] = -0.2859376f;
      sa[622] = -0.25198856f;
      sa[623] = -0.10994826f;
      sa[624] = -6.93859E-4f;
      sa[625] = 0.35974327f;
      sa[626] = 0.049147494f;
      sa[627] = 0.35398686f;
      sa[628] = -0.19893728f;
      sa[629] = -0.14329216f;
      sa[630] = -0.40602523f;
      sa[631] = 0.24119848f;
      sa[632] = 0.07639695f;
      sa[633] = -0.21690783f;
      sa[634] = -0.20944406f;
      sa[635] = 0.15559463f;
      sa[636] = -0.07970667f;
      sa[637] = -0.025562244f;
      sa[638] = -0.24270274f;
      sa[639] = -0.0019514952f;
      sa[640] = -0.09693802f;
      sa[641] = -0.27087128f;
      sa[642] = 0.32950658f;
      sa[643] = -0.20055555f;
      sa[644] = -0.15526073f;
      sa[645] = -0.24795476f;
      sa[646] = 0.30782047f;
      sa[647] = -0.26725578f;
      sa[648] = 0.07456244f;
      sa[649] = 0.0028649752f;
      sa[650] = 0.10825479f;
      sa[651] = -0.020335717f;
      sa[652] = 0.05370588f;
      sa[653] = -0.09812949f;
      sa[654] = -0.030134132f;
      sa[655] = -0.15455987f;
      sa[656] = 0.33179668f;
      sa[657] = -0.06213199f;
      sa[658] = -0.28459096f;
      sa[659] = 0.059017476f;
      sa[660] = -0.18456276f;
      sa[661] = 0.0019138438f;
      sa[662] = -0.12083922f;
      sa[663] = 0.24030694f;
      sa[664] = -0.2248118f;
      sa[665] = 0.07775109f;
      sa[666] = -0.18869145f;
      sa[667] = -0.3788638f;
      sa[668] = 0.2538126f;
      sa[669] = -0.14456831f;
      sa[670] = 0.21083263f;
      sa[671] = 4.886963E-4f;
      sa[672] = -0.31772375f;
      sa[673] = 0.21328019f;
      sa[674] = 0.058728267f;
      sa[675] = -0.4085107f;
      sa[676] = -0.1843003f;
      sa[677] = -0.32620794f;
      sa[678] = 0.097427666f;
      sa[679] = -0.21133596f;
      sa[680] = 0.12899859f;
      sa[681] = 0.14304489f;
      sa[682] = -0.100591555f;
      sa[683] = -0.24270663f;
      sa[684] = -0.16641992f;
      sa[685] = -0.063775204f;
      sa[686] = -0.17872258f;
      sa[687] = -0.16371146f;
      sa[688] = -0.12574448f;
      sa[689] = -0.27256075f;
      sa[690] = -0.0872954f;
      sa[691] = 0.09625177f;
      sa[692] = -0.33079514f;
      sa[693] = -0.031382952f;
      sa[694] = 0.24705252f;
      sa[695] = -0.47113135f;
      sa[696] = -0.15369734f;
      sa[697] = -0.26985025f;
      sa[698] = -0.3155137f;
      sa[699] = 0.18757576f;
      sa[700] = 0.19322284f;
      sa[701] = 0.29137138f;
      sa[702] = 0.4907033f;
      sa[703] = -0.003378376f;
      sa[704] = -0.22385156f;
      sa[705] = 0.10793751f;
      sa[706] = -0.17569709f;
      sa[707] = 0.13397887f;
      sa[708] = 0.026107457f;
      sa[709] = -0.33882207f;
      sa[710] = 0.46577948f;
      sa[711] = -0.044238746f;
      sa[712] = 0.13478258f;
      sa[713] = 0.34284306f;
      sa[714] = 0.21972612f;
      sa[715] = 0.2156185f;
      sa[716] = 0.04988548f;
      sa[717] = 0.11789507f;
      sa[718] = 0.026510874f;
      sa[719] = 0.1853852f;
      sa[720] = -0.06408723f;
      sa[721] = 0.2582792f;
      sa[722] = 0.020966535f;
      sa[723] = 0.23723629f;
      sa[724] = 0.18098643f;
      sa[725] = -0.22401334f;
      sa[726] = -0.1806582f;
      sa[727] = -0.3269184f;
      sa[728] = -0.016587043f;
      sa[729] = 0.001718236f;
      sa[730] = 0.21524638f;
      sa[731] = -0.470869f;
      sa[732] = 0.10115958f;
      sa[733] = 0.16211386f;
      sa[734] = -0.20739993f;
      sa[735] = 0.14928398f;
      sa[736] = 0.05068225f;
      sa[737] = 0.3080502f;
      sa[738] = -0.18765722f;
      sa[739] = -0.04602354f;
      sa[740] = -0.26540667f;
      sa[741] = -0.24183454f;
      sa[742] = 0.063419856f;
      sa[743] = -0.049917225f;
      sa[744] = 0.019461865f;
      sa[745] = 0.01635155f;
      sa[746] = 0.002949208f;
      sa[747] = -0.2307274f;
      sa[748] = -0.12710753f;
      sa[749] = -0.08567303f;
      sa[750] = 0.25762486f;
      sa[751] = 0.13258074f;
      sa[752] = -0.0010210896f;
      sa[753] = 0.10437404f;
      sa[754] = -7.336441E-4f;
      sa[755] = 0.1514925f;
      sa[756] = -0.22663604f;
      sa[757] = 0.19324808f;
      sa[758] = -0.19973552f;
      sa[759] = 0.019461676f;
      sa[760] = -0.060295727f;
      sa[761] = 0.0033834379f;
      sa[762] = -0.088381596f;
      sa[763] = 0.08201838f;
      sa[764] = 0.017673103f;
      sa[765] = -0.06367634f;
      sa[766] = -0.20501198f;
      sa[767] = -0.026850555f;
      sa[768] = -0.22161463f;
      sa[769] = -0.35514107f;
      sa[770] = -0.044295784f;
      sa[771] = -0.09441549f;
      sa[772] = 0.014510212f;
      sa[773] = -0.25002345f;
      sa[774] = 0.2139177f;
      sa[775] = 0.27725306f;
      sa[776] = -0.07712694f;
      sa[777] = 0.06544018f;
      sa[778] = 0.15219362f;
      sa[779] = -0.20906952f;
      sa[780] = -0.11199984f;
      sa[781] = 0.07097679f;
      sa[782] = 0.17943633f;
      sa[783] = -0.23492439f;
      sa[784] = -0.24197827f;
      sa[785] = -0.19362526f;
      sa[786] = -0.22697105f;
      sa[787] = -0.37926164f;
      sa[788] = -0.2484782f;
      sa[789] = 0.09210353f;
      sa[790] = -0.028471515f;
      sa[791] = -0.020644365f;
      sa[792] = 0.029488161f;
      sa[793] = -0.018976448f;
      sa[794] = -0.075060695f;
      sa[795] = -0.20737821f;
      sa[796] = 0.17662817f;
      sa[797] = -0.26968756f;
      sa[798] = -0.28485864f;
      sa[799] = -0.085170075f;
      sa[800] = 0.109232344f;
      sa[801] = 0.14173037f;
      sa[802] = 0.111730464f;
      sa[803] = 0.25853154f;
      sa[804] = 0.33053455f;
      sa[805] = 0.29623136f;
      sa[806] = 0.3249525f;
      sa[807] = 0.4253743f;
      sa[808] = 0.026123323f;
      sa[809] = -0.20478177f;
      sa[810] = 0.033620927f;
      sa[811] = 0.10416455f;
      sa[812] = 0.20037986f;
      sa[813] = -0.25436503f;
      sa[814] = 0.10694872f;
      sa[815] = -0.020857753f;
      sa[816] = 0.112568006f;
      sa[817] = -0.44458824f;
      sa[818] = 0.0046690325f;
      sa[819] = -0.009797508f;
      sa[820] = -0.22712094f;
      sa[821] = -0.18504405f;
      sa[822] = -0.2874651f;
      sa[823] = 0.22352836f;
      sa[824] = 0.21906382f;
      sa[825] = 0.42167258f;
      sa[826] = -0.42770848f;
      sa[827] = -0.41756374f;
      sa[828] = 0.078476764f;
      sa[829] = -0.052576046f;
      sa[830] = 0.3213284f;
      sa[831] = 0.26390365f;
      sa[832] = 0.18413162f;
      sa[833] = 0.09617929f;
      sa[834] = 0.2309954f;
      sa[835] = -0.022490168f;
      sa[836] = 0.21255498f;
      sa[837] = -0.08789203f;
      sa[838] = 0.16322449f;
      sa[839] = -0.13933893f;
      sa[840] = 0.22346626f;
      sa[841] = 0.12325621f;
      sa[842] = 0.20227961f;
      sa[843] = 0.119000666f;
      sa[844] = 0.06194833f;
      sa[845] = 0.1791491f;
      sa[846] = -0.31303087f;
      sa[847] = -0.011544896f;
      sa[848] = 0.25032625f;
      sa[849] = 0.2956816f;
      sa[850] = 0.035743833f;
      sa[851] = 0.156618f;
      sa[852] = 0.27331176f;
      sa[853] = 0.15529093f;
      sa[854] = 0.12691513f;
      sa[855] = -0.01709385f;
      sa[856] = 0.118994735f;
      sa[857] = -0.122460835f;
      sa[858] = 0.14275701f;
      sa[859] = 0.0526145f;
      sa[860] = 0.4650238f;
      sa[861] = -0.10301667f;
      sa[862] = -0.35183588f;
      sa[863] = -0.19369183f;
      sa[864] = -0.27463976f;
      sa[865] = 0.17519537f;
      sa[866] = -0.32467777f;
      sa[867] = -0.1435516f;
      sa[868] = -0.2136223f;
      sa[869] = 0.12108752f;
      sa[870] = -0.12302688f;
      sa[871] = 0.106198125f;
      sa[872] = 0.09077609f;
      sa[873] = -0.06488315f;
      sa[874] = -0.09327035f;
      sa[875] = -0.33844152f;
      sa[876] = -0.25333786f;
      sa[877] = -0.27600792f;
      sa[878] = -0.042206824f;
      sa[879] = 0.13634379f;
      sa[880] = -0.12847206f;
      sa[881] = -0.11358366f;
      sa[882] = 0.32574567f;
      sa[883] = 0.08886389f;
      sa[884] = -0.14606972f;
      sa[885] = -0.14453103f;
      sa[886] = 0.04760195f;
      sa[887] = -0.020784952f;
      sa[888] = -0.093917444f;
      sa[889] = -0.027939783f;
      sa[890] = -0.15986364f;
      sa[891] = 0.5039164f;
      sa[892] = 0.1552848f;
      sa[893] = 0.25577965f;
      sa[894] = 0.010636612f;
      sa[895] = 0.27652928f;
      sa[896] = -0.27583805f;
      sa[897] = 0.20752525f;
      sa[898] = 0.07316443f;
      sa[899] = 0.37176183f;
      sa[900] = -0.042051774f;
      sa[901] = 0.13214046f;
      sa[902] = -0.24987991f;
      sa[903] = -0.16778383f;
      sa[904] = 0.13583775f;
      sa[905] = 0.25286835f;
      sa[906] = -0.3636804f;
      sa[907] = -0.21452333f;
      sa[908] = -0.22440055f;
      sa[909] = 0.12864822f;
      sa[910] = 0.17051812f;
      sa[911] = -0.3493883f;
      sa[912] = -0.09677186f;
      sa[913] = 0.070188135f;
      sa[914] = -0.30364096f;
      sa[915] = -0.043252658f;
      sa[916] = 0.27687085f;
      sa[917] = 0.15115419f;
      sa[918] = 0.050088435f;
      sa[919] = 0.31959602f;
      sa[920] = 0.06829218f;
      sa[921] = -0.17214036f;
      sa[922] = -0.24591863f;
      sa[923] = -0.17234477f;
      sa[924] = -0.08589091f;
      sa[925] = -0.149419f;
      sa[926] = 0.121301234f;
      sa[927] = 0.15780239f;
      sa[928] = 0.27750248f;
      sa[929] = 0.20805012f;
      sa[930] = 0.2717928f;
      sa[931] = 0.11362593f;
      sa[932] = 0.1694229f;
      sa[933] = -0.040374123f;
      sa[934] = 0.30748942f;
      sa[935] = -0.15575993f;
      sa[936] = 0.046603862f;
      sa[937] = 0.11429866f;
      sa[938] = -0.26395586f;
      sa[939] = 0.061185602f;
      sa[940] = -0.056656145f;
      sa[941] = -0.3484423f;
      sa[942] = -0.24021485f;
      sa[943] = -0.2688039f;
      sa[944] = -0.26917824f;
      sa[945] = -0.04421027f;
      sa[946] = 0.0042335424f;
      sa[947] = 0.16542003f;
      sa[948] = 0.03947134f;
      sa[949] = -0.25760636f;
      sa[950] = 0.055472497f;
      sa[951] = -0.19985764f;
      sa[952] = -0.2769554f;
      sa[953] = -0.26157966f;
      sa[954] = -0.018755239f;
      sa[955] = -0.004024131f;
      sa[956] = -0.043304786f;
      sa[957] = 0.019821992f;
      sa[958] = 0.08325084f;
      sa[959] = -0.22866932f;
      sa[960] = 0.15284432f;
      sa[961] = -0.08273519f;
      sa[962] = 0.0628854f;
      sa[963] = -0.10471488f;
      sa[964] = -0.270086f;
      sa[965] = 0.16374786f;
      sa[966] = -0.21161912f;
      sa[967] = -0.43738028f;
      sa[968] = 0.06837402f;
      sa[969] = -0.01364104f;
      sa[970] = 0.40374923f;
      sa[971] = 0.119101025f;
      sa[972] = -0.08175383f;
      sa[973] = -0.20736542f;
      sa[974] = -0.2887713f;
      sa[975] = -0.18639798f;
      sa[976] = -0.10933191f;
      sa[977] = 0.1069001f;
      sa[978] = -0.07378657f;
      sa[979] = 0.16127154f;
      sa[980] = 0.18932831f;
      sa[981] = -0.21385852f;
      sa[982] = 0.2108312f;
      sa[983] = 0.06607693f;
      sa[984] = -0.29327708f;
      sa[985] = 0.109953366f;
      sa[986] = -0.24744925f;
      sa[987] = 0.1044228f;
      sa[988] = 0.11968836f;
      sa[989] = 0.2244034f;
      sa[990] = 0.11287663f;
      sa[991] = -0.17469285f;
      sa[992] = -0.26566663f;
      sa[993] = -0.12360734f;
      sa[994] = -0.19801857f;
      sa[995] = -0.34048122f;
      sa[996] = 0.103710026f;
      sa[997] = 0.20684713f;
      sa[998] = -0.022537088f;
      sa[999] = 0.17329435f;
      sa[1000] = -0.010499739f;
      sa[1001] = 0.18129806f;
      sa[1002] = 0.27439216f;
      sa[1003] = -0.13643423f;
      sa[1004] = 0.20198287f;
      sa[1005] = -0.1664889f;
      sa[1006] = -0.1758292f;
      sa[1007] = -0.036225926f;
      sa[1008] = 0.07824558f;
      sa[1009] = 0.14148216f;
      sa[1010] = 0.2494578f;
      sa[1011] = 0.3190264f;
      sa[1012] = -0.01309777f;
      sa[1013] = 0.080946624f;
      sa[1014] = 0.31930572f;
      sa[1015] = -0.22275847f;
      sa[1016] = 0.22339424f;
      sa[1017] = 0.15064463f;
      sa[1018] = -0.047511157f;
      sa[1019] = 0.047523122f;
      sa[1020] = -0.18931855f;
      sa[1021] = 0.028650794f;
      sa[1022] = 0.27921438f;
      sa[1023] = 0.13667695f;
      sa[1024] = 0.11174148f;
      sa[1025] = 0.16266727f;
      sa[1026] = 0.14105576f;
      sa[1027] = 0.2909121f;
      sa[1028] = 0.3925758f;
      sa[1029] = 0.09376799f;
      sa[1030] = -0.0665871f;
      sa[1031] = 0.16054204f;
      sa[1032] = -0.054040425f;
      sa[1033] = 0.039372664f;
      sa[1034] = -0.16856214f;
      sa[1035] = -0.33420664f;
      sa[1036] = 0.30732408f;
      sa[1037] = 0.07777122f;
      sa[1038] = -0.22165808f;
      sa[1039] = 0.26792088f;
      sa[1040] = 0.040960256f;
      sa[1041] = 0.113281995f;
      sa[1042] = -0.29782313f;
      sa[1043] = -0.09442726f;
      sa[1044] = 0.354731f;
      sa[1045] = 0.36098558f;
      sa[1046] = -0.049152363f;
      sa[1047] = -0.112463154f;
      sa[1048] = 0.10686793f;
      sa[1049] = 0.010992918f;
      sa[1050] = 0.12102826f;
      sa[1051] = -0.09240349f;
      sa[1052] = 0.29778284f;
      sa[1053] = 0.19838694f;
      sa[1054] = 0.31285787f;
      sa[1055] = 0.22731555f;
      sa[1056] = 0.32949358f;
      sa[1057] = -0.01858934f;
      sa[1058] = 0.3534224f;
      sa[1059] = -0.028943539f;
      sa[1060] = -0.16449372f;
      sa[1061] = -0.028356086f;
      sa[1062] = -0.13277438f;
      sa[1063] = 0.1402133f;
      sa[1064] = 0.085675366f;
      sa[1065] = -0.08570408f;
      sa[1066] = 0.2227925f;
      sa[1067] = -0.36212516f;
      sa[1068] = -0.19273478f;
      sa[1069] = 0.3157131f;
      sa[1070] = -0.10130675f;
      sa[1071] = 0.081202604f;
      sa[1072] = -0.21709993f;
      sa[1073] = 0.08846415f;
      sa[1074] = 0.20832044f;
      sa[1075] = -0.18498197f;
      sa[1076] = -0.16999616f;
      sa[1077] = 0.09911525f;
      sa[1078] = -0.028859973f;
      sa[1079] = -0.05925541f;
      sa[1080] = 0.14649624f;
      sa[1081] = 0.0329911f;
      sa[1082] = -0.39643142f;
      sa[1083] = 0.02803059f;
      sa[1084] = 0.30050585f;
      sa[1085] = -0.19376841f;
      sa[1086] = -0.25741705f;
      sa[1087] = -0.3844929f;
      sa[1088] = -0.26619607f;
      sa[1089] = 0.08592136f;
      sa[1090] = -0.22604945f;
      sa[1091] = -0.065328814f;
      sa[1092] = -0.34057558f;
      sa[1093] = -0.3741289f;
      sa[1094] = -0.10605788f;
      sa[1095] = -0.5593441f;
      sa[1096] = -0.03672265f;
      sa[1097] = -0.065862864f;
      sa[1098] = 0.1990942f;
      sa[1099] = -0.10889871f;
      sa[1100] = -0.15439415f;
      sa[1101] = 0.12558286f;
      sa[1102] = -0.20825842f;
      sa[1103] = 0.12994201f;
      sa[1104] = -0.42341787f;
      sa[1105] = -0.07870701f;
      sa[1106] = 0.07573931f;
      sa[1107] = 0.059181236f;
      sa[1108] = -0.25978827f;
      sa[1109] = 0.2125189f;
      sa[1110] = 0.040129952f;
      sa[1111] = -0.41464624f;
      sa[1112] = 0.23188937f;
      sa[1113] = 0.22755545f;
      sa[1114] = 0.0357066f;
      sa[1115] = 0.22002971f;
      sa[1116] = 0.07626462f;
      sa[1117] = -0.08647081f;
      sa[1118] = 0.06013151f;
      sa[1119] = 0.16562185f;
      sa[1120] = 0.20475192f;
      sa[1121] = 0.116585314f;
      sa[1122] = 0.35648617f;
      sa[1123] = 0.29640684f;
      sa[1124] = 0.16772056f;
      sa[1125] = -0.11661683f;
      sa[1126] = 0.28610772f;
      sa[1127] = 0.2254799f;
      sa[1128] = 0.045812227f;
      sa[1129] = -0.04357008f;
      sa[1130] = 0.32337534f;
      sa[1131] = 0.34915653f;
      sa[1132] = 0.03730691f;
      sa[1133] = -0.16876645f;
      sa[1134] = 0.09544887f;
      sa[1135] = -0.06891241f;
      sa[1136] = -0.010239123f;
      sa[1137] = 0.21611986f;
      sa[1138] = -0.0040259617f;
      sa[1139] = 0.132051f;
      sa[1140] = 0.31535107f;
      sa[1141] = -0.11816734f;
      sa[1142] = -0.14152294f;
      sa[1143] = -0.44241717f;
      sa[1144] = -0.28205526f;
      sa[1145] = 0.11805008f;
      sa[1146] = 0.2266843f;
      sa[1147] = -0.22118737f;
      sa[1148] = -0.006292053f;
      sa[1149] = -0.077015996f;
      sa[1150] = -0.2505523f;
      sa[1151] = -0.33174232f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2380478f;
      sa[1] = 0.042431682f;
      sa[2] = -0.61938417f;
      sa[3] = -1.3499475f;
      sa[4] = 0.14955148f;
      sa[5] = 0.560109f;
      sa[6] = 1.3325949f;
      sa[7] = -0.7144958f;
      sa[8] = -0.920591f;
      sa[9] = 0.7748154f;
      sa[10] = -0.07106737f;
      sa[11] = 0.459162f;
      sa[12] = 0.086099654f;
      sa[13] = 0.0045359903f;
      sa[14] = -1.3928845f;
      sa[15] = 1.1467122f;
      sa[16] = 1.690629f;
      sa[17] = -0.5227144f;
      sa[18] = 0.14687626f;
      sa[19] = -0.25922376f;
      sa[20] = 1.1910715f;
      sa[21] = 0.060683142f;
      sa[22] = -0.96251553f;
      sa[23] = 0.73646307f;
      sa[24] = -1.280529f;
      sa[25] = 0.5646727f;
      sa[26] = -0.26610833f;
      sa[27] = 1.6397814f;
      sa[28] = -1.3315533f;
      sa[29] = -0.42655098f;
      sa[30] = 0.54936045f;
      sa[31] = -0.62563205f;
      sa[32] = -1.0620195f;
      sa[33] = -1.6218518f;
      sa[34] = 0.08992518f;
      sa[35] = 1.3971438f;
      sa[36] = -0.35058713f;
      sa[37] = -0.06846637f;
      sa[38] = 0.23194051f;
      sa[39] = 0.7780075f;
      sa[40] = -0.7417895f;
      sa[41] = -1.4103187f;
      sa[42] = -0.98834f;
      sa[43] = -1.5675889f;
      sa[44] = 0.029510893f;
      sa[45] = -1.3304462f;
      sa[46] = 1.2733217f;
      sa[47] = 1.232671f;
      sa[48] = -1.4179344f;
      sa[49] = -1.1133051f;
      sa[50] = 0.50831395f;
      sa[51] = -0.32755178f;
      sa[52] = 0.7883678f;
      sa[53] = 0.81407434f;
      sa[54] = -0.17203596f;
      sa[55] = 1.1722634f;
      sa[56] = -1.114217f;
      sa[57] = -1.0836562f;
      sa[58] = 0.019322207f;
      sa[59] = -0.27828264f;
      sa[60] = 1.5838242f;
      sa[61] = -0.656506f;
      sa[62] = -0.41067314f;
      sa[63] = 0.6789004f;
      sa[64] = 1.3880725f;
      sa[65] = -0.65708905f;
      sa[66] = 0.6572469f;
      sa[67] = 1.6195301f;
      sa[68] = 0.63342184f;
      sa[69] = -1.1946466f;
      sa[70] = -1.4673814f;
      sa[71] = -0.41489777f;
      sa[72] = -1.3432641f;
      sa[73] = 1.3962396f;
      sa[74] = 1.3773363f;
      sa[75] = -0.2671882f;
      sa[76] = 1.0003939f;
      sa[77] = 0.4400245f;
      sa[78] = -1.4698247f;
      sa[79] = 0.9974091f;
      sa[80] = -0.82750905f;
      sa[81] = 0.2744632f;
      sa[82] = 0.91804457f;
      sa[83] = -0.85655653f;
      sa[84] = -1.5932907f;
      sa[85] = -1.1447911f;
      sa[86] = 0.5989394f;
      sa[87] = 1.1395633f;
      sa[88] = -1.5558579f;
      sa[89] = -0.8748155f;
      sa[90] = -0.9346536f;
      sa[91] = 1.427307f;
      sa[92] = -0.30032668f;
      sa[93] = 0.3152123f;
      sa[94] = -1.5391799f;
      sa[95] = -0.13070439f;
      sa[96] = -0.93063414f;
      sa[97] = 0.21639879f;
      sa[98] = -0.052380014f;
      sa[99] = 0.5325131f;
      sa[100] = -1.2785687f;
      sa[101] = -0.8048558f;
      sa[102] = 1.0302898f;
      sa[103] = 0.22274917f;
      sa[104] = -0.35116637f;
      sa[105] = -0.8892481f;
      sa[106] = 1.3485838f;
      sa[107] = 1.3161643f;
      sa[108] = 1.0317764f;
      sa[109] = 0.32627338f;
      sa[110] = 0.9074279f;
      sa[111] = -0.99727654f;
      sa[112] = -1.3171299f;
      sa[113] = 0.3993392f;
      sa[114] = 0.0021005366f;
      sa[115] = -0.5425562f;
      sa[116] = 1.2193369f;
      sa[117] = -0.029667612f;
      sa[118] = -1.4239299f;
      sa[119] = -0.6353325f;
      sa[120] = -0.5793892f;
      sa[121] = 0.9968609f;
      sa[122] = -0.03595512f;
      sa[123] = 0.025296925f;
      sa[124] = -0.65941614f;
      sa[125] = 0.84589165f;
      sa[126] = -1.2657007f;
      sa[127] = 0.35671648f;
      sa[128] = -1.0360557f;
      sa[129] = 0.932758f;
      sa[130] = -0.4622794f;
      sa[131] = 0.87341356f;
      sa[132] = 0.51608586f;
      sa[133] = 0.9004217f;
      sa[134] = 0.68923765f;
      sa[135] = -0.9632413f;
      sa[136] = 0.66246015f;
      sa[137] = -0.5496239f;
      sa[138] = 0.0029137814f;
      sa[139] = 1.2148263f;
      sa[140] = -0.7247095f;
      sa[141] = -0.10531785f;
      sa[142] = 0.27593005f;
      sa[143] = -0.7568265f;
      sa[144] = 1.0985514f;
      sa[145] = -0.7495655f;
      sa[146] = 0.0996456f;
      sa[147] = -0.17331542f;
      sa[148] = -0.8584089f;
      sa[149] = 1.3931141f;
      sa[150] = -1.1824702f;
      sa[151] = -2.0752795f;
      sa[152] = 1.7341155f;
      sa[153] = -0.5459414f;
      sa[154] = 1.6069983f;
      sa[155] = -1.3902638f;
      sa[156] = -1.7155247f;
      sa[157] = -1.1015701f;
      sa[158] = 0.18707158f;
      sa[159] = -0.69164765f;
      sa[160] = 1.4334719f;
      sa[161] = -1.2749224f;
      sa[162] = 1.8304735f;
      sa[163] = -0.8115722f;
      sa[164] = 0.77315295f;
      sa[165] = -0.5129926f;
      sa[166] = 1.282333f;
      sa[167] = -1.422387f;
      sa[168] = 1.0978875f;
      sa[169] = -1.5568268f;
      sa[170] = 1.033962f;
      sa[171] = 0.86351436f;
      sa[172] = 1.5925151f;
      sa[173] = 1.5800792f;
      sa[174] = -0.057207886f;
      sa[175] = 0.068393014f;
      sa[176] = -0.821679f;
      sa[177] = -0.08160954f;
      sa[178] = -1.1655645f;
      sa[179] = 0.035976846f;
      sa[180] = -1.081163f;
      sa[181] = -0.9988829f;
      sa[182] = 0.29627824f;
      sa[183] = -0.9909862f;
      sa[184] = 1.6008484f;
      sa[185] = 1.3875657f;
      sa[186] = -0.5212993f;
      sa[187] = -0.85657805f;
      sa[188] = -0.5808829f;
      sa[189] = -0.83899033f;
      sa[190] = -1.4498214f;
      sa[191] = -1.1388214f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


