/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:07.856+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_11 > h2o_nn_32x6_Tanh_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_11", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(5859444258826685360L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.02468886489941805;
      sa[1] = -0.018923879103354455;
      sa[2] = 0.05828761211603698;
      sa[3] = -0.18536816636777964;
      sa[4] = -0.009359415263960282;
      sa[5] = 0.00781650975479272;
      sa[6] = 0.14367093980162512;
      sa[7] = -0.03662873630678331;
      sa[8] = -0.016509531457633567;
      sa[9] = -0.06610456501149414;
      sa[10] = -0.011177308660537559;
      sa[11] = 0.053590287321118736;
      sa[12] = 0.12463150456028867;
      sa[13] = 0.04871202782663644;
      sa[14] = 0.05541291269101403;
      sa[15] = 0.02407275861026274;
      sa[16] = -0.035613581803675895;
      sa[17] = 0.020337782970942637;
      sa[18] = -0.07729230898459122;
      sa[19] = 0.034523014126831515;
      sa[20] = 0.0725711850834744;
      sa[21] = -0.019428856289380365;
      sa[22] = -0.11214718677658352;
      sa[23] = 0.03801038312329871;
      sa[24] = -0.008845452431647544;
      sa[25] = 0.080295628232056;
      sa[26] = -0.07679500479060088;
      sa[27] = 0.1556093230110425;
      sa[28] = -0.0839510278785829;
      sa[29] = 0.015249471909685291;
      sa[30] = 0.11182469029300741;
      sa[31] = 0.0748192417910561;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.12288558489735348;
      sa[1] = -0.09247897477859114;
      sa[2] = -0.09874981741391392;
      sa[3] = 0.007940372265174198;
      sa[4] = -0.10076287523435115;
      sa[5] = 0.011060276795799058;
    }
  }
}
class h2o_nn_32x6_Tanh_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.0054880236f;
      sa[1] = 0.21267259f;
      sa[2] = 0.044767547f;
      sa[3] = 0.03257254f;
      sa[4] = -0.17864737f;
      sa[5] = -0.21884835f;
      sa[6] = -0.10349009f;
      sa[7] = 0.23594145f;
      sa[8] = 0.043935828f;
      sa[9] = -0.08207486f;
      sa[10] = -0.07549254f;
      sa[11] = -0.22499804f;
      sa[12] = 0.064863235f;
      sa[13] = -0.3032655f;
      sa[14] = -0.21879576f;
      sa[15] = -0.06802062f;
      sa[16] = 0.011721079f;
      sa[17] = 0.13402791f;
      sa[18] = -0.18001072f;
      sa[19] = 0.23450258f;
      sa[20] = 0.23736662f;
      sa[21] = -0.2716011f;
      sa[22] = 0.21885929f;
      sa[23] = -0.20245434f;
      sa[24] = 0.23272438f;
      sa[25] = 0.14131008f;
      sa[26] = -0.21507286f;
      sa[27] = 0.42478147f;
      sa[28] = 0.22996338f;
      sa[29] = -0.24012709f;
      sa[30] = -0.17555784f;
      sa[31] = 0.11514067f;
      sa[32] = 0.18701337f;
      sa[33] = -0.1830498f;
      sa[34] = 0.05716172f;
      sa[35] = -0.09471816f;
      sa[36] = 0.1493335f;
      sa[37] = 0.21631709f;
      sa[38] = -0.24508192f;
      sa[39] = 0.52338755f;
      sa[40] = 0.04026362f;
      sa[41] = -0.01692607f;
      sa[42] = -0.13257758f;
      sa[43] = 0.09105777f;
      sa[44] = 0.29908243f;
      sa[45] = -0.42897445f;
      sa[46] = 0.03232344f;
      sa[47] = -0.0038582261f;
      sa[48] = 0.20666994f;
      sa[49] = 0.30556935f;
      sa[50] = 0.19436117f;
      sa[51] = -0.27321187f;
      sa[52] = -0.14239974f;
      sa[53] = 0.06270153f;
      sa[54] = 0.1420818f;
      sa[55] = -0.0068099415f;
      sa[56] = -0.23053986f;
      sa[57] = -0.36623666f;
      sa[58] = 0.19396973f;
      sa[59] = -0.30964345f;
      sa[60] = -0.30363348f;
      sa[61] = 0.17563757f;
      sa[62] = 0.1234728f;
      sa[63] = -0.1752378f;
      sa[64] = 0.10148542f;
      sa[65] = 0.09779448f;
      sa[66] = 0.055202313f;
      sa[67] = 0.09771781f;
      sa[68] = -0.08479589f;
      sa[69] = -0.031358257f;
      sa[70] = -0.027958266f;
      sa[71] = 0.29793748f;
      sa[72] = -0.25375506f;
      sa[73] = 0.23216484f;
      sa[74] = -0.03993871f;
      sa[75] = -0.09807487f;
      sa[76] = -0.18227498f;
      sa[77] = -0.07023049f;
      sa[78] = -0.05770544f;
      sa[79] = 0.22591358f;
      sa[80] = -0.30718574f;
      sa[81] = 0.042840935f;
      sa[82] = 0.062181108f;
      sa[83] = 0.111399874f;
      sa[84] = 0.0125163905f;
      sa[85] = -0.1652324f;
      sa[86] = 0.16752154f;
      sa[87] = 0.2839369f;
      sa[88] = 0.29069373f;
      sa[89] = 0.16400762f;
      sa[90] = -0.105270974f;
      sa[91] = 0.046527836f;
      sa[92] = 0.13042572f;
      sa[93] = -0.17472608f;
      sa[94] = -0.11216149f;
      sa[95] = -0.13018785f;
      sa[96] = 0.207145f;
      sa[97] = 0.05830478f;
      sa[98] = 0.2138925f;
      sa[99] = -0.05834069f;
      sa[100] = -0.051368568f;
      sa[101] = -0.17913122f;
      sa[102] = -0.23849961f;
      sa[103] = -0.021544192f;
      sa[104] = -0.022723982f;
      sa[105] = -0.084544115f;
      sa[106] = -0.21287605f;
      sa[107] = 0.10488147f;
      sa[108] = 0.13205953f;
      sa[109] = -0.16573553f;
      sa[110] = -0.15078762f;
      sa[111] = 0.16645835f;
      sa[112] = 0.05990199f;
      sa[113] = -0.00405031f;
      sa[114] = -0.14609776f;
      sa[115] = -0.116518915f;
      sa[116] = -0.23384959f;
      sa[117] = -0.08336868f;
      sa[118] = -0.31425065f;
      sa[119] = -0.13470043f;
      sa[120] = 0.19146067f;
      sa[121] = 0.21482015f;
      sa[122] = 0.36166483f;
      sa[123] = 0.31798986f;
      sa[124] = 0.2939178f;
      sa[125] = 0.19552821f;
      sa[126] = -0.3176694f;
      sa[127] = -0.34391f;
      sa[128] = 0.025143582f;
      sa[129] = 0.09116589f;
      sa[130] = -0.12558897f;
      sa[131] = 0.2967177f;
      sa[132] = 0.1664345f;
      sa[133] = -0.25837022f;
      sa[134] = 0.028629055f;
      sa[135] = -0.3255433f;
      sa[136] = -0.32208952f;
      sa[137] = -0.112630576f;
      sa[138] = 0.053391438f;
      sa[139] = -0.12357157f;
      sa[140] = -0.05936709f;
      sa[141] = -0.13574976f;
      sa[142] = 0.12047434f;
      sa[143] = -0.27254707f;
      sa[144] = 0.17939621f;
      sa[145] = -0.13664661f;
      sa[146] = -0.41941908f;
      sa[147] = 0.110814884f;
      sa[148] = 0.12642947f;
      sa[149] = 0.13418311f;
      sa[150] = 0.23471421f;
      sa[151] = -0.20520106f;
      sa[152] = -0.048115347f;
      sa[153] = 0.32866788f;
      sa[154] = 0.26086473f;
      sa[155] = -0.14611451f;
      sa[156] = 0.14517975f;
      sa[157] = -0.19811991f;
      sa[158] = 0.10274572f;
      sa[159] = 0.1591755f;
      sa[160] = 0.0033583897f;
      sa[161] = 0.23929845f;
      sa[162] = -0.009814062f;
      sa[163] = -0.19949803f;
      sa[164] = 0.23036215f;
      sa[165] = -0.057340223f;
      sa[166] = -0.07597221f;
      sa[167] = -0.029536815f;
      sa[168] = 0.1465023f;
      sa[169] = 0.29751265f;
      sa[170] = 0.078866646f;
      sa[171] = -0.106678754f;
      sa[172] = -0.071824156f;
      sa[173] = -0.15420596f;
      sa[174] = -0.04629085f;
      sa[175] = -0.22552222f;
      sa[176] = 0.0027396588f;
      sa[177] = 0.005489027f;
      sa[178] = -0.088343754f;
      sa[179] = 0.08529512f;
      sa[180] = -0.03972825f;
      sa[181] = -0.30359563f;
      sa[182] = -0.2673186f;
      sa[183] = 0.14683785f;
      sa[184] = 0.27817607f;
      sa[185] = 0.17120944f;
      sa[186] = -0.31349206f;
      sa[187] = 0.089096144f;
      sa[188] = 0.0035660474f;
      sa[189] = 0.1594419f;
      sa[190] = 0.08375512f;
      sa[191] = -0.10061018f;
      sa[192] = -0.1021844f;
      sa[193] = 0.24031456f;
      sa[194] = 0.081952356f;
      sa[195] = 0.29621243f;
      sa[196] = 0.21123786f;
      sa[197] = -0.012833883f;
      sa[198] = 0.22718638f;
      sa[199] = -0.093760334f;
      sa[200] = 0.020734925f;
      sa[201] = -0.27445143f;
      sa[202] = 0.0845706f;
      sa[203] = 5.7439524E-4f;
      sa[204] = -0.2543793f;
      sa[205] = 0.30393967f;
      sa[206] = 0.2964185f;
      sa[207] = 0.09277695f;
      sa[208] = -0.21231732f;
      sa[209] = -0.03618978f;
      sa[210] = -0.23996998f;
      sa[211] = -0.20924146f;
      sa[212] = 0.22316529f;
      sa[213] = -0.3050243f;
      sa[214] = -0.030005524f;
      sa[215] = 0.13346888f;
      sa[216] = 0.12240991f;
      sa[217] = 0.13208778f;
      sa[218] = -0.14539076f;
      sa[219] = 0.29974675f;
      sa[220] = -0.14757536f;
      sa[221] = 0.10060294f;
      sa[222] = 0.23458432f;
      sa[223] = 0.13353379f;
      sa[224] = 0.14454189f;
      sa[225] = 0.25583145f;
      sa[226] = -0.17713621f;
      sa[227] = 0.1109029f;
      sa[228] = 0.1325046f;
      sa[229] = 0.11750049f;
      sa[230] = 0.23981856f;
      sa[231] = -0.2547242f;
      sa[232] = -0.23477998f;
      sa[233] = 0.07517118f;
      sa[234] = 0.20365942f;
      sa[235] = -0.16782361f;
      sa[236] = 0.002809045f;
      sa[237] = -0.1510938f;
      sa[238] = -0.1921816f;
      sa[239] = 0.14278024f;
      sa[240] = 0.050873015f;
      sa[241] = -0.22404565f;
      sa[242] = -0.0067786695f;
      sa[243] = -0.14816904f;
      sa[244] = -0.14555869f;
      sa[245] = -0.05289521f;
      sa[246] = -0.18182042f;
      sa[247] = -0.0015958243f;
      sa[248] = 0.21405114f;
      sa[249] = 0.14441745f;
      sa[250] = -0.108200215f;
      sa[251] = -0.068376504f;
      sa[252] = -0.10395531f;
      sa[253] = -0.13634937f;
      sa[254] = -0.1396387f;
      sa[255] = 0.14670436f;
      sa[256] = -0.14938809f;
      sa[257] = 0.27992103f;
      sa[258] = -0.11908469f;
      sa[259] = -0.33064705f;
      sa[260] = -0.089107715f;
      sa[261] = -0.13603218f;
      sa[262] = -0.2552698f;
      sa[263] = 0.33241066f;
      sa[264] = -0.13989007f;
      sa[265] = 0.04805871f;
      sa[266] = -0.21334141f;
      sa[267] = -0.22600892f;
      sa[268] = 0.20832956f;
      sa[269] = -0.16515778f;
      sa[270] = -0.22636983f;
      sa[271] = 0.27363977f;
      sa[272] = -0.05205076f;
      sa[273] = -0.08698084f;
      sa[274] = 0.14157394f;
      sa[275] = 0.008325722f;
      sa[276] = 0.06383436f;
      sa[277] = -0.25980127f;
      sa[278] = -0.3466908f;
      sa[279] = 0.20384489f;
      sa[280] = -0.12805198f;
      sa[281] = 0.267523f;
      sa[282] = -0.10081148f;
      sa[283] = -0.04334945f;
      sa[284] = 0.029479489f;
      sa[285] = -0.06517732f;
      sa[286] = 0.11256334f;
      sa[287] = 0.032929424f;
      sa[288] = -0.29094654f;
      sa[289] = -0.15849464f;
      sa[290] = -0.05066986f;
      sa[291] = 0.02627287f;
      sa[292] = 0.12471578f;
      sa[293] = -0.061598767f;
      sa[294] = 0.050666086f;
      sa[295] = 0.2613682f;
      sa[296] = 0.115004815f;
      sa[297] = 0.21717833f;
      sa[298] = 0.058306593f;
      sa[299] = -0.08859181f;
      sa[300] = 0.01145686f;
      sa[301] = -0.020255158f;
      sa[302] = 0.16319948f;
      sa[303] = 0.0964222f;
      sa[304] = -0.119812526f;
      sa[305] = 0.06559878f;
      sa[306] = 0.27618635f;
      sa[307] = -0.25258115f;
      sa[308] = 0.047338102f;
      sa[309] = 0.1099481f;
      sa[310] = 0.24450691f;
      sa[311] = 0.35208273f;
      sa[312] = -0.115925185f;
      sa[313] = -0.12586458f;
      sa[314] = -0.09590521f;
      sa[315] = -0.060945358f;
      sa[316] = -0.03759552f;
      sa[317] = -0.09008174f;
      sa[318] = 0.11550957f;
      sa[319] = 0.34565997f;
      sa[320] = -0.08352793f;
      sa[321] = 0.036855683f;
      sa[322] = 0.3181875f;
      sa[323] = -0.05807746f;
      sa[324] = 0.037580393f;
      sa[325] = 0.2546286f;
      sa[326] = -0.44658923f;
      sa[327] = 0.13535498f;
      sa[328] = -0.095440544f;
      sa[329] = 0.20153412f;
      sa[330] = -0.22030799f;
      sa[331] = -0.1060672f;
      sa[332] = -0.20511286f;
      sa[333] = 0.016881961f;
      sa[334] = -0.117124416f;
      sa[335] = 0.24110518f;
      sa[336] = -0.21081245f;
      sa[337] = -0.18442932f;
      sa[338] = 0.20667076f;
      sa[339] = -0.2941642f;
      sa[340] = -0.3954811f;
      sa[341] = -0.44043475f;
      sa[342] = 0.046795692f;
      sa[343] = -0.045188297f;
      sa[344] = -0.20154905f;
      sa[345] = 0.16208167f;
      sa[346] = 0.15553066f;
      sa[347] = -0.3158953f;
      sa[348] = 0.120752156f;
      sa[349] = -0.3092759f;
      sa[350] = -0.26933825f;
      sa[351] = 0.13679133f;
      sa[352] = 0.13745151f;
      sa[353] = -0.07571213f;
      sa[354] = 0.031437233f;
      sa[355] = -0.002673559f;
      sa[356] = -0.060468014f;
      sa[357] = 0.2689152f;
      sa[358] = -0.35873118f;
      sa[359] = -0.08369354f;
      sa[360] = 0.09245488f;
      sa[361] = -0.048173595f;
      sa[362] = -0.11622572f;
      sa[363] = 0.32340366f;
      sa[364] = -0.095309995f;
      sa[365] = -0.1364242f;
      sa[366] = 0.0414545f;
      sa[367] = -0.14648807f;
      sa[368] = -0.18059874f;
      sa[369] = 0.20795207f;
      sa[370] = -0.16446921f;
      sa[371] = 0.24596955f;
      sa[372] = -0.015611042f;
      sa[373] = 0.33365938f;
      sa[374] = -0.123400204f;
      sa[375] = -0.26491833f;
      sa[376] = -0.25505313f;
      sa[377] = -0.2771487f;
      sa[378] = 0.06847205f;
      sa[379] = 0.076827355f;
      sa[380] = -0.16698857f;
      sa[381] = -0.13611528f;
      sa[382] = -3.033857E-4f;
      sa[383] = -0.17056012f;
      sa[384] = -0.012459524f;
      sa[385] = 0.07077509f;
      sa[386] = -0.2997727f;
      sa[387] = -0.21842481f;
      sa[388] = 0.04582144f;
      sa[389] = -0.0454139f;
      sa[390] = 0.042297777f;
      sa[391] = -0.106718324f;
      sa[392] = 0.18878639f;
      sa[393] = 0.18838726f;
      sa[394] = -0.01422769f;
      sa[395] = 0.1761371f;
      sa[396] = 0.2969772f;
      sa[397] = -0.32239482f;
      sa[398] = 0.08722124f;
      sa[399] = 0.28785667f;
      sa[400] = 0.22452474f;
      sa[401] = 0.33999407f;
      sa[402] = -0.09002823f;
      sa[403] = 0.27663425f;
      sa[404] = 0.25253236f;
      sa[405] = -0.3077102f;
      sa[406] = -0.035796624f;
      sa[407] = 0.13643305f;
      sa[408] = -0.20712413f;
      sa[409] = -0.1525682f;
      sa[410] = -0.092375875f;
      sa[411] = 0.1756664f;
      sa[412] = -0.1424109f;
      sa[413] = 0.027732985f;
      sa[414] = 0.11481353f;
      sa[415] = 0.23209465f;
      sa[416] = -0.22493806f;
      sa[417] = -0.030016014f;
      sa[418] = -0.011880098f;
      sa[419] = 0.19483297f;
      sa[420] = 0.26048306f;
      sa[421] = 0.2435499f;
      sa[422] = 0.27286005f;
      sa[423] = -0.18584317f;
      sa[424] = 0.07180323f;
      sa[425] = -0.06062579f;
      sa[426] = -0.21483621f;
      sa[427] = 0.19617222f;
      sa[428] = 0.002858889f;
      sa[429] = -0.21349241f;
      sa[430] = 0.2510037f;
      sa[431] = -0.05670086f;
      sa[432] = -0.041819513f;
      sa[433] = 0.1425618f;
      sa[434] = 0.41943848f;
      sa[435] = -0.058422357f;
      sa[436] = -0.18555787f;
      sa[437] = -0.17903072f;
      sa[438] = 0.051897004f;
      sa[439] = 0.052883122f;
      sa[440] = 0.26277626f;
      sa[441] = -0.16554627f;
      sa[442] = 0.14328529f;
      sa[443] = 0.073874064f;
      sa[444] = -0.18689677f;
      sa[445] = 0.07815748f;
      sa[446] = 0.20751631f;
      sa[447] = 0.043526474f;
      sa[448] = 0.25765157f;
      sa[449] = 0.2738342f;
      sa[450] = -0.2554348f;
      sa[451] = 0.16073444f;
      sa[452] = 0.22022752f;
      sa[453] = 0.018278645f;
      sa[454] = -0.08243848f;
      sa[455] = -0.012630994f;
      sa[456] = 0.050738644f;
      sa[457] = 0.038502f;
      sa[458] = -0.23747715f;
      sa[459] = 0.40847102f;
      sa[460] = 0.25467384f;
      sa[461] = 0.31692448f;
      sa[462] = 0.1225471f;
      sa[463] = 0.25302154f;
      sa[464] = -0.36039436f;
      sa[465] = 0.24926f;
      sa[466] = -0.0067913514f;
      sa[467] = 0.074505f;
      sa[468] = -0.016789526f;
      sa[469] = 0.20463218f;
      sa[470] = 0.18513103f;
      sa[471] = 0.10874139f;
      sa[472] = 0.0288521f;
      sa[473] = -0.011030756f;
      sa[474] = -0.014150225f;
      sa[475] = 0.2595392f;
      sa[476] = 0.13039759f;
      sa[477] = -0.13349214f;
      sa[478] = 0.19627552f;
      sa[479] = -0.12475086f;
      sa[480] = -0.2883941f;
      sa[481] = -0.13716911f;
      sa[482] = -0.24520504f;
      sa[483] = 0.19881406f;
      sa[484] = 0.20078336f;
      sa[485] = 0.10110554f;
      sa[486] = -0.036480397f;
      sa[487] = -0.21307205f;
      sa[488] = -0.22313912f;
      sa[489] = 0.033024944f;
      sa[490] = 0.0028767858f;
      sa[491] = -0.2418592f;
      sa[492] = 0.24811639f;
      sa[493] = 0.25545728f;
      sa[494] = -0.15743935f;
      sa[495] = 0.13588792f;
      sa[496] = -0.05240259f;
      sa[497] = 0.03031133f;
      sa[498] = 0.20343092f;
      sa[499] = 0.15020347f;
      sa[500] = -0.03396169f;
      sa[501] = 0.060398847f;
      sa[502] = 0.3248718f;
      sa[503] = -0.02582747f;
      sa[504] = -0.13836573f;
      sa[505] = -0.20375721f;
      sa[506] = 0.37358916f;
      sa[507] = -0.1340435f;
      sa[508] = 0.123835236f;
      sa[509] = 0.2516131f;
      sa[510] = 0.22180763f;
      sa[511] = 0.029963307f;
      sa[512] = 0.099245295f;
      sa[513] = -0.095849685f;
      sa[514] = 0.1945671f;
      sa[515] = -0.29712334f;
      sa[516] = 0.048058406f;
      sa[517] = 0.12558016f;
      sa[518] = 0.19579557f;
      sa[519] = -0.017199522f;
      sa[520] = 0.28117216f;
      sa[521] = 0.20809288f;
      sa[522] = 0.11602536f;
      sa[523] = 0.20425053f;
      sa[524] = 0.2014469f;
      sa[525] = 0.19184576f;
      sa[526] = 0.03190551f;
      sa[527] = 0.025690904f;
      sa[528] = 0.071137235f;
      sa[529] = 0.13417727f;
      sa[530] = -0.17499442f;
      sa[531] = 0.052417327f;
      sa[532] = 0.16395465f;
      sa[533] = 0.13319351f;
      sa[534] = 0.15717174f;
      sa[535] = -0.025923375f;
      sa[536] = -2.6796426E-4f;
      sa[537] = -0.27391917f;
      sa[538] = 0.29077566f;
      sa[539] = 0.4133073f;
      sa[540] = -0.24947768f;
      sa[541] = -0.12839356f;
      sa[542] = -0.05663342f;
      sa[543] = -0.4999999f;
      sa[544] = 0.12439028f;
      sa[545] = 0.043559425f;
      sa[546] = 0.048622597f;
      sa[547] = 0.07530076f;
      sa[548] = 0.043090604f;
      sa[549] = 0.2664158f;
      sa[550] = -0.036850642f;
      sa[551] = -0.07929256f;
      sa[552] = 0.045338556f;
      sa[553] = -0.12020049f;
      sa[554] = -0.16691177f;
      sa[555] = -0.17367803f;
      sa[556] = -0.20583028f;
      sa[557] = -0.15228868f;
      sa[558] = -0.12745535f;
      sa[559] = 0.19153093f;
      sa[560] = -0.20841284f;
      sa[561] = 0.004262134f;
      sa[562] = 0.21622427f;
      sa[563] = -0.03272404f;
      sa[564] = 0.17058174f;
      sa[565] = 0.008763214f;
      sa[566] = 0.23334235f;
      sa[567] = 0.2259647f;
      sa[568] = -0.025758656f;
      sa[569] = 0.056818802f;
      sa[570] = -0.060924936f;
      sa[571] = -0.07214047f;
      sa[572] = -0.107834555f;
      sa[573] = 0.22987613f;
      sa[574] = 0.096924126f;
      sa[575] = -0.27457833f;
      sa[576] = -0.09102598f;
      sa[577] = 0.0023794032f;
      sa[578] = -0.16554223f;
      sa[579] = 0.13399339f;
      sa[580] = 0.08683312f;
      sa[581] = -0.12516688f;
      sa[582] = 0.040786933f;
      sa[583] = 0.034183826f;
      sa[584] = 0.1483759f;
      sa[585] = 0.1141445f;
      sa[586] = -0.12390915f;
      sa[587] = -0.1287566f;
      sa[588] = 0.07324718f;
      sa[589] = 0.12114389f;
      sa[590] = -0.065412015f;
      sa[591] = 0.034743704f;
      sa[592] = -0.5231131f;
      sa[593] = -0.2063113f;
      sa[594] = -0.015273129f;
      sa[595] = -0.018128134f;
      sa[596] = 0.24045284f;
      sa[597] = -0.060242467f;
      sa[598] = 0.119334795f;
      sa[599] = -0.0596003f;
      sa[600] = -0.3867456f;
      sa[601] = 0.24513376f;
      sa[602] = 0.013432281f;
      sa[603] = 0.21352227f;
      sa[604] = 0.23494953f;
      sa[605] = 0.19998235f;
      sa[606] = 0.21832703f;
      sa[607] = 0.0458346f;
      sa[608] = 0.0708912f;
      sa[609] = 0.087659515f;
      sa[610] = 0.1238587f;
      sa[611] = -0.033582475f;
      sa[612] = -0.078969754f;
      sa[613] = 0.077444084f;
      sa[614] = 0.10387937f;
      sa[615] = 0.13945916f;
      sa[616] = 0.06664483f;
      sa[617] = -0.24379842f;
      sa[618] = -0.14094722f;
      sa[619] = -0.11225808f;
      sa[620] = -0.067731075f;
      sa[621] = -0.3477841f;
      sa[622] = -0.28220952f;
      sa[623] = -0.3474837f;
      sa[624] = -0.095009446f;
      sa[625] = 0.24522613f;
      sa[626] = -0.063642845f;
      sa[627] = 0.1356552f;
      sa[628] = -0.26670095f;
      sa[629] = -0.13243905f;
      sa[630] = -0.3528214f;
      sa[631] = 0.28435287f;
      sa[632] = 0.049838636f;
      sa[633] = -0.19119363f;
      sa[634] = -0.19249423f;
      sa[635] = 0.038534883f;
      sa[636] = -0.12651852f;
      sa[637] = -0.09242397f;
      sa[638] = -0.1343193f;
      sa[639] = 0.038821325f;
      sa[640] = -0.19136323f;
      sa[641] = -0.31387338f;
      sa[642] = 0.19264325f;
      sa[643] = -0.38176635f;
      sa[644] = -0.09622097f;
      sa[645] = -0.2434577f;
      sa[646] = 0.33348042f;
      sa[647] = -0.28104576f;
      sa[648] = 0.053968396f;
      sa[649] = -0.04489312f;
      sa[650] = 0.019218702f;
      sa[651] = -0.077332474f;
      sa[652] = 0.044459693f;
      sa[653] = -0.1813445f;
      sa[654] = -0.14196575f;
      sa[655] = -0.22395623f;
      sa[656] = 0.20454429f;
      sa[657] = 0.050508365f;
      sa[658] = -0.33145756f;
      sa[659] = -0.23642983f;
      sa[660] = -0.27429667f;
      sa[661] = -0.14313431f;
      sa[662] = -0.2699896f;
      sa[663] = 0.122260325f;
      sa[664] = -0.25164154f;
      sa[665] = 0.10584957f;
      sa[666] = -0.11465159f;
      sa[667] = -0.26908872f;
      sa[668] = 0.23406228f;
      sa[669] = -0.13725774f;
      sa[670] = 0.121931575f;
      sa[671] = -0.00994304f;
      sa[672] = -0.32010728f;
      sa[673] = 0.13305034f;
      sa[674] = 0.19495519f;
      sa[675] = -0.26536936f;
      sa[676] = -0.1366293f;
      sa[677] = -0.24429506f;
      sa[678] = 0.13611794f;
      sa[679] = -0.14816986f;
      sa[680] = 0.1066939f;
      sa[681] = 0.12691964f;
      sa[682] = -0.07744772f;
      sa[683] = -0.20236182f;
      sa[684] = -0.08047573f;
      sa[685] = 0.038776994f;
      sa[686] = -0.003175039f;
      sa[687] = -0.2664463f;
      sa[688] = -0.26602432f;
      sa[689] = -0.2213013f;
      sa[690] = -0.0268247f;
      sa[691] = 0.16664936f;
      sa[692] = -0.19082065f;
      sa[693] = -0.1164544f;
      sa[694] = 0.30101538f;
      sa[695] = -0.058733623f;
      sa[696] = -0.049804028f;
      sa[697] = -0.116959445f;
      sa[698] = -0.14229685f;
      sa[699] = 0.35035172f;
      sa[700] = 0.25056407f;
      sa[701] = 0.28852466f;
      sa[702] = 0.3045934f;
      sa[703] = -0.11247237f;
      sa[704] = -0.24630482f;
      sa[705] = -0.044647954f;
      sa[706] = -0.13624014f;
      sa[707] = 0.20780084f;
      sa[708] = 0.12565155f;
      sa[709] = -0.21859594f;
      sa[710] = 0.31049636f;
      sa[711] = -0.1733876f;
      sa[712] = 0.059072357f;
      sa[713] = 0.15185691f;
      sa[714] = 0.19993748f;
      sa[715] = 0.16804834f;
      sa[716] = 0.016112255f;
      sa[717] = 0.11392172f;
      sa[718] = 0.019757349f;
      sa[719] = 0.15362f;
      sa[720] = -0.12750718f;
      sa[721] = 0.24337691f;
      sa[722] = -0.06723526f;
      sa[723] = -0.015732806f;
      sa[724] = 0.12199704f;
      sa[725] = -0.24343994f;
      sa[726] = -0.17264244f;
      sa[727] = -0.34302804f;
      sa[728] = 0.013848972f;
      sa[729] = -0.06902167f;
      sa[730] = 0.06969895f;
      sa[731] = -0.33493835f;
      sa[732] = 0.15956113f;
      sa[733] = 0.21263333f;
      sa[734] = -0.17637782f;
      sa[735] = 0.21668856f;
      sa[736] = 0.029714353f;
      sa[737] = 0.15512644f;
      sa[738] = -0.29445454f;
      sa[739] = -0.04297015f;
      sa[740] = -0.20464012f;
      sa[741] = -0.19874944f;
      sa[742] = 0.10491001f;
      sa[743] = -0.0019530172f;
      sa[744] = 0.016515581f;
      sa[745] = -0.2280167f;
      sa[746] = 0.05179557f;
      sa[747] = 0.025148252f;
      sa[748] = -0.06570702f;
      sa[749] = -0.08937523f;
      sa[750] = 0.23418322f;
      sa[751] = 0.26325002f;
      sa[752] = -0.1245582f;
      sa[753] = 0.1281046f;
      sa[754] = 0.07608485f;
      sa[755] = 0.26565814f;
      sa[756] = -0.15018055f;
      sa[757] = 0.23649558f;
      sa[758] = -0.20643607f;
      sa[759] = -0.10981985f;
      sa[760] = -0.09376239f;
      sa[761] = 0.049838092f;
      sa[762] = -0.08646025f;
      sa[763] = 0.099311225f;
      sa[764] = 0.12635432f;
      sa[765] = -0.13967608f;
      sa[766] = -0.25166515f;
      sa[767] = 0.08397033f;
      sa[768] = -0.15314195f;
      sa[769] = -0.25254935f;
      sa[770] = 0.023096606f;
      sa[771] = 0.060213655f;
      sa[772] = 0.069734685f;
      sa[773] = -0.23014857f;
      sa[774] = 0.099576116f;
      sa[775] = 0.26542354f;
      sa[776] = -0.055910252f;
      sa[777] = 0.04935779f;
      sa[778] = 0.12554082f;
      sa[779] = -0.11280433f;
      sa[780] = -0.050151773f;
      sa[781] = 0.010594817f;
      sa[782] = 0.1581492f;
      sa[783] = -0.21610028f;
      sa[784] = -0.11125295f;
      sa[785] = -0.10271428f;
      sa[786] = -0.07756619f;
      sa[787] = -0.20153445f;
      sa[788] = -0.29778263f;
      sa[789] = 0.106419176f;
      sa[790] = -0.07590012f;
      sa[791] = -0.018077888f;
      sa[792] = 0.09960378f;
      sa[793] = -0.11033787f;
      sa[794] = -0.10381312f;
      sa[795] = -0.2536228f;
      sa[796] = 0.1712343f;
      sa[797] = -0.27778703f;
      sa[798] = -0.32069623f;
      sa[799] = -0.21059279f;
      sa[800] = 0.09805365f;
      sa[801] = 0.17353678f;
      sa[802] = 0.27443388f;
      sa[803] = 0.13049164f;
      sa[804] = 0.1995127f;
      sa[805] = 0.2199571f;
      sa[806] = 0.25762624f;
      sa[807] = 0.20114213f;
      sa[808] = -0.027641349f;
      sa[809] = -0.13570471f;
      sa[810] = 0.18354204f;
      sa[811] = 0.15133208f;
      sa[812] = 0.15431423f;
      sa[813] = -0.31131315f;
      sa[814] = 0.072832376f;
      sa[815] = -0.08777614f;
      sa[816] = -0.07761809f;
      sa[817] = -0.16119789f;
      sa[818] = -1.4679275E-4f;
      sa[819] = -0.018757923f;
      sa[820] = -0.3174597f;
      sa[821] = -0.23979247f;
      sa[822] = -0.33506605f;
      sa[823] = 0.04624174f;
      sa[824] = 0.11228553f;
      sa[825] = 0.38127643f;
      sa[826] = -0.3086753f;
      sa[827] = -0.32617688f;
      sa[828] = 0.13857119f;
      sa[829] = -0.057222497f;
      sa[830] = 0.19608873f;
      sa[831] = -0.049972754f;
      sa[832] = 0.11549655f;
      sa[833] = 0.002390938f;
      sa[834] = 0.16290003f;
      sa[835] = -0.2344009f;
      sa[836] = 0.19317813f;
      sa[837] = -0.09458046f;
      sa[838] = 0.097249925f;
      sa[839] = -0.29604846f;
      sa[840] = 0.17722984f;
      sa[841] = 0.02372256f;
      sa[842] = 0.12957954f;
      sa[843] = -0.029631857f;
      sa[844] = -0.0021079956f;
      sa[845] = 0.14151211f;
      sa[846] = -0.2551582f;
      sa[847] = 0.08268747f;
      sa[848] = 0.26418406f;
      sa[849] = 0.29990077f;
      sa[850] = 0.01069601f;
      sa[851] = 0.09441551f;
      sa[852] = 0.183867f;
      sa[853] = 0.12660274f;
      sa[854] = 0.18321408f;
      sa[855] = 0.3750382f;
      sa[856] = 0.12722027f;
      sa[857] = -0.12790081f;
      sa[858] = 0.091103844f;
      sa[859] = 0.036205582f;
      sa[860] = 0.25646847f;
      sa[861] = -0.14108293f;
      sa[862] = -0.21105301f;
      sa[863] = 0.03725343f;
      sa[864] = -0.2836414f;
      sa[865] = 0.21863297f;
      sa[866] = -0.19321497f;
      sa[867] = 0.09949392f;
      sa[868] = -0.1817547f;
      sa[869] = 0.25241545f;
      sa[870] = -0.041052688f;
      sa[871] = 0.28694913f;
      sa[872] = 0.18319163f;
      sa[873] = -0.09760319f;
      sa[874] = 0.08252125f;
      sa[875] = -0.2408254f;
      sa[876] = -0.20076822f;
      sa[877] = -0.13921323f;
      sa[878] = 0.06696688f;
      sa[879] = 0.26987463f;
      sa[880] = -0.06280645f;
      sa[881] = -0.07730823f;
      sa[882] = 0.27597275f;
      sa[883] = 0.009530263f;
      sa[884] = -0.17501761f;
      sa[885] = -0.18852977f;
      sa[886] = 0.06779924f;
      sa[887] = -0.0070555643f;
      sa[888] = -0.05404085f;
      sa[889] = 0.08638761f;
      sa[890] = -0.18884127f;
      sa[891] = 0.1853484f;
      sa[892] = 0.13448134f;
      sa[893] = 0.23096234f;
      sa[894] = 0.056890804f;
      sa[895] = 0.26912305f;
      sa[896] = -0.17320809f;
      sa[897] = 0.17546147f;
      sa[898] = -0.017210517f;
      sa[899] = 0.22360617f;
      sa[900] = -0.11839523f;
      sa[901] = 0.14012009f;
      sa[902] = -0.20619993f;
      sa[903] = -0.061425272f;
      sa[904] = 0.22837706f;
      sa[905] = 0.23632585f;
      sa[906] = -0.22702134f;
      sa[907] = -0.15838209f;
      sa[908] = -0.24171303f;
      sa[909] = 0.07423689f;
      sa[910] = 0.06599711f;
      sa[911] = -0.14067735f;
      sa[912] = -0.023916053f;
      sa[913] = 0.07447047f;
      sa[914] = -0.2188124f;
      sa[915] = 0.016050292f;
      sa[916] = 0.23771961f;
      sa[917] = 0.026739847f;
      sa[918] = 0.0657157f;
      sa[919] = 0.04926869f;
      sa[920] = 0.13061497f;
      sa[921] = -0.055411022f;
      sa[922] = -0.11615459f;
      sa[923] = -0.15792568f;
      sa[924] = -0.059353847f;
      sa[925] = -0.20647493f;
      sa[926] = 0.110767595f;
      sa[927] = -0.027871508f;
      sa[928] = 0.24724804f;
      sa[929] = 0.1692344f;
      sa[930] = 0.20091486f;
      sa[931] = 0.017204922f;
      sa[932] = 0.21122177f;
      sa[933] = -0.02364748f;
      sa[934] = 0.297582f;
      sa[935] = -0.20662317f;
      sa[936] = 0.05446453f;
      sa[937] = 0.16003582f;
      sa[938] = -0.23939675f;
      sa[939] = 0.096758135f;
      sa[940] = -0.08038082f;
      sa[941] = -0.29231086f;
      sa[942] = -0.25786805f;
      sa[943] = -0.15514565f;
      sa[944] = -0.20457016f;
      sa[945] = -0.06781649f;
      sa[946] = 0.016345318f;
      sa[947] = 0.21011429f;
      sa[948] = 0.0944549f;
      sa[949] = -0.1437158f;
      sa[950] = 0.105938844f;
      sa[951] = -0.036446873f;
      sa[952] = -0.19066887f;
      sa[953] = -0.19068854f;
      sa[954] = -0.12814566f;
      sa[955] = -0.056434896f;
      sa[956] = -0.06603324f;
      sa[957] = -0.029696682f;
      sa[958] = 0.035215944f;
      sa[959] = -0.1511967f;
      sa[960] = 0.29070345f;
      sa[961] = -0.079706796f;
      sa[962] = 0.034590743f;
      sa[963] = -0.20595703f;
      sa[964] = -0.19072045f;
      sa[965] = 0.21640004f;
      sa[966] = -0.09033544f;
      sa[967] = -0.24266315f;
      sa[968] = 0.10301215f;
      sa[969] = -0.075424865f;
      sa[970] = 0.3572183f;
      sa[971] = 0.11439321f;
      sa[972] = -0.100327596f;
      sa[973] = -0.22101746f;
      sa[974] = -0.35462412f;
      sa[975] = -0.28370202f;
      sa[976] = -0.039117634f;
      sa[977] = 0.03154775f;
      sa[978] = -0.044763006f;
      sa[979] = 0.022356298f;
      sa[980] = 0.13456796f;
      sa[981] = -0.22618094f;
      sa[982] = 0.059964735f;
      sa[983] = -0.09974265f;
      sa[984] = -0.28682098f;
      sa[985] = 0.015547407f;
      sa[986] = -0.2914031f;
      sa[987] = -0.0471988f;
      sa[988] = 0.07055803f;
      sa[989] = 0.1523656f;
      sa[990] = 0.13897607f;
      sa[991] = -0.05489069f;
      sa[992] = -0.14929281f;
      sa[993] = 0.03281282f;
      sa[994] = -0.11458003f;
      sa[995] = -0.32669264f;
      sa[996] = 0.119554155f;
      sa[997] = 0.06086806f;
      sa[998] = 0.04190303f;
      sa[999] = 0.40031123f;
      sa[1000] = 0.06413331f;
      sa[1001] = 0.28319642f;
      sa[1002] = 0.25995097f;
      sa[1003] = -0.11661945f;
      sa[1004] = 0.16396879f;
      sa[1005] = -0.19552384f;
      sa[1006] = -0.09287588f;
      sa[1007] = 0.03039542f;
      sa[1008] = 0.13647282f;
      sa[1009] = 0.08825744f;
      sa[1010] = 0.14180265f;
      sa[1011] = 0.06341913f;
      sa[1012] = -0.10914425f;
      sa[1013] = 0.06993238f;
      sa[1014] = 0.25190008f;
      sa[1015] = -0.4414075f;
      sa[1016] = 0.2073468f;
      sa[1017] = 0.20321071f;
      sa[1018] = -0.061652083f;
      sa[1019] = 0.096644625f;
      sa[1020] = -0.24163826f;
      sa[1021] = 0.007239181f;
      sa[1022] = 0.22508895f;
      sa[1023] = 0.06395925f;
      sa[1024] = 0.002057096f;
      sa[1025] = 0.2017295f;
      sa[1026] = 0.15268482f;
      sa[1027] = 0.27940184f;
      sa[1028] = 0.3196506f;
      sa[1029] = -0.010008641f;
      sa[1030] = -0.15061502f;
      sa[1031] = 0.056443296f;
      sa[1032] = -0.20354518f;
      sa[1033] = 0.038294483f;
      sa[1034] = -0.0922295f;
      sa[1035] = -0.16040975f;
      sa[1036] = 0.2578432f;
      sa[1037] = -0.0018125963f;
      sa[1038] = -0.27274063f;
      sa[1039] = 0.24007468f;
      sa[1040] = -0.044929303f;
      sa[1041] = 0.2098596f;
      sa[1042] = -0.3149625f;
      sa[1043] = -0.028131915f;
      sa[1044] = 0.28593522f;
      sa[1045] = 0.22943945f;
      sa[1046] = -0.08663188f;
      sa[1047] = -0.06823972f;
      sa[1048] = 0.20539331f;
      sa[1049] = -0.047666572f;
      sa[1050] = 0.12119039f;
      sa[1051] = -0.19132791f;
      sa[1052] = 0.20378421f;
      sa[1053] = 0.16136695f;
      sa[1054] = 0.19543658f;
      sa[1055] = 0.0028679525f;
      sa[1056] = 0.22721763f;
      sa[1057] = -0.17237726f;
      sa[1058] = 0.21169528f;
      sa[1059] = -0.22918044f;
      sa[1060] = -0.25767848f;
      sa[1061] = -0.032351956f;
      sa[1062] = -0.15500878f;
      sa[1063] = 0.0988507f;
      sa[1064] = 0.08083403f;
      sa[1065] = -0.0064704856f;
      sa[1066] = 0.21405166f;
      sa[1067] = -0.43262637f;
      sa[1068] = -0.27199012f;
      sa[1069] = 0.18769503f;
      sa[1070] = 0.035884913f;
      sa[1071] = 0.25201786f;
      sa[1072] = -0.2525046f;
      sa[1073] = 0.11640387f;
      sa[1074] = 0.14182754f;
      sa[1075] = -0.19240542f;
      sa[1076] = -0.0957735f;
      sa[1077] = 0.13687105f;
      sa[1078] = -0.061245672f;
      sa[1079] = -0.081062615f;
      sa[1080] = 0.2751264f;
      sa[1081] = 0.17479949f;
      sa[1082] = -0.43857858f;
      sa[1083] = -0.18801342f;
      sa[1084] = 0.27383795f;
      sa[1085] = -0.20947829f;
      sa[1086] = -0.26524293f;
      sa[1087] = -0.34656692f;
      sa[1088] = -0.098378606f;
      sa[1089] = 0.0958535f;
      sa[1090] = -0.2290986f;
      sa[1091] = 0.108557224f;
      sa[1092] = -0.19989282f;
      sa[1093] = -0.27606297f;
      sa[1094] = -0.019425659f;
      sa[1095] = -0.23282088f;
      sa[1096] = -0.074689195f;
      sa[1097] = -0.08346501f;
      sa[1098] = 0.09361258f;
      sa[1099] = 0.07880079f;
      sa[1100] = -0.059739724f;
      sa[1101] = 0.1983719f;
      sa[1102] = -0.15212053f;
      sa[1103] = 0.22205456f;
      sa[1104] = -0.42469057f;
      sa[1105] = -0.07868711f;
      sa[1106] = -0.057697013f;
      sa[1107] = 0.27854446f;
      sa[1108] = -0.08346097f;
      sa[1109] = 0.34555674f;
      sa[1110] = 0.21899258f;
      sa[1111] = -0.21510883f;
      sa[1112] = 0.103933305f;
      sa[1113] = 0.1933593f;
      sa[1114] = 0.098955415f;
      sa[1115] = 0.2812944f;
      sa[1116] = 0.033209052f;
      sa[1117] = -0.14773378f;
      sa[1118] = -0.067181274f;
      sa[1119] = -0.07658269f;
      sa[1120] = 0.23206276f;
      sa[1121] = 0.13856286f;
      sa[1122] = 0.4012191f;
      sa[1123] = 0.1812107f;
      sa[1124] = 0.12542643f;
      sa[1125] = -0.13100971f;
      sa[1126] = 0.16433759f;
      sa[1127] = 0.3096989f;
      sa[1128] = 0.03184767f;
      sa[1129] = -0.05508003f;
      sa[1130] = 0.31074968f;
      sa[1131] = 0.3277671f;
      sa[1132] = -0.10787463f;
      sa[1133] = -0.16108598f;
      sa[1134] = -0.064715974f;
      sa[1135] = -0.24923873f;
      sa[1136] = -0.019418962f;
      sa[1137] = 0.19924755f;
      sa[1138] = -0.028054504f;
      sa[1139] = 0.1627483f;
      sa[1140] = 0.25639084f;
      sa[1141] = -0.26692954f;
      sa[1142] = -0.06977229f;
      sa[1143] = -0.08297133f;
      sa[1144] = -0.2447028f;
      sa[1145] = 0.16368787f;
      sa[1146] = 0.25084028f;
      sa[1147] = -0.04727576f;
      sa[1148] = -0.00930928f;
      sa[1149] = 0.028461386f;
      sa[1150] = -0.3752573f;
      sa[1151] = -0.4100799f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2414259f;
      sa[1] = -0.007808792f;
      sa[2] = -0.6373957f;
      sa[3] = -1.3369232f;
      sa[4] = 0.051252525f;
      sa[5] = 0.22458443f;
      sa[6] = 1.1856432f;
      sa[7] = -0.63125646f;
      sa[8] = -0.89421886f;
      sa[9] = 0.8182123f;
      sa[10] = -0.054213446f;
      sa[11] = 0.45050713f;
      sa[12] = 0.24157633f;
      sa[13] = -0.060153678f;
      sa[14] = -1.2574804f;
      sa[15] = 1.2173833f;
      sa[16] = 1.6787515f;
      sa[17] = -0.42820337f;
      sa[18] = 0.069435f;
      sa[19] = -0.5018295f;
      sa[20] = 0.97312313f;
      sa[21] = 0.09867488f;
      sa[22] = -0.88028884f;
      sa[23] = 0.7778962f;
      sa[24] = -1.0838934f;
      sa[25] = 0.49042565f;
      sa[26] = -0.27938175f;
      sa[27] = 1.5876429f;
      sa[28] = -1.2283037f;
      sa[29] = -0.21244586f;
      sa[30] = 0.74458516f;
      sa[31] = -0.6506278f;
      sa[32] = -1.1348705f;
      sa[33] = -1.5642464f;
      sa[34] = 0.08134273f;
      sa[35] = 1.1489637f;
      sa[36] = -0.3872269f;
      sa[37] = -0.13571012f;
      sa[38] = 0.14913315f;
      sa[39] = 0.7289794f;
      sa[40] = -0.7632562f;
      sa[41] = -1.3564909f;
      sa[42] = -1.026968f;
      sa[43] = -1.502275f;
      sa[44] = 0.14870946f;
      sa[45] = -1.307319f;
      sa[46] = 1.2568451f;
      sa[47] = 1.2918572f;
      sa[48] = -1.3269198f;
      sa[49] = -1.1322603f;
      sa[50] = 0.47342125f;
      sa[51] = -0.2027232f;
      sa[52] = 0.8107722f;
      sa[53] = 0.90804505f;
      sa[54] = -0.18045244f;
      sa[55] = 1.095607f;
      sa[56] = -0.9532335f;
      sa[57] = -1.1164255f;
      sa[58] = 0.08015323f;
      sa[59] = -0.20230685f;
      sa[60] = 1.4833639f;
      sa[61] = -0.5197614f;
      sa[62] = -0.26190507f;
      sa[63] = 0.6224311f;
      sa[64] = 1.42013f;
      sa[65] = -0.6442171f;
      sa[66] = 0.6463461f;
      sa[67] = 1.5738356f;
      sa[68] = 0.67720896f;
      sa[69] = -1.0293696f;
      sa[70] = -1.4324393f;
      sa[71] = -0.3980527f;
      sa[72] = -1.3320829f;
      sa[73] = 1.2558506f;
      sa[74] = 1.4177618f;
      sa[75] = -0.19680211f;
      sa[76] = 0.8149893f;
      sa[77] = 0.46947566f;
      sa[78] = -1.3802502f;
      sa[79] = 0.945874f;
      sa[80] = -0.809864f;
      sa[81] = 0.27529165f;
      sa[82] = 0.88283247f;
      sa[83] = -0.64655787f;
      sa[84] = -1.5569792f;
      sa[85] = -1.2101856f;
      sa[86] = 0.34260225f;
      sa[87] = 1.1575068f;
      sa[88] = -1.5454636f;
      sa[89] = -0.5557907f;
      sa[90] = -0.9856794f;
      sa[91] = 1.4779407f;
      sa[92] = -0.31444603f;
      sa[93] = 0.27252436f;
      sa[94] = -1.484442f;
      sa[95] = -0.19833863f;
      sa[96] = -1.0189791f;
      sa[97] = 0.19971837f;
      sa[98] = -0.104944475f;
      sa[99] = 0.38563597f;
      sa[100] = -1.2558882f;
      sa[101] = -0.42078668f;
      sa[102] = 1.2654278f;
      sa[103] = 0.12574318f;
      sa[104] = -0.28118622f;
      sa[105] = -0.60598147f;
      sa[106] = 1.4005553f;
      sa[107] = 1.2332264f;
      sa[108] = 0.84382546f;
      sa[109] = 0.23861593f;
      sa[110] = 0.74209136f;
      sa[111] = -0.7897972f;
      sa[112] = -1.1148331f;
      sa[113] = 0.27455384f;
      sa[114] = 0.08547651f;
      sa[115] = -0.40433452f;
      sa[116] = 1.1245639f;
      sa[117] = 0.06921446f;
      sa[118] = -1.3753577f;
      sa[119] = -0.732015f;
      sa[120] = -0.3474993f;
      sa[121] = 1.0249166f;
      sa[122] = -0.04294568f;
      sa[123] = 0.29435748f;
      sa[124] = -0.7502502f;
      sa[125] = 0.6975952f;
      sa[126] = -1.0180392f;
      sa[127] = 0.44496566f;
      sa[128] = -0.97222227f;
      sa[129] = 0.8682171f;
      sa[130] = -0.30781877f;
      sa[131] = 1.1745816f;
      sa[132] = 0.5892749f;
      sa[133] = 0.78072953f;
      sa[134] = 0.83762866f;
      sa[135] = -1.0867914f;
      sa[136] = 0.5684332f;
      sa[137] = -0.6734956f;
      sa[138] = -0.042260356f;
      sa[139] = 1.2888528f;
      sa[140] = -1.2007736f;
      sa[141] = 0.021210074f;
      sa[142] = 0.2239285f;
      sa[143] = -0.86319935f;
      sa[144] = 0.9422698f;
      sa[145] = -0.7429499f;
      sa[146] = 0.17398326f;
      sa[147] = -0.21923783f;
      sa[148] = -0.76273304f;
      sa[149] = 1.034456f;
      sa[150] = -1.116599f;
      sa[151] = -1.5849464f;
      sa[152] = 1.5197817f;
      sa[153] = -0.46892136f;
      sa[154] = 1.3466078f;
      sa[155] = -1.4291052f;
      sa[156] = -1.4375333f;
      sa[157] = -1.1626602f;
      sa[158] = -0.27155435f;
      sa[159] = -0.6112465f;
      sa[160] = 1.3435208f;
      sa[161] = -1.2359091f;
      sa[162] = 1.606817f;
      sa[163] = -0.7259577f;
      sa[164] = 0.7555791f;
      sa[165] = -0.5308265f;
      sa[166] = 1.3059998f;
      sa[167] = -1.4079833f;
      sa[168] = 1.0512033f;
      sa[169] = -1.5750104f;
      sa[170] = 1.0972837f;
      sa[171] = 0.7980948f;
      sa[172] = 1.5149739f;
      sa[173] = 1.5471252f;
      sa[174] = -0.084540635f;
      sa[175] = 0.064165115f;
      sa[176] = -0.8576194f;
      sa[177] = 0.08392447f;
      sa[178] = -1.082598f;
      sa[179] = -0.13041191f;
      sa[180] = -1.3016729f;
      sa[181] = -1.0182234f;
      sa[182] = 0.32491174f;
      sa[183] = -0.99949807f;
      sa[184] = 1.4103475f;
      sa[185] = 1.2658967f;
      sa[186] = -0.47668755f;
      sa[187] = -0.83840895f;
      sa[188] = -0.56029624f;
      sa[189] = -0.7623272f;
      sa[190] = -1.4959834f;
      sa[191] = -1.0504761f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


