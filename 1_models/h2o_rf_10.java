/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:48:43.818+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_10 > h2o_rf_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_10", algorithm="drf")
public class h2o_rf_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};

  public h2o_rf_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-671699116391239924L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_10_Forest_0.score0(data,preds);
    h2o_rf_10_Forest_1.score0(data,preds);
    h2o_rf_10_Forest_2.score0(data,preds);
    h2o_rf_10_Forest_3.score0(data,preds);
    h2o_rf_10_Forest_4.score0(data,preds);
    h2o_rf_10_Forest_5.score0(data,preds);
    h2o_rf_10_Forest_6.score0(data,preds);
    h2o_rf_10_Forest_7.score0(data,preds);
    h2o_rf_10_Forest_8.score0(data,preds);
    h2o_rf_10_Forest_9.score0(data,preds);
    h2o_rf_10_Forest_10.score0(data,preds);
    h2o_rf_10_Forest_11.score0(data,preds);
    h2o_rf_10_Forest_12.score0(data,preds);
    h2o_rf_10_Forest_13.score0(data,preds);
    h2o_rf_10_Forest_14.score0(data,preds);
    h2o_rf_10_Forest_15.score0(data,preds);
    h2o_rf_10_Forest_16.score0(data,preds);
    h2o_rf_10_Forest_17.score0(data,preds);
    h2o_rf_10_Forest_18.score0(data,preds);
    h2o_rf_10_Forest_19.score0(data,preds);
    h2o_rf_10_Forest_20.score0(data,preds);
    h2o_rf_10_Forest_21.score0(data,preds);
    h2o_rf_10_Forest_22.score0(data,preds);
    h2o_rf_10_Forest_23.score0(data,preds);
    h2o_rf_10_Forest_24.score0(data,preds);
    h2o_rf_10_Forest_25.score0(data,preds);
    h2o_rf_10_Forest_26.score0(data,preds);
    h2o_rf_10_Forest_27.score0(data,preds);
    h2o_rf_10_Forest_28.score0(data,preds);
    h2o_rf_10_Forest_29.score0(data,preds);
    h2o_rf_10_Forest_30.score0(data,preds);
    h2o_rf_10_Forest_31.score0(data,preds);
    h2o_rf_10_Forest_32.score0(data,preds);
    h2o_rf_10_Forest_33.score0(data,preds);
    h2o_rf_10_Forest_34.score0(data,preds);
    h2o_rf_10_Forest_35.score0(data,preds);
    h2o_rf_10_Forest_36.score0(data,preds);
    h2o_rf_10_Forest_37.score0(data,preds);
    h2o_rf_10_Forest_38.score0(data,preds);
    h2o_rf_10_Forest_39.score0(data,preds);
    h2o_rf_10_Forest_40.score0(data,preds);
    h2o_rf_10_Forest_41.score0(data,preds);
    h2o_rf_10_Forest_42.score0(data,preds);
    h2o_rf_10_Forest_43.score0(data,preds);
    h2o_rf_10_Forest_44.score0(data,preds);
    h2o_rf_10_Forest_45.score0(data,preds);
    h2o_rf_10_Forest_46.score0(data,preds);
    h2o_rf_10_Forest_47.score0(data,preds);
    h2o_rf_10_Forest_48.score0(data,preds);
    h2o_rf_10_Forest_49.score0(data,preds);
    h2o_rf_10_Forest_50.score0(data,preds);
    h2o_rf_10_Forest_51.score0(data,preds);
    h2o_rf_10_Forest_52.score0(data,preds);
    h2o_rf_10_Forest_53.score0(data,preds);
    h2o_rf_10_Forest_54.score0(data,preds);
    h2o_rf_10_Forest_55.score0(data,preds);
    h2o_rf_10_Forest_56.score0(data,preds);
    h2o_rf_10_Forest_57.score0(data,preds);
    h2o_rf_10_Forest_58.score0(data,preds);
    h2o_rf_10_Forest_59.score0(data,preds);
    h2o_rf_10_Forest_60.score0(data,preds);
    h2o_rf_10_Forest_61.score0(data,preds);
    h2o_rf_10_Forest_62.score0(data,preds);
    h2o_rf_10_Forest_63.score0(data,preds);
    h2o_rf_10_Forest_64.score0(data,preds);
    h2o_rf_10_Forest_65.score0(data,preds);
    h2o_rf_10_Forest_66.score0(data,preds);
    h2o_rf_10_Forest_67.score0(data,preds);
    h2o_rf_10_Forest_68.score0(data,preds);
    h2o_rf_10_Forest_69.score0(data,preds);
    h2o_rf_10_Forest_70.score0(data,preds);
    h2o_rf_10_Forest_71.score0(data,preds);
    h2o_rf_10_Forest_72.score0(data,preds);
    h2o_rf_10_Forest_73.score0(data,preds);
    h2o_rf_10_Forest_74.score0(data,preds);
    h2o_rf_10_Forest_75.score0(data,preds);
    h2o_rf_10_Forest_76.score0(data,preds);
    h2o_rf_10_Forest_77.score0(data,preds);
    h2o_rf_10_Forest_78.score0(data,preds);
    h2o_rf_10_Forest_79.score0(data,preds);
    h2o_rf_10_Forest_80.score0(data,preds);
    h2o_rf_10_Forest_81.score0(data,preds);
    h2o_rf_10_Forest_82.score0(data,preds);
    h2o_rf_10_Forest_83.score0(data,preds);
    h2o_rf_10_Forest_84.score0(data,preds);
    h2o_rf_10_Forest_85.score0(data,preds);
    h2o_rf_10_Forest_86.score0(data,preds);
    h2o_rf_10_Forest_87.score0(data,preds);
    h2o_rf_10_Forest_88.score0(data,preds);
    h2o_rf_10_Forest_89.score0(data,preds);
    h2o_rf_10_Forest_90.score0(data,preds);
    h2o_rf_10_Forest_91.score0(data,preds);
    h2o_rf_10_Forest_92.score0(data,preds);
    h2o_rf_10_Forest_93.score0(data,preds);
    h2o_rf_10_Forest_94.score0(data,preds);
    h2o_rf_10_Forest_95.score0(data,preds);
    h2o_rf_10_Forest_96.score0(data,preds);
    h2o_rf_10_Forest_97.score0(data,preds);
    h2o_rf_10_Forest_98.score0(data,preds);
    h2o_rf_10_Forest_99.score0(data,preds);
    h2o_rf_10_Forest_100.score0(data,preds);
    h2o_rf_10_Forest_101.score0(data,preds);
    h2o_rf_10_Forest_102.score0(data,preds);
    h2o_rf_10_Forest_103.score0(data,preds);
    h2o_rf_10_Forest_104.score0(data,preds);
    h2o_rf_10_Forest_105.score0(data,preds);
    h2o_rf_10_Forest_106.score0(data,preds);
    h2o_rf_10_Forest_107.score0(data,preds);
    h2o_rf_10_Forest_108.score0(data,preds);
    h2o_rf_10_Forest_109.score0(data,preds);
    h2o_rf_10_Forest_110.score0(data,preds);
    h2o_rf_10_Forest_111.score0(data,preds);
    h2o_rf_10_Forest_112.score0(data,preds);
    h2o_rf_10_Forest_113.score0(data,preds);
    h2o_rf_10_Forest_114.score0(data,preds);
    h2o_rf_10_Forest_115.score0(data,preds);
    h2o_rf_10_Forest_116.score0(data,preds);
    h2o_rf_10_Forest_117.score0(data,preds);
    h2o_rf_10_Forest_118.score0(data,preds);
    h2o_rf_10_Forest_119.score0(data,preds);
    h2o_rf_10_Forest_120.score0(data,preds);
    h2o_rf_10_Forest_121.score0(data,preds);
    h2o_rf_10_Forest_122.score0(data,preds);
    h2o_rf_10_Forest_123.score0(data,preds);
    h2o_rf_10_Forest_124.score0(data,preds);
    h2o_rf_10_Forest_125.score0(data,preds);
    h2o_rf_10_Forest_126.score0(data,preds);
    h2o_rf_10_Forest_127.score0(data,preds);
    h2o_rf_10_Forest_128.score0(data,preds);
    h2o_rf_10_Forest_129.score0(data,preds);
    h2o_rf_10_Forest_130.score0(data,preds);
    h2o_rf_10_Forest_131.score0(data,preds);
    h2o_rf_10_Forest_132.score0(data,preds);
    h2o_rf_10_Forest_133.score0(data,preds);
    h2o_rf_10_Forest_134.score0(data,preds);
    h2o_rf_10_Forest_135.score0(data,preds);
    h2o_rf_10_Forest_136.score0(data,preds);
    h2o_rf_10_Forest_137.score0(data,preds);
    h2o_rf_10_Forest_138.score0(data,preds);
    h2o_rf_10_Forest_139.score0(data,preds);
    h2o_rf_10_Forest_140.score0(data,preds);
    h2o_rf_10_Forest_141.score0(data,preds);
    h2o_rf_10_Forest_142.score0(data,preds);
    h2o_rf_10_Forest_143.score0(data,preds);
    h2o_rf_10_Forest_144.score0(data,preds);
    h2o_rf_10_Forest_145.score0(data,preds);
    h2o_rf_10_Forest_146.score0(data,preds);
    h2o_rf_10_Forest_147.score0(data,preds);
    h2o_rf_10_Forest_148.score0(data,preds);
    h2o_rf_10_Forest_149.score0(data,preds);
    h2o_rf_10_Forest_150.score0(data,preds);
    h2o_rf_10_Forest_151.score0(data,preds);
    h2o_rf_10_Forest_152.score0(data,preds);
    h2o_rf_10_Forest_153.score0(data,preds);
    h2o_rf_10_Forest_154.score0(data,preds);
    h2o_rf_10_Forest_155.score0(data,preds);
    h2o_rf_10_Forest_156.score0(data,preds);
    h2o_rf_10_Forest_157.score0(data,preds);
    h2o_rf_10_Forest_158.score0(data,preds);
    h2o_rf_10_Forest_159.score0(data,preds);
    h2o_rf_10_Forest_160.score0(data,preds);
    h2o_rf_10_Forest_161.score0(data,preds);
    h2o_rf_10_Forest_162.score0(data,preds);
    h2o_rf_10_Forest_163.score0(data,preds);
    h2o_rf_10_Forest_164.score0(data,preds);
    h2o_rf_10_Forest_165.score0(data,preds);
    h2o_rf_10_Forest_166.score0(data,preds);
    h2o_rf_10_Forest_167.score0(data,preds);
    h2o_rf_10_Forest_168.score0(data,preds);
    h2o_rf_10_Forest_169.score0(data,preds);
    h2o_rf_10_Forest_170.score0(data,preds);
    h2o_rf_10_Forest_171.score0(data,preds);
    h2o_rf_10_Forest_172.score0(data,preds);
    h2o_rf_10_Forest_173.score0(data,preds);
    h2o_rf_10_Forest_174.score0(data,preds);
    h2o_rf_10_Forest_175.score0(data,preds);
    h2o_rf_10_Forest_176.score0(data,preds);
    h2o_rf_10_Forest_177.score0(data,preds);
    h2o_rf_10_Forest_178.score0(data,preds);
    h2o_rf_10_Forest_179.score0(data,preds);
    h2o_rf_10_Forest_180.score0(data,preds);
    h2o_rf_10_Forest_181.score0(data,preds);
    h2o_rf_10_Forest_182.score0(data,preds);
    h2o_rf_10_Forest_183.score0(data,preds);
    h2o_rf_10_Forest_184.score0(data,preds);
    h2o_rf_10_Forest_185.score0(data,preds);
    h2o_rf_10_Forest_186.score0(data,preds);
    h2o_rf_10_Forest_187.score0(data,preds);
    h2o_rf_10_Forest_188.score0(data,preds);
    h2o_rf_10_Forest_189.score0(data,preds);
    h2o_rf_10_Forest_190.score0(data,preds);
    h2o_rf_10_Forest_191.score0(data,preds);
    h2o_rf_10_Forest_192.score0(data,preds);
    h2o_rf_10_Forest_193.score0(data,preds);
    h2o_rf_10_Forest_194.score0(data,preds);
    h2o_rf_10_Forest_195.score0(data,preds);
    h2o_rf_10_Forest_196.score0(data,preds);
    h2o_rf_10_Forest_197.score0(data,preds);
    h2o_rf_10_Forest_198.score0(data,preds);
    h2o_rf_10_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_10_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.5145676f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030207194f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.10417017f ? 
             (data[35 /* X36 */] <-0.12109375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22795375f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3511791f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.16270241f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25152335f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26987177f ? 
                         (data[34 /* X35 */] <-0.17542422f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[14 /* X15 */] <0.13674f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12042886f ? 
                     (data[17 /* X18 */] <-0.42691177f ? 
                        1.0f : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.3739332f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7713109f ? 
                     (data[11 /* X12 */] <-0.55447763f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.65625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
             (data[32 /* X33 */] <-0.703125f ? 
                 (data[17 /* X18 */] <-0.1946717f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.9099084f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.42198738f ? 
                         (data[14 /* X15 */] <0.15296416f ? 
                            0.0f : 
                            1.0f) : 
                         (data[19 /* X20 */] <-0.40379274f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1363177f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.32143f ? 
                                    1.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13498834f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.041875478f ? 
                 (data[5 /* X6 */] <0.12370462f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.2447758f ? 
                        1.0f : 
                         (data[34 /* X35 */] <0.007814844f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.16767962f ? 
                                 (data[10 /* X11 */] <-0.13262956f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[34 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f))) : 
        0.85714287f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[21 /* X22 */] <0.12546301f ? 
             (data[35 /* X36 */] <-0.609375f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29583836f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.27064374f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.084819935f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1434435f ? 
                 (data[13 /* X14 */] <0.11521404f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41570345f ? 
             (data[22 /* X23 */] <0.0959178f ? 
                 (data[0 /* X1 */] <0.28669596f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.40447304f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11475826f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2f ? 
                                0.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18644276f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05389794f ? 
                                 (data[10 /* X11 */] <-0.562453f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[27 /* X28 */] <0.07066753f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[30 /* X31 */] <0.29376653f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <0.09699093f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35882685f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (data[27 /* X28 */] <-0.28369224f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30316007f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47813845f ? 
                     (data[28 /* X29 */] <0.16115525f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.5281361f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.46914294f ? 
                        0.0f : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.048731275f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2421875f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20361717f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49645233f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.19260158f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[27 /* X28 */] <-0.18052445f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.050271243f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25436282f ? 
                 (data[32 /* X33 */] <-0.031252578f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28233847f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.110954955f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.10524271f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
        0.023622047f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
             (data[31 /* X32 */] <0.1113732f ? 
                 (data[6 /* X7 */] <0.13815744f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.46915752f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34025806f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.115168996f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[9 /* X10 */] <0.0060890433f ? 
                 (data[4 /* X5 */] <0.16377747f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[16 /* X17 */] <-0.7757129f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.24473973f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15861091f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4659125f ? 
                        1.0f : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.09296354f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.09998539f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.076736726f ? 
                        1.0f : 
                        0.0f) : 
                     (data[26 /* X27 */] <-0.1819195f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.3036298f ? 
                             (data[29 /* X30 */] <0.31366506f ? 
                                0.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32136124f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))) : 
         (data[31 /* X32 */] <0.09942266f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21281625f ? 
                 (data[34 /* X35 */] <-0.5113625f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16010766f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.083545834f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.053719774f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X13 */] <0.16816533f ? 
                 (data[3 /* X4 */] <-0.70942736f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21009502f ? 
             (data[9 /* X10 */] <-0.9104007f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33320725f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21153593f ? 
                         (data[26 /* X27 */] <0.0043245424f ? 
                             (data[34 /* X35 */] <-0.022725f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2305138f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.26313296f ? 
                             (data[31 /* X32 */] <0.06544158f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25338033f ? 
                                     (data[1 /* X2 */] <-0.19684538f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[23 /* X24 */] <0.081643626f ? 
                                 (data[33 /* X34 */] <0.27499732f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.32768464f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22605069f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43781886f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.14878356f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[35 /* X36 */] <-0.8808594f ? 
             (data[25 /* X26 */] <-0.29144073f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16214381f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6386017f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4140625f ? 
                     (data[10 /* X11 */] <-0.45404637f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.073619865f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.11797508f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06960903f ? 
                         (data[12 /* X13 */] <0.12812975f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26769614f ? 
             (data[9 /* X10 */] <-0.2736815f ? 
                 (data[33 /* X34 */] <-0.921875f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.09817803f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.5886173f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.008888912f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.048087537f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[0 /* X1 */] <-0.21158263f ? 
                     (data[30 /* X31 */] <0.1807088f ? 
                         (data[6 /* X7 */] <0.19034842f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.1763416f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.38856858f ? 
                     (data[9 /* X10 */] <0.17009246f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.13068634f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.14566603f ? 
                         (data[7 /* X8 */] <0.105204225f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[19 /* X20 */] <-0.19920702f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (data[35 /* X36 */] <-0.0703125f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.37890625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.119958825f ? 
             (data[15 /* X16 */] <0.05951106f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25731158f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.16359752f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2521336f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17607144f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48717812f ? 
                         (data[12 /* X13 */] <0.18360941f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22333954f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2998656f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.221426f ? 
                                     (data[23 /* X24 */] <0.105544865f ? 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3578045f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[2 /* X3 */] <-0.2939779f ? 
                            1.0f : 
                             (data[24 /* X25 */] <0.09466083f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.290787f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (data[30 /* X31 */] <0.10258714f ? 
                 (data[20 /* X21 */] <0.14950967f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5545605f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.15692633f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23231046f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6425781f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44829598f ? 
                 (data[10 /* X11 */] <-0.8154017f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.15498917f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X5 */] <0.12884371f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <0.6059318f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4698209f ? 
            0.0f : 
             (data[33 /* X34 */] <0.1796875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
             (data[24 /* X25 */] <-0.47939196f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13866445f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08976546f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22493659f ? 
                             (data[19 /* X20 */] <-0.40991202f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[12 /* X13 */] <0.15453818f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X1 */] <-0.17934108f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.17878252f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.375f ? 
                 (data[1 /* X2 */] <-0.30316874f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21568671f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <9.989506E-4f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10266678f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.37887663f ? 
                 (data[3 /* X4 */] <-0.04800438f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.088929094f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12663443f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.23738718f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[35 /* X36 */] <-0.78125f ? 
                     (data[23 /* X24 */] <0.063911766f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.43278065f ? 
                         (data[15 /* X16 */] <0.13034965f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0023558207f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08647709f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13794856f ? 
             (data[15 /* X16 */] <0.06875088f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3515625f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.109568745f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25003216f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.20289741f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1802068f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.5472083f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0808728f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11373139f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23943104f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.23491931f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.189387f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3121563f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.230954f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[2 /* X3 */] <0.16585028f ? 
                                 (data[19 /* X20 */] <-1.1398842f ? 
                                    1.0f : 
                                     (data[8 /* X9 */] <0.0066602444f ? 
                                        0.0f : 
                                         (data[25 /* X26 */] <0.09023041f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f)) : 
                         (data[21 /* X22 */] <0.16516903f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.4258155f ? 
             (data[24 /* X25 */] <-0.25954422f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.122692525f ? 
            0.0f : 
             (data[15 /* X16 */] <0.07491075f ? 
                 (data[35 /* X36 */] <0.171875f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15791439f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47926503f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.41335833f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17767222f ? 
                             (data[27 /* X28 */] <-0.3775427f ? 
                                 (data[11 /* X12 */] <0.9822632f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.48026377f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (data[34 /* X35 */] <-0.9022725f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.17642578f ? 
                                    0.0f : 
                                     (data[16 /* X17 */] <-0.3151584f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22067174f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4234083f ? 
                 (data[26 /* X27 */] <-0.036219157f ? 
                     (data[14 /* X15 */] <0.08806751f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.13733321f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20475909f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24478944f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0012494704f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21597695f ? 
                    0.0f : 
                    1.0f)) : 
             (data[25 /* X26 */] <0.4053237f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13033292f ? 
             (data[15 /* X16 */] <0.24171732f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17687358f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2644531f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11460531f ? 
                     (data[28 /* X29 */] <0.12554179f ? 
                         (data[23 /* X24 */] <0.07045645f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31045157f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15553536f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22654778f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28622612f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2922283f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32024777f ? 
                         (data[30 /* X31 */] <0.13210012f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2588106f ? 
                    0.0f : 
                    1.0f)) : 
             (data[18 /* X19 */] <0.3960393f ? 
                 (data[30 /* X31 */] <0.17634822f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16583936f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.375f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.0341559f ? 
                     (data[8 /* X9 */] <0.29753232f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (data[3 /* X4 */] <-0.5128691f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.10951574f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12180388f ? 
                     (data[21 /* X22 */] <0.06533675f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.105008416f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.26688516f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.28032976f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14662915f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.22f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23454449f ? 
             (data[19 /* X20 */] <-0.90409887f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.10466462f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2169423f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.39662504f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.5800772f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5064326f ? 
                 (data[6 /* X7 */] <0.084279664f ? 
                     (data[31 /* X32 */] <0.09578554f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4303145f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.07101753f ? 
                             (data[29 /* X30 */] <0.15449134f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[3 /* X4 */] <-0.19583979f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.089733094f ? 
             (data[35 /* X36 */] <-0.3828125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.266432f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19760913f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.05152986f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23777433f ? 
                            1.0f : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.5738299f ? 
                             (data[2 /* X3 */] <-0.079391405f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18718356f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2927487f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0024717473f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.21254997f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24414062f ? 
             (data[6 /* X7 */] <0.15112802f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.011743564f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16319638f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28992504f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[30 /* X31 */] <0.09511024f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10109024f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31926185f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2117767f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14414386f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.103758164f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2854087f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31295636f ? 
                                    0.0f : 
                                     (data[24 /* X25 */] <-0.04761098f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))) : 
                     (data[25 /* X26 */] <0.19967078f ? 
                         (data[22 /* X23 */] <0.17315196f ? 
                             (data[35 /* X36 */] <-0.6f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9746094f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.20878825f ? 
             (data[7 /* X8 */] <0.114085265f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33142996f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24329937f ? 
                         (data[25 /* X26 */] <-0.2300518f ? 
                             (data[21 /* X22 */] <0.20588042f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[33 /* X34 */] <0.46875f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23198764f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.3628086f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[16 /* X17 */] <-0.29178956f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1334296f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1356535f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.26135918f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.14191115f ? 
                 (data[35 /* X36 */] <-0.12402344f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33310267f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7595703f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28535867f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35547742f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1735771f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06522972f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13650954f ? 
                     (data[2 /* X3 */] <-0.51111895f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15595302f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.32899213f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12550375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.16243695f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[13 /* X14 */] <0.20997916f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4159255f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_10_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[16 /* X17 */] <-0.033303082f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.14123742f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.062267803f ? 
                 (data[34 /* X35 */] <-0.18305919f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38657707f ? 
                 (data[25 /* X26 */] <-0.59838545f ? 
                     (data[23 /* X24 */] <0.10972459f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.1864023f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.3720703f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16499572f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.021642853f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26886097f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3459454f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09796575f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11763923f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19215995f ? 
                             (data[9 /* X10 */] <-0.10388972f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16585028f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[3 /* X4 */] <-0.017556781f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (data[12 /* X13 */] <0.14000258f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1831531f ? 
                     (data[26 /* X27 */] <-0.30844113f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.029634636f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5739389f ? 
                 (data[30 /* X31 */] <0.077903785f ? 
                     (data[24 /* X25 */] <-0.14962034f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.14464395f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03173373f ? 
                     (data[26 /* X27 */] <0.0506602f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.584375f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.58485013f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23992659f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2589509f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5890681f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.25917065f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.22331567f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2218024f ? 
                 (data[29 /* X30 */] <0.22484043f ? 
                     (data[29 /* X30 */] <0.115117356f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30732313f ? 
                         (data[23 /* X24 */] <0.16771865f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.06017944f ? 
                                 (data[2 /* X3 */] <0.05828893f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.6490473f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.40501305f ? 
                 (data[5 /* X6 */] <0.18089414f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.53027844f ? 
                     (data[3 /* X4 */] <-0.031014811f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.264098f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28402168f ? 
                 (data[19 /* X20 */] <-0.5078579f ? 
                     (data[2 /* X3 */] <-0.10238282f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.29860094f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.308852f ? 
                         (data[15 /* X16 */] <0.10245043f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22046648f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.140625f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.13916643f ? 
                 (data[14 /* X15 */] <0.11240376f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17046317f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18722314f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18602422f ? 
                 (data[13 /* X14 */] <0.11521404f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13700224f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.16167977f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3750665f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.39656842f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10456986f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2860456f ? 
             (data[1 /* X2 */] <-0.7538874f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36971086f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22161347f ? 
                         (data[6 /* X7 */] <0.09524543f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12853466f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.38376546f ? 
                                    0.0f : 
                                     (data[17 /* X18 */] <-0.087018035f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3080375f ? 
                                 (data[8 /* X9 */] <-0.13850774f ? 
                                     (data[12 /* X13 */] <0.17423426f ? 
                                         (data[10 /* X11 */] <-0.41791084f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25657472f ? 
                                        0.0f : 
                                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24478027f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (data[23 /* X24 */] <0.12935866f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[4 /* X5 */] <0.14582475f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[33 /* X34 */] <0.46875f ? 
                        1.0f : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.6121184f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.23793112f ? 
                     (data[14 /* X15 */] <0.11997813f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.2536071f ? 
         (data[30 /* X31 */] <0.08416068f ? 
            1.0f : 
             (data[3 /* X4 */] <0.02608074f ? 
                 (data[17 /* X18 */] <-0.22055987f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22743219f ? 
                         (data[3 /* X4 */] <-0.14124286f ? 
                             (data[17 /* X18 */] <-0.042790007f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.1457855f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26154575f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24957663f ? 
                         (data[26 /* X27 */] <0.02749237f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13877451f ? 
            0.0f : 
             (data[23 /* X24 */] <0.08763626f ? 
                 (data[29 /* X30 */] <0.11469791f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.30339608f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2677385f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2926265f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.20177892f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.39891222f ? 
                 (data[19 /* X20 */] <-0.80816686f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29989827f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4498485f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2038914f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.217684f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.14280389f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.30021146f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09068637f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.328125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[9 /* X10 */] <-0.4979803f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21099223f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0234375f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2994531f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0124102915f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18029514f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.22128746f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3585215f ? 
             (data[32 /* X33 */] <-0.44921875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03152482f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20033005f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19995846f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.0576773f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.16945395f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06126515f ? 
             (data[3 /* X4 */] <-0.54879916f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2871938f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-1.1541723f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.878125f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29754692f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10735131f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.079140246f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.45297357f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[35 /* X36 */] <-0.2839844f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19921875f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16730893f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.09890241f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.07209262f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.6037509f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20408441f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[24 /* X25 */] <-0.004520818f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8046875f ? 
                 (data[20 /* X21 */] <0.13185656f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1248825f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.21013924f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.13431533f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.02734375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[16 /* X17 */] <-0.043810662f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1645369f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.60145485f ? 
             (data[30 /* X31 */] <0.19052783f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5127577f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37945545f ? 
                     (data[10 /* X11 */] <-0.5443852f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13822569f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X9 */] <-0.46513572f ? 
                            1.0f : 
                             (data[0 /* X1 */] <-0.2092378f ? 
                                 (data[15 /* X16 */] <0.069910415f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2821926f ? 
                                    0.0f : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25750744f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[18 /* X19 */] <0.14178266f ? 
             (data[6 /* X7 */] <0.076297775f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17578125f ? 
                 (data[22 /* X23 */] <0.11830451f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30428228f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.1747045f ? 
             (data[10 /* X11 */] <-0.634724f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.16073975f ? 
                 (data[9 /* X10 */] <-0.8129326f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22264823f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25733095f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X1 */] <-0.08261641f ? 
                     (data[14 /* X15 */] <0.14079604f ? 
                        1.0f : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.15638508f ? 
                         (data[11 /* X12 */] <-0.27474427f ? 
                             (data[29 /* X30 */] <0.14128326f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5424818f ? 
                             (data[2 /* X3 */] <-0.47966138f ? 
                                 (data[24 /* X25 */] <-0.44109055f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22878818f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[9 /* X10 */] <0.29550683f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44676125f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.546875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.50580364f ? 
                     (data[29 /* X30 */] <0.059623603f ? 
                         (data[9 /* X10 */] <-0.42673007f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.46392646f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.071875f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[29 /* X30 */] <0.247952f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[13 /* X14 */] <0.1593578f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23506758f ? 
                     (data[0 /* X1 */] <0.08152242f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.37109375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08860873f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.4328613f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.328125f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24892546f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24123926f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06181341f ? 
                             (data[24 /* X25 */] <-0.7190145f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.37429968f ? 
             (data[16 /* X17 */] <-0.6868746f ? 
                 (data[21 /* X22 */] <0.22567345f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.54315746f ? 
                     (data[13 /* X14 */] <0.24075472f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20620826f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
             (data[9 /* X10 */] <-0.8814589f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.28367573f ? 
                     (data[10 /* X11 */] <-0.40887696f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1644397f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2985084f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.3307868f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.18521784f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[10 /* X11 */] <-0.047521655f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06548786f ? 
                     (data[10 /* X11 */] <-0.23149998f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.026024697f ? 
             (data[1 /* X2 */] <-0.2569412f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.088682f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.35435447f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2762911f ? 
                             (data[7 /* X8 */] <0.056485374f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23896098f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24521257f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[16 /* X17 */] <-0.74571705f ? 
             (data[19 /* X20 */] <-0.29513904f ? 
                 (data[3 /* X4 */] <-0.38817093f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[22 /* X23 */] <0.09479846f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.26894692f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.16550025f ? 
                     (data[27 /* X28 */] <-0.22829334f ? 
                         (data[3 /* X4 */] <0.034534857f ? 
                             (data[33 /* X34 */] <0.292305f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15311578f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[16 /* X17 */] <-0.2035259f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41150498f ? 
             (data[23 /* X24 */] <0.05245856f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.014645685f ? 
                     (data[8 /* X9 */] <-0.19294575f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41287032f ? 
                     (data[12 /* X13 */] <0.08863738f ? 
                         (data[33 /* X34 */] <0.28125f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2687103f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2213363f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4403324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.031201564f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22343688f ? 
             (data[14 /* X15 */] <0.09617959f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.38984543f ? 
                     (data[24 /* X25 */] <-0.008917773f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.43544096f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30076f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5264033f ? 
                         (data[30 /* X31 */] <0.082075045f ? 
                            1.0f : 
                             (data[8 /* X9 */] <0.055049576f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.22159375f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27194107f ? 
                                        0.0f : 
                                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24478027f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[35 /* X36 */] <0.2f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[29 /* X30 */] <0.23822458f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[3 /* X4 */] <-0.15568274f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                         (data[10 /* X11 */] <-0.3843782f ? 
                             (data[0 /* X1 */] <0.090901785f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.11209998f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4592905f ? 
             (data[14 /* X15 */] <0.08198345f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.546875f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.76119924f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2261728f ? 
             (data[16 /* X17 */] <-0.7078898f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.2044969f ? 
                 (data[3 /* X4 */] <0.059897203f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[33 /* X34 */] <-0.41210938f ? 
             (data[18 /* X19 */] <-0.37640408f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24058294f ? 
                    0.0f : 
                     (data[1 /* X2 */] <0.036769934f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.09923935f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0836261f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24640685f ? 
                         (data[32 /* X33 */] <-0.46249717f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26500884f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.10437291f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[9 /* X10 */] <-0.42803767f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.2300518f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3491949f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10202061f ? 
             (data[6 /* X7 */] <0.0932593f ? 
                 (data[30 /* X31 */] <0.10501698f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                 (data[0 /* X1 */] <-0.11192691f ? 
                     (data[6 /* X7 */] <0.22795375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21875f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14937261f ? 
                         (data[35 /* X36 */] <-0.53125f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.14901628f ? 
                                 (data[16 /* X17 */] <-0.16149557f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[6 /* X7 */] <0.1584718f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[31 /* X32 */] <0.1742434f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.80078125f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2279994f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[7 /* X8 */] <0.20416439f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0749202f ? 
                 (data[18 /* X19 */] <-0.1280876f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4591761f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15848424f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.24736473f ? 
                     (data[22 /* X23 */] <0.08808245f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.38787058f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.39330778f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015669657f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.6168021f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37137306f ? 
                     (data[8 /* X9 */] <-0.3895274f ? 
                         (data[0 /* X1 */] <-0.19800103f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.4705956f ? 
                             (data[14 /* X15 */] <0.10591409f ? 
                                 (data[21 /* X22 */] <0.15306816f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[16 /* X17 */] <-0.29909605f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.9997568f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (data[23 /* X24 */] <0.08845435f ? 
                 (data[33 /* X34 */] <-0.4609375f ? 
                     (data[10 /* X11 */] <-0.250784f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                     (data[3 /* X4 */] <-0.20218039f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17966513f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49784786f ? 
                                 (data[3 /* X4 */] <0.3373875f ? 
                                    1.0f : 
                                     (data[20 /* X21 */] <0.28640643f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[10 /* X11 */] <-0.9238083f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[9 /* X10 */] <-0.44733217f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.26463717f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22561406f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.065033585f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.29144073f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25289717f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5390625f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.052337322f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.07145121f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10862593f ? 
                     (data[4 /* X5 */] <0.13050051f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26736137f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13188963f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09765625f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1626632f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.29794335f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1772089f ? 
                         (data[33 /* X34 */] <0.038459376f ? 
                             (data[7 /* X8 */] <0.060948487f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13866445f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.31131288f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X13 */] <0.1990535f ? 
                 (data[7 /* X8 */] <0.12550375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23172389f ? 
             (data[5 /* X6 */] <0.06677584f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.39562386f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24971133f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.10823049f ? 
                         (data[32 /* X33 */] <-0.84375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.5318909f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                     (data[8 /* X9 */] <0.24558257f ? 
                         (data[2 /* X3 */] <-0.03851779f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[24 /* X25 */] <-0.37606353f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45350546f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31899452f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.09924055f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1612906f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09265468f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.1348445f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4625003f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31922024f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1453258f ? 
                 (data[35 /* X36 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33321917f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.096470326f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
             (data[13 /* X14 */] <0.11573025f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44972506f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.17472309f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.9389203f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13598424f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2524892f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35516658f ? 
             (data[0 /* X1 */] <-0.64244705f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6402217f ? 
                     (data[33 /* X34 */] <-0.84375f ? 
                         (data[6 /* X7 */] <0.10555226f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.099010974f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16585028f ? 
                             (data[0 /* X1 */] <-0.18760611f ? 
                                 (data[15 /* X16 */] <0.057204146f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[18 /* X19 */] <-0.10589763f ? 
                                     (data[20 /* X21 */] <0.17668188f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[9 /* X10 */] <-0.35085958f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.36966524f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.13796839f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.23432605f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17773438f ? 
             (data[35 /* X36 */] <0.16796875f ? 
                 (data[21 /* X22 */] <0.15306816f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.037360314f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26875752f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.4566967f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30004773f ? 
                     (data[13 /* X14 */] <0.092422426f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32152244f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2340782f ? 
                                 (data[1 /* X2 */] <-0.32808548f ? 
                                     (data[30 /* X31 */] <0.1421412f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.103581436f ? 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20976305f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[2 /* X3 */] <-0.3246331f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3162198f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4571595f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10645225f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.28753912f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.13558656f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23583756f ? 
             (data[27 /* X28 */] <-0.6365217f ? 
                 (data[16 /* X17 */] <-0.11946525f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14983521f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.17661972f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.043128982f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.515625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13163716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[33 /* X34 */] <-0.46289062f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14150932f ? 
                 (data[35 /* X36 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.052887324f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17519197f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.47648814f ? 
                     (data[12 /* X13 */] <0.10002965f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.22703192f ? 
                             (data[25 /* X26 */] <-0.622941f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.087467335f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[5 /* X6 */] <0.110431135f ? 
                                1.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32810098f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3095225f ? 
                     (data[31 /* X32 */] <0.06253188f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.8403248f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20402724f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22192647f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.103301145f ? 
             (data[31 /* X32 */] <0.13872477f ? 
                 (data[6 /* X7 */] <0.1940307f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32741866f ? 
                 (data[31 /* X32 */] <0.07126558f ? 
                     (data[16 /* X17 */] <-0.27918047f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X2 */] <-0.3609532f ? 
                         (data[15 /* X16 */] <0.16219446f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.14707002f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[5 /* X6 */] <0.1324312f ? 
            1.0f : 
             (data[20 /* X21 */] <0.13506621f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29034957f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.12483612f ? 
                     (data[12 /* X13 */] <0.13636868f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.45818534f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25169435f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.023084765f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.12592168f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.06928653f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14672959f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[22 /* X23 */] <0.08472444f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31352067f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.265625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2578125f ? 
             (data[35 /* X36 */] <0.21484375f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.044305664f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21431415f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.70225537f ? 
                 (data[30 /* X31 */] <0.086246304f ? 
                     (data[35 /* X36 */] <0.0f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.0625f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2977732f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2103413f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27891734f ? 
                                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0575f ? 
                                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17726672f ? 
                                                0.0f : 
                                                 (data[20 /* X21 */] <0.18705072f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (data[33 /* X34 */] <-0.3f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                 (data[26 /* X27 */] <-0.192602f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.22874409f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.47947663f ? 
                 (data[14 /* X15 */] <0.090095535f ? 
                     (data[7 /* X8 */] <0.03773379f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.30934635f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1967612f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.05369969f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.26934072f ? 
                                     (data[33 /* X34 */] <-0.12307875f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19179098f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5236751f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2906381f ? 
                             (data[15 /* X16 */] <0.18948449f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.026542481f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.953125f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (data[23 /* X24 */] <0.06350272f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1377609f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41330647f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.18000141f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.19140625f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19758062f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.4144038f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1289726f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17783472f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.031047663f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.36839592f ? 
                        0.0f : 
                        1.0f))) : 
             (data[13 /* X14 */] <0.13920522f ? 
                 (data[29 /* X30 */] <0.12890984f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37040177f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8333375f ? 
                             (data[16 /* X17 */] <-0.75328255f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[34 /* X35 */] <-0.32812345f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[21 /* X22 */] <0.09256373f ? 
                     (data[5 /* X6 */] <0.19772846f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58352023f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.42832217f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (data[23 /* X24 */] <0.027097886f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21418148f ? 
                     (data[19 /* X20 */] <-0.56625134f ? 
                         (data[7 /* X8 */] <0.22700134f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.1830299f ? 
                         (data[10 /* X11 */] <-0.20735112f ? 
                            0.0f : 
                            1.0f) : 
                         (data[26 /* X27 */] <-0.21993245f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2998943f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.020232465f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17962869f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2105548f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2421875f ? 
                 (data[15 /* X16 */] <0.09339039f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12550375f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.3679043f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2236575f ? 
                     (data[6 /* X7 */] <0.09625251f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.53288364f ? 
                             (data[31 /* X32 */] <0.16520959f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[16 /* X17 */] <-0.75622463f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.098271385f ? 
                 (data[34 /* X35 */] <-0.9770951f ? 
                     (data[12 /* X13 */] <0.16228862f ? 
                         (data[31 /* X32 */] <0.06253188f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.28369224f ? 
                         (data[34 /* X35 */] <-0.7356395f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (data[13 /* X14 */] <0.16199683f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.175565f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27579632f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4699964f ? 
                 (data[7 /* X8 */] <0.029081022f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.861292f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.1691552f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.5383007f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.18770458f ? 
                                     (data[7 /* X8 */] <0.05197332f ? 
                                        1.0f : 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30130792f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[35 /* X36 */] <-0.3f ? 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2420245f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)))))) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.07591267f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34169573f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3785498f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.2479582f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16521278f ? 
         (data[7 /* X8 */] <0.06650826f ? 
             (data[6 /* X7 */] <0.14314613f ? 
                 (data[30 /* X31 */] <0.086246304f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.117055796f ? 
                         (data[32 /* X33 */] <0.0333325f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.109375f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1607125f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06941527f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6358179f ? 
                             (data[17 /* X18 */] <-0.52733463f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19143945f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5918894f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                     (data[15 /* X16 */] <0.056431122f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.12123527f ? 
                         (data[31 /* X32 */] <0.15397945f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.37700242f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.41062412f ? 
                     (data[3 /* X4 */] <-0.16836393f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.17480429f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22465241f ? 
                                 (data[4 /* X5 */] <0.19020562f ? 
                                     (data[12 /* X13 */] <0.2820907f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[32 /* X33 */] <0.4f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (data[19 /* X20 */] <-0.9332956f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.9212107f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.71813464f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.11482693f ? 
                     (data[2 /* X3 */] <-0.12792882f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <0.105178505f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2517257f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54151195f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21874812f ? 
                     (data[5 /* X6 */] <0.22728856f ? 
                         (data[20 /* X21 */] <0.2313559f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0254013f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40670675f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.04383386f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[21 /* X22 */] <0.14399248f ? 
             (data[7 /* X8 */] <0.032887183f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.47499502f ? 
                 (data[19 /* X20 */] <-0.456472f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.5479884f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.36595777f ? 
             (data[17 /* X18 */] <-0.20114374f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16878189f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09663521f ? 
                         (data[34 /* X35 */] <-0.7862211f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.1286491f ? 
                                 (data[0 /* X1 */] <0.002333215f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[8 /* X9 */] <0.10948757f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.10653176f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[24 /* X25 */] <-0.2552996f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7942158f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2606511f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2104209f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.06294755f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24812698f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[8 /* X9 */] <0.0036359113f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23881996f ? 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (data[28 /* X29 */] <0.17005861f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-1.1541723f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.9104007f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.375f ? 
                             (data[24 /* X25 */] <-0.06713654f ? 
                                 (data[19 /* X20 */] <-0.44639784f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28392118f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15795563f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09505446f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13877046f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.14878356f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[21 /* X22 */] <0.19315232f ? 
             (data[7 /* X8 */] <0.073486224f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.30229715f ? 
             (data[19 /* X20 */] <-0.24925852f ? 
                 (data[20 /* X21 */] <0.23938005f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.08814767f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[20 /* X21 */] <0.08491534f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[7 /* X8 */] <0.027812302f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.0557309f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11365512f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77484083f ? 
                         (data[25 /* X26 */] <-0.7457189f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.59782946f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16104352f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.061588027f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                        0.0f : 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22360916f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19654712f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[20 /* X21 */] <0.15994105f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053223502f ? 
                 (data[17 /* X18 */] <-0.23350395f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0023178728f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.44021574f ? 
                         (data[3 /* X4 */] <-0.17137453f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.912532f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13599302f ? 
                                     (data[25 /* X26 */] <-0.26934072f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1546843f ? 
                 (data[1 /* X2 */] <-0.36673164f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08424061f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.073662765f ? 
                     (data[4 /* X5 */] <0.18048492f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.106177315f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
             (data[7 /* X8 */] <0.031650055f ? 
                 (data[22 /* X23 */] <0.1306172f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.37290925f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.28860536f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X11 */] <0.31383365f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.099108726f ? 
             (data[10 /* X11 */] <-0.08139872f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5390625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.23203658f ? 
                     (data[34 /* X35 */] <-0.23295625f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.10571014f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2095311f ? 
                     (data[1 /* X2 */] <-0.8699177f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2555309f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.075310506f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102630205f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13622694f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.12727483f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.30557832f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31113592f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.18048492f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <0.2265625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.62109375f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2682955f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.071950965f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.19802013f ? 
                         (data[23 /* X24 */] <0.044277694f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.48812753f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.28466108f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16359752f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.105204225f ? 
            1.0f : 
             (data[21 /* X22 */] <0.13794205f ? 
                 (data[19 /* X20 */] <-0.69972193f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.41918498f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[25 /* X26 */] <-0.23465598f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (data[27 /* X28 */] <-0.3032444f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.41383743f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4387671f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0234375f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03891869f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[7 /* X8 */] <0.026543582f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37054196f ? 
                 (data[10 /* X11 */] <-0.61213934f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
                         (data[0 /* X1 */] <-0.38744566f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17981286f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.2313559f ? 
                             (data[19 /* X20 */] <-0.07078952f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[29 /* X30 */] <0.06850911f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21367979f ? 
             (data[27 /* X28 */] <-0.23969984f ? 
                 (data[24 /* X25 */] <-0.1935899f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17801404f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22343688f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.16590488f ? 
                     (data[33 /* X34 */] <-0.40625f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.643976f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.26078287f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6033418f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2360618f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.48362842f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24607953f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.15880977f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27599093f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6450362f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3437236f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.071972415f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0185734f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.22731023f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32232612f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.14390019f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[33 /* X34 */] <-0.5292969f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22413418f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.1180299f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.029488966f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14358768f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16600785f ? 
                         (data[32 /* X33 */] <-0.1875f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.056485374f ? 
                                0.0f : 
                                1.0f) : 
                             (data[33 /* X34 */] <-0.28859368f ? 
                                 (data[26 /* X27 */] <0.11553012f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.35736603f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.28125f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.505376f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.05231456f ? 
             (data[0 /* X1 */] <-0.21158263f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7942158f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3224805f ? 
                         (data[16 /* X17 */] <-0.6322352f ? 
                            1.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2568173f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2445576f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04562988f ? 
             (data[3 /* X4 */] <-0.5023015f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2056927f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                         (data[23 /* X24 */] <0.036129847f ? 
                             (data[21 /* X22 */] <0.0756225f ? 
                                1.0f : 
                                0.0f) : 
                             (data[32 /* X33 */] <0.0f ? 
                                 (data[32 /* X33 */] <-0.1035735f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04851737f ? 
                                    0.0f : 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.011631001f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.26171875f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3123702f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[22 /* X23 */] <0.1586006f ? 
                 (data[32 /* X33 */] <0.46579552f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[2 /* X3 */] <-0.12154232f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.118877396f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.90838045f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25436398f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.50767833f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[25 /* X26 */] <-0.61987156f ? 
             (data[30 /* X31 */] <0.19052783f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37466556f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4515814f ? 
                         (data[2 /* X3 */] <-0.08960981f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.68359727f ? 
                                 (data[0 /* X1 */] <0.08445346f ? 
                                     (data[23 /* X24 */] <0.108415656f ? 
                                         (data[35 /* X36 */] <-0.4f ? 
                                            0.0f : 
                                             (data[22 /* X23 */] <0.13031517f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f) : 
                                     (data[22 /* X23 */] <0.09975376f ? 
                                         (data[32 /* X33 */] <-0.502382f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.005859375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.021176025f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.189485f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11187002f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.109375f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2869941f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18439849f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2856911f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.14014344f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.10546875f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (data[33 /* X34 */] <0.3828125f ? 
                     (data[16 /* X17 */] <-0.36324114f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13795686f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[17 /* X18 */] <-0.07673327f ? 
                         (data[10 /* X11 */] <-0.3882033f ? 
                            0.0f : 
                            1.0f) : 
                         (data[14 /* X15 */] <0.20733488f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.023604942f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29979137f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25436282f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.16066359f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20177892f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27599093f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32087973f ? 
                 (data[27 /* X28 */] <-1.2319728f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5234944f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46607625f ? 
                                0.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19218768f ? 
                                     (data[10 /* X11 */] <-0.05655554f ? 
                                         (data[16 /* X17 */] <0.20602275f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38622606f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23008962f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.7808196f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.123572245f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.6660156f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[0 /* X1 */] <-0.17347898f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.63166004f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.10710261f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07469191f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18504149f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09097599f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.18813424f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33561537f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.60909f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[11 /* X12 */] <-0.642695f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22844812f ? 
                         (data[21 /* X22 */] <0.17565294f ? 
                             (data[26 /* X27 */] <0.49142683f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19475563f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09657018f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (data[19 /* X20 */] <-0.47791886f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.16643594f ? 
                     (data[19 /* X20 */] <-0.38116345f ? 
                         (data[17 /* X18 */] <-0.066780716f ? 
                             (data[33 /* X34 */] <-0.093541f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.48962033f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24123926f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.1792417f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4401693f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16110705f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.045779243f ? 
             (data[1 /* X2 */] <-0.7307736f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.057306882f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29689497f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                 (data[10 /* X11 */] <-0.56696993f ? 
                     (data[17 /* X18 */] <-0.3305846f ? 
                         (data[16 /* X17 */] <-0.22874409f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.034625612f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.013999255f ? 
                             (data[31 /* X32 */] <0.05588115f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14115292f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.2853223f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.073245995f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.49925074f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.74143153f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.87631667f ? 
                 (data[31 /* X32 */] <0.05006176f ? 
                     (data[4 /* X5 */] <0.11669284f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.049111996f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22343688f ? 
                         (data[19 /* X20 */] <-0.76322496f ? 
                             (data[33 /* X34 */] <0.6f ? 
                                1.0f : 
                                0.0f) : 
                             (data[6 /* X7 */] <0.08986699f ? 
                                 (data[32 /* X33 */] <0.3f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[8 /* X9 */] <-0.041729085f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.12607919f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28896958f ? 
                                     (data[26 /* X27 */] <-0.13974689f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[25 /* X26 */] <-0.033607192f ? 
                                        0.0f : 
                                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22337337f ? 
                                            1.0f : 
                                            0.0f))))))) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44462636f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (data[19 /* X20 */] <-0.6517559f ? 
             (data[9 /* X10 */] <0.2713887f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31785443f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.15004294f ? 
                     (data[19 /* X20 */] <-0.90459013f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.7522876f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.11607959f ? 
                         (data[14 /* X15 */] <0.16107625f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21513723f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22113562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[24 /* X25 */] <-0.5145676f ? 
             (data[21 /* X22 */] <0.2332365f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.10339846f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23172389f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.57416147f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30732313f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                             (data[18 /* X19 */] <0.13580376f ? 
                                 (data[27 /* X28 */] <0.03359838f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[35 /* X36 */] <-0.067855f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18718755f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1031799f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (data[19 /* X20 */] <-0.36187437f ? 
             (data[6 /* X7 */] <0.15867019f ? 
                 (data[10 /* X11 */] <-0.1615609f ? 
                     (data[35 /* X36 */] <-0.33928406f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.17039374f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19040847f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14515105f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.32961687f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.0625f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.042623468f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.47693914f ? 
             (data[22 /* X23 */] <0.117185175f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8359375f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.21023189f ? 
                         (data[32 /* X33 */] <0.3316508f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[17 /* X18 */] <0.09171615f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19401462f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.07735372f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.11206919f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[19 /* X20 */] <-0.17835224f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.029081022f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18172747f ? 
                 (data[7 /* X8 */] <0.04400642f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.46875f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2163561f ? 
                     (data[13 /* X14 */] <0.12481051f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.142855f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14114313f ? 
                                 (data[35 /* X36 */] <-0.03892825f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (data[22 /* X23 */] <0.17865257f ? 
                         (data[29 /* X30 */] <0.26392326f ? 
                             (data[18 /* X19 */] <0.012834148f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                            1.0f : 
                             (data[32 /* X33 */] <0.504766f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16521278f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053223502f ? 
             (data[19 /* X20 */] <-0.30655968f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.035404596f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4825716f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.046875f ? 
                     (data[33 /* X34 */] <-0.359375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2239628f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.515625f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.77768874f ? 
                     (data[24 /* X25 */] <-0.41343763f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15767841f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.17355096f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.17183928f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.17604297f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3358023f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.722411f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.53741646f ? 
                 (data[10 /* X11 */] <-0.8064386f ? 
                     (data[11 /* X12 */] <-0.23497622f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.36324114f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30809814f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.1593578f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.3143729f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[11 /* X12 */] <-0.3461941f ? 
             (data[3 /* X4 */] <0.3304289f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.18305919f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.51171875f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13129982f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2755896f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26925275f ? 
                     (data[27 /* X28 */] <-0.3227966f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.43877563f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14020525f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16326182f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31947124f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25398383f ? 
                     (data[20 /* X21 */] <0.19284002f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.10557607f ? 
             (data[3 /* X4 */] <-0.464258f ? 
                 (data[19 /* X20 */] <-0.47449023f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.8814589f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18218529f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.36604533f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18894589f ? 
                                 (data[19 /* X20 */] <-0.8052387f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29280663f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.07500201f ? 
                    1.0f : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.024633741f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.48962033f ? 
                 (data[25 /* X26 */] <-0.1318295f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3276456f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06526287f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.021853682f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.10378467f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.234375f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.3043987f ? 
                 (data[1 /* X2 */] <-0.48230052f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24790849f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.31587902f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.11372626f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[14 /* X15 */] <0.1565132f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37095752f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37887496f ? 
                 (data[26 /* X27 */] <-0.21576983f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2106285f ? 
                         (data[27 /* X28 */] <-0.87025756f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.63365394f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.622941f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[19 /* X20 */] <-0.29172435f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.45983887f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21025574f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36328125f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2521336f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.15133591f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13828184f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17845626f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.029828733f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14580326f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08976546f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8528501f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.33246014f ? 
                     (data[27 /* X28 */] <-0.26543698f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.21687932f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.131514f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26785842f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4910571f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4801453f ? 
                     (data[31 /* X32 */] <0.037591632f ? 
                         (data[25 /* X26 */] <-0.54927427f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.24260536f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16918834f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[32 /* X33 */] <0.359375f ? 
                     (data[1 /* X2 */] <0.21689124f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.1940916f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[7 /* X8 */] <0.050014902f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.41474974f ? 
                 (data[23 /* X24 */] <0.036096834f ? 
                     (data[1 /* X2 */] <-0.5458634f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28511766f ? 
             (data[6 /* X7 */] <0.11421177f ? 
                 (data[18 /* X19 */] <0.081007674f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.24364461f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33246896f ? 
                            1.0f : 
                             (data[8 /* X9 */] <0.34538555f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[1 /* X2 */] <-0.280055f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19055054f ? 
                         (data[22 /* X23 */] <0.14181057f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17790668f ? 
                                 (data[20 /* X21 */] <0.08720218f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[12 /* X13 */] <0.118959405f ? 
                                 (data[28 /* X29 */] <0.10849121f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.5f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20021756f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46875f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21313068f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19929385f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (data[33 /* X34 */] <-0.296875f ? 
                 (data[22 /* X23 */] <0.19553867f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36660364f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.7011719f ? 
         (data[7 /* X8 */] <0.12677246f ? 
             (data[21 /* X22 */] <0.13189161f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.58566314f ? 
             (data[24 /* X25 */] <-0.3694681f ? 
                 (data[23 /* X24 */] <0.07700114f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19377746f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6810303f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9126654f ? 
                     (data[19 /* X20 */] <-0.43802568f ? 
                         (data[7 /* X8 */] <0.1864023f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10558076f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24471675f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.53358173f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4300334f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[33 /* X34 */] <0.076171875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6386017f ? 
             (data[34 /* X35 */] <-0.76582146f ? 
                 (data[30 /* X31 */] <0.16341463f ? 
                     (data[7 /* X8 */] <0.059530303f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.14014344f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2997908f ? 
             (data[21 /* X22 */] <0.06079892f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37186113f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30635333f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1122089f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.07700114f ? 
                                 (data[1 /* X2 */] <-0.15685482f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[17 /* X18 */] <-0.04581474f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33572596f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35607582f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.14281997f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[33 /* X34 */] <-0.5292969f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4508348f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22704014f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5333277f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24716547f ? 
                     (data[2 /* X3 */] <-0.85599005f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.35375f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06202893f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12299305f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.209647f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27217868f ? 
                                    0.0f : 
                                     (data[0 /* X1 */] <0.01586689f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17416875f ? 
                                    0.0f : 
                                     (data[0 /* X1 */] <-0.11387124f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (data[12 /* X13 */] <0.18795116f ? 
                        1.0f : 
                         (data[33 /* X34 */] <0.16875f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9520116f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[33 /* X34 */] <0.4609375f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21009004f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                 (data[34 /* X35 */] <0.2292287f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5171079f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3343363f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.58653516f ? 
                             (data[26 /* X27 */] <-0.10688104f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17948267f ? 
                                    0.0f : 
                                     (data[35 /* X36 */] <0.1f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[19 /* X20 */] <-0.788642f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.192602f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.11287924f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0010865283f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11377118f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18278852f ? 
                     (data[33 /* X34 */] <-0.296875f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24219707f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40154606f ? 
                    0.0f : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.33748245f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.094746366f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29292503f ? 
                 (data[19 /* X20 */] <-0.23257469f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0067557064f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11544513f ? 
                             (data[3 /* X4 */] <0.007481685f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.523923f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2796875f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.43333367f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4879087f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32403472f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.009365065f ? 
                 (data[9 /* X10 */] <-0.9104007f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.48935214f ? 
                         (data[13 /* X14 */] <0.21117872f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <-0.25052157f ? 
                             (data[6 /* X7 */] <0.18938693f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34538555f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17024633f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.1742434f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2653896f ? 
                 (data[19 /* X20 */] <-0.54956746f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18082651f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.5649867f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06272431f ? 
         (data[35 /* X36 */] <-0.9003906f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1715933f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.0932593f ? 
                 (data[4 /* X5 */] <0.08631566f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.118911594f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15791439f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14226456f ? 
                             (data[28 /* X29 */] <0.09049293f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[19 /* X20 */] <0.048964966f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2985762f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31307542f ? 
                 (data[15 /* X16 */] <0.062591f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21101409f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.84375f ? 
                     (data[11 /* X12 */] <-0.48600084f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.5231126f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.33120394f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30130395f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.15625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17407042f ? 
             (data[17 /* X18 */] <-0.39206898f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.047540594f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24476635f ? 
             (data[13 /* X14 */] <0.0935845f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.69138f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98376435f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15431575f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.33359006f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1033727f ? 
                             (data[33 /* X34 */] <0.053948f ? 
                                 (data[35 /* X36 */] <-0.2f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.59375f ? 
                             (data[0 /* X1 */] <0.038537953f ? 
                                 (data[13 /* X14 */] <0.10837876f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11749873f ? 
                 (data[27 /* X28 */] <-0.90471214f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.018905679f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4225f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20090389f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4684211f ? 
                 (data[27 /* X28 */] <-0.37503943f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.39981562f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26176044f ? 
                    0.0f : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.13757841f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33641836f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[30 /* X31 */] <0.0992815f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.038761914f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25731158f ? 
                     (data[1 /* X2 */] <-0.76765f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8629305f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.1566099f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X13 */] <0.19814502f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11606922f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17332493f ? 
                             (data[31 /* X32 */] <0.17559433f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.12195082f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09370719f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28984275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.20429392f ? 
             (data[11 /* X12 */] <-0.17785533f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19108708f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28781796f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.038987815f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.18975273f ? 
                         (data[11 /* X12 */] <0.10697144f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.28231367f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.18149433f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.088062964f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14972106f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.16010766f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18963037f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.48539326f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43269005f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.8046875f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.5823938f ? 
                     (data[16 /* X17 */] <0.15793489f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3576938f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18961856f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.280055f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <0.0133995665f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32550573f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23277077f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.071702905f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36015317f ? 
             (data[23 /* X24 */] <0.052881625f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15453818f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.13980973f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[17 /* X18 */] <-0.86776406f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-1.1501853f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.634724f ? 
                             (data[17 /* X18 */] <-0.29919517f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22838105f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3121563f ? 
                                    0.0f : 
                                     (data[13 /* X14 */] <0.26112214f ? 
                                        0.0f : 
                                        1.0f))))))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.39620256f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.20416439f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.49953687f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (data[18 /* X19 */] <0.20095831f ? 
             (data[14 /* X15 */] <0.09617959f ? 
                 (data[13 /* X14 */] <0.08395992f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.14934216f ? 
             (data[31 /* X32 */] <0.047983404f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09336287f ? 
                 (data[31 /* X32 */] <0.04590505f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01568488f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5269922f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.40447304f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4016267f ? 
                         (data[5 /* X6 */] <0.1583311f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.038986426f ? 
                                 (data[30 /* X31 */] <0.19823875f ? 
                                    0.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25240877f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.13189161f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.14790484f ? 
                             (data[11 /* X12 */] <-0.4768706f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[29 /* X30 */] <0.060959015f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.43610534f ? 
                 (data[26 /* X27 */] <-0.1115146f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.14590435f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.12488336f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.71875f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35007367f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0319011f ? 
                 (data[33 /* X34 */] <-0.375f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26653332f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13166505f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[24 /* X25 */] <-0.29911682f ? 
             (data[33 /* X34 */] <-0.5546875f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <0.02734375f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20745274f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1841092f ? 
             (data[17 /* X18 */] <-0.26262814f ? 
                 (data[32 /* X33 */] <-0.09375f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.234375f ? 
                         (data[19 /* X20 */] <-0.36604533f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3430175f ? 
                 (data[8 /* X9 */] <0.29094756f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.029488966f ? 
                         (data[2 /* X3 */] <-0.31983754f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34890753f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.796875f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2487951f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27663732f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19769078f ? 
             (data[33 /* X34 */] <-0.296875f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2569801f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.34990656f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.027506929f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12995128f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34439388f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1569487f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.16733748f ? 
                             (data[19 /* X20 */] <-0.4461277f ? 
                                1.0f : 
                                0.0f) : 
                             (data[6 /* X7 */] <0.1792642f ? 
                                 (data[2 /* X3 */] <-0.38242084f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[18 /* X19 */] <-0.110913344f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[12 /* X13 */] <0.123195775f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12063719f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
             (data[20 /* X21 */] <0.11259863f ? 
                 (data[33 /* X34 */] <0.15126471f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.086366996f ? 
                     (data[20 /* X21 */] <0.13859075f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21521352f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.15960015f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0061275326f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[13 /* X14 */] <0.13800566f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[5 /* X6 */] <0.1773107f ? 
            0.0f : 
            1.0f) : 
         (data[24 /* X25 */] <-0.10345231f ? 
            0.0f : 
             (data[4 /* X5 */] <0.09466939f ? 
                 (data[35 /* X36 */] <-0.30729312f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41270456f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38358805f ? 
                         (data[3 /* X4 */] <-0.16836393f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36173227f ? 
                                 (data[33 /* X34 */] <-0.35f ? 
                                     (data[19 /* X20 */] <-0.019021647f ? 
                                        0.0f : 
                                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16971475f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3121563f ? 
                                        0.0f : 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37499875f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (data[26 /* X27 */] <-0.18101808f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (data[28 /* X29 */] <0.189646f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[25 /* X26 */] <-0.24693376f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36328125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41192088f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.065736376f ? 
                     (data[20 /* X21 */] <0.13492133f ? 
                         (data[3 /* X4 */] <0.05177333f ? 
                            1.0f : 
                             (data[11 /* X12 */] <-0.3717723f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34375f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23276807f ? 
                                 (data[25 /* X26 */] <-0.2300518f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1335325f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1604452f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18000141f ? 
                     (data[22 /* X23 */] <0.17208758f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23777433f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21421312f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (data[12 /* X13 */] <0.090036415f ? 
             (data[12 /* X13 */] <0.077083535f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78515625f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5302929f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24733922f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13601582f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.013067002f ? 
             (data[8 /* X9 */] <0.014977161f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.1446952f ? 
                     (data[26 /* X27 */] <0.34025806f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.08917927f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[17 /* X18 */] <-0.23997599f ? 
             (data[33 /* X34 */] <-0.35096288f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15748125f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.009590421f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.162375f ? 
                             (data[18 /* X19 */] <-8.7862916E-4f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.7667322f ? 
                 (data[4 /* X5 */] <0.14099458f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36873633f ? 
                     (data[31 /* X32 */] <0.09578554f ? 
                         (data[34 /* X35 */] <0.099434376f ? 
                             (data[26 /* X27 */] <0.08705481f ? 
                                 (data[20 /* X21 */] <0.35623255f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.25460738f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[20 /* X21 */] <0.0708731f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                 (data[20 /* X21 */] <0.12095214f ? 
                     (data[10 /* X11 */] <-0.5443852f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.40824908f ? 
                             (data[35 /* X36 */] <-0.757142f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2924808f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.27161646f ? 
                             (data[11 /* X12 */] <-0.18017437f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1129729f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.057737928f ? 
             (data[9 /* X10 */] <-0.9104007f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27465418f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24419452f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.7862211f ? 
                             (data[4 /* X5 */] <0.13666584f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[11 /* X12 */] <-0.21209371f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2920347f ? 
                 (data[29 /* X30 */] <0.073838584f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.50652856f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31922024f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.03515625f ? 
                 (data[35 /* X36 */] <-0.546875f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.1042344f ? 
                         (data[31 /* X32 */] <0.45980078f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.26631483f ? 
                     (data[24 /* X25 */] <-0.64006436f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.12903921f ? 
                 (data[2 /* X3 */] <-0.10238282f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39600563f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37304688f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.013314729f ? 
                 (data[11 /* X12 */] <0.06181341f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32342407f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.117032535f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09994225f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[12 /* X13 */] <0.14908732f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.18671377f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16755529f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.6168021f ? 
             (data[15 /* X16 */] <0.10571014f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-1.1668693f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.5285355f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.032881577f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2553512f ? 
                                 (data[8 /* X9 */] <-0.3804544f ? 
                                     (data[25 /* X26 */] <-0.059335317f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.05655554f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-0.3159075f ? 
                                             (data[30 /* X31 */] <0.30231762f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f))) : 
                                 (data[9 /* X10 */] <-0.03287781f ? 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17523709f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.084133096f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                 (data[24 /* X25 */] <-0.6682198f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14251344f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15960908f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.751487f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2070755f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28585958f ? 
                         (data[25 /* X26 */] <-0.27916294f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.11733741f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.1802543f ? 
                             (data[22 /* X23 */] <0.119423844f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))) : 
         (data[9 /* X10 */] <-0.14103167f ? 
             (data[33 /* X34 */] <-0.40625f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16126624f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.33765373f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                 (data[14 /* X15 */] <0.082459725f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4801453f ? 
                         (data[12 /* X13 */] <0.15257598f ? 
                             (data[11 /* X12 */] <-0.39726365f ? 
                                 (data[5 /* X6 */] <0.13318127f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[0 /* X1 */] <0.50652474f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24812698f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.26934072f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[22 /* X23 */] <0.21456738f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.24929854f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22152293f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[34 /* X35 */] <-0.44264784f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08723051f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22484043f ? 
                 (data[28 /* X29 */] <0.09705103f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.057950165f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.13506621f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28012276f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.09998394f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14072838f ? 
                     (data[16 /* X17 */] <-0.62702286f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17813747f ? 
                             (data[23 /* X24 */] <0.0906749f ? 
                                1.0f : 
                                0.0f) : 
                             (data[23 /* X24 */] <0.08113898f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <-0.4348211f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[24 /* X25 */] <-0.83334684f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.24089314f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09803068f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.031188317f ? 
                     (data[8 /* X9 */] <-0.02660742f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.399413f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23600283f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.416566f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17158163f ? 
             (data[16 /* X17 */] <-0.5860019f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.22123398f ? 
                         (data[13 /* X14 */] <0.19582291f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16444719f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.38910168f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[31 /* X32 */] <0.11812785f ? 
            1.0f : 
             (data[22 /* X23 */] <0.14013156f ? 
                 (data[26 /* X27 */] <-0.25445342f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.15071958f ? 
        0.013157895f : 
         (data[23 /* X24 */] <0.06309368f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28962702f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.18671377f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.114651136f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.57826227f ? 
                 (data[31 /* X32 */] <0.08955048f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32096088f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.10915896f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.19882154f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.38920313f ? 
                            0.0f : 
                             (data[16 /* X17 */] <0.003444252f ? 
                                1.0f : 
                                 (data[23 /* X24 */] <0.07375315f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.17638683f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[4 /* X5 */] <0.10340282f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6486798f ? 
             (data[30 /* X31 */] <0.0925032f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13440698f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.44988576f ? 
                     (data[6 /* X7 */] <0.22795375f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26656505f ? 
                            1.0f : 
                             (data[17 /* X18 */] <0.25966564f ? 
                                 (data[4 /* X5 */] <0.26946387f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[31 /* X32 */] <0.061760616f ? 
                         (data[17 /* X18 */] <-0.5894663f ? 
                             (data[23 /* X24 */] <0.06652964f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06652964f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-5.551115E-17f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[24 /* X25 */] <-0.41343763f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26656505f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                                    0.0f : 
                                     (data[16 /* X17 */] <0.41215107f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[14 /* X15 */] <0.12051584f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14115065f ? 
                 (data[13 /* X14 */] <0.08642464f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.24555622f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23516989f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.14244804f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
         (data[16 /* X17 */] <-0.70158523f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36277547f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.09682472f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2771022f ? 
                     (data[9 /* X10 */] <-0.2736815f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.013394375f ? 
                             (data[8 /* X9 */] <0.055049576f ? 
                                1.0f : 
                                 (data[13 /* X14 */] <0.14534852f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.7968753f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.05296015f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3133545f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.36804324f ? 
                     (data[3 /* X4 */] <-0.84554726f ? 
                         (data[24 /* X25 */] <0.2116576f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.15186764f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896359f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
             (data[27 /* X28 */] <-0.11749873f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.15087815f ? 
                 (data[9 /* X10 */] <-0.14826712f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14462686f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34369388f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.11004774f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4609375f ? 
                     (data[23 /* X24 */] <0.04755004f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3576938f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13150343f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.133156f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[14 /* X15 */] <0.10784071f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.15145569f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.42182758f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[16 /* X17 */] <-0.018592468f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.52772313f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132791f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26279598f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3581914f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.099897474f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.10606481f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3129013f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[32 /* X33 */] <0.3125f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.599619f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.14414386f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[24 /* X25 */] <-0.28372747f ? 
             (data[28 /* X29 */] <0.11574809f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.04590505f ? 
             (data[30 /* X31 */] <0.07098767f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.3749999f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.34375f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1796875f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23992659f ? 
                         (data[13 /* X14 */] <0.12481051f ? 
                            1.0f : 
                             (data[16 /* X17 */] <-0.53808725f ? 
                                1.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12321982f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5313823f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11825638f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[24 /* X25 */] <-0.096631505f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4215243f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45663974f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16330107f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.19882895f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6425781f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7819014f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41799614f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3277274f ? 
                         (data[10 /* X11 */] <-0.8154017f ? 
                             (data[24 /* X25 */] <-0.052860674f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22238562f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.18213643f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.10012934f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.6328125f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.018029107f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3043292f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09794072f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26273456f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23085015f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16833404f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.015503959f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.22306395f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.21732385f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.037962064f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062591f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.171875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.38241124f ? 
                 (data[20 /* X21 */] <0.0708731f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.87850964f ? 
                         (data[18 /* X19 */] <0.15777607f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.69816095f ? 
                            1.0f : 
                             (data[21 /* X22 */] <0.12772703f ? 
                                 (data[14 /* X15 */] <0.15783142f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[35 /* X36 */] <0.0546875f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.3926427f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.13188143f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[3 /* X4 */] <-0.40930623f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19887035f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.1134509f ? 
             (data[1 /* X2 */] <-0.280055f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.084639005f ? 
                     (data[33 /* X34 */] <-0.8125f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1732551f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.25f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.78931f ? 
                 (data[23 /* X24 */] <0.07300421f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06348144f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6386017f ? 
             (data[27 /* X28 */] <-0.2885803f ? 
                 (data[15 /* X16 */] <0.1334296f ? 
                     (data[21 /* X22 */] <0.13368487f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <0.6932355f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[2 /* X3 */] <-0.0640638f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.5738299f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-1.987808E-4f ? 
                                 (data[34 /* X35 */] <0.0750025f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                                         (data[5 /* X6 */] <0.14897013f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[23 /* X24 */] <0.08747265f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20255238f ? 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.240911f ? 
                                            0.0f : 
                                             (data[2 /* X3 */] <0.086019f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        1.0f) : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.20426819f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17287804f ? 
             (data[15 /* X16 */] <0.09955027f ? 
                 (data[30 /* X31 */] <0.082075045f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0028319214f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.025803424f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21431415f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.65591973f ? 
                 (data[30 /* X31 */] <0.086246304f ? 
                     (data[35 /* X36 */] <0.21875f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.15952154f ? 
                         (data[5 /* X6 */] <0.1569487f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20958954f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5125083f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[8 /* X9 */] <0.018757576f ? 
                             (data[14 /* X15 */] <0.13016511f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.95771796f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.34234878f ? 
                     (data[34 /* X35 */] <-0.9236504f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
             (data[13 /* X14 */] <0.08882376f ? 
                 (data[15 /* X16 */] <0.045418233f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4954997f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28036153f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.012410325f ? 
                             (data[35 /* X36 */] <0.11f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.359375f ? 
                        0.0f : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.1528281f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.09458882f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[32 /* X33 */] <-0.171875f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.11611519f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24199554f ? 
                     (data[7 /* X8 */] <0.110279106f ? 
                         (data[35 /* X36 */] <0.25f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09174866f ? 
                 (data[33 /* X34 */] <-0.40625f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14072838f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1484375f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.2106285f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[25 /* X26 */] <-0.61987156f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.7667322f ? 
                 (data[1 /* X2 */] <-0.35836467f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38472706f ? 
                     (data[1 /* X2 */] <-0.5377224f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23516384f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.09009052f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33237976f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18179521f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13527428f ? 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35968044f ? 
                     (data[9 /* X10 */] <-0.8718116f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.11093135f ? 
                             (data[35 /* X36 */] <-0.4f ? 
                                1.0f : 
                                0.0f) : 
                             (data[24 /* X25 */] <-0.44157815f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.24860689f ? 
                                    0.0f : 
                                     (data[26 /* X27 */] <0.09499353f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[1 /* X2 */] <-0.27427652f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.043845687f ? 
                     (data[3 /* X4 */] <-0.540345f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010407663f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24974899f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.105204225f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19678402f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19140625f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.24231216f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20285635f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25477964f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09759107f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4676811f ? 
                         (data[17 /* X18 */] <-0.07780015f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[13 /* X14 */] <0.098420225f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[22 /* X23 */] <0.09563796f ? 
             (data[34 /* X35 */] <0.11088682f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6434577f ? 
                 (data[25 /* X26 */] <-0.6474966f ? 
                     (data[21 /* X22 */] <0.23030752f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.03158187f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.056485374f ? 
                                 (data[20 /* X21 */] <0.20824638f ? 
                                     (data[19 /* X20 */] <-0.019021647f ? 
                                        0.0f : 
                                         (data[30 /* X31 */] <0.102097094f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4117018f ? 
             (data[32 /* X33 */] <-0.125f ? 
                 (data[24 /* X25 */] <0.23731172f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (data[18 /* X19 */] <0.17217016f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22671092f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24332315f ? 
             (data[31 /* X32 */] <0.04590505f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16716278f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.4711428f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5417818f ? 
                         (data[33 /* X34 */] <-0.375f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.25f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8568225f ? 
                                     (data[30 /* X31 */] <0.102097094f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[3 /* X4 */] <-0.039861374f ? 
                                     (data[21 /* X22 */] <0.26175007f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3197282f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.14047438f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17878252f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.12753126f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[29 /* X30 */] <0.12535687f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23037551f ? 
                         (data[1 /* X2 */] <-0.7556705f ? 
                            0.0f : 
                            1.0f) : 
                         (data[18 /* X19 */] <0.0554182f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[31 /* X32 */] <0.033434924f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11088682f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.057062116f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.11932534f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20887911f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5214259f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6456123f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6875f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11475826f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.18360941f ? 
                                 (data[19 /* X20 */] <-0.31051663f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18966717f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3043292f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0704435f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13182083f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04090176f ? 
                     (data[33 /* X34 */] <-0.7536023f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.07790684f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26906937f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26621276f ? 
             (data[15 /* X16 */] <0.11460107f ? 
                 (data[26 /* X27 */] <-0.34319288f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.324324f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.81712073f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[19 /* X20 */] <-0.62881565f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21346976f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63255996f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X7 */] <0.17058389f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17238499f ? 
                 (data[10 /* X11 */] <-0.47663108f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24271236f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[33 /* X34 */] <0.0078125f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.23382743f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15571521f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9270595f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26910967f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.30148214f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.26277313f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.3749999f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.064605184f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36342588f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.32961687f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.64507574f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28535867f ? 
                 (data[0 /* X1 */] <-0.71572334f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.6370601f ? 
                         (data[5 /* X6 */] <0.20276368f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.57826227f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.063911766f ? 
            1.0f : 
             (data[14 /* X15 */] <0.10936172f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[34 /* X35 */] <-0.43692163f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15090084f ? 
                 (data[29 /* X30 */] <0.070285596f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18626723f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.47432598f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25837123f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3386487f ? 
                     (data[14 /* X15 */] <0.156213f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2354994f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.9898499f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.6024103f ? 
                 (data[16 /* X17 */] <-0.21193196f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.4486133f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18894495f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13828184f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (data[12 /* X13 */] <0.09730422f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4977316f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18132742f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.14612943f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2425897f ? 
                 (data[10 /* X11 */] <0.16703306f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1317476f ? 
                         (data[11 /* X12 */] <-0.075140156f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[14 /* X15 */] <0.14992213f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13374315f ? 
                 (data[24 /* X25 */] <0.06143351f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18833326f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.17525558f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2425508f ? 
                     (data[35 /* X36 */] <-0.3995522f ? 
                         (data[17 /* X18 */] <-0.29076412f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.16939077f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5083148f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.42198738f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09704425f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29413927f ? 
                 (data[25 /* X26 */] <-0.65977436f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.50521576f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26997858f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31785443f ? 
                             (data[13 /* X14 */] <0.15674381f ? 
                                 (data[24 /* X25 */] <-0.2334511f ? 
                                     (data[16 /* X17 */] <-0.22961204f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.059297636f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.336094f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48701835f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11281654f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18427093f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.84869176f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2643487f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18352674f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                     (data[6 /* X7 */] <0.095812984f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44273552f ? 
                             (data[23 /* X24 */] <0.12935866f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19151251f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.09821269f ? 
                 (data[32 /* X33 */] <0.4609375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.09622617f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22319518f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21092549f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11968613f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21635075f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34969708f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.1768725f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.15483734f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10012934f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0953262f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4574885f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.053276643f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.15841424f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.59338087f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08282575f ? 
                 (data[17 /* X18 */] <-0.86776406f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26408145f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21798268f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[10 /* X11 */] <-0.577899f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22128746f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.15718144f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36621094f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.235606f ? 
             (data[19 /* X20 */] <-0.9332956f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0032261705f ? 
                     (data[30 /* X31 */] <0.08492286f ? 
                         (data[22 /* X23 */] <0.22776191f ? 
                            1.0f : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.03962934f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17044851f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2582505f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.2727351f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[6 /* X7 */] <0.14376578f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.17182866f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1204525f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[17 /* X18 */] <-0.08788301f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32551283f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.25466922f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.2777277f ? 
                         (data[3 /* X4 */] <0.8444244f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (data[10 /* X11 */] <-0.23949167f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.40574166f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27277285f ? 
            0.0f : 
             (data[30 /* X31 */] <0.1206592f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
             (data[13 /* X14 */] <0.13920522f ? 
                 (data[23 /* X24 */] <0.13243781f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.14598417f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.578125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.51832527f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.315146f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[2 /* X3 */] <-0.34187666f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27842572f ? 
         (data[1 /* X2 */] <-0.2569412f ? 
             (data[27 /* X28 */] <-0.25436398f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.10993579f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33001468f ? 
                         (data[14 /* X15 */] <0.13327152f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3022955f ? 
                                0.0f : 
                                1.0f) : 
                             (data[12 /* X13 */] <0.16356196f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.062664844f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f))) : 
             (data[34 /* X35 */] <-0.5800772f ? 
                 (data[27 /* X28 */] <-0.2348118f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12580599f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18218529f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2733375f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16649935f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[34 /* X35 */] <-0.45219156f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.2515625f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2718674f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43973833f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.81676096f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1608867f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.16637918f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.06836197f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.51111895f ? 
                         (data[24 /* X25 */] <-0.4486133f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[35 /* X36 */] <0.27539062f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[30 /* X31 */] <0.17279996f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
            0.0f : 
             (data[15 /* X16 */] <0.13650954f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.14156786f ? 
                     (data[22 /* X23 */] <0.25150546f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[30 /* X31 */] <0.13942988f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39528164f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17117767f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28490648f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23238216f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26279598f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.34375f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.13601582f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.24767931f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22395884f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.080736294f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25916106f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3400464f ? 
                            0.0f : 
                             (data[26 /* X27 */] <0.34612915f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[2 /* X3 */] <-0.14070183f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[10 /* X11 */] <-0.06446019f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33359277f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9748372f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.875f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[3 /* X4 */] <-0.1451151f ? 
             (data[15 /* X16 */] <0.07183082f ? 
                 (data[10 /* X11 */] <-0.23949167f ? 
                     (data[8 /* X9 */] <-0.02660742f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.39214447f ? 
                 (data[32 /* X33 */] <0.171875f ? 
                     (data[27 /* X28 */] <-0.4205575f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.13203251f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08743165f ? 
                                 (data[26 /* X27 */] <0.025820559f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.24409431f ? 
                                        1.0f : 
                                         (data[3 /* X4 */] <-0.1134767f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.13916695f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[2 /* X3 */] <-0.2939779f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65063477f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.41335833f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3022955f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                    0.0f : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27377817f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1751689f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20416439f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2644532f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6841109f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.081656516f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3002565f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.39486733f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.703125f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22007495f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4273864f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.6160793f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[17 /* X18 */] <-0.398541f ? 
             (data[26 /* X27 */] <0.07961998f ? 
                 (data[2 /* X3 */] <-0.28759137f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3880813f ? 
                     (data[12 /* X13 */] <0.13012893f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.25f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.28140306f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15551874f ? 
                     (data[17 /* X18 */] <-0.145828f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2762911f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.091884084f ? 
                         (data[8 /* X9 */] <0.16997424f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31340486f ? 
                     (data[4 /* X5 */] <0.07978642f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20580882f ? 
                             (data[15 /* X16 */] <0.07312112f ? 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08248408f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[4 /* X5 */] <0.12841286f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36415192f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4206883f ? 
             (data[24 /* X25 */] <-0.6224081f ? 
                 (data[20 /* X21 */] <0.20407383f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23711579f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56904036f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8422944f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37258077f ? 
                         (data[21 /* X22 */] <0.06836197f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.07490448f ? 
                                0.0f : 
                                1.0f) : 
                             (data[5 /* X6 */] <0.14897013f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.15392306f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65f ? 
                                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21703972f ? 
                                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22849223f ? 
                                                0.0f : 
                                                 (data[24 /* X25 */] <-0.38529715f ? 
                                                    1.0f : 
                                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14810303f ? 
                                                        0.0f : 
                                                         (data[5 /* X6 */] <0.18024227f ? 
                                                            1.0f : 
                                                            0.0f)))) : 
                                            1.0f) : 
                                        1.0f) : 
                                     (data[23 /* X24 */] <0.07700114f ? 
                                         (data[13 /* X14 */] <0.2821926f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)))) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[4 /* X5 */] <0.12732485f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21597695f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26966044f ? 
             (data[6 /* X7 */] <0.12119592f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28172478f ? 
                     (data[15 /* X16 */] <0.09339039f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05231456f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.006125598f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37304688f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35929313f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.13188143f ? 
                     (data[31 /* X32 */] <0.06253188f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.1342158f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.08699959f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.11521404f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3894631f ? 
                             (data[6 /* X7 */] <0.1480204f ? 
                                 (data[34 /* X35 */] <-0.9022725f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[20 /* X21 */] <0.12607919f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[17 /* X18 */] <-0.6347706f ? 
             (data[30 /* X31 */] <0.13942988f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4121109f ? 
                 (data[8 /* X9 */] <-0.3895274f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.39576435f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20540585f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.634724f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.37307036f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30735898f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))) : 
                         (data[12 /* X13 */] <0.21268062f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12988476f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3515625f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.040596306f ? 
             (data[28 /* X29 */] <0.09438002f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.0943659f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.11763923f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.110279106f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2151223f ? 
                         (data[12 /* X13 */] <0.14000258f ? 
                             (data[4 /* X5 */] <0.14745435f ? 
                                1.0f : 
                                0.0f) : 
                             (data[2 /* X3 */] <-0.22739413f ? 
                                 (data[15 /* X16 */] <0.10150382f ? 
                                     (data[20 /* X21 */] <0.1570707f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23736736f ? 
                             (data[32 /* X33 */] <-0.30667f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19620517f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22753723f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13540243f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.828125f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                 (data[16 /* X17 */] <-0.069028854f ? 
                    0.0f : 
                    1.0f) : 
                 (data[18 /* X19 */] <-0.059734408f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.56221473f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.19035749f ? 
                1.0f : 
                0.0f)) : 
         (data[28 /* X29 */] <0.14690986f ? 
             (data[2 /* X3 */] <-0.23969261f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.08004318f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0319011f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22814626f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.26699212f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0328533f ? 
             (data[33 /* X34 */] <-0.77734375f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.24458788f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.609375f ? 
                         (data[27 /* X28 */] <0.2831349f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[5 /* X6 */] <0.1162247f ? 
                 (data[24 /* X25 */] <0.18718712f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43446654f ? 
             (data[15 /* X16 */] <0.10109024f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4921875f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2771022f ? 
                         (data[35 /* X36 */] <-0.40625f ? 
                             (data[9 /* X10 */] <-0.47434452f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.7939685f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16900465f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[8 /* X9 */] <-0.2553226f ? 
             (data[7 /* X8 */] <0.0341559f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.108225346f ? 
                 (data[19 /* X20 */] <-0.399413f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.04562988f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.16866286f ? 
                 (data[18 /* X19 */] <-0.07892651f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.44250154f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.3281636f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[15 /* X16 */] <0.073370785f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11484896f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.86014f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24566126f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6109767f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.29339924f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20638049f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.53546375f ? 
            1.0f : 
             (data[7 /* X8 */] <0.029081022f ? 
                 (data[21 /* X22 */] <0.10920245f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.33160898f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5187169f ? 
                         (data[28 /* X29 */] <0.17540063f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.413635f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.047463257f ? 
                                    1.0f : 
                                     (data[1 /* X2 */] <-0.6406299f ? 
                                        1.0f : 
                                         (data[34 /* X35 */] <-0.34771523f ? 
                                            1.0f : 
                                            0.0f))))) : 
                         (data[11 /* X12 */] <-0.44034964f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.044093415f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20703125f ? 
                 (data[0 /* X1 */] <-0.21158263f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04380673f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2094639f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.1908194f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
                 (data[5 /* X6 */] <0.22509909f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18093799f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.4666267f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.49885768f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6640625f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35764933f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.526785f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.7194167f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.0557309f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.05275142f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23660755f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.40462214f ? 
                 (data[14 /* X15 */] <0.08806751f ? 
                     (data[18 /* X19 */] <-0.021350205f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28462407f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20241989f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.24935453f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.2133682f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[27 /* X28 */] <-0.96335f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9520116f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15911022f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22395219f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.091628835f ? 
                 (data[11 /* X12 */] <-0.30339608f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.14204271f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.21037158f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20997916f ? 
             (data[1 /* X2 */] <-0.62965083f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.48592123f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.11240216f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.17641003f ? 
                         (data[35 /* X36 */] <-0.28125f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.19152255f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31643006f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22348224f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.108415656f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.088964604f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3956021f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27102923f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3369674f ? 
                 (data[8 /* X9 */] <-0.28367573f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.11042763f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.19179384f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.012715998f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11826805f ? 
                 (data[19 /* X20 */] <-0.28262618f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14742732f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32604077f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.109375f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.14569192f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.65502244f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.16310427f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39600563f ? 
         (data[28 /* X29 */] <0.083695985f ? 
             (data[31 /* X32 */] <0.04174834f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.11550617f ? 
                 (data[24 /* X25 */] <-0.2111777f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1976444f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.26594234f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.07822623f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.12202421f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[16 /* X17 */] <-0.6973822f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07817495f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.0060890433f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1783619f ? 
             (data[0 /* X1 */] <-0.5252051f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.0557309f ? 
                 (data[16 /* X17 */] <-0.11946525f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4332485f ? 
                     (data[17 /* X18 */] <-0.5247458f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2891297f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.07051923f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[14 /* X15 */] <0.19758062f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[2 /* X3 */] <-0.314734f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.07780942f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.26414007f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23905237f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.22255313f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1405787f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.41372478f ? 
             (data[23 /* X24 */] <0.048368126f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.2632348f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27150166f ? 
                 (data[27 /* X28 */] <-0.63563144f ? 
                     (data[6 /* X7 */] <0.19884565f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.9748372f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.15432416f ? 
                         (data[35 /* X36 */] <-0.0625f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.14897013f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.13896339f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[33 /* X34 */] <-0.48077032f ? 
                             (data[17 /* X18 */] <-0.23480141f ? 
                                1.0f : 
                                 (data[30 /* X31 */] <0.11544513f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3972206f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[29 /* X30 */] <0.08272105f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.15134792f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23157121f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47721425f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.14245586f ? 
                     (data[29 /* X30 */] <0.16148403f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.69035226f ? 
                 (data[11 /* X12 */] <0.70093006f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6428082f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22493659f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.0026896475f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15862632f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.39562386f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44726562f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                 (data[2 /* X3 */] <-0.23187631f ? 
                     (data[23 /* X24 */] <0.050822385f ? 
                        0.0f : 
                        1.0f) : 
                     (data[28 /* X29 */] <0.10773507f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31176364f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26802653f ? 
                             (data[21 /* X22 */] <0.13143522f ? 
                                 (data[5 /* X6 */] <0.12721112f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[26 /* X27 */] <0.09008158f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22654778f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3202116f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5893122f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36415192f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.37319392f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.14813481f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[33 /* X34 */] <-0.3046875f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.14474879f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.27428427f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.50521576f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.83569497f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.6244915f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[20 /* X21 */] <0.1278445f ? 
             (data[19 /* X20 */] <-0.399413f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15715773f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.08997958f ? 
             (data[21 /* X22 */] <0.14096726f ? 
                 (data[19 /* X20 */] <-0.48283216f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.14774439f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13391948f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35433236f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6484375f ? 
                     (data[23 /* X24 */] <0.048935466f ? 
                         (data[18 /* X19 */] <0.13318026f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.74298096f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
        0.012820513f : 
         (data[1 /* X2 */] <-0.22804898f ? 
             (data[15 /* X16 */] <0.06875088f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041552186f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.5861077f ? 
                 (data[32 /* X33 */] <0.3828125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[24 /* X25 */] <-0.07926906f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12612769f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15079923f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29667762f ? 
                 (data[10 /* X11 */] <-0.56696993f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.10942843f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X9 */] <-0.3895274f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26087293f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5135349f ? 
                                 (data[0 /* X1 */] <0.090901785f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16275688f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[18 /* X19 */] <-0.047668315f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2361018f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011513922f ? 
                 (data[34 /* X35 */] <-0.24538672f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23915504f ? 
             (data[15 /* X16 */] <0.06621835f ? 
                 (data[13 /* X14 */] <0.09602111f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.18593135f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1990229f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.40065554f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25364563f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.27662742f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2508366f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.28292996f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.7330896f ? 
                         (data[6 /* X7 */] <0.26387227f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17498383f ? 
             (data[13 /* X14 */] <0.0876242f ? 
                 (data[32 /* X33 */] <-0.09375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.67569065f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20163666f ? 
                        0.0f : 
                        1.0f) : 
                     (data[18 /* X19 */] <-0.072529145f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.08692322f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.084157154f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29754692f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.9332956f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.1197945f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22416084f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.467895f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.116962485f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1698529f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.097504385f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16102791f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06181341f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2758259f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33009762f ? 
             (data[20 /* X21 */] <0.069268264f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.19399634f ? 
                     (data[11 /* X12 */] <-0.21209371f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20770743f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.20721287f ? 
                             (data[23 /* X24 */] <0.118887156f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[8 /* X9 */] <0.17201f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.12219366f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.34903368f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21541867f ? 
                 (data[3 /* X4 */] <-0.79726124f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35492766f ? 
                 (data[19 /* X20 */] <-0.43278065f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.114494346f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.07924424f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.14996253f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.0826106f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.3201648f ? 
                 (data[23 /* X24 */] <0.13957816f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1860488f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.4276652f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.08094455f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.8625707f ? 
                 (data[8 /* X9 */] <0.06803569f ? 
                     (data[3 /* X4 */] <0.11907601f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[23 /* X24 */] <0.046731953f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13559386f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.1133595f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4678109f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                     (data[7 /* X8 */] <0.0341559f ? 
                         (data[3 /* X4 */] <-0.17047745f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4502828f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.40194082f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.089404106f ? 
                                 (data[26 /* X27 */] <0.18072489f ? 
                                     (data[29 /* X30 */] <0.19472443f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[25 /* X26 */] <0.12600406f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16884889f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.14432907f ? 
         (data[18 /* X19 */] <-0.22286727f ? 
            1.0f : 
             (data[31 /* X32 */] <0.047983404f ? 
                 (data[3 /* X4 */] <-0.22187269f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.6413577f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.22318907f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[29 /* X30 */] <0.14534241f ? 
             (data[34 /* X35 */] <-0.3739332f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12281397f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5745148f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.026218297f ? 
                     (data[26 /* X27 */] <-0.0304272f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.37438726f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                     (data[30 /* X31 */] <0.1823514f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20078556f ? 
                            1.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15454504f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X13 */] <0.118199155f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.16725685f ? 
                     (data[23 /* X24 */] <0.12698191f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18759987f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15962784f ? 
             (data[18 /* X19 */] <-0.06613178f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041830555f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.1079542f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[20 /* X21 */] <0.26585972f ? 
                 (data[5 /* X6 */] <0.16040258f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                         (data[30 /* X31 */] <0.19887035f ? 
                             (data[25 /* X26 */] <-0.056154195f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[10 /* X11 */] <0.2799566f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28855243f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[24 /* X25 */] <-0.27933052f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.091119036f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21635075f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.254387f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2369541f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X2 */] <-0.17604297f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23777522f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11656909f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[29 /* X30 */] <0.047760103f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.14929755f ? 
                         (data[34 /* X35 */] <0.164775f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33155617f ? 
                 (data[1 /* X2 */] <-0.9272407f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.044111367f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.10098181f ? 
                             (data[13 /* X14 */] <0.1286491f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[15 /* X16 */] <0.11648993f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20362353f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29025403f ? 
             (data[10 /* X11 */] <-1.1609069f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19542123f ? 
                     (data[19 /* X20 */] <-0.43278065f ? 
                         (data[11 /* X12 */] <0.097321846f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09794415f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.50652856f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16511637f ? 
                            1.0f : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.09361489f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.13183555f ? 
                                 (data[6 /* X7 */] <0.29223126f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
             (data[1 /* X2 */] <-0.21938132f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2890625f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2569801f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.12133983f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.6037509f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[12 /* X13 */] <0.17270769f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.20792755f ? 
             (data[30 /* X31 */] <0.15090084f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.63118124f ? 
                     (data[3 /* X4 */] <-0.1799309f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.28746927f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.18220462f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30026412f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.32430774f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.13714574f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (data[27 /* X28 */] <0.007146399f ? 
            0.0f : 
             (data[30 /* X31 */] <0.10918824f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26068246f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2631188f ? 
                 (data[15 /* X16 */] <0.044111367f ? 
                     (data[3 /* X4 */] <-0.0851666f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.09625251f ? 
                         (data[11 /* X12 */] <-0.44542104f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5389429f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3071621f ? 
                             (data[23 /* X24 */] <0.045586634f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.43579793f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24892546f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19450736f ? 
                 (data[25 /* X26 */] <-0.5554132f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28535867f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.122692525f ? 
        0.04f : 
         (data[3 /* X4 */] <-0.1747045f ? 
             (data[30 /* X31 */] <0.087289125f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.41015625f ? 
                 (data[18 /* X19 */] <0.1321866f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.19985843f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.41186556f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.56090266f ? 
                         (data[3 /* X4 */] <-0.09464754f ? 
                             (data[10 /* X11 */] <-0.36941782f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4253499f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.616146f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[23 /* X24 */] <0.11293702f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3586633f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30254132f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.37116745f ? 
                 (data[31 /* X32 */] <0.07201437f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2319447f ? 
                         (data[11 /* X12 */] <-0.75990796f ? 
                            1.0f : 
                             (data[18 /* X19 */] <-0.041821778f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5389429f ? 
                                    0.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23731382f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4270229f ? 
                             (data[4 /* X5 */] <0.19020562f ? 
                                 (data[23 /* X24 */] <0.18171617f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07531935f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.70919895f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X3 */] <0.4235868f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.12889047f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (data[32 /* X33 */] <0.03515625f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27308142f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.19650342f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.010631055f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.09180326f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.046875f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29094756f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[33 /* X34 */] <-0.060546875f ? 
             (data[16 /* X17 */] <-0.3043987f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5495877f ? 
                     (data[9 /* X10 */] <-0.6209829f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3481949f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30924407f ? 
                     (data[21 /* X22 */] <0.06836197f ? 
                         (data[9 /* X10 */] <-0.775339f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.18094064f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16411828f ? 
                 (data[3 /* X4 */] <-0.49807444f ? 
                     (data[13 /* X14 */] <0.1241974f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                         (data[7 /* X8 */] <0.0849047f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[24 /* X25 */] <-0.5189646f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.1514846f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
        0.42857143f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21679688f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.15145569f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.34374315f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.07014465f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.634724f ? 
                 (data[4 /* X5 */] <0.1403208f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.13189161f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.09976f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6048378f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31635433f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.39062408f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[33 /* X34 */] <-0.84375f ? 
            1.0f : 
             (data[21 /* X22 */] <0.14474879f ? 
                 (data[10 /* X11 */] <-0.058814008f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2004162f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.1747045f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15998031f ? 
                 (data[13 /* X14 */] <0.11041581f ? 
                     (data[34 /* X35 */] <-0.6487918f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6877755f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.56260437f ? 
                             (data[24 /* X25 */] <-0.5764026f ? 
                                 (data[17 /* X18 */] <-0.20369408f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[7 /* X8 */] <0.25136077f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.07586156f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1893708f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5366883f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.1353233f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.87807846f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.475897f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30021924f ? 
                                    0.0f : 
                                     (data[13 /* X14 */] <0.1593578f ? 
                                        0.0f : 
                                        1.0f)))))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4765625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14613138f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31383365f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.65245545f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5766036f ? 
                         (data[19 /* X20 */] <-0.60319763f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26920438f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7325002f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.053192656f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.095608085f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[21 /* X22 */] <0.21974799f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.11401512f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.41015625f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22928166f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.12837853f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12185617f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22842349f ? 
                     (data[7 /* X8 */] <0.054455422f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4423036f ? 
                             (data[18 /* X19 */] <0.026813384f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.15f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23341942f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.22331567f ? 
             (data[27 /* X28 */] <0.26376873f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18546465f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.42715275f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.20630552f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5024329f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28402168f ? 
             (data[15 /* X16 */] <0.09493036f ? 
                 (data[18 /* X19 */] <-0.07892651f ? 
                     (data[34 /* X35 */] <-0.1601543f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.19019279f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10409896f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.77587855f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[12 /* X13 */] <0.109178215f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.13737553f ? 
                             (data[29 /* X30 */] <0.27569437f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[18 /* X19 */] <-0.056535725f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16307794f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38632813f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46988925f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[26 /* X27 */] <0.09699585f ? 
                         (data[22 /* X23 */] <0.2010071f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[3 /* X4 */] <-0.46848503f ? 
            1.0f : 
             (data[28 /* X29 */] <0.21813677f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24890622f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.57166815f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17578125f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.13827588f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.82421875f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.13621388f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.13118453f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.07877207f ? 
            0.0f : 
             (data[29 /* X30 */] <0.1528925f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.47627395f ? 
             (data[10 /* X11 */] <-0.51615435f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15502973f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.12824848f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.1763416f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.84375f ? 
                     (data[0 /* X1 */] <0.2171751f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28172478f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56035244f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.23656672f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38240582f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.1409151f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.05655554f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[31 /* X32 */] <0.19973233f ? 
                             (data[9 /* X10 */] <-0.07672303f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[35 /* X36 */] <0.21484375f ? 
             (data[32 /* X33 */] <-0.796875f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <0.16051406f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35067537f ? 
             (data[27 /* X28 */] <-0.4547738f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.484375f ? 
                     (data[4 /* X5 */] <0.14707002f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28508553f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.042147256f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2056927f ? 
                     (data[27 /* X28 */] <-0.25741902f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36490715f ? 
                            0.0f : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.61725885f ? 
                             (data[28 /* X29 */] <0.2469937f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0035582166f ? 
                             (data[15 /* X16 */] <0.07095857f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3046739f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9746094f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17550233f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1854125f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.1360399f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46875f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X11 */] <0.22058904f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17539063f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[17 /* X18 */] <-0.21894185f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27159467f ? 
                     (data[33 /* X34 */] <-0.46875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12738784f ? 
                 (data[19 /* X20 */] <-0.29931f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.09351449f ? 
                         (data[13 /* X14 */] <0.15483119f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26818684f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34073368f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43918115f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33376995f ? 
                 (data[1 /* X2 */] <-0.711645f ? 
                     (data[10 /* X11 */] <0.00700671f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6418316f ? 
                         (data[5 /* X6 */] <0.100917526f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.05f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.20385996f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16083926f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3997805f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.119730555f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[22 /* X23 */] <0.08584377f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.5826156f ? 
                 (data[14 /* X15 */] <0.15702021f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.027915971f ? 
                     (data[26 /* X27 */] <-0.2223893f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34898832f ? 
                         (data[22 /* X23 */] <0.13065986f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22077519f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3227966f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[1 /* X2 */] <-0.24827354f ? 
            0.0f : 
             (data[12 /* X13 */] <0.17361617f ? 
                 (data[19 /* X20 */] <-0.12412978f ? 
                     (data[12 /* X13 */] <0.14441174f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.09336287f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.47414887f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.39158052f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[22 /* X23 */] <0.2098102f ? 
            1.0f : 
            0.0f) : 
         (data[29 /* X30 */] <0.119583264f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.35473794f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.17730041f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X2 */] <-0.39912778f ? 
                 (data[4 /* X5 */] <0.109098546f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.18115044f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36015317f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.378696f ? 
                 (data[10 /* X11 */] <-0.634724f ? 
                     (data[25 /* X26 */] <-0.61066324f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.12281397f ? 
                             (data[9 /* X10 */] <-0.28911713f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.05228678f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16802877f ? 
             (data[30 /* X31 */] <0.17592841f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32737392f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.33267766f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X6 */] <0.16692193f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24458788f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99419063f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25056502f ? 
                                 (data[27 /* X28 */] <-0.6414971f ? 
                                    1.0f : 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32746574f ? 
                                         (data[17 /* X18 */] <-0.3257871f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                 (data[5 /* X6 */] <0.24753883f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21004902f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17808326f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.05951106f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13367784f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17154567f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6425781f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99195635f ? 
             (data[11 /* X12 */] <-0.81799734f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.090095535f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43287462f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28392118f ? 
                                 (data[5 /* X6 */] <0.13766713f ? 
                                     (data[22 /* X23 */] <0.29334396f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[12 /* X13 */] <0.18291055f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[19 /* X20 */] <-0.6329866f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[20 /* X21 */] <0.1458988f ? 
            1.0f : 
             (data[12 /* X13 */] <0.14454496f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[29 /* X30 */] <0.11203317f ? 
             (data[17 /* X18 */] <-0.15583944f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.44264784f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08936631f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.52463937f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.173611f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3194553f ? 
                     (data[35 /* X36 */] <-0.4854924f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.09480666f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4421642f ? 
                                0.0f : 
                                1.0f) : 
                             (data[35 /* X36 */] <-0.21696593f ? 
                                 (data[21 /* X22 */] <0.13814858f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.2106285f ? 
                     (data[0 /* X1 */] <-0.12480538f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.540345f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[33 /* X34 */] <-0.5292969f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.40358394f ? 
             (data[23 /* X24 */] <0.112996936f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17607144f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.3443682f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17531604f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.16035242f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27185416f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[19 /* X20 */] <-0.36604533f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (data[27 /* X28 */] <-0.59163904f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22624047f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.19003975f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15495858f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3654209f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41362977f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.55828947f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3971327f ? 
                     (data[16 /* X17 */] <-0.3968654f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3144299f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.32882467f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1171875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[15 /* X16 */] <0.06336098f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12109375f ? 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.015736304f ? 
                     (data[14 /* X15 */] <0.18135644f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.10972459f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2917542f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3098715f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14362922f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34531698f ? 
                     (data[0 /* X1 */] <-0.14242235f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.44034964f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17270769f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[29 /* X30 */] <0.06051489f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4360182f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.921875f ? 
                     (data[14 /* X15 */] <0.12051584f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.118802264f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.4609375f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.11535398f ? 
            0.0f : 
             (data[24 /* X25 */] <0.013067002f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.475921f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.5281361f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29590014f ? 
             (data[16 /* X17 */] <-0.84959435f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.359375f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43477857f ? 
                         (data[9 /* X10 */] <-0.11932534f ? 
                             (data[14 /* X15 */] <0.13187276f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.15108155f ? 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18006343f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24771999f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.083545834f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06181341f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.1769913f ? 
             (data[2 /* X3 */] <-0.14070183f ? 
                 (data[33 /* X34 */] <-0.4609375f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2008376f ? 
                         (data[32 /* X33 */] <-0.28125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.796875f ? 
                     (data[3 /* X4 */] <-0.70942736f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.80678403f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17578393f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.09955027f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25642785f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.17121562f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.10901038f ? 
                 (data[32 /* X33 */] <-0.3125f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40078375f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0026896475f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20383713f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.31048664f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.14324269f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.1830299f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014374593f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46295652f ? 
             (data[2 /* X3 */] <-0.15666808f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4314814f ? 
            0.0f : 
             (data[21 /* X22 */] <0.12508486f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17418128f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.52344316f ? 
             (data[28 /* X29 */] <0.14869054f ? 
                 (data[32 /* X33 */] <0.359375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08936631f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06885368f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.015031792f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[8 /* X9 */] <-0.24965198f ? 
             (data[28 /* X29 */] <0.21279475f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30404562f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.09552874f ? 
                 (data[27 /* X28 */] <0.31264916f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.92077637f ? 
                     (data[10 /* X11 */] <-0.9057405f ? 
                         (data[32 /* X33 */] <0.19166937f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X11 */] <-0.5246236f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.58573824f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.10883119f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (data[27 /* X28 */] <-0.24947593f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29124895f ? 
                 (data[22 /* X23 */] <0.1709133f ? 
                     (data[8 /* X9 */] <0.0943659f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.12265625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[12 /* X13 */] <0.15453818f ? 
                         (data[28 /* X29 */] <0.14690986f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[30 /* X31 */] <0.14672959f ? 
                 (data[33 /* X34 */] <-0.3828125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[13 /* X14 */] <0.11461426f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0030887967f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                 (data[9 /* X10 */] <-0.33692676f ? 
                     (data[5 /* X6 */] <0.14365107f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110571295f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22839342f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20416439f ? 
             (data[13 /* X14 */] <0.08882376f ? 
                 (data[1 /* X2 */] <-0.031581867f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.10023563f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12625664f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46910137f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.19648246f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5522165f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.30357468f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.06276694f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[35 /* X36 */] <-0.5605469f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.087442145f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.41472113f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.2829442f ? 
                 (data[24 /* X25 */] <-0.47409698f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24956459f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.14255832f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.025946451f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39831018f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17000368f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.108415656f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20706494f ? 
             (data[11 /* X12 */] <-0.3072159f ? 
                 (data[23 /* X24 */] <0.027915971f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <0.018905679f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.11471962f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21875f ? 
                 (data[15 /* X16 */] <0.13993837f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27237955f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22664176f ? 
                     (data[0 /* X1 */] <0.060912363f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.23409545f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.13354386f ? 
                 (data[12 /* X13 */] <0.120016105f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[4 /* X5 */] <0.16567604f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0749202f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24453124f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (data[4 /* X5 */] <0.08555623f ? 
             (data[7 /* X8 */] <0.04799288f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.10319348f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0390625f ? 
                     (data[30 /* X31 */] <0.24058294f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36971086f ? 
                     (data[10 /* X11 */] <-0.5895546f ? 
                         (data[19 /* X20 */] <-0.23257469f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18172717f ? 
                                 (data[6 /* X7 */] <0.19317119f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.01569574f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5599238f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.06625977f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[27 /* X28 */] <-0.7529445f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[35 /* X36 */] <0.24414062f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.05191798f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07700114f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.048029866f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26973f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24338333f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30074188f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3912292f ? 
                     (data[7 /* X8 */] <0.2808402f ? 
                        1.0f : 
                         (data[8 /* X9 */] <-0.1855032f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25436282f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1395688f ? 
                     (data[30 /* X31 */] <0.08189554f ? 
                         (data[21 /* X22 */] <0.12886639f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34025806f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.227529f ? 
                             (data[21 /* X22 */] <0.17242956f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.7558761f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17244639f ? 
                 (data[7 /* X8 */] <0.032437183f ? 
                     (data[10 /* X11 */] <-0.45404637f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.049159586f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5035937f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.25517476f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[13 /* X14 */] <0.14880168f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.60743487f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42460212f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.07365528f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[17 /* X18 */] <-0.23835798f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24219707f ? 
                 (data[12 /* X13 */] <0.14181952f ? 
                     (data[15 /* X16 */] <0.040966082f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.1167655f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[18 /* X19 */] <0.051629502f ? 
                 (data[6 /* X7 */] <0.12618461f ? 
                     (data[6 /* X7 */] <0.10161118f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6656218f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.36567098f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[17 /* X18 */] <-0.42119315f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31545028f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1626632f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.056431122f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.047983404f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.109349824f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.095471814f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16644253f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.25847945f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1967847f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.08631566f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1068947f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05896021f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30836594f ? 
                 (data[12 /* X13 */] <0.19814502f ? 
                     (data[21 /* X22 */] <0.14363763f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.032368712f ? 
                             (data[14 /* X15 */] <0.13249911f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[2 /* X3 */] <-0.20363572f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26274928f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X11 */] <-0.11527578f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[3 /* X4 */] <0.08314602f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1388498f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47444576f ? 
                 (data[2 /* X3 */] <-0.09599631f ? 
                     (data[3 /* X4 */] <-0.18527216f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.12580599f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[25 /* X26 */] <-0.63214934f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.0557309f ? 
                     (data[3 /* X4 */] <-0.07885854f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1763416f ? 
                             (data[4 /* X5 */] <0.08327794f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26456234f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.09625251f ? 
                             (data[21 /* X22 */] <0.16274886f ? 
                                1.0f : 
                                0.0f) : 
                             (data[4 /* X5 */] <0.18238044f ? 
                                 (data[18 /* X19 */] <-8.7862916E-4f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))) : 
         (data[15 /* X16 */] <0.1934884f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[18 /* X19 */] <0.14498134f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33203125f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23915504f ? 
             (data[30 /* X31 */] <0.0925032f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0960518f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8782004f ? 
                         (data[14 /* X15 */] <0.09766292f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27925694f ? 
                                 (data[25 /* X26 */] <-0.26934072f ? 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3147403f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30942407f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17500213f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.18014684f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25512215f ? 
                             (data[30 /* X31 */] <0.19081783f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[3 /* X4 */] <-0.15145569f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5735578f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5107214f ? 
                         (data[25 /* X26 */] <-0.2973023f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5739389f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.1440323f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <0.08740504f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99195635f ? 
             (data[30 /* X31 */] <0.1967847f ? 
                 (data[11 /* X12 */] <-0.28429303f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18132742f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6370806f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21339269f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.3961619f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1484375f ? 
             (data[1 /* X2 */] <-0.2829442f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11864744f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48701835f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11187002f ? 
                 (data[12 /* X13 */] <0.15998904f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11434453f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18556696f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.09617959f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14281152f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.10638897f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                     (data[24 /* X25 */] <-0.4486133f ? 
                         (data[2 /* X3 */] <-0.49834594f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.51539207f ? 
                             (data[3 /* X4 */] <-0.23787728f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.10426341f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15971993f ? 
                            1.0f : 
                            0.0f) : 
                         (data[22 /* X23 */] <0.10151447f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[27 /* X28 */] <-0.5500907f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18820304f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.27391616f ? 
             (data[5 /* X6 */] <0.18603727f ? 
                 (data[10 /* X11 */] <0.39288014f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20479548f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4353753f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.79374295f ? 
             (data[25 /* X26 */] <-0.6168021f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14796615f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.029081022f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.19166937f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5371846f ? 
                             (data[3 /* X4 */] <-0.05755699f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.29793856f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2622735f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17928582f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1083821f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.34234878f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10738528f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
             (data[3 /* X4 */] <-0.13877451f ? 
                 (data[10 /* X11 */] <-0.48792344f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.37700242f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16225861f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.081007674f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[32 /* X33 */] <0.03125f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26234633f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01553373f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15553741f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3022955f ? 
                                 (data[23 /* X24 */] <0.05447867f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.012174406f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[24 /* X25 */] <0.0752712f ? 
                                1.0f : 
                                 (data[7 /* X8 */] <0.19740972f ? 
                                    1.0f : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4471895f ? 
                                        0.0f : 
                                        1.0f))))))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.41957697f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5961425f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46987122f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19747199f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3676097f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37429297f ? 
                             (data[4 /* X5 */] <0.13188143f ? 
                                 (data[5 /* X6 */] <0.19153972f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.74955267f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[4 /* X5 */] <0.0874548f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1484375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18281941f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.108347714f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.3018349f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27899295f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42010275f ? 
                 (data[29 /* X30 */] <0.11825089f ? 
                     (data[33 /* X34 */] <-0.265625f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2319447f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6418316f ? 
                         (data[30 /* X31 */] <0.14881521f ? 
                             (data[16 /* X17 */] <-0.43061262f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.16947007f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.101101935f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* X1 */] <0.1782471f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29322916f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4726258f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <0.042172167f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.36523438f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11858171f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41201305f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17126723f ? 
         (data[4 /* X5 */] <0.1569426f ? 
             (data[2 /* X3 */] <-0.09280306f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11763923f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37528658f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.9511719f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.95419025f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[19 /* X20 */] <-0.15749745f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <-0.17026325f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17543003f ? 
                 (data[2 /* X3 */] <-0.2205176f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37137306f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6402217f ? 
                     (data[22 /* X23 */] <0.099275805f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26910967f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.802587f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16649316f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3463562f ? 
                                         (data[6 /* X7 */] <0.18692681f ? 
                                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23360448f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                     (data[25 /* X26 */] <-0.54436314f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[15 /* X16 */] <0.057204146f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[29 /* X30 */] <0.10759194f ? 
             (data[2 /* X3 */] <-0.38977543f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <0.062885866f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18557268f ? 
                 (data[31 /* X32 */] <0.058375172f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.14962034f ? 
                        1.0f : 
                         (data[18 /* X19 */] <-0.06988608f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.287669f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.084639005f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.52735525f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.36765718f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21658795f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.3305846f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <0.2229962f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.15574071f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (data[19 /* X20 */] <-0.6517559f ? 
             (data[10 /* X11 */] <0.093632765f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39680308f ? 
                 (data[12 /* X13 */] <0.09457879f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                         (data[14 /* X15 */] <0.12862793f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6841109f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22688007f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.20480625f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15267922f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27842572f ? 
         (data[23 /* X24 */] <0.085182f ? 
             (data[11 /* X12 */] <-0.2919833f ? 
                 (data[21 /* X22 */] <0.08594183f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32406968f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.125f ? 
                     (data[19 /* X20 */] <-0.38272917f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.04078623f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.7724896f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.375f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30506998f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29011163f ? 
             (data[29 /* X30 */] <0.1875341f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.7011719f ? 
         (data[21 /* X22 */] <0.23437096f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2954891f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.2108621f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.10202061f ? 
             (data[21 /* X22 */] <0.07441241f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24469452f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.019769967f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[5 /* X6 */] <0.19102389f ? 
                 (data[7 /* X8 */] <0.105204225f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.09685688f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.06569145f ? 
                            1.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124321386f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X13 */] <0.19087721f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17199437f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.15507211f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.114801005f ? 
                         (data[29 /* X30 */] <0.25306877f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[3 /* X4 */] <0.08314602f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
            0.0f : 
             (data[31 /* X32 */] <0.14982274f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21350801f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26665333f ? 
             (data[0 /* X1 */] <-0.14709952f ? 
                 (data[4 /* X5 */] <0.1698529f ? 
                     (data[24 /* X25 */] <-0.21997163f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[26 /* X27 */] <-0.30234614f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21792538f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25305122f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.3305846f ? 
                             (data[34 /* X35 */] <-0.2321425f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.20842317f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
             (data[6 /* X7 */] <0.1640986f ? 
                 (data[5 /* X6 */] <0.16359752f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <0.035030823f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6272776f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37635967f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30710143f ? 
             (data[17 /* X18 */] <-0.15499164f ? 
                 (data[16 /* X17 */] <0.22518341f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[3 /* X4 */] <-0.22120215f ? 
            0.0f : 
             (data[31 /* X32 */] <0.04590505f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16114904f ? 
                     (data[5 /* X6 */] <0.083811715f ? 
                         (data[34 /* X35 */] <-0.56265986f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6459682f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04911559f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10908799f ? 
                                    0.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14318855f ? 
                                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.095247254f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                         (data[25 /* X26 */] <-0.29753262f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.030131256f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.45f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20722944f ? 
                                     (data[24 /* X25 */] <0.004658532f ? 
                                        1.0f : 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18085624f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.114947535f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.828125f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0490203f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5172529f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.39024457f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2746454f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6505398f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.13607046f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21148318f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.24883811f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[16 /* X17 */] <0.5446139f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[23 /* X24 */] <0.3290285f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[21 /* X22 */] <0.14815499f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.086265f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4273864f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25314197f ? 
         (data[28 /* X29 */] <0.10461889f ? 
            1.0f : 
             (data[5 /* X6 */] <0.12619792f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.1446952f ? 
             (data[35 /* X36 */] <-0.55078125f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.44264784f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.28332877f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14126922f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13894266f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14072838f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8353275f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17890428f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2998943f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.21645406f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2619608f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.078866586f ? 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16229287f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0292225f ? 
                                        0.0f : 
                                         (data[26 /* X27 */] <-0.04596686f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[29 /* X30 */] <0.19367568f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29693154f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.300838f ? 
                 (data[3 /* X4 */] <-0.6079779f ? 
                     (data[7 /* X8 */] <0.15087815f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.84869176f ? 
                         (data[23 /* X24 */] <0.07235623f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27693343f ? 
                                 (data[24 /* X25 */] <-0.44157815f ? 
                                     (data[28 /* X29 */] <0.19481319f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13568994f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-0.46249875f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            0.0f) : 
                         (data[12 /* X13 */] <0.19814502f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[18 /* X19 */] <0.0554182f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.50652856f ? 
                 (data[14 /* X15 */] <0.10226365f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.12038021f ? 
                     (data[29 /* X30 */] <0.20060904f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[27 /* X28 */] <0.070690975f ? 
             (data[0 /* X1 */] <0.028763512f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16529633f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (data[35 /* X36 */] <-0.8046875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.12944263f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.13454746f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1419009f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31034735f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77484083f ? 
                 (data[0 /* X1 */] <-0.14123742f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18252333f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10943988f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37249708f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.011247947f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.06652964f ? 
                                 (data[19 /* X20 */] <0.008158994f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[11 /* X12 */] <0.716431f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42578125f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24727055f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.084133096f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.26953125f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20515263f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6685935f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4403431f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16229287f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3683668f ? 
                     (data[0 /* X1 */] <-0.117425695f ? 
                         (data[17 /* X18 */] <0.18717876f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19523789f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[28 /* X29 */] <0.1897083f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17480469f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.97678596f ? 
                                     (data[34 /* X35 */] <-0.385711f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.212405f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07183082f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.07342294f ? 
            1.0f : 
             (data[29 /* X30 */] <0.13690406f ? 
                 (data[24 /* X25 */] <-0.12919687f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22173217f ? 
             (data[29 /* X30 */] <0.061403137f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.48327917f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24738733f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27131388f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16374095f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13599667f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11780095f ? 
                         (data[11 /* X12 */] <-0.1285873f ? 
                             (data[28 /* X29 */] <0.24501738f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16290012f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30106622f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.022852737f ? 
                    0.0f : 
                    1.0f))) : 
         (data[20 /* X21 */] <0.20327142f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[16 /* X17 */] <-0.8402853f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.55717224f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.11421177f ? 
                     (data[34 /* X35 */] <-0.8817474f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7923071f ? 
             (data[27 /* X28 */] <-0.1484437f ? 
                 (data[33 /* X34 */] <-0.1484375f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17517148f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.39562386f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19198579f ? 
                         (data[35 /* X36 */] <0.15625f ? 
                             (data[5 /* X6 */] <0.13154753f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38657707f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.78125f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27662227f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8f ? 
                                    0.0f : 
                                    0.33333334f) : 
                                 (data[8 /* X9 */] <0.2097252f ? 
                                    0.0f : 
                                     (data[3 /* X4 */] <-0.57492304f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16716278f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.036046956f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31881905f ? 
                 (data[27 /* X28 */] <-0.16637918f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16833404f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18218529f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26986256f ? 
                                 (data[21 /* X22 */] <0.07665598f ? 
                                     (data[20 /* X21 */] <0.11532684f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.026949551f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35727054f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13179153f ? 
                 (data[25 /* X26 */] <-0.22255819f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12730022f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5625f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.16149114f ? 
             (data[6 /* X7 */] <0.08045562f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[11 /* X12 */] <0.0076026246f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.580957f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.55742276f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1440323f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.102500714f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.15071958f ? 
        0.013157895f : 
         (data[10 /* X11 */] <-0.5556776f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.020024981f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17289062f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5555767f ? 
                 (data[24 /* X25 */] <-0.08267421f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.22123398f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.90625f ? 
                            0.0f : 
                            1.0f) : 
                         (data[4 /* X5 */] <0.12580599f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[23 /* X24 */] <0.063911766f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.1278713f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.025803424f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.10043375f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80071867f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011513922f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21813677f ? 
                     (data[34 /* X35 */] <-0.5546882f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14266941f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.38967302f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5743583f ? 
                                     (data[8 /* X9 */] <-0.09886606f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1830299f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15f ? 
                                 (data[21 /* X22 */] <0.09498391f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1885807f ? 
                                        1.0f : 
                                         (data[17 /* X18 */] <-0.48591357f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47061256f ? 
                                 (data[30 /* X31 */] <0.102097094f ? 
                                    1.0f : 
                                     (data[22 /* X23 */] <0.16957009f ? 
                                        0.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.045762654f ? 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31764016f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f))) : 
                                0.0f))) : 
                     (data[27 /* X28 */] <-0.24090633f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20799902f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19822508f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5384625f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.112182185f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44667286f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                     (data[25 /* X26 */] <-0.5670594f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.60254276f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.17962869f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.10223892f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.050344743f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[16 /* X17 */] <-0.76647776f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1698529f ? 
                 (data[23 /* X24 */] <0.07670879f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13861986f ? 
                         (data[28 /* X29 */] <0.1184191f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.57416147f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.21589085f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4879087f ? 
             (data[25 /* X26 */] <-0.69046885f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.49885768f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.34375f ? 
                         (data[8 /* X9 */] <0.1397309f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[30 /* X31 */] <0.061218742f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.17895079f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16317308f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.217776f ? 
                                    0.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17024633f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19879416f ? 
                                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17287925f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f))) : 
                                 (data[23 /* X24 */] <0.12313077f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15024379f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22225353f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.21283498f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.3973275f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
                 (data[1 /* X2 */] <-0.22227053f ? 
                     (data[5 /* X6 */] <0.273303f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22466438f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.24730086f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16356534f ? 
            0.0f : 
             (data[7 /* X8 */] <0.16620085f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6295819f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.24441816f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.13598424f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42092124f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[0 /* X1 */] <0.14014344f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.45818534f ? 
         (data[32 /* X33 */] <-0.037109375f ? 
             (data[34 /* X35 */] <-0.30140108f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.40445596f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.09983547f ? 
             (data[19 /* X20 */] <0.10060338f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.14709952f ? 
                 (data[4 /* X5 */] <0.17289062f ? 
                     (data[27 /* X28 */] <-0.08817047f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28795046f ? 
                     (data[10 /* X11 */] <-0.634724f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1967687f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.10972459f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[23 /* X24 */] <0.06063942f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45446005f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20677553f ? 
             (data[33 /* X34 */] <-0.3359375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008867241f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22349483f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18132742f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12281397f ? 
                         (data[23 /* X24 */] <0.040257737f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08642762f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <0.39355376f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4788048f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1923513f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7125055f ? 
                     (data[13 /* X14 */] <0.14636384f ? 
                         (data[32 /* X33 */] <-0.09375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.1940307f ? 
                    1.0f : 
                     (data[10 /* X11 */] <0.15574071f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20670183f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47721425f ? 
                 (data[19 /* X20 */] <-0.6830381f ? 
                     (data[29 /* X30 */] <0.19641656f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.03231659f ? 
                         (data[30 /* X31 */] <0.09876009f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[0 /* X1 */] <0.5039601f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.13786048f ? 
                         (data[28 /* X29 */] <0.25375023f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2568107f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24499997f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.004749425f ? 
             (data[11 /* X12 */] <-0.38478884f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20782438f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2684981f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.00546875f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34695002f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19974554f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                             (data[1 /* X2 */] <-0.22516496f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.15524259f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.46973348f ? 
             (data[8 /* X9 */] <0.12460924f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17901663f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.06635857f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.0341559f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21357256f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.7724896f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                            0.0f : 
                            1.0f) : 
                         (data[28 /* X29 */] <0.097957365f ? 
                             (data[1 /* X2 */] <-0.3077915f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.28596294f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[5 /* X6 */] <0.15233204f ? 
                                 (data[16 /* X17 */] <-0.1294305f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23134309f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
             (data[24 /* X25 */] <-0.58052194f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09549415f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.02749237f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13415971f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.1640986f ? 
                    0.0f : 
                    1.0f))) : 
         (data[20 /* X21 */] <0.2028702f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54151195f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.06540188f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.48410207f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                         (data[17 /* X18 */] <-0.5089015f ? 
                            0.0f : 
                            1.0f) : 
                         (data[28 /* X29 */] <0.20272824f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06272431f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.098905f ? 
            0.0f : 
             (data[17 /* X18 */] <0.038321804f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.112996936f ? 
                     (data[8 /* X9 */] <0.33631256f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18016687f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.1731809f ? 
             (data[33 /* X34 */] <-0.8203125f ? 
                 (data[5 /* X6 */] <0.13035344f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.1354327f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                         (data[0 /* X1 */] <-0.5750329f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.31681308f ? 
                             (data[20 /* X21 */] <0.16230819f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.034853816f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56035244f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.37022465f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X9 */] <-0.3933078f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.04918621f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.375f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30762357f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[35 /* X36 */] <0.16601562f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.022537692f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25642124f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23814103f ? 
                 (data[27 /* X28 */] <-0.55742276f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.09066563f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8125f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23861028f ? 
                                 (data[1 /* X2 */] <-0.3615873f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17672515f ? 
                                        0.0f : 
                                         (data[19 /* X20 */] <-0.23257469f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (data[2 /* X3 */] <-0.1158051f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[32 /* X33 */] <-0.45f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99816275f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36971086f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31152278f ? 
                                1.0f : 
                                 (data[19 /* X20 */] <-0.5356422f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.0796562f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.14143841f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19342068f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.32635638f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.043314f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5172529f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4684211f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3671308f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23154937f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[11 /* X12 */] <-0.047410775f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.118542f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.013454531f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.70679337f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24389072f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.19814502f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28313133f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12995128f ? 
                 (data[21 /* X22 */] <0.13189161f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08380469f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35967195f ? 
                         (data[1 /* X2 */] <-0.39562386f ? 
                             (data[32 /* X33 */] <-0.288888f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.838893f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[24 /* X25 */] <-0.5189646f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27441168f ? 
                         (data[29 /* X30 */] <0.06495612f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.34206453f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.3807429f ? 
             (data[23 /* X24 */] <0.14707145f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49275115f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.37303635f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.38679522f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.16778925f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26857534f ? 
             (data[0 /* X1 */] <-0.25706324f ? 
                 (data[5 /* X6 */] <0.22177467f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08779913f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35496402f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0146261f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.32901612f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[34 /* X35 */] <-0.08380469f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23389342f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.28466108f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.19952892f ? 
                     (data[23 /* X24 */] <0.23972017f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.106861286f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09483515f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.47648814f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.32622167f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20210777f ? 
             (data[20 /* X21 */] <0.107784145f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[14 /* X15 */] <0.10378467f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19602618f ? 
                 (data[4 /* X5 */] <0.13340029f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.82421875f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.05231456f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.34664202f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29272372f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.6402774f ? 
                     (data[11 /* X12 */] <-0.48600084f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2424883f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.43077776f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26314074f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.42039168f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.17723045f ? 
                                         (data[0 /* X1 */] <0.08221647f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18514363f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[23 /* X24 */] <0.17124467f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.03863623f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.4038287f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[23 /* X24 */] <0.09009052f ? 
             (data[0 /* X1 */] <-0.10606481f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1673876f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18911853f ? 
                 (data[9 /* X10 */] <-0.28332877f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07926906f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23915504f ? 
             (data[0 /* X1 */] <-0.5105498f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.5769749f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5877121f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.09602111f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.094511665f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.42480314f ? 
                             (data[24 /* X25 */] <-0.32901612f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.61012214f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1587269f ? 
                                        0.0f : 
                                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1854818f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f) : 
                             (data[0 /* X1 */] <-0.012030497f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[30 /* X31 */] <0.1675859f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.2999668f ? 
                    1.0f : 
                     (data[25 /* X26 */] <0.040059533f ? 
                         (data[22 /* X23 */] <0.18658398f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16356534f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5781273f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09291439f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3895629f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.075140156f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
                 (data[4 /* X5 */] <0.18504149f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.14081362f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <0.017287668f ? 
            0.0f : 
             (data[33 /* X34 */] <0.1796875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[29 /* X30 */] <0.10759194f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.073226206f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.49258283f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.18810116f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33709255f ? 
                         (data[23 /* X24 */] <0.077039406f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.21818f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25704026f ? 
                                         (data[9 /* X10 */] <-0.24627958f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.34089988f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27748036f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7578125f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28899258f ? 
                     (data[12 /* X13 */] <0.12447332f ? 
                         (data[27 /* X28 */] <-0.20548353f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27102923f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2864312f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[16 /* X17 */] <0.09459389f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.06333646f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.17522612f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32042387f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29025403f ? 
                 (data[5 /* X6 */] <0.1602731f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10497083f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34282646f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16610278f ? 
                             (data[0 /* X1 */] <0.14678077f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.13181114f ? 
                                    0.0f : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1593578f ? 
                                        0.0f : 
                                         (data[15 /* X16 */] <0.110638045f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f))) : 
                 (data[16 /* X17 */] <-0.35191265f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32304215f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14424099f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.052398123f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24982646f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.2665139f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.1066969f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.66015625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
            1.0f : 
            0.0f) : 
         (data[21 /* X22 */] <0.15533707f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.113171f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.189387f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30730963f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25008208f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.034625612f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3058845f ? 
                             (data[8 /* X9 */] <-0.2352864f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[9 /* X10 */] <-0.042147256f ? 
                     (data[6 /* X7 */] <0.25589037f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.0943659f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.027676366f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.18899265f ? 
             (data[18 /* X19 */] <-0.00855547f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23393705f ? 
                     (data[24 /* X25 */] <-0.114444695f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
             (data[31 /* X32 */] <0.043826696f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7794425f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2043571f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3132133f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.048391283f ? 
                                 (data[8 /* X9 */] <0.055049576f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.060546875f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10549266f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.20958954f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                         (data[21 /* X22 */] <0.13210486f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.014037337f ? 
                                 (data[32 /* X33 */] <0.10832975f ? 
                                    1.0f : 
                                     (data[13 /* X14 */] <0.152796f ? 
                                        0.0f : 
                                         (data[20 /* X21 */] <0.16304763f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.055049576f ? 
                                     (data[15 /* X16 */] <0.071214825f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[10 /* X11 */] <-0.3178501f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.32051528f ? 
                 (data[30 /* X31 */] <0.08833194f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8339844f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                 (data[10 /* X11 */] <-0.61213934f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.08271834f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09660915f ? 
                 (data[5 /* X6 */] <0.19992636f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.107498504f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[34 /* X35 */] <-0.44264784f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16330281f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109099746f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.1899713f ? 
                 (data[23 /* X24 */] <0.031188317f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.30992717f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.040059533f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.084230214f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.13895713f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23456556f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15595302f ? 
                         (data[27 /* X28 */] <-0.25717914f ? 
                             (data[28 /* X29 */] <0.16400433f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19286357f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32817996f ? 
                 (data[4 /* X5 */] <0.14858888f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.609375f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.62660146f ? 
                             (data[3 /* X4 */] <-0.4755751f ? 
                                 (data[15 /* X16 */] <0.13034965f ? 
                                     (data[0 /* X1 */] <-0.09561233f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19194843f ? 
                             (data[6 /* X7 */] <0.15372214f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3527479f ? 
             (data[3 /* X4 */] <-0.3797168f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.7098715f ? 
                     (data[8 /* X9 */] <0.025865143f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29117697f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.4821353f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[15 /* X16 */] <0.1734688f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12757175f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19352457f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.11270783f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[10 /* X11 */] <-0.5472083f ? 
             (data[30 /* X31 */] <0.10710261f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18976292f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.041729085f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
                 (data[13 /* X14 */] <0.09450291f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18392791f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X1 */] <-0.34054887f ? 
                         (data[18 /* X19 */] <0.0554182f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X9 */] <-0.18499126f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11166111f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.16910425f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2998943f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11166111f ? 
                                    0.0f : 
                                     (data[15 /* X16 */] <0.2014131f ? 
                                        1.0f : 
                                        0.0f)))))) : 
                 (data[32 /* X33 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3227966f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13284674f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19365081f ? 
                 (data[34 /* X35 */] <-0.5049706f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.3032444f ? 
             (data[3 /* X4 */] <-0.18949921f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.87784064f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.035030823f ? 
                         (data[11 /* X12 */] <-0.53165203f ? 
                             (data[15 /* X16 */] <0.2252815f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[6 /* X7 */] <0.23992659f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.267347f ? 
                                 (data[0 /* X1 */] <0.032569416f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))))) : 
             (data[31 /* X32 */] <0.046944227f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.025803424f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36402187f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.56150293f ? 
                         (data[31 /* X32 */] <0.062587164f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.081628814f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30795944f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09041113f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[14 /* X15 */] <0.2053086f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <0.17901506f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4330579f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5943377f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.64548665f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4566969f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.273847f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33794126f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08224996f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[25 /* X26 */] <-0.28049213f ? 
                                 (data[17 /* X18 */] <-0.27880824f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.38972765f ? 
                 (data[18 /* X19 */] <-0.34121856f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16159686f ? 
             (data[19 /* X20 */] <-0.30348098f ? 
                 (data[2 /* X3 */] <-0.32129723f ? 
                     (data[9 /* X10 */] <-0.40874314f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4445133f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24542828f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15791439f ? 
                         (data[3 /* X4 */] <0.04040652f ? 
                             (data[15 /* X16 */] <0.06930278f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.046926014f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                         (data[12 /* X13 */] <0.16907379f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.11646203f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.032698814f ? 
                                    1.0f : 
                                     (data[13 /* X14 */] <0.17847553f ? 
                                        1.0f : 
                                        0.0f))))) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3705128f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.20439804f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1698529f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09663521f ? 
                         (data[16 /* X17 */] <-0.10699298f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19504309f ? 
             (data[22 /* X23 */] <0.08696311f ? 
                 (data[20 /* X21 */] <0.11420345f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.399413f ? 
                     (data[16 /* X17 */] <-0.25785533f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.11241238f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10293339f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.1297981f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.18585828f ? 
                     (data[23 /* X24 */] <0.12714462f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.4811662f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6368423f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.51171875f ? 
                 (data[14 /* X15 */] <0.13876802f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[13 /* X14 */] <0.20997916f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12592168f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08834818f ? 
                    1.0f : 
                     (data[2 /* X3 */] <0.14642785f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[13 /* X14 */] <0.29994604f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.26369345f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.61987156f ? 
             (data[2 /* X3 */] <-0.0576773f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40983263f ? 
                 (data[7 /* X8 */] <0.029081022f ? 
                     (data[20 /* X21 */] <0.2322672f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.050822385f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0232735f ? 
                             (data[0 /* X1 */] <-0.1522324f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[22 /* X23 */] <0.10151447f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.9238083f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32864442f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3101032f ? 
                                        0.0f : 
                                         (data[15 /* X16 */] <0.17820841f ? 
                                             (data[13 /* X14 */] <0.22077519f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27944165f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (data[13 /* X14 */] <0.11161537f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20784423f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.15145569f ? 
                 (data[16 /* X17 */] <-0.45570785f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.54190236f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15498917f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.33965853f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24566126f ? 
                         (data[28 /* X29 */] <0.09638802f ? 
                             (data[9 /* X10 */] <-0.35085958f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11279555f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[3 /* X4 */] <-0.11129864f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.31670463f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                     (data[23 /* X24 */] <0.06412269f ? 
                         (data[25 /* X26 */] <-0.29167658f ? 
                            0.0f : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.5376899f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4039696f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.94117916f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28782356f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[3 /* X4 */] <0.3276599f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[35 /* X36 */] <-0.875f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48973197f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4801453f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.46803796f ? 
                            0.0f : 
                             (data[26 /* X27 */] <0.2267357f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[25 /* X26 */] <-0.22310962f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.020442037f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[24 /* X25 */] <0.008670047f ? 
                 (data[0 /* X1 */] <0.16945395f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.5145676f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13667957f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09561689f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.107199974f ? 
             (data[32 /* X33 */] <-0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09578554f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7942158f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.029488966f ? 
                     (data[35 /* X36 */] <-0.078125f ? 
                         (data[7 /* X8 */] <0.07485782f ? 
                             (data[8 /* X9 */] <-0.041729085f ? 
                                0.0f : 
                                1.0f) : 
                             (data[12 /* X13 */] <0.13054949f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.40307143f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37117413f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24311934f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5035937f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22783858f ? 
                                        0.0f : 
                                         (data[7 /* X8 */] <0.06303448f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                 (data[35 /* X36 */] <0.895f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[0 /* X1 */] <0.16593668f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.14813481f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21245351f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.235691f ? 
             (data[23 /* X24 */] <0.0262798f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.3142331f ? 
                     (data[20 /* X21 */] <0.15753381f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.12894908f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18705595f ? 
                                1.0f : 
                                0.0f) : 
                             (data[7 /* X8 */] <0.12646066f ? 
                                 (data[25 /* X26 */] <0.061487686f ? 
                                     (data[35 /* X36 */] <-0.15f ? 
                                        0.0f : 
                                         (data[22 /* X23 */] <0.149812f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.30859375f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.31313738f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1674469f ? 
             (data[3 /* X4 */] <-0.40930623f ? 
                 (data[6 /* X7 */] <0.09625251f ? 
                     (data[15 /* X16 */] <0.27202684f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.3125f ? 
                     (data[8 /* X9 */] <0.10948757f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15300392f ? 
             (data[7 /* X8 */] <0.062067743f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4022383f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6875f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4271374f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.24441816f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.14715075f ? 
                     (data[3 /* X4 */] <0.034534857f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.4158484f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.15071958f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24828112f ? 
            0.0f : 
             (data[23 /* X24 */] <0.08845435f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.09563796f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.8046875f ? 
                 (data[1 /* X2 */] <-0.043138757f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <0.15485257f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41270456f ? 
                         (data[11 /* X12 */] <-0.075140156f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.3775427f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.65795374f ? 
                                    0.0f : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.215f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[34 /* X35 */] <-0.88383156f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.7354425f ? 
                    1.0f : 
                     (data[11 /* X12 */] <0.31289494f ? 
                         (data[11 /* X12 */] <-0.19182107f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27953932f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.41370404f ? 
                            0.0f : 
                             (data[0 /* X1 */] <5.7593177E-5f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[30 /* X31 */] <0.14568678f ? 
                 (data[33 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.037360314f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14518556f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27355576f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18963037f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32856992f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1751689f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.076822855f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.39827853f ? 
                 (data[13 /* X14 */] <0.08882376f ? 
                     (data[7 /* X8 */] <0.05902737f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.1092156f ? 
                         (data[28 /* X29 */] <0.2861924f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.10023747f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.953125f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20478666f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41799614f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <0.5f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33970025f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19098955f ? 
             (data[33 /* X34 */] <-0.35546875f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3261005f ? 
                    0.0f : 
                    1.0f) : 
                 (data[18 /* X19 */] <-0.046547614f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4266875f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.03516012f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.45364043f ? 
                     (data[7 /* X8 */] <0.064605184f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.9511719f ? 
             (data[27 /* X28 */] <0.41041008f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.18959807f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.6868746f ? 
                 (data[30 /* X31 */] <0.15924336f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.39719784f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7224242f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26978177f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2051122f ? 
                     (data[18 /* X19 */] <-0.09811861f ? 
                         (data[4 /* X5 */] <0.11365512f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.28125f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.07602366f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24790321f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[4 /* X5 */] <0.14099458f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06751981f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24484687f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.07998942f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.7556813f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.79194736f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.15071958f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24828112f ? 
            0.0f : 
             (data[30 /* X31 */] <0.19261345f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.050822385f ? 
             (data[28 /* X29 */] <0.108625405f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.5895546f ? 
                 (data[27 /* X28 */] <-0.17213847f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.13091782f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39817762f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3688234f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.09703713f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.37669083f ? 
                                 (data[26 /* X27 */] <0.48621538f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[25 /* X26 */] <-0.24693376f ? 
             (data[30 /* X31 */] <0.13317299f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3828125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1953125f ? 
             (data[31 /* X32 */] <0.056296818f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.21733986f ? 
                     (data[0 /* X1 */] <-0.08261641f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21042807f ? 
                         (data[1 /* X2 */] <-0.37251008f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20518711f ? 
                                 (data[8 /* X9 */] <-0.13077644f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[14 /* X15 */] <0.10591409f ? 
                                1.0f : 
                                 (data[13 /* X14 */] <0.1286491f ? 
                                     (data[13 /* X14 */] <0.12066751f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        1.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.097195335f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.1015625f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-1.9878022E-4f ? 
                         (data[30 /* X31 */] <0.1468732f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23012336f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24264303f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6428082f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
                     (data[12 /* X13 */] <0.09276184f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2289077f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24693915f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[10 /* X11 */] <-0.14967942f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0554182f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18270862f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[25 /* X26 */] <0.09837902f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[7 /* X8 */] <0.050014902f ? 
            1.0f : 
             (data[15 /* X16 */] <0.10417017f ? 
                 (data[11 /* X12 */] <-0.34904727f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41367078f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.20437977f ? 
             (data[30 /* X31 */] <0.0925032f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                     (data[5 /* X6 */] <0.083811715f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.26809373f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2000266f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42010275f ? 
                 (data[5 /* X6 */] <0.08713612f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2771022f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.5625f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.084073454f ? 
                                1.0f : 
                                 (data[30 /* X31 */] <0.19099832f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[31 /* X32 */] <0.12847258f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2647816f ? 
             (data[32 /* X33 */] <-0.953125f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.46641344f ? 
                     (data[17 /* X18 */] <-0.24936466f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.031188317f ? 
                         (data[27 /* X28 */] <-0.050811116f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.17019758f ? 
             (data[30 /* X31 */] <0.18739937f ? 
                 (data[34 /* X35 */] <-0.6640617f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22149411f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.1493483f ? 
                 (data[31 /* X32 */] <0.14500098f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.1536243f ? 
                     (data[21 /* X22 */] <0.31037962f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
             (data[1 /* X2 */] <-0.30316874f ? 
                 (data[34 /* X35 */] <-0.7556813f ? 
                     (data[14 /* X15 */] <0.12862793f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31289494f ? 
                        0.0f : 
                         (data[11 /* X12 */] <1.0626092f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20638049f ? 
                1.0f : 
                0.0f)) : 
        0.009708738f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5341062f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
                 (data[8 /* X9 */] <-0.2411963f ? 
                     (data[14 /* X15 */] <0.23002894f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4980993f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.16289397f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.14992154f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[10 /* X11 */] <0.04281717f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[34 /* X35 */] <-0.5724422f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.088863395f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (data[17 /* X18 */] <-0.21315292f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1655955f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.060622793f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21357784f ? 
                 (data[27 /* X28 */] <-0.542625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98625f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.125f ? 
                         (data[10 /* X11 */] <-0.5443852f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37265217f ? 
                                 (data[0 /* X1 */] <-0.1342029f ? 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23257488f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.52210695f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.62467986f ? 
                 (data[31 /* X32 */] <0.033434924f ? 
                     (data[20 /* X21 */] <0.11901794f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[29 /* X30 */] <0.17287804f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2087796f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.044868242f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40039062f ? 
             (data[2 /* X3 */] <-0.28120488f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22484043f ? 
                     (data[20 /* X21 */] <0.13390233f ? 
                         (data[2 /* X3 */] <-0.20019448f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.56022626f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23448405f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.540345f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8378906f ? 
             (data[25 /* X26 */] <-0.69046885f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48701835f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32550573f ? 
                         (data[0 /* X1 */] <-0.21398069f ? 
                             (data[11 /* X12 */] <-0.2577449f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <-0.26258564f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32503462f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X6 */] <0.103758164f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[19 /* X20 */] <-0.43486613f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.015767476f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13431036f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21826583f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.21875f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
                 (data[20 /* X21 */] <0.16074347f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.540345f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[30 /* X31 */] <0.10501698f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.15945569f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18029514f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14915553f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6236242f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[19 /* X20 */] <-0.37647274f ? 
             (data[13 /* X14 */] <0.14160433f ? 
                 (data[16 /* X17 */] <-0.2959926f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35723114f ? 
             (data[4 /* X5 */] <0.09922596f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.16967152f ? 
                     (data[34 /* X35 */] <-0.5266324f ? 
                         (data[7 /* X8 */] <0.061999634f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.12862793f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[31 /* X32 */] <0.109814435f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.0708453f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1571986f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15922089f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.13213018f ? 
                     (data[4 /* X5 */] <0.07720251f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.08859395f ? 
                 (data[0 /* X1 */] <0.18717049f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.1511145f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3586633f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23036002f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011513922f ? 
             (data[20 /* X21 */] <0.15913863f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.09667446f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.10783882f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.119140625f ? 
             (data[28 /* X29 */] <0.09438002f ? 
                 (data[26 /* X27 */] <0.212835f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.1717323f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25221866f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.16573785f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.14555116f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16583936f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31306845f ? 
                         (data[17 /* X18 */] <-0.22703192f ? 
                            1.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47976196f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.060015276f ? 
                                     (data[22 /* X23 */] <0.15549703f ? 
                                        1.0f : 
                                         (data[18 /* X19 */] <-0.047504146f ? 
                                            1.0f : 
                                             (data[35 /* X36 */] <-0.8035712f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    0.0f) : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.6071425f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (data[19 /* X20 */] <-0.6767817f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23996812f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.18608467f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.97265625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4801453f ? 
                     (data[12 /* X13 */] <0.089127935f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2746454f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16586089f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[30 /* X31 */] <0.15298648f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26820093f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.0325f ? 
            0.0f : 
             (data[24 /* X25 */] <0.013067002f ? 
                 (data[20 /* X21 */] <0.16716278f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
             (data[11 /* X12 */] <-0.4516565f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.076390475f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16600785f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24088539f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.29178956f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
                 (data[15 /* X16 */] <0.096470326f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17896198f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19810832f ? 
                     (data[12 /* X13 */] <0.14075382f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.890625f ? 
                 (data[31 /* X32 */] <0.09613058f ? 
                     (data[12 /* X13 */] <0.12910086f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.11621707f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084500425f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25718644f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.37109447f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.054315936f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11281654f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1644397f ? 
                     (data[3 /* X4 */] <-0.24537624f ? 
                         (data[18 /* X19 */] <-0.09628407f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07387424f ? 
                         (data[25 /* X26 */] <-0.20549622f ? 
                             (data[4 /* X5 */] <0.19020562f ? 
                                 (data[14 /* X15 */] <0.10591409f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[29 /* X30 */] <0.18042812f ? 
                                 (data[24 /* X25 */] <-0.38529715f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[29 /* X30 */] <0.194418f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0012654134f ? 
             (data[17 /* X18 */] <-0.2561561f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22159256f ? 
            0.0f : 
             (data[7 /* X8 */] <0.19147718f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.10784071f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38168395f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30538973f ? 
                     (data[13 /* X14 */] <0.11521404f ? 
                         (data[2 /* X3 */] <0.06366624f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17962869f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040249538f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.55828947f ? 
             (data[7 /* X8 */] <0.027812302f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38460153f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.078125f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36971086f ? 
                             (data[25 /* X26 */] <-0.5836521f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.043229435f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[16 /* X17 */] <-0.44616005f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3750098f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[15 /* X16 */] <0.26833093f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (data[3 /* X4 */] <-0.1451151f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.39104807f ? 
                 (data[3 /* X4 */] <-0.052342746f ? 
                     (data[2 /* X3 */] <-0.23011285f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.058239955f ? 
                            1.0f : 
                             (data[21 /* X22 */] <0.14527072f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.1293805f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[27 /* X28 */] <-0.6747358f ? 
                         (data[14 /* X15 */] <0.26653332f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2193677f ? 
                                 (data[6 /* X7 */] <0.2686614f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[24 /* X25 */] <-0.2727351f ? 
                             (data[33 /* X34 */] <-0.2f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.008670047f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.60879046f ? 
                 (data[15 /* X16 */] <0.062591f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14624125f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.087472126f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[20 /* X21 */] <0.15512657f ? 
                 (data[15 /* X16 */] <0.19194843f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0005159f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.47518462f ? 
                 (data[28 /* X29 */] <0.07212161f ? 
                     (data[11 /* X12 */] <-0.115488306f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16282499f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.15453818f ? 
                             (data[2 /* X3 */] <-0.079391405f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22688007f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30087274f ? 
                                    0.0f : 
                                     (data[12 /* X13 */] <0.21798623f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.013067002f ? 
             (data[11 /* X12 */] <-0.5715968f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19656661f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23382565f ? 
             (data[1 /* X2 */] <-0.280055f ? 
                 (data[12 /* X13 */] <0.16907379f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.46875f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15311578f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0053263246f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18628119f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15132283f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-0.4502828f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090625316f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.171875f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.26205385f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.5294349f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26657107f ? 
                                0.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2568173f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
            0.0f) : 
         (data[15 /* X16 */] <0.10417017f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14068311f ? 
                 (data[0 /* X1 */] <-0.13662785f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8470924f ? 
             (data[3 /* X4 */] <-0.49384737f ? 
                 (data[12 /* X13 */] <0.12183306f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03184976f ? 
                     (data[2 /* X3 */] <-0.51111895f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17279285f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[9 /* X10 */] <0.093775496f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[15 /* X16 */] <0.11417998f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23996812f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31189224f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26013395f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.82889915f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.36409116f ? 
             (data[3 /* X4 */] <-0.07114159f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.07686351f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.6262299f ? 
                 (data[32 /* X33 */] <0.21875f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.049644317f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.34375f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.18527216f ? 
                         (data[9 /* X10 */] <0.073619865f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14672959f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22466438f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.70605403f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.39330778f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17543313f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.61213934f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3144299f ? 
                         (data[21 /* X22 */] <0.15306816f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1945314f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.09601024f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14818002f ? 
             (data[27 /* X28 */] <-0.27391616f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24901965f ? 
                     (data[33 /* X34 */] <-0.171875f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23407368f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.20538883f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41599497f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0945693f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23212612f ? 
                     (data[27 /* X28 */] <-0.3227966f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5625f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2622735f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20722586f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19822508f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22016406f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15298648f ? 
                     (data[19 /* X20 */] <-0.28262618f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1117698f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.19019884f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25061384f ? 
                 (data[9 /* X10 */] <-0.022852737f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14834651f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3023916f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6953125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[16 /* X17 */] <-0.2938911f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1241755f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20091012f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15704536f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.0978639f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.053128168f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.035418514f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2619761f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.089119084f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15278122f ? 
         (data[3 /* X4 */] <-0.41776034f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21009502f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2649375f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10839913f ? 
                         (data[23 /* X24 */] <0.037733007f ? 
                             (data[17 /* X18 */] <-0.40332386f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.46493325f ? 
                            1.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.15607935f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6074219f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.14088805f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.22505146f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.22698236f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
             (data[4 /* X5 */] <0.09390996f ? 
                 (data[23 /* X24 */] <0.065547936f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.09625251f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5442914f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.031188317f ? 
                         (data[2 /* X3 */] <-0.19179384f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.094733305f ? 
                             (data[12 /* X13 */] <0.0905815f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08156883f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.047615957f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28936368f ? 
                                        0.0f : 
                                        1.0f))))))) : 
             (data[30 /* X31 */] <0.19469908f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1331956f ? 
            1.0f : 
             (data[16 /* X17 */] <0.120107606f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[3 /* X4 */] <-0.14934216f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2421875f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.46280688f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19284336f ? 
                 (data[3 /* X4 */] <-0.0035223207f ? 
                     (data[8 /* X9 */] <0.26070422f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.27336872f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.266508f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6530237f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30254132f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23600283f ? 
                         (data[25 /* X26 */] <-0.35282966f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[26 /* X27 */] <0.117267706f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17879064f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48861876f ? 
                 (data[22 /* X23 */] <0.13227792f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08027349f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.348946f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.34234878f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19078623f ? 
             (data[34 /* X35 */] <-0.45410028f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17509864f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.0640638f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.49258283f ? 
                     (data[22 /* X23 */] <0.1709133f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12550375f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3043292f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2193677f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19554654f ? 
                             (data[14 /* X15 */] <0.16418095f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.16507679f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (data[0 /* X1 */] <-0.14709952f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.2939779f ? 
                         (data[28 /* X29 */] <0.17540063f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (data[6 /* X7 */] <0.14214839f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16799462f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.108790085f ? 
                     (data[3 /* X4 */] <-0.22583456f ? 
                         (data[21 /* X22 */] <0.11071506f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.1493674f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2169423f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.015625f ? 
                         (data[25 /* X26 */] <-0.32251576f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[29 /* X30 */] <0.066732615f ? 
                 (data[2 /* X3 */] <-0.0576773f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.300838f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.609375f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.104936235f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[28 /* X29 */] <0.29292503f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16484417f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[6 /* X7 */] <0.1531235f ? 
            1.0f : 
             (data[5 /* X6 */] <0.20930813f ? 
                 (data[0 /* X1 */] <0.2804034f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22557342f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04849037f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.122458346f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.13004453f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.39330778f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07643925f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.375f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.14111328f ? 
                             (data[4 /* X5 */] <0.2193677f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[2 /* X3 */] <0.094463974f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30362093f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <-0.22735374f ? 
                             (data[10 /* X11 */] <0.23252872f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36183077f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5375f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23376742f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[35 /* X36 */] <-0.4f ? 
                                    0.0f : 
                                    1.0f))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13140808f ? 
            1.0f : 
             (data[0 /* X1 */] <0.028763512f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1934884f ? 
             (data[30 /* X31 */] <0.12744972f ? 
                 (data[32 /* X33 */] <0.0f ? 
                     (data[3 /* X4 */] <-0.15145569f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.40625f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.14300157f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.1591186f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                             (data[2 /* X3 */] <-0.28797793f ? 
                                1.0f : 
                                 (data[14 /* X15 */] <0.10263354f ? 
                                    1.0f : 
                                     (data[29 /* X30 */] <0.15027782f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)))) : 
             (data[9 /* X10 */] <-0.28332877f ? 
                 (data[8 /* X9 */] <0.041440077f ? 
                     (data[28 /* X29 */] <0.1967687f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79464865f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.27440345f ? 
                         (data[28 /* X29 */] <0.25375023f ? 
                             (data[28 /* X29 */] <0.14792588f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8046875f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09995726f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.10603054f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.56415f ? 
                             (data[25 /* X26 */] <-0.29085734f ? 
                                 (data[11 /* X12 */] <-0.15456696f ? 
                                    1.0f : 
                                     (data[18 /* X19 */] <-0.08276493f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[10 /* X11 */] <-0.2150102f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2075576f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19263579f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.030195655f ? 
             (data[13 /* X14 */] <0.09602111f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.308867f ? 
                     (data[9 /* X10 */] <-0.2845768f ? 
                         (data[12 /* X13 */] <0.12546696f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.4747499f ? 
                                1.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22096132f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.11434453f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[31 /* X32 */] <0.094746366f ? 
             (data[23 /* X24 */] <0.063911766f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1377609f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20225468f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04281717f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.378262f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.472773f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7578125f ? 
                     (data[14 /* X15 */] <0.10429168f ? 
                         (data[23 /* X24 */] <0.19511025f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16888092f ? 
             (data[23 /* X24 */] <0.030386738f ? 
                1.0f : 
                 (data[10 /* X11 */] <-1.1541723f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.50410503f ? 
                         (data[30 /* X31 */] <0.14881521f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.48539326f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14053944f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6571924f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[29 /* X30 */] <0.17750315f ? 
                     (data[10 /* X11 */] <-0.5218005f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.53125f ? 
                         (data[11 /* X12 */] <0.1074646f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[31 /* X32 */] <0.2236043f ? 
             (data[32 /* X33 */] <-0.1171875f ? 
                 (data[35 /* X36 */] <0.1015625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4401693f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42704254f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11790545f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.09438002f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.1602731f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.007255387f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30692992f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
                 (data[25 /* X26 */] <-0.59838545f ? 
                     (data[2 /* X3 */] <0.06366624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.338883f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.032579873f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.35537228f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2882658f ? 
                                    0.0f : 
                                     (data[13 /* X14 */] <0.33174548f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[3 /* X4 */] <0.42113006f ? 
                             (data[30 /* X31 */] <0.27562153f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5396807f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.21828125f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.34713334f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.34912944f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24321108f ? 
                 (data[30 /* X31 */] <0.086246304f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22343688f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06862873f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1701627f ? 
                                 (data[23 /* X24 */] <0.061399538f ? 
                                     (data[16 /* X17 */] <0.0613944f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[10 /* X11 */] <0.017078718f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.109514266f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.22098584f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2857125f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[28 /* X29 */] <0.14156786f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.35854614f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14403436f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.31566563f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[25 /* X26 */] <0.03647709f ? 
                             (data[12 /* X13 */] <0.25338033f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13089117f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.110913344f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.12254386f ? 
             (data[8 /* X9 */] <0.049000908f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27689898f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35900307f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5017304f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.041113354f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1506289f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17973973f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.89375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.18717945f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.34879845f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.081569225f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.04747746f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3667636f ? 
                 (data[16 /* X17 */] <-0.6826716f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17594138f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8018508f ? 
                         (data[23 /* X24 */] <0.09356096f ? 
                             (data[35 /* X36 */] <0.021427f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29420346f ? 
                                     (data[12 /* X13 */] <0.15476365f ? 
                                         (data[29 /* X30 */] <0.097643584f ? 
                                             (data[16 /* X17 */] <-0.25482008f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f) : 
                                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2340782f ? 
                                             (data[5 /* X6 */] <0.11165365f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21797135f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14095111f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17917053f ? 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16018115f ? 
                                     (data[10 /* X11 */] <-0.3456398f ? 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28014266f ? 
                                            0.0f : 
                                             (data[6 /* X7 */] <0.12378359f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f) : 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15454504f ? 
                                         (data[34 /* X35 */] <0.08111048f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[31 /* X32 */] <0.11241238f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[23 /* X24 */] <0.09499904f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.35770342f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10456986f ? 
             (data[3 /* X4 */] <-0.40930623f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09336287f ? 
                     (data[35 /* X36 */] <-0.96651787f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07510932f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.031086056f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <0.007526556f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16031612f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[23 /* X24 */] <0.07127454f ? 
                 (data[35 /* X36 */] <-0.36160812f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.02173913f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[7 /* X8 */] <0.073486224f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23290855f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9958312f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.23871176f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41150498f ? 
             (data[30 /* X31 */] <0.14881521f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.05358176f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.5738299f ? 
                         (data[30 /* X31 */] <0.19000757f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.9375f ? 
                            1.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3740678f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40406096f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29420346f ? 
                                         (data[23 /* X24 */] <0.06396092f ? 
                                             (data[8 /* X9 */] <-0.31098804f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                         (data[9 /* X10 */] <-0.05228591f ? 
                                             (data[20 /* X21 */] <0.12607919f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    1.0f) : 
                                1.0f))))) : 
             (data[35 /* X36 */] <-0.4515625f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.005859375f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.131122f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23966204f ? 
             (data[15 /* X16 */] <0.06336623f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24160156f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42135537f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.26123244f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.2348118f ? 
                     (data[31 /* X32 */] <0.11656909f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30360907f ? 
                             (data[3 /* X4 */] <-0.2178262f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32022804f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1751152f ? 
                 (data[28 /* X29 */] <0.098831706f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.20814617f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.31687585f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.40961874f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.19547519f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28083387f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27599093f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13184734f ? 
             (data[13 /* X14 */] <0.088131614f ? 
                 (data[11 /* X12 */] <-0.20068091f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.09993069f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19046244f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.462559f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17855781f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23174582f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13656789f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24179478f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41135147f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.2563932f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.033203125f ? 
             (data[26 /* X27 */] <-0.192602f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.2388924f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2589509f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.076805435f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.047891725f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.5625f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-0.32812345f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11214389f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25174347f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.328125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[19 /* X20 */] <-0.43486613f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28968242f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.061681237f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.01236977f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2630107f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21284924f ? 
                         (data[24 /* X25 */] <-0.85016435f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16224387f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.4515768f ? 
                1.0f : 
                 (data[11 /* X12 */] <0.06364124f ? 
                     (data[13 /* X14 */] <0.23516989f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[5 /* X6 */] <0.20930813f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1743534f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.112814926f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.03568779f ? 
             (data[13 /* X14 */] <0.13440698f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.86776406f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.7538874f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41307205f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26574695f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22599697f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.815385f ? 
                                     (data[24 /* X25 */] <0.2588615f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[29 /* X30 */] <0.2340782f ? 
                                         (data[31 /* X32 */] <0.13568994f ? 
                                             (data[30 /* X31 */] <0.27254623f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        0.0f))) : 
                             (data[25 /* X26 */] <-0.38720748f ? 
                                1.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5357672f ? 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6062925f ? 
                                        0.0f : 
                                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17567429f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17773438f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15000124f ? 
                 (data[21 /* X22 */] <0.12886639f ? 
                     (data[33 /* X34 */] <-0.3125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0091725085f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32433188f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61198914f ? 
                 (data[30 /* X31 */] <0.086246304f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.4375f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19570914f ? 
                             (data[3 /* X4 */] <0.007481685f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16104352f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[21 /* X22 */] <0.19179098f ? 
                                 (data[25 /* X26 */] <-0.13237777f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[16 /* X17 */] <-0.16149557f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3963717f ? 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2595424f ? 
                                            1.0f : 
                                             (data[23 /* X24 */] <0.17000514f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)))) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13042906f ? 
                             (data[25 /* X26 */] <-0.42649642f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.065625f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[33 /* X34 */] <0.35f ? 
                                 (data[10 /* X11 */] <-0.05655554f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (data[25 /* X26 */] <-0.29144073f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16488524f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2891297f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.024026796f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16044593f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11299451f ? 
                     (data[34 /* X35 */] <-0.9236504f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.041122757f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.041419238f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.625484f ? 
                 (data[30 /* X31 */] <0.14464395f ? 
                     (data[25 /* X26 */] <-0.30371854f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33404472f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07543838f ? 
             (data[35 /* X36 */] <-0.12109375f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07121997f ? 
                     (data[0 /* X1 */] <-0.38744566f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10132235f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.24329099f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1211778f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28035545f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.18445481f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27354482f ? 
                 (data[17 /* X18 */] <-0.16878353f ? 
                     (data[2 /* X3 */] <-0.15347484f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.14365107f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.049052544f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25902674f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8470924f ? 
             (data[35 /* X36 */] <-0.07421875f ? 
                 (data[9 /* X10 */] <-0.8814589f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19991663f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3671308f ? 
                             (data[24 /* X25 */] <-0.61042124f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                0.0f) : 
            1.0f) : 
         (data[18 /* X19 */] <-0.050138358f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22840373f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.06889453f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.48962033f ? 
                 (data[3 /* X4 */] <-0.7980967f ? 
                     (data[2 /* X3 */] <0.02534723f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.12618461f ? 
                     (data[3 /* X4 */] <0.12642641f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[14 /* X15 */] <0.15347117f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26888594f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5328942f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4421571f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47486824f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.97861284f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1799902f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.17849159f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.6751216f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2348118f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.45030272f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.379415f ? 
                         (data[20 /* X21 */] <0.15432416f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41207832f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18260673f ? 
                                     (data[34 /* X35 */] <-0.36477125f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2249589f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.6420422f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52722406f ? 
             (data[27 /* X28 */] <-0.259252f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31424615f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8125f ? 
                             (data[3 /* X4 */] <-0.15166835f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.35939184f ? 
                                     (data[13 /* X14 */] <0.14541124f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.5700501f ? 
                     (data[1 /* X2 */] <-0.037360314f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.09602111f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.41343763f ? 
                             (data[8 /* X9 */] <-0.013944867f ? 
                                 (data[6 /* X7 */] <0.16649316f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[15 /* X16 */] <0.07491075f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.16936278f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.1115146f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.579345f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.15826091f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.59861094f ? 
                     (data[32 /* X33 */] <-0.46875f ? 
                         (data[13 /* X14 */] <0.15867592f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5814916f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.46915752f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.079374135f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.19590849f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[16 /* X17 */] <-0.29178956f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22395219f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.019687861f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3739332f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18498851f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21693753f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38889802f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43998355f ? 
                     (data[20 /* X21 */] <0.07032143f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3313694f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08298645f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20383713f ? 
                                    0.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16872491f ? 
                                         (data[17 /* X18 */] <-0.4351342f ? 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14543308f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24987522f ? 
                                     (data[27 /* X28 */] <-0.07416297f ? 
                                         (data[0 /* X1 */] <-0.059168007f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[24 /* X25 */] <0.06821806f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.7011719f ? 
         (data[3 /* X4 */] <-0.576275f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12181391f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.33446226f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38167754f ? 
                     (data[1 /* X2 */] <-0.2569412f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.5823938f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1701627f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28936368f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37461862f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.04934627f ? 
                                        0.0f : 
                                         (data[24 /* X25 */] <-0.44157815f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[10 /* X11 */] <-0.5524572f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.079391405f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.7124306f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.048954427f ? 
                 (data[16 /* X17 */] <-0.22033802f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.065178946f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13598424f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13216642f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.11373139f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[3 /* X4 */] <-0.19583979f ? 
            0.0f : 
            1.0f) : 
         (data[29 /* X30 */] <0.05474129f ? 
            1.0f : 
             (data[7 /* X8 */] <0.029081022f ? 
                 (data[30 /* X31 */] <0.1510449f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.78996253f ? 
                     (data[8 /* X9 */] <-0.19150841f ? 
                         (data[2 /* X3 */] <-0.24288586f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21195132f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[25 /* X26 */] <-0.7484042f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.9238083f ? 
                                 (data[7 /* X8 */] <0.15798298f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[33 /* X34 */] <-0.8f ? 
                                     (data[23 /* X24 */] <0.05869957f ? 
                                         (data[19 /* X20 */] <-0.03903985f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f)))) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17607144f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.122692525f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48690864f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.15332648f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.10866683f ? 
             (data[27 /* X28 */] <-0.031284597f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1601543f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[35 /* X36 */] <-0.32421875f ? 
                 (data[17 /* X18 */] <-0.41473195f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.008576038f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12891717f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.44046006f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.6366066f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.18185093f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.9087402f ? 
                     (data[13 /* X14 */] <0.08642464f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5672076f ? 
                             (data[27 /* X28 */] <-0.5663111f ? 
                                1.0f : 
                                 (data[10 /* X11 */] <-0.50600326f ? 
                                     (data[24 /* X25 */] <-0.2608653f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12994426f ? 
             (data[14 /* X15 */] <0.08198345f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.037130255f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X6 */] <0.17689516f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22975108f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7427971f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5515033f ? 
                         (data[30 /* X31 */] <0.19887035f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22454134f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.280055f ? 
         (data[6 /* X7 */] <0.15511897f ? 
             (data[33 /* X34 */] <-0.84375f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2927487f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5256007f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12154038f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.19553334f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.16102791f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                     (data[23 /* X24 */] <0.07045645f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03391217f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.39045095f ? 
             (data[33 /* X34 */] <-0.3515625f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.13757657f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14958768f ? 
                         (data[13 /* X14 */] <0.11291691f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.048344187f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43928236f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1880605f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.39074832f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23860013f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36327797f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.13136284f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[12 /* X13 */] <0.16035242f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0362293f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22225353f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.15087815f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21209371f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
             (data[24 /* X25 */] <-0.4969798f ? 
                 (data[19 /* X20 */] <-0.3493615f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11656909f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.21209371f ? 
                     (data[23 /* X24 */] <0.031188317f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.58653516f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06335891f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23523635f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[20 /* X21 */] <0.08491534f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23410866f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8046875f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08917069f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.051531855f ? 
                         (data[16 /* X17 */] <-0.22874409f ? 
                             (data[30 /* X31 */] <0.18218529f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.059530303f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.65527886f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1841092f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.087367296f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5891771f ? 
                 (data[24 /* X25 */] <-0.13809712f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4104645f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41270456f ? 
                         (data[22 /* X23 */] <0.10151447f ? 
                             (data[29 /* X30 */] <0.19256097f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                                 (data[23 /* X24 */] <0.108415656f ? 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2561928f ? 
                                         (data[0 /* X1 */] <-0.13305092f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[0 /* X1 */] <0.025046008f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2712501f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.62907785f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <0.16601562f ? 
             (data[31 /* X32 */] <0.056296818f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18946853f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43537265f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20548353f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22508526f ? 
                            1.0f : 
                             (data[25 /* X26 */] <0.08425957f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1959639f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[7 /* X8 */] <0.08871086f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24542703f ? 
                         (data[18 /* X19 */] <0.23454449f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.62470704f ? 
                                0.0f : 
                                1.0f) : 
                             (data[22 /* X23 */] <0.21255258f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83320314f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15182823f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16884889f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15962784f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2238979f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[29 /* X30 */] <0.20174603f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54151195f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2369541f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1317476f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.38010246f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (data[20 /* X21 */] <0.1053769f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.26394117f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30607972f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.15838201f ? 
                 (data[19 /* X20 */] <-0.6329866f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13889097f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17689516f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.076297775f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22750518f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.27926856f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17625254f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.24058294f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.112814926f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.50882643f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (data[19 /* X20 */] <-0.3410196f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.81676096f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1842148f ? 
                         (data[31 /* X32 */] <0.11241238f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.14040188f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.79463357f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[25 /* X26 */] <-0.038211364f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1953125f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.20704515f ? 
                     (data[16 /* X17 */] <-0.1783077f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14284998f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1722913f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.16079727f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17126723f ? 
         (data[2 /* X3 */] <-0.083223306f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5768993f ? 
             (data[34 /* X35 */] <-0.73659384f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43872133f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2361018f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[33 /* X34 */] <-0.69140625f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6171875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5922082f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.6168021f ? 
             (data[23 /* X24 */] <0.11161561f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.089212246f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[13 /* X14 */] <0.09602111f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22358657f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.28487152f ? 
                                 (data[7 /* X8 */] <0.12141093f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.56696993f ? 
                     (data[35 /* X36 */] <-0.484375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.1248825f ? 
                         (data[22 /* X23 */] <0.15183648f ? 
                             (data[14 /* X15 */] <0.14830598f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23046875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18845452f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.17681804f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20659488f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10735131f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.16756164f ? 
                 (data[27 /* X28 */] <-0.28369224f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27331504f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.3529024f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.050340023f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18966593f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4596294f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26875752f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3880813f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X7 */] <0.2758451f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5679116f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0319011f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.035030823f ? 
                     (data[26 /* X27 */] <-0.1115146f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.19016165f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.31738347f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22229674f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20663139f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[35 /* X36 */] <-0.5957031f ? 
             (data[18 /* X19 */] <0.013835316f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17137176f ? 
                 (data[17 /* X18 */] <-0.1540784f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18608467f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06889453f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.024036327f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22795375f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.13915183f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X6 */] <0.11040698f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21117872f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09994225f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0784118f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.064605184f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.34082004f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1031799f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2290884f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15498917f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.17078368f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34321278f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21009502f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.62109375f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.122458346f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.50652856f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29680252f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.263638f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[31 /* X32 */] <0.079426624f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2654153f ? 
                         (data[9 /* X10 */] <-0.679314f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.21010266f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.51498264f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.34638312f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.12418978f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.33203125f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10409896f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28936368f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[31 /* X32 */] <0.14982274f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.237569f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14187448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X6 */] <0.14531328f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[33 /* X34 */] <-0.6152344f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41330433f ? 
             (data[25 /* X26 */] <-0.6751216f ? 
                 (data[5 /* X6 */] <0.17708439f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6402217f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.073619865f ? 
                         (data[27 /* X28 */] <-0.20548353f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3121563f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.49270174f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[15 /* X16 */] <0.10571014f ? 
                             (data[16 /* X17 */] <-0.1487008f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37621486f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <-0.11905f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.17440948f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4609375f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.53125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.59279704f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4596294f ? 
                 (data[31 /* X32 */] <0.04590505f ? 
                     (data[9 /* X10 */] <-0.50521576f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.24458788f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3567051f ? 
                             (data[3 /* X4 */] <-0.16440313f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <0.2f ? 
                                    1.0f : 
                                     (data[7 /* X8 */] <0.20264192f ? 
                                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07143f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (data[1 /* X2 */] <-0.27080947f ? 
                                            0.0f : 
                                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24408387f ? 
                                                1.0f : 
                                                 (data[20 /* X21 */] <0.16716278f ? 
                                                    1.0f : 
                                                    0.0f)))))) : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.10460463f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10161923f ? 
                                 (data[24 /* X25 */] <-0.5541402f ? 
                                     (data[4 /* X5 */] <0.1253185f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[34 /* X35 */] <-0.3159075f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[35 /* X36 */] <-0.442858f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18770458f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25910312f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18963037f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44676125f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5961425f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5172529f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43287462f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2716535f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6235288f ? 
                                 (data[28 /* X29 */] <0.084230185f ? 
                                     (data[5 /* X6 */] <0.118004605f ? 
                                         (data[1 /* X2 */] <0.07201602f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16649316f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[15 /* X16 */] <0.110638045f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[17 /* X18 */] <0.64446896f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.37109375f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22491714f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20681483f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.10729745f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04281717f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[32 /* X33 */] <-0.62499905f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19747199f ? 
                         (data[19 /* X20 */] <-0.33267766f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10399799f ? 
                 (data[19 /* X20 */] <-0.53288364f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30877972f ? 
            0.0f : 
             (data[8 /* X9 */] <0.0036359113f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[3 /* X4 */] <-0.52132326f ? 
            1.0f : 
             (data[21 /* X22 */] <0.06836197f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10565079f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.71875f ? 
                     (data[29 /* X30 */] <0.07206209f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29094756f ? 
                            0.0f : 
                            1.0f) : 
                         (data[24 /* X25 */] <-0.4486133f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19006649f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13839512f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07100686f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X4 */] <-0.54879916f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25917065f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.026505593f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3187817f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33371383f ? 
                     (data[19 /* X20 */] <-0.5258512f ? 
                         (data[26 /* X27 */] <0.39817762f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15077895f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.29305357f ? 
             (data[14 /* X15 */] <0.10936172f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6247839f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39817762f ? 
                         (data[34 /* X35 */] <-0.7356395f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.79335225f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.2313009f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[4 /* X5 */] <0.1440323f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.335486f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.044093415f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40234375f ? 
                 (data[8 /* X9 */] <-0.18887879f ? 
                     (data[24 /* X25 */] <-0.2023838f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34208894f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28903756f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.43077776f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.108598255f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[8 /* X9 */] <0.63488024f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20211072f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.026637107f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.11365512f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[15 /* X16 */] <0.1934884f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16154589f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.1007578f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[3 /* X4 */] <-0.1451151f ? 
             (data[30 /* X31 */] <0.07268971f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79625154f ? 
                 (data[3 /* X4 */] <-0.05496865f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21346365f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42135537f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15338543f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.1440323f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14414386f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.08570595f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.09895309f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043318506f ? 
                             (data[27 /* X28 */] <-0.5026766f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.68022674f ? 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35275197f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39104137f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23727588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.66648f ? 
             (data[14 /* X15 */] <0.090095535f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <1.0383459f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0661396f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3753715f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25358596f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1768235f ? 
                                    0.0f : 
                                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18171617f ? 
                                        0.0f : 
                                         (data[8 /* X9 */] <0.15182823f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49055356f ? 
                                    0.0f : 
                                     (data[7 /* X8 */] <0.07007093f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7956901f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.10791367f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (data[34 /* X35 */] <-0.23268643f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09663521f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.05872845f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22352207f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.05078125f ? 
             (data[16 /* X17 */] <-0.6868746f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23988342f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30739495f ? 
                        0.0f : 
                         (data[17 /* X18 */] <0.046484195f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.18000141f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.12051584f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[13 /* X14 */] <0.09985422f ? 
                 (data[34 /* X35 */] <-0.56480724f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.2307499f ? 
                     (data[19 /* X20 */] <-0.25730637f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2882289f ? 
             (data[26 /* X27 */] <-0.31712908f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.043138757f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2109375f ? 
                     (data[34 /* X35 */] <-0.77095115f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26046014f ? 
                         (data[11 /* X12 */] <0.1074646f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31600648f ? 
                                 (data[18 /* X19 */] <0.0993326f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38279113f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[7 /* X8 */] <0.06413478f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34034762f ? 
             (data[31 /* X32 */] <0.17372382f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.049020834f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01717792f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.33744624f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3625186f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21771197f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08373947f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8027344f ? 
             (data[29 /* X30 */] <0.0818328f ? 
                 (data[0 /* X1 */] <-0.10606481f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.29170606f ? 
                 (data[1 /* X2 */] <-0.3089472f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[30 /* X31 */] <0.19887035f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29394826f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4699964f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.09625251f ? 
                         (data[28 /* X29 */] <0.29364583f ? 
                             (data[34 /* X35 */] <-0.36477125f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2232217f ? 
                             (data[23 /* X24 */] <0.050204553f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16716278f ? 
                                    0.0f : 
                                     (data[17 /* X18 */] <-0.28704956f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[29 /* X30 */] <0.11476191f ? 
                                1.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31369305f ? 
                                    0.0f : 
                                     (data[33 /* X34 */] <-0.36f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.084363915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21367979f ? 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (data[16 /* X17 */] <-0.34859806f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.140625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[26 /* X27 */] <-0.15764098f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.091628835f ? 
                     (data[12 /* X13 */] <0.16907379f ? 
                         (data[33 /* X34 */] <-0.21875f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08409451f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15548924f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0030823525f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.00681975f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.12879317f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.011007897f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[9 /* X10 */] <-0.38639835f ? 
                         (data[26 /* X27 */] <-0.1972293f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[17 /* X18 */] <0.015669657f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.19996955f ? 
                     (data[21 /* X22 */] <0.1893708f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.07197528f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.64522004f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2833209f ? 
                 (data[31 /* X32 */] <0.033434924f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.13943098f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5078125f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2054331f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37939528f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.23835798f ? 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.3219178f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.15186764f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.39719784f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.25290507f ? 
                        1.0f : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.49258283f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17689516f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3128122f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29554904f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15635918f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27292868f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38889802f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23296073f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.16184297f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <0.3984375f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110571295f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X1 */] <-0.14123742f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.1709133f ? 
                     (data[10 /* X11 */] <-0.09269107f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29025403f ? 
             (data[22 /* X23 */] <0.08584377f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.9104007f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.32002506f ? 
                         (data[3 /* X4 */] <-0.540345f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.625f ? 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14897013f ? 
                                    0.0f : 
                                     (data[6 /* X7 */] <0.14095111f ? 
                                        1.0f : 
                                         (data[10 /* X11 */] <-1.1406214f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16649316f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.25354838f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2512564f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.4080797f ? 
                     (data[35 /* X36 */] <-0.2742757f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22293088f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[21 /* X22 */] <0.14210172f ? 
            1.0f : 
             (data[14 /* X15 */] <0.15353036f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2297153f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.025744788f ? 
                 (data[19 /* X20 */] <-0.69138f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.11412435f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
             (data[22 /* X23 */] <0.09088079f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.46861202f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14081186f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20213607f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12059436f ? 
                         (data[26 /* X27 */] <0.14333151f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3743187f ? 
                                 (data[23 /* X24 */] <0.036260452f ? 
                                     (data[34 /* X35 */] <-0.07158875f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[0 /* X1 */] <-0.44541782f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.112677366f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.041664064f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23915504f ? 
             (data[27 /* X28 */] <-0.81160104f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.16720816f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.015625f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.4491629f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17675789f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14417733f ? 
                                 (data[8 /* X9 */] <-0.041729085f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.462356f ? 
                         (data[27 /* X28 */] <-0.56964284f ? 
                             (data[10 /* X11 */] <-0.27336872f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[0 /* X1 */] <0.17454515f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[28 /* X29 */] <0.111061506f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22598353f ? 
                     (data[5 /* X6 */] <0.1536243f ? 
                        0.0f : 
                        1.0f) : 
                     (data[18 /* X19 */] <-0.09811861f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.19159843f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.6063939f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1577798f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.076822855f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9746094f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.74768513f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5270411f ? 
                     (data[31 /* X32 */] <0.037591632f ? 
                         (data[21 /* X22 */] <0.10466462f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94630516f ? 
             (data[28 /* X29 */] <0.13978718f ? 
                 (data[29 /* X30 */] <0.104038954f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.65625f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09530958f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2205254f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17440948f ? 
                 (data[18 /* X19 */] <-0.25165543f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.23916988f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.06903136f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20173764f ? 
                 (data[12 /* X13 */] <0.116382204f ? 
                     (data[9 /* X10 */] <-0.3701541f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18021956f ? 
                 (data[31 /* X32 */] <0.13319592f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27918047f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34311008f ? 
             (data[23 /* X24 */] <0.027915971f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.48478028f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21521352f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15660308f ? 
             (data[3 /* X4 */] <-0.5023015f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.17315196f ? 
                 (data[34 /* X35 */] <-0.9255953f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43091357f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31424615f ? 
                     (data[27 /* X28 */] <0.3899098f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.061681237f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26074558f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[13 /* X14 */] <0.11521404f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14287242f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.90838045f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14866541f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.1599098f ? 
                 (data[3 /* X4 */] <-0.4529524f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12330533f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19926982f ? 
             (data[0 /* X1 */] <-0.64244705f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.15300392f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.109514266f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16644253f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19886832f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.19684538f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[6 /* X7 */] <0.14414386f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.15721712f ? 
                 (data[18 /* X19 */] <0.10659714f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.008917773f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28535867f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.059168007f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.34234878f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16961345f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16225861f ? 
                 (data[34 /* X35 */] <1.7988282E-4f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23546201f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.10739884f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2581044f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.2453843f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[33 /* X34 */] <0.46484375f ? 
                 (data[31 /* X32 */] <0.13111757f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.15880977f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2389551f ? 
                            1.0f : 
                             (data[2 /* X3 */] <0.095495f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5270421f ? 
                     (data[10 /* X11 */] <-0.13786048f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24495007f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.16194898f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.643976f ? 
                 (data[11 /* X12 */] <-0.32622167f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25773492f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.27880824f ? 
                             (data[27 /* X28 */] <0.06405524f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27983606f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.68011874f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1506289f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2833209f ? 
                     (data[25 /* X26 */] <-0.56960934f ? 
                         (data[23 /* X24 */] <0.056139942f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3513881f ? 
                     (data[23 /* X24 */] <0.15520507f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26781902f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.03028184f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20478666f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.006187722f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.08291272f ? 
                 (data[23 /* X24 */] <0.110683985f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.7263356f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.094746366f ? 
             (data[35 /* X36 */] <-0.0234375f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1384855f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25434187f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22874409f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.25f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26127192f ? 
                     (data[34 /* X35 */] <-0.63352185f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.0849386f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.7078898f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74840605f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.75f ? 
                         (data[13 /* X14 */] <0.105617575f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15006126f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[28 /* X29 */] <0.10818024f ? 
             (data[26 /* X27 */] <0.03038835f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.18305919f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25434187f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[7 /* X8 */] <0.10456986f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30171123f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2332365f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32817996f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.36614612f ? 
                     (data[35 /* X36 */] <-0.8453125f ? 
                         (data[7 /* X8 */] <0.22753194f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[31 /* X32 */] <0.08903089f ? 
            1.0f : 
             (data[6 /* X7 */] <0.13117328f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.2280793f ? 
                     (data[12 /* X13 */] <0.22721624f ? 
                        1.0f : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.3046964f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41712773f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.6290799f ? 
                 (data[12 /* X13 */] <0.19632806f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3761489f ? 
                     (data[8 /* X9 */] <-0.10221575f ? 
                         (data[34 /* X35 */] <-0.3586633f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.118887156f ? 
                                 (data[28 /* X29 */] <0.12372944f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[10 /* X11 */] <-0.9057405f ? 
                             (data[2 /* X3 */] <0.13684781f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9383607f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3028213f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[10 /* X11 */] <0.11524504f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[21 /* X22 */] <0.1008831f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008867241f ? 
                 (data[34 /* X35 */] <-0.29758358f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.256808f ? 
             (data[12 /* X13 */] <0.19723654f ? 
                 (data[5 /* X6 */] <0.1935172f ? 
                     (data[7 /* X8 */] <0.062394045f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.12584117f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4696089f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.171875f ? 
                         (data[9 /* X10 */] <-0.15791439f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.086246304f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2678632f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.51171875f ? 
                     (data[3 /* X4 */] <-0.100731f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28231394f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.671558f ? 
                                 (data[28 /* X29 */] <0.12713353f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.05517578f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29790363f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[7 /* X8 */] <0.092449605f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44676125f ? 
             (data[28 /* X29 */] <0.07210061f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5961425f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5237249f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23457259f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26166606f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15200159f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <0.17017601f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[10 /* X11 */] <-0.08760953f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6811873f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[9 /* X10 */] <-0.24715154f ? 
             (data[3 /* X4 */] <0.0032151393f ? 
                 (data[31 /* X32 */] <0.091628835f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X13 */] <0.1463619f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.2626536f ? 
                     (data[34 /* X35 */] <-0.87784064f ? 
                         (data[27 /* X28 */] <-0.27570033f ? 
                            0.0f : 
                            1.0f) : 
                         (data[32 /* X33 */] <-0.8125f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-0.31285352f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.61532724f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32777464f ? 
                 (data[15 /* X16 */] <0.10571014f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22068168f ? 
                         (data[19 /* X20 */] <-0.23257469f ? 
                             (data[12 /* X13 */] <0.12694101f ? 
                                1.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.080073394f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5214286f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (data[3 /* X4 */] <-0.55725324f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43269005f ? 
                 (data[31 /* X32 */] <0.13527428f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37258077f ? 
                 (data[23 /* X24 */] <0.027915971f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21875f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17315196f ? 
                             (data[33 /* X34 */] <0.27734375f ? 
                                 (data[21 /* X22 */] <0.14338745f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24335158f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (data[20 /* X21 */] <0.38422686f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18945312f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18116865f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[6 /* X7 */] <0.2020126f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18114248f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.17154567f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27292868f ? 
             (data[30 /* X31 */] <0.1477724f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.050001103f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.634724f ? 
             (data[33 /* X34 */] <0.1015625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40983263f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4980993f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36306205f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.240692f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.29026178f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[13 /* X14 */] <0.24956459f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[33 /* X34 */] <0.296875f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.2536071f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02819427f ? 
             (data[3 /* X4 */] <-0.2254284f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.059112664f ? 
                     (data[34 /* X35 */] <0.29794335f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19087721f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29086956f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4039696f ? 
             (data[4 /* X5 */] <0.17061234f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.19284002f ? 
                     (data[32 /* X33 */] <-0.453125f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.19996955f ? 
                             (data[32 /* X33 */] <-0.14936875f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.443384f ? 
                                 (data[9 /* X10 */] <0.019595208f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.043229435f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27809086f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X11 */] <0.02144256f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6484375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5350552f ? 
             (data[29 /* X30 */] <0.06051489f ? 
                 (data[4 /* X5 */] <0.06808935f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3555798f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.51832527f ? 
                         (data[22 /* X23 */] <0.13733321f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17242956f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <-0.0105308015f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[34 /* X35 */] <-0.84730077f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X13 */] <0.16816533f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2520716f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132791f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.033203125f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.087044895f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.38147232f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.056448933f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
                         (data[1 /* X2 */] <-0.25779393f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14041631f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.14219333f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.38529715f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10409896f ? 
                 (data[30 /* X31 */] <0.09705714f ? 
                     (data[31 /* X32 */] <0.05227756f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5759292f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10735131f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.18389758f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3456419f ? 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4445133f ? 
                     (data[21 /* X22 */] <0.06836197f ? 
                         (data[30 /* X31 */] <0.13210012f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.11732644f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3248193f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[19 /* X20 */] <-0.41609684f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[15 /* X16 */] <0.114949964f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1640625f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.353207f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47884268f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.15813616f ? 
                     (data[19 /* X20 */] <-0.399413f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.13243394f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.22698236f ? 
                 (data[10 /* X11 */] <-0.59602934f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.14214839f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[3 /* X4 */] <-0.19583979f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.61987156f ? 
             (data[14 /* X15 */] <0.11747381f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.09407635f ? 
                 (data[11 /* X12 */] <-0.23491931f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.06861829f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39830986f ? 
                         (data[18 /* X19 */] <-0.06110098f ? 
                             (data[31 /* X32 */] <0.08248408f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26287928f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.29702878f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[10 /* X11 */] <-0.5895546f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (data[32 /* X33 */] <0.01171875f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14915285f ? 
                 (data[4 /* X5 */] <0.08783452f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1604452f ? 
                 (data[33 /* X34 */] <-0.4375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.28759137f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23711361f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.053351182f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16073613f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5800023f ? 
                 (data[27 /* X28 */] <-0.18593135f ? 
                     (data[5 /* X6 */] <0.1602731f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0204884f ? 
                             (data[17 /* X18 */] <-0.41691142f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28419006f ? 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3393512f ? 
                                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29097053f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[32 /* X33 */] <-0.5859375f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33472645f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5961425f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40155995f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27389216f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                             (data[35 /* X36 */] <-0.7f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.036129072f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <-0.4461277f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15397945f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (data[30 /* X31 */] <0.09876009f ? 
             (data[34 /* X35 */] <-0.4311954f ? 
                 (data[20 /* X21 */] <0.13827588f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11156501f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1687983f ? 
                         (data[24 /* X25 */] <-0.48378894f ? 
                            1.0f : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.4181519f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.060546875f ? 
             (data[20 /* X21 */] <0.16957003f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1888685f ? 
                     (data[27 /* X28 */] <0.34197745f ? 
                         (data[29 /* X30 */] <0.33498296f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35970026f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.038987815f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[10 /* X11 */] <-1.0920644f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
                 (data[23 /* X24 */] <0.031188317f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08609145f ? 
                         (data[34 /* X35 */] <-0.63352185f ? 
                             (data[12 /* X13 */] <0.11214135f ? 
                                1.0f : 
                                 (data[25 /* X26 */] <-0.26934072f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1620317f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.75f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.1033912f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (data[20 /* X21 */] <0.15271933f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12169479f ? 
             (data[31 /* X32 */] <0.14462686f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13189161f ? 
                     (data[2 /* X3 */] <-0.1849499f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.12649775f ? 
                 (data[15 /* X16 */] <0.1888685f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.13905418f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26866424f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33870253f ? 
             (data[34 /* X35 */] <-0.6262299f ? 
                 (data[28 /* X29 */] <0.17361996f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07045645f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19742419f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.06668859f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.13118453f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09645585f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.052216727f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X5 */] <0.11137684f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15294027f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22704014f ? 
                 (data[23 /* X24 */] <0.0737288f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25290042f ? 
                         (data[0 /* X1 */] <-0.17641003f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.53309286f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6272776f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28694743f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.008670047f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[4 /* X5 */] <0.09960568f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17657031f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.81330323f ? 
                 (data[14 /* X15 */] <0.090095535f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.13746326f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21993311f ? 
                            0.0f : 
                            1.0f) : 
                         (data[24 /* X25 */] <-0.34308636f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.38392884f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[30 /* X31 */] <0.17175715f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.37119716f ? 
                     (data[15 /* X16 */] <0.07491075f ? 
                         (data[21 /* X22 */] <0.17121947f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <0.8607092f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22349483f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.45724064f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23379415f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23431736f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.39602524f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30254132f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.61479425f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19644172f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.69140625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21689124f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09786592f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X1 */] <-0.34054887f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.34187666f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[6 /* X7 */] <0.13915518f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.096470326f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.68705523f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18048492f ? 
                        0.0f : 
                        1.0f))) : 
             (data[27 /* X28 */] <-0.21037158f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.24016263f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
                        1.0f : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.21215989f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.047770653f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31095538f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (data[7 /* X8 */] <0.06079902f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20263427f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0243484f ? 
                     (data[35 /* X36 */] <-0.5f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.38817093f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.17525558f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18252333f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44747764f ? 
                         (data[14 /* X15 */] <0.12904644f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17307824f ? 
             (data[3 /* X4 */] <-0.5234368f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.3221959f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.43278065f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18064588f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.18268985f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15960823f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[29 /* X30 */] <0.066732615f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14138547f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.1184191f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42824182f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2109375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.35627723f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24890622f ? 
             (data[11 /* X12 */] <-0.05231456f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
             (data[27 /* X28 */] <-0.16149114f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18418497f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.21071364f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.67527556f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[17 /* X18 */] <-0.18819965f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1953125f ? 
                 (data[16 /* X17 */] <-0.4641139f ? 
                     (data[1 /* X2 */] <-0.6729892f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16017103f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.265625f ? 
                         (data[33 /* X34 */] <0.12579718f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.348181f ? 
             (data[3 /* X4 */] <-0.1810451f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.171875f ? 
                     (data[6 /* X7 */] <0.12617128f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.16907379f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12144384f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2388091f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[19 /* X20 */] <-0.3393512f ? 
                                 (data[33 /* X34 */] <0.1999975f ? 
                                    1.0f : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.025390625f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30505034f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3125f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12354849f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.503125f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10647294f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3307722f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0090755f ? 
                     (data[12 /* X13 */] <0.089127935f ? 
                         (data[33 /* X34 */] <0.12980656f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19996955f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023437858f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.11292142f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.018029107f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[15 /* X16 */] <0.10494016f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0932184f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1484375f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49275115f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.26236835f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24758674f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.25000155f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32419997f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15112802f ? 
                 (data[12 /* X13 */] <0.13818562f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22159256f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23408498f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[33 /* X34 */] <-0.012021289f ? 
                     (data[5 /* X6 */] <0.13700224f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10725012f ? 
             (data[23 /* X24 */] <0.0262798f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17126723f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.092250265f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.13607831f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1318876f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21875f ? 
             (data[6 /* X7 */] <0.13217102f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21086368f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                         (data[2 /* X3 */] <-0.2939779f ? 
                             (data[30 /* X31 */] <0.22825827f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.059713762f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.42170793f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4401693f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14740938f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <0.22265625f ? 
             (data[27 /* X28 */] <-0.6258553f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27809086f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.104063116f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47240755f ? 
             (data[23 /* X24 */] <0.033642575f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[26 /* X27 */] <-0.5285355f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.6121184f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2997908f ? 
                     (data[10 /* X11 */] <-0.5895546f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17384277f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38240582f ? 
                             (data[4 /* X5 */] <0.09299864f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.019595208f ? 
                                    0.0f : 
                                     (data[14 /* X15 */] <0.14485209f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15851128f ? 
                                    0.0f : 
                                     (data[6 /* X7 */] <0.17195094f ? 
                                         (data[31 /* X32 */] <0.13568994f ? 
                                             (data[16 /* X17 */] <-0.261539f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        0.0f))) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24852979f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.328125f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[15 /* X16 */] <0.06336098f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30859375f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.18593135f ? 
                 (data[17 /* X18 */] <-0.40882275f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17832541f ? 
                         (data[30 /* X31 */] <0.13213018f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.6039539f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <-0.32901612f ? 
                                    1.0f : 
                                     (data[12 /* X13 */] <0.18697481f ? 
                                        1.0f : 
                                         (data[6 /* X7 */] <0.14095111f ? 
                                            1.0f : 
                                             (data[35 /* X36 */] <-0.8f ? 
                                                1.0f : 
                                                0.0f)))))) : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18811162f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.14000258f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.17624602f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[17 /* X18 */] <0.03184976f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.63563144f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14899273f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6108199f ? 
                 (data[12 /* X13 */] <0.090944886f ? 
                     (data[30 /* X31 */] <0.11544513f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.106242396f ? 
                 (data[17 /* X18 */] <-0.30113295f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.13004453f ? 
                     (data[7 /* X8 */] <0.16102791f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.70093006f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.524375f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <0.13125f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19935897f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.01236977f ? 
                 (data[18 /* X19 */] <0.048482977f ? 
                     (data[14 /* X15 */] <0.108347714f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.13622583f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13642332f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17575434f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.54687124f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.102630205f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09365766f ? 
                     (data[27 /* X28 */] <-0.08817047f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13927197f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35902303f ? 
                 (data[14 /* X15 */] <0.10023563f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4388956f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (data[25 /* X26 */] <-0.24232958f ? 
             (data[3 /* X4 */] <-0.5318909f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.013205477f ? 
                     (data[34 /* X35 */] <-0.6420456f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <0.059271604f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.08817047f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30004773f ? 
                 (data[18 /* X19 */] <-0.10750887f ? 
                     (data[7 /* X8 */] <0.064605184f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.49581036f ? 
                         (data[4 /* X5 */] <0.17558055f ? 
                             (data[30 /* X31 */] <0.1716196f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.17273208f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.32720298f ? 
                         (data[29 /* X30 */] <0.25624412f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.10725012f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.050374854f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.106177315f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.085840985f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21017978f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.12445014f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2395918f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.19650342f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24986508f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X2 */] <-0.7264398f ? 
             (data[1 /* X2 */] <-0.91894835f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.050822385f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0471915f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.65710235f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.1106409f ? 
                             (data[34 /* X35 */] <-0.5113625f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <0.061588027f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.39757106f ? 
                                     (data[3 /* X4 */] <0.49443877f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (data[19 /* X20 */] <-0.3681308f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.85881114f ? 
                 (data[0 /* X1 */] <-0.053305905f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.17730041f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.90936196f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13098393f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30231762f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (data[23 /* X24 */] <0.059003245f ? 
                 (data[19 /* X20 */] <-0.07200095f ? 
                     (data[3 /* X4 */] <-0.15145569f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.55819094f ? 
                    1.0f : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.43164062f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2757961f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.045989648f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15934023f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14580326f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.4692526f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.171875f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.063911766f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.00855547f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20887911f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041552186f ? 
                 (data[29 /* X30 */] <0.06850911f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.35390693f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.098271385f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23660755f ? 
             (data[20 /* X21 */] <0.08451413f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10540306f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71023124f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22027956f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94630516f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060874157f ? 
             (data[0 /* X1 */] <-0.21158263f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.3125f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84766054f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.08672873f ? 
                         (data[32 /* X33 */] <-0.08691406f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23777433f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29595023f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.37228954f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.36572078f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84766054f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21867782f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.45911348f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[18 /* X19 */] <0.14085947f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <0.189387f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <0.13003042f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.09339039f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.076694235f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.25457948f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[11 /* X12 */] <-0.43464327f ? 
             (data[0 /* X1 */] <-0.22037579f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8403763f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1605514f ? 
             (data[34 /* X35 */] <-0.7213239f ? 
                 (data[25 /* X26 */] <-0.24232958f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.062957264f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14550999f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19511983f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65234375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[11 /* X12 */] <-0.029488966f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
            0.0f : 
             (data[29 /* X30 */] <0.12535687f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.1180299f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.13118453f ? 
        0.01369863f : 
         (data[23 /* X24 */] <0.061048463f ? 
             (data[6 /* X7 */] <0.14115065f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14251344f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.007342965f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33203125f ? 
                 (data[22 /* X23 */] <0.10151447f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.5443852f ? 
                         (data[27 /* X28 */] <-0.16768795f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.4326353f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.14852658f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[29 /* X30 */] <0.08849464f ? 
             (data[0 /* X1 */] <-0.14709952f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15471932f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                     (data[29 /* X30 */] <0.07206209f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.022725f ? 
                             (data[31 /* X32 */] <0.08248408f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5232839f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[25 /* X26 */] <-0.19076288f ? 
                                    0.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.33962616f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2726397f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <0.21012701f ? 
                 (data[21 /* X22 */] <0.17121947f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8492964f ? 
             (data[10 /* X11 */] <-0.82104784f ? 
                 (data[27 /* X28 */] <-0.051339585f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26794025f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23583476f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4908085f ? 
                            0.0f : 
                             (data[2 /* X3 */] <0.2884711f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[19 /* X20 */] <0.3198569f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30504102f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.57445f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27823666f ? 
             (data[1 /* X2 */] <-0.30316874f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1511145f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10027283f ? 
                         (data[23 /* X24 */] <0.07700114f ? 
                             (data[34 /* X35 */] <-0.09318225f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29754692f ? 
                         (data[11 /* X12 */] <-0.46957266f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.11669284f ? 
                     (data[35 /* X36 */] <-0.3125f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24419452f ? 
                            1.0f : 
                            0.0f) : 
                         (data[34 /* X35 */] <-0.46306843f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <-0.2939779f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.15872143f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22323185f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23779933f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19810832f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1039355f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3570185f ? 
             (data[19 /* X20 */] <-0.399413f ? 
                 (data[6 /* X7 */] <0.15972719f ? 
                     (data[11 /* X12 */] <-0.37187287f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.06704634f ? 
                             (data[13 /* X14 */] <0.1652729f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[13 /* X14 */] <0.18238932f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25003216f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28815746f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.122458346f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5800772f ? 
             (data[27 /* X28 */] <-0.55742276f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20734814f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.09884605f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.60931623f ? 
             (data[28 /* X29 */] <0.15492289f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.02185374f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37542188f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.36989203f ? 
                         (data[0 /* X1 */] <-0.5281361f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2534661f ? 
                                0.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23750623f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.534526f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1031799f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.32628253f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.10995699f ? 
                     (data[1 /* X2 */] <-0.15338327f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.48227727f ? 
             (data[22 /* X23 */] <0.12613986f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[3 /* X4 */] <0.007323172f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.70093006f ? 
                     (data[27 /* X28 */] <-0.6336147f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.38920313f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.05006176f ? 
                 (data[35 /* X36 */] <0.21875f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0737288f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.3423795f ? 
                     (data[1 /* X2 */] <-0.4372554f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.45288765f ? 
                         (data[10 /* X11 */] <0.08798659f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6062239f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31947982f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
                 (data[7 /* X8 */] <0.031548135f ? 
                     (data[13 /* X14 */] <0.120012276f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5394234f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.2300857f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X5 */] <0.18504149f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22887565f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.34686548f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32197478f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[12 /* X13 */] <0.14499919f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.24947593f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.012574224f ? 
                     (data[19 /* X20 */] <-0.31599385f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26013395f ? 
                            1.0f : 
                             (data[0 /* X1 */] <0.0025653595f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2281077f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33337826f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.523808f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <-0.10388972f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)))) : 
         (data[30 /* X31 */] <0.05965452f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2793711f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36793813f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.75f ? 
                         (data[13 /* X14 */] <0.14400345f ? 
                             (data[27 /* X28 */] <-0.25240877f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.65159786f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[18 /* X19 */] <0.434712f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21359903f ? 
                     (data[10 /* X11 */] <-0.29595342f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.225739f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29915738f ? 
                 (data[34 /* X35 */] <-0.81676096f ? 
                     (data[32 /* X33 */] <-0.1444425f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.83966583f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20591739f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.020298079f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.19152255f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[0 /* X1 */] <0.099108726f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.390625f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3081107f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27280572f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22174975f ? 
                         (data[1 /* X2 */] <-0.21727917f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.34791857f ? 
                                 (data[22 /* X23 */] <0.17673384f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33158883f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08535511f ? 
             (data[13 /* X14 */] <0.14520301f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.2574934f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11475826f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.07731775f ? 
            1.0f : 
             (data[6 /* X7 */] <0.084279664f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.054455422f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.6300026f ? 
                     (data[3 /* X4 */] <0.102167785f ? 
                         (data[34 /* X35 */] <-0.7922763f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.28596294f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41150498f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26279598f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37390926f ? 
                     (data[23 /* X24 */] <0.050822385f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19814502f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.74977344f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <0.36799294f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.4449977f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.226762f ? 
            1.0f : 
             (data[22 /* X23 */] <0.12446085f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[32 /* X33 */] <-0.31054688f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1303204f ? 
                 (data[16 /* X17 */] <-0.4893321f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.52464527f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <0.035223667f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.24947593f ? 
                 (data[3 /* X4 */] <-0.1599098f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.07902133f ? 
                         (data[12 /* X13 */] <0.13362196f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18222058f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26870775f ? 
                                 (data[11 /* X12 */] <0.1805065f ? 
                                     (data[18 /* X19 */] <-0.24612893f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16168466f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40625f ? 
                         (data[13 /* X14 */] <0.08642464f ? 
                            1.0f : 
                             (data[0 /* X1 */] <-0.023611467f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3f ? 
                                     (data[20 /* X21 */] <0.18050987f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.46875f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16771108f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[12 /* X13 */] <0.09775846f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.75990796f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4566969f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.55904204f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[19 /* X20 */] <-0.3493615f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5825298f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3257051f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2269041f ? 
                        0.0f : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.1877315f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5094558f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[33 /* X34 */] <-0.35742188f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18807921f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28224847f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.114949964f ? 
                     (data[14 /* X15 */] <0.09617959f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.118258536f ? 
                             (data[21 /* X22 */] <0.0756225f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23257469f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1850959f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.44300762f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2763459f ? 
                 (data[31 /* X32 */] <0.03338818f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21737638f ? 
                         (data[34 /* X35 */] <-0.87784064f ? 
                             (data[4 /* X5 */] <0.10271934f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.4388956f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.112260096f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20426819f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26857534f ? 
             (data[19 /* X20 */] <-0.43278065f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.013949138f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20801666f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.16610278f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.13572599f ? 
             (data[3 /* X4 */] <-0.49384737f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12804118f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.8130117f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26124465f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18619394f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.16609408f ? 
                     (data[1 /* X2 */] <-0.280055f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[2 /* X3 */] <-0.12154232f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.19570744f ? 
                 (data[3 /* X4 */] <0.08525955f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21017978f ? 
            0.0f : 
             (data[4 /* X5 */] <0.16529633f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18029514f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38657707f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41150498f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.38400444f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18913244f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26987177f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.46578532f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[31 /* X32 */] <0.05780179f ? 
                                1.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3216659f ? 
                                     (data[29 /* X30 */] <0.20376244f ? 
                                         (data[1 /* X2 */] <-0.15986334f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[31 /* X32 */] <0.13172919f ? 
                                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.033607192f ? 
                                                0.0f : 
                                                 (data[4 /* X5 */] <0.1771757f ? 
                                                    1.0f : 
                                                    0.0f)) : 
                                            0.0f)) : 
                                     (data[16 /* X17 */] <-0.122195676f ? 
                                        0.0f : 
                                         (data[32 /* X33 */] <-0.4f ? 
                                            1.0f : 
                                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.292305f ? 
                                                0.0f : 
                                                1.0f)))))))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.58984375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4609375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3162198f ? 
             (data[27 /* X28 */] <-0.5378705f ? 
                 (data[34 /* X35 */] <-0.9032739f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.70191956f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.04590505f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3277307f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.2522143f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[13 /* X14 */] <0.08791747f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14580326f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28392118f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27842325f ? 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42857f ? 
                                             (data[13 /* X14 */] <0.105706014f ? 
                                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14095111f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f) : 
                                            1.0f) : 
                                         (data[10 /* X11 */] <-0.12640981f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.072896115f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21788877f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)))) : 
             (data[6 /* X7 */] <0.22795375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[25 /* X26 */] <-0.5707604f ? 
             (data[15 /* X16 */] <0.09493036f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.72566956f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17244639f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3895629f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.089212246f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <0.038120233f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35973763f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.315146f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (data[33 /* X34 */] <-0.43554688f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.32541382f ? 
                 (data[14 /* X15 */] <0.09415157f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23172389f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.23454449f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[1 /* X2 */] <-0.4144038f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.015625f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7427971f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7713109f ? 
                 (data[13 /* X14 */] <0.16799462f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16484578f ? 
                             (data[22 /* X23 */] <0.1830807f ? 
                                 (data[5 /* X6 */] <0.17024633f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.047785092f ? 
                                         (data[6 /* X7 */] <0.19203523f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14826398f ? 
             (data[28 /* X29 */] <0.10328338f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24670774f ? 
                     (data[19 /* X20 */] <-0.43278065f ? 
                         (data[22 /* X23 */] <0.11198764f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.15390489f ? 
                 (data[21 /* X22 */] <0.12735377f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31801662f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15777607f ? 
                         (data[18 /* X19 */] <-0.13645245f ? 
                             (data[14 /* X15 */] <0.17081074f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[3 /* X4 */] <7.183925E-4f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.4071927f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
                 (data[1 /* X2 */] <0.0077872453f ? 
                     (data[1 /* X2 */] <0.0020612327f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9105343f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21679688f ? 
            0.0f : 
             (data[3 /* X4 */] <0.10639484f ? 
                 (data[4 /* X5 */] <0.1581676f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.38920313f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3362553f ? 
                         (data[5 /* X6 */] <0.19684161f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[33 /* X34 */] <-0.69140625f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4121109f ? 
                 (data[33 /* X34 */] <-0.84375f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.008177916f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3857783f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.50112903f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11166111f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                     (data[10 /* X11 */] <-0.634724f ? 
                                         (data[22 /* X23 */] <0.16566676f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29982382f ? 
                                            0.0f : 
                                             (data[9 /* X10 */] <-0.10388972f ? 
                                                 (data[14 /* X15 */] <0.20974874f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f))) : 
                                     (data[1 /* X2 */] <0.16268958f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34375f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18898688f ? 
             (data[25 /* X26 */] <-0.6260105f ? 
                 (data[5 /* X6 */] <0.10874478f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.06063942f ? 
                     (data[33 /* X34 */] <-0.921875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20978154f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.21525963f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17832541f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15392593f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2628497f ? 
                                 (data[11 /* X12 */] <-0.5816878f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31358337f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[3 /* X4 */] <0.23743363f ? 
                             (data[29 /* X30 */] <0.24475141f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17614129f ? 
             (data[34 /* X35 */] <-0.5113625f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2807531f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1893708f ? 
                     (data[1 /* X2 */] <-0.8457037f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.17736377f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1731124f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[13 /* X14 */] <0.08882376f ? 
             (data[25 /* X26 */] <-0.4326353f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.019267285f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08681817f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.18816115f ? 
                         (data[14 /* X15 */] <0.13674f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[1 /* X2 */] <-0.32628253f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21086368f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.86011016f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.25676194f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.15583944f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4765625f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2354994f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18210664f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0030457173f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29634425f ? 
             (data[15 /* X16 */] <0.09031045f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.118199155f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                     (data[13 /* X14 */] <0.16437408f ? 
                         (data[27 /* X28 */] <-0.04906611f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.19105391f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.15403256f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13184734f ? 
                 (data[31 /* X32 */] <0.16628897f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
             (data[32 /* X33 */] <-0.7265625f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.109514266f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24287255f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08778558f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                         (data[33 /* X34 */] <0.27666718f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.11553012f ? 
                                 (data[2 /* X3 */] <0.043229435f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08877048f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2421875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
                     (data[28 /* X29 */] <0.18252333f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.22474654f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15392306f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.77095115f ? 
                     (data[31 /* X32 */] <0.11419467f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[31 /* X32 */] <0.08903089f ? 
            1.0f : 
             (data[15 /* X16 */] <0.1734688f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1483407f ? 
                     (data[29 /* X30 */] <0.20028706f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.08203125f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.60931623f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.108480185f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.50858647f ? 
                 (data[21 /* X22 */] <0.09675296f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07538167f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.089127935f ? 
                         (data[3 /* X4 */] <-0.100731f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.38744566f ? 
                             (data[17 /* X18 */] <-0.071702905f ? 
                                1.0f : 
                                0.0f) : 
                             (data[8 /* X9 */] <-0.3804544f ? 
                                1.0f : 
                                 (data[22 /* X23 */] <0.10107684f ? 
                                     (data[9 /* X10 */] <-0.0058651227f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                        0.0f : 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1895559f ? 
                                            0.0f : 
                                             (data[7 /* X8 */] <0.12575404f ? 
                                                1.0f : 
                                                0.0f)))))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23864803f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20797054f ? 
                 (data[15 /* X16 */] <0.062591f ? 
                     (data[34 /* X35 */] <-0.09798602f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0035582166f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18252333f ? 
                            1.0f : 
                             (data[16 /* X17 */] <-0.59528023f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26484326f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16283742f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.3393512f ? 
                                 (data[13 /* X14 */] <0.18199284f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.09009052f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X9 */] <0.10192674f ? 
                     (data[25 /* X26 */] <-0.09499613f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.12895642f ? 
                 (data[35 /* X36 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36042646f ? 
                        1.0f : 
                         (data[2 /* X3 */] <0.29358032f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1604452f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2733325f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.396023f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5480159f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.16319638f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.19255622f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28315264f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.39453125f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
             (data[11 /* X12 */] <-0.21209371f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1171875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.14184873f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.2023838f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3828125f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.07451501f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7558594f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36518332f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6567865f ? 
                     (data[16 /* X17 */] <-0.71629584f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.35647276f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3854828f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[2 /* X3 */] <-0.28439814f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14156762f ? 
                 (data[18 /* X19 */] <-0.14290018f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24199554f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3211909f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.12179375f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.08833194f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42457017f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63255996f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.26171875f ? 
             (data[33 /* X34 */] <-0.73828125f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.18483298f ? 
                     (data[8 /* X9 */] <0.06412257f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.50869143f ? 
                 (data[13 /* X14 */] <0.19198579f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[26 /* X27 */] <-0.17667411f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.04090176f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3576938f ? 
             (data[25 /* X26 */] <-0.59838545f ? 
                 (data[0 /* X1 */] <0.06393612f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.09255979f ? 
                     (data[20 /* X21 */] <0.096550345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6640625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.54045504f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.61987156f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.5285355f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77484083f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.90625f ? 
                             (data[21 /* X22 */] <0.0756225f ? 
                                 (data[33 /* X34 */] <-0.28515625f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37148362f ? 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28762472f ? 
                                        0.0f : 
                                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3463562f ? 
                                            0.0f : 
                                             (data[25 /* X26 */] <-0.03877658f ? 
                                                1.0f : 
                                                0.0f))) : 
                                     (data[11 /* X12 */] <0.3996322f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[26 /* X27 */] <0.014460467f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.2634513f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.119140625f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.60387266f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.9087402f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3131959f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17416178f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[33 /* X34 */] <-0.36328125f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.17024633f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.20163666f ? 
                         (data[24 /* X25 */] <-0.34308636f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27848902f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.37021834f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.16035242f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                             (data[21 /* X22 */] <0.09498391f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9839674f ? 
                                     (data[25 /* X26 */] <-0.2840591f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.55726135f ? 
             (data[27 /* X28 */] <-0.48410207f ? 
                 (data[0 /* X1 */] <0.36828357f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.06613178f ? 
                     (data[12 /* X13 */] <0.17997551f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.15901922f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.6785788f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9520116f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.43663558f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21689388f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[19 /* X20 */] <-0.38272917f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.56696993f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.4609375f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.24555622f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.099828094f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33195543f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2971443f ? 
             (data[5 /* X6 */] <0.06718967f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.7686061f ? 
                     (data[4 /* X5 */] <0.1774472f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.054455422f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.04255644f ? 
                             (data[10 /* X11 */] <-0.45792398f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.052059293f ? 
                                    0.0f : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21445444f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.11932534f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19271031f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[0 /* X1 */] <0.14014344f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.054325346f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.31058773f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[19 /* X20 */] <-0.50994337f ? 
             (data[27 /* X28 */] <0.024254555f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.4574072f ? 
                 (data[2 /* X3 */] <-0.38222057f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.18104331f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06994141f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.48962033f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15087815f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.33730468f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28680503f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
             (data[34 /* X35 */] <-0.5800772f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2043571f ? 
                     (data[0 /* X1 */] <0.08152242f ? 
                         (data[11 /* X12 */] <0.016162222f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <0.102167785f ? 
                             (data[11 /* X12 */] <0.034422696f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X11 */] <0.42111102f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[5 /* X6 */] <0.16899969f ? 
            0.0f : 
            1.0f) : 
         (data[21 /* X22 */] <0.07705948f ? 
             (data[27 /* X28 */] <-0.02462589f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37054196f ? 
                 (data[21 /* X22 */] <0.09932906f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                         (data[28 /* X29 */] <0.10494624f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.4350714f ? 
                         (data[4 /* X5 */] <0.12672861f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008158994f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.35f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[8 /* X9 */] <0.093985826f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4609375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03445419f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.019290771f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.1908194f ? 
             (data[30 /* X31 */] <0.16654307f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.0625f ? 
                     (data[32 /* X33 */] <-0.203125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36467806f ? 
                         (data[15 /* X16 */] <0.15656461f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.043229435f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24097158f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.23760885f ? 
                 (data[3 /* X4 */] <-0.024643954f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.328125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0960518f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.37251008f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15962784f ? 
             (data[10 /* X11 */] <-0.82104784f ? 
                 (data[12 /* X13 */] <0.19269416f ? 
                    1.0f : 
                    0.0f) : 
                 (data[26 /* X27 */] <-0.123098515f ? 
                     (data[4 /* X5 */] <0.12580599f ? 
                         (data[33 /* X34 */] <-0.53125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.14464395f ? 
                 (data[11 /* X12 */] <-0.45176244f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15485257f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.21101409f ? 
                     (data[1 /* X2 */] <-0.2140126f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.09714043f ? 
                            1.0f : 
                             (data[26 /* X27 */] <-0.16047548f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[10 /* X11 */] <0.28560278f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27308142f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
                 (data[24 /* X25 */] <-0.668461f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15524259f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.5652346E-4f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.14338745f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16907379f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <-0.49902686f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.052734375f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21010266f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27224708f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <0.06889453f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3126231f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.06461511f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[15 /* X16 */] <0.10571014f ? 
             (data[19 /* X20 */] <-0.43278065f ? 
                 (data[6 /* X7 */] <0.1691449f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[22 /* X23 */] <0.1742713f ? 
                 (data[15 /* X16 */] <0.16000167f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63874584f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31037962f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.10012934f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.13116333f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27397567f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3289655f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38401628f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.19179189f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[29 /* X30 */] <0.17154567f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05859375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1388498f ? 
            0.0f : 
             (data[30 /* X31 */] <0.17801404f ? 
                 (data[26 /* X27 */] <0.14333151f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.12502052f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41330433f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35973763f ? 
                 (data[25 /* X26 */] <-0.6290799f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4326053f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25628746f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.634724f ? 
                                1.0f : 
                                 (data[16 /* X17 */] <-0.37669083f ? 
                                     (data[18 /* X19 */] <0.10021531f ? 
                                         (data[35 /* X36 */] <-0.15f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[20 /* X21 */] <0.20265539f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[31 /* X32 */] <0.17306589f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.17440948f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.84375f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11872354f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.05951106f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.07053087f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[2 /* X3 */] <-0.23330611f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27075458f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.22807495f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.16775303f ? 
             (data[30 /* X31 */] <0.086246304f ? 
                 (data[30 /* X31 */] <0.0670357f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.13303602f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18744278f ? 
                 (data[7 /* X8 */] <0.105204225f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.32549855f ? 
                         (data[10 /* X11 */] <0.08798659f ? 
                             (data[32 /* X33 */] <0.0f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[6 /* X7 */] <0.13032877f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.3487953f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18768431f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <-0.78305686f ? 
                                        1.0f : 
                                         (data[32 /* X33 */] <-0.306668f ? 
                                             (data[13 /* X14 */] <0.2193811f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f))))))) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24727055f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22422636f ? 
                        1.0f : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.1431218f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[11 /* X12 */] <1.0718459f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41845036f ? 
             (data[19 /* X20 */] <-0.6527172f ? 
                 (data[25 /* X26 */] <-0.08271834f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.364425f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.12254386f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4697821f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55202734f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.24531917f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3895629f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24926679f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1212321f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.14585531f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17654873f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18471065f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21997185f ? 
                     (data[27 /* X28 */] <-0.24458788f ? 
                         (data[15 /* X16 */] <0.097384684f ? 
                            1.0f : 
                            0.0f) : 
                         (data[32 /* X33 */] <-0.32812765f ? 
                             (data[21 /* X22 */] <0.15835509f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.66715676f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12019819f ? 
                         (data[33 /* X34 */] <0.125f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.4803057f ? 
                             (data[32 /* X33 */] <0.75f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.18172762f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2507692f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.14962076f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24322265f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20021756f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.1194019f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.5882221f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.1756677f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10648013f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16777445f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.102097385f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.124583796f ? 
                 (data[25 /* X26 */] <-0.1519998f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20041856f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21009502f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5945719f ? 
                 (data[3 /* X4 */] <-0.49807444f ? 
                     (data[32 /* X33 */] <-0.53125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18021956f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14871398f ? 
                        1.0f : 
                         (data[27 /* X28 */] <0.6420777f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.10670872f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39238566f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.359375f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06181341f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.13598424f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.4252925f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14740938f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24391754f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[26 /* X27 */] <-0.14047438f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26769614f ? 
             (data[31 /* X32 */] <0.06913201f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.035030823f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14498185f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23984781f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56608623f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23803426f ? 
                        0.0f : 
                        1.0f))) : 
             (data[31 /* X32 */] <0.15843499f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20416439f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.13440698f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.10565911f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37635967f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077990696f ? 
             (data[10 /* X11 */] <-0.80410933f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23814103f ? 
             (data[31 /* X32 */] <0.045793142f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5079653f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.62028205f ? 
                         (data[33 /* X34 */] <-0.40625f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.108906984f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27662742f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18982221f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30795944f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20147169f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0308282f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.296875f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4273864f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.36188218f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38074073f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4234083f ? 
             (data[31 /* X32 */] <0.033434924f ? 
                 (data[26 /* X27 */] <0.06803607f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20501399f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.15359992f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.43663558f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.081007674f ? 
            1.0f : 
             (data[6 /* X7 */] <0.15013029f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16878353f ? 
             (data[9 /* X10 */] <-0.44250855f ? 
                 (data[26 /* X27 */] <0.08541194f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20113535f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.109375f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.008670047f ? 
                             (data[10 /* X11 */] <-0.46027207f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[15 /* X16 */] <0.06055309f ? 
                         (data[29 /* X30 */] <0.07916806f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[18 /* X19 */] <-0.25165543f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15816653f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.08024023f ? 
                     (data[27 /* X28 */] <-0.10772265f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.118149616f ? 
                         (data[13 /* X14 */] <0.106272474f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.57836777f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24892546f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2050727f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.08589925f ? 
                                    0.0f : 
                                    1.0f))))))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37429297f ? 
             (data[24 /* X25 */] <-0.65087324f ? 
                 (data[15 /* X16 */] <0.10571014f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10266678f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (data[23 /* X24 */] <0.0262798f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.08584377f ? 
                     (data[33 /* X34 */] <-0.703125f ? 
                        0.0f : 
                        1.0f) : 
                     (data[24 /* X25 */] <-0.73001844f ? 
                         (data[15 /* X16 */] <0.095840424f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3671308f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06203546f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.15816449f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3f ? 
                                        0.0f : 
                                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7375f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19352457f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.6144345f ? 
                 (data[12 /* X13 */] <0.17815855f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (data[18 /* X19 */] <-0.034144938f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.12142518f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.1149465f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07773996f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[7 /* X8 */] <0.026543582f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37887496f ? 
                 (data[33 /* X34 */] <-0.84375f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15090428f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.14137231f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[8 /* X9 */] <-0.13245907f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.32629538f ? 
                             (data[33 /* X34 */] <-0.421275f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1074646f ? 
                                    0.0f : 
                                     (data[13 /* X14 */] <0.23762889f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                         (data[10 /* X11 */] <-0.634724f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19819324f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.375f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20255765f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[15 /* X16 */] <0.06336098f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.47736493f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21357784f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3865937f ? 
                     (data[14 /* X15 */] <0.101005375f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (data[33 /* X34 */] <-0.746875f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <-0.11556585f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[24 /* X25 */] <-0.31272706f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4039696f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20259196f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28369224f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.39552173f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <0.07844342f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <0.015625f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.41015625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (data[14 /* X15 */] <0.12051584f ? 
             (data[34 /* X35 */] <-0.09143965f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.66860557f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.09385185f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.66098523f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15390125f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.11656909f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019926572f ? 
            0.0f : 
             (data[24 /* X25 */] <0.026257869f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[1 /* X2 */] <-0.280055f ? 
             (data[27 /* X28 */] <-0.3912292f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.46364322f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2521336f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.347543f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.17252944f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.45410028f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15861091f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12072579f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49438623f ? 
                     (data[16 /* X17 */] <-0.83398074f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46988925f ? 
                             (data[18 /* X19 */] <-0.3464599f ? 
                                1.0f : 
                                 (data[0 /* X1 */] <-0.16710481f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4499995f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6466344f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17324437f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28402168f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1602731f ? 
                     (data[23 /* X24 */] <0.031188317f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.1764516f ? 
                         (data[32 /* X33 */] <-0.75f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.110638045f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1946816f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.625f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47844255f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.16559342f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.20125109f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0018563041f ? 
                     (data[31 /* X32 */] <0.20385996f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.126314f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.11340999f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1864023f ? 
             (data[30 /* X31 */] <0.18218529f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.5800772f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
        0.6666667f : 
         (data[23 /* X24 */] <0.053276643f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15314223f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21117872f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.5699389f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.38751382f ? 
                 (data[19 /* X20 */] <-0.4358123f ? 
                     (data[1 /* X2 */] <-0.37251008f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.13406585f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (data[32 /* X33 */] <-0.19921875f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16649935f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.256808f ? 
             (data[13 /* X14 */] <0.22077519f ? 
                 (data[19 /* X20 */] <-0.32632002f ? 
                     (data[33 /* X34 */] <0.26922813f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.14982274f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46875f ? 
                        0.0f : 
                        1.0f))) : 
             (data[13 /* X14 */] <0.08882376f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.34939632f ? 
                     (data[31 /* X32 */] <0.04590505f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.060440015f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.007481685f ? 
                                 (data[3 /* X4 */] <-0.19460768f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (data[31 /* X32 */] <0.04590505f ? 
                         (data[5 /* X6 */] <0.13114153f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31689978f ? 
                            0.0f : 
                             (data[26 /* X27 */] <0.44914684f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12994426f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.20549622f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32244864f ? 
                 (data[5 /* X6 */] <0.16525972f ? 
                     (data[18 /* X19 */] <0.1328317f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19480555f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.26203212f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2594966f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43872133f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12414897f ? 
             (data[33 /* X34 */] <-0.3515625f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06567094f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20781402f ? 
                     (data[27 /* X28 */] <-0.44010967f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.1550628f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37750697f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1344696f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.15937938f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.91015625f ? 
             (data[31 /* X32 */] <0.098903075f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008867241f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23950484f ? 
                         (data[19 /* X20 */] <-0.43278065f ? 
                             (data[3 /* X4 */] <-0.26561895f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[18 /* X19 */] <-0.046939675f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19726731f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46740496f ? 
                     (data[14 /* X15 */] <0.101005375f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20721287f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X9 */] <0.06412257f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[9 /* X10 */] <-0.9104007f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.399413f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24391754f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25822148f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.472773f ? 
                 (data[13 /* X14 */] <0.10801669f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.82421875f ? 
                 (data[30 /* X31 */] <0.22806917f ? 
                     (data[7 /* X8 */] <0.105204225f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.17456698f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39600563f ? 
         (data[34 /* X35 */] <-0.9770951f ? 
             (data[9 /* X10 */] <0.054325346f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16102791f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.17384277f ? 
                         (data[22 /* X23 */] <0.15283535f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40636614f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.47251996f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.13537438f ? 
            0.0f : 
             (data[22 /* X23 */] <0.16926642f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21484375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30078852f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4287191f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[23 /* X24 */] <0.052847095f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.31853813f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.27929688f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (data[25 /* X26 */] <-0.622941f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16482195f ? 
                                0.0f : 
                                1.0f) : 
                             (data[27 /* X28 */] <-0.1596683f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2882658f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16652778f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.111360766f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33398438f ? 
             (data[9 /* X10 */] <-0.28795764f ? 
                 (data[22 /* X23 */] <0.16083926f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.1747045f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09336287f ? 
                 (data[32 /* X33 */] <-0.265625f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27274296f ? 
                         (data[25 /* X26 */] <-0.6398016f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.25607073f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2686349f ? 
                         (data[27 /* X28 */] <-0.9571628f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.20686638f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.08818134f ? 
                                    1.0f : 
                                     (data[21 /* X22 */] <0.11721825f ? 
                                        1.0f : 
                                         (data[17 /* X18 */] <-0.32022932f ? 
                                            1.0f : 
                                            0.0f))))) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (data[14 /* X15 */] <0.12254386f ? 
             (data[20 /* X21 */] <0.16555795f ? 
                 (data[19 /* X20 */] <-0.07407829f ? 
                     (data[5 /* X6 */] <0.12411324f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63874584f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1506289f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.3386834f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26738468f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5367649f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.9631304f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.51171875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[9 /* X10 */] <-0.4979803f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12109375f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3304289f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27809086f ? 
                     (data[4 /* X5 */] <0.09953879f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.3584181f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.81392354f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.061588027f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.37669083f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25884053f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13035344f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21797638f ? 
                     (data[34 /* X35 */] <-0.31285352f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18576436f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.18609671f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
         (data[33 /* X34 */] <-0.609375f ? 
             (data[17 /* X18 */] <-0.17201956f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[15 /* X16 */] <0.10648013f ? 
             (data[35 /* X36 */] <-0.78515625f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5546875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.8428699f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.1778712f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1720805f ? 
                     (data[12 /* X13 */] <0.1763416f ? 
                         (data[2 /* X3 */] <0.038120233f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18900523f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3807186f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X7 */] <0.16010766f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06540188f ? 
                         (data[29 /* X30 */] <0.2568173f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16957009f ? 
                                 (data[23 /* X24 */] <0.15030167f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.01953125f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.32271713f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
        0.0f : 
         (data[21 /* X22 */] <0.16895056f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3515625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36876538f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.40569502f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.16652372f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3277274f ? 
                         (data[21 /* X22 */] <0.077390365f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[2 /* X3 */] <-0.09280306f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.052337322f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.16359752f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37390926f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7597192f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.6895335f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.051984645f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05907806f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.308979f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.52478987f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.111959875f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15960823f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19377746f ? 
                     (data[21 /* X22 */] <0.10799495f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28369224f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2540349f ? 
             (data[22 /* X23 */] <0.12558019f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.2910243f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20274022f ? 
                 (data[25 /* X26 */] <-0.35224217f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38280883f ? 
                         (data[33 /* X34 */] <0.34375f ? 
                             (data[15 /* X16 */] <0.14653052f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23557743f ? 
                                 (data[4 /* X5 */] <0.20063141f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.54943794f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.06714262f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15212576f ? 
                         (data[30 /* X31 */] <0.13213018f ? 
                             (data[15 /* X16 */] <0.060988884f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.007481685f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.212835f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[35 /* X36 */] <-0.328125f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3098715f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13084942f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.24892546f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[13 /* X14 */] <0.09002332f ? 
             (data[2 /* X3 */] <-0.24927236f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45557985f ? 
                     (data[19 /* X20 */] <-0.65153164f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0017288899f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57486814f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.15431313f ? 
                                 (data[13 /* X14 */] <0.13989818f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[24 /* X25 */] <-0.41343763f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39197946f ? 
             (data[2 /* X3 */] <0.105178505f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.43294874f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.453125f ? 
                     (data[26 /* X27 */] <-0.19301012f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32316914f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.23215295f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class h2o_rf_10_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0978639f ? 
                     (data[10 /* X11 */] <-0.7405387f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.28125f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.13709545f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10069722f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (data[4 /* X5 */] <0.17582236f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20021756f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26597196f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16144975f ? 
                                    0.0f : 
                                     (data[8 /* X9 */] <0.120751806f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13099483f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7688952f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24123926f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.07491075f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.20954683f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21245351f ? 
         (data[22 /* X23 */] <0.08612361f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.023782566f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3410313f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.71875f ? 
                         (data[20 /* X21 */] <0.11590208f ? 
                             (data[9 /* X10 */] <-0.7380796f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.49951598f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.032671034f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2756198f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.15123476f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.097453296f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10810684f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.101398066f ? 
                         (data[15 /* X16 */] <0.13011585f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36496747f ? 
                 (data[30 /* X31 */] <0.12170202f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[10 /* X11 */] <-0.4258155f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16356534f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.45031735f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41173118f ? 
             (data[33 /* X34 */] <-0.84375f ? 
                 (data[23 /* X24 */] <0.065547936f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.036096834f ? 
                     (data[31 /* X32 */] <0.04174834f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24038282f ? 
                         (data[15 /* X16 */] <0.056431122f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14779148f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.15668035f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.24772367f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.5836521f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2667536f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17715569f ? 
                                        0.0f : 
                                        1.0f))))))) : 
            1.0f) : 
         (data[15 /* X16 */] <0.18270862f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[27 /* X28 */] <-0.256808f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                 (data[5 /* X6 */] <0.19019279f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15922089f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[9 /* X10 */] <0.189387f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46875f ? 
                         (data[22 /* X23 */] <0.20115425f ? 
                             (data[8 /* X9 */] <0.047395676f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.49773815f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11327949f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21688595f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.056431122f ? 
                     (data[28 /* X29 */] <0.1647166f ? 
                         (data[19 /* X20 */] <-0.16583936f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6183865f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13143003f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823634f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.00855547f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0490203f ? 
                 (data[31 /* X32 */] <0.033434924f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.14960836f ? 
                         (data[16 /* X17 */] <-0.36324114f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17117767f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7525732f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[5 /* X6 */] <0.2317479f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22797602f ? 
                     (data[32 /* X33 */] <-0.71875f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.038761914f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28030315f ? 
                 (data[0 /* X1 */] <-0.24089314f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22484043f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.4418514f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.08387206f ? 
                                 (data[11 /* X12 */] <-0.117107965f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19197533f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.060546875f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31881905f ? 
                 (data[23 /* X24 */] <0.14051048f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.1893106f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5253906f ? 
             (data[30 /* X31 */] <0.16445744f ? 
                 (data[28 /* X29 */] <0.20249936f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48737168f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21679688f ? 
             (data[25 /* X26 */] <-0.3927325f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22315302f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22545052f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2388789f ? 
                        0.0f : 
                         (data[11 /* X12 */] <0.35537675f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[33 /* X34 */] <0.2848565f ? 
                         (data[3 /* X4 */] <-0.1673732f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06015775f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35332444f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
             (data[28 /* X29 */] <0.14869054f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09955027f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24956459f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20327538f ? 
                             (data[0 /* X1 */] <0.12841924f ? 
                                 (data[10 /* X11 */] <-0.49018192f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15911022f ? 
                 (data[7 /* X8 */] <0.06714262f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.098356f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.64244705f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26279598f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4699964f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30785432f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39351162f ? 
                             (data[33 /* X34 */] <-0.8f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.036543306f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[23 /* X24 */] <0.046879336f ? 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15260802f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18285836f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18354397f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13300438f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.63563144f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.043845687f ? 
                         (data[10 /* X11 */] <-0.5895546f ? 
                             (data[22 /* X23 */] <0.25553507f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[23 /* X24 */] <0.03977822f ? 
             (data[20 /* X21 */] <0.07809482f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.2578125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09969796f ? 
                 (data[0 /* X1 */] <-0.20283589f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24421655f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.2023838f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.26414007f ? 
                 (data[3 /* X4 */] <0.10177975f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29124895f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.47310397f ? 
                             (data[15 /* X16 */] <0.15942343f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36470696f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.3695807f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09302148f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.2421875f ? 
                     (data[33 /* X34 */] <-0.4406616f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.12772249f ? 
            0.0f : 
             (data[29 /* X30 */] <0.22484043f ? 
                 (data[7 /* X8 */] <0.08997958f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8799464f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[24 /* X25 */] <-0.32330006f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20447338f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.179199f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.6868746f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8359375f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42010275f ? 
                     (data[28 /* X29 */] <0.10417372f ? 
                         (data[17 /* X18 */] <-0.17525558f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13249254f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[15 /* X16 */] <0.13065436f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26500884f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2549431f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18514788f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21713424f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[24 /* X25 */] <-0.026505593f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.12903921f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0777674f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25273323f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14462686f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11590457f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29579985f ? 
                     (data[23 /* X24 */] <0.030386738f ? 
                         (data[12 /* X13 */] <0.13506556f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <0.19711289f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.20845167f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39085788f ? 
                    1.0f : 
                     (data[25 /* X26 */] <0.16283742f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06087324f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.14911714f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47335264f ? 
         (data[12 /* X13 */] <0.07686351f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15311578f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5378705f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2123498f ? 
                         (data[33 /* X34 */] <0.218125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21679688f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17806691f ? 
                0.0f : 
                 (data[35 /* X36 */] <0.125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22507474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[23 /* X24 */] <0.04918621f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.16542155f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.15453818f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.48243183f ? 
                 (data[12 /* X13 */] <0.089127935f ? 
                     (data[35 /* X36 */] <-0.671875f ? 
                        0.0f : 
                        1.0f) : 
                     (data[26 /* X27 */] <-0.22462763f ? 
                         (data[14 /* X15 */] <0.1610532f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.09092644f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[25 /* X26 */] <-0.5738299f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22561406f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38300848f ? 
                                    0.0f : 
                                    1.0f))))) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.21268062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.2536071f ? 
         (data[31 /* X32 */] <0.057335995f ? 
             (data[21 /* X22 */] <0.10315201f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06835132f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2623804f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.27947804f ? 
                     (data[16 /* X17 */] <-0.5649867f ? 
                         (data[11 /* X12 */] <0.016162222f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[5 /* X6 */] <0.16567528f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.12109375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21997185f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.069680065f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13454746f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[28 /* X29 */] <0.12910314f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4796875f ? 
                         (data[3 /* X4 */] <-0.100731f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.0814947f ? 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18341275f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[17 /* X18 */] <-0.019926572f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.20896459f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.060820412f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3290808f ? 
             (data[11 /* X12 */] <-0.77132076f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.072529145f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.13440302f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.106085174f ? 
                            1.0f : 
                             (data[0 /* X1 */] <-0.059168007f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.890625f ? 
                        0.0f : 
                        1.0f))) : 
             (data[29 /* X30 */] <0.30389434f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.025744788f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21055436f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3968381f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07469191f ? 
             (data[30 /* X31 */] <0.161329f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1985038f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.25725096f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.1586006f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5995063f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X1 */] <0.18704024f ? 
                         (data[33 /* X34 */] <-0.5625f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.038120233f ? 
                             (data[3 /* X4 */] <-0.47402143f ? 
                                0.0f : 
                                1.0f) : 
                             (data[22 /* X23 */] <0.19368322f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15864071f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03152482f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26364243f ? 
             (data[24 /* X25 */] <-0.7388123f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9125713f ? 
                     (data[19 /* X20 */] <-0.43679515f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.46419182f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.07010272f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.05807402f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <-0.87073123f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
                 (data[10 /* X11 */] <-0.1830299f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17976251f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2227246f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[32 /* X33 */] <0.35546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18117735f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47240755f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22301297f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.23222938f ? 
                             (data[5 /* X6 */] <0.19217637f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-0.6149117f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28490648f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.55828947f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36971086f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18083936f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.34670216f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16957009f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.21849488f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.14007464f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.04581474f ? 
                1.0f : 
                 (data[10 /* X11 */] <0.133156f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19155915f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2824945f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.462559f ? 
                 (data[5 /* X6 */] <0.083811715f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <0.26169196f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[30 /* X31 */] <0.086246304f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28282925f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24236724f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21617599f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                             (data[28 /* X29 */] <0.17540063f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <-0.009101127f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28852227f ? 
                         (data[28 /* X29 */] <0.17382772f ? 
                             (data[5 /* X6 */] <0.34045607f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.3539073f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18804428f ? 
                     (data[3 /* X4 */] <-0.23213358f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (data[26 /* X27 */] <-0.120202534f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2512564f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0185734f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.49435735f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2002907f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.47518462f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47591603f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.90625f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18991345f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.24098599f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
             (data[0 /* X1 */] <-0.17054793f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7025963f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11340999f ? 
             (data[13 /* X14 */] <0.120012276f ? 
                 (data[34 /* X35 */] <-0.21359903f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.045907155f ? 
                         (data[14 /* X15 */] <0.12862793f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.18550603f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.328125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2161781f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.1519011f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-0.34432748f ? 
             (data[13 /* X14 */] <0.14040598f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.078394376f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.66860557f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2554283f ? 
                 (data[28 /* X29 */] <0.07924431f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.22337107f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.13735263f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.44330803f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[19 /* X20 */] <-0.40358394f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07350633f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-1.2386305E-4f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21425173f ? 
                     (data[8 /* X9 */] <-0.28367573f ? 
                         (data[20 /* X21 */] <0.22643866f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6208357f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[22 /* X23 */] <0.13733321f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.33802292f ? 
             (data[3 /* X4 */] <-0.6164321f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X9 */] <0.21155882f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.32899213f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3895629f ? 
                         (data[8 /* X9 */] <0.2539638f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.4142186f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
        0.0f : 
         (data[21 /* X22 */] <0.07705948f ? 
            1.0f : 
             (data[6 /* X7 */] <0.08827061f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.25583094f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.20417926f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0135118235f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37095752f ? 
             (data[25 /* X26 */] <-0.5891771f ? 
                 (data[3 /* X4 */] <0.08525955f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.3895274f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37489885f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26355237f ? 
                             (data[8 /* X9 */] <-0.14823526f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5071484f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2998943f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30553725f ? 
                                    0.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12579817f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.145f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[32 /* X33 */] <0.3125f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[26 /* X27 */] <-0.07542061f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03445419f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.13786048f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.14414386f ? 
             (data[5 /* X6 */] <0.07962348f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.48592123f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.1810451f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27503848f ? 
                     (data[33 /* X34 */] <0.0625f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16754085f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27042383f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11747376f ? 
                                     (data[10 /* X11 */] <-0.3456398f ? 
                                         (data[1 /* X2 */] <-0.52968377f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.26557517f ? 
                             (data[34 /* X35 */] <-0.7768683f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.14662097f ? 
                                    1.0f : 
                                     (data[2 /* X3 */] <0.0023558207f ? 
                                        1.0f : 
                                         (data[9 /* X10 */] <-0.004856801f ? 
                                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.47303048f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)))) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[19 /* X20 */] <-0.6767817f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.53403455f ? 
                 (data[13 /* X14 */] <0.088581026f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28644454f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.125f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.063612856f ? 
            0.0f : 
             (data[2 /* X3 */] <0.098792f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54633564f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.11955171f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.5145676f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1644861f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.25436398f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.39206898f ? 
                 (data[33 /* X34 */] <-0.4921875f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.12554179f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1321866f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3370118f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12553051f ? 
                                1.0f : 
                                 (data[22 /* X23 */] <0.1610937f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (data[11 /* X12 */] <-0.21209371f ? 
                     (data[7 /* X8 */] <0.053950157f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20596406f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20158225f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.114907615f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31917983f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[15 /* X16 */] <0.08107063f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23224042f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23238216f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.36135235f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26437783f ? 
                 (data[12 /* X13 */] <0.1054805f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14890812f ? 
                        0.0f : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.06836197f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.06117707f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.17625254f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28649092f ? 
                 (data[15 /* X16 */] <0.10571014f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12042886f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[6 /* X7 */] <0.12518688f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.114949964f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.067184106f ? 
                     (data[30 /* X31 */] <0.24058294f ? 
                         (data[27 /* X28 */] <-0.042965308f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4401693f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44594464f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.045779243f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12199588f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.20600355f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021469591f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1483407f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.56696993f ? 
             (data[29 /* X30 */] <0.10137422f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.72147673f ? 
                     (data[0 /* X1 */] <-0.16259506f ? 
                         (data[15 /* X16 */] <0.056431122f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1204525f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.19179098f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9158655f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2622735f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.016578939f ? 
                                        0.0f : 
                                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.015386185f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.3720703f ? 
         (data[13 /* X14 */] <0.13800566f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.029634636f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07114159f ? 
                 (data[2 /* X3 */] <-0.3514564f ? 
                     (data[1 /* X2 */] <-0.57634133f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077990696f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[11 /* X12 */] <0.18735418f ? 
                 (data[14 /* X15 */] <0.18744051f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22343688f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.18498851f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.19052783f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.20001602f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.2160503f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20021756f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
             (data[31 /* X32 */] <0.04174834f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.035567034f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27355576f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.16324073f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.076822855f ? 
         (data[26 /* X27 */] <0.036180306f ? 
             (data[22 /* X23 */] <0.13341554f ? 
                 (data[12 /* X13 */] <0.14545342f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.12457188f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32873136f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.2801274f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16104251f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.35096288f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27148733f ? 
             (data[24 /* X25 */] <0.113999456f ? 
                 (data[18 /* X19 */] <0.12578924f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.37486798f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[24 /* X25 */] <-0.34308636f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18478844f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.20565978f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.29178956f ? 
                 (data[6 /* X7 */] <0.13217102f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.26235917f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.18238932f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33376792f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1915606f ? 
                         (data[28 /* X29 */] <0.09728235f ? 
                             (data[19 /* X20 */] <-0.28596294f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27588987f ? 
             (data[30 /* X31 */] <0.059133112f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.29145798f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16114904f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.0f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.12109375f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27170566f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[20 /* X21 */] <0.18361227f ? 
            0.0f : 
             (data[13 /* X14 */] <0.10921625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09278789f ? 
             (data[29 /* X30 */] <0.08272105f ? 
                 (data[19 /* X20 */] <-0.19920702f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.5002182f ? 
                     (data[16 /* X17 */] <-0.20267773f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.13536766f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17054638f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.20001346f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.26381573f ? 
                 (data[9 /* X10 */] <-0.6209829f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.092713185f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[34 /* X35 */] <-0.6965103f ? 
             (data[27 /* X28 */] <-0.39241678f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5067768f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16516903f ? 
                 (data[12 /* X13 */] <0.2013282f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21597695f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.19650342f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19015248f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21322098f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.13858506f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[24 /* X25 */] <-0.072673626f ? 
             (data[22 /* X23 */] <0.11102883f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.13273478f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.6347706f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08885724f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3011456f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[10 /* X11 */] <-0.6215205f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14466457f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06438624f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.09944046f ? 
                                1.0f : 
                                 (data[31 /* X32 */] <0.080344f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.47318769f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34879982f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[31 /* X32 */] <0.040709164f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09278789f ? 
             (data[22 /* X23 */] <0.14348957f ? 
                 (data[12 /* X13 */] <0.12728392f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.16725685f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40625f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042147256f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.18975031f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.171875f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24383324f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.108415656f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.56364f ? 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07857144f ? 
                                        0.0f : 
                                         (data[13 /* X14 */] <0.24274684f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56438345f ? 
            0.0f : 
             (data[27 /* X28 */] <0.68899995f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08282575f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.620596f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7025963f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                 (data[20 /* X21 */] <0.15429947f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.13022727f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26806095f ? 
                             (data[6 /* X7 */] <0.18681383f ? 
                                 (data[2 /* X3 */] <0.17583257f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07257838f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14818002f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27174234f ? 
                     (data[1 /* X2 */] <-0.14132142f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16856083f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45828953f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.16359185f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16265462f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.09861418f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.087442145f ? 
                 (data[26 /* X27 */] <0.06803607f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.10239305f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[3 /* X4 */] <-0.49596092f ? 
             (data[11 /* X12 */] <-0.65719277f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2682955f ? 
                 (data[19 /* X20 */] <-0.49951598f ? 
                     (data[13 /* X14 */] <0.20638049f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.23362242f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20187865f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.17604297f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
             (data[15 /* X16 */] <0.10417017f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.0298462f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.19972283f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.107071586f ? 
             (data[7 /* X8 */] <0.054455422f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_10_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[3 /* X4 */] <-0.2402239f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                 (data[0 /* X1 */] <-0.71572334f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3119635f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                             (data[8 /* X9 */] <-0.13850774f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41704875f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[11 /* X12 */] <-0.59289545f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.40063396f ? 
                     (data[1 /* X2 */] <-0.23382743f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2625255f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.26171875f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[15 /* X16 */] <0.05489115f ? 
             (data[1 /* X2 */] <-0.33783942f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.057880327f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21431415f ? 
                 (data[15 /* X16 */] <0.07384237f ? 
                     (data[9 /* X10 */] <-0.35004166f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.34375f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3256501f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.40722817f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09919601f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23340234f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.2514839f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                     (data[3 /* X4 */] <0.1448639f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2776919f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.7204424f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2025843f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.20147169f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25395796f ? 
                                 (data[2 /* X3 */] <0.043229435f ? 
                                    0.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)))))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[16 /* X17 */] <-0.28968805f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18341894f ? 
                 (data[27 /* X28 */] <-0.2348118f ? 
                     (data[12 /* X13 */] <0.18184519f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1830299f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.09089467f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.32622167f ? 
                     (data[33 /* X34 */] <0.09375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.19294575f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23454449f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.61343855f ? 
                                 (data[27 /* X28 */] <-0.23503359f ? 
                                     (data[20 /* X21 */] <0.17127262f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f)))))) : 
         (data[8 /* X9 */] <0.1850959f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.828125f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11102547f ? 
                         (data[20 /* X21 */] <0.22493659f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14742732f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.108790085f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22882082f ? 
                     (data[7 /* X8 */] <0.12550375f ? 
                         (data[11 /* X12 */] <-0.13060258f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.16359185f ? 
                         (data[16 /* X17 */] <-0.17715843f ? 
                            1.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32041714f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2569412f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07818236f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08779913f ? 
                 (data[2 /* X3 */] <-0.3259104f ? 
                     (data[32 /* X33 */] <-0.421875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.18700397f ? 
             (data[34 /* X35 */] <-0.5762597f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.65502244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20285635f ? 
         (data[25 /* X26 */] <-0.20703095f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.8854756f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.08261641f ? 
                     (data[34 /* X35 */] <-0.43984437f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.07686351f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077990696f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.54882604f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.6137364f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4121109f ? 
                 (data[10 /* X11 */] <-0.67989343f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18482746f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36306205f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5366883f ? 
                            0.0f : 
                             (data[11 /* X12 */] <0.36950925f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[11 /* X12 */] <0.4672594f ? 
                             (data[1 /* X2 */] <-0.15986334f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.14267766f ? 
         (data[32 /* X33 */] <0.05859375f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07183082f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2109375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.27391616f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.83767587f ? 
                 (data[2 /* X3 */] <-0.44086742f ? 
                     (data[34 /* X35 */] <-0.618252f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28669596f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                     (data[27 /* X28 */] <-0.45966184f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2780675f ? 
                             (data[25 /* X26 */] <-0.66222996f ? 
                                 (data[28 /* X29 */] <0.26657107f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22272807f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[4 /* X5 */] <0.16104352f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <-0.14088167f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.27391616f ? 
                 (data[11 /* X12 */] <0.22159256f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.1102302f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.10668485f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08282575f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.74768513f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5077466f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19641656f ? 
                 (data[2 /* X3 */] <0.10534919f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24000968f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.9387579f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54633564f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[19 /* X20 */] <-0.20546345f ? 
             (data[33 /* X34 */] <-0.21875f ? 
                 (data[29 /* X30 */] <0.22306395f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09931907f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09530958f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16840827f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.49043918f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4211268f ? 
             (data[24 /* X25 */] <-0.118841656f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09955027f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06361754f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22353405f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18332036f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7578125f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[19 /* X20 */] <-0.50994337f ? 
            1.0f : 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.08637798f ? 
                     (data[13 /* X14 */] <0.11521404f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.105204225f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.72257334f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.12935866f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[3 /* X4 */] <0.0049454505f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6875f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36120605f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.08738452f ? 
                     (data[13 /* X14 */] <0.11521404f ? 
                        1.0f : 
                         (data[3 /* X4 */] <0.102167785f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10125383f ? 
                 (data[7 /* X8 */] <0.051520705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.069819756f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29895592f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5538925f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41270456f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.80508417f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.044934623f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                    0.0f : 
                                     (data[5 /* X6 */] <0.21279877f ? 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16324548f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                             (data[12 /* X13 */] <0.20686638f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49925026f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.20600355f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.55069274f ? 
                         (data[28 /* X29 */] <0.1184191f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[33 /* X34 */] <-0.8203125f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.0737288f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.97265625f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18744051f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.3032444f ? 
                 (data[26 /* X27 */] <-0.123098515f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08917069f ? 
                         (data[35 /* X36 */] <-0.3125f ? 
                            1.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.03028184f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2367026f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.18746044f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7051514f ? 
                     (data[15 /* X16 */] <0.08107063f ? 
                         (data[13 /* X14 */] <0.08642464f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8f ? 
                                 (data[32 /* X33 */] <-0.9f ? 
                                     (data[33 /* X34 */] <-0.5288086f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[30 /* X31 */] <0.102097094f ? 
                                         (data[20 /* X21 */] <0.16397686f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f)) : 
                         (data[24 /* X25 */] <-0.4848606f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27848902f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[19 /* X20 */] <-0.6767817f ? 
             (data[33 /* X34 */] <0.49609375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7525732f ? 
                 (data[29 /* X30 */] <0.059626646f ? 
                     (data[7 /* X8 */] <0.03254398f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6992325f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.562022f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.5957031f ? 
            1.0f : 
             (data[24 /* X25 */] <0.07902133f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.040059533f ? 
                     (data[3 /* X4 */] <0.2205254f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.118657686f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.09339039f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.048368126f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07491075f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.07550069f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28124407f ? 
             (data[20 /* X21 */] <0.0708731f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.15791439f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2056927f ? 
                         (data[29 /* X30 */] <0.15741892f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1315356f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37096164f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.19553334f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.018076168f ? 
                 (data[34 /* X35 */] <-0.14488438f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18961777f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3655235f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.0262798f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12418978f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.1599271f ? 
                         (data[35 /* X36 */] <-0.3125f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08721849f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33110565f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.09796575f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[19 /* X20 */] <-0.351447f ? 
             (data[3 /* X4 */] <-0.25734672f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.25290507f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24184011f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15311578f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.40348402f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32812345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
        0.6666667f : 
         (data[0 /* X1 */] <-0.64244705f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.30326605f ? 
                 (data[23 /* X24 */] <0.036096834f ? 
                     (data[11 /* X12 */] <-0.21209371f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4451255f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.019595208f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <-0.17567725f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6062925f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.671558f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[15 /* X16 */] <0.15091287f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[29 /* X30 */] <0.13246283f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3003336f ? 
                         (data[0 /* X1 */] <-0.121498615f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.14267766f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05859375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.020024981f ? 
                 (data[11 /* X12 */] <-0.30339608f ? 
                     (data[25 /* X26 */] <-0.21777402f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.38605428f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13590334f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.13206035f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.14934216f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0041921f ? 
                     (data[14 /* X15 */] <0.17232348f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15910679f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4493419f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22290006f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35268196f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5416181f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06202893f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.580101f ? 
             (data[14 /* X15 */] <0.0870535f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2833209f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3125f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26710528f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.39719784f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
             (data[10 /* X11 */] <-0.1830299f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.20548353f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15491542f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.070829436f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.17024633f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[20 /* X21 */] <0.15985109f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19678402f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2778585f ? 
                 (data[22 /* X23 */] <0.109349824f ? 
                     (data[25 /* X26 */] <-0.08271834f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.0491127f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.40367156f ? 
                             (data[4 /* X5 */] <0.11126933f ? 
                                 (data[2 /* X3 */] <-0.20609586f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12690349f ? 
                     (data[35 /* X36 */] <-0.46875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.264098f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13184734f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-1.0920644f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.3706159f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15778118f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.16757393f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.43278065f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1325532f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.010793178f ? 
                             (data[6 /* X7 */] <0.08986699f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39600563f ? 
         (data[6 /* X7 */] <0.083780795f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.084639005f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.083695985f ? 
                 (data[27 /* X28 */] <-0.146827f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.8625707f ? 
                     (data[13 /* X14 */] <0.10603054f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17688456f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[4 /* X5 */] <0.13378f ? 
             (data[17 /* X18 */] <-0.15907547f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[3 /* X4 */] <-0.24233744f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1851098f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.55003136f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1586867f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6434577f ? 
                 (data[23 /* X24 */] <0.10972459f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                         (data[8 /* X9 */] <-0.1702714f ? 
                             (data[20 /* X21 */] <0.16716278f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58117723f ? 
                                0.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.299998f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.061681237f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[31 /* X32 */] <0.047983404f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.020024981f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <0.171875f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.073510006f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.026024697f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17009246f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49408668f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19442415f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.057006836f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26880956f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.21294576f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35182616f ? 
                 (data[4 /* X5 */] <0.16030793f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4375f ? 
                         (data[34 /* X35 */] <-0.87215877f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27979347f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21971633f ? 
                                    1.0f : 
                                     (data[6 /* X7 */] <0.26586246f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.12546696f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.66648f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42400903f ? 
             (data[11 /* X12 */] <-0.72566956f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09499613f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6992325f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.33884126f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.16716278f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07902133f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.323391f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.75f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.17639132f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[35 /* X36 */] <-0.7f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[24 /* X25 */] <0.21092999f ? 
                             (data[13 /* X14 */] <0.21208069f ? 
                                 (data[5 /* X6 */] <0.18088445f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.56364f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4765625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_10_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21902712f ? 
             (data[6 /* X7 */] <0.10922308f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.037951488f ? 
                     (data[2 /* X3 */] <-0.10238282f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.4722359f ? 
                         (data[15 /* X16 */] <0.11466388f ? 
                            1.0f : 
                            0.0f) : 
                         (data[34 /* X35 */] <-0.63352185f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25424033f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <0.46375832f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[13 /* X14 */] <0.16799462f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12612769f ? 
                     (data[29 /* X30 */] <0.22839342f ? 
                         (data[25 /* X26 */] <-0.5247187f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24026105f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.16516903f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.05108077f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.50652856f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08291109f ? 
            0.0f : 
             (data[27 /* X28 */] <0.20859051f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.16010766f ? 
             (data[1 /* X2 */] <-0.38117775f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17773406f ? 
                     (data[19 /* X20 */] <-0.69972193f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.14566603f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18046646f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11050134f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.68920696f ? 
                 (data[15 /* X16 */] <0.134362f ? 
                     (data[9 /* X10 */] <-0.28820112f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.54764664f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23294243f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2827104f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4502828f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.16422899f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29827875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (data[8 /* X9 */] <0.51399213f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.55828947f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
                 (data[19 /* X20 */] <-1.1668693f ? 
                     (data[21 /* X22 */] <0.28315264f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15498917f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33467555f ? 
                             (data[18 /* X19 */] <-0.28748068f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.068900794f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24796727f ? 
                                        0.0f : 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.271114f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[15 /* X16 */] <0.044424776f ? 
                                        1.0f : 
                                         (data[21 /* X22 */] <0.109203346f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[15 /* X16 */] <0.21966788f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[26 /* X27 */] <0.1462275f ? 
             (data[27 /* X28 */] <-0.2755092f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.38977543f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.050042655f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                    1.0f : 
                    0.0f) : 
                 (data[26 /* X27 */] <0.23567694f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.06356268f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20001712f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[34 /* X35 */] <-0.8816581f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24378406f ? 
                     (data[25 /* X26 */] <-0.15638508f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.3046964f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X6 */] <0.17024633f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.84612995f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.209375f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[5 /* X6 */] <0.07300738f ? 
                 (data[32 /* X33 */] <0.1328125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.0557309f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22518341f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.18475659f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7867895f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4245079f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.30356792f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44685638f ? 
                         (data[29 /* X30 */] <0.057850152f ? 
                             (data[24 /* X25 */] <-0.14774598f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.083241306f ? 
                                0.0f : 
                                 (data[9 /* X10 */] <0.10861029f ? 
                                     (data[15 /* X16 */] <0.1486528f ? 
                                         (data[32 /* X33 */] <0.028574f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[11 /* X12 */] <-0.20074777f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18332036f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24162576f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.019290771f ? 
                 (data[26 /* X27 */] <0.07301976f ? 
                     (data[12 /* X13 */] <0.16546479f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.15558168f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[33 /* X34 */] <-0.40625f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2204057f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0836261f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40039062f ? 
             (data[18 /* X19 */] <-0.32522514f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19778278f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.16637437f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14556222f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.118258536f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.036219157f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[9 /* X10 */] <-0.8814589f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
                 (data[25 /* X26 */] <-0.26688516f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08976546f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25235835f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.022696095f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.44157815f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20255765f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38817093f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15397945f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2533861f ? 
             (data[15 /* X16 */] <0.08877048f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14214839f ? 
                     (data[8 /* X9 */] <0.06412257f ? 
                         (data[23 /* X24 */] <0.21743624f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.13894057f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
                            1.0f : 
                            0.0f) : 
                         (data[0 /* X1 */] <0.12841924f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                 (data[7 /* X8 */] <0.074754946f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.083695985f ? 
                 (data[35 /* X36 */] <-0.3125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44158232f ? 
                     (data[30 /* X31 */] <0.14881521f ? 
                         (data[3 /* X4 */] <-0.23599684f ? 
                             (data[12 /* X13 */] <0.13091825f ? 
                                 (data[33 /* X34 */] <-0.05f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.12180388f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[8 /* X9 */] <-0.18916532f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29025403f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22649544f ? 
                     (data[26 /* X27 */] <0.028901441f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.053351182f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13838707f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.15609337f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.71890706f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4391106f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.703125f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[35 /* X36 */] <-0.375f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16229662f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (data[2 /* X3 */] <-0.26204535f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39878362f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2435668f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21431415f ? 
                 (data[30 /* X31 */] <0.0855125f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16180599f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.65386754f ? 
                         (data[33 /* X34 */] <-0.5961547f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24478027f ? 
                                0.0f : 
                                1.0f) : 
                             (data[19 /* X20 */] <-0.4461277f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.47782463f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.36477125f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[8 /* X9 */] <0.7102386f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.359375f ? 
                     (data[17 /* X18 */] <-0.08464699f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[26 /* X27 */] <-0.14047438f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32649353f ? 
                     (data[22 /* X23 */] <0.1776293f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.059168007f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2713887f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26866424f ? 
                 (data[26 /* X27 */] <-0.11941485f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39807588f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.26324755f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.19147718f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.16115525f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <0.331657f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09794072f ? 
             (data[30 /* X31 */] <0.15611492f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.22372636f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.203125f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34208894f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.31631923f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19873317f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1419971f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43918115f ? 
             (data[32 /* X33 */] <-0.97265625f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.785139f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.091628835f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.11164064f ? 
                         (data[35 /* X36 */] <-0.03125f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34003872f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.056411363f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.75f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (data[33 /* X34 */] <-0.0625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.118657686f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.41752407f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.078023046f ? 
                 (data[21 /* X22 */] <0.06917373f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.07206209f ? 
                         (data[29 /* X30 */] <0.06725245f ? 
                            1.0f : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.49834594f ? 
                             (data[35 /* X36 */] <0.25f ? 
                                 (data[28 /* X29 */] <0.15387192f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[11 /* X12 */] <-0.40809152f ? 
                                 (data[16 /* X17 */] <0.16129732f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[22 /* X23 */] <0.112260096f ? 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17525023f ? 
                                        0.0f : 
                                         (data[5 /* X6 */] <0.13833201f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))))) : 
                 (data[24 /* X25 */] <-0.114444695f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.25f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.44734976f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11679571f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.9274679f ? 
                 (data[13 /* X14 */] <0.2341275f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.14934216f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.42238423f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16066079f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22423276f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18360941f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17879064f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
             (data[17 /* X18 */] <-0.6185904f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28083387f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.115155816f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.5861077f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35878316f ? 
                             (data[21 /* X22 */] <0.093321145f ? 
                                 (data[27 /* X28 */] <-0.31497574f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[18 /* X19 */] <-0.09528259f ? 
                                     (data[7 /* X8 */] <0.041077722f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[15 /* X16 */] <0.07298865f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.019595208f ? 
                                            0.0f : 
                                             (data[33 /* X34 */] <-0.5256395f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f))) : 
                            1.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.36275437f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.15749745f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18633483f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.1747045f ? 
            0.0f : 
             (data[33 /* X34 */] <0.1796875f ? 
                 (data[27 /* X28 */] <-0.18593135f ? 
                     (data[13 /* X14 */] <0.14880168f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.52621007f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                         (data[5 /* X6 */] <0.117055796f ? 
                             (data[7 /* X8 */] <0.051618394f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43294683f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.59168786f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[27 /* X28 */] <-0.36190096f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19777735f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21800824f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.28384f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[12 /* X13 */] <0.15045005f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15260343f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24421655f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23247676f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.12722456f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.17423525f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.42643663f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.020232465f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6183865f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16045214f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.08030303f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.060546875f ? 
             (data[28 /* X29 */] <0.2332725f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.17604297f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.10024345f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09143965f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[0 /* X1 */] <-0.24089314f ? 
             (data[0 /* X1 */] <-0.3157436f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09793462f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26885515f ? 
                 (data[24 /* X25 */] <-0.4574072f ? 
                     (data[20 /* X21 */] <0.17504872f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.07127355f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07407829f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15171504f ? 
                 (data[24 /* X25 */] <-0.3694681f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.14182852f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2714766f ? 
                     (data[5 /* X6 */] <0.12702903f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.1167655f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21465924f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.19915676f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.5800772f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.07421875f ? 
                 (data[9 /* X10 */] <-0.254387f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.16550025f ? 
                         (data[11 /* X12 */] <0.06181341f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16755529f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.56132376f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1107008f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22557342f ? 
             (data[0 /* X1 */] <-0.64244705f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.044111367f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038735744f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58582f ? 
                 (data[17 /* X18 */] <-0.104063116f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17334697f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03445419f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20087044f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.05113802f ? 
             (data[5 /* X6 */] <0.0796562f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.44988576f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                         (data[34 /* X35 */] <-0.90838045f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.17567804f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.16160287f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1828821f ? 
                         (data[33 /* X34 */] <-0.42307812f ? 
                             (data[1 /* X2 */] <-0.21873786f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.0625f ? 
                             (data[20 /* X21 */] <0.14662097f ? 
                                1.0f : 
                                0.0f) : 
                             (data[33 /* X34 */] <-0.30769375f ? 
                                1.0f : 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15164837f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[19 /* X20 */] <-0.6767817f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.52221745f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20895502f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27613086f ? 
                 (data[31 /* X32 */] <0.033434924f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.2565041f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[34 /* X35 */] <0.17578399f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.09409988f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4592905f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27842572f ? 
         (data[6 /* X7 */] <0.13815744f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3056993f ? 
                     (data[17 /* X18 */] <-0.5852562f ? 
                         (data[34 /* X35 */] <-0.38920313f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8367104f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09994225f ? 
                     (data[5 /* X6 */] <0.07716289f ? 
                         (data[26 /* X27 */] <0.09699585f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9296875f ? 
                 (data[17 /* X18 */] <-0.23997599f ? 
                     (data[1 /* X2 */] <-0.68454605f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.2959926f ? 
                             (data[12 /* X13 */] <0.16035242f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.103892006f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[21 /* X22 */] <0.1340187f ? 
                                 (data[10 /* X11 */] <-0.32474774f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <-0.3393512f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                     (data[32 /* X33 */] <-0.95477295f ? 
                         (data[26 /* X27 */] <-0.042011116f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11816201f ? 
             (data[25 /* X26 */] <-0.3743158f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (data[13 /* X14 */] <0.1943849f ? 
             (data[18 /* X19 */] <-0.09458145f ? 
                 (data[34 /* X35 */] <-0.11434453f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.81640625f ? 
                 (data[25 /* X26 */] <-0.26074627f ? 
                     (data[13 /* X14 */] <0.2248237f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16074347f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.20163666f ? 
                             (data[31 /* X32 */] <0.29530752f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32042387f ? 
             (data[3 /* X4 */] <-0.49384737f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6484375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.2236043f ? 
                 (data[27 /* X28 */] <0.058130026f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.09359454f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6348574f ? 
         (data[6 /* X7 */] <0.20400807f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.860662f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.49433768f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32824364f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0625f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3676097f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[35 /* X36 */] <-0.5f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[34 /* X35 */] <-0.24986508f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.56037766f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.5952008f ? 
                 (data[12 /* X13 */] <0.19269416f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.3282741f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.72147673f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15004604f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3121563f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.28275335f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[23 /* X24 */] <0.080381826f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[35 /* X36 */] <-0.1875f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46627071f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.2536071f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.29241353f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[2 /* X3 */] <-0.5446481f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.32421875f ? 
                 (data[6 /* X7 */] <0.17607144f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39807588f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27413005f ? 
                         (data[15 /* X16 */] <0.10571014f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32830754f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.92401016f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.125f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3098715f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.4563812f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15058728f ? 
                            0.0f : 
                             (data[35 /* X36 */] <0.20546874f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2733325f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34250778f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                         (data[27 /* X28 */] <-0.36096928f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3943819f ? 
                                 (data[5 /* X6 */] <0.15960823f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.21813677f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[15 /* X16 */] <0.17962869f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.23619069f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X3 */] <0.06845612f ? 
             (data[12 /* X13 */] <0.14908732f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (data[34 /* X35 */] <0.04408091f ? 
             (data[18 /* X19 */] <-0.05333704f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.42655766f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.7667322f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.20761578f ? 
                 (data[4 /* X5 */] <0.15549518f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.328125f ? 
                         (data[7 /* X8 */] <0.08922132f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26376873f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.312382f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.15079795f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.5536762f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[9 /* X10 */] <-0.8742235f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (data[31 /* X32 */] <0.12095864f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-1.0864182f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.08808245f ? 
                         (data[0 /* X1 */] <0.24844979f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.711115f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34538555f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.48812753f ? 
                                     (data[13 /* X14 */] <0.2347791f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[10 /* X11 */] <-0.23929566f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17882143f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14940816f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.209672f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19425778f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.10070115f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.34987867f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09214553f ? 
             (data[3 /* X4 */] <0.0049454505f ? 
                 (data[33 /* X34 */] <0.171875f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3429151f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[12 /* X13 */] <0.15181276f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.47449023f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41173118f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.79374295f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                         (data[0 /* X1 */] <-0.40406778f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.42620277f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.27679324f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15800217f ? 
                                1.0f : 
                                0.0f) : 
                             (data[10 /* X11 */] <-0.41791084f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22772762f ? 
                                    0.0f : 
                                     (data[11 /* X12 */] <0.4444489f ? 
                                        1.0f : 
                                        0.0f)))))) : 
                 (data[30 /* X31 */] <0.22598353f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48260298f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11187002f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.75f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38071942f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.27336872f ? 
                                 (data[13 /* X14 */] <0.0979404f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[10 /* X11 */] <-0.250784f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.33572054f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80071867f ? 
             (data[14 /* X15 */] <0.09257121f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22182691f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0625f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31917983f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5634079f ? 
                                    0.0f : 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.03042507f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[1 /* X2 */] <-0.15986334f ? 
                                    1.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23196135f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12026502f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29297635f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.53403455f ? 
             (data[18 /* X19 */] <-0.06613178f ? 
                 (data[10 /* X11 */] <-0.1457122f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16010766f ? 
                         (data[17 /* X18 */] <-0.31520993f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.4889901f ? 
                     (data[11 /* X12 */] <-0.23108187f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20427495f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.58064276f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23359609f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.51831836f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22416084f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5117149f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.45996094f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22261982f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.2634513f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.23734875f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.18815267f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X7 */] <0.1451416f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12712403f ? 
                 (data[11 /* X12 */] <-0.21209371f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12886639f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4948295f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X3 */] <-0.16624783f ? 
                         (data[25 /* X26 */] <-0.18094064f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.117168464f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3217242f ? 
                 (data[32 /* X33 */] <0.109375f ? 
                     (data[28 /* X29 */] <0.10773507f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7407711f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.30103654f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05390625f ? 
                                    0.0f : 
                                     (data[27 /* X28 */] <-0.19279099f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[33 /* X34 */] <-0.021972656f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[10 /* X11 */] <-1.0920644f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22557342f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.050864868f ? 
                             (data[23 /* X24 */] <0.08747265f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.18966717f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5672076f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12768121f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1506827f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1035672f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38817093f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48810345f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.32090324f ? 
                 (data[5 /* X6 */] <0.14365107f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[19 /* X20 */] <-0.57459325f ? 
             (data[22 /* X23 */] <0.16587628f ? 
                 (data[16 /* X17 */] <-0.13627738f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.52344316f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22600418f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.41483697f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14327718f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.1324717f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.3195239f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44972506f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.56696993f ? 
             (data[13 /* X14 */] <0.15359992f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.19052783f ? 
                     (data[8 /* X9 */] <0.1478648f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.34641096f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.09750199f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21467426f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.7861328f ? 
                         (data[21 /* X22 */] <0.11071506f ? 
                            1.0f : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.06253188f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17540063f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.052712355f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0032939347f ? 
             (data[33 /* X34 */] <-0.33203125f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.29346833f ? 
                     (data[25 /* X26 */] <-0.16866286f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20596406f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6066881f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.50652474f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17407596f ? 
             (data[2 /* X3 */] <-0.21095335f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63294643f ? 
                     (data[6 /* X7 */] <0.08383152f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.31344277f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23126419f ? 
                 (data[4 /* X5 */] <0.1774472f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32557622f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.17178892f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.5619968f ? 
                             (data[11 /* X12 */] <0.9661639f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30254132f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5354445f ? 
                 (data[30 /* X31 */] <0.077903785f ? 
                     (data[10 /* X11 */] <-0.81275505f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16432856f ? 
                         (data[26 /* X27 */] <-0.065178946f ? 
                             (data[6 /* X7 */] <0.115409054f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.26987177f ? 
                                     (data[5 /* X6 */] <0.1276939f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.22587225f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.5800772f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.10617931f ? 
                     (data[19 /* X20 */] <-0.1648552f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[10 /* X11 */] <-0.050344743f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16159686f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09418095f ? 
                 (data[32 /* X33 */] <-0.24349207f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.38450786f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.6221632f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[16 /* X17 */] <-0.6826716f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08783767f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25169435f ? 
                 (data[14 /* X15 */] <0.10277578f ? 
                     (data[4 /* X5 */] <0.18294795f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.9701705f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38472706f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35968044f ? 
                 (data[24 /* X25 */] <-0.10565079f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23135741f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6048581f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46250224f ? 
                                 (data[7 /* X8 */] <0.054439295f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.1932677f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011005758f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.059734408f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[1 /* X2 */] <-0.17170915f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2549208f ? 
                 (data[17 /* X18 */] <-0.6606587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.40358394f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2342412f ? 
                 (data[27 /* X28 */] <-0.06861829f ? 
                     (data[22 /* X23 */] <0.14852658f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.091222875f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.7420612f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26885515f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.1405787f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[3 /* X4 */] <0.15077895f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.9277344f ? 
             (data[30 /* X31 */] <0.21555538f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.7499201f ? 
                 (data[22 /* X23 */] <0.1149465f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17780742f ? 
            0.0f : 
             (data[30 /* X31 */] <0.082075045f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.79374295f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2860456f ? 
                 (data[1 /* X2 */] <-0.7712228f ? 
                     (data[24 /* X25 */] <0.16696043f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.10151447f ? 
                         (data[19 /* X20 */] <0.14767158f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42109376f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.14053684f ? 
                        1.0f : 
                        0.0f))) : 
             (data[34 /* X35 */] <-0.3548458f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70475096f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X7 */] <0.12818009f ? 
             (data[25 /* X26 */] <-0.6413577f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.05358517f ? 
                     (data[32 /* X33 */] <-0.26493025f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36223093f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18222058f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17121947f ? 
                         (data[23 /* X24 */] <0.049421486f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.02613875f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2331082f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                         (data[18 /* X19 */] <-0.27952212f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.161362f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14516093f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[22 /* X23 */] <0.14404923f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.71813464f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.7640756f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.8144233f ? 
            1.0f : 
             (data[29 /* X30 */] <0.1644397f ? 
                 (data[11 /* X12 */] <-0.41752407f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15306816f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24125431f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29289758f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26484326f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.036078386f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04869478f ? 
                     (data[18 /* X19 */] <0.1321866f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26228246f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14948392f ? 
                                 (data[9 /* X10 */] <-0.87012935f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23662437f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43518245f ? 
                             (data[9 /* X10 */] <-0.35085958f ? 
                                1.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34802774f ? 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.011139228f ? 
                                        0.0f : 
                                         (data[7 /* X8 */] <0.060093652f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30877972f ? 
             (data[9 /* X10 */] <-0.31709418f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.027807767f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.1654289f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13627738f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2244908f ? 
             (data[23 /* X24 */] <0.027097886f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.47279993f ? 
                     (data[24 /* X25 */] <-0.43102548f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17065743f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.19570744f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.1180299f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.10725012f ? 
             (data[25 /* X26 */] <-0.46332976f ? 
                 (data[5 /* X6 */] <0.15076637f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.11388371f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31962144f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.081785806f ? 
            0.0f : 
             (data[9 /* X10 */] <0.09291439f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21056283f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[33 /* X34 */] <-0.84375f ? 
             (data[23 /* X24 */] <0.0557309f ? 
                 (data[25 /* X26 */] <-0.43435353f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.03446066f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.085840985f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41492385f ? 
                     (data[27 /* X28 */] <-0.24458788f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28997058f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21471673f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.23673451f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1934884f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3515625f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.06336098f ? 
             (data[20 /* X21 */] <0.1446952f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16585028f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22520107f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23814103f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.4711428f ? 
                         (data[27 /* X28 */] <-0.6747358f ? 
                             (data[9 /* X10 */] <0.45179245f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.20548353f ? 
                         (data[26 /* X27 */] <-0.22735374f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1919738f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31723383f ? 
                     (data[11 /* X12 */] <-0.5915441f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.18101808f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[26 /* X27 */] <0.09699585f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28369224f ? 
                             (data[12 /* X13 */] <0.29962283f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0005159f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23919277f ? 
                 (data[29 /* X30 */] <0.059626646f ? 
                     (data[16 /* X17 */] <0.20837128f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.072529145f ? 
                         (data[5 /* X6 */] <0.14365107f ? 
                             (data[14 /* X15 */] <0.16001152f ? 
                                 (data[15 /* X16 */] <0.06399923f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.65625f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.39648995f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.2035062f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.122966304f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[32 /* X33 */] <-0.24023438f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.33220136f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23701644f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.18323782f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.19286357f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.108790085f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.02757502f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                         (data[25 /* X26 */] <-0.4353408f ? 
                             (data[5 /* X6 */] <0.1566099f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.16550025f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.35085958f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.8886719f ? 
            1.0f : 
             (data[7 /* X8 */] <0.069680065f ? 
                 (data[17 /* X18 */] <-0.16878353f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32042387f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.078023046f ? 
                 (data[10 /* X11 */] <-1.0864182f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3491949f ? 
                             (data[11 /* X12 */] <-0.4038287f ? 
                                 (data[34 /* X35 */] <-0.804545f ? 
                                     (data[31 /* X32 */] <0.109604f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[24 /* X25 */] <-0.44157815f ? 
                                     (data[28 /* X29 */] <0.18890624f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[26 /* X27 */] <-0.16279228f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X1 */] <0.05807402f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.09092644f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[6 /* X7 */] <0.12618461f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44461724f ? 
                         (data[25 /* X26 */] <-0.49027506f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0023558207f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.16866286f ? 
                         (data[30 /* X31 */] <0.11544513f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.22159375f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.10417017f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.16634837f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47051734f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4300334f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <0.37890625f ? 
             (data[13 /* X14 */] <0.20398137f ? 
                 (data[7 /* X8 */] <0.044305664f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.11830451f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3042719f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03891869f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56383806f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23777522f ? 
                         (data[15 /* X16 */] <0.04915023f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.244446f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.111890316f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.03851779f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31870946f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[29 /* X30 */] <0.14638147f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.05228678f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40953f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.09009052f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3260938f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0234375f ? 
             (data[26 /* X27 */] <0.013012478f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.26586416f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32179686f ? 
             (data[14 /* X15 */] <0.09607359f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.15601487f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18556002f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11167604f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.15487969f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.113512404f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24079372f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6830331f ? 
                             (data[19 /* X20 */] <-0.76645726f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14441237f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27609435f ? 
                                    0.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20312935f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17221263f ? 
                             (data[32 /* X33 */] <-0.200002f ? 
                                0.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
             (data[29 /* X30 */] <0.10670369f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (data[20 /* X21 */] <0.09574793f ? 
             (data[10 /* X11 */] <-0.6686011f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33970025f ? 
                 (data[30 /* X31 */] <0.18844219f ? 
                     (data[22 /* X23 */] <0.22240274f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.26345247f ? 
                             (data[17 /* X18 */] <-0.07671468f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.703125f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[23 /* X24 */] <0.047140997f ? 
             (data[35 /* X36 */] <-0.5234375f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.54359484f ? 
                 (data[7 /* X8 */] <0.087442145f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[28 /* X29 */] <0.14512919f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1328125f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.12515548f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28781796f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.2035259f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16070738f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32111517f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42092124f ? 
                             (data[6 /* X7 */] <0.07446008f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18307641f ? 
                         (data[35 /* X36 */] <-0.6875f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.171875f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34932992f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.054455422f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2032904f ? 
            1.0f : 
             (data[16 /* X17 */] <0.21677735f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08535511f ? 
             (data[19 /* X20 */] <-0.399413f ? 
                 (data[16 /* X17 */] <-0.25030294f ? 
                     (data[7 /* X8 */] <0.15595302f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                 (data[22 /* X23 */] <0.08584377f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (data[14 /* X15 */] <0.10885472f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
                 (data[17 /* X18 */] <-0.44708133f ? 
                     (data[1 /* X2 */] <-0.2684981f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.35184196f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.09013103f ? 
                         (data[23 /* X24 */] <0.04650607f ? 
                            0.0f : 
                            1.0f) : 
                         (data[31 /* X32 */] <0.079158716f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10560666f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.21255258f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (data[34 /* X35 */] <-0.8625707f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.08547666f ? 
             (data[8 /* X9 */] <-0.15136117f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                 (data[7 /* X8 */] <0.029081022f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.5895546f ? 
                         (data[7 /* X8 */] <0.08950381f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.16978152f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.032743983f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.21268062f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.1656986f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[9 /* X10 */] <-0.319506f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5390625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.19451112f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.061565418f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.023084765f ? 
                     (data[16 /* X17 */] <-0.34906077f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18654296f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.56033796f ? 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15006126f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.15214175f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.029804943f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16535445f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[13 /* X14 */] <0.22797254f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45827755f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18947062f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.13795686f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3359375f ? 
                     (data[14 /* X15 */] <0.20163666f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3067902f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[14 /* X15 */] <0.22191685f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7819014f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23205696f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41192088f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.064605184f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.80600303f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.23248306f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.41858473f ? 
                             (data[28 /* X29 */] <0.1070228f ? 
                                 (data[32 /* X33 */] <0.047615f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13036257f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07657113f ? 
                         (data[3 /* X4 */] <7.183925E-4f ? 
                            0.0f : 
                            1.0f) : 
                         (data[28 /* X29 */] <0.16115525f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19810832f ? 
                 (data[12 /* X13 */] <0.15453818f ? 
                     (data[32 /* X33 */] <-0.15625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.2023838f ? 
             (data[31 /* X32 */] <0.0978639f ? 
                 (data[30 /* X31 */] <0.10293135f ? 
                     (data[17 /* X18 */] <-0.36941683f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X6 */] <0.07300738f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48701835f ? 
                     (data[20 /* X21 */] <0.0708731f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43446654f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2290884f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.075616375f ? 
                                    1.0f : 
                                     (data[32 /* X33 */] <-0.366668f ? 
                                         (data[33 /* X34 */] <0.17f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19003975f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22225353f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13311607f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.34352866f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.4969798f ? 
             (data[16 /* X17 */] <-0.22454105f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.22372636f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.078023046f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0025212998f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.14174297f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[27 /* X28 */] <0.23038833f ? 
                     (data[32 /* X33 */] <-0.44479275f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[30 /* X31 */] <0.15820055f ? 
            1.0f : 
             (data[23 /* X24 */] <0.07291071f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.090944886f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.20142438f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43890777f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.053276643f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16979395f ? 
                 (data[29 /* X30 */] <0.09160351f ? 
                     (data[16 /* X17 */] <-0.07937226f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.51968664f ? 
                 (data[7 /* X8 */] <0.08674649f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.17470059f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27867964f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.65710235f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.10151447f ? 
                             (data[32 /* X33 */] <-0.315554f ? 
                                1.0f : 
                                0.0f) : 
                             (data[25 /* X26 */] <-0.5836521f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.12607919f ? 
                                     (data[4 /* X5 */] <0.2999858f ? 
                                        0.0f : 
                                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.35f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[31 /* X32 */] <0.047983404f ? 
             (data[4 /* X5 */] <0.08783452f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.33398438f ? 
             (data[16 /* X17 */] <-0.16149557f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.23649935f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.082075045f ? 
                         (data[23 /* X24 */] <0.050375797f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[27 /* X28 */] <-0.36190096f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.02537772f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21457542f ? 
                        1.0f : 
                         (data[32 /* X33 */] <0.4375f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24393773f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13099483f ? 
                 (data[14 /* X15 */] <0.12254386f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24421655f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.11932534f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16359752f ? 
                         (data[18 /* X19 */] <-0.30395252f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.18084426f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.12981541f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[34 /* X35 */] <-0.44264784f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16359752f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17726992f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28435293f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19802165f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.24249588f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.34597582f ? 
                            1.0f : 
                             (data[14 /* X15 */] <0.1967694f ? 
                                 (data[17 /* X18 */] <-0.42495188f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[9 /* X10 */] <-0.11932534f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38817093f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13034578f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42578125f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1039355f ? 
                1.0f : 
                 (data[18 /* X19 */] <0.15301496f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.24004325f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.46649745f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.4140625f ? 
             (data[12 /* X13 */] <0.11002287f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.13642332f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3967992f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16477221f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.43487716f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.23956907f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29444835f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[30 /* X31 */] <0.15246508f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.07314453f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27292868f ? 
         (data[30 /* X31 */] <0.14829381f ? 
            0.0f : 
             (data[29 /* X30 */] <0.12890984f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.99137485f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.050822385f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3809743f ? 
                         (data[22 /* X23 */] <0.10151447f ? 
                             (data[7 /* X8 */] <0.14898382f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.368892f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27516362f ? 
                                    0.0f : 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2289077f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5424893f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21555538f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.2723362f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[30 /* X31 */] <0.08781053f ? 
             (data[34 /* X35 */] <0.36532602f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.047983404f ? 
                 (data[3 /* X4 */] <-0.216843f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.29882812f ? 
             (data[6 /* X7 */] <0.14414386f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15306816f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                         (data[20 /* X21 */] <0.19925934f ? 
                             (data[33 /* X34 */] <-0.7077637f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.102653116f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.324324f ? 
                         (data[11 /* X12 */] <-0.6229544f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.34791857f ? 
                                 (data[34 /* X35 */] <-0.1667215f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2568434f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3406932f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[0 /* X1 */] <-0.51340127f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2117767f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.4270229f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.7283166f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.97265625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.55179363f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.53580165f ? 
                         (data[10 /* X11 */] <-0.8154017f ? 
                             (data[3 /* X4 */] <-0.034340087f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.42373958f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5389429f ? 
                                    0.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.368185f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20147169f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26013395f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33155617f ? 
             (data[34 /* X35 */] <-0.09143965f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.095127426f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09374917f ? 
                         (data[19 /* X20 */] <-0.36604533f ? 
                             (data[27 /* X28 */] <-0.025596041f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.36324114f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.090870224f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.109375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.47070312f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3542498f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.16930586f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[21 /* X22 */] <0.06760567f ? 
             (data[17 /* X18 */] <-0.31116846f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.46639922f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.4875068f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25917065f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.17279285f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.58594036f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22456525f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.073619865f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.78314114f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38488263f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3598051f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6846434f ? 
                     (data[25 /* X26 */] <-0.5963133f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.080736294f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.17137176f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.39761445f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.77476865f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23169652f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.20548353f ? 
                     (data[19 /* X20 */] <-0.09910404f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
             (data[25 /* X26 */] <-0.6168021f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14090832f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41287032f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.10151447f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.17831606f ? 
                                 (data[27 /* X28 */] <0.23775092f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.6171875f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.45943406f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.1934884f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.90009433f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18256405f ? 
             (data[34 /* X35 */] <0.11088682f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.31280473f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.10102578f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.41453207f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80071867f ? 
                 (data[13 /* X14 */] <0.09602111f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24925852f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.008978308f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20349042f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71023124f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16875702f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39104137f ? 
                                    0.0f : 
                                     (data[14 /* X15 */] <0.14843033f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[34 /* X35 */] <0.8366749f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17540832f ? 
                             (data[20 /* X21 */] <0.12983881f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.20686638f ? 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14105509f ? 
                                        1.0f : 
                                         (data[12 /* X13 */] <0.15134215f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13983016f ? 
                                        0.0f : 
                                         (data[27 /* X28 */] <-0.86302596f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17832541f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23699254f ? 
         (data[18 /* X19 */] <-0.00855547f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
                 (data[12 /* X13 */] <0.17270769f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                         (data[19 /* X20 */] <-0.82827616f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6059318f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.173106f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30477414f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04281717f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[17 /* X18 */] <-0.17687358f ? 
             (data[28 /* X29 */] <0.16827793f ? 
                 (data[10 /* X11 */] <-0.65730876f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12974352f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27902347f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18670894f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18205786f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.094746366f ? 
             (data[34 /* X35 */] <-0.3395759f ? 
                 (data[33 /* X34 */] <0.4375f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.484375f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27102923f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[19 /* X20 */] <-0.43486613f ? 
             (data[6 /* X7 */] <0.17407596f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04869478f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.066732615f ? 
                 (data[1 /* X2 */] <-0.07780942f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.6587026f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.55725324f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (data[34 /* X35 */] <-0.860662f ? 
             (data[4 /* X5 */] <0.15770203f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.15308951f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.107333705f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.6249533f ? 
                     (data[28 /* X29 */] <0.15403256f ? 
                         (data[12 /* X13 */] <0.16907379f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.009708738f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[17 /* X18 */] <-0.6347706f ? 
             (data[4 /* X5 */] <0.23364498f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.6168021f ? 
                 (data[1 /* X2 */] <-0.31472564f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37969303f ? 
                     (data[24 /* X25 */] <-0.09685688f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.7093908f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.38967302f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56035244f ? 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25613672f ? 
                                        0.0f : 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35714f ? 
                                            0.0f : 
                                             (data[32 /* X33 */] <0.4964285f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    1.0f) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.38545644f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2824945f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48373073f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16010766f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (data[3 /* X4 */] <-0.17681804f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32128987f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29313293f ? 
                         (data[11 /* X12 */] <-0.44034964f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.21645406f ? 
                                 (data[32 /* X33 */] <0.1f ? 
                                    1.0f : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22309858f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2759597f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[32 /* X33 */] <0.5f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[16 /* X17 */] <-0.4641139f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X7 */] <0.26387227f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32797432f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16377747f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50817096f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[5 /* X6 */] <0.28078294f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30628008f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10677513f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.48512936f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.344017f ? 
                     (data[29 /* X30 */] <0.062318385f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.051027678f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.102769665f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.06846689f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25265357f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.33133394f ? 
                         (data[29 /* X30 */] <0.12314928f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.1334919f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46400377f ? 
             (data[29 /* X30 */] <0.120027386f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11359147f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.42213175f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.013826174f ? 
                         (data[18 /* X19 */] <-0.12370808f ? 
                             (data[13 /* X14 */] <0.1286491f ? 
                                 (data[11 /* X12 */] <-0.22652031f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.4662011f ? 
                         (data[11 /* X12 */] <-0.3666945f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.7734648f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24143143f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18135644f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30004773f ? 
                     (data[26 /* X27 */] <-0.2621055f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2715069f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <0.026682343f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2612198f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.026286475f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22498158f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19558446f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.875f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.19946109f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25402367f ? 
                 (data[17 /* X18 */] <-0.21480884f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.33497077f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09899749f ? 
         (data[34 /* X35 */] <-0.860662f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07537494f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6416711f ? 
                     (data[35 /* X36 */] <-0.40625f ? 
                         (data[5 /* X6 */] <0.19399641f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.10114703f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.36050683f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[10 /* X11 */] <-0.27054563f ? 
             (data[21 /* X22 */] <0.07743763f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.35282966f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.10095481f ? 
             (data[21 /* X22 */] <0.07970655f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                 (data[8 /* X9 */] <-0.45001405f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20158225f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.3334504f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.34755665f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.16649316f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.20958954f ? 
                                        0.0f : 
                                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44949603f ? 
                                            1.0f : 
                                            0.0f))))))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10932673f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.6855396f ? 
             (data[21 /* X22 */] <0.105420925f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09066721f ? 
             (data[13 /* X14 */] <0.13920522f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18504149f ? 
                     (data[27 /* X28 */] <-0.3032444f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.32512033f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.16915303f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23777433f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10246826f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2188667f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55789304f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2115964f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.17122683f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[26 /* X27 */] <-0.21576983f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17615527f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.22462483f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.36129525f ? 
             (data[29 /* X30 */] <0.06051489f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78125f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.51832527f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.56052935f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.599619f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5570514f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X10 */] <0.41127396f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09227688f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21484375f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.031201564f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.044678085f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.009590421f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.026635766f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17825483f ? 
                 (data[19 /* X20 */] <-0.02350969f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24566126f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16225861f ? 
                             (data[0 /* X1 */] <-0.05484033f ? 
                                 (data[17 /* X18 */] <-0.23738718f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25147593f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2132247f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12862496f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.071702905f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.9f ? 
                                 (data[4 /* X5 */] <0.19020562f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.006187722f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05529043f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.006663372f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14235106f ? 
                         (data[21 /* X22 */] <0.06836197f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.3664728f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15454504f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7f ? 
                                    0.0f : 
                                     (data[17 /* X18 */] <-0.27880824f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0030844295f ? 
             (data[3 /* X4 */] <-0.4811662f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.36350366f ? 
                     (data[4 /* X5 */] <0.15010774f ? 
                         (data[23 /* X24 */] <0.07708225f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38671875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36328125f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15882218f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.09948759f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.13598424f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[33 /* X34 */] <0.119140625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.065648794f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37054196f ? 
                 (data[15 /* X16 */] <0.062591f ? 
                     (data[0 /* X1 */] <-0.15296163f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18218529f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31156933f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20974874f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.021650558f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.359375f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.34167328f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0737288f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33118108f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27312973f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29823607f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18951687f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.015736304f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39085788f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.3305922f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18593135f ? 
                 (data[2 /* X3 */] <0.021955391f ? 
                     (data[30 /* X31 */] <0.18218529f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.122458346f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19996955f ? 
                             (data[0 /* X1 */] <-0.021650558f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31566337f ? 
                 (data[4 /* X5 */] <0.07275113f ? 
                     (data[0 /* X1 */] <0.22223234f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23408498f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.28599808f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0347544f ? 
             (data[30 /* X31 */] <0.095631644f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
                     (data[13 /* X14 */] <0.09602111f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5334438f ? 
                         (data[26 /* X27 */] <-0.08834677f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.34375f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X2 */] <-0.18759987f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
             (data[25 /* X26 */] <0.19967078f ? 
                 (data[23 /* X24 */] <0.10972459f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21057895f ? 
             (data[9 /* X10 */] <-0.48592123f ? 
                 (data[18 /* X19 */] <0.07461031f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.28758654f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19542123f ? 
                         (data[10 /* X11 */] <-0.45404637f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.25987396f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.007481685f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.38257506f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[15 /* X16 */] <0.06425159f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.12332896f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.022725f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <-0.0657397f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.34121233f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.12707675f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.7667322f ? 
            1.0f : 
             (data[5 /* X6 */] <0.08464281f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.041768223f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43837872f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.60665596f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8323906f ? 
                             (data[24 /* X25 */] <-0.21983936f ? 
                                 (data[15 /* X16 */] <0.07978859f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3588781f ? 
                                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25783396f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15278122f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17905685f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5698498f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.28290692f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.32605618f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.7944125f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.3212108f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.091799416f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.338096f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.09955027f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.08761831f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.5738299f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.16035242f ? 
                                 (data[20 /* X21 */] <0.26029316f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18135108f ? 
                                    1.0f : 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.090213016f ? 
                                        1.0f : 
                                        0.0f)))))))) : 
        0.01754386f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
        0.012820513f : 
         (data[15 /* X16 */] <0.13188963f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1434435f ? 
                 (data[28 /* X29 */] <0.12019978f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08681817f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[14 /* X15 */] <0.13876802f ? 
                 (data[34 /* X35 */] <-0.9007455f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.057306882f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.56696993f ? 
             (data[9 /* X10 */] <-0.42803767f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18786535f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                 (data[34 /* X35 */] <-0.35102832f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.09703713f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.31178495f ? 
                             (data[19 /* X20 */] <-0.6062925f ? 
                                0.0f : 
                                1.0f) : 
                             (data[8 /* X9 */] <-0.13850774f ? 
                                 (data[15 /* X16 */] <0.071214825f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[28 /* X29 */] <0.1184191f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (data[19 /* X20 */] <-0.33267766f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22992375f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.469698f ? 
                     (data[24 /* X25 */] <0.14937261f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.40081266f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23252872f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.22062157f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3671875f ? 
                     (data[20 /* X21 */] <0.14265954f ? 
                         (data[3 /* X4 */] <0.034534857f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.2698133f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.16725685f ? 
             (data[13 /* X14 */] <0.10081934f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.021329405f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.33267766f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.3032444f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13150343f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.12569061f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.038354687f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[26 /* X27 */] <-0.092690736f ? 
             (data[14 /* X15 */] <0.16006224f ? 
                 (data[27 /* X28 */] <0.14202665f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09068637f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54633564f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6059318f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.11377118f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[34 /* X35 */] <-0.095257126f ? 
             (data[35 /* X36 */] <-0.4140625f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18664584f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04281717f ? 
                         (data[3 /* X4 */] <7.183925E-4f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.765625f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3513019f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26037028f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09221135f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
             (data[24 /* X25 */] <-0.9014997f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18883865f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63255996f ? 
             (data[35 /* X36 */] <-0.78515625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08398702f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X7 */] <0.12768121f ? 
             (data[26 /* X27 */] <-0.22735374f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.12166252f ? 
                     (data[10 /* X11 */] <-0.34941924f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.13715018f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.021155603f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10772265f ? 
                         (data[3 /* X4 */] <-0.33509353f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.12378765f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.62488616f ? 
                         (data[26 /* X27 */] <0.25917065f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[34 /* X35 */] <-0.62779564f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.140625f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.15904823f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.54764664f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37890625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06047409f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22595617f ? 
                        1.0f : 
                         (data[3 /* X4 */] <0.034534857f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41712773f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0227955f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.63213164f ? 
             (data[26 /* X27 */] <-0.5285355f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.07926906f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.4502828f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.0625f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.07553886f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28662342f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
                 (data[1 /* X2 */] <-0.36673164f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.259252f ? 
             (data[17 /* X18 */] <-0.062990524f ? 
                 (data[28 /* X29 */] <0.1575939f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1799734f ? 
                     (data[3 /* X4 */] <-0.17016912f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24662754f ? 
                            1.0f : 
                             (data[14 /* X15 */] <0.17081074f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.0632497f ? 
                 (data[2 /* X3 */] <0.06366624f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.5968799f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26857874f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.12617157f ? 
                             (data[23 /* X24 */] <0.13778867f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30236176f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2549208f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                 (data[14 /* X15 */] <0.08806751f ? 
                     (data[3 /* X4 */] <-0.20218039f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.29201102f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.16888092f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.65625f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.28419605f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11339438f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[5 /* X6 */] <0.10791367f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.03309807f ? 
                 (data[24 /* X25 */] <-0.4486133f ? 
                     (data[33 /* X34 */] <-0.5625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.37585023f ? 
                 (data[24 /* X25 */] <-0.33429244f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.609375f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.17542422f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3513594f ? 
                     (data[9 /* X10 */] <-0.5054843f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12303733f ? 
                             (data[28 /* X29 */] <0.14440611f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <0.24421655f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7923071f ? 
             (data[31 /* X32 */] <0.098903075f ? 
                 (data[8 /* X9 */] <-0.16270241f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.08703484f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2751183f ? 
                             (data[1 /* X2 */] <-0.5666658f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.44449252f ? 
                                     (data[20 /* X21 */] <0.14229997f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.091210075f ? 
             (data[3 /* X4 */] <-0.59529674f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.06684936f ? 
                     (data[33 /* X34 */] <-0.484375f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28233847f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0660942f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24868673f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32830754f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[34 /* X35 */] <0.0750025f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[12 /* X13 */] <0.2208569f ? 
                 (data[31 /* X32 */] <0.08574013f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
             (data[14 /* X15 */] <0.10124964f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.25628746f ? 
                        1.0f : 
                        0.0f))) : 
             (data[28 /* X29 */] <0.28927153f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[30 /* X31 */] <0.16289322f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0845349f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16066298f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
                         (data[35 /* X36 */] <-0.392855f ? 
                             (data[3 /* X4 */] <-0.19220082f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.5105082f ? 
                 (data[24 /* X25 */] <-0.2111777f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[7 /* X8 */] <0.1039355f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41330433f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12753126f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.34452167f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27248737f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25757164f ? 
                                 (data[8 /* X9 */] <-0.13850774f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.21396431f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[16 /* X17 */] <-0.322892f ? 
                                    1.0f : 
                                     (data[33 /* X34 */] <-0.40000126f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.48055437f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[35 /* X36 */] <-0.8839288f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <0.148328f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5480159f ? 
                         (data[9 /* X10 */] <-0.35085958f ? 
                             (data[8 /* X9 */] <0.023800455f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <0.18830043f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[27 /* X28 */] <-0.28369224f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4403324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (data[24 /* X25 */] <-0.16940664f ? 
             (data[31 /* X32 */] <0.047983404f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1455051f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2773924f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48260298f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.51602864f ? 
                     (data[1 /* X2 */] <-0.291402f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20596406f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.04497065f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0625f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1155257f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.23969261f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30819944f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                         (data[28 /* X29 */] <0.20010686f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.25895813f ? 
                                1.0f : 
                                 (data[0 /* X1 */] <0.27848902f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16649316f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.033879243f ? 
                         (data[21 /* X22 */] <0.12886639f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27599093f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13184734f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.105178505f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.11919222f ? 
                     (data[12 /* X13 */] <0.19699928f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22349483f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2038914f ? 
                     (data[5 /* X6 */] <0.14190598f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.17902867f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23172389f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.1662504f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21010266f ? 
                 (data[16 /* X17 */] <-0.71629584f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.31599385f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.002352242f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                     (data[33 /* X34 */] <-0.30408517f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4669987f ? 
                             (data[27 /* X28 */] <-0.22711399f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28150216f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.029552145f ? 
            1.0f : 
             (data[15 /* X16 */] <0.037951488f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.5234375f ? 
                     (data[16 /* X17 */] <-0.31280473f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1854125f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16104543f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.74140626f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2827104f ? 
                         (data[20 /* X21 */] <0.12136514f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1198712f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[33 /* X34 */] <0.09375f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1039355f ? 
            1.0f : 
             (data[4 /* X5 */] <0.20554608f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.027097886f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.399413f ? 
                 (data[2 /* X3 */] <0.050893236f ? 
                     (data[9 /* X10 */] <-0.15791439f ? 
                         (data[10 /* X11 */] <-0.5443852f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21157612f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24377847f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09899749f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1046114f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21103369f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18048492f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.13947551f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[7 /* X8 */] <0.029715383f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[30 /* X31 */] <0.14819033f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.5895546f ? 
                            1.0f : 
                             (data[0 /* X1 */] <-0.6594472f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <-0.7597656f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26980326f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[31 /* X32 */] <0.0644835f ? 
                                        1.0f : 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2684592f ? 
                                            0.0f : 
                                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27738154f ? 
                                                0.0f : 
                                                1.0f))))))) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.21350801f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.5630993f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21268062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[30 /* X31 */] <0.08781053f ? 
            1.0f : 
             (data[31 /* X32 */] <0.04902258f ? 
                 (data[16 /* X17 */] <-0.27077442f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.04590505f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28275746f ? 
                 (data[9 /* X10 */] <-0.42803767f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21658795f ? 
                 (data[10 /* X11 */] <-0.46533874f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.32017002f ? 
                         (data[21 /* X22 */] <0.14096726f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.120532855f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.4797795f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[13 /* X14 */] <0.105617575f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12307875f ? 
                                1.0f : 
                                0.0f) : 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                 (data[32 /* X33 */] <0.044445f ? 
                                     (data[17 /* X18 */] <-0.36165038f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[0 /* X1 */] <0.023224374f ? 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21408375f ? 
                                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19515593f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f)) : 
                                0.0f)))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.03570647f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.02749237f ? 
                         (data[18 /* X19 */] <-0.120689146f ? 
                             (data[8 /* X9 */] <-0.14793806f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3276456f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20444451f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4684211f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.13799281f ? 
                         (data[10 /* X11 */] <-0.54420495f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.399413f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.12935866f ? 
             (data[14 /* X15 */] <0.12964194f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09794072f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.62622446f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3150762f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.46973348f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2089707f ? 
                 (data[31 /* X32 */] <0.08331542f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21117872f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20526446f ? 
                     (data[34 /* X35 */] <-0.14488438f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.41399068f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27562153f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20163666f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.5764319f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43446654f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28030315f ? 
                 (data[29 /* X30 */] <0.1893106f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.7212245f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.31599632f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.015736304f ? 
                     (data[6 /* X7 */] <0.11620724f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14252779f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.0849047f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30004773f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.7098715f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.124583796f ? 
            0.0f : 
             (data[13 /* X14 */] <0.1512008f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.12180388f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38299134f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5536629f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.45818534f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11793814f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.40100694f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2032678f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.36742264f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.098236024f ? 
             (data[18 /* X19 */] <-0.14290018f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.09457879f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41135147f ? 
                     (data[6 /* X7 */] <0.097612366f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29255807f ? 
                             (data[18 /* X19 */] <-0.16465123f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.05254206f ? 
                                     (data[4 /* X5 */] <0.1736448f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2267357f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17297506f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[28 /* X29 */] <0.09215418f ? 
             (data[31 /* X32 */] <0.040709164f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.15841424f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.054551464f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43973833f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06144178f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.29297477f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1734688f ? 
                 (data[13 /* X14 */] <0.120012276f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.018435711f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43485647f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.375f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25164255f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41270456f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19925934f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5619434f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26471242f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[22 /* X23 */] <0.08752278f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20580967f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.69140625f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.6231399f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3216977f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4533675f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15392306f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[20 /* X21 */] <0.17037244f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.20203885f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26857874f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26866814f ? 
             (data[34 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08655295f ? 
                     (data[18 /* X19 */] <-0.06421391f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23641169f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.46875f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.30229715f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05939236f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.39086202f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.85033405f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1039355f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1266798f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.48283216f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.21525963f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1323912f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[14 /* X15 */] <0.14333107f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8027344f ? 
             (data[34 /* X35 */] <-0.580957f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.46671778f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[14 /* X15 */] <0.13876802f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.60145485f ? 
             (data[33 /* X34 */] <0.12109375f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.09710157f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                     (data[12 /* X13 */] <0.089127935f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.39074832f ? 
                             (data[22 /* X23 */] <0.1160376f ? 
                                 (data[21 /* X22 */] <0.12308065f ? 
                                    0.0f : 
                                     (data[3 /* X4 */] <-0.20894368f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.298382f ? 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09398136f ? 
                                            0.0f : 
                                             (data[23 /* X24 */] <0.06652964f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[33 /* X34 */] <0.10769f ? 
                                             (data[8 /* X9 */] <0.055049576f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.6262548f ? 
             (data[21 /* X22 */] <0.105420925f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46289062f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011513922f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23506758f ? 
                     (data[6 /* X7 */] <0.12019819f ? 
                         (data[25 /* X26 */] <-0.59575725f ? 
                            1.0f : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.40570068f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.35f ? 
                                1.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16511813f ? 
                                    0.0f : 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20082937f ? 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34250778f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.158096f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                    1.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.15489656f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20366468f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4621085f ? 
             (data[27 /* X28 */] <-0.54764664f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.067691565f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.37304688f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4669429f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0319011f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27277285f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3880813f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.38375f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[16 /* X17 */] <-0.6973822f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.33203125f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24733922f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27308142f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
                             (data[2 /* X3 */] <-0.14584732f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22647211f ? 
                                    0.0f : 
                                     (data[1 /* X2 */] <-0.15762694f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.078194484f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17832541f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.38900667f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2339928f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.484375f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.044305664f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <0.20452689f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.18252319f ? 
                         (data[11 /* X12 */] <0.15311578f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43894953f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.108790085f ? 
             (data[0 /* X1 */] <-0.2614105f ? 
                 (data[1 /* X2 */] <0.11287924f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.027915971f ? 
                     (data[8 /* X9 */] <-0.02660742f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22557342f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.17480175f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20560163f ? 
                         (data[6 /* X7 */] <0.09144403f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X8 */] <0.115430385f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.16557512f ? 
                         (data[8 /* X9 */] <-0.041729085f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[5 /* X6 */] <0.18188177f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19970325f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[17 /* X18 */] <0.001107563f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[34 /* X35 */] <-0.860662f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117642194f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4332485f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2032678f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.82421875f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.030883789f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16074347f ? 
                         (data[5 /* X6 */] <0.23265144f ? 
                             (data[6 /* X7 */] <0.15372214f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39817762f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.62889564f ? 
             (data[25 /* X26 */] <-0.7579967f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.06836197f ? 
                     (data[1 /* X2 */] <-0.095144756f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.050822385f ? 
                         (data[26 /* X27 */] <-0.079597026f ? 
                            1.0f : 
                             (data[8 /* X9 */] <-0.1371846f ? 
                                 (data[27 /* X28 */] <-0.003947476f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                             (data[22 /* X23 */] <0.09975376f ? 
                                 (data[2 /* X3 */] <0.09344614f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16327053f ? 
                                    0.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24629232f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18088444f ? 
                                            0.0f : 
                                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20253904f ? 
                                                1.0f : 
                                                0.0f))))) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27103263f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.45960566f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (data[27 /* X28 */] <-0.21037158f ? 
                 (data[13 /* X14 */] <0.15599903f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.175f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21547633f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22880019f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.015954463f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[2 /* X3 */] <-0.13576753f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0204884f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.031975165f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.729634f ? 
                                     (data[11 /* X12 */] <0.099071234f ? 
                                         (data[35 /* X36 */] <-0.45f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[34 /* X35 */] <-0.9128183f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26156017f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3961154f ? 
                         (data[11 /* X12 */] <-0.44034964f ? 
                             (data[2 /* X3 */] <-0.28375947f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0463334f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19802941f ? 
                                        0.0f : 
                                         (data[7 /* X8 */] <0.09991231f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.5f)) : 
                         (data[20 /* X21 */] <0.32122627f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08578779f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27277285f ? 
             (data[13 /* X14 */] <0.08882376f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12595564f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48373073f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20478666f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16968016f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[24 /* X25 */] <0.09128887f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.15453818f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20953037f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[16 /* X17 */] <-0.8402853f ? 
            1.0f : 
             (data[15 /* X16 */] <0.10417017f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34969708f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.250784f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.37304688f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2599755f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23161398f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22806917f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23852026f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.18147384f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024499232f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                     (data[32 /* X33 */] <-0.3125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[3 /* X4 */] <-0.43466857f ? 
             (data[15 /* X16 */] <0.10571014f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.16643594f ? 
                 (data[21 /* X22 */] <0.06836197f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46875f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.28515625f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[16 /* X17 */] <-0.3454774f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.33984375f ? 
             (data[25 /* X26 */] <-0.17480175f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.203125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.41474438f ? 
                 (data[15 /* X16 */] <0.09031045f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23580508f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.2698133f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[12 /* X13 */] <0.123195775f ? 
             (data[27 /* X28 */] <-0.3570129f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.118877396f ? 
            0.0f : 
             (data[31 /* X32 */] <0.084354594f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.18094064f ? 
                     (data[33 /* X34 */] <0.2715625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[12 /* X13 */] <0.086402506f ? 
            1.0f : 
             (data[27 /* X28 */] <-1.0951077f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.71572334f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.622941f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.470533f ? 
                             (data[25 /* X26 */] <-0.5541854f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36173227f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.05655554f ? 
                                        0.0f : 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                            0.0f : 
                                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18604891f ? 
                                                0.0f : 
                                                1.0f))) : 
                                     (data[7 /* X8 */] <0.33255884f ? 
                                         (data[0 /* X1 */] <-0.0780796f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f))))) : 
         (data[23 /* X24 */] <0.059821334f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22748531f ? 
             (data[33 /* X34 */] <-0.43359375f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10825567f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16550025f ? 
                     (data[32 /* X33 */] <-0.546875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X2 */] <-0.37251008f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3363305f ? 
                            0.0f : 
                            1.0f) : 
                         (data[34 /* X35 */] <-0.90838045f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.16957009f ? 
                                 (data[27 /* X28 */] <-0.12727483f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.553823f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[27 /* X28 */] <-0.17126723f ? 
                 (data[16 /* X17 */] <-0.28528148f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.19179384f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-0.31710047f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21786082f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.64522004f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5814916f ? 
                 (data[25 /* X26 */] <-0.56769097f ? 
                     (data[31 /* X32 */] <0.037591632f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6310344f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.10451598f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.1297677f ? 
             (data[8 /* X9 */] <0.10192674f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (data[16 /* X17 */] <-0.7667322f ? 
            1.0f : 
             (data[21 /* X22 */] <0.1311353f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11434453f ? 
                     (data[29 /* X30 */] <0.08627403f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.17896198f ? 
                     (data[19 /* X20 */] <-0.28262618f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.025195718f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18656035f ? 
                         (data[24 /* X25 */] <-0.69484276f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22425304f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.26858672f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29581168f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24812698f ? 
                                 (data[3 /* X4 */] <-0.42774007f ? 
                                    0.0f : 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28107294f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f))))) : 
         (data[16 /* X17 */] <-0.26657137f ? 
             (data[33 /* X34 */] <-0.16015625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15362908f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37466556f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.078125f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.4969798f ? 
                 (data[18 /* X19 */] <0.068212934f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24220313f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2985084f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.333241f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21474624f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.038749557f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.16862871f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
             (data[35 /* X36 */] <-0.85546875f ? 
                 (data[20 /* X21 */] <0.1912352f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <-0.6324625f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13053216f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38167754f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
        0.024193548f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[25 /* X26 */] <-0.60145485f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2634887f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.36029577f ? 
                     (data[8 /* X9 */] <-0.19294575f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31599683f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.047521655f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.087472126f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.265625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09009052f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[25 /* X26 */] <-0.3743158f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.26171875f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.15453818f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11578787f ? 
                 (data[10 /* X11 */] <-0.250784f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36125f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09622348f ? 
                             (data[26 /* X27 */] <0.2267357f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2056927f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.187393f ? 
                     (data[3 /* X4 */] <0.040660787f ? 
                         (data[30 /* X31 */] <0.1404727f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08248408f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.017034f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.80816686f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7975128f ? 
                         (data[1 /* X2 */] <-0.6267616f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23905908f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32960036f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26794025f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1356535f ? 
                         (data[10 /* X11 */] <-0.80871606f ? 
                             (data[21 /* X22 */] <0.11434533f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24478944f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19881703f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.1605312f ? 
                                     (data[3 /* X4 */] <0.33419177f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                     (data[25 /* X26 */] <-0.24393626f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <0.012574224f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.07536497f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.31700778f ? 
             (data[33 /* X34 */] <-0.33203125f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18029514f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.25734702f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.2843888f ? 
             (data[9 /* X10 */] <-0.23991609f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24422508f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.21908861f ? 
                     (data[20 /* X21 */] <0.13358158f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.41994715f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5890681f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5035937f ? 
                         (data[17 /* X18 */] <-0.3823609f ? 
                             (data[2 /* X3 */] <-0.20201224f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20327103f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26923662f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.21029693f ? 
                                     (data[2 /* X3 */] <-0.12943795f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (data[24 /* X25 */] <-0.15731502f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
         (data[16 /* X17 */] <-0.34432748f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29025403f ? 
                 (data[23 /* X24 */] <0.044277694f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.2300518f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.28206095f ? 
                             (data[2 /* X3 */] <-0.20201224f ? 
                                 (data[17 /* X18 */] <-0.113123976f ? 
                                     (data[2 /* X3 */] <-0.4647745f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[35 /* X36 */] <-0.3f ? 
                                     (data[3 /* X4 */] <-0.0680887f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                         (data[24 /* X25 */] <-0.4486133f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18379007f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12804118f ? 
                     (data[31 /* X32 */] <0.13319592f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.098768f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.02173913f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[8 /* X9 */] <0.024428202f ? 
            0.0f : 
             (data[33 /* X34 */] <0.0f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.9277344f ? 
             (data[32 /* X33 */] <0.2421875f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.16550025f ? 
                 (data[27 /* X28 */] <-0.28369224f ? 
                     (data[31 /* X32 */] <0.079158716f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16015394f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
        0.6666667f : 
         (data[33 /* X34 */] <-0.84375f ? 
             (data[16 /* X17 */] <-0.018592468f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3287674f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.3933078f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41287032f ? 
                     (data[7 /* X8 */] <0.032923616f ? 
                         (data[9 /* X10 */] <-0.54380476f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                             (data[17 /* X18 */] <-0.73443997f ? 
                                1.0f : 
                                0.0f) : 
                             (data[31 /* X32 */] <0.16229287f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.046624657f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37122563f ? 
                                    0.0f : 
                                     (data[24 /* X25 */] <0.1212321f ? 
                                        1.0f : 
                                        0.0f))))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[12 /* X13 */] <0.16543989f ? 
             (data[16 /* X17 */] <-0.50103456f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.086246304f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24542703f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                             (data[26 /* X27 */] <-0.25515515f ? 
                                1.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19644587f ? 
                                     (data[3 /* X4 */] <-0.046624657f ? 
                                        0.0f : 
                                         (data[32 /* X33 */] <-0.25f ? 
                                            1.0f : 
                                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16323197f ? 
                                                0.0f : 
                                                1.0f))) : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18634558f ? 
                 (data[27 /* X28 */] <-0.26414007f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                         (data[31 /* X32 */] <0.079158716f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.3079107f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28125f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16438068f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.029574882f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1702133f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27305266f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47398117f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.054109525f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21357256f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.037827685f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[29 /* X30 */] <0.2261728f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.23828125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07469191f ? 
             (data[24 /* X25 */] <-0.4662011f ? 
                 (data[23 /* X24 */] <0.06397569f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.07247792f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26772687f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25038612f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29752243f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7578125f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25959834f ? 
                     (data[26 /* X27 */] <-0.34319288f ? 
                         (data[34 /* X35 */] <0.038354687f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24175209f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.50293785f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17024633f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06376246f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2897666f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34945068f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16756164f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.15518166f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.47934926f ? 
                         (data[18 /* X19 */] <0.55254304f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[1 /* X2 */] <-0.043138757f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22497365f ? 
             (data[1 /* X2 */] <-0.27427652f ? 
                 (data[20 /* X21 */] <0.13025174f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.6746962f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25917065f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.557532f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2175773f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35558638f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[7 /* X8 */] <0.105204225f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22006181f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.1842207f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15077895f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3560295f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.38723394f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3415375f ? 
                     (data[27 /* X28 */] <-0.51831836f ? 
                         (data[15 /* X16 */] <0.11943558f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.13927552f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <0.41857463f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.84765625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.56132376f ? 
         (data[13 /* X14 */] <0.1655955f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17271723f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30174538f ? 
             (data[22 /* X23 */] <0.0959178f ? 
                 (data[1 /* X2 */] <-0.11248009f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.08897634f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-1.1668693f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.079516076f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24678536f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20216066f ? 
                                     (data[0 /* X1 */] <-0.17172036f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[6 /* X7 */] <0.23034832f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                 (data[20 /* X21 */] <0.14662097f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30854174f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f))))) : 
             (data[24 /* X25 */] <-0.17139144f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5079653f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[18 /* X19 */] <0.14498134f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06309368f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32179686f ? 
             (data[3 /* X4 */] <-0.17681804f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13336311f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30491826f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16185379f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24311975f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.30854174f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26222453f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24711713f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9839674f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[19 /* X20 */] <-1.0429397f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.020757843f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30986091f ? 
                                 (data[0 /* X1 */] <-0.17172036f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <-0.4607352f ? 
                                         (data[1 /* X2 */] <-0.14356266f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27142316f ? 
                 (data[23 /* X24 */] <0.12281397f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20400807f ? 
             (data[10 /* X11 */] <-0.818313f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.396023f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.29272616f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.18040857f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[19 /* X20 */] <-0.88261324f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8046875f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5409157f ? 
                     (data[16 /* X17 */] <-0.3968654f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32867414f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12802972f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.56022626f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.03090255f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5098178f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.28125f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18807921f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.23582463f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.057382807f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X13 */] <0.118199155f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17357075f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.084639005f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.11527578f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.375f ? 
             (data[24 /* X25 */] <-0.9014997f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.30339608f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7255012f ? 
                         (data[16 /* X17 */] <-0.66585946f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.20489913f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.06889453f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20460583f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10571014f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.12454166f ? 
                     (data[10 /* X11 */] <-0.47663108f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.1192623f ? 
                         (data[14 /* X15 */] <0.1822264f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17425838f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                     (data[31 /* X32 */] <0.11656909f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31451392f ? 
                             (data[26 /* X27 */] <-0.10688104f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.0927649f ? 
                                     (data[30 /* X31 */] <0.23367526f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[10 /* X11 */] <-0.1830299f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12281397f ? 
                            1.0f : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.57416147f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X4 */] <-0.57416147f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27221316f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.61105293f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16310087f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (data[21 /* X22 */] <0.07705948f ? 
            1.0f : 
             (data[4 /* X5 */] <0.15542375f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4271374f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06181341f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13590334f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09907461f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[20 /* X21 */] <0.11259863f ? 
                     (data[3 /* X4 */] <-0.3036298f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.083695985f ? 
             (data[27 /* X28 */] <-0.21037158f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[33 /* X34 */] <-0.84375f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.043810662f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30730963f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21075703f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30229178f ? 
                         (data[17 /* X18 */] <-0.3305846f ? 
                             (data[25 /* X26 */] <-0.30862963f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[14 /* X15 */] <0.12237247f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11419697f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21209797f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[35 /* X36 */] <-0.40039062f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.2111777f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2578125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.43945312f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25436398f ? 
                 (data[13 /* X14 */] <0.23996812f ? 
                     (data[3 /* X4 */] <-0.083822764f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X11 */] <-0.11527578f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <-0.018133298f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80071867f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22676128f ? 
                     (data[15 /* X16 */] <0.072155654f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14414386f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16295281f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17679174f ? 
                         (data[34 /* X35 */] <-0.535715f ? 
                             (data[6 /* X7 */] <0.20480625f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[21 /* X22 */] <0.19542123f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[13 /* X14 */] <0.0876242f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6370806f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.55108976f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6437075f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <0.15f ? 
                                     (data[11 /* X12 */] <0.33482623f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15483734f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.13735263f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.09409988f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[29 /* X30 */] <0.11425379f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2683164f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.5174209f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.17201956f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25592566f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17759109f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.02162896f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.83299744f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10645225f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25374046f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2771022f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14334382f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                     (data[29 /* X30 */] <0.3030061f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18869205f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22225353f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08303179f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49275115f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.8742235f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.26995462f ? 
                 (data[35 /* X36 */] <-0.3671875f ? 
                     (data[5 /* X6 */] <0.11373139f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.2939779f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8359375f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.34426042f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2030784f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17831941f ? 
                 (data[25 /* X26 */] <-0.5247187f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.828125f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.27036726f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36899006f ? 
                                0.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11611397f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1248825f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[30 /* X31 */] <0.07581815f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16866286f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[9 /* X10 */] <-0.45939127f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25169435f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20416929f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6796875f ? 
                 (data[33 /* X34 */] <-0.84375f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17422162f ? 
                        0.0f : 
                        1.0f) : 
                     (data[26 /* X27 */] <-0.22735374f ? 
                         (data[31 /* X32 */] <0.10409896f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20158225f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3857422f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.092246905f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06156079f ? 
             (data[15 /* X16 */] <0.08723051f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[2 /* X3 */] <-0.38179228f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17523295f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.15841424f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05859375f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20225468f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.212835f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20541282f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.3195239f ? 
                         (data[4 /* X5 */] <0.18315038f ? 
                             (data[11 /* X12 */] <-0.2577449f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.1341665f ? 
                 (data[31 /* X32 */] <0.043826696f ? 
                     (data[11 /* X12 */] <-0.2805705f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.103758164f ? 
                     (data[16 /* X17 */] <-0.64698833f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.27906394f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31069395f ? 
                                 (data[24 /* X25 */] <-0.06367688f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26291898f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <-0.041821778f ? 
                                    0.0f : 
                                    1.0f))))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (data[26 /* X27 */] <-0.1115146f ? 
                 (data[25 /* X26 */] <-0.26688516f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.84375f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3285612f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13454746f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2434936f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.042147256f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5064326f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.078561105f ? 
                 (data[3 /* X4 */] <-0.24445097f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.12439149f ? 
                         (data[14 /* X15 */] <0.12051584f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.2909681f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22128746f ? 
                         (data[23 /* X24 */] <0.09009052f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22348216f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43918115f ? 
             (data[15 /* X16 */] <0.102630205f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.234375f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24990661f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.13454746f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.17870173f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.016162222f ? 
                             (data[17 /* X18 */] <-0.39075467f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.07121799f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6796875f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.21289706f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[20 /* X21 */] <0.18361227f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.3973275f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.16149114f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.16054964f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.556414f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.84869176f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
        0.012820513f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15479869f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30984142f ? 
                 (data[3 /* X4 */] <-0.09227688f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.17098592f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12726972f ? 
                 (data[15 /* X16 */] <0.06656888f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[1 /* X2 */] <-0.021469591f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28868473f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9260575f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.45365217f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37542188f ? 
                     (data[25 /* X26 */] <-0.5861077f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23224042f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X9 */] <-0.4575749f ? 
                             (data[31 /* X32 */] <0.05588115f ? 
                                0.0f : 
                                1.0f) : 
                             (data[17 /* X18 */] <-0.775861f ? 
                                1.0f : 
                                 (data[10 /* X11 */] <-0.9238083f ? 
                                     (data[33 /* X34 */] <0.271793f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5717009f ? 
                                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20974874f ? 
                                            0.0f : 
                                             (data[6 /* X7 */] <0.19203523f ? 
                                                 (data[16 /* X17 */] <-0.37669083f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f)) : 
                                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29713327f ? 
                                            0.0f : 
                                            1.0f)))))) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[30 /* X31 */] <0.08781053f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.56700087f ? 
            1.0f : 
             (data[31 /* X32 */] <0.04590505f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.14414386f ? 
                     (data[3 /* X4 */] <-0.10380222f ? 
                         (data[15 /* X16 */] <0.058239955f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.10968184f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4375f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06888377f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.52161294f ? 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28547618f ? 
                                        1.0f : 
                                         (data[14 /* X15 */] <0.14485209f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.51900834f ? 
                                 (data[16 /* X17 */] <-0.48428845f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (data[18 /* X19 */] <0.020232683f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4391106f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.50042725f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <0.23923711f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.46759033f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2550872f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45136544f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4719486f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5441401f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.4038287f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40345356f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.18645546f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X1 */] <0.0800569f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (data[21 /* X22 */] <0.14588325f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30123124f ? 
                 (data[0 /* X1 */] <-0.076792665f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.1946717f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3810818f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                     (data[24 /* X25 */] <-0.53655237f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.117823556f ? 
                             (data[29 /* X30 */] <0.12651715f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.14494675f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3097573f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.97265625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13057862f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29243192f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43537265f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18723312f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28306776f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (data[21 /* X22 */] <0.06760567f ? 
             (data[33 /* X34 */] <-0.4375f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.0932593f ? 
                 (data[2 /* X3 */] <-0.27481836f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1735771f ? 
             (data[17 /* X18 */] <-0.47620553f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.265625f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32867414f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.108415656f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.23295271f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.15623447f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.27820063f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <0.0304735f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[28 /* X29 */] <0.10773507f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08647709f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2661786f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9030694f ? 
                 (data[35 /* X36 */] <-0.8984375f ? 
                     (data[3 /* X4 */] <0.034534857f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0960518f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32309166f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.921875f ? 
                 (data[35 /* X36 */] <-0.4140625f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.4666267f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.19277404f ? 
                             (data[25 /* X26 */] <-0.46578532f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.13169326f ? 
                             (data[4 /* X5 */] <0.17076422f ? 
                                1.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41207832f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[23 /* X24 */] <0.12935866f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57495135f ? 
                                        0.0f : 
                                         (data[22 /* X23 */] <0.12653346f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33727455f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (data[10 /* X11 */] <-0.77870154f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10109024f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2713553f ? 
             (data[15 /* X16 */] <0.053351182f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                     (data[4 /* X5 */] <0.12725347f ? 
                         (data[27 /* X28 */] <-0.20548353f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.21095335f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.278354f ? 
                         (data[8 /* X9 */] <-0.041729085f ? 
                            0.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11704589f ? 
                                 (data[13 /* X14 */] <0.13174887f ? 
                                    0.0f : 
                                     (data[32 /* X33 */] <0.0f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.09602111f ? 
                         (data[22 /* X23 */] <0.17315196f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.52808315f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2690281f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.076822855f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17550233f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.97265625f ? 
                 (data[28 /* X29 */] <0.07390229f ? 
                     (data[23 /* X24 */] <0.036129847f ? 
                        0.0f : 
                        1.0f) : 
                     (data[26 /* X27 */] <-0.1115146f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50265086f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38928273f ? 
                 (data[17 /* X18 */] <-0.039342698f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30085284f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7255012f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.078125f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[16 /* X17 */] <-0.2938911f ? 
             (data[9 /* X10 */] <-0.24473973f ? 
                 (data[11 /* X12 */] <-0.45385778f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29480934f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[18 /* X19 */] <-0.072529145f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.14727038f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.2313559f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2193677f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[0 /* X1 */] <-0.15003057f ? 
                 (data[26 /* X27 */] <0.18026802f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32701835f ? 
                     (data[7 /* X8 */] <0.064605184f ? 
                         (data[9 /* X10 */] <-0.50521576f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2466652f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.15483734f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[17 /* X18 */] <-0.48591357f ? 
                             (data[28 /* X29 */] <0.12106072f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.35464966f ? 
                 (data[10 /* X11 */] <-0.45404637f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.1180468f ? 
                     (data[25 /* X26 */] <-0.27916294f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28179583f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2304609f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.014205832f ? 
                     (data[20 /* X21 */] <0.21530762f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.34352866f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10774166f ? 
                     (data[5 /* X6 */] <0.08890359f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4014109f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.09214553f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21329324f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_10_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[33 /* X34 */] <-0.921875f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.044904295f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.6843299f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.79326564f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.1031799f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05475316f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2622735f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.18424769f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[5 /* X6 */] <0.15960823f ? 
                                     (data[32 /* X33 */] <-0.09000025f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.05673716f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.031201564f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03173373f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21417762f ? 
             (data[33 /* X34 */] <-0.640625f ? 
                 (data[32 /* X33 */] <-0.4453125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.44225058f ? 
                     (data[19 /* X20 */] <-0.399413f ? 
                         (data[27 /* X28 */] <-0.20548353f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2582505f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14613639f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[16 /* X17 */] <-0.5649867f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.31932124f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.1623115f ? 
                 (data[25 /* X26 */] <-0.35282966f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4765625f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.512882f ? 
                         (data[2 /* X3 */] <-0.3727738f ? 
                             (data[4 /* X5 */] <0.15132283f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.57936376f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
             (data[29 /* X30 */] <0.061403137f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30971092f ? 
                     (data[11 /* X12 */] <-0.73619074f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71023124f ? 
                             (data[26 /* X27 */] <-0.10688104f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6851792f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.04941135f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[11 /* X12 */] <-0.40098828f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15368135f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[6 /* X7 */] <0.12917782f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.114949964f ? 
                 (data[12 /* X13 */] <0.16180599f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30606923f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.12311546f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30360907f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[13 /* X14 */] <0.12241139f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18737802f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3713057f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28879416f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23600283f ? 
                             (data[24 /* X25 */] <-0.21645406f ? 
                                 (data[8 /* X9 */] <-0.20698835f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17246586f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07700114f ? 
                                     (data[31 /* X32 */] <0.05551211f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.72265625f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.35553035f ? 
                 (data[4 /* X5 */] <0.048344187f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23474911f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46804205f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.16017303f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.10972459f ? 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30196834f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (data[23 /* X24 */] <0.027097886f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.48962033f ? 
                     (data[5 /* X6 */] <0.11489189f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.6640617f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28936368f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12299305f ? 
                                0.0f : 
                                1.0f) : 
                             (data[31 /* X32 */] <0.10908701f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[32 /* X33 */] <-0.6542969f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12677246f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27355576f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15214686f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                     (data[19 /* X20 */] <-0.5486033f ? 
                         (data[21 /* X22 */] <0.17726992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.09336287f ? 
                         (data[28 /* X29 */] <0.18252333f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[2 /* X3 */] <-0.63405913f ? 
             (data[11 /* X12 */] <-0.01236977f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1074646f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.18006195f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20361717f ? 
                             (data[3 /* X4 */] <-0.3230695f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[2 /* X3 */] <0.08122912f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.17214893f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33896008f ? 
                 (data[7 /* X8 */] <0.029081022f ? 
                     (data[18 /* X19 */] <0.02966968f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.60145485f ? 
                 (data[15 /* X16 */] <0.10571014f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6264945f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21418148f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.08747265f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26657107f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[31 /* X32 */] <0.13214831f ? 
                                     (data[20 /* X21 */] <0.27012172f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[23 /* X24 */] <0.083545834f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22545941f ? 
             (data[29 /* X30 */] <0.07117385f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.14414386f ? 
             (data[25 /* X26 */] <-0.6137327f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3866314f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.484375f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.15432416f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.115393594f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.15145569f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26656505f ? 
                         (data[10 /* X11 */] <-0.54794145f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29827875f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30193943f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.55393106f ? 
                                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33633608f ? 
                                            1.0f : 
                                             (data[3 /* X4 */] <0.09413638f ? 
                                                1.0f : 
                                                 (data[22 /* X23 */] <0.13375135f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                        0.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24566126f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27277285f ? 
             (data[29 /* X30 */] <0.062291384f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.11070568f ? 
                     (data[18 /* X19 */] <-0.072529145f ? 
                         (data[28 /* X29 */] <0.32497713f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.22838198f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (data[11 /* X12 */] <-0.73207253f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                     (data[5 /* X6 */] <0.13116455f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3742883f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.20001602f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.1071664f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21027905f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33009762f ? 
             (data[9 /* X10 */] <-0.48592123f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                     (data[28 /* X29 */] <0.17938657f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19263579f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13913791f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27663732f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[14 /* X15 */] <0.1527886f ? 
                                 (data[10 /* X11 */] <-0.10790123f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0708453f ? 
                         (data[3 /* X4 */] <-0.066914536f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[22 /* X23 */] <0.14908624f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14115068f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35789967f ? 
             (data[15 /* X16 */] <0.07491075f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35807544f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34679037f ? 
             (data[9 /* X10 */] <-0.16756164f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15332834f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.06824695f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.31599632f ? 
                     (data[27 /* X28 */] <-0.22503571f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1429339f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.16470943f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19378921f ? 
                         (data[3 /* X4 */] <-0.4388956f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19203523f ? 
                                1.0f : 
                                0.0f) : 
                             (data[24 /* X25 */] <-0.7229833f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <-0.37591368f ? 
                                     (data[14 /* X15 */] <0.18168142f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19140625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.122966304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[10 /* X11 */] <-0.4709849f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08326712f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.18686838f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.056080673f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.453125f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1737151f ? 
                     (data[5 /* X6 */] <0.0804873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.803772f ? 
                 (data[9 /* X10 */] <-0.37061647f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.08152242f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.13705091f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[30 /* X31 */] <0.15090084f ? 
            0.0f : 
             (data[21 /* X22 */] <0.09861418f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11830451f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.043826696f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.622941f ? 
                         (data[32 /* X33 */] <0.09375f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.94230783f ? 
                             (data[27 /* X28 */] <0.45932934f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3393512f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.2107645f ? 
                                        0.0f : 
                                        1.0f)))))))) : 
         (data[23 /* X24 */] <0.097453296f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[28 /* X29 */] <0.16961345f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.02493695f ? 
                 (data[32 /* X33 */] <0.0f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.34234878f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.090325795f ? 
                             (data[18 /* X19 */] <-0.16465123f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[9 /* X10 */] <-0.42803767f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.236113f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.32084826f ? 
                     (data[27 /* X28 */] <-0.63563144f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19973075f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16681498f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.16667306f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09319676f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.19147718f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.19684161f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[28 /* X29 */] <0.07212161f ? 
            1.0f : 
             (data[14 /* X15 */] <0.12254386f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23673451f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.122433685f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23457259f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20393369f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.3325727f ? 
                     (data[27 /* X28 */] <-0.73472553f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.20623493f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.071884476f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27672404f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18917963f ? 
                 (data[21 /* X22 */] <0.13032286f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.09375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.11907154f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.24498746f ? 
                             (data[34 /* X35 */] <0.11250325f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.21402155f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1830299f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.14410728f ? 
                        1.0f : 
                         (data[8 /* X9 */] <-0.0676511f ? 
                            1.0f : 
                             (data[26 /* X27 */] <-0.19127409f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[25 /* X26 */] <-0.30985743f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14359507f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3168564f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.118202716f ? 
                     (data[9 /* X10 */] <-0.1309424f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15278122f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18672372f ? 
             (data[19 /* X20 */] <-0.46197736f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22521238f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2748924f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5288916f ? 
                        0.0f : 
                         (data[2 /* X3 */] <0.07568789f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25759193f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.0017803374f ? 
                 (data[6 /* X7 */] <0.12019819f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.671875f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.265625f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43446654f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.05685075f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[20 /* X21 */] <0.11781432f ? 
             (data[10 /* X11 */] <-0.4032308f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[4 /* X5 */] <0.17099205f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21658795f ? 
                1.0f : 
                 (data[16 /* X17 */] <0.023437858f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.14160433f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41362977f ? 
             (data[25 /* X26 */] <-0.65056604f ? 
                 (data[19 /* X20 */] <-0.40594155f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2997908f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.375f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.125f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.10675333f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.14070693f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33119762f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[29 /* X30 */] <0.15156013f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14818002f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.14382829f ? 
                 (data[10 /* X11 */] <0.2908724f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23210204f ? 
             (data[15 /* X16 */] <0.062591f ? 
                 (data[21 /* X22 */] <0.10822903f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.012971785f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.25f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X6 */] <0.16554534f ? 
                     (data[25 /* X26 */] <-0.36510748f ? 
                         (data[9 /* X10 */] <-0.18560244f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.87784064f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.12909707f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.41741803f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.033607192f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.39130133f ? 
                                 (data[20 /* X21 */] <0.12601492f ? 
                                     (data[3 /* X4 */] <0.49443877f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22300108f ? 
                                     (data[11 /* X12 */] <0.13740242f ? 
                                        1.0f : 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23238216f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f)))))) : 
             (data[19 /* X20 */] <-0.37849304f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26679713f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18497276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.7283166f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2760245f ? 
                 (data[14 /* X15 */] <0.090095535f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4330579f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17517148f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.17337325f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.16166519f ? 
                                     (data[4 /* X5 */] <0.15132283f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.327547f ? 
                                        0.0f : 
                                         (data[22 /* X23 */] <0.21316296f ? 
                                            0.0f : 
                                            1.0f))))) : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.17625254f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[23 /* X24 */] <0.09377191f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17525558f ? 
                 (data[9 /* X10 */] <-0.44239607f ? 
                     (data[21 /* X22 */] <0.071387194f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16819425f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08370154f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[34 /* X35 */] <-0.3357584f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17801404f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15033121f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29678836f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.81712073f ? 
                     (data[23 /* X24 */] <0.09801302f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0836261f ? 
                            0.0f : 
                            1.0f) : 
                         (data[18 /* X19 */] <-0.32842383f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2582505f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <-0.051487405f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[8 /* X9 */] <0.026637107f ? 
                     (data[17 /* X18 */] <-0.32854268f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.12369026f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08535511f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16799462f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.412108f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.071702905f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2801274f ? 
                     (data[23 /* X24 */] <0.056774557f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[10 /* X11 */] <-1.0920644f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.9104007f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63255996f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.42491522f ? 
                         (data[13 /* X14 */] <0.15257964f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28936368f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34414458f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <-0.24288586f ? 
                                         (data[15 /* X16 */] <0.10410256f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                 (data[7 /* X8 */] <0.09798479f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[14 /* X15 */] <0.13674f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.259252f ? 
             (data[17 /* X18 */] <-0.026398614f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <0.23984022f ? 
                 (data[4 /* X5 */] <0.15314545f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56124735f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.48243183f ? 
                 (data[25 /* X26 */] <-0.7579967f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.65710235f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2313559f ? 
                             (data[8 /* X9 */] <-0.14521798f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.52478987f ? 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0750025f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (data[23 /* X24 */] <0.079777494f ? 
                                1.0f : 
                                 (data[8 /* X9 */] <-0.25390494f ? 
                                    1.0f : 
                                     (data[1 /* X2 */] <-0.2723274f ? 
                                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12554695f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)))))) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.09599631f ? 
                 (data[32 /* X33 */] <-0.3046875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15306816f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.65730876f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3227966f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (data[23 /* X24 */] <0.08190966f ? 
             (data[13 /* X14 */] <0.099868126f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.10393831f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1282023f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.1908194f ? 
             (data[34 /* X35 */] <-0.8816581f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26866424f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                         (data[17 /* X18 */] <-0.20833091f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.43921208f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35521054f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[3 /* X4 */] <0.16980071f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.1f ? 
                                1.0f : 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29041034f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.5685975f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.10293135f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.053264845f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08271834f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.10429168f ? 
                         (data[2 /* X3 */] <-0.24593279f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27014452f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <5.551115E-17f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.57171553f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5698321f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.9236504f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.28231367f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.38972765f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.2578125f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32521468f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0722175f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-1.8566762E-4f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20481215f ? 
                         (data[16 /* X17 */] <-0.22874409f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19567351f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14015867f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2971443f ? 
             (data[22 /* X23 */] <0.129996f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2852412f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.19988233f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.16943896f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2077784f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2241143f ? 
            0.0f : 
             (data[15 /* X16 */] <0.08853738f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.18894614f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.47693914f ? 
                 (data[14 /* X15 */] <0.10023563f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.10820592f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.08774581f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[34 /* X35 */] <-0.860662f ? 
             (data[5 /* X6 */] <0.118718006f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.076805435f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.6290733f ? 
                 (data[12 /* X13 */] <0.16907379f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45728588f ? 
                         (data[32 /* X33 */] <0.15625f ? 
                             (data[28 /* X29 */] <0.18679693f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[25 /* X26 */] <-0.63214934f ? 
             (data[15 /* X16 */] <0.11187002f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <-0.11733741f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.15561412f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40527603f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.105114065f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[33 /* X34 */] <0.03125f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.36061957f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.51022035f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.34375f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[23 /* X24 */] <0.063911766f ? 
            1.0f : 
             (data[22 /* X23 */] <0.106465906f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30859375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0064457776f ? 
                 (data[22 /* X23 */] <0.11158849f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.08676771f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.15145569f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20163666f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21974799f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2852412f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-0.285715f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2025182f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.015715525f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[32 /* X33 */] <-0.125f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.4724978f ? 
                             (data[11 /* X12 */] <0.9109255f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16025765f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18042685f ? 
                                1.0f : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3755248f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
             (data[29 /* X30 */] <0.060410272f ? 
                 (data[8 /* X9 */] <0.30606923f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2833209f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.320538f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[30 /* X31 */] <0.16654307f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.020416897f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.09705103f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <0.07902133f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11590457f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.71964204f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24943465f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.133156f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.36249182f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[11 /* X12 */] <0.31289494f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19043279f ? 
             (data[35 /* X36 */] <-0.64453125f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20885201f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                         (data[0 /* X1 */] <-0.17935404f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18238932f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.7018315f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.22497042f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27854615f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04375496f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09663521f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0637328f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1715653f ? 
                         (data[1 /* X2 */] <-0.6498754f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11403431f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45741913f ? 
                     (data[26 /* X27 */] <-0.16943417f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.01317835f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[1 /* X2 */] <-0.20204598f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12677246f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33388022f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.81640625f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2649375f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31472936f ? 
                         (data[31 /* X32 */] <0.079158716f ? 
                             (data[24 /* X25 */] <-0.28511792f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[17 /* X18 */] <-0.3305846f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08647709f ? 
             (data[34 /* X35 */] <-0.8892931f ? 
                 (data[7 /* X8 */] <0.062067743f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.07743492f ? 
                     (data[14 /* X15 */] <0.10783105f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.10175018f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2705752f ? 
             (data[7 /* X8 */] <0.029081022f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3761489f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29964265f ? 
                     (data[1 /* X2 */] <-0.7654443f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14266941f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27919078f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.46578532f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[23 /* X24 */] <0.112996936f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[23 /* X24 */] <0.10972459f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[28 /* X29 */] <0.106399566f ? 
             (data[7 /* X8 */] <0.053186703f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20536333f ? 
                 (data[32 /* X33 */] <0.036804922f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.025744788f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4421642f ? 
                            1.0f : 
                             (data[0 /* X1 */] <0.46607625f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.97411406f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11031688f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.11329475f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18222058f ? 
                     (data[31 /* X32 */] <0.07500201f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.4121353f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22414517f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20146948f ? 
                                1.0f : 
                                 (data[27 /* X28 */] <-0.7529445f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.54423547f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.171875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3974676f ? 
             (data[1 /* X2 */] <-0.4459793f ? 
                 (data[14 /* X15 */] <0.12862793f ? 
                     (data[15 /* X16 */] <0.06875088f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.27082306f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8492964f ? 
             (data[12 /* X13 */] <0.14454496f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.52487355f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <0.0625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17363757f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2099945f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1180299f ? 
                         (data[13 /* X14 */] <0.08642464f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.028574f ? 
                                1.0f : 
                                 (data[18 /* X19 */] <0.1351566f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[12 /* X13 */] <0.16907379f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12879622f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.61105293f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31721804f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0016658f ? 
                         (data[25 /* X26 */] <-0.61162f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.773381f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.03720841f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.484375f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12677246f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.16276641f ? 
            0.0f : 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.08584377f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7291631f ? 
                         (data[23 /* X24 */] <0.07235623f ? 
                             (data[25 /* X26 */] <-0.25918925f ? 
                                1.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06436007f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[32 /* X33 */] <0.74799675f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[3 /* X4 */] <0.14655189f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19142668f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.14880168f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18658398f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25290507f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.63213164f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.05164047f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.018149119f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21951096f ? 
                     (data[2 /* X3 */] <-0.76657903f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.60145485f ? 
                 (data[15 /* X16 */] <0.11187002f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.077154055f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3558298f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.10571014f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[17 /* X18 */] <0.14708531f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38074476f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70475096f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X7 */] <0.143645f ? 
             (data[13 /* X14 */] <0.08642464f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5269922f ? 
                     (data[8 /* X9 */] <-0.23831074f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0020886324f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.1553942f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.2421875f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058597f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.45355338f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4985078f ? 
                         (data[8 /* X9 */] <-0.16270241f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.22737466f ? 
                                1.0f : 
                                 (data[13 /* X14 */] <0.1286491f ? 
                                    1.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17494339f ? 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26416293f ? 
                                             (data[29 /* X30 */] <0.07490448f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        0.0f)))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12994426f ? 
            0.0f : 
             (data[5 /* X6 */] <0.16692193f ? 
                 (data[13 /* X14 */] <0.120012276f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7713109f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35314313f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23104295f ? 
             (data[25 /* X26 */] <-0.24232958f ? 
                 (data[8 /* X9 */] <-0.22318907f ? 
                     (data[14 /* X15 */] <0.16612253f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30838767f ? 
                         (data[35 /* X36 */] <-0.75f ? 
                             (data[20 /* X21 */] <0.14548309f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.35713577f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                     (data[1 /* X2 */] <-0.29161185f ? 
                         (data[11 /* X12 */] <-0.59529173f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.12367122f ? 
                                 (data[27 /* X28 */] <0.06767171f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.46743095f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34668228f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.119895816f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12677246f ? 
            1.0f : 
             (data[30 /* X31 */] <0.118573576f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.40149847f ? 
             (data[7 /* X8 */] <0.1546843f ? 
                 (data[29 /* X30 */] <0.1626632f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3404842f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[9 /* X10 */] <0.0953262f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19939011f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21199049f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.3933969f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.35985702f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18287747f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20169325f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.6168021f ? 
             (data[7 /* X8 */] <0.073486224f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4627943f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.92077637f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41622114f ? 
                         (data[7 /* X8 */] <0.044305664f ? 
                             (data[2 /* X3 */] <-0.11945448f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.012106587f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19179098f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[11 /* X12 */] <-0.0859409f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066011846f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20217761f ? 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.49951598f ? 
                                            0.0f : 
                                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)))) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28229555f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[29 /* X30 */] <0.10759194f ? 
             (data[24 /* X25 */] <-0.25653645f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.009428444f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21484375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.40063396f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22325979f ? 
                             (data[20 /* X21 */] <0.13114707f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12880966f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[21 /* X22 */] <0.15306816f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5670299f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.07784111f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1893708f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.20542084f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[6 /* X7 */] <0.18006238f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.19469908f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21268062f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24490647f ? 
                                 (data[0 /* X1 */] <-0.059168007f ? 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23318206f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20353003f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44829598f ? 
                 (data[13 /* X14 */] <0.08882376f ? 
                     (data[20 /* X21 */] <0.12543724f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.14929755f ? 
                         (data[4 /* X5 */] <0.13929765f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19822508f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[2 /* X3 */] <0.06486623f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.19574189f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24956459f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.29050648f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16159686f ? 
             (data[13 /* X14 */] <0.11761316f ? 
                 (data[11 /* X12 */] <-0.33763447f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11443654f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.046662193f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.17560503f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X5 */] <0.09448024f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.26414007f ? 
                     (data[25 /* X26 */] <-0.15857884f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31037962f ? 
             (data[31 /* X32 */] <0.033434924f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21530762f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30004773f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.12841924f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[23 /* X24 */] <0.09009052f ? 
                         (data[22 /* X23 */] <0.15076524f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.3203191f ? 
                            1.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.43751565f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.00557887f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19522206f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14358768f ? 
                 (data[8 /* X9 */] <0.13439506f ? 
                     (data[20 /* X21 */] <0.11941048f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.10345674f ? 
                             (data[26 /* X27 */] <0.0043245424f ? 
                                 (data[1 /* X2 */] <-0.10223136f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.07045645f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.40194082f ? 
                         (data[25 /* X26 */] <-0.5774482f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.875f ? 
                             (data[24 /* X25 */] <-0.21645406f ? 
                                 (data[9 /* X10 */] <-0.10388972f ? 
                                    0.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31069395f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2866008f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.15337496f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)))) : 
             (data[4 /* X5 */] <0.13719743f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11979336f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.14400345f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[16 /* X17 */] <-0.026998531f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2094922f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.104995444f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5526572f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6567707f ? 
                     (data[13 /* X14 */] <0.105617575f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24307491f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.08027349f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.13118453f ? 
        0.01369863f : 
         (data[33 /* X34 */] <-0.77734375f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.3282741f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0640638f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.122458346f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.048917204f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.12689812f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37185353f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.122692525f ? 
         (data[14 /* X15 */] <0.091109544f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.65234375f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.117048405f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17972548f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33993563f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09499904f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                         (data[22 /* X23 */] <0.119423844f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06875088f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.146827f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63001955f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.2538243f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39085788f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.474032f ? 
                 (data[27 /* X28 */] <-0.27391616f ? 
                     (data[24 /* X25 */] <0.07902133f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20353003f ? 
            0.0f : 
             (data[31 /* X32 */] <0.0978639f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10358188f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.46364322f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3967992f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.031581867f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.38213047f ? 
                     (data[22 /* X23 */] <0.16867462f ? 
                         (data[3 /* X4 */] <-0.3036298f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.004749425f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                 (data[9 /* X10 */] <-0.33436933f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.20928212f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.16516903f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.5706793f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.17579174f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.796875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.10653625f ? 
                             (data[5 /* X6 */] <0.14567998f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[22 /* X23 */] <0.19106133f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.88671875f ? 
                 (data[16 /* X17 */] <0.2265297f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.04748681f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.078125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28268617f ? 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (data[12 /* X13 */] <0.14000258f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.84375f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[28 /* X29 */] <0.10821858f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22795375f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.232955f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.09886428f ? 
                         (data[10 /* X11 */] <-0.002352242f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23600283f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.46170798f ? 
                                 (data[31 /* X32 */] <0.08283071f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.26171875f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22859319f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25789714f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.77678436f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.09694767f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15766051f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.1802068f ? 
            1.0f : 
             (data[14 /* X15 */] <0.13268396f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06272431f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0960518f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5800772f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22664447f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04136271f ? 
             (data[7 /* X8 */] <0.030349743f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.028119572f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.86776406f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1845211f ? 
                         (data[25 /* X26 */] <-0.54927427f ? 
                             (data[32 /* X33 */] <0.11111f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.022725f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28246364f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <-0.108057134f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.14883402f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.64432126f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f))) : 
            0.0f) : 
         (data[23 /* X24 */] <0.09009052f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4077549f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.1106219f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23905237f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2578125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2444407f ? 
             (data[29 /* X30 */] <0.12269212f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.04485351f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06253188f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5164195f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32244864f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2901764f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3366206f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X7 */] <0.17607144f ? 
                        0.0f : 
                        1.0f))) : 
             (data[17 /* X18 */] <-0.1946717f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26866424f ? 
                     (data[28 /* X29 */] <0.18252333f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.5029742f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2267357f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.74569505f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8492964f ? 
             (data[12 /* X13 */] <0.090036415f ? 
                 (data[7 /* X8 */] <0.07007551f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.32159606f ? 
                     (data[14 /* X15 */] <0.12051584f ? 
                         (data[18 /* X19 */] <-0.021350205f ? 
                             (data[6 /* X7 */] <0.115409054f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.3282741f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15030167f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.1458822f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3933047f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[10 /* X11 */] <0.31383365f ? 
             (data[19 /* X20 */] <0.0552214f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.104063116f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36328125f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1644861f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3258624f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.26560888f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.18912514f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.622941f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18355954f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.91015625f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24536741f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3512201f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9296875f ? 
                 (data[30 /* X31 */] <0.059133112f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.12820692f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.6681644f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.29268166f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3217242f ? 
                                     (data[13 /* X14 */] <0.1286491f ? 
                                         (data[21 /* X22 */] <0.1425366f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.114771f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[0 /* X1 */] <-0.25847945f ? 
             (data[5 /* X6 */] <0.22094357f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17547832f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19511983f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21268062f ? 
                         (data[19 /* X20 */] <-0.49951598f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.14438298f ? 
             (data[32 /* X33 */] <-0.33203125f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.25405198f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04090176f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.390625f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.33412808f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06272431f ? 
         (data[34 /* X35 */] <-0.9770951f ? 
             (data[21 /* X22 */] <0.15533707f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.20213607f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.92578125f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.13506621f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13285957f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2197239f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[33 /* X34 */] <0.068359375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5555767f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35126522f ? 
                 (data[1 /* X2 */] <-0.7538874f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11241238f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X9 */] <-0.3904725f ? 
                         (data[29 /* X30 */] <0.121300966f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X13 */] <0.08990487f ? 
                             (data[8 /* X9 */] <-0.1105076f ? 
                                1.0f : 
                                0.0f) : 
                             (data[26 /* X27 */] <-0.102493525f ? 
                                 (data[4 /* X5 */] <0.14160213f ? 
                                     (data[34 /* X35 */] <0.0750025f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[1 /* X2 */] <-0.23960586f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15190251f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.58984375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[34 /* X35 */] <0.2960346f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28515625f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[32 /* X33 */] <0.0f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008867241f ? 
                     (data[35 /* X36 */] <-0.796875f ? 
                        1.0f : 
                         (data[3 /* X4 */] <0.034534857f ? 
                             (data[15 /* X16 */] <0.2289077f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[17 /* X18 */] <-0.006982489f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.15245567f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.54999775f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.072896115f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (data[15 /* X16 */] <0.06875088f ? 
                 (data[21 /* X22 */] <0.13376264f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.22174975f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.34375f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36402187f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27465418f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28787786f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[26 /* X27 */] <0.42091614f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57686996f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.97265625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.396023f ? 
                     (data[28 /* X29 */] <0.07568296f ? 
                         (data[8 /* X9 */] <-0.041729085f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7877197f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1563501f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3467163f ? 
                                    0.0f : 
                                     (data[26 /* X27 */] <0.45294544f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.52780175f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2261728f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[24 /* X25 */] <-0.36067417f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30389434f ? 
                 (data[9 /* X10 */] <-0.49556848f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12944917f ? 
                         (data[35 /* X36 */] <-0.208335f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16883726f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21682356f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22381145f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.2265625f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27596775f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9296875f ? 
                 (data[0 /* X1 */] <-0.21158263f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21555538f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.04682533f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.5118017f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05073899f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63572156f ? 
                                0.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.23968033f ? 
                                    0.0f : 
                                    1.0f))))) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.004749425f ? 
                 (data[8 /* X9 */] <0.1397309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[24 /* X25 */] <-0.43542242f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3181063f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22844812f ? 
                     (data[29 /* X30 */] <0.20453927f ? 
                         (data[33 /* X34 */] <0.3125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23266709f ? 
                     (data[17 /* X18 */] <-0.4600254f ? 
                         (data[9 /* X10 */] <-0.81392807f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.4724978f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.23935391f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.44410527f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13481821f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.033281416f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21994843f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.023445273f ? 
                         (data[9 /* X10 */] <-0.42803767f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[15 /* X16 */] <0.08877048f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.124583796f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.27077442f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34208894f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.20561461f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.09994225f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.13118453f ? 
        0.01369863f : 
         (data[21 /* X22 */] <0.07403426f ? 
            1.0f : 
             (data[23 /* X24 */] <0.050822385f ? 
                 (data[19 /* X20 */] <-0.049052544f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.5894663f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21617849f ? 
                        1.0f : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.111309975f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-0.6922749f ? 
                            1.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33246115f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.34610754f ? 
                                     (data[16 /* X17 */] <-0.40049094f ? 
                                         (data[35 /* X36 */] <-0.1f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[25 /* X26 */] <-0.54436314f ? 
                                             (data[3 /* X4 */] <0.0519706f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.333334f ? 
                                        0.0f : 
                                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30775413f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.084133096f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.042796105f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11187002f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24000502f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36839592f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05389794f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.3151465f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (data[24 /* X25 */] <-0.33306277f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30849993f ? 
                             (data[12 /* X13 */] <0.17430504f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3744922f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20672388f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8251939f ? 
                                     (data[9 /* X10 */] <-0.27092123f ? 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.33063206f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.5019412f ? 
             (data[10 /* X11 */] <-0.120921955f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.09602111f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21220247f ? 
                    0.0f : 
                    1.0f) : 
                 (data[18 /* X19 */] <-0.17038417f ? 
                     (data[13 /* X14 */] <0.14058621f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09488941f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[16 /* X17 */] <-0.8459003f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08885724f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.23509246f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.5f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[26 /* X27 */] <-0.16364221f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.23844585f ? 
                         (data[26 /* X27 */] <0.06982069f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.35f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.27336872f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[1 /* X2 */] <-0.5344689f ? 
                             (data[1 /* X2 */] <-0.6788396f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43918115f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4879087f ? 
                 (data[20 /* X21 */] <0.068845116f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.49537906f ? 
                        1.0f : 
                         (data[8 /* X9 */] <-0.23808302f ? 
                             (data[29 /* X30 */] <0.12738487f ? 
                                1.0f : 
                                0.0f) : 
                             (data[24 /* X25 */] <-0.21645406f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34257442f ? 
                                    0.0f : 
                                     (data[33 /* X34 */] <0.4f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20957543f ? 
             (data[1 /* X2 */] <-0.2684981f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09559875f ? 
                     (data[31 /* X32 */] <0.0519106f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.18294445f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.060984384f ? 
                                 (data[6 /* X7 */] <0.08986699f ? 
                                    0.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5055134f ? 
                                         (data[1 /* X2 */] <-0.15813135f ? 
                                            1.0f : 
                                             (data[26 /* X27 */] <0.1304964f ? 
                                                1.0f : 
                                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31958395f ? 
                                                    0.0f : 
                                                    1.0f))) : 
                                        0.0f)) : 
                                0.0f))) : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.25196955f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18843025f ? 
                    1.0f : 
                     (data[9 /* X10 */] <0.015736304f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.33203125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[24 /* X25 */] <-0.059482757f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
                 (data[12 /* X13 */] <0.12532707f ? 
                     (data[17 /* X18 */] <-0.35647276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                     (data[34 /* X35 */] <-0.95419025f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.022852737f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.1368956f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (data[24 /* X25 */] <0.15036021f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4271374f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1122089f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
            0.0f : 
             (data[30 /* X31 */] <0.09458882f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.6168021f ? 
             (data[12 /* X13 */] <0.20135193f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.03851779f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35475102f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.41974297f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.12818009f ? 
                                1.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4438651f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11166111f ? 
                                        0.0f : 
                                         (data[26 /* X27 */] <0.22216752f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.042147256f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41906154f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[31 /* X32 */] <0.04590505f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.32520464f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.32084826f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17223677f ? 
                     (data[17 /* X18 */] <-0.6153544f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.36190096f ? 
                             (data[34 /* X35 */] <-0.7068175f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23063646f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06202893f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2048226f ? 
                                 (data[11 /* X12 */] <-0.2577449f ? 
                                     (data[33 /* X34 */] <-0.4f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.059126437f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[19 /* X20 */] <-0.46666968f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.14529379f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (data[17 /* X18 */] <-0.019926572f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.84612995f ? 
                             (data[3 /* X4 */] <0.013272913f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <0.3f ? 
                                     (data[10 /* X11 */] <-0.3456398f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57686996f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.52772313f ? 
                 (data[20 /* X21 */] <0.09334069f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.08499057f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2549208f ? 
             (data[28 /* X29 */] <0.14334852f ? 
                 (data[20 /* X21 */] <0.12897858f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4788048f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4264655f ? 
                         (data[29 /* X30 */] <0.17873694f ? 
                             (data[15 /* X16 */] <0.16977288f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.24454036f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23172389f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093567386f ? 
         (data[33 /* X34 */] <-0.2578125f ? 
             (data[11 /* X12 */] <-0.35475367f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.171875f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24058294f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.28758654f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5232735f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                     (data[18 /* X19 */] <0.23454449f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.20792168f ? 
                             (data[28 /* X29 */] <0.20958954f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[27 /* X28 */] <-0.20548353f ? 
                             (data[5 /* X6 */] <0.27662742f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.65114886f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.101006106f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2554274f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29827875f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12699208f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X6 */] <0.13367784f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.4048328f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[30 /* X31 */] <0.189485f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20734814f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.9104007f ? 
            1.0f : 
             (data[22 /* X23 */] <0.08584377f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12888877f ? 
                     (data[19 /* X20 */] <-0.399413f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19246049f ? 
                             (data[8 /* X9 */] <-0.13850774f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37304688f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13150343f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.17801404f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <0.073226206f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.5580335f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.017626625f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.13285588f ? 
                            1.0f : 
                            0.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22557342f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25642124f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.80142564f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2581044f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46595338f ? 
                     (data[22 /* X23 */] <0.10019172f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12188614f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.56035244f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.096004836f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.26024786f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.31599632f ? 
                         (data[5 /* X6 */] <0.1569487f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26791155f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.001858817f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[30 /* X31 */] <0.08781053f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45539567f ? 
             (data[15 /* X16 */] <0.050271243f ? 
                 (data[35 /* X36 */] <0.1015625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <0.062885866f ? 
                     (data[25 /* X26 */] <-0.08271834f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19887035f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09719416f ? 
                         (data[27 /* X28 */] <-0.5259251f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.093347944f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9581605f ? 
                                     (data[34 /* X35 */] <-0.8904762f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0243386f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.3125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (data[33 /* X34 */] <-0.97265625f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43485028f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.15625f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.27380052f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.511905f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19102217f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.76171875f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.033920642f ? 
                     (data[30 /* X31 */] <0.25726798f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[5 /* X6 */] <0.113315836f ? 
             (data[1 /* X2 */] <-0.2684981f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.068436325f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20554608f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.515625f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3456419f ? 
                         (data[5 /* X6 */] <0.08704161f ? 
                             (data[2 /* X3 */] <-0.22199988f ? 
                                1.0f : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.19401611f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41748887f ? 
                                 (data[9 /* X10 */] <-0.4697349f ? 
                                     (data[13 /* X14 */] <0.1286491f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[35 /* X36 */] <0.3f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[26 /* X27 */] <0.12016369f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[34 /* X35 */] <0.114704296f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[24 /* X25 */] <-0.3694681f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13848309f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9099f ? 
                     (data[28 /* X29 */] <0.18608467f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.09578554f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.078023046f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26267874f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16935667f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.2240538f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.1194705f ? 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10908701f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[16 /* X17 */] <0.057062116f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[19 /* X20 */] <-0.46614832f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.038459376f ? 
                         (data[3 /* X4 */] <-0.7770603f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2834407f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (data[2 /* X3 */] <-0.19019721f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[5 /* X6 */] <0.13284674f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.63405913f ? 
             (data[1 /* X2 */] <-0.14715075f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.08451413f ? 
                 (data[32 /* X33 */] <-0.2890625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.106319696f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33472645f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.74459755f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.26236835f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
             (data[25 /* X26 */] <-0.60145485f ? 
                 (data[31 /* X32 */] <0.08539377f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.090944886f ? 
                     (data[22 /* X23 */] <0.18597175f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.33189934f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.43048966f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[27 /* X28 */] <-0.6649597f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.522426f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.10150102f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11328125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[33 /* X34 */] <-0.5292969f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.068766944f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.3227966f ? 
                 (data[27 /* X28 */] <-0.9084454f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.8931106f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.733108f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[31 /* X32 */] <0.04590505f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.058162767f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21114157f ? 
                         (data[20 /* X21 */] <0.14148553f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13529298f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20567866f ? 
                             (data[24 /* X25 */] <-0.24437949f ? 
                                 (data[35 /* X36 */] <0.35f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33251655f ? 
                                    0.0f : 
                                     (data[20 /* X21 */] <0.12125098f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[5 /* X6 */] <0.28078294f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44676125f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30971092f ? 
                     (data[12 /* X13 */] <0.09133375f ? 
                         (data[32 /* X33 */] <0.03125f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23730978f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4928392f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.12838204f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.1361639f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.1345457f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.3370894f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23376314f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.27249163f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21697864f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55195993f ? 
                         (data[21 /* X22 */] <0.073575616f ? 
                            0.0f : 
                            1.0f) : 
                         (data[24 /* X25 */] <-0.2023838f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3585215f ? 
             (data[33 /* X34 */] <-0.1796875f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15595302f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.18923573f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X6 */] <0.09275449f ? 
                     (data[8 /* X9 */] <0.50265086f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.016165035f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.40135655f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[33 /* X34 */] <-0.69921875f ? 
             (data[23 /* X24 */] <0.21443962f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6921853f ? 
                 (data[1 /* X2 */] <-0.22227053f ? 
                     (data[4 /* X5 */] <0.21693753f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[22 /* X23 */] <0.13033737f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.484375f ? 
                 (data[21 /* X22 */] <0.06836197f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.044277694f ? 
                         (data[24 /* X25 */] <-0.13203251f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.074754946f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20792267f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.07972629f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.13650954f ? 
                         (data[19 /* X20 */] <-0.43278065f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
             (data[22 /* X23 */] <0.11550617f ? 
                 (data[19 /* X20 */] <-0.6995278f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35900307f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.29036286f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33970025f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.24441816f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.1202681f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[32 /* X33 */] <0.359375f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.08655295f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1709025f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41510367f ? 
             (data[0 /* X1 */] <-0.64244705f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.7579967f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2653982f ? 
                             (data[21 /* X22 */] <0.15306816f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41066155f ? 
                                     (data[26 /* X27 */] <-0.10688104f ? 
                                         (data[21 /* X22 */] <0.09592738f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1347831f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[33 /* X34 */] <-0.67692375f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26538366f ? 
                                    0.0f : 
                                     (data[24 /* X25 */] <0.1394402f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[1 /* X2 */] <0.06665169f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.081337675f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.30262327f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.13326229f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[2 /* X3 */] <-0.40414503f ? 
             (data[0 /* X1 */] <0.28376493f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.091460384f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26087907f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.14414386f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31856456f ? 
                     (data[25 /* X26 */] <-0.6377915f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.050822385f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.11388879f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.16017303f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5396807f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042147256f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22693129f ? 
                             (data[2 /* X3 */] <-0.20201224f ? 
                                1.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16077317f ? 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[2 /* X3 */] <0.035805143f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35823765f ? 
                             (data[15 /* X16 */] <0.15006126f ? 
                                1.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5026766f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2721112f ? 
             (data[11 /* X12 */] <-0.74849516f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6262467f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19469759f ? 
                        0.0f : 
                        1.0f))) : 
             (data[26 /* X27 */] <-0.11730656f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20887911f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.55859375f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47816908f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.21101409f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19139628f ? 
                 (data[21 /* X22 */] <0.18029514f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[17 /* X18 */] <-0.24321201f ? 
             (data[10 /* X11 */] <-0.25058895f ? 
                 (data[33 /* X34 */] <-0.091348045f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.86328125f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.3102599f ? 
                     (data[7 /* X8 */] <0.057588078f ? 
                         (data[18 /* X19 */] <-0.14929755f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.05289482f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[17 /* X18 */] <-0.20599778f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.359375f ? 
                 (data[24 /* X25 */] <-0.23755944f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19330001f ? 
                         (data[16 /* X17 */] <-0.21639767f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.48729947f ? 
                                 (data[4 /* X5 */] <0.13188143f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[15 /* X16 */] <0.084150575f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22525947f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5924978f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22840264f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.20450434f ? 
             (data[4 /* X5 */] <0.2108621f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.11550617f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.40149847f ? 
             (data[9 /* X10 */] <-0.15791439f ? 
                 (data[10 /* X11 */] <-0.43146166f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.09705103f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16610278f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[25 /* X26 */] <-0.34055188f ? 
                     (data[26 /* X27 */] <0.212835f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.07295034f ? 
                 (data[3 /* X4 */] <0.0032158336f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[17 /* X18 */] <-0.56357807f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4022383f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6875f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47074723f ? 
                         (data[33 /* X34 */] <0.7246836f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.14566603f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15045005f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.15257053f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14964591f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
             (data[10 /* X11 */] <-0.6177855f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3828125f ? 
                     (data[14 /* X15 */] <0.11240376f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16319638f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.15894802f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30717042f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.28425857f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.1286491f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42578125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[2 /* X3 */] <-0.41372478f ? 
             (data[4 /* X5 */] <0.11897113f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
                 (data[15 /* X16 */] <0.1580691f ? 
                     (data[3 /* X4 */] <0.040660787f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.15609337f ? 
                    1.0f : 
                     (data[9 /* X10 */] <0.19584785f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2676004f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.04590505f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.21875f ? 
                     (data[13 /* X14 */] <0.11041581f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.60407764f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2520361f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.056382906f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (data[12 /* X13 */] <0.09457879f ? 
             (data[4 /* X5 */] <0.24959299f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.1734688f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22264823f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13111757f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.69143116f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08487418f ? 
             (data[31 /* X32 */] <0.045739878f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.03125f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21222472f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28079996f ? 
                 (data[4 /* X5 */] <0.085560225f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.18685617f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31721804f ? 
             (data[18 /* X19 */] <-0.2740462f ? 
                 (data[24 /* X25 */] <0.043845687f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.011877015f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.059133112f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.622941f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.06253188f ? 
                             (data[5 /* X6 */] <0.08706756f ? 
                                 (data[9 /* X10 */] <-0.16319624f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[8 /* X9 */] <0.0074163275f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38343024f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.77734375f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2827104f ? 
                 (data[2 /* X3 */] <-0.51111895f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15715773f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07781923f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29604122f ? 
             (data[2 /* X3 */] <-0.26843187f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27999923f ? 
                     (data[2 /* X3 */] <-0.41875812f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.5826156f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.119160146f ? 
                 (data[15 /* X16 */] <0.09031045f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45161524f ? 
             (data[20 /* X21 */] <0.11259863f ? 
                 (data[16 /* X17 */] <-0.346429f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.14880168f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0777747f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.2504827f ? 
                0.0f : 
                1.0f)) : 
        0.009708738f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.3633216f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2712501f ? 
                         (data[27 /* X28 */] <-0.04460766f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09430362f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27595755f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[10 /* X11 */] <-0.20109767f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.26594234f ? 
                             (data[14 /* X15 */] <0.15783142f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.452f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (data[23 /* X24 */] <0.059003245f ? 
                 (data[21 /* X22 */] <0.06533675f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.5859375f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.097453296f ? 
             (data[16 /* X17 */] <-0.11105918f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[31 /* X32 */] <0.04590505f ? 
             (data[4 /* X5 */] <0.06884878f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28378192f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.078125f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21117872f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.035030823f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30191126f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.3546875f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9748372f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42282888f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1448705f ? 
                                     (data[31 /* X32 */] <0.11053728f ? 
                                        1.0f : 
                                         (data[35 /* X36 */] <-0.6082031f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23474911f ? 
                         (data[19 /* X20 */] <-0.53881425f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.4f ? 
                                 (data[7 /* X8 */] <0.06438673f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27115664f ? 
                     (data[4 /* X5 */] <0.08024023f ? 
                         (data[27 /* X28 */] <-0.030055912f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[28 /* X29 */] <0.07390229f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5563526f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15839815f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.14612943f ? 
            0.0f : 
             (data[29 /* X30 */] <0.22024295f ? 
                 (data[8 /* X9 */] <-0.13245907f ? 
                     (data[32 /* X33 */] <0.50312096f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.219623f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[34 /* X35 */] <-0.44264784f ? 
             (data[21 /* X22 */] <0.12962268f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.05859082f ? 
                     (data[30 /* X31 */] <0.09876009f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
                 (data[16 /* X17 */] <-0.7667322f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.08050206f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.31757933f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31538245f ? 
                                     (data[12 /* X13 */] <0.14568628f ? 
                                        1.0f : 
                                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28896958f ? 
                                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2824214f ? 
                                                0.0f : 
                                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22327426f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6316861f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <0.049248226f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                 (data[31 /* X32 */] <0.13049695f ? 
                     (data[7 /* X8 */] <0.10012934f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35711432f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21997525f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
             (data[6 /* X7 */] <0.14115065f ? 
                 (data[34 /* X35 */] <-0.22886895f ? 
                     (data[19 /* X20 */] <-0.43278065f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3313631f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28758302f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.860662f ? 
            1.0f : 
             (data[5 /* X6 */] <0.20930813f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22721624f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[10 /* X11 */] <-0.56696993f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17906703f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.026543582f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.004802163f ? 
                     (data[15 /* X16 */] <0.056431122f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36042646f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.019021647f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.71572334f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.90625f ? 
                             (data[27 /* X28 */] <-0.3775427f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30854174f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3021601f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            1.0f))))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20416439f ? 
             (data[27 /* X28 */] <-0.35212487f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[10 /* X11 */] <-0.63190097f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <0.1484375f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2954891f ? 
                 (data[8 /* X9 */] <-0.12375472f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.16720816f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.12683704f ? 
                             (data[9 /* X10 */] <-0.7213144f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[31 /* X32 */] <0.061058052f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.109375f ? 
                         (data[27 /* X28 */] <-0.20548353f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2177868f ? 
                 (data[11 /* X12 */] <-0.46633714f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.38145313f ? 
                         (data[12 /* X13 */] <0.3144299f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20580967f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.50580364f ? 
             (data[26 /* X27 */] <-0.013051329f ? 
                 (data[14 /* X15 */] <0.12254386f ? 
                     (data[27 /* X28 */] <0.0291426f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.3931507f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[11 /* X12 */] <-0.40547597f ? 
                     (data[28 /* X29 */] <0.14690986f ? 
                         (data[7 /* X8 */] <0.1465479f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[6 /* X7 */] <0.13815744f ? 
             (data[33 /* X34 */] <-0.52734375f ? 
                 (data[26 /* X27 */] <-0.18681005f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18270862f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.23382743f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1264482f ? 
                             (data[16 /* X17 */] <-0.60045844f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35630086f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.88583535f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13034965f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23949894f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                             (data[1 /* X2 */] <-0.78855807f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10825244f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.5560045f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20895502f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29648638f ? 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.464258f ? 
                     (data[17 /* X18 */] <-0.2529201f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.5663611f ? 
                         (data[18 /* X19 */] <0.004239265f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.12402603f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.14462686f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.4662011f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.48962033f ? 
             (data[11 /* X12 */] <-0.52023923f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.11541353f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.41609684f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19876698f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[31 /* X32 */] <0.11656909f ? 
            1.0f : 
             (data[13 /* X14 */] <0.12241139f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.23949167f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.212835f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[5 /* X6 */] <0.13076898f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32858756f ? 
                 (data[15 /* X16 */] <0.044111367f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41173118f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.50858647f ? 
                 (data[0 /* X1 */] <-0.65710235f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2712501f ? 
                         (data[0 /* X1 */] <-0.19362997f ? 
                             (data[33 /* X34 */] <-0.38f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26674125f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18487594f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21101409f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19218768f ? 
                                 (data[21 /* X22 */] <0.14338745f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14112268f ? 
             (data[34 /* X35 */] <-0.09143965f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09755322f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2137028f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1451151f ? 
             (data[15 /* X16 */] <0.0632497f ? 
                 (data[24 /* X25 */] <-0.5541402f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1597309f ? 
                 (data[24 /* X25 */] <-0.38215727f ? 
                     (data[17 /* X18 */] <-0.40824908f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <0.07317281f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.117816135f ? 
                            0.0f : 
                             (data[19 /* X20 */] <0.13800691f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[5 /* X6 */] <0.16692193f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.9236504f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1122089f ? 
                            1.0f : 
                             (data[33 /* X34 */] <0.5076882f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30971092f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5543311f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30130792f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18991524f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23124483f ? 
                                0.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17182173f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4566969f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.0036375977f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.38972765f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.038761914f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10186173f ? 
                 (data[30 /* X31 */] <0.15715773f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.042768057f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15524259f ? 
                             (data[10 /* X11 */] <-0.27726293f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18105145f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.052734375f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.039746087f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.06773428f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3065591f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30838767f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (data[7 /* X8 */] <0.08997958f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.36135235f ? 
                 (data[9 /* X10 */] <-0.9104007f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.49951598f ? 
                         (data[35 /* X36 */] <-0.75f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.10560666f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27709442f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37087607f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.17723045f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.2554966f ? 
            0.0f : 
             (data[12 /* X13 */] <0.1965755f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.110279106f ? 
                     (data[15 /* X16 */] <0.09955027f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22159256f ? 
            0.0f : 
             (data[7 /* X8 */] <0.19020846f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.15079795f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77740383f ? 
             (data[17 /* X18 */] <-0.47620553f ? 
                 (data[7 /* X8 */] <0.062067743f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.12991235f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[14 /* X15 */] <0.108347714f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.4375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2285178f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2997908f ? 
             (data[25 /* X26 */] <-0.5891771f ? 
                 (data[6 /* X7 */] <0.16642146f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26875752f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.087472126f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[15 /* X16 */] <0.19343635f ? 
                         (data[31 /* X32 */] <0.10409896f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.107299134f ? 
                 (data[2 /* X3 */] <-0.35236996f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1953125f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16609137f ? 
                 (data[9 /* X10 */] <-0.45697945f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.18252319f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17557257f ? 
             (data[1 /* X2 */] <-0.64120775f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2257775f ? 
                     (data[17 /* X18 */] <-0.34088087f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.24776594f ? 
                             (data[24 /* X25 */] <-0.44157815f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28583753f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23599684f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2617383f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16715252f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29234713f ? 
                         (data[31 /* X32 */] <0.04590505f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.545235f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.13768345f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35973763f ? 
                         (data[7 /* X8 */] <0.16610278f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4674912f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2277159f ? 
                                    1.0f : 
                                     (data[7 /* X8 */] <0.24135672f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.13415426f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[29 /* X30 */] <0.12890984f ? 
                     (data[29 /* X30 */] <0.086138055f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0005159f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5543311f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18541536f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24790849f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.34374315f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.1772089f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2038914f ? 
                 (data[34 /* X35 */] <-0.27683306f ? 
                     (data[25 /* X26 */] <0.09154247f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.021196473f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2959926f ? 
                        1.0f : 
                         (data[27 /* X28 */] <0.23793033f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15623176f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13814746f ? 
                         (data[20 /* X21 */] <0.10819036f ? 
                             (data[1 /* X2 */] <-0.53683484f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09154247f ? 
                     (data[31 /* X32 */] <0.10409896f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.15785025f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21231034f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23385462f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19769078f ? 
             (data[7 /* X8 */] <0.08997958f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.6583355f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13705091f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.29671267f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13816692f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.06760567f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.15731707f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8046875f ? 
                     (data[19 /* X20 */] <-0.399413f ? 
                         (data[31 /* X32 */] <0.11295398f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.24827354f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <0.17973079f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45030525f ? 
                 (data[9 /* X10 */] <-0.514863f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.25428447f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21344805f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.59838545f ? 
                         (data[12 /* X13 */] <0.24796727f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X13 */] <0.16893607f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36173227f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15483734f ? 
                                        0.0f : 
                                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6430208f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (data[33 /* X34 */] <0.24615125f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (data[1 /* X2 */] <-0.76599586f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23743363f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.024643954f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.5865122f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36523438f ? 
            0.0f : 
             (data[7 /* X8 */] <0.058261584f ? 
                 (data[34 /* X35 */] <0.27503848f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43155518f ? 
             (data[27 /* X28 */] <-0.25436398f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23036525f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.56295013f ? 
                         (data[20 /* X21 */] <0.15432416f ? 
                             (data[20 /* X21 */] <0.12670277f ? 
                                0.0f : 
                                1.0f) : 
                             (data[33 /* X34 */] <5.551115E-17f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.15524259f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                     (data[27 /* X28 */] <-0.18819937f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.059917934f ? 
                             (data[31 /* X32 */] <0.04712331f ? 
                                 (data[34 /* X35 */] <-0.26363325f ? 
                                    0.0f : 
                                     (data[4 /* X5 */] <0.112440035f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10342365f ? 
                                 (data[14 /* X15 */] <0.15783142f ? 
                                     (data[8 /* X9 */] <0.20690104f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1893708f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44676125f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5204889f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30971092f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.64548665f ? 
                                 (data[27 /* X28 */] <-0.35930324f ? 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.39592406f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[12 /* X13 */] <0.34865433f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[22 /* X23 */] <0.15838347f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.26345247f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15359992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17189077f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.04408091f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2617383f ? 
                 (data[18 /* X19 */] <-0.06613178f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.23873729f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <0.033203125f ? 
             (data[28 /* X29 */] <0.10150272f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42010275f ? 
                     (data[17 /* X18 */] <-0.395305f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19871122f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11218504f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25477836f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.48339844f ? 
                                 (data[27 /* X28 */] <0.4743919f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[19 /* X20 */] <0.101101935f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.13838707f ? 
                 (data[0 /* X1 */] <0.21048865f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35711432f ? 
             (data[12 /* X13 */] <0.122741535f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.037725534f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13832963f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8096877f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14609735f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1593578f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.3393512f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22600475f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.15777437f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (data[34 /* X35 */] <-0.6239782f ? 
             (data[12 /* X13 */] <0.17452465f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
             (data[3 /* X4 */] <-0.25290507f ? 
                 (data[2 /* X3 */] <0.017642198f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.4729695f ? 
                     (data[34 /* X35 */] <-0.95419025f ? 
                         (data[0 /* X1 */] <0.17531604f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1404727f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[21 /* X22 */] <0.06117707f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36056873f ? 
                 (data[7 /* X8 */] <0.029081022f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.5861077f ? 
                         (data[34 /* X35 */] <-0.29758358f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.5281361f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41179475f ? 
                                 (data[32 /* X33 */] <-0.5f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5157079f ? 
                                        0.0f : 
                                         (data[35 /* X36 */] <-0.25f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (data[3 /* X4 */] <0.2809148f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.479214f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.18220282f ? 
                         (data[5 /* X6 */] <0.37063286f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.02462589f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[29 /* X30 */] <0.07561508f ? 
             (data[5 /* X6 */] <0.13534005f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.259252f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.020559933f ? 
                 (data[28 /* X29 */] <0.10638852f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.26653332f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35973763f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <0.110571295f ? 
                         (data[35 /* X36 */] <-0.3125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.31451157f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.57280195f ? 
                     (data[26 /* X27 */] <-0.23893766f ? 
                         (data[27 /* X28 */] <0.1974991f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[32 /* X33 */] <0.0390625f ? 
                     (data[11 /* X12 */] <-0.34904727f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.29789308f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.112795554f ? 
            0.0f : 
             (data[35 /* X36 */] <0.16923828f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.077796645f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5838007f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15817209f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.6512515f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.48082265f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[16 /* X17 */] <-0.76647776f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1289726f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18861032f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09910404f ? 
                         (data[28 /* X29 */] <0.10139803f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.11082324f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[33 /* X34 */] <-0.34374845f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21347389f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.21209371f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20478666f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[13 /* X14 */] <0.16679506f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2771022f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.55352575f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.18479598f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17578393f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.42010275f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5538925f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.23214594f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2882289f ? 
             (data[23 /* X24 */] <0.0262798f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.5826156f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.072020166f ? 
                         (data[19 /* X20 */] <-0.36604533f ? 
                             (data[27 /* X28 */] <-0.18984179f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2746454f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.07490448f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3797168f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24056791f ? 
             (data[23 /* X24 */] <0.15553741f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0836261f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12042886f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43606156f ? 
             (data[13 /* X14 */] <0.1512008f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.274978f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.12702903f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[10 /* X11 */] <-0.5472083f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10710261f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.17902084f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.378696f ? 
                 (data[0 /* X1 */] <-0.15882373f ? 
                     (data[23 /* X24 */] <0.07700114f ? 
                         (data[28 /* X29 */] <0.12554179f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.375f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.15f ? 
                                 (data[16 /* X17 */] <-0.322892f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[4 /* X5 */] <0.11013619f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X13 */] <0.07822623f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14455618f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.097453296f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (data[33 /* X34 */] <-0.42773438f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.009428444f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18341894f ? 
                 (data[5 /* X6 */] <0.17024633f ? 
                     (data[2 /* X3 */] <-0.47279993f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.044305664f ? 
                             (data[20 /* X21 */] <0.1715407f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.964355f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16212359f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3f ? 
                                 (data[4 /* X5 */] <0.18359004f ? 
                                     (data[22 /* X23 */] <0.12804948f ? 
                                         (data[26 /* X27 */] <0.74569505f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (data[8 /* X9 */] <-0.15633443f ? 
                                        0.0f : 
                                         (data[33 /* X34 */] <-0.534f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6565f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[8 /* X9 */] <-0.061408058f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26817974f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14812051f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.50580364f ? 
             (data[14 /* X15 */] <0.0870535f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3284832f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.47414887f ? 
                         (data[26 /* X27 */] <-0.08834677f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.16151965f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4566969f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
         (data[19 /* X20 */] <-0.29305357f ? 
             (data[33 /* X34 */] <-0.1484375f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.421875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.2829442f ? 
                 (data[11 /* X12 */] <-0.39469847f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.14000258f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1875f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25030914f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[24 /* X25 */] <-0.8003697f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.24807644f ? 
                         (data[20 /* X21 */] <0.272127f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.18859999f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3705128f ? 
                             (data[19 /* X20 */] <-0.2271036f ? 
                                 (data[13 /* X14 */] <0.1416271f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2534222f ? 
                                     (data[34 /* X35 */] <-0.022725f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22164972f ? 
                                            0.0f : 
                                             (data[7 /* X8 */] <0.06865259f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f) : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19267051f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f))))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.084363915f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14175402f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6765257f ? 
             (data[33 /* X34 */] <-0.21484375f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.41353327f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.65625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8123585f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3225297f ? 
                             (data[19 /* X20 */] <-0.39844844f ? 
                                 (data[3 /* X4 */] <0.16937801f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.19586949f ? 
                                         (data[9 /* X10 */] <-0.4123292f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (data[14 /* X15 */] <0.18379007f ? 
                                         (data[13 /* X14 */] <0.18711899f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.2699427f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42152804f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13311607f ? 
                     (data[23 /* X24 */] <0.08865064f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.08879832f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18500978f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26031652f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.26173168f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.11816461f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40970564f ? 
             (data[0 /* X1 */] <-0.15911548f ? 
                 (data[3 /* X4 */] <-0.22754273f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.48515624f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.45697945f ? 
                     (data[18 /* X19 */] <-0.088441074f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.04906611f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30024454f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07186871f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <0.11084976f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[20 /* X21 */] <0.32122627f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.3984375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.18115044f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20590408f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053223502f ? 
             (data[33 /* X34 */] <-0.2578125f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2436701f ? 
                     (data[19 /* X20 */] <-0.3408434f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18132742f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.9484663f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.095144756f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.78980994f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.33267766f ? 
                 (data[11 /* X12 */] <0.05040061f ? 
                     (data[19 /* X20 */] <-0.6519534f ? 
                         (data[29 /* X30 */] <0.15733373f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26653332f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5115349f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X12 */] <0.80975825f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8094066f ? 
                     (data[16 /* X17 */] <-0.6154231f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.24999316f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46977925f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24702811f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.29345667f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.32192254f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.65625f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22378269f ? 
             (data[2 /* X3 */] <-0.025744788f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4073639f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[17 /* X18 */] <-0.23997599f ? 
             (data[16 /* X17 */] <-0.55591565f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.46875f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24219707f ? 
                         (data[19 /* X20 */] <-0.33267766f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29590014f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.3102599f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <9.989506E-4f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.11434453f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.515625f ? 
                    1.0f : 
                    0.0f))) : 
         (data[20 /* X21 */] <0.06886706f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3512201f ? 
                 (data[4 /* X5 */] <0.04682533f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.96875f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7642637f ? 
                             (data[9 /* X10 */] <-0.47434452f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20383713f ? 
                                    0.0f : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24868673f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[0 /* X1 */] <-0.14713778f ? 
                                     (data[20 /* X21 */] <0.11306692f ? 
                                        1.0f : 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1945314f ? 
                                            0.0f : 
                                             (data[16 /* X17 */] <0.19341014f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    0.0f)) : 
                             (data[13 /* X14 */] <0.1593578f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2241143f ? 
             (data[9 /* X10 */] <-0.9104007f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.56625134f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19801503f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.12981541f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[29 /* X30 */] <0.13068634f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23996812f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1935172f ? 
             (data[16 /* X17 */] <-0.5860019f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5417818f ? 
                         (data[26 /* X27 */] <-0.14132246f ? 
                             (data[12 /* X13 */] <0.17198092f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19027594f ? 
                         (data[20 /* X21 */] <0.21882655f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[22 /* X23 */] <0.08696311f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.15611671f ? 
                     (data[16 /* X17 */] <-0.010186402f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[12 /* X13 */] <0.07686351f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38369775f ? 
                 (data[3 /* X4 */] <-0.25290507f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21875f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.08960981f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.123580374f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.114993945f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.6994837f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[21 /* X22 */] <0.06117707f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.48243183f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5661444f ? 
                     (data[17 /* X18 */] <-0.861292f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41135147f ? 
                             (data[10 /* X11 */] <-0.9238083f ? 
                                 (data[14 /* X15 */] <0.28762472f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.097568154f ? 
                                     (data[25 /* X26 */] <-0.42217916f ? 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.019021647f ? 
                                            0.0f : 
                                             (data[10 /* X11 */] <-0.6768469f ? 
                                                0.0f : 
                                                1.0f)) : 
                                         (data[27 /* X28 */] <-0.25240877f ? 
                                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29792577f ? 
                                                0.0f : 
                                                 (data[12 /* X13 */] <0.32315126f ? 
                                                    1.0f : 
                                                    0.0f)) : 
                                            0.0f)) : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32981795f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.122227594f ? 
                         (data[24 /* X25 */] <-0.13203251f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1331956f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.020024981f ? 
             (data[29 /* X30 */] <0.07117385f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80071867f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26333264f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0625f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4375f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.52158684f ? 
                             (data[31 /* X32 */] <0.09765729f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22025326f ? 
                                     (data[16 /* X17 */] <-0.3651743f ? 
                                        0.0f : 
                                         (data[26 /* X27 */] <-0.13489063f ? 
                                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3740019f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f)) : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[33 /* X34 */] <-0.4140625f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.1324717f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30378175f ? 
                         (data[24 /* X25 */] <-0.41343763f ? 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30854174f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.13709545f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[11 /* X12 */] <-0.010990204f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0054115998f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
             (data[29 /* X30 */] <0.06051489f ? 
                 (data[3 /* X4 */] <-0.261752f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.26176324f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8607092f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20091012f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6875f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13540243f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.26704374f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.18483298f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24956459f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109560065f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26037028f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20158225f ? 
                         (data[35 /* X36 */] <-0.28125f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.281571f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.054990675f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1662162f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.30019563f ? 
                 (data[35 /* X36 */] <-0.171875f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.21113193f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109560065f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3304289f ? 
                 (data[19 /* X20 */] <-0.43696678f ? 
                     (data[26 /* X27 */] <-0.045834407f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20782438f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.016051522f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12714335f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.49807444f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13311607f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.09442138f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.12550375f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1440323f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.28942645f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[1 /* X2 */] <-0.1529292f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[30 /* X31 */] <0.17644982f ? 
             (data[1 /* X2 */] <-0.51119274f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_10_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0135118235f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.4865278f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4407923f ? 
                     (data[18 /* X19 */] <-0.17488702f ? 
                         (data[23 /* X24 */] <0.15052664f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.8605711f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.32315126f ? 
                                 (data[14 /* X15 */] <0.10591409f ? 
                                     (data[21 /* X22 */] <0.15930542f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2746454f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[35 /* X36 */] <-0.765625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.122692525f ? 
         (data[15 /* X16 */] <0.0525812f ? 
             (data[27 /* X28 */] <-0.11749873f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.22754273f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.37890625f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.094663896f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15595302f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.187393f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16071312f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2587739f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.21308126f ? 
                                     (data[23 /* X24 */] <0.100633614f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[29 /* X30 */] <0.13119517f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.27880824f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26656505f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.325f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2928255f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8830421f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[12 /* X13 */] <0.1054805f ? 
             (data[17 /* X18 */] <-0.29175234f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48546213f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25798404f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20089464f ? 
                            0.0f : 
                             (data[25 /* X26 */] <0.005681728f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[18 /* X19 */] <-0.072529145f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.040059533f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[23 /* X24 */] <0.08559105f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06853477f ? 
                 (data[35 /* X36 */] <-0.78125f ? 
                     (data[31 /* X32 */] <0.08984122f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.013277999f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0234375f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.098420225f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24892546f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41777855f ? 
                 (data[30 /* X31 */] <0.059133112f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22306395f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13367784f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[2 /* X3 */] <-0.36742264f ? 
             (data[15 /* X16 */] <0.08877048f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.15271933f ? 
                     (data[14 /* X15 */] <0.16107625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3474184f ? 
                     (data[22 /* X23 */] <0.08804598f ? 
                         (data[25 /* X26 */] <-0.18094064f ? 
                            1.0f : 
                            0.0f) : 
                         (data[32 /* X33 */] <-0.32777625f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08062207f ? 
                                 (data[21 /* X22 */] <0.073146276f ? 
                                     (data[16 /* X17 */] <-0.10769676f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[9 /* X10 */] <0.26656505f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                     (data[31 /* X32 */] <0.12903921f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.13949908f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8027344f ? 
            0.0f : 
            1.0f) : 
         (data[30 /* X31 */] <0.16289322f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11640625f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1302902f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27047342f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.10557607f ? 
         (data[22 /* X23 */] <0.104312815f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2309168f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21793023f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
             (data[25 /* X26 */] <-0.5738299f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.050822385f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0849047f ? 
                         (data[5 /* X6 */] <0.11544999f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41135147f ? 
                         (data[23 /* X24 */] <0.107971445f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.014072406f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.21845722f ? 
                                    0.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.111735165f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.59250844f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (data[33 /* X34 */] <-0.23046875f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.073370785f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16609137f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.24005891f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29895592f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.0073851338f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1735771f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.133156f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.23011285f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29412365f ? 
                 (data[4 /* X5 */] <0.1774472f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.052337322f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20752212f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36306205f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (data[14 /* X15 */] <0.090095535f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6262467f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.249993f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X7 */] <0.1531235f ? 
             (data[10 /* X11 */] <-0.28466108f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.37269008f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8696867f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.344017f ? 
                         (data[11 /* X12 */] <-0.4069137f ? 
                            1.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19218768f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.2024288f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[0 /* X1 */] <-0.17347898f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43263972f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.27497745f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13379623f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.19786032f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35803673f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.3609532f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.12940036f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.17895274f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[22 /* X23 */] <0.16699561f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16730893f ? 
                     (data[10 /* X11 */] <-0.5672947f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                             (data[33 /* X34 */] <-0.3f ? 
                                 (data[22 /* X23 */] <0.1755172f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[22 /* X23 */] <0.179778f ? 
                                     (data[16 /* X17 */] <0.13907863f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19852051f ? 
             (data[13 /* X14 */] <0.10801669f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.40566942f ? 
             (data[4 /* X5 */] <0.092707865f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41265902f ? 
                     (data[14 /* X15 */] <0.12051584f ? 
                         (data[9 /* X10 */] <0.1650948f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1388498f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15827306f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.12949787f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.1756371f ? 
                         (data[1 /* X2 */] <-0.4418514f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[27 /* X28 */] <-0.20792755f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23191708f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38501284f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.48253617f ? 
                 (data[10 /* X11 */] <-0.61213934f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16696043f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28535867f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29579985f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.30889514f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[4 /* X5 */] <0.0950491f ? 
            1.0f : 
             (data[22 /* X23 */] <0.10879016f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.20218039f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.21997163f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[15 /* X16 */] <0.05489115f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0976685f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1624228f ? 
             (data[9 /* X10 */] <-0.36050683f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31149438f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3537382f ? 
                     (data[10 /* X11 */] <-0.34112284f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17024633f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[10 /* X11 */] <-0.16538559f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.12917548f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2711071f ? 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20973058f ? 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.371427f ? 
                                             (data[4 /* X5 */] <0.16902293f ? 
                                                 (data[11 /* X12 */] <-0.0052747224f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                1.0f) : 
                                            0.0f) : 
                                         (data[20 /* X21 */] <0.17743368f ? 
                                            0.0f : 
                                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2758812f ? 
                                                1.0f : 
                                                0.0f))) : 
                                     (data[5 /* X6 */] <0.23407498f ? 
                                         (data[1 /* X2 */] <0.09216227f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))))) : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.11213662f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.114949964f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5349534f ? 
                 (data[18 /* X19 */] <-0.06717227f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.18094064f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3671308f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.18301831f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22911875f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.38385603f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <0.21997423f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25314197f ? 
        0.039215688f : 
         (data[5 /* X6 */] <0.098356f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20462655f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0948395f ? 
                     (data[18 /* X19 */] <0.004239265f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.6068903f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.14578766f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.09486329f ? 
                        0.0f : 
                        1.0f))) : 
             (data[17 /* X18 */] <-0.3823609f ? 
                 (data[19 /* X20 */] <-0.32606524f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.31853813f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13828184f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.1999263f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37879077f ? 
                     (data[16 /* X17 */] <-0.71629584f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.08371172f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13175224f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23252872f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6f ? 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28667307f ? 
                                            0.0f : 
                                             (data[31 /* X32 */] <0.11810421f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[16 /* X17 */] <-0.3262263f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[31 /* X32 */] <0.10908701f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19996955f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (data[5 /* X6 */] <0.111238085f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.9104007f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.399413f ? 
                     (data[22 /* X23 */] <0.16867462f ? 
                         (data[27 /* X28 */] <-0.21779016f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.1431218f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26653332f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.16730893f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[7 /* X8 */] <0.082367264f ? 
             (data[23 /* X24 */] <0.07566933f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.05316783f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.026505593f ? 
                     (data[5 /* X6 */] <0.12494356f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16385238f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.34121856f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24199554f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[3 /* X4 */] <0.038761914f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19086511f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815739f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7734375f ? 
                     (data[34 /* X35 */] <-0.9694601f ? 
                         (data[23 /* X24 */] <0.1130437f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.1724016f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22077519f ? 
                                 (data[16 /* X17 */] <-0.3026714f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13981774f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[32 /* X33 */] <0.35f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (data[30 /* X31 */] <0.18167885f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[3 /* X4 */] <-0.15145569f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.027812302f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.6168021f ? 
                 (data[33 /* X34 */] <-0.109375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.357786f ? 
                     (data[21 /* X22 */] <0.07441241f ? 
                         (data[24 /* X25 */] <-0.061681237f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25916106f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26657107f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.061399538f ? 
                                    1.0f : 
                                     (data[12 /* X13 */] <0.14209807f ? 
                                         (data[15 /* X16 */] <0.15006126f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                             (data[7 /* X8 */] <0.12467907f ? 
                                1.0f : 
                                 (data[16 /* X17 */] <-0.40104276f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[35 /* X36 */] <-0.41964376f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.084133096f ? 
         (data[33 /* X34 */] <-0.2578125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.004151743f ? 
                 (data[11 /* X12 */] <-0.36046007f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.7251414f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.26441216f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.052337322f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25628746f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                             (data[34 /* X35 */] <-0.838096f ? 
                                0.0f : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2821926f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5113625f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.54762f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13552772f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18610874f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21009004f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12550375f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[30 /* X31 */] <0.08937475f ? 
            1.0f : 
             (data[5 /* X6 */] <0.10954924f ? 
                 (data[16 /* X17 */] <-0.27077442f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28282502f ? 
             (data[12 /* X13 */] <0.090036415f ? 
                 (data[0 /* X1 */] <0.22221285f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.50691247f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07902133f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20001602f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.16167346f ? 
                                 (data[32 /* X33 */] <-0.5f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[9 /* X10 */] <0.27621233f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42745656f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27947748f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.31599385f ? 
         (data[5 /* X6 */] <0.066774115f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.1484375f ? 
                 (data[15 /* X16 */] <0.1180299f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.44264784f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1799902f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1796875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12609334f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1953125f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.20563656f ? 
                         (data[17 /* X18 */] <-0.20403169f ? 
                            1.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.39193043f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42258316f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12708908f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3073742f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.2665289f ? 
                     (data[30 /* X31 */] <0.10710261f ? 
                        0.0f : 
                        1.0f) : 
                     (data[24 /* X25 */] <-0.27289912f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2762911f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19143945f ? 
             (data[33 /* X34 */] <-0.69921875f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <0.21488829f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.7212245f ? 
             (data[3 /* X4 */] <0.05098076f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24795635f ? 
                 (data[23 /* X24 */] <0.027915971f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                         (data[10 /* X11 */] <-1.0864182f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.36060885f ? 
                                 (data[19 /* X20 */] <-0.31834996f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25972f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[5 /* X6 */] <0.12848784f ? 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22878818f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (data[19 /* X20 */] <-0.7102017f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (data[14 /* X15 */] <0.09972863f ? 
             (data[22 /* X23 */] <0.13789289f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.8892931f ? 
                 (data[32 /* X33 */] <0.359375f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24255078f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30095556f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.08027349f ? 
                         (data[6 /* X7 */] <0.1598315f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18354397f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.13379623f ? 
                 (data[2 /* X3 */] <-0.088770516f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28919342f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.07737123f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[19 /* X20 */] <-0.37873742f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15910679f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[13 /* X14 */] <0.14400345f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12598312f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0026896475f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[21 /* X22 */] <0.09785787f ? 
            1.0f : 
             (data[7 /* X8 */] <0.030349743f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.0557309f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
        0.03797468f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (data[2 /* X3 */] <-0.23969261f ? 
                 (data[3 /* X4 */] <0.05177333f ? 
                     (data[19 /* X20 */] <-0.399413f ? 
                         (data[30 /* X31 */] <0.23224042f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20121157f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.33237082f ? 
                         (data[32 /* X33 */] <-0.625f ? 
                             (data[4 /* X5 */] <0.21329227f ? 
                                0.0f : 
                                1.0f) : 
                             (data[28 /* X29 */] <0.12981541f ? 
                                 (data[14 /* X15 */] <0.1967694f ? 
                                     (data[27 /* X28 */] <-0.06470785f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[17 /* X18 */] <0.005961594f ? 
                        1.0f : 
                         (data[10 /* X11 */] <0.020816633f ? 
                             (data[6 /* X7 */] <0.2625237f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34686548f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24777412f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42092124f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.275851f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44829598f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2357535f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20518741f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.054798406f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[30 /* X31 */] <0.19887035f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04281717f ? 
                         (data[1 /* X2 */] <-0.37251008f ? 
                             (data[2 /* X3 */] <-0.03851779f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[17 /* X18 */] <-0.104063116f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.4811662f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.175565f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22169812f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.25518963f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09682472f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19441934f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23304619f ? 
             (data[16 /* X17 */] <-0.7036868f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34041804f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.19871122f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (data[6 /* X7 */] <0.12718235f ? 
             (data[29 /* X30 */] <0.17243391f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.23224042f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4332485f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31261915f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.10202061f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17609864f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.118199155f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.07057981f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50453925f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26922813f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26889494f ? 
                                 (data[5 /* X6 */] <0.1910249f ? 
                                     (data[33 /* X34 */] <-0.70134646f ? 
                                        1.0f : 
                                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38941985f ? 
                                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22113062f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f)) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4765625f ? 
            1.0f : 
             (data[7 /* X8 */] <0.04303694f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18877962f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6167872f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18735418f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.14890812f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.09505446f ? 
                         (data[9 /* X10 */] <0.035030823f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20747323f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.48518974f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12042886f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[25 /* X26 */] <-0.61987156f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20174603f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.90009433f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41287032f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35973763f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25916106f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21851727f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3463562f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.1424487f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                         (data[18 /* X19 */] <4.9962715E-4f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.19996955f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22331567f ? 
            0.0f : 
             (data[7 /* X8 */] <0.039230783f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27689898f ? 
                    1.0f : 
                     (data[1 /* X2 */] <0.10073767f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30859375f ? 
             (data[8 /* X9 */] <-0.17782408f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27288747f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31926185f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.4494053f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.049000908f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.13898261f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23569f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[8 /* X9 */] <0.052781325f ? 
                 (data[5 /* X6 */] <0.35158083f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2989806f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09687677f ? 
                     (data[18 /* X19 */] <-0.22606596f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
        0.6363636f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.275851f ? 
             (data[11 /* X12 */] <-0.72566956f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.97950673f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2685598f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.68126667f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19126964f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.19802165f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0028319214f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27105176f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25265357f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                         (data[30 /* X31 */] <0.23224042f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[24 /* X25 */] <-0.7036367f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7694022f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3512201f ? 
                 (data[20 /* X21 */] <0.0708731f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4948295f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38569012f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4827594f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.26024282f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
             (data[21 /* X22 */] <0.18634558f ? 
                 (data[28 /* X29 */] <0.40154606f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-1.1626415f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.83554536f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2109375f ? 
                     (data[20 /* X21 */] <0.10938897f ? 
                         (data[13 /* X14 */] <0.13440698f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.16830646f ? 
                         (data[7 /* X8 */] <0.07258148f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5389429f ? 
                                 (data[0 /* X1 */] <0.08139864f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31600648f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22331145f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1388498f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.3298305f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.18957849f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34250778f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (data[3 /* X4 */] <0.091600135f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.5528545f ? 
             (data[9 /* X10 */] <-0.35085958f ? 
                 (data[28 /* X29 */] <0.14334852f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36887977f ? 
                 (data[33 /* X34 */] <-0.8203125f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1720805f ? 
                         (data[23 /* X24 */] <0.063911766f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[0 /* X1 */] <-0.4695151f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5489217f ? 
                             (data[0 /* X1 */] <-0.18561101f ? 
                                 (data[13 /* X14 */] <0.14913428f ? 
                                     (data[34 /* X35 */] <-0.07158875f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2674168f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17242956f ? 
                                        0.0f : 
                                         (data[28 /* X29 */] <0.40646902f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (data[14 /* X15 */] <0.22530337f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39357805f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22553653f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.22309524f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.14079604f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20515263f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15795963f ? 
                         (data[11 /* X12 */] <-0.44034964f ? 
                             (data[21 /* X22 */] <0.18211026f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3054819f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10303413f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.13965113f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2906381f ? 
                         (data[13 /* X14 */] <0.19198579f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17292953f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24237874f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.38288042f ? 
                             (data[17 /* X18 */] <-0.15807335f ? 
                                0.0f : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18267499f ? 
                                    1.0f : 
                                     (data[6 /* X7 */] <0.2065189f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8105469f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.039854456f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.32686847f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2779378f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2313559f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.17630784f ? 
                                 (data[31 /* X32 */] <0.0877665f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.12818009f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.081007674f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.03090255f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (data[34 /* X35 */] <-0.06853477f ? 
             (data[20 /* X21 */] <0.12645486f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.029488966f ? 
                     (data[19 /* X20 */] <-0.4494645f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47721425f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28899258f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14697547f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[33 /* X34 */] <0.033203125f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25536728f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31333223f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1535703f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25109753f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15006126f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.12110984f ? 
                    1.0f : 
                     (data[24 /* X25 */] <0.07842896f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4014109f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32062447f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10648013f ? 
             (data[20 /* X21 */] <0.11199968f ? 
                 (data[4 /* X5 */] <0.09846653f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.10565079f ? 
                 (data[32 /* X33 */] <-0.21875f ? 
                     (data[1 /* X2 */] <-0.39569515f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32197478f ? 
                         (data[2 /* X3 */] <-0.49834594f ? 
                            1.0f : 
                             (data[11 /* X12 */] <-0.16023125f ? 
                                 (data[4 /* X5 */] <0.15036687f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.16866286f ? 
                     (data[27 /* X28 */] <-0.16637918f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13982859f ? 
                            1.0f : 
                             (data[19 /* X20 */] <0.23757815f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05859375f ? 
            1.0f : 
             (data[6 /* X7 */] <0.10223892f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[17 /* X18 */] <-0.56357807f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6875f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21017978f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.20398137f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4456576f ? 
                 (data[32 /* X33 */] <0.2421875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.027812302f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.14962034f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.050822385f ? 
                         (data[34 /* X35 */] <-0.022725f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38153458f ? 
                             (data[10 /* X11 */] <-0.62942225f ? 
                                 (data[19 /* X20 */] <-0.3393512f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36173227f ? 
                                     (data[33 /* X34 */] <-0.9f ? 
                                         (data[10 /* X11 */] <0.18179159f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25203395f ? 
                                            0.0f : 
                                             (data[2 /* X3 */] <-0.02869949f ? 
                                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5113625f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f))) : 
                                     (data[23 /* X24 */] <0.08443364f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)))) : 
             (data[5 /* X6 */] <0.13367784f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[15 /* X16 */] <0.05489115f ? 
             (data[20 /* X21 */] <0.16115247f ? 
                 (data[6 /* X7 */] <0.12019819f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4371426f ? 
                     (data[29 /* X30 */] <0.11469791f ? 
                         (data[25 /* X26 */] <-0.33117238f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23427354f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3707554f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13454746f ? 
                         (data[15 /* X16 */] <0.07183011f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.069377355f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16833404f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.381816f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.273918f ? 
                                    0.0f : 
                                     (data[12 /* X13 */] <0.25857842f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[34 /* X35 */] <-0.654546f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.14616635f ? 
                                    0.0f : 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19934095f ? 
                                        1.0f : 
                                         (data[7 /* X8 */] <0.15392306f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.13319592f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.40295494f ? 
                         (data[17 /* X18 */] <-0.019926572f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19231702f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[18 /* X19 */] <-0.050138358f ? 
             (data[0 /* X1 */] <-0.065030105f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.14499637f ? 
                     (data[5 /* X6 */] <0.12239202f ? 
                         (data[28 /* X29 */] <0.189646f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.53403455f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.396023f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.11955171f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[30 /* X31 */] <0.18896359f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31375912f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0319011f ? 
                 (data[15 /* X16 */] <0.09339039f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[33 /* X34 */] <-0.3515625f ? 
             (data[21 /* X22 */] <0.059286308f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18807921f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2255589f ? 
                 (data[3 /* X4 */] <-0.23479971f ? 
                     (data[3 /* X4 */] <-0.30422142f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.399413f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.021475002f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3141445f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.57038766f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3394549f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.23304619f ? 
             (data[24 /* X25 */] <-0.9014997f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.49238563f ? 
                     (data[8 /* X9 */] <0.15485257f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14912347f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34311008f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63255996f ? 
                 (data[26 /* X27 */] <-0.076733276f ? 
                     (data[29 /* X30 */] <0.089827016f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.28369224f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.025298594f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.48962033f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23972042f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.7163889f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <-0.21131031f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10734284f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.44080347f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[2 /* X3 */] <0.18500978f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.580957f ? 
             (data[19 /* X20 */] <-0.39524204f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08638207f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24724013f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12495127f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.05164047f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03853757f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36470243f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.5891771f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4407923f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30876917f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37635967f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5389429f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25310618f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.041821778f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X11 */] <0.020232465f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30859375f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032368712f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.256808f ? 
             (data[9 /* X10 */] <-0.2881524f ? 
                 (data[26 /* X27 */] <-0.26789746f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.12180388f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.16990164f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                         (data[1 /* X2 */] <-0.14639644f ? 
                             (data[8 /* X9 */] <-0.27345994f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14443836f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.049106095f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022852737f ? 
         (data[30 /* X31 */] <0.0925032f ? 
             (data[26 /* X27 */] <0.013012478f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13962051f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22090285f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4421571f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20400807f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.35545185f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.75f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[11 /* X12 */] <0.8492964f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19088341f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31264853f ? 
             (data[33 /* X34 */] <-0.375f ? 
                 (data[5 /* X6 */] <0.06718967f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22276482f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.1644861f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.11187002f ? 
                     (data[33 /* X34 */] <-0.0029308593f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.280055f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16649316f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.4375f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28267345f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16737212f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13534005f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (data[3 /* X4 */] <-0.25290507f ? 
                     (data[26 /* X27 */] <-0.076762855f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X12 */] <-0.17785533f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.234375f ? 
                     (data[10 /* X11 */] <-0.29595342f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.5234368f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.1763416f ? 
                         (data[24 /* X25 */] <-0.389097f ? 
                             (data[20 /* X21 */] <0.2366594f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (data[25 /* X26 */] <-0.038211364f ? 
             (data[15 /* X16 */] <0.09031045f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.16967152f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32867414f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.11281654f ? 
                 (data[3 /* X4 */] <-0.44734976f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[4 /* X5 */] <0.15732232f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14597432f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.13035344f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.11284807f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41173118f ? 
             (data[7 /* X8 */] <0.029081022f ? 
                 (data[5 /* X6 */] <0.083811715f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.6290799f ? 
                     (data[4 /* X5 */] <0.12599288f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1846291f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14137231f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23238216f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5232839f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3463562f ? 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17862034f ? 
                                            0.0f : 
                                             (data[8 /* X9 */] <0.055049576f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.093246624f ? 
             (data[11 /* X12 */] <-0.16644253f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10072564f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22869867f ? 
             (data[33 /* X34 */] <-0.41015625f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1953361f ? 
                     (data[3 /* X4 */] <-0.20218039f ? 
                         (data[32 /* X33 */] <-0.17430484f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1888685f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30360907f ? 
                             (data[31 /* X32 */] <0.052030843f ? 
                                 (data[18 /* X19 */] <0.12195082f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.16637918f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13540243f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20001602f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.12127164f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3063485f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3413181f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28741258f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <0.32200673f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27932605f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.18021956f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                     (data[29 /* X30 */] <0.061403137f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.09542882f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.19996955f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[24 /* X25 */] <-0.18919294f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.07202429f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[16 /* X17 */] <-0.29178956f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.058470864f ? 
                 (data[33 /* X34 */] <-0.3515625f ? 
                     (data[13 /* X14 */] <0.18718755f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18943246f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.08254067f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35311702f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.09315053f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.6069037f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18966717f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43926024f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19553334f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28338674f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15272123f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2827104f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7025963f ? 
                     (data[5 /* X6 */] <0.08713612f ? 
                         (data[17 /* X18 */] <-0.11776564f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.18332036f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21425173f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.7011719f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2541168f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22839342f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22225353f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.39107108f ? 
                 (data[2 /* X3 */] <-0.0640638f ? 
                     (data[27 /* X28 */] <-0.21097381f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7115391f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26500884f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
        0.008695652f : 
         (data[3 /* X4 */] <-0.15779628f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.053157177f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4273864f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4678742f ? 
                 (data[10 /* X11 */] <-0.4992158f ? 
                     (data[19 /* X20 */] <-0.69972193f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <0.0078125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27579632f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.44601375f ? 
                 (data[10 /* X11 */] <-0.56696993f ? 
                     (data[29 /* X30 */] <0.107913546f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.84375f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5036173f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.075140156f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.10729523f ? 
                                 (data[13 /* X14 */] <0.10219026f ? 
                                    1.0f : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24013124f ? 
                                        0.0f : 
                                         (data[27 /* X28 */] <-0.33595455f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f)))) : 
                1.0f) : 
             (data[23 /* X24 */] <0.081356846f ? 
                 (data[10 /* X11 */] <-0.22819932f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2265625f ? 
                    0.0f : 
                    1.0f))) : 
         (data[13 /* X14 */] <0.17879064f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41097578f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3527242f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2724473f ? 
                 (data[0 /* X1 */] <-0.0357196f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.078125f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17970762f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2704575f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24582706f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.19539617f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14259505f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4726741f ? 
                                1.0f : 
                                 (data[12 /* X13 */] <0.19523789f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07431626f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.05951106f ? 
                     (data[27 /* X28 */] <-0.13565356f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[13 /* X14 */] <0.13320743f ? 
             (data[29 /* X30 */] <0.13157459f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27843288f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.396023f ? 
                     (data[27 /* X28 */] <-0.36517856f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.189387f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.27415884f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.23859322f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.27336872f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.17270769f ? 
                         (data[11 /* X12 */] <-0.16644253f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0020746146f ? 
             (data[29 /* X30 */] <0.22395219f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.25f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[33 /* X34 */] <-0.37890625f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                 (data[29 /* X30 */] <0.08449754f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.034993663f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X1 */] <-0.5164119f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.036541935f ? 
                     (data[4 /* X5 */] <0.2108621f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.39034864f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25751287f ? 
             (data[25 /* X26 */] <-0.6567049f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.0341559f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.08107063f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21921736f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.095291585f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12718235f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48785302f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[3 /* X4 */] <-0.48539326f ? 
            1.0f : 
             (data[5 /* X6 */] <0.07300738f ? 
                 (data[27 /* X28 */] <0.047308646f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.22874409f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.23257469f ? 
                         (data[9 /* X10 */] <-0.8687192f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3159075f ? 
                                 (data[23 /* X24 */] <0.060449637f ? 
                                     (data[17 /* X18 */] <-0.09070546f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[28 /* X29 */] <0.1070228f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))) : 
         (data[28 /* X29 */] <0.27912483f ? 
             (data[9 /* X10 */] <-0.5775702f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6015625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.12818009f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27990782f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.07044055f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.51498264f ? 
                     (data[14 /* X15 */] <0.1258124f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.08984375f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46862713f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.12890984f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.13591196f ? 
             (data[5 /* X6 */] <0.10126486f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5253334f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.073134996f ? 
             (data[8 /* X9 */] <0.5102117f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <0.033111572f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37054196f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1640986f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.63365394f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.14580326f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21537045f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[27 /* X28 */] <-0.6649597f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25585938f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25132316f ? 
             (data[30 /* X31 */] <0.087289125f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.096163385f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.9644876f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0912201f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5888391f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11344334f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.17009175f ? 
                                        0.0f : 
                                         (data[17 /* X18 */] <-0.12537639f ? 
                                            1.0f : 
                                             (data[20 /* X21 */] <0.22850819f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19046244f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28369224f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3386487f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49999687f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.47285154f ? 
             (data[14 /* X15 */] <0.0870535f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.13642332f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.68093914f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36277547f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.67436445f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.18869333f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.90652025f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.051794518f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[24 /* X25 */] <-0.5145676f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.00557887f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.098903075f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0390625f ? 
                     (data[34 /* X35 */] <0.16051406f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.072010115f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06892521f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17531604f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.3583319f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22874409f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (data[13 /* X14 */] <0.15300013f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2506315f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.609375f ? 
                     (data[7 /* X8 */] <0.054455422f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.2577449f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11535398f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.38183033f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65234375f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21488829f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26586774f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[13 /* X14 */] <0.20997916f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15870765f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.07743763f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.12180388f ? 
                     (data[15 /* X16 */] <0.23506758f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (data[10 /* X11 */] <-0.56696993f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19466494f ? 
                 (data[7 /* X8 */] <0.03161846f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.004749425f ? 
                 (data[33 /* X34 */] <-0.9453125f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.18142182f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.10143067f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.40625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.79374295f ? 
             (data[15 /* X16 */] <0.18270862f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3657207f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.46875f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18271287f ? 
             (data[27 /* X28 */] <-0.122386776f ? 
                 (data[34 /* X35 */] <-0.09143965f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.14934216f ? 
             (data[29 /* X30 */] <0.07472683f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17038886f ? 
                 (data[33 /* X34 */] <-0.4140625f ? 
                     (data[5 /* X6 */] <0.13035344f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1321866f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2549265f ? 
                         (data[23 /* X24 */] <0.044277694f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.15843703f ? 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11186529f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.413635f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.047521655f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20302871f ? 
                     (data[35 /* X36 */] <-0.53125f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.16149557f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.0043245424f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.27928448f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.7283166f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40814048f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07902133f ? 
                        0.0f : 
                         (data[2 /* X3 */] <0.11475826f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14745595f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13057862f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.03125f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24421655f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1569487f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[34 /* X35 */] <-0.0704435f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09370719f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.004749425f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23408498f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09640717f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23021127f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.038987815f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2711008f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19823305f ? 
                 (data[14 /* X15 */] <0.13876802f ? 
                     (data[23 /* X24 */] <0.18498851f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20820409f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.37588888f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.48600084f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27823448f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.212835f ? 
                 (data[3 /* X4 */] <-0.55725324f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.12550375f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11875372f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22444174f ? 
                     (data[27 /* X28 */] <-0.26879528f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.31379882f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2393199f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08798659f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1640986f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7017199f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27395302f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[34 /* X35 */] <-0.9274679f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50253636f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16212632f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.22515975f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.453125f ? 
                     (data[22 /* X23 */] <0.15913327f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (data[13 /* X14 */] <0.17879064f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.64244705f ? 
            1.0f : 
             (data[22 /* X23 */] <0.09125737f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.21576983f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X11 */] <-0.634724f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19052783f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4980993f ? 
                             (data[8 /* X9 */] <-0.18363415f ? 
                                 (data[23 /* X24 */] <0.06652964f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.050733414f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (data[34 /* X35 */] <-0.09334839f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.071884476f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16308399f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.18837538f ? 
             (data[16 /* X17 */] <-0.34222597f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.11371678f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4726741f ? 
                         (data[18 /* X19 */] <-0.2772449f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.45891824f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.028027834f ? 
                                     (data[8 /* X9 */] <0.050733414f ? 
                                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.021152517f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                     (data[16 /* X17 */] <0.031188492f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35606632f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[15 /* X16 */] <0.07363998f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30196834f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05709122f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.82678246f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.90409887f ? 
         (data[13 /* X14 */] <0.2291721f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
             (data[27 /* X28 */] <-0.736322f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.7465812f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.64548665f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13111757f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[34 /* X35 */] <-0.34911957f ? 
             (data[33 /* X34 */] <-0.4140625f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20012048f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1586006f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.234375f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.34939632f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.16320185f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27861482f ? 
                     (data[9 /* X10 */] <-0.2736815f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22974646f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.17753507f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.81712073f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.50521576f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23058444f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09068637f ? 
                     (data[1 /* X2 */] <-0.29161185f ? 
                         (data[17 /* X18 */] <-0.1493674f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[30 /* X31 */] <0.16967152f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35711432f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4053237f ? 
                 (data[17 /* X18 */] <-0.5376899f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.8046875f ? 
                 (data[25 /* X26 */] <-0.37124637f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.25880766f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.25894508f ? 
                         (data[21 /* X22 */] <0.10466462f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08647709f ? 
         (data[34 /* X35 */] <-0.5800772f ? 
             (data[23 /* X24 */] <0.06882028f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.0051131076f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.453125f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14266941f ? 
                             (data[6 /* X7 */] <0.07349753f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.088062964f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1750737f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.06567094f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.6290799f ? 
            1.0f : 
             (data[22 /* X23 */] <0.09983547f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13616197f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-1.1596999f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2300857f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.14580326f ? 
                             (data[7 /* X8 */] <0.10323237f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.321425f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.16683449f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[20 /* X21 */] <0.0941431f ? 
             (data[25 /* X26 */] <-0.2300518f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.4132254f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.546875f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06686257f ? 
                     (data[7 /* X8 */] <0.15595302f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.053351182f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07399841f ? 
                     (data[34 /* X35 */] <-0.1601543f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3490512f ? 
                     (data[13 /* X14 */] <0.11521404f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16533458f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19020562f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.32901612f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[35 /* X36 */] <0.25f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13058579f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57686996f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4421571f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.58021027f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[31 /* X32 */] <0.117088675f ? 
             (data[24 /* X25 */] <-0.061681237f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.029911708f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.40462214f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2612457f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.212835f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4765625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0010865283f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.029488966f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17137176f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.625f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.05625f ? 
                                1.0f : 
                                 (data[7 /* X8 */] <0.056485374f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.11127387f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.019015422f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.104914844f ? 
                 (data[34 /* X35 */] <-0.5071048f ? 
                     (data[33 /* X34 */] <-0.2125f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.4666267f ? 
                         (data[33 /* X34 */] <-0.1f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.15924336f ? 
                     (data[8 /* X9 */] <-0.1682853f ? 
                        1.0f : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.18210664f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24111244f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.13711512f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10648013f ? 
         (data[19 /* X20 */] <-0.62881565f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.4346747f ? 
                 (data[31 /* X32 */] <0.07292365f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6319831f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.17326704f ? 
             (data[20 /* X21 */] <0.23938005f ? 
                 (data[30 /* X31 */] <0.18844219f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20934324f ? 
                 (data[32 /* X33 */] <-0.265625f ? 
                     (data[33 /* X34 */] <-0.390625f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16610278f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.2319447f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (data[28 /* X29 */] <0.083695985f ? 
             (data[35 /* X36 */] <-0.30859375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31289494f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.12903921f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.09846653f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[28 /* X29 */] <0.24573721f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7653898f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0093408665f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25946558f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2906381f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.25500888f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.17121947f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28575978f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.300833f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.18394011f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[4 /* X5 */] <0.37158057f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[31 /* X32 */] <0.08955048f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.10659714f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.2803228f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3043756f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1673876f ? 
             (data[35 /* X36 */] <-0.19921875f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43155518f ? 
                 (data[27 /* X28 */] <-0.097946554f ? 
                     (data[19 /* X20 */] <-0.17749979f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.5859375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19666669f ? 
                 (data[13 /* X14 */] <0.18238932f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.09722067f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22916517f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.24458788f ? 
                     (data[32 /* X33 */] <0.03125f ? 
                         (data[3 /* X4 */] <-0.17539583f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.6828914f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6055918f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.8472923f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[28 /* X29 */] <0.07212161f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0376076f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.42664433f ? 
                     (data[22 /* X23 */] <0.10740095f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15306816f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43926024f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5534114f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16322741f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[27 /* X28 */] <-0.321185f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[0 /* X1 */] <0.43286306f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5744788f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2152909f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109560065f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                 (data[34 /* X35 */] <-0.2365039f ? 
                     (data[21 /* X22 */] <0.09256373f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26802653f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[13 /* X14 */] <0.09602111f ? 
                     (data[26 /* X27 */] <0.08008438f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.073619865f ? 
                        1.0f : 
                        0.0f))) : 
             (data[23 /* X24 */] <0.14162995f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
                     (data[16 /* X17 */] <-0.66585946f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7713109f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43894953f ? 
         (data[15 /* X16 */] <0.10648013f ? 
             (data[23 /* X24 */] <0.027304247f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18593135f ? 
                 (data[3 /* X4 */] <-0.5234368f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18959807f ? 
                     (data[21 /* X22 */] <0.119790725f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33928436f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.28770858f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17607144f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27615985f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[28 /* X29 */] <0.2862475f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[15 /* X16 */] <0.17038886f ? 
             (data[32 /* X33 */] <-0.015625f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5800772f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.06465348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (data[25 /* X26 */] <-0.59071183f ? 
             (data[23 /* X24 */] <0.11177895f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26665333f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30806905f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20596406f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27990782f ? 
                     (data[9 /* X10 */] <-0.52451026f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29696065f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38300848f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.100731f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.063911766f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.14722863f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10132235f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[33 /* X34 */] <-0.28125f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21724644f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.24058294f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24987522f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21837607f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30106622f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31037962f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12016369f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.17183928f ? 
                     (data[23 /* X24 */] <0.08107478f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36708096f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14729258f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[26 /* X27 */] <-0.05359503f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1472524f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4745719f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[11 /* X12 */] <-0.7243795f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.46851465f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44046986f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.47414887f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20567866f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24812698f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.06409114f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.18048492f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24266858f ? 
                     (data[21 /* X22 */] <0.1742447f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25948203f ? 
             (data[34 /* X35 */] <-0.5113625f ? 
                 (data[16 /* X17 */] <-0.32468402f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.16827793f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19567351f ? 
                     (data[1 /* X2 */] <-0.43579578f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.19320735f ? 
                        0.0f : 
                        1.0f))) : 
             (data[34 /* X35 */] <-0.16778925f ? 
                 (data[30 /* X31 */] <0.16550025f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.1657679f ? 
                     (data[19 /* X20 */] <0.17797534f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2997323f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.12369026f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14514644f ? 
             (data[2 /* X3 */] <-0.39935517f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.10150425f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.033945438f ? 
             (data[33 /* X34 */] <-0.1015625f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29114437f ? 
                     (data[3 /* X4 */] <-0.57416147f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.044277694f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.060426082f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2698133f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.29517567f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23516384f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.17358209f ? 
                     (data[21 /* X22 */] <0.09861418f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[29 /* X30 */] <0.2030784f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.106856145f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.14555116f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.09821269f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (data[19 /* X20 */] <-1.1626983f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11156501f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41287032f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.11061741f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4445133f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27710074f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.282241f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[34 /* X35 */] <-0.46173525f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.122692525f ? 
         (data[14 /* X15 */] <0.09313756f ? 
             (data[2 /* X3 */] <-0.21733986f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X5 */] <0.076443076f ? 
                 (data[32 /* X33 */] <0.2890625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17856753f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23100601f ? 
                 (data[31 /* X32 */] <0.04590505f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16836393f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.16549073f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03015622f ? 
                                0.0f : 
                                1.0f) : 
                             (data[26 /* X27 */] <-0.29222366f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.41015625f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18008f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.29346833f ? 
                     (data[6 /* X7 */] <0.16864687f ? 
                         (data[27 /* X28 */] <-0.4564333f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.10862317f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.64472955f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[14 /* X15 */] <0.08198345f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24646844f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.713594f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0204884f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2751183f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[5 /* X6 */] <0.12038021f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.3515625f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17896198f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.18699446f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.12890625f ? 
             (data[24 /* X25 */] <-0.44421634f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.3833889f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.31761485f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2403613f ? 
                 (data[19 /* X20 */] <-0.399413f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.19179384f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08107063f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7713109f ? 
                 (data[2 /* X3 */] <-0.2939779f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
                         (data[17 /* X18 */] <-0.43413725f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.122565195f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2290884f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31366506f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22567345f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.008670047f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36496747f ? 
             (data[24 /* X25 */] <-0.5673311f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2056927f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.21777402f ? 
                     (data[34 /* X35 */] <-0.6640617f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0813971f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22139308f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.3393512f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.2554966f ? 
            0.0f : 
             (data[23 /* X24 */] <0.09009052f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28233847f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14894937f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35579124f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2843466f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.9511719f ? 
         (data[32 /* X33 */] <0.35546875f ? 
             (data[24 /* X25 */] <0.17575434f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.13466501f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.77734375f ? 
                 (data[34 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13269842f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13014609f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23379415f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.090603724f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.7247477f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.9694601f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.084674455f ? 
                             (data[0 /* X1 */] <0.07365528f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.1024939f ? 
         (data[7 /* X8 */] <0.13311607f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.56696993f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11025668f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.050822385f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.047983404f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23448405f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.45001405f ? 
                     (data[20 /* X21 */] <0.23067008f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.118199155f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4980993f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.24997303f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.16939086f ? 
         (data[15 /* X16 */] <0.06105103f ? 
             (data[35 /* X36 */] <0.16796875f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.34055188f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45643613f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2435688f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.53424704f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21641156f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.1431218f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49938533f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20598373f ? 
             (data[14 /* X15 */] <0.091564134f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6685935f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.59534705f ? 
                 (data[25 /* X26 */] <-0.27905348f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4270809f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.12903921f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (data[18 /* X19 */] <-0.050138358f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.08315602f ? 
                 (data[12 /* X13 */] <0.17997551f ? 
                     (data[25 /* X26 */] <-0.44233587f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.3833889f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.093632765f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.29444343f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2799566f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43926024f ? 
                 (data[30 /* X31 */] <0.11753076f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.34028512f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.3495314f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5744788f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27842572f ? 
         (data[23 /* X24 */] <0.08845435f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0234375f ? 
                 (data[17 /* X18 */] <-0.5891597f ? 
                     (data[15 /* X16 */] <0.042958543f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07882824f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.47409582f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.45491412f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4514624f ? 
                 (data[1 /* X2 */] <-0.54008496f ? 
                     (data[10 /* X11 */] <0.04281717f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[20 /* X21 */] <0.22373298f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.30903605f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.003939969f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16710444f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29354298f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.84869176f ? 
                 (data[12 /* X13 */] <0.1054805f ? 
                     (data[34 /* X35 */] <-0.3948879f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22422636f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.21875f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1039355f ? 
                 (data[23 /* X24 */] <0.11592359f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.090321116f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.12024322f ? 
                 (data[19 /* X20 */] <-0.40189156f ? 
                     (data[1 /* X2 */] <-0.3609532f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22677298f ? 
            0.0f : 
             (data[30 /* X31 */] <0.16550025f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.0027224647f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[32 /* X33 */] <0.24414062f ? 
             (data[15 /* X16 */] <0.15036926f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.9312854f ? 
                 (data[16 /* X17 */] <-0.14468344f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7691702f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41330433f ? 
             (data[18 /* X19 */] <-0.08532388f ? 
                 (data[23 /* X24 */] <0.07565624f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19637887f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.61309564f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X13 */] <0.11456525f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2070755f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.20218039f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33467558f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <-0.4077549f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.072265625f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.5823938f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.3720703f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16499572f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14917456f ? 
                 (data[9 /* X10 */] <-0.45697945f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21530762f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15960908f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.013454531f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25030914f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18843716f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5882681f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.87784064f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26197296f ? 
                         (data[10 /* X11 */] <-0.9057405f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.15961246f ? 
                                 (data[10 /* X11 */] <-0.16738532f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5026766f ? 
                                    1.0f : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2113391f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1506289f ? 
             (data[28 /* X29 */] <0.07212161f ? 
                 (data[34 /* X35 */] <0.2292287f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.12160862f ? 
                     (data[4 /* X5 */] <0.119730555f ? 
                         (data[3 /* X4 */] <-0.066914536f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43286288f ? 
                 (data[31 /* X32 */] <0.11241238f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.83203083f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17197727f ? 
             (data[9 /* X10 */] <-0.34603596f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2285178f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (data[16 /* X17 */] <-0.76647776f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.18252319f ? 
                 (data[34 /* X35 */] <-0.87020564f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.09375f ? 
                     (data[28 /* X29 */] <0.21073285f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.17440948f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34857303f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.84375f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4709923f ? 
                     (data[24 /* X25 */] <-0.78112894f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.065390006f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20686638f ? 
                                 (data[0 /* X1 */] <-0.14713778f ? 
                                     (data[18 /* X19 */] <0.19662207f ? 
                                        0.0f : 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15656818f ? 
                                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11644979f ? 
                                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1513875f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f) : 
                                            1.0f)) : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28148642f ? 
                                        0.0f : 
                                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.123447224f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16359752f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19769078f ? 
             (data[19 /* X20 */] <0.05939236f ? 
                 (data[16 /* X17 */] <-0.6056114f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3681491f ? 
                1.0f : 
                 (data[19 /* X20 */] <0.4514624f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.15660308f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.22505146f ? 
                 (data[5 /* X6 */] <0.11206919f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21997185f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36604533f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15297821f ? 
                                 (data[20 /* X21 */] <0.088714756f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.06272431f ? 
         (data[20 /* X21 */] <0.08772379f ? 
             (data[21 /* X22 */] <0.07819394f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.359375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47240755f ? 
                     (data[19 /* X20 */] <-0.3779653f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20752212f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.16149028f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28233847f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
        0.6666667f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28735068f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45643613f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1321866f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7944125f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29420346f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2112612f ? 
                                    0.0f : 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.261898f ? 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17273f ? 
                                            0.0f : 
                                             (data[35 /* X36 */] <0.3f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[23 /* X24 */] <0.08747265f ? 
                                            0.0f : 
                                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.40593868f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                 (data[0 /* X1 */] <-0.43434247f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.7164058f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[27 /* X28 */] <-0.34234878f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[15 /* X16 */] <0.047191303f ? 
             (data[1 /* X2 */] <-0.011357314f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <0.048995193f ? 
             (data[29 /* X30 */] <0.10936843f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.05739446f ? 
                     (data[21 /* X22 */] <0.15677446f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2197239f ? 
                            1.0f : 
                            0.0f) : 
                         (data[0 /* X1 */] <0.14466582f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2808732f ? 
                                1.0f : 
                                0.0f) : 
                             (data[13 /* X14 */] <0.11222708f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.18992744f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.025383564f ? 
                     (data[14 /* X15 */] <0.1854125f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34146258f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.63622963f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58637965f ? 
                 (data[13 /* X14 */] <0.08642464f ? 
                     (data[5 /* X6 */] <0.11480703f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.61386645f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4726741f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5411112f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.15524259f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[30 /* X31 */] <0.261898f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.13111757f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.224539f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23816413f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6580124f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11373139f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.05889594f ? 
             (data[31 /* X32 */] <0.043826696f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.07916806f ? 
                     (data[7 /* X8 */] <0.03350506f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.5078125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.014849801f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27899295f ? 
             (data[9 /* X10 */] <-0.49556848f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.124497205f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31162682f ? 
                         (data[21 /* X22 */] <0.07018183f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                     (data[13 /* X14 */] <0.14780074f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26557034f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.18609743f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27886158f ? 
                         (data[6 /* X7 */] <0.12013386f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15004185f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19303297f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16755885f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.09369552f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[24 /* X25 */] <-0.38046047f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20801666f ? 
                 (data[20 /* X21 */] <0.18605533f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22381215f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[22 /* X23 */] <0.15188459f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17273208f ? 
                     (data[4 /* X5 */] <0.10150425f ? 
                         (data[9 /* X10 */] <-0.69816095f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18732853f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36632186f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1327167f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33171836f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2169423f ? 
                            0.0f : 
                             (data[2 /* X3 */] <0.34043595f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.3870559f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4879087f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[24 /* X25 */] <0.017463958f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.36294478f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4022383f ? 
             (data[27 /* X28 */] <-0.21037158f ? 
                 (data[28 /* X29 */] <0.09527036f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.12180388f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[15 /* X16 */] <0.08909355f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.15071958f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24828112f ? 
            0.0f : 
             (data[26 /* X27 */] <0.30261034f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.09390996f ? 
             (data[27 /* X28 */] <-0.02462589f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.44733217f ? 
                 (data[28 /* X29 */] <0.10951574f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.060367305f ? 
                     (data[27 /* X28 */] <0.009590421f ? 
                         (data[21 /* X22 */] <0.16121306f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.59150404f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.08162652f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13161133f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.74936044f ? 
         (data[24 /* X25 */] <-0.17160511f ? 
             (data[31 /* X32 */] <0.047983404f ? 
                 (data[26 /* X27 */] <0.06294409f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.48321897f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5990248f ? 
                         (data[13 /* X14 */] <0.08642464f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.25240877f ? 
                                 (data[0 /* X1 */] <0.07298484f ? 
                                    0.0f : 
                                     (data[4 /* X5 */] <0.13188143f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5958647f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.28369224f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24068433f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21589085f ? 
                         (data[0 /* X1 */] <-0.5281361f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0032261705f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34768215f ? 
                     (data[10 /* X11 */] <-0.22819932f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14754519f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23351607f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.21597695f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17878252f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.757994f ? 
             (data[26 /* X27 */] <-0.044907093f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.16753139f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17154567f ? 
                         (data[25 /* X26 */] <-0.5247187f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20868151f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X13 */] <0.15181276f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2332365f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[16 /* X17 */] <-0.29178956f ? 
             (data[28 /* X29 */] <0.14601953f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1096685f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3253316f ? 
                        1.0f : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.19321844f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.24180266f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7486627f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[31 /* X32 */] <0.09994225f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21198466f ? 
                        0.0f : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.13811037f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19513622f ? 
                             (data[16 /* X17 */] <-0.110849015f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4375f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.0026896475f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.32954872f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.003411953f ? 
         (data[3 /* X4 */] <-0.5699344f ? 
             (data[20 /* X21 */] <0.14630002f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90946674f ? 
                 (data[9 /* X10 */] <-0.9099084f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.6640617f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.088779055f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.11774564f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.071702905f ? 
                                    1.0f : 
                                     (data[11 /* X12 */] <0.22072667f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.44157815f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[22 /* X23 */] <0.25710213f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34456453f ? 
             (data[2 /* X3 */] <-0.36103615f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.48962033f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22676128f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.85033405f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.39469847f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19554654f ? 
                             (data[30 /* X31 */] <0.19700567f ? 
                                 (data[31 /* X32 */] <0.10735838f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.140625f ? 
                 (data[22 /* X23 */] <0.117185175f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.14088805f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4898204f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.07618306f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38168395f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.089733094f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24712679f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.65710235f ? 
            1.0f : 
             (data[23 /* X24 */] <0.04918621f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13813394f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40524933f ? 
                     (data[10 /* X11 */] <-0.56696993f ? 
                         (data[9 /* X10 */] <-0.4469928f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.5836521f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.1314983f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21205623f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.32204086f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.3062493f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
             (data[31 /* X32 */] <0.10721649f ? 
                 (data[12 /* X13 */] <0.12183306f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.0816264f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.16961345f ? 
             (data[32 /* X33 */] <-0.015625f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35105884f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.008780981f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.15440121f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18132742f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.08681817f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27465418f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23232605f ? 
                         (data[7 /* X8 */] <0.037387494f ? 
                             (data[12 /* X13 */] <0.25338033f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.1449723f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.16318282f ? 
                             (data[24 /* X25 */] <-0.04761098f ? 
                                1.0f : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44270763f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.38984543f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31947982f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45376584f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.45205498f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3180638f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.48082265f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.089212246f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.30316874f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X5 */] <0.16833404f ? 
                     (data[34 /* X35 */] <0.099434376f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.09418095f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.15013029f ? 
         (data[9 /* X10 */] <-0.5100394f ? 
             (data[3 /* X4 */] <0.102167785f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26214677f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13220413f ? 
                     (data[34 /* X35 */] <-0.08380469f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.36324114f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.11187002f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44382697f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1356535f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3784417f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7558594f ? 
             (data[22 /* X23 */] <0.14069122f ? 
                 (data[26 /* X27 */] <0.2533787f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36306205f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.10239305f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12997422f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.20114374f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.6631446f ? 
                         (data[26 /* X27 */] <-0.08834677f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.214289f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <0.26786014f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19753796f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28379908f ? 
         (data[19 /* X20 */] <-0.43486613f ? 
             (data[24 /* X25 */] <-0.050298795f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.27865654f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25480714f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[18 /* X19 */] <-0.2772449f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2044969f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.044305664f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.018128796f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15910992f ? 
             (data[22 /* X23 */] <0.12558019f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23212612f ? 
                     (data[1 /* X2 */] <-0.2453843f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6424239f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (data[34 /* X35 */] <-0.90838045f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.9003906f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.15568274f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.453125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.069506444f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01976826f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.56132376f ? 
             (data[29 /* X30 */] <0.10670369f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.65710235f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6272776f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.50619775f ? 
                         (data[22 /* X23 */] <0.15668035f ? 
                             (data[26 /* X27 */] <-0.36636072f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.1380122f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.10908701f ? 
                                         (data[1 /* X2 */] <-0.19684538f ? 
                                            0.0f : 
                                             (data[34 /* X35 */] <-0.4892865f ? 
                                                0.0f : 
                                                1.0f)) : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32981795f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.093024604f ? 
         (data[14 /* X15 */] <0.10479868f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2099945f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.56714416f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5161807f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25030914f ? 
                         (data[31 /* X32 */] <0.0478636f ? 
                             (data[24 /* X25 */] <-0.15190148f ? 
                                1.0f : 
                                0.0f) : 
                             (data[8 /* X9 */] <0.1759079f ? 
                                 (data[35 /* X36 */] <-0.014482548f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41704875f ? 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19626448f ? 
                                            0.0f : 
                                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18770458f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        1.0f)) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[10 /* X11 */] <-0.18868575f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.41566944f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9520116f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.55686855f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31819597f ? 
                     (data[21 /* X22 */] <0.16418788f ? 
                         (data[34 /* X35 */] <-0.3586633f ? 
                             (data[2 /* X3 */] <0.15428641f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3053644f ? 
             (data[29 /* X30 */] <0.06051489f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4697821f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0057766f ? 
                         (data[12 /* X13 */] <0.15257598f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10729523f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24812698f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24740961f ? 
             (data[24 /* X25 */] <0.035051778f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.18578856f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5859375f ? 
         (data[1 /* X2 */] <-0.5343065f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21598092f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016162222f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33320647f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22825289f ? 
                         (data[34 /* X35 */] <-0.63352185f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.090901785f ? 
                                1.0f : 
                                0.0f) : 
                             (data[0 /* X1 */] <-0.32179013f ? 
                                1.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26154f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.1724429f ? 
                                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12938264f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)))) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1962843f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20345412f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42393526f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[26 /* X27 */] <0.20112254f ? 
                                    1.0f : 
                                     (data[23 /* X24 */] <0.08747265f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                     (data[25 /* X26 */] <-0.34055188f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.39315656f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.7011719f ? 
         (data[3 /* X4 */] <-0.576275f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35363615f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.070106365f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10648013f ? 
             (data[19 /* X20 */] <-0.4336927f ? 
                 (data[7 /* X8 */] <0.090310745f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.232009f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.091892526f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.15910992f ? 
                 (data[4 /* X5 */] <0.13491915f ? 
                     (data[24 /* X25 */] <-0.68270123f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10144848f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.08004762f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X13 */] <0.10729745f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8139343f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29007518f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.22077519f ? 
                                 (data[0 /* X1 */] <0.5025969f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.44335938f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1888685f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1359966f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.61987156f ? 
         (data[1 /* X2 */] <-0.19337831f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.011426345f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26665333f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29779533f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.30646315f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.02493695f ? 
                     (data[31 /* X32 */] <0.1793623f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.15188459f ? 
                 (data[4 /* X5 */] <0.13947572f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.056431122f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33113456f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.21254997f ? 
         (data[33 /* X34 */] <-0.2578125f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16341463f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.09505446f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20016602f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.16319638f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.08261641f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30205625f ? 
             (data[10 /* X11 */] <-0.2564302f ? 
                 (data[33 /* X34 */] <-0.0703125f ? 
                     (data[18 /* X19 */] <-0.08532388f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3978186f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28680503f ? 
                     (data[33 /* X34 */] <-0.96875f ? 
                         (data[19 /* X20 */] <-0.032368712f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16716278f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20135024f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.32179013f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0362293f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9976627f ? 
                 (data[29 /* X30 */] <0.06119694f ? 
                     (data[31 /* X32 */] <0.037591632f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19676629f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43926024f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17244639f ? 
                 (data[34 /* X35 */] <0.43194288f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.28338352f ? 
             (data[29 /* X30 */] <0.17953987f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.06514009f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10089112f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.10340019f ? 
         (data[23 /* X24 */] <0.059003245f ? 
             (data[29 /* X30 */] <0.0471912f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.3515625f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.9770951f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12903921f ? 
                            1.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3021304f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[24 /* X25 */] <-0.48378894f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.33464536f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25970718f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.27550176f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.30019563f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2106345f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23212612f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08046707f ? 
         (data[23 /* X24 */] <0.025870757f ? 
            1.0f : 
             (data[13 /* X14 */] <0.16799462f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.4561512f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5819447f ? 
                         (data[2 /* X3 */] <-0.52129877f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.36830118f ? 
                                 (data[3 /* X4 */] <-0.3712627f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[30 /* X31 */] <0.102097094f ? 
                                     (data[33 /* X34 */] <-0.076925f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3005999f ? 
                                        0.0f : 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.113634f ? 
                                            0.0f : 
                                            1.0f))))) : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.002352242f ? 
             (data[33 /* X34 */] <-0.33984375f ? 
                 (data[34 /* X35 */] <0.06889453f ? 
                     (data[16 /* X17 */] <-0.24907792f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.32430774f ? 
                     (data[31 /* X32 */] <0.09964605f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18073608f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.68920696f ? 
                 (data[3 /* X4 */] <-0.6587026f ? 
                     (data[1 /* X2 */] <0.1809767f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58771026f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.05728428f ? 
                 (data[17 /* X18 */] <-0.04802072f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.021484375f ? 
             (data[12 /* X13 */] <0.124558486f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023437858f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.9770951f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19515873f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.20218039f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25798157f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0557309f ? 
             (data[13 /* X14 */] <0.1571986f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.089201786f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12054703f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4121109f ? 
                 (data[10 /* X11 */] <-0.56696993f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.104038954f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X9 */] <-0.14846957f ? 
                         (data[18 /* X19 */] <-0.12370808f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22753154f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.17827116f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.375f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.1703125f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30080998f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.060281046f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16961345f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17578125f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.30859375f ? 
                 (data[27 /* X28 */] <-0.097946554f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[17 /* X18 */] <-0.08141097f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20149685f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.22509909f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.1875f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37146613f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X9 */] <-0.22318907f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.7068175f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <0.715625f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[30 /* X31 */] <0.086246304f ? 
                 (data[4 /* X5 */] <0.07720251f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.643976f ? 
                     (data[24 /* X25 */] <-0.41343763f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042147256f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.018553866f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.12180388f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5900457f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2361018f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54151195f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18449278f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.20352253f ? 
                         (data[4 /* X5 */] <0.1730178f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[17 /* X18 */] <0.41462702f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.18513358f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.26656505f ? 
                     (data[3 /* X4 */] <0.4403324f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13163716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.060481843f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.171875f ? 
             (data[35 /* X36 */] <-0.3515625f ? 
                 (data[16 /* X17 */] <0.11590457f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16902055f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.08713612f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06824695f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[16 /* X17 */] <-0.7709353f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27885595f ? 
                 (data[23 /* X24 */] <0.08681817f ? 
                     (data[1 /* X2 */] <-0.6036479f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07459933f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.20114374f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31652674f ? 
                                 (data[22 /* X23 */] <0.119423844f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18238932f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4332485f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35310522f ? 
         (data[30 /* X31 */] <0.18427093f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05078125f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.10938897f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-1.0864182f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.79166627f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15524259f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29559603f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                     (data[32 /* X33 */] <-0.65625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35760182f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.108519904f ? 
                             (data[0 /* X1 */] <0.011095465f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.093717285f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19019279f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3036298f ? 
                        1.0f : 
                         (data[3 /* X4 */] <0.12626627f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17673384f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.31206727f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07686351f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.078932606f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.4987662f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.18240124f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.90838045f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14672959f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15623176f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.20754895f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08282575f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4121109f ? 
                 (data[19 /* X20 */] <-0.31599385f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2783325f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.10948757f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.05f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.5556776f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44588342f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <0.15005866f ? 
                     (data[8 /* X9 */] <-0.13979779f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.08338605f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16289397f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16521278f ? 
         (data[30 /* X31 */] <0.10866683f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4375f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.14715075f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053223502f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13175878f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23996812f ? 
                         (data[17 /* X18 */] <-0.5894663f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.43571374f ? 
                                1.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38561365f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27066663f ? 
             (data[34 /* X35 */] <-0.6297044f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35171017f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.8999279f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.25436398f ? 
                     (data[26 /* X27 */] <-0.15785025f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.95601034f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2795564f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.29590756f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18336555f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13034965f ? 
                             (data[28 /* X29 */] <0.15707736f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1326864f ? 
                                     (data[5 /* X6 */] <0.09784261f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)))) : 
             (data[15 /* X16 */] <0.053351182f ? 
                 (data[1 /* X2 */] <-0.118258536f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1689574f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.53403455f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54238725f ? 
                 (data[7 /* X8 */] <0.031933166f ? 
                     (data[2 /* X3 */] <-0.28120488f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3205449f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.12797968f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.27467567f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.029048f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.18159498f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2350723f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22750518f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09185042f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22350651f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.054455422f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.045201533f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.24539903f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.23762329f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20997916f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23774317f ? 
                 (data[23 /* X24 */] <0.09663521f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31664813f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26345247f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.10293135f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.40300664f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17410797f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22928166f ? 
             (data[24 /* X25 */] <-0.6816519f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.4265714f ? 
                     (data[6 /* X7 */] <0.17607144f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.30371854f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.34055188f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.51498264f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.11620724f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11718928f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[13 /* X14 */] <0.1482019f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26727024f ? 
                 (data[6 /* X7 */] <0.10622987f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.19435914f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0150232f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38608208f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4050479f ? 
                 (data[8 /* X9 */] <0.033879243f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.026818603f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.16270241f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.44060928f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0960518f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.29297602f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (data[19 /* X20 */] <-0.18252319f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.61987156f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30919006f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37137306f ? 
                 (data[21 /* X22 */] <0.09675296f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38460153f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3809743f ? 
                             (data[1 /* X2 */] <-0.7436971f ? 
                                1.0f : 
                                 (data[25 /* X26 */] <-0.41358617f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12828778f ? 
                                        0.0f : 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05907806f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23064554f ? 
                                        0.0f : 
                                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21312912f ? 
                                            0.0f : 
                                             (data[35 /* X36 */] <-0.55f ? 
                                                0.0f : 
                                                1.0f))))) : 
                            1.0f) : 
                         (data[24 /* X25 */] <0.25489953f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.18608467f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28572342f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.119958825f ? 
             (data[15 /* X16 */] <0.048731275f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5502359f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17625254f ? 
                         (data[15 /* X16 */] <0.07284142f ? 
                             (data[10 /* X11 */] <-0.31573454f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17178585f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.038787525f ? 
                                 (data[6 /* X7 */] <0.22561406f ? 
                                    0.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24141526f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3178457f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.6755951f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3586633f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[16 /* X17 */] <-0.49773815f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14015292f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4140625f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4039696f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15618317f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.22703192f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.27845523f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[12 /* X13 */] <0.1631687f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17598933f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.4811662f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30806905f ? 
                         (data[24 /* X25 */] <-0.12845753f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07108904f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <0.20427495f ? 
             (data[8 /* X9 */] <0.44972506f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26354393f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.17606458f ? 
         (data[1 /* X2 */] <-0.2569412f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2452391f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18341894f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15311578f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12079134f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[5 /* X6 */] <0.09842587f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33376792f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20091012f ? 
                         (data[15 /* X16 */] <0.1085387f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.061588027f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25021768f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30078548f ? 
             (data[18 /* X19 */] <-0.2740462f ? 
                 (data[9 /* X10 */] <0.015736304f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5939819f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28617787f ? 
                         (data[7 /* X8 */] <0.041841093f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17356963f ? 
                                0.0f : 
                                 (data[26 /* X27 */] <0.078461595f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.27734375f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2415625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2108621f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.47188264f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20891605f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.36135235f ? 
             (data[29 /* X30 */] <0.08311141f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.09458882f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14566603f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.796875f ? 
                         (data[31 /* X32 */] <0.15841573f ? 
                             (data[34 /* X35 */] <-0.619048f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09899749f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.01171875f ? 
             (data[12 /* X13 */] <0.124558486f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1211855f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15751924f ? 
                 (data[33 /* X34 */] <0.234375f ? 
                     (data[28 /* X29 */] <0.15829569f ? 
                         (data[10 /* X11 */] <-0.45768437f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.0528676f ? 
         (data[5 /* X6 */] <0.1324312f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.19143568f ? 
                0.0f : 
                1.0f)) : 
         (data[26 /* X27 */] <-0.48654383f ? 
            1.0f : 
             (data[7 /* X8 */] <0.026543582f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.5895546f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16751172f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4407923f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19413295f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.85f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2270536f ? 
                                    0.0f : 
                                     (data[10 /* X11 */] <-0.10204226f ? 
                                         (data[11 /* X12 */] <0.3996322f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)))) : 
                         (data[13 /* X14 */] <0.20158225f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.17047745f ? 
         (data[15 /* X16 */] <0.047191303f ? 
            1.0f : 
             (data[28 /* X29 */] <0.09527036f ? 
                 (data[32 /* X33 */] <-0.37723058f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.022108639f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20764594f ? 
                 (data[15 /* X16 */] <0.062591f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18332036f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.47341725f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[33 /* X34 */] <-0.421875f ? 
                         (data[12 /* X13 */] <0.1366637f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46484375f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15813616f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26387227f ? 
                         (data[13 /* X14 */] <0.12481051f ? 
                             (data[3 /* X4 */] <0.007877951f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34552926f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005314027f ? 
                         (data[24 /* X25 */] <0.14049846f ? 
                            0.0f : 
                            1.0f) : 
                         (data[21 /* X22 */] <0.12491142f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06280385f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.036314853f ? 
            0.0f : 
             (data[28 /* X29 */] <0.10951574f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.28125f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4684211f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22484043f ? 
             (data[7 /* X8 */] <0.11154782f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39817762f ? 
                         (data[2 /* X3 */] <-0.3961619f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.29178956f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.104063116f ? 
             (data[13 /* X14 */] <0.11761316f ? 
                 (data[2 /* X3 */] <-0.21733986f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14358768f ? 
                    1.0f : 
                     (data[27 /* X28 */] <0.18556002f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1344696f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.390548f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3386631f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.26987177f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (data[8 /* X9 */] <-0.5067203f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32701835f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46573254f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22548437f ? 
                         (data[20 /* X21 */] <0.12864691f ? 
                             (data[8 /* X9 */] <-0.1763139f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.106538385f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19352457f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.68404233f ? 
                                 (data[34 /* X35 */] <-0.440908f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2235296f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36237127f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
         (data[15 /* X16 */] <0.10648013f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23996812f ? 
                 (data[25 /* X26 */] <-0.1649534f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16010766f ? 
                         (data[34 /* X35 */] <-0.90838045f ? 
                            0.0f : 
                            1.0f) : 
                         (data[21 /* X22 */] <0.21193077f ? 
                             (data[33 /* X34 */] <0.1f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[3 /* X4 */] <-0.540345f ? 
                         (data[30 /* X31 */] <0.24850763f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21537282f ? 
                            0.0f : 
                             (data[26 /* X27 */] <0.2789515f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.30859375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[30 /* X31 */] <0.15037943f ? 
            1.0f : 
             (data[4 /* X5 */] <0.09784897f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.12864691f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.189646f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29994604f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41173118f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7975234f ? 
                 (data[0 /* X1 */] <-0.14123742f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16692193f ? 
                         (data[30 /* X31 */] <0.15659215f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.09911229f ? 
                         (data[33 /* X34 */] <-0.6875f ? 
                            1.0f : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.4361128f ? 
                             (data[21 /* X22 */] <0.153615f ? 
                                 (data[20 /* X21 */] <0.12312866f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (data[2 /* X3 */] <0.038120233f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.095703125f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19142668f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.273303f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10921625f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18200377f ? 
             (data[18 /* X19 */] <-0.021350205f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42326683f ? 
             (data[19 /* X20 */] <-0.3285067f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18593135f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2872911f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35641322f ? 
                             (data[4 /* X5 */] <0.1409265f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3057444f ? 
                                     (data[8 /* X9 */] <-0.17116283f ? 
                                        0.0f : 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20096429f ? 
                                            1.0f : 
                                             (data[14 /* X15 */] <0.15007858f ? 
                                                0.0f : 
                                                1.0f))) : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3895629f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8036146f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.112996936f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X7 */] <0.14115065f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.2259729f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19167934f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22493659f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45750433f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.546875f ? 
                 (data[28 /* X29 */] <0.07212161f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.14350837f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24819523f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.48082265f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08740504f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.094746366f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20924051f ? 
             (data[35 /* X36 */] <-0.12109375f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0078125f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.21489815f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22037931f ? 
                 (data[19 /* X20 */] <-0.24925852f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.250784f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.047443803f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-0.30229715f ? 
             (data[17 /* X18 */] <-0.3046964f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22485177f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2989806f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.585379f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35122728f ? 
                 (data[8 /* X9 */] <-0.105730504f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14994027f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.26704374f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[2 /* X3 */] <-0.38498554f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17238528f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.14950967f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.06760567f ? 
                 (data[6 /* X7 */] <0.1341665f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34768215f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18482545f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21769696f ? 
             (data[27 /* X28 */] <-0.4205575f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.033920642f ? 
                     (data[10 /* X11 */] <-0.4426638f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.734375f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25145707f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[18 /* X19 */] <-0.16848965f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27395302f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3720703f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31574813f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.095207185f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11946525f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (data[17 /* X18 */] <-0.56357807f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5800023f ? 
                     (data[32 /* X33 */] <0.25f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0055080317f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.84375f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44972506f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30692992f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49327567f ? 
                 (data[10 /* X11 */] <-0.634724f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20213607f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.47417355f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375313f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2514839f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.31213635f ? 
                                    0.0f : 
                                     (data[10 /* X11 */] <-0.026688678f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[8 /* X9 */] <-0.13850774f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[10 /* X11 */] <0.70906603f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42578125f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.640625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (data[4 /* X5 */] <0.10074482f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011513922f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19964828f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16051406f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.047521655f ? 
                         (data[27 /* X28 */] <-0.36190096f ? 
                             (data[21 /* X22 */] <0.15710452f ? 
                                1.0f : 
                                0.0f) : 
                             (data[33 /* X34 */] <-0.7f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[25 /* X26 */] <-0.10727392f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.12242159f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.011935159f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20216066f ? 
                                        0.0f : 
                                         (data[28 /* X29 */] <0.22094643f ? 
                                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27024308f ? 
                                                1.0f : 
                                                0.0f) : 
                                             (data[4 /* X5 */] <0.2455719f ? 
                                                 (data[12 /* X13 */] <0.23012336f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f))) : 
                                    1.0f)))) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1830299f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5735578f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3265852f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33235067f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17619684f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21818f ? 
                                     (data[34 /* X35 */] <-0.921818f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5488281f ? 
         (data[11 /* X12 */] <-0.731376f ? 
            1.0f : 
             (data[28 /* X29 */] <0.07212161f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.56514734f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5504905f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.2300518f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.36804324f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[26 /* X27 */] <-0.11585857f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21507096f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29094756f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (data[33 /* X34 */] <-0.5292969f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845026f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.18759987f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.37912488f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.32084826f ? 
                     (data[23 /* X24 */] <0.04391308f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.4067131f ? 
                             (data[15 /* X16 */] <0.11600813f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.13815744f ? 
                     (data[8 /* X9 */] <0.2304609f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12550375f ? 
                            0.0f : 
                            1.0f) : 
                         (data[25 /* X26 */] <-0.22463416f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.15716778f ? 
                                 (data[28 /* X29 */] <0.40332675f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.671875f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18457556f ? 
                             (data[24 /* X25 */] <-0.2976362f ? 
                                0.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19996955f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.075351566f ? 
                                        0.0f : 
                                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08248408f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3120564f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13787222f ? 
         (data[19 /* X20 */] <-0.43486613f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.042815533f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-1.0920644f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23691471f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3394549f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.40069187f ? 
                             (data[19 /* X20 */] <-0.2590019f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.042147625f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.3545689f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20782438f ? 
                 (data[6 /* X7 */] <0.09625251f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.110812314f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.13057868f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.184703f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[2 /* X3 */] <-0.21733986f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26561052f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[15 /* X16 */] <0.13573955f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19933492f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.07780942f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.09694767f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.56132376f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.053135924f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3961629f ? 
                 (data[4 /* X5 */] <0.1680745f ? 
                     (data[8 /* X9 */] <-0.1817554f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30938306f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.1603545f ? 
                                 (data[30 /* X31 */] <0.23557743f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18328786f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.33203125f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.031284597f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.026998531f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045645256f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03445419f ? 
             (data[4 /* X5 */] <0.07112707f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[10 /* X11 */] <0.0145862885f ? 
                 (data[1 /* X2 */] <-0.3746699f ? 
                     (data[35 /* X36 */] <-0.4671875f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.08997958f ? 
                         (data[26 /* X27 */] <-0.10205557f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.9215057f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.18527216f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.6113962f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27796736f ? 
                                 (data[17 /* X18 */] <0.3010867f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17356093f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.546875f ? 
                     (data[30 /* X31 */] <0.073732525f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1967807f ? 
                             (data[18 /* X19 */] <0.20383713f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1387656f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.02213575f ? 
                                        0.0f : 
                                         (data[1 /* X2 */] <-0.27080947f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19333167f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.05543772f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54733646f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28560278f ? 
         (data[19 /* X20 */] <-0.6767817f ? 
             (data[25 /* X26 */] <-0.08271834f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5270411f ? 
                     (data[6 /* X7 */] <0.19602618f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.08198345f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.49136472f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5083215f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32701835f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11187002f ? 
                 (data[33 /* X34 */] <-0.28125f ? 
                     (data[28 /* X29 */] <0.07924431f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12502566f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.045270722f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14137231f ? 
                        1.0f : 
                         (data[18 /* X19 */] <-0.0011663606f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36230987f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26376873f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.38314077f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.4659125f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.194854f ? 
         (data[3 /* X4 */] <-0.648135f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11939187f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-1.1598185f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1180299f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.19227138f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18405333f ? 
                             (data[0 /* X1 */] <0.0647939f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <-0.62117326f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.08877048f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29114437f ? 
                 (data[23 /* X24 */] <0.17353532f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27075458f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.057749085f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.08349878f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4304415f ? 
                     (data[8 /* X9 */] <0.26070422f ? 
                         (data[9 /* X10 */] <-0.18524978f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (data[9 /* X10 */] <0.10979709f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0640638f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15669852f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.1644861f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.085567914f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17835224f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41330433f ? 
             (data[33 /* X34 */] <-0.84375f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17203262f ? 
                     (data[9 /* X10 */] <-0.25559744f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13559386f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6402217f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.6318623f ? 
                         (data[25 /* X26 */] <-0.6889559f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X9 */] <-0.10221575f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31974554f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5390625f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[31 /* X32 */] <0.055564824f ? 
                                 (data[0 /* X1 */] <0.12841924f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
             (data[28 /* X29 */] <0.15403256f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18120502f ? 
             (data[2 /* X3 */] <-0.3961619f ? 
                 (data[10 /* X11 */] <-0.5556776f ? 
                     (data[11 /* X12 */] <-0.14361693f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17203262f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11323351f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08380469f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24490766f ? 
                                 (data[26 /* X27 */] <-0.29222366f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.40428472f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2401372f ? 
                         (data[4 /* X5 */] <0.107579686f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.08720129f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.108415656f ? 
                                     (data[33 /* X34 */] <-0.05f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.044865873f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32332867f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16359752f ? 
                         (data[9 /* X10 */] <-0.3426868f ? 
                             (data[14 /* X15 */] <0.11889342f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.23204073f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.107498504f ? 
                                1.0f : 
                                0.0f) : 
                             (data[34 /* X35 */] <-0.36477125f ? 
                                 (data[7 /* X8 */] <0.21888153f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10726626f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.105178505f ? 
                 (data[12 /* X13 */] <0.15272123f ? 
                     (data[2 /* X3 */] <-0.2540945f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.34879845f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.33246014f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48861876f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23097241f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.187393f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.017588822f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31264853f ? 
             (data[17 /* X18 */] <-0.39206898f ? 
                 (data[35 /* X36 */] <-0.125f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26271036f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16283742f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32077104f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.280055f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2300857f ? 
                         (data[33 /* X34 */] <-0.7115391f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.097643584f ? 
                                1.0f : 
                                 (data[31 /* X32 */] <0.08299769f ? 
                                    0.0f : 
                                     (data[4 /* X5 */] <0.18287975f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3933047f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28438073f ? 
                             (data[8 /* X9 */] <-0.09459059f ? 
                                 (data[11 /* X12 */] <-0.42402157f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.29040223f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5377306f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.059148975f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43894953f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19920276f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.25040162f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2649375f ? 
                     (data[27 /* X28 */] <-0.16637918f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.81676096f ? 
                             (data[18 /* X19 */] <0.21089275f ? 
                                1.0f : 
                                0.0f) : 
                             (data[26 /* X27 */] <-0.078653134f ? 
                                 (data[16 /* X17 */] <-0.16393311f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (data[26 /* X27 */] <0.1722913f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29011163f ? 
                 (data[25 /* X26 */] <-0.10113502f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20533435f ? 
                         (data[3 /* X4 */] <-0.540345f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.056485374f ? 
                                 (data[15 /* X16 */] <0.097717315f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21759923f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.25f ? 
                             (data[11 /* X12 */] <-0.184703f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37969303f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15212576f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123157196f ? 
        0.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34489906f ? 
             (data[6 /* X7 */] <0.105232134f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17384277f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010383606f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28490648f ? 
             (data[10 /* X11 */] <-0.90009433f ? 
                 (data[0 /* X1 */] <0.12841924f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.031335533f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31073177f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.22839342f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19656834f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5990515f ? 
             (data[22 /* X23 */] <0.10879016f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.063911766f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01777036f ? 
         (data[12 /* X13 */] <0.16226023f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19103749f ? 
                 (data[35 /* X36 */] <-0.046875f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.38817093f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.18658398f ? 
                     (data[33 /* X34 */] <0.1706739f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105204225f ? 
                 (data[7 /* X8 */] <0.032922495f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.09365389f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.1875f ? 
                             (data[22 /* X23 */] <0.19201177f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[24 /* X25 */] <-0.18479598f ? 
                     (data[27 /* X28 */] <-0.6160793f ? 
                        0.0f : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.22188026f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1789197f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23923436f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34613678f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22582276f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.3f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[4 /* X5 */] <0.24639992f ? 
                                0.0f : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0276214f ? 
         (data[12 /* X13 */] <0.14454496f ? 
             (data[11 /* X12 */] <-0.3779164f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.119423844f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.292966f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20579168f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49999687f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[23 /* X24 */] <0.17189914f ? 
                         (data[29 /* X30 */] <0.21418148f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15772974f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}



