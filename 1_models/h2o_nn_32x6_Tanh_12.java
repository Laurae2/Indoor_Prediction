/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:22.720+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_12 > h2o_nn_32x6_Tanh_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_12", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4282532275017179168L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.028680666149693897;
      sa[1] = 0.010622781958476903;
      sa[2] = -0.06046645522630872;
      sa[3] = -0.04058627538798689;
      sa[4] = -0.032447943672602585;
      sa[5] = 0.029554483683346486;
      sa[6] = 0.09719308676426303;
      sa[7] = -8.141575153556206E-4;
      sa[8] = -6.836844213765625E-4;
      sa[9] = -0.018380024819013907;
      sa[10] = -0.013870711598867737;
      sa[11] = 0.013135788514990638;
      sa[12] = -0.0030176905251243684;
      sa[13] = -0.004420444260730289;
      sa[14] = -0.006955637429763398;
      sa[15] = 0.004614539213951361;
      sa[16] = 0.02140473879583236;
      sa[17] = -0.027102003160327653;
      sa[18] = -0.07392226514209878;
      sa[19] = 0.03410495124312764;
      sa[20] = 0.0757475811900256;
      sa[21] = 0.007365135130658083;
      sa[22] = -0.05026943188843191;
      sa[23] = 0.0332685437809781;
      sa[24] = -0.026586290774033947;
      sa[25] = 0.04256401291514014;
      sa[26] = -0.008703183678934651;
      sa[27] = 0.023555172084583763;
      sa[28] = -0.011942056683911642;
      sa[29] = -8.856215471080339E-4;
      sa[30] = 0.04946994975207873;
      sa[31] = 0.033709033210341556;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.016983143386852296;
      sa[1] = -0.009586621721158069;
      sa[2] = -0.05647120651253392;
      sa[3] = 0.010221265427395251;
      sa[4] = -0.030035526696724484;
    }
  }
}
class h2o_nn_32x6_Tanh_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.053485036f;
      sa[1] = 0.22552706f;
      sa[2] = 0.14337137f;
      sa[3] = 0.18464893f;
      sa[4] = -0.18706664f;
      sa[5] = -0.17374332f;
      sa[6] = -0.04339695f;
      sa[7] = 0.20812826f;
      sa[8] = 0.12655592f;
      sa[9] = -0.17310145f;
      sa[10] = -0.15702774f;
      sa[11] = -0.16535623f;
      sa[12] = 0.076634035f;
      sa[13] = -0.24707808f;
      sa[14] = -0.15807043f;
      sa[15] = -0.026453556f;
      sa[16] = 0.085295394f;
      sa[17] = 0.13373365f;
      sa[18] = -0.2185062f;
      sa[19] = 0.17131583f;
      sa[20] = 0.21414247f;
      sa[21] = -0.3101364f;
      sa[22] = 0.2229792f;
      sa[23] = -0.1986456f;
      sa[24] = 0.25570157f;
      sa[25] = 0.1613548f;
      sa[26] = -0.26127934f;
      sa[27] = 0.24264742f;
      sa[28] = 0.21542445f;
      sa[29] = -0.28389463f;
      sa[30] = -0.17372063f;
      sa[31] = 0.11386205f;
      sa[32] = 0.19783448f;
      sa[33] = -0.24989672f;
      sa[34] = 0.051393475f;
      sa[35] = -0.113924086f;
      sa[36] = 0.08498327f;
      sa[37] = 0.26340565f;
      sa[38] = -0.09063541f;
      sa[39] = 0.12237026f;
      sa[40] = 0.022057397f;
      sa[41] = -0.08209827f;
      sa[42] = -0.14793056f;
      sa[43] = 0.025647864f;
      sa[44] = 0.2192169f;
      sa[45] = -0.2399818f;
      sa[46] = 0.055556167f;
      sa[47] = -0.0027437292f;
      sa[48] = 0.21425743f;
      sa[49] = 0.24057923f;
      sa[50] = 0.17834744f;
      sa[51] = -0.28302655f;
      sa[52] = -0.081852235f;
      sa[53] = 0.20616789f;
      sa[54] = 0.19682412f;
      sa[55] = 0.03968384f;
      sa[56] = -0.16118957f;
      sa[57] = -0.27487203f;
      sa[58] = 0.2504135f;
      sa[59] = -0.17251128f;
      sa[60] = -0.25541818f;
      sa[61] = 0.18308738f;
      sa[62] = 0.11691698f;
      sa[63] = 0.013625232f;
      sa[64] = 0.13396664f;
      sa[65] = 0.1173976f;
      sa[66] = 0.017220706f;
      sa[67] = 0.13500796f;
      sa[68] = -0.11925096f;
      sa[69] = 0.08657569f;
      sa[70] = -0.089180365f;
      sa[71] = 0.32775432f;
      sa[72] = -0.12485419f;
      sa[73] = 0.24288242f;
      sa[74] = -0.18039331f;
      sa[75] = 0.10460829f;
      sa[76] = -0.20050353f;
      sa[77] = -0.06055803f;
      sa[78] = -0.066057764f;
      sa[79] = 0.117044084f;
      sa[80] = -0.19521202f;
      sa[81] = -0.09522256f;
      sa[82] = -0.023361642f;
      sa[83] = 0.13597657f;
      sa[84] = -0.018775685f;
      sa[85] = -0.1587514f;
      sa[86] = 0.14763175f;
      sa[87] = 0.23870935f;
      sa[88] = 0.26480368f;
      sa[89] = 0.08159117f;
      sa[90] = -0.14411567f;
      sa[91] = 0.14857824f;
      sa[92] = 0.09959856f;
      sa[93] = -0.20314653f;
      sa[94] = -0.17315228f;
      sa[95] = -0.2411547f;
      sa[96] = 0.12127822f;
      sa[97] = 0.03871695f;
      sa[98] = 0.1627523f;
      sa[99] = -0.101886496f;
      sa[100] = -0.04806477f;
      sa[101] = -0.17875074f;
      sa[102] = -0.24041978f;
      sa[103] = -0.08304201f;
      sa[104] = -0.034741096f;
      sa[105] = -0.15274109f;
      sa[106] = -0.16506204f;
      sa[107] = 0.1597978f;
      sa[108] = 0.15816467f;
      sa[109] = -0.1807107f;
      sa[110] = -0.14971818f;
      sa[111] = 0.13212512f;
      sa[112] = 0.121316195f;
      sa[113] = 0.035284188f;
      sa[114] = -0.15039021f;
      sa[115] = -0.037240803f;
      sa[116] = -0.22742027f;
      sa[117] = 0.012466226f;
      sa[118] = -0.23723255f;
      sa[119] = -0.16727403f;
      sa[120] = 0.2044545f;
      sa[121] = 0.22043107f;
      sa[122] = 0.28980526f;
      sa[123] = 0.26478067f;
      sa[124] = 0.2886717f;
      sa[125] = 0.30514935f;
      sa[126] = -0.30686215f;
      sa[127] = -0.1857776f;
      sa[128] = 0.07262337f;
      sa[129] = 0.15384479f;
      sa[130] = -0.115333125f;
      sa[131] = 0.3058339f;
      sa[132] = 0.17175306f;
      sa[133] = -0.27523163f;
      sa[134] = 0.019331155f;
      sa[135] = -0.1545735f;
      sa[136] = -0.2537544f;
      sa[137] = -0.015583594f;
      sa[138] = 0.1200525f;
      sa[139] = -0.06804057f;
      sa[140] = -0.1284385f;
      sa[141] = -0.1635382f;
      sa[142] = 0.21487978f;
      sa[143] = -0.15580101f;
      sa[144] = 0.23880365f;
      sa[145] = -0.11783485f;
      sa[146] = -0.23218845f;
      sa[147] = 0.17908813f;
      sa[148] = 0.1559553f;
      sa[149] = 0.18700065f;
      sa[150] = 0.27544305f;
      sa[151] = -0.23559849f;
      sa[152] = 0.009870583f;
      sa[153] = 0.27416888f;
      sa[154] = 0.24623221f;
      sa[155] = -0.16468175f;
      sa[156] = 0.12294285f;
      sa[157] = -0.1733678f;
      sa[158] = 0.08413707f;
      sa[159] = 0.09389203f;
      sa[160] = 0.10538804f;
      sa[161] = 0.22455946f;
      sa[162] = -0.18563375f;
      sa[163] = -0.04491633f;
      sa[164] = 0.21912473f;
      sa[165] = -0.039195817f;
      sa[166] = -0.07276931f;
      sa[167] = -0.07993077f;
      sa[168] = 0.20220181f;
      sa[169] = 0.3145101f;
      sa[170] = 0.0013235395f;
      sa[171] = -0.023143299f;
      sa[172] = -0.059941407f;
      sa[173] = -0.14119382f;
      sa[174] = -0.011093283f;
      sa[175] = -0.22610089f;
      sa[176] = -0.02472921f;
      sa[177] = -0.0035537414f;
      sa[178] = -0.0679663f;
      sa[179] = 0.06312255f;
      sa[180] = -0.05745623f;
      sa[181] = -0.28002548f;
      sa[182] = -0.07526361f;
      sa[183] = 0.02374957f;
      sa[184] = 0.29077268f;
      sa[185] = 0.16664997f;
      sa[186] = -0.2859112f;
      sa[187] = 0.09739098f;
      sa[188] = -0.041956253f;
      sa[189] = 0.22720918f;
      sa[190] = 0.08916075f;
      sa[191] = -0.07341977f;
      sa[192] = -0.12237326f;
      sa[193] = 0.21259691f;
      sa[194] = 0.0705892f;
      sa[195] = 0.26494116f;
      sa[196] = 0.24657802f;
      sa[197] = -0.01603897f;
      sa[198] = 0.11429207f;
      sa[199] = -0.06160864f;
      sa[200] = 0.025790868f;
      sa[201] = -0.25325602f;
      sa[202] = 0.1293047f;
      sa[203] = 8.450501E-4f;
      sa[204] = -0.14622848f;
      sa[205] = 0.25487226f;
      sa[206] = 0.22740479f;
      sa[207] = 0.18226771f;
      sa[208] = -0.24433888f;
      sa[209] = -0.062267087f;
      sa[210] = -0.26412612f;
      sa[211] = -0.21937838f;
      sa[212] = 0.23495646f;
      sa[213] = -0.23500283f;
      sa[214] = -0.104569286f;
      sa[215] = 0.05166847f;
      sa[216] = 0.08443558f;
      sa[217] = 0.11902738f;
      sa[218] = -0.1857742f;
      sa[219] = 0.19571699f;
      sa[220] = -0.18628709f;
      sa[221] = 0.039786495f;
      sa[222] = 0.22777513f;
      sa[223] = 0.08249452f;
      sa[224] = 0.08697395f;
      sa[225] = 0.26698586f;
      sa[226] = -0.22586691f;
      sa[227] = 0.2516145f;
      sa[228] = 0.12377515f;
      sa[229] = 0.07564721f;
      sa[230] = 0.2511956f;
      sa[231] = -0.23667179f;
      sa[232] = -0.28382152f;
      sa[233] = 0.05179576f;
      sa[234] = 0.19491878f;
      sa[235] = -0.3099102f;
      sa[236] = -0.020713057f;
      sa[237] = -0.1942354f;
      sa[238] = -0.18843807f;
      sa[239] = 0.15688312f;
      sa[240] = 0.0017739071f;
      sa[241] = -0.22095954f;
      sa[242] = -0.015494145f;
      sa[243] = -0.21727963f;
      sa[244] = -0.18893956f;
      sa[245] = -0.10755189f;
      sa[246] = -0.25419733f;
      sa[247] = -0.036846884f;
      sa[248] = 0.26622933f;
      sa[249] = 0.25247908f;
      sa[250] = -0.21471915f;
      sa[251] = -0.10647221f;
      sa[252] = -0.26237798f;
      sa[253] = -0.2711417f;
      sa[254] = -0.25465783f;
      sa[255] = 0.21779464f;
      sa[256] = -0.16979559f;
      sa[257] = 0.2583195f;
      sa[258] = -0.23363222f;
      sa[259] = -0.11802819f;
      sa[260] = -0.19199502f;
      sa[261] = -0.10295289f;
      sa[262] = -0.16451202f;
      sa[263] = 0.274958f;
      sa[264] = -0.1479792f;
      sa[265] = 0.05317121f;
      sa[266] = -0.2604263f;
      sa[267] = -0.22416206f;
      sa[268] = 0.10745823f;
      sa[269] = -0.16882133f;
      sa[270] = 0.009509836f;
      sa[271] = 0.15025601f;
      sa[272] = -0.08864012f;
      sa[273] = -0.1178219f;
      sa[274] = 0.116042905f;
      sa[275] = -0.016045386f;
      sa[276] = 0.06399379f;
      sa[277] = -0.24144581f;
      sa[278] = -0.10966528f;
      sa[279] = 0.1559589f;
      sa[280] = -0.16983569f;
      sa[281] = 0.26335314f;
      sa[282] = -0.09973499f;
      sa[283] = -0.048327707f;
      sa[284] = 0.050808724f;
      sa[285] = -0.118218444f;
      sa[286] = 0.23596005f;
      sa[287] = 0.113305174f;
      sa[288] = -0.19267687f;
      sa[289] = -0.14487046f;
      sa[290] = -0.044428486f;
      sa[291] = -0.056978937f;
      sa[292] = 0.1330757f;
      sa[293] = -0.0908982f;
      sa[294] = 0.074974045f;
      sa[295] = 0.1312555f;
      sa[296] = 0.20704916f;
      sa[297] = 0.22228572f;
      sa[298] = 0.01031591f;
      sa[299] = -0.07183278f;
      sa[300] = -0.00897761f;
      sa[301] = -0.06608558f;
      sa[302] = 0.14621176f;
      sa[303] = 0.03519675f;
      sa[304] = -0.18405971f;
      sa[305] = -0.009429099f;
      sa[306] = 0.17927226f;
      sa[307] = -0.13477986f;
      sa[308] = 0.085370235f;
      sa[309] = 0.15193668f;
      sa[310] = 0.27704647f;
      sa[311] = 0.3031847f;
      sa[312] = -0.17692843f;
      sa[313] = -0.13475828f;
      sa[314] = -0.15823382f;
      sa[315] = 0.015664514f;
      sa[316] = -0.018920748f;
      sa[317] = -0.07819493f;
      sa[318] = 0.08817265f;
      sa[319] = 0.2841663f;
      sa[320] = -0.087027006f;
      sa[321] = 0.108051226f;
      sa[322] = 0.24086499f;
      sa[323] = -0.12694597f;
      sa[324] = 2.811973E-4f;
      sa[325] = 0.2769151f;
      sa[326] = -0.2803918f;
      sa[327] = 0.03044988f;
      sa[328] = -0.0768185f;
      sa[329] = 0.22727299f;
      sa[330] = -0.18584771f;
      sa[331] = -0.029225225f;
      sa[332] = -0.24620152f;
      sa[333] = 0.11280286f;
      sa[334] = -0.08984632f;
      sa[335] = 0.24335767f;
      sa[336] = -0.15753075f;
      sa[337] = -0.15006682f;
      sa[338] = 0.25491035f;
      sa[339] = -0.2215536f;
      sa[340] = -0.29952946f;
      sa[341] = -0.25360665f;
      sa[342] = 0.15504837f;
      sa[343] = -0.07652396f;
      sa[344] = -0.17734338f;
      sa[345] = 0.16970815f;
      sa[346] = 0.18064228f;
      sa[347] = -0.1908064f;
      sa[348] = 0.26396406f;
      sa[349] = -0.2790162f;
      sa[350] = -0.23580319f;
      sa[351] = 0.083216675f;
      sa[352] = 0.17721811f;
      sa[353] = -0.049749732f;
      sa[354] = 0.07649039f;
      sa[355] = 0.07989029f;
      sa[356] = -0.12728074f;
      sa[357] = 0.21577777f;
      sa[358] = -0.2844493f;
      sa[359] = 0.018344529f;
      sa[360] = 0.102532685f;
      sa[361] = -0.030137902f;
      sa[362] = -0.17672205f;
      sa[363] = 0.18024728f;
      sa[364] = -0.12115656f;
      sa[365] = -0.20735508f;
      sa[366] = -0.004406809f;
      sa[367] = -0.2941818f;
      sa[368] = -0.15566732f;
      sa[369] = 0.26089945f;
      sa[370] = -0.20353433f;
      sa[371] = 0.1188248f;
      sa[372] = -0.013088109f;
      sa[373] = 0.27757278f;
      sa[374] = -0.13005726f;
      sa[375] = -0.28677198f;
      sa[376] = -0.2854107f;
      sa[377] = -0.20356767f;
      sa[378] = 0.28104994f;
      sa[379] = 0.09098823f;
      sa[380] = -0.10731545f;
      sa[381] = -0.09067884f;
      sa[382] = -0.035382755f;
      sa[383] = -0.117984325f;
      sa[384] = -0.15452008f;
      sa[385] = 0.07909793f;
      sa[386] = -0.24490346f;
      sa[387] = -0.1910097f;
      sa[388] = 0.08325644f;
      sa[389] = -0.004986843f;
      sa[390] = -0.0021755246f;
      sa[391] = -0.10631958f;
      sa[392] = 0.18922102f;
      sa[393] = 0.1095311f;
      sa[394] = 0.034131397f;
      sa[395] = 0.35842973f;
      sa[396] = 0.2802471f;
      sa[397] = -0.26753855f;
      sa[398] = 0.116046004f;
      sa[399] = 0.045154143f;
      sa[400] = 0.18190747f;
      sa[401] = 0.24045081f;
      sa[402] = -0.12502396f;
      sa[403] = 0.076560326f;
      sa[404] = 0.22304687f;
      sa[405] = -0.22549719f;
      sa[406] = -0.05055454f;
      sa[407] = 0.13288131f;
      sa[408] = -0.20629205f;
      sa[409] = -0.23620392f;
      sa[410] = -0.114922084f;
      sa[411] = 0.15932727f;
      sa[412] = -0.14767632f;
      sa[413] = 0.09487835f;
      sa[414] = 0.14614984f;
      sa[415] = 0.2766186f;
      sa[416] = -0.16575812f;
      sa[417] = 0.038140845f;
      sa[418] = 1.8218507E-4f;
      sa[419] = 0.27877957f;
      sa[420] = 0.20475301f;
      sa[421] = 0.25637537f;
      sa[422] = 0.24140795f;
      sa[423] = -0.011647484f;
      sa[424] = 0.10879434f;
      sa[425] = -0.05225368f;
      sa[426] = -0.26740542f;
      sa[427] = 0.19895835f;
      sa[428] = -0.058926575f;
      sa[429] = -0.18904938f;
      sa[430] = 0.17574331f;
      sa[431] = -3.2786553E-4f;
      sa[432] = -0.030983519f;
      sa[433] = 0.12933496f;
      sa[434] = 0.20537388f;
      sa[435] = 0.07203231f;
      sa[436] = -0.2612919f;
      sa[437] = -0.2422162f;
      sa[438] = -8.324162E-4f;
      sa[439] = -0.03010616f;
      sa[440] = 0.30854014f;
      sa[441] = -0.29768527f;
      sa[442] = 0.060952928f;
      sa[443] = 0.06758107f;
      sa[444] = -0.21051957f;
      sa[445] = 0.061367836f;
      sa[446] = 0.21918046f;
      sa[447] = 0.055156484f;
      sa[448] = 0.17577542f;
      sa[449] = 0.22656313f;
      sa[450] = -0.08225511f;
      sa[451] = 0.08339979f;
      sa[452] = 0.16803876f;
      sa[453] = -0.055833906f;
      sa[454] = -0.1569792f;
      sa[455] = -0.06936307f;
      sa[456] = -0.076785505f;
      sa[457] = 0.0604387f;
      sa[458] = -0.20384254f;
      sa[459] = 0.23615363f;
      sa[460] = 0.20692866f;
      sa[461] = 0.26125205f;
      sa[462] = 0.04589008f;
      sa[463] = 0.1881124f;
      sa[464] = -0.26996782f;
      sa[465] = 0.19986203f;
      sa[466] = 0.0068682297f;
      sa[467] = 0.12712748f;
      sa[468] = 0.115640245f;
      sa[469] = 0.28918582f;
      sa[470] = 0.16402979f;
      sa[471] = 0.058954943f;
      sa[472] = 0.0023387652f;
      sa[473] = -0.102857485f;
      sa[474] = -0.014497732f;
      sa[475] = 0.0753296f;
      sa[476] = 0.25768873f;
      sa[477] = -0.17340225f;
      sa[478] = 0.09051096f;
      sa[479] = -0.1313026f;
      sa[480] = -0.28795332f;
      sa[481] = -0.19432311f;
      sa[482] = -0.24317093f;
      sa[483] = 0.18717654f;
      sa[484] = 0.21242978f;
      sa[485] = 0.11554589f;
      sa[486] = -0.025856946f;
      sa[487] = -0.17216083f;
      sa[488] = -0.19296356f;
      sa[489] = 0.06250687f;
      sa[490] = -0.01180218f;
      sa[491] = -0.2532919f;
      sa[492] = 0.20120622f;
      sa[493] = 0.23448128f;
      sa[494] = -0.2203901f;
      sa[495] = 0.1405927f;
      sa[496] = -0.006887435f;
      sa[497] = 0.05385625f;
      sa[498] = 0.16253373f;
      sa[499] = 0.1475548f;
      sa[500] = -0.07670106f;
      sa[501] = 0.02557944f;
      sa[502] = 0.24735454f;
      sa[503] = 0.0653633f;
      sa[504] = -0.18101276f;
      sa[505] = -0.22000985f;
      sa[506] = 0.17768572f;
      sa[507] = -0.080170974f;
      sa[508] = 0.08497503f;
      sa[509] = 0.19836771f;
      sa[510] = 0.15392599f;
      sa[511] = 0.0058836406f;
      sa[512] = 0.050725244f;
      sa[513] = -0.085386015f;
      sa[514] = 0.2499037f;
      sa[515] = -0.23377018f;
      sa[516] = 0.009294732f;
      sa[517] = 0.07050718f;
      sa[518] = 0.12114349f;
      sa[519] = -0.09672208f;
      sa[520] = 0.19729777f;
      sa[521] = 0.13070582f;
      sa[522] = 0.09547557f;
      sa[523] = 0.19767913f;
      sa[524] = 0.17259818f;
      sa[525] = 0.15436073f;
      sa[526] = -0.0090196105f;
      sa[527] = -0.09842772f;
      sa[528] = -0.01772081f;
      sa[529] = 0.11652359f;
      sa[530] = -0.17249951f;
      sa[531] = 0.09302242f;
      sa[532] = 0.12129994f;
      sa[533] = 0.10590215f;
      sa[534] = 0.11024622f;
      sa[535] = -0.09534972f;
      sa[536] = 0.074268304f;
      sa[537] = -0.20018364f;
      sa[538] = 0.2337918f;
      sa[539] = 0.30944625f;
      sa[540] = -0.23573995f;
      sa[541] = -0.15208992f;
      sa[542] = -0.081802025f;
      sa[543] = -0.20638101f;
      sa[544] = 0.13466431f;
      sa[545] = 0.10692014f;
      sa[546] = 0.080884494f;
      sa[547] = 0.16552462f;
      sa[548] = 0.07122487f;
      sa[549] = 0.15092047f;
      sa[550] = -0.033038195f;
      sa[551] = -0.09448352f;
      sa[552] = 0.04588572f;
      sa[553] = -0.04555124f;
      sa[554] = -0.13252833f;
      sa[555] = -0.14232354f;
      sa[556] = -0.16866173f;
      sa[557] = -0.21859439f;
      sa[558] = -0.19037545f;
      sa[559] = 0.10997826f;
      sa[560] = -0.29733002f;
      sa[561] = -0.1040651f;
      sa[562] = 0.17967853f;
      sa[563] = -0.094698526f;
      sa[564] = 0.24754024f;
      sa[565] = 0.021859119f;
      sa[566] = 0.26463935f;
      sa[567] = -0.010010235f;
      sa[568] = -0.08004238f;
      sa[569] = 0.011070456f;
      sa[570] = -0.02705912f;
      sa[571] = -0.08089842f;
      sa[572] = -0.094058715f;
      sa[573] = 0.15744938f;
      sa[574] = 0.19686815f;
      sa[575] = -0.2553428f;
      sa[576] = -0.08674027f;
      sa[577] = 0.033522002f;
      sa[578] = 0.11490394f;
      sa[579] = -0.07999593f;
      sa[580] = 0.10293605f;
      sa[581] = -0.11866469f;
      sa[582] = 0.0980946f;
      sa[583] = 0.033716593f;
      sa[584] = 0.12268423f;
      sa[585] = 0.18589091f;
      sa[586] = -0.20152603f;
      sa[587] = -0.12972255f;
      sa[588] = 0.085804954f;
      sa[589] = 0.13417195f;
      sa[590] = -0.008936012f;
      sa[591] = 0.046906106f;
      sa[592] = -0.29535577f;
      sa[593] = -0.1700102f;
      sa[594] = -0.07488145f;
      sa[595] = -0.0048423037f;
      sa[596] = 0.265712f;
      sa[597] = -0.008699744f;
      sa[598] = 0.22173753f;
      sa[599] = 0.05599134f;
      sa[600] = -0.2713354f;
      sa[601] = 0.22294594f;
      sa[602] = -0.051762763f;
      sa[603] = 0.2819902f;
      sa[604] = 0.2364176f;
      sa[605] = 0.18297252f;
      sa[606] = 0.21606578f;
      sa[607] = 0.0791612f;
      sa[608] = -0.004873998f;
      sa[609] = 0.08683005f;
      sa[610] = 0.06760867f;
      sa[611] = -0.100660525f;
      sa[612] = -0.08390449f;
      sa[613] = 0.085495055f;
      sa[614] = 0.03279487f;
      sa[615] = 0.02355028f;
      sa[616] = 0.029968217f;
      sa[617] = -0.30404133f;
      sa[618] = -0.16898286f;
      sa[619] = -0.19046646f;
      sa[620] = -0.03791469f;
      sa[621] = -0.21958584f;
      sa[622] = -0.30624232f;
      sa[623] = -0.27722618f;
      sa[624] = -0.06434765f;
      sa[625] = 0.21848494f;
      sa[626] = -0.022609644f;
      sa[627] = 0.22406508f;
      sa[628] = -0.27803978f;
      sa[629] = -0.054741297f;
      sa[630] = -0.13332596f;
      sa[631] = 0.20451163f;
      sa[632] = 0.08197023f;
      sa[633] = -0.17187667f;
      sa[634] = -0.21944447f;
      sa[635] = 0.13703726f;
      sa[636] = -0.20781048f;
      sa[637] = -0.061903786f;
      sa[638] = -0.1021896f;
      sa[639] = -0.092951514f;
      sa[640] = -0.1515388f;
      sa[641] = -0.30072752f;
      sa[642] = 0.16153581f;
      sa[643] = -0.33614746f;
      sa[644] = -0.07568366f;
      sa[645] = -0.24901806f;
      sa[646] = 0.31885967f;
      sa[647] = -0.21643521f;
      sa[648] = -0.035024066f;
      sa[649] = -0.014823564f;
      sa[650] = 0.057831388f;
      sa[651] = -0.069439724f;
      sa[652] = 0.059664704f;
      sa[653] = -0.15935792f;
      sa[654] = -0.16240984f;
      sa[655] = -0.17233211f;
      sa[656] = 0.09044327f;
      sa[657] = 0.1449217f;
      sa[658] = -0.24751246f;
      sa[659] = -0.2078507f;
      sa[660] = -0.24622841f;
      sa[661] = -0.112256974f;
      sa[662] = -0.27929324f;
      sa[663] = 0.14549951f;
      sa[664] = -0.1446664f;
      sa[665] = 0.2942401f;
      sa[666] = -0.0377659f;
      sa[667] = -0.2375747f;
      sa[668] = 0.24610566f;
      sa[669] = -0.13643737f;
      sa[670] = 0.115969785f;
      sa[671] = 0.033389837f;
      sa[672] = -0.26420477f;
      sa[673] = 0.157042f;
      sa[674] = 0.21050102f;
      sa[675] = -0.2600068f;
      sa[676] = -0.10403491f;
      sa[677] = -0.20901212f;
      sa[678] = 0.17811869f;
      sa[679] = -0.08662196f;
      sa[680] = 0.061246105f;
      sa[681] = 0.09090479f;
      sa[682] = 0.06404582f;
      sa[683] = -0.10955119f;
      sa[684] = -0.04002317f;
      sa[685] = 0.014948538f;
      sa[686] = -0.15169461f;
      sa[687] = -0.21692999f;
      sa[688] = -0.26836622f;
      sa[689] = -0.23366322f;
      sa[690] = -0.027959626f;
      sa[691] = 0.10589118f;
      sa[692] = -0.16164605f;
      sa[693] = -0.17326957f;
      sa[694] = 0.27564815f;
      sa[695] = -0.035432067f;
      sa[696] = -0.0848441f;
      sa[697] = -0.14029709f;
      sa[698] = -0.1705097f;
      sa[699] = 0.29455352f;
      sa[700] = 0.14888388f;
      sa[701] = 0.102131054f;
      sa[702] = 0.19927694f;
      sa[703] = -0.0573333f;
      sa[704] = -0.25783712f;
      sa[705] = -0.034737024f;
      sa[706] = -0.13216257f;
      sa[707] = 0.020308096f;
      sa[708] = -0.006158182f;
      sa[709] = -0.264968f;
      sa[710] = 0.2694338f;
      sa[711] = -0.09432624f;
      sa[712] = 0.037263215f;
      sa[713] = 0.13935483f;
      sa[714] = 0.18104999f;
      sa[715] = 0.09417272f;
      sa[716] = 0.059107825f;
      sa[717] = 0.1826704f;
      sa[718] = -0.06598563f;
      sa[719] = 0.076883145f;
      sa[720] = -0.2457189f;
      sa[721] = 0.20543502f;
      sa[722] = -0.14273329f;
      sa[723] = 0.012080641f;
      sa[724] = 0.0702423f;
      sa[725] = -0.28077248f;
      sa[726] = -0.19826904f;
      sa[727] = -0.26917753f;
      sa[728] = -0.12799099f;
      sa[729] = -0.028478872f;
      sa[730] = 0.07314924f;
      sa[731] = -0.27365592f;
      sa[732] = 0.16999328f;
      sa[733] = 0.20684466f;
      sa[734] = -0.13504954f;
      sa[735] = 0.28223285f;
      sa[736] = -0.031079892f;
      sa[737] = 0.16093494f;
      sa[738] = -0.14270984f;
      sa[739] = -0.3142937f;
      sa[740] = -0.26566768f;
      sa[741] = -0.27474937f;
      sa[742] = 0.097613886f;
      sa[743] = 0.03969273f;
      sa[744] = 0.04107486f;
      sa[745] = -0.2485197f;
      sa[746] = 0.1528363f;
      sa[747] = -0.19258489f;
      sa[748] = -0.14822572f;
      sa[749] = -0.17600827f;
      sa[750] = 0.18296123f;
      sa[751] = 0.2394207f;
      sa[752] = -0.034327142f;
      sa[753] = 0.191662f;
      sa[754] = 0.0028340814f;
      sa[755] = 0.16207592f;
      sa[756] = -0.19843927f;
      sa[757] = 0.23400135f;
      sa[758] = -0.12633564f;
      sa[759] = -0.16267982f;
      sa[760] = -0.08449919f;
      sa[761] = 0.038762044f;
      sa[762] = -0.10021513f;
      sa[763] = 0.16911669f;
      sa[764] = 0.04988339f;
      sa[765] = -0.04501042f;
      sa[766] = -0.18741794f;
      sa[767] = 0.09748232f;
      sa[768] = -0.17199056f;
      sa[769] = -0.2805756f;
      sa[770] = -0.015611061f;
      sa[771] = 0.023582587f;
      sa[772] = 0.043705687f;
      sa[773] = -0.24787275f;
      sa[774] = -0.018107403f;
      sa[775] = 0.27405497f;
      sa[776] = -0.056380108f;
      sa[777] = 0.06825965f;
      sa[778] = 0.16552906f;
      sa[779] = -0.1292842f;
      sa[780] = -0.0046474393f;
      sa[781] = -0.03680608f;
      sa[782] = 0.13392097f;
      sa[783] = -0.13497584f;
      sa[784] = -0.13677357f;
      sa[785] = -0.10720494f;
      sa[786] = -0.08785895f;
      sa[787] = -0.20991473f;
      sa[788] = -0.26100785f;
      sa[789] = 0.19283877f;
      sa[790] = -0.12391824f;
      sa[791] = -0.0828727f;
      sa[792] = 0.19778693f;
      sa[793] = -0.11678798f;
      sa[794] = -0.19916256f;
      sa[795] = 0.03880798f;
      sa[796] = 0.21328375f;
      sa[797] = -0.19068177f;
      sa[798] = -0.2596179f;
      sa[799] = -0.19175813f;
      sa[800] = 0.20642689f;
      sa[801] = 0.041623577f;
      sa[802] = 0.24010937f;
      sa[803] = 0.083547235f;
      sa[804] = 0.22411421f;
      sa[805] = 0.3021085f;
      sa[806] = 0.29368454f;
      sa[807] = 0.20963281f;
      sa[808] = -0.020396268f;
      sa[809] = -0.22669202f;
      sa[810] = 0.07342317f;
      sa[811] = 0.20828612f;
      sa[812] = 0.15312226f;
      sa[813] = -0.29670832f;
      sa[814] = 0.07746457f;
      sa[815] = -0.17992182f;
      sa[816] = -0.10400894f;
      sa[817] = -0.15583092f;
      sa[818] = -0.024130624f;
      sa[819] = -0.08281987f;
      sa[820] = -0.28570414f;
      sa[821] = -0.2070936f;
      sa[822] = -0.26909536f;
      sa[823] = 0.051728625f;
      sa[824] = 0.122813575f;
      sa[825] = 0.3098359f;
      sa[826] = -0.28876236f;
      sa[827] = -0.31219214f;
      sa[828] = 0.12765187f;
      sa[829] = -0.08487108f;
      sa[830] = 0.14520407f;
      sa[831] = 0.18589993f;
      sa[832] = 0.13593924f;
      sa[833] = 0.076325804f;
      sa[834] = 0.18876006f;
      sa[835] = -0.0918054f;
      sa[836] = 0.20694357f;
      sa[837] = -0.15885198f;
      sa[838] = 0.11576146f;
      sa[839] = -0.2416746f;
      sa[840] = 0.1992525f;
      sa[841] = 0.11815523f;
      sa[842] = 0.17137443f;
      sa[843] = 0.037752096f;
      sa[844] = 0.03793097f;
      sa[845] = 0.14143685f;
      sa[846] = -0.23648745f;
      sa[847] = -0.049387723f;
      sa[848] = 0.20384796f;
      sa[849] = 0.23493606f;
      sa[850] = -0.009382891f;
      sa[851] = 0.101509236f;
      sa[852] = 0.25708276f;
      sa[853] = 0.13873167f;
      sa[854] = 0.24122554f;
      sa[855] = 0.16098921f;
      sa[856] = 0.09324921f;
      sa[857] = -0.14982069f;
      sa[858] = 0.14087023f;
      sa[859] = 0.070579775f;
      sa[860] = 0.27863175f;
      sa[861] = -0.21090694f;
      sa[862] = -0.10406047f;
      sa[863] = 0.040231068f;
      sa[864] = -0.18282117f;
      sa[865] = 0.22830303f;
      sa[866] = -0.13490517f;
      sa[867] = -0.020643383f;
      sa[868] = -0.1788644f;
      sa[869] = 0.19990662f;
      sa[870] = -0.037698153f;
      sa[871] = 0.14867423f;
      sa[872] = 0.24547021f;
      sa[873] = -0.060351614f;
      sa[874] = 0.007121252f;
      sa[875] = -0.22172795f;
      sa[876] = -0.23326088f;
      sa[877] = -0.2150584f;
      sa[878] = 0.023223331f;
      sa[879] = 0.18313174f;
      sa[880] = -0.11130545f;
      sa[881] = -0.10316396f;
      sa[882] = 0.14923815f;
      sa[883] = 0.18690768f;
      sa[884] = -0.12962736f;
      sa[885] = -0.1279901f;
      sa[886] = 0.09234053f;
      sa[887] = -0.05623566f;
      sa[888] = -0.101613745f;
      sa[889] = 0.04574516f;
      sa[890] = -0.30812198f;
      sa[891] = 0.3317392f;
      sa[892] = 0.16326177f;
      sa[893] = 0.25205308f;
      sa[894] = 0.033806503f;
      sa[895] = 0.21481065f;
      sa[896] = -0.17463492f;
      sa[897] = 0.2646709f;
      sa[898] = -0.076438084f;
      sa[899] = 0.17439462f;
      sa[900] = -0.12993978f;
      sa[901] = 0.14748923f;
      sa[902] = -0.2731453f;
      sa[903] = -0.09805182f;
      sa[904] = 0.17032056f;
      sa[905] = 0.17304376f;
      sa[906] = -0.24555439f;
      sa[907] = -0.26252335f;
      sa[908] = -0.2319581f;
      sa[909] = 0.054464575f;
      sa[910] = -0.0066542197f;
      sa[911] = -0.11749346f;
      sa[912] = -0.015927989f;
      sa[913] = 0.041946296f;
      sa[914] = -0.18922105f;
      sa[915] = 0.035029855f;
      sa[916] = 0.19728102f;
      sa[917] = 0.007865837f;
      sa[918] = 0.21302442f;
      sa[919] = -0.057733133f;
      sa[920] = 0.14010423f;
      sa[921] = -0.07506089f;
      sa[922] = -0.12959793f;
      sa[923] = -0.13198632f;
      sa[924] = -0.1351668f;
      sa[925] = -0.21012156f;
      sa[926] = 0.13252336f;
      sa[927] = -0.13842228f;
      sa[928] = 0.23370773f;
      sa[929] = 0.1240532f;
      sa[930] = 0.13933569f;
      sa[931] = -0.01907897f;
      sa[932] = 0.24423867f;
      sa[933] = 0.004805519f;
      sa[934] = 0.22511011f;
      sa[935] = -0.18105713f;
      sa[936] = 0.0692878f;
      sa[937] = 0.18403088f;
      sa[938] = -0.071560256f;
      sa[939] = -0.0633316f;
      sa[940] = -0.040907543f;
      sa[941] = -0.29266703f;
      sa[942] = -0.23069574f;
      sa[943] = -0.14895368f;
      sa[944] = -0.2273369f;
      sa[945] = 0.06600586f;
      sa[946] = 0.07805619f;
      sa[947] = 0.24707837f;
      sa[948] = 0.08615953f;
      sa[949] = -0.18202417f;
      sa[950] = 0.0826166f;
      sa[951] = -0.07488193f;
      sa[952] = -0.20372862f;
      sa[953] = -0.1662126f;
      sa[954] = -0.2516762f;
      sa[955] = 0.06074924f;
      sa[956] = -0.011005087f;
      sa[957] = 0.04521614f;
      sa[958] = 0.09814881f;
      sa[959] = -0.141753f;
      sa[960] = 0.3186884f;
      sa[961] = -0.11779719f;
      sa[962] = -0.030402742f;
      sa[963] = -0.04442955f;
      sa[964] = -0.16424231f;
      sa[965] = 0.25388858f;
      sa[966] = -0.08386168f;
      sa[967] = -0.24455948f;
      sa[968] = 0.10681415f;
      sa[969] = 0.068239585f;
      sa[970] = 0.27869335f;
      sa[971] = 0.012269326f;
      sa[972] = -0.1743086f;
      sa[973] = -0.21361864f;
      sa[974] = -0.34163663f;
      sa[975] = -0.24229941f;
      sa[976] = -0.084083095f;
      sa[977] = 0.032684296f;
      sa[978] = -0.09342356f;
      sa[979] = 0.1345225f;
      sa[980] = 0.08304974f;
      sa[981] = -0.204625f;
      sa[982] = 0.11929968f;
      sa[983] = -0.10065021f;
      sa[984] = -0.2715586f;
      sa[985] = 0.05163554f;
      sa[986] = -0.26010606f;
      sa[987] = 0.07212717f;
      sa[988] = 0.14417884f;
      sa[989] = 0.2056732f;
      sa[990] = 0.30466434f;
      sa[991] = -0.22342803f;
      sa[992] = -0.19729303f;
      sa[993] = -0.040666834f;
      sa[994] = -0.15383464f;
      sa[995] = -0.26520264f;
      sa[996] = 0.16985804f;
      sa[997] = 0.15664643f;
      sa[998] = 0.13532901f;
      sa[999] = 0.23604144f;
      sa[1000] = 0.024926312f;
      sa[1001] = 0.23144601f;
      sa[1002] = 0.2516844f;
      sa[1003] = -0.07536964f;
      sa[1004] = 0.17198227f;
      sa[1005] = -0.25990513f;
      sa[1006] = -0.053835128f;
      sa[1007] = 0.07233633f;
      sa[1008] = 0.18479036f;
      sa[1009] = 0.022743141f;
      sa[1010] = -0.008899738f;
      sa[1011] = 0.2776098f;
      sa[1012] = -0.07572597f;
      sa[1013] = 0.14347006f;
      sa[1014] = 0.2652249f;
      sa[1015] = -0.28557876f;
      sa[1016] = 0.26458743f;
      sa[1017] = 0.038299613f;
      sa[1018] = -0.032173615f;
      sa[1019] = 0.071538776f;
      sa[1020] = -0.23953252f;
      sa[1021] = 0.07386092f;
      sa[1022] = 0.23545788f;
      sa[1023] = 0.06864873f;
      sa[1024] = -0.059859183f;
      sa[1025] = 0.07718119f;
      sa[1026] = 0.16244923f;
      sa[1027] = 0.2565058f;
      sa[1028] = 0.28137863f;
      sa[1029] = -0.037163988f;
      sa[1030] = -0.16214868f;
      sa[1031] = -0.01443324f;
      sa[1032] = -0.2231262f;
      sa[1033] = 0.032148603f;
      sa[1034] = -0.034948327f;
      sa[1035] = -0.2803583f;
      sa[1036] = 0.24081275f;
      sa[1037] = 0.010640631f;
      sa[1038] = -0.21985377f;
      sa[1039] = 0.22180821f;
      sa[1040] = -0.004864323f;
      sa[1041] = 0.095894225f;
      sa[1042] = -0.24263483f;
      sa[1043] = -0.0714261f;
      sa[1044] = 0.20555021f;
      sa[1045] = 0.22243825f;
      sa[1046] = -0.23074014f;
      sa[1047] = -0.17238292f;
      sa[1048] = 0.15312113f;
      sa[1049] = -0.10110067f;
      sa[1050] = 0.04918083f;
      sa[1051] = -0.18941823f;
      sa[1052] = 0.16863112f;
      sa[1053] = 0.25550944f;
      sa[1054] = 0.21422924f;
      sa[1055] = -0.024722708f;
      sa[1056] = 0.26190054f;
      sa[1057] = -0.19345203f;
      sa[1058] = 0.22347583f;
      sa[1059] = -0.17138644f;
      sa[1060] = -0.28868675f;
      sa[1061] = 0.029213259f;
      sa[1062] = 0.26240286f;
      sa[1063] = -0.051311888f;
      sa[1064] = 0.107910894f;
      sa[1065] = -0.016968679f;
      sa[1066] = 0.1879794f;
      sa[1067] = -0.29822645f;
      sa[1068] = -0.32544404f;
      sa[1069] = 0.18715954f;
      sa[1070] = 0.1498358f;
      sa[1071] = 0.18614674f;
      sa[1072] = -0.23756479f;
      sa[1073] = 0.11525919f;
      sa[1074] = 0.10942293f;
      sa[1075] = -0.18817766f;
      sa[1076] = -0.12458216f;
      sa[1077] = 0.096560635f;
      sa[1078] = 0.01772131f;
      sa[1079] = 0.07128231f;
      sa[1080] = 0.19249597f;
      sa[1081] = 0.2192955f;
      sa[1082] = -0.28944126f;
      sa[1083] = -0.19414687f;
      sa[1084] = 0.2510209f;
      sa[1085] = -0.20068443f;
      sa[1086] = -0.24685904f;
      sa[1087] = -0.20479664f;
      sa[1088] = -0.21100605f;
      sa[1089] = 0.08813549f;
      sa[1090] = -0.251723f;
      sa[1091] = 0.11419388f;
      sa[1092] = -0.22952302f;
      sa[1093] = -0.2508402f;
      sa[1094] = 0.008722212f;
      sa[1095] = -0.1953937f;
      sa[1096] = 0.08504463f;
      sa[1097] = -0.11614217f;
      sa[1098] = -8.4700563E-4f;
      sa[1099] = -0.05820427f;
      sa[1100] = -0.11329803f;
      sa[1101] = 0.14967056f;
      sa[1102] = -0.12265146f;
      sa[1103] = 0.25122112f;
      sa[1104] = -0.25075987f;
      sa[1105] = -0.122766905f;
      sa[1106] = -0.08586462f;
      sa[1107] = 0.22451864f;
      sa[1108] = -0.18162218f;
      sa[1109] = 0.24558912f;
      sa[1110] = 0.17627366f;
      sa[1111] = -0.2226179f;
      sa[1112] = 0.1766782f;
      sa[1113] = 0.22223987f;
      sa[1114] = 0.023123067f;
      sa[1115] = 0.17962396f;
      sa[1116] = -0.06856101f;
      sa[1117] = -0.22467387f;
      sa[1118] = -0.20834467f;
      sa[1119] = -0.07469868f;
      sa[1120] = 0.19810691f;
      sa[1121] = 0.07620777f;
      sa[1122] = 0.25370258f;
      sa[1123] = 0.2615378f;
      sa[1124] = 0.023530874f;
      sa[1125] = -0.08726951f;
      sa[1126] = 0.20532602f;
      sa[1127] = 0.1382479f;
      sa[1128] = 0.015301176f;
      sa[1129] = -0.107115276f;
      sa[1130] = 0.2123091f;
      sa[1131] = 0.270546f;
      sa[1132] = -0.21011122f;
      sa[1133] = -0.17804173f;
      sa[1134] = 0.29877955f;
      sa[1135] = -0.325806f;
      sa[1136] = -0.03026735f;
      sa[1137] = 0.19758499f;
      sa[1138] = -0.07053282f;
      sa[1139] = 0.14179225f;
      sa[1140] = 0.21965186f;
      sa[1141] = -0.27417237f;
      sa[1142] = 0.13824804f;
      sa[1143] = -0.03317997f;
      sa[1144] = -0.2694432f;
      sa[1145] = 0.16657965f;
      sa[1146] = 0.21671787f;
      sa[1147] = -0.069326f;
      sa[1148] = 0.018705167f;
      sa[1149] = -0.0028333794f;
      sa[1150] = -0.24755046f;
      sa[1151] = -0.23440145f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2640531f;
      sa[1] = -0.123962544f;
      sa[2] = -0.5474256f;
      sa[3] = -0.93919396f;
      sa[4] = 0.07927982f;
      sa[5] = 0.22439376f;
      sa[6] = 1.3024142f;
      sa[7] = -0.6834074f;
      sa[8] = -0.9236363f;
      sa[9] = 0.7250413f;
      sa[10] = -0.08886534f;
      sa[11] = 0.42057604f;
      sa[12] = 0.18976493f;
      sa[13] = 0.050149333f;
      sa[14] = -1.3457681f;
      sa[15] = 1.133125f;
      sa[16] = 1.5706449f;
      sa[17] = -0.44868323f;
      sa[18] = 0.085892215f;
      sa[19] = -0.42551914f;
      sa[20] = 1.1511235f;
      sa[21] = 0.05626595f;
      sa[22] = -0.93597114f;
      sa[23] = 0.76015836f;
      sa[24] = -1.3654503f;
      sa[25] = 0.47694805f;
      sa[26] = -0.22801094f;
      sa[27] = 1.4933767f;
      sa[28] = -1.3742403f;
      sa[29] = -0.46493047f;
      sa[30] = 0.40071958f;
      sa[31] = -0.6273621f;
      sa[32] = -1.1587086f;
      sa[33] = -1.4771119f;
      sa[34] = 0.035071753f;
      sa[35] = 1.3657197f;
      sa[36] = -0.31705812f;
      sa[37] = -0.054304007f;
      sa[38] = 0.20020692f;
      sa[39] = 0.8081234f;
      sa[40] = -0.7543596f;
      sa[41] = -1.3353537f;
      sa[42] = -1.0267701f;
      sa[43] = -1.4542935f;
      sa[44] = 0.02695973f;
      sa[45] = -1.3403518f;
      sa[46] = 1.1011102f;
      sa[47] = 1.2851146f;
      sa[48] = -1.3444425f;
      sa[49] = -1.0446403f;
      sa[50] = 0.44059813f;
      sa[51] = -0.3061631f;
      sa[52] = 0.8279257f;
      sa[53] = 0.8872446f;
      sa[54] = -0.2039458f;
      sa[55] = 1.1298965f;
      sa[56] = -1.015624f;
      sa[57] = -1.1083558f;
      sa[58] = 0.16757244f;
      sa[59] = -0.21331312f;
      sa[60] = 1.3895215f;
      sa[61] = -0.5939437f;
      sa[62] = -0.35308564f;
      sa[63] = 0.69244444f;
      sa[64] = 1.47825f;
      sa[65] = -0.6280561f;
      sa[66] = 0.6429511f;
      sa[67] = 1.6162035f;
      sa[68] = 0.7258665f;
      sa[69] = -1.0358232f;
      sa[70] = -1.5324895f;
      sa[71] = -0.39481708f;
      sa[72] = -1.3132648f;
      sa[73] = 1.1611661f;
      sa[74] = 1.3384126f;
      sa[75] = -0.10273425f;
      sa[76] = 0.94385123f;
      sa[77] = 0.5364423f;
      sa[78] = -1.2760025f;
      sa[79] = 0.961853f;
      sa[80] = -0.80366987f;
      sa[81] = 0.2880239f;
      sa[82] = 0.7948585f;
      sa[83] = -0.6162583f;
      sa[84] = -1.5889875f;
      sa[85] = -1.2735126f;
      sa[86] = 0.25310242f;
      sa[87] = 1.2297356f;
      sa[88] = -1.5554132f;
      sa[89] = -0.5063635f;
      sa[90] = -1.0291183f;
      sa[91] = 1.5128868f;
      sa[92] = -0.2983735f;
      sa[93] = 0.25464052f;
      sa[94] = -1.5271257f;
      sa[95] = -0.24847059f;
      sa[96] = -1.1209081f;
      sa[97] = 0.188938f;
      sa[98] = -0.06802321f;
      sa[99] = 0.33398226f;
      sa[100] = -1.2667071f;
      sa[101] = -0.4015588f;
      sa[102] = 1.2636018f;
      sa[103] = 0.12177655f;
      sa[104] = -0.14695667f;
      sa[105] = -0.6090541f;
      sa[106] = 1.4581906f;
      sa[107] = 1.214532f;
      sa[108] = 0.7211036f;
      sa[109] = 0.122428924f;
      sa[110] = 0.79171056f;
      sa[111] = -0.74739647f;
      sa[112] = -1.1147344f;
      sa[113] = 0.20803156f;
      sa[114] = 0.18044995f;
      sa[115] = -0.31321555f;
      sa[116] = 1.1768662f;
      sa[117] = 0.059307743f;
      sa[118] = -1.3870251f;
      sa[119] = -0.81326413f;
      sa[120] = -0.3153412f;
      sa[121] = 1.0818851f;
      sa[122] = -0.043201808f;
      sa[123] = 0.36272871f;
      sa[124] = -0.839826f;
      sa[125] = 0.8009027f;
      sa[126] = -0.92964655f;
      sa[127] = 0.44668502f;
      sa[128] = -0.8231374f;
      sa[129] = 0.744341f;
      sa[130] = -0.36789086f;
      sa[131] = 0.8730587f;
      sa[132] = 0.47945756f;
      sa[133] = 0.6298642f;
      sa[134] = 0.646125f;
      sa[135] = -1.1078398f;
      sa[136] = 0.51907617f;
      sa[137] = -0.6309445f;
      sa[138] = -0.13683599f;
      sa[139] = 1.1759672f;
      sa[140] = -0.4022254f;
      sa[141] = 0.031566795f;
      sa[142] = 0.3280591f;
      sa[143] = -0.7778401f;
      sa[144] = 0.9911626f;
      sa[145] = -0.8094716f;
      sa[146] = 0.031463936f;
      sa[147] = -0.29969767f;
      sa[148] = -0.8139912f;
      sa[149] = 1.0878617f;
      sa[150] = -1.1071922f;
      sa[151] = -1.5425963f;
      sa[152] = 1.596939f;
      sa[153] = -0.59599787f;
      sa[154] = 1.3253132f;
      sa[155] = -1.5037211f;
      sa[156] = -1.4755682f;
      sa[157] = -1.1027367f;
      sa[158] = -0.21177514f;
      sa[159] = -0.68078524f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


