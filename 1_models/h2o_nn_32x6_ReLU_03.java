/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:47:05.571+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_03 > h2o_nn_32x6_ReLU_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_03", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3464457706492735984L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4712312931973549;
      sa[1] = 0.49903939003394965;
      sa[2] = 0.4809368462645075;
      sa[3] = 0.5130084397838356;
      sa[4] = 0.5124944729401544;
      sa[5] = 0.5412657648801159;
      sa[6] = 0.5285076571618819;
      sa[7] = 0.48928095177113645;
      sa[8] = 0.5197583868868351;
      sa[9] = 0.4671069479524485;
      sa[10] = 0.4708282088830159;
      sa[11] = 0.5002129039924961;
      sa[12] = 0.4449139110708679;
      sa[13] = 0.449184065467535;
      sa[14] = 0.5297172203056447;
      sa[15] = 0.48811645893834305;
      sa[16] = 0.5032205672682484;
      sa[17] = 0.4518844775269141;
      sa[18] = 0.46798216759859756;
      sa[19] = 0.5228952278469037;
      sa[20] = 0.5034678178571643;
      sa[21] = 0.5311426010508011;
      sa[22] = 0.5004760257098749;
      sa[23] = 0.4902099754334998;
      sa[24] = 0.5190666182929353;
      sa[25] = 0.467853583207741;
      sa[26] = 0.49595866620809187;
      sa[27] = 0.46462695683885435;
      sa[28] = 0.5080862366685539;
      sa[29] = 0.45801429466011334;
      sa[30] = 0.49441268356648593;
      sa[31] = 0.5015817876641319;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.005232114927494052;
      sa[1] = 0.01042806886239279;
      sa[2] = -0.02958961611785599;
      sa[3] = -0.01007803692503988;
      sa[4] = 0.01271711608549351;
    }
  }
}
class h2o_nn_32x6_ReLU_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.04052935f;
      sa[1] = 0.23436697f;
      sa[2] = 0.16702755f;
      sa[3] = 0.17586878f;
      sa[4] = -0.1811411f;
      sa[5] = -0.17916438f;
      sa[6] = -0.04778305f;
      sa[7] = 0.21410666f;
      sa[8] = 0.11770297f;
      sa[9] = -0.16851343f;
      sa[10] = -0.16252658f;
      sa[11] = -0.17567974f;
      sa[12] = 0.08145467f;
      sa[13] = -0.25154424f;
      sa[14] = -0.15954326f;
      sa[15] = -0.019640995f;
      sa[16] = 0.091812864f;
      sa[17] = 0.13786043f;
      sa[18] = -0.21621138f;
      sa[19] = 0.16617769f;
      sa[20] = 0.21958151f;
      sa[21] = -0.30730343f;
      sa[22] = 0.22253957f;
      sa[23] = -0.18310285f;
      sa[24] = 0.26772004f;
      sa[25] = 0.15868835f;
      sa[26] = -0.2637595f;
      sa[27] = 0.2557879f;
      sa[28] = 0.22166519f;
      sa[29] = -0.27520365f;
      sa[30] = -0.17021587f;
      sa[31] = 0.13127965f;
      sa[32] = 0.18993056f;
      sa[33] = -0.25235325f;
      sa[34] = 0.07194787f;
      sa[35] = -0.098119624f;
      sa[36] = 0.09165708f;
      sa[37] = 0.25861946f;
      sa[38] = -0.078631416f;
      sa[39] = 0.14257611f;
      sa[40] = 0.02080443f;
      sa[41] = -0.08427518f;
      sa[42] = -0.14270213f;
      sa[43] = 0.027795704f;
      sa[44] = 0.23709865f;
      sa[45] = -0.23067175f;
      sa[46] = 0.043575954f;
      sa[47] = 0.005212641f;
      sa[48] = 0.20958872f;
      sa[49] = 0.23701881f;
      sa[50] = 0.18085498f;
      sa[51] = -0.2858782f;
      sa[52] = -0.09012565f;
      sa[53] = 0.21328302f;
      sa[54] = 0.19464792f;
      sa[55] = 0.03839025f;
      sa[56] = -0.16495712f;
      sa[57] = -0.2773307f;
      sa[58] = 0.2529005f;
      sa[59] = -0.176065f;
      sa[60] = -0.26540342f;
      sa[61] = 0.17820252f;
      sa[62] = 0.100399464f;
      sa[63] = 0.0083080875f;
      sa[64] = 0.12574613f;
      sa[65] = 0.10747126f;
      sa[66] = 0.007871635f;
      sa[67] = 0.120603554f;
      sa[68] = -0.116840325f;
      sa[69] = 0.11147261f;
      sa[70] = -0.09805121f;
      sa[71] = 0.3231197f;
      sa[72] = -0.1307066f;
      sa[73] = 0.2109758f;
      sa[74] = -0.18023562f;
      sa[75] = 0.060326308f;
      sa[76] = -0.1856659f;
      sa[77] = -0.058600966f;
      sa[78] = -0.06227214f;
      sa[79] = 0.13115713f;
      sa[80] = -0.20430477f;
      sa[81] = -0.09953131f;
      sa[82] = -0.006607887f;
      sa[83] = 0.11448723f;
      sa[84] = -0.017872056f;
      sa[85] = -0.16544348f;
      sa[86] = 0.14471956f;
      sa[87] = 0.23902665f;
      sa[88] = 0.24231097f;
      sa[89] = 0.07087627f;
      sa[90] = -0.11577169f;
      sa[91] = 0.1393603f;
      sa[92] = 0.10574025f;
      sa[93] = -0.19145866f;
      sa[94] = -0.16652426f;
      sa[95] = -0.2267671f;
      sa[96] = 0.122509316f;
      sa[97] = 0.049830142f;
      sa[98] = 0.20082897f;
      sa[99] = -0.08233293f;
      sa[100] = -0.043715436f;
      sa[101] = -0.16847853f;
      sa[102] = -0.238733f;
      sa[103] = -0.07066698f;
      sa[104] = -0.002202144f;
      sa[105] = -0.13250177f;
      sa[106] = -0.20234512f;
      sa[107] = 0.1268454f;
      sa[108] = 0.17289093f;
      sa[109] = -0.20335078f;
      sa[110] = -0.1761721f;
      sa[111] = 0.12228826f;
      sa[112] = 0.13187882f;
      sa[113] = 0.042034302f;
      sa[114] = -0.14074825f;
      sa[115] = -0.036425393f;
      sa[116] = -0.2221341f;
      sa[117] = -0.0030212954f;
      sa[118] = -0.22751375f;
      sa[119] = -0.1786343f;
      sa[120] = 0.20787151f;
      sa[121] = 0.22283469f;
      sa[122] = 0.29390413f;
      sa[123] = 0.2559469f;
      sa[124] = 0.2660884f;
      sa[125] = 0.2775284f;
      sa[126] = -0.2697049f;
      sa[127] = -0.19239509f;
      sa[128] = 0.07772944f;
      sa[129] = 0.16380826f;
      sa[130] = -0.10519115f;
      sa[131] = 0.30464122f;
      sa[132] = 0.16025311f;
      sa[133] = -0.2670043f;
      sa[134] = 0.07917012f;
      sa[135] = -0.19427899f;
      sa[136] = -0.2517772f;
      sa[137] = -0.008154543f;
      sa[138] = 0.12280678f;
      sa[139] = -0.07384325f;
      sa[140] = -0.09386772f;
      sa[141] = -0.15830867f;
      sa[142] = 0.18846323f;
      sa[143] = -0.24895658f;
      sa[144] = 0.24985425f;
      sa[145] = -0.12882249f;
      sa[146] = -0.24669807f;
      sa[147] = 0.19512928f;
      sa[148] = 0.16936156f;
      sa[149] = 0.19218104f;
      sa[150] = 0.28935406f;
      sa[151] = -0.22184202f;
      sa[152] = 0.031343345f;
      sa[153] = 0.25925338f;
      sa[154] = 0.23070265f;
      sa[155] = -0.17985629f;
      sa[156] = 0.13799319f;
      sa[157] = -0.1672709f;
      sa[158] = 0.09881979f;
      sa[159] = 0.10638544f;
      sa[160] = 0.08551187f;
      sa[161] = 0.21047066f;
      sa[162] = -0.16597155f;
      sa[163] = -0.06825606f;
      sa[164] = 0.23286717f;
      sa[165] = -0.025886212f;
      sa[166] = -0.057526853f;
      sa[167] = -0.06698959f;
      sa[168] = 0.17506565f;
      sa[169] = 0.30507907f;
      sa[170] = 0.018094944f;
      sa[171] = -0.032034628f;
      sa[172] = -0.048984826f;
      sa[173] = -0.13131204f;
      sa[174] = -0.006410845f;
      sa[175] = -0.21842304f;
      sa[176] = -0.026546255f;
      sa[177] = -0.02245068f;
      sa[178] = -0.059015166f;
      sa[179] = 0.077793404f;
      sa[180] = -0.042153794f;
      sa[181] = -0.28010356f;
      sa[182] = -0.12159551f;
      sa[183] = 0.059549756f;
      sa[184] = 0.289204f;
      sa[185] = 0.17143293f;
      sa[186] = -0.2751431f;
      sa[187] = 0.09723312f;
      sa[188] = -0.020955676f;
      sa[189] = 0.20529614f;
      sa[190] = 0.05956996f;
      sa[191] = -0.071820855f;
      sa[192] = -0.115827054f;
      sa[193] = 0.2240066f;
      sa[194] = 0.084647946f;
      sa[195] = 0.27210855f;
      sa[196] = 0.24380888f;
      sa[197] = -0.038841713f;
      sa[198] = 0.11456094f;
      sa[199] = -0.073363386f;
      sa[200] = 0.02576554f;
      sa[201] = -0.2569208f;
      sa[202] = 0.13846005f;
      sa[203] = -0.0047591478f;
      sa[204] = -0.1767264f;
      sa[205] = 0.23272467f;
      sa[206] = 0.2209813f;
      sa[207] = 0.17294122f;
      sa[208] = -0.24723604f;
      sa[209] = -0.0705211f;
      sa[210] = -0.2637935f;
      sa[211] = -0.23540209f;
      sa[212] = 0.22211196f;
      sa[213] = -0.25480613f;
      sa[214] = -0.08535866f;
      sa[215] = 0.052072264f;
      sa[216] = 0.089215055f;
      sa[217] = 0.14217158f;
      sa[218] = -0.15967657f;
      sa[219] = 0.22440654f;
      sa[220] = -0.20845047f;
      sa[221] = 0.034170005f;
      sa[222] = 0.21450521f;
      sa[223] = 0.06450831f;
      sa[224] = 0.092831045f;
      sa[225] = 0.27864507f;
      sa[226] = -0.22237857f;
      sa[227] = 0.2760649f;
      sa[228] = 0.11180954f;
      sa[229] = 0.07389901f;
      sa[230] = 0.24301098f;
      sa[231] = -0.24132276f;
      sa[232] = -0.25575012f;
      sa[233] = 0.06501715f;
      sa[234] = 0.17114566f;
      sa[235] = -0.2746503f;
      sa[236] = -0.03299782f;
      sa[237] = -0.209399f;
      sa[238] = -0.20411682f;
      sa[239] = 0.14491493f;
      sa[240] = 0.011653179f;
      sa[241] = -0.22778803f;
      sa[242] = -0.05437556f;
      sa[243] = -0.23379223f;
      sa[244] = -0.20015343f;
      sa[245] = -0.12350808f;
      sa[246] = -0.25884444f;
      sa[247] = -0.051684413f;
      sa[248] = 0.25380695f;
      sa[249] = 0.24502034f;
      sa[250] = -0.20412596f;
      sa[251] = -0.10115639f;
      sa[252] = -0.27073777f;
      sa[253] = -0.268516f;
      sa[254] = -0.2526494f;
      sa[255] = 0.1874526f;
      sa[256] = -0.17464426f;
      sa[257] = 0.2558413f;
      sa[258] = -0.24289392f;
      sa[259] = -0.12271289f;
      sa[260] = -0.2151798f;
      sa[261] = -0.09428093f;
      sa[262] = -0.14221755f;
      sa[263] = 0.27867013f;
      sa[264] = -0.15465738f;
      sa[265] = 0.04838473f;
      sa[266] = -0.2696402f;
      sa[267] = -0.2312672f;
      sa[268] = 0.114739746f;
      sa[269] = -0.16178967f;
      sa[270] = -0.0023475178f;
      sa[271] = 0.16342965f;
      sa[272] = -0.09417104f;
      sa[273] = -0.123798706f;
      sa[274] = 0.108482756f;
      sa[275] = -0.017476749f;
      sa[276] = 0.06813281f;
      sa[277] = -0.23453636f;
      sa[278] = -0.10442148f;
      sa[279] = 0.17581813f;
      sa[280] = -0.17147368f;
      sa[281] = 0.26369664f;
      sa[282] = -0.100635424f;
      sa[283] = -0.046404466f;
      sa[284] = 0.0411365f;
      sa[285] = -0.13380702f;
      sa[286] = 0.23887037f;
      sa[287] = 0.119699866f;
      sa[288] = -0.17869762f;
      sa[289] = -0.15972903f;
      sa[290] = -0.07592977f;
      sa[291] = -0.017976271f;
      sa[292] = 0.13159597f;
      sa[293] = -0.08169013f;
      sa[294] = 0.09141103f;
      sa[295] = 0.12407066f;
      sa[296] = 0.22345641f;
      sa[297] = 0.20116286f;
      sa[298] = 3.1725908E-4f;
      sa[299] = -0.05453127f;
      sa[300] = -0.0064949193f;
      sa[301] = -0.055012256f;
      sa[302] = 0.16297497f;
      sa[303] = 0.032066967f;
      sa[304] = -0.19803964f;
      sa[305] = -0.02639515f;
      sa[306] = 0.18710396f;
      sa[307] = -0.13992645f;
      sa[308] = 0.08384812f;
      sa[309] = 0.15076332f;
      sa[310] = 0.28398252f;
      sa[311] = 0.29375514f;
      sa[312] = -0.18591571f;
      sa[313] = -0.14340809f;
      sa[314] = -0.16579092f;
      sa[315] = 0.004270421f;
      sa[316] = -0.024994869f;
      sa[317] = -0.084993035f;
      sa[318] = 0.08617916f;
      sa[319] = 0.2636615f;
      sa[320] = -0.0813024f;
      sa[321] = 0.11031917f;
      sa[322] = 0.21699174f;
      sa[323] = -0.14625052f;
      sa[324] = -0.015723944f;
      sa[325] = 0.28284252f;
      sa[326] = -0.25039762f;
      sa[327] = 0.03127105f;
      sa[328] = -0.07704489f;
      sa[329] = 0.2190094f;
      sa[330] = -0.18979056f;
      sa[331] = -0.029715339f;
      sa[332] = -0.2567935f;
      sa[333] = 0.11481265f;
      sa[334] = -0.0892924f;
      sa[335] = 0.23668735f;
      sa[336] = -0.15336609f;
      sa[337] = -0.15554921f;
      sa[338] = 0.25388393f;
      sa[339] = -0.21848251f;
      sa[340] = -0.2948159f;
      sa[341] = -0.24917667f;
      sa[342] = 0.15803596f;
      sa[343] = -0.076735936f;
      sa[344] = -0.17131169f;
      sa[345] = 0.17391406f;
      sa[346] = 0.17980783f;
      sa[347] = -0.18083686f;
      sa[348] = 0.2814403f;
      sa[349] = -0.27561742f;
      sa[350] = -0.23684748f;
      sa[351] = 0.09115618f;
      sa[352] = 0.18542412f;
      sa[353] = -0.04452552f;
      sa[354] = 0.07608934f;
      sa[355] = 0.100502364f;
      sa[356] = -0.123277426f;
      sa[357] = 0.22429141f;
      sa[358] = -0.28122285f;
      sa[359] = 0.022706324f;
      sa[360] = 0.08542229f;
      sa[361] = -0.027656345f;
      sa[362] = -0.15166166f;
      sa[363] = 0.18565862f;
      sa[364] = -0.11555184f;
      sa[365] = -0.21090762f;
      sa[366] = -0.0031084274f;
      sa[367] = -0.27942577f;
      sa[368] = -0.17428376f;
      sa[369] = 0.28037125f;
      sa[370] = -0.18843006f;
      sa[371] = 0.12038416f;
      sa[372] = -0.017331919f;
      sa[373] = 0.2695785f;
      sa[374] = -0.13562578f;
      sa[375] = -0.2798959f;
      sa[376] = -0.27665323f;
      sa[377] = -0.18429258f;
      sa[378] = 0.28585836f;
      sa[379] = 0.090863146f;
      sa[380] = -0.109199405f;
      sa[381] = -0.086140595f;
      sa[382] = -0.037314404f;
      sa[383] = -0.10569896f;
      sa[384] = -0.14050512f;
      sa[385] = 0.09989473f;
      sa[386] = -0.23948853f;
      sa[387] = -0.17893669f;
      sa[388] = 0.08096568f;
      sa[389] = -0.0035245914f;
      sa[390] = -0.00787912f;
      sa[391] = -0.09913387f;
      sa[392] = 0.22589271f;
      sa[393] = 0.18653631f;
      sa[394] = -0.021731067f;
      sa[395] = 0.297447f;
      sa[396] = 0.28140613f;
      sa[397] = -0.26228037f;
      sa[398] = 0.12785372f;
      sa[399] = 0.080972224f;
      sa[400] = 0.18206201f;
      sa[401] = 0.23666178f;
      sa[402] = -0.12193767f;
      sa[403] = 0.07726376f;
      sa[404] = 0.23617284f;
      sa[405] = -0.21679838f;
      sa[406] = -0.055132918f;
      sa[407] = 0.15105294f;
      sa[408] = -0.20816055f;
      sa[409] = -0.23945881f;
      sa[410] = -0.1133006f;
      sa[411] = 0.15916768f;
      sa[412] = -0.13720426f;
      sa[413] = 0.1027075f;
      sa[414] = 0.1420031f;
      sa[415] = 0.273743f;
      sa[416] = -0.16597138f;
      sa[417] = 0.03829016f;
      sa[418] = 0.0034009914f;
      sa[419] = 0.27364352f;
      sa[420] = 0.1921614f;
      sa[421] = 0.25821948f;
      sa[422] = 0.22568281f;
      sa[423] = -0.025460243f;
      sa[424] = 0.1025778f;
      sa[425] = -0.061041653f;
      sa[426] = -0.27561966f;
      sa[427] = 0.18903711f;
      sa[428] = -0.03407577f;
      sa[429] = -0.12879479f;
      sa[430] = 0.16111313f;
      sa[431] = -0.019812003f;
      sa[432] = -0.056146473f;
      sa[433] = 0.14213184f;
      sa[434] = 0.2474484f;
      sa[435] = 0.050875135f;
      sa[436] = -0.26961684f;
      sa[437] = -0.25714847f;
      sa[438] = -0.018608628f;
      sa[439] = -0.039845377f;
      sa[440] = 0.27761698f;
      sa[441] = -0.27396348f;
      sa[442] = 0.08017383f;
      sa[443] = 0.07598361f;
      sa[444] = -0.2249139f;
      sa[445] = 0.045545015f;
      sa[446] = 0.19938804f;
      sa[447] = 0.044405986f;
      sa[448] = 0.19570847f;
      sa[449] = 0.25494784f;
      sa[450] = -0.08950781f;
      sa[451] = 0.09601075f;
      sa[452] = 0.16215484f;
      sa[453] = -0.06019173f;
      sa[454] = -0.17391238f;
      sa[455] = -0.06950373f;
      sa[456] = -0.033426017f;
      sa[457] = 0.08706555f;
      sa[458] = -0.20494397f;
      sa[459] = 0.24150933f;
      sa[460] = 0.20532605f;
      sa[461] = 0.26446095f;
      sa[462] = 0.041400395f;
      sa[463] = 0.2003966f;
      sa[464] = -0.25667024f;
      sa[465] = 0.22721268f;
      sa[466] = -0.005502661f;
      sa[467] = 0.12617235f;
      sa[468] = 0.10168921f;
      sa[469] = 0.29812723f;
      sa[470] = 0.1857955f;
      sa[471] = 0.06809278f;
      sa[472] = -0.0020379908f;
      sa[473] = -0.115136854f;
      sa[474] = -0.021661442f;
      sa[475] = 0.074111745f;
      sa[476] = 0.24852504f;
      sa[477] = -0.15755278f;
      sa[478] = 0.09473869f;
      sa[479] = -0.11636503f;
      sa[480] = -0.29642004f;
      sa[481] = -0.20649323f;
      sa[482] = -0.2535911f;
      sa[483] = 0.18424653f;
      sa[484] = 0.22204801f;
      sa[485] = 0.13333483f;
      sa[486] = -0.029492673f;
      sa[487] = -0.1705524f;
      sa[488] = -0.19946346f;
      sa[489] = 0.066374384f;
      sa[490] = -0.019169638f;
      sa[491] = -0.24620886f;
      sa[492] = 0.20559923f;
      sa[493] = 0.24447492f;
      sa[494] = -0.22985004f;
      sa[495] = 0.13787636f;
      sa[496] = -0.014951101f;
      sa[497] = 0.047529973f;
      sa[498] = 0.14879726f;
      sa[499] = 0.14396973f;
      sa[500] = -0.0526569f;
      sa[501] = 0.08189738f;
      sa[502] = 0.23219766f;
      sa[503] = 0.048726816f;
      sa[504] = -0.16278343f;
      sa[505] = -0.23054543f;
      sa[506] = 0.15909058f;
      sa[507] = -0.08855656f;
      sa[508] = 0.09729563f;
      sa[509] = 0.21671467f;
      sa[510] = 0.16822235f;
      sa[511] = 0.012439276f;
      sa[512] = 0.061849747f;
      sa[513] = -0.08622556f;
      sa[514] = 0.2593354f;
      sa[515] = -0.2385935f;
      sa[516] = 0.0119599365f;
      sa[517] = 0.08454086f;
      sa[518] = 0.12985751f;
      sa[519] = -0.09773074f;
      sa[520] = 0.18886733f;
      sa[521] = 0.12576425f;
      sa[522] = 0.09948498f;
      sa[523] = 0.19814761f;
      sa[524] = 0.17514633f;
      sa[525] = 0.16291721f;
      sa[526] = 0.0019825033f;
      sa[527] = -0.10097802f;
      sa[528] = -0.02740033f;
      sa[529] = 0.122932024f;
      sa[530] = -0.16105624f;
      sa[531] = 0.080229476f;
      sa[532] = 0.123817f;
      sa[533] = 0.10989997f;
      sa[534] = 0.11845706f;
      sa[535] = -0.101650275f;
      sa[536] = 0.07847828f;
      sa[537] = -0.20263876f;
      sa[538] = 0.21142884f;
      sa[539] = 0.28362858f;
      sa[540] = -0.24812786f;
      sa[541] = -0.1445842f;
      sa[542] = -0.067034714f;
      sa[543] = -0.2504339f;
      sa[544] = 0.13107261f;
      sa[545] = 0.096815765f;
      sa[546] = 0.06462176f;
      sa[547] = 0.16278408f;
      sa[548] = 0.055121545f;
      sa[549] = 0.14781569f;
      sa[550] = -0.011753773f;
      sa[551] = -0.10924443f;
      sa[552] = 0.041078817f;
      sa[553] = -0.0558236f;
      sa[554] = -0.14772603f;
      sa[555] = -0.14370357f;
      sa[556] = -0.162315f;
      sa[557] = -0.22186379f;
      sa[558] = -0.20458388f;
      sa[559] = 0.11827134f;
      sa[560] = -0.29830447f;
      sa[561] = -0.10458309f;
      sa[562] = 0.17081255f;
      sa[563] = -0.090826586f;
      sa[564] = 0.2687401f;
      sa[565] = 0.031425305f;
      sa[566] = 0.25345442f;
      sa[567] = 0.011145169f;
      sa[568] = -0.07581367f;
      sa[569] = 0.01770735f;
      sa[570] = -0.023934402f;
      sa[571] = -0.06267856f;
      sa[572] = -0.12365073f;
      sa[573] = 0.102549136f;
      sa[574] = 0.245673f;
      sa[575] = -0.22118437f;
      sa[576] = -0.08128017f;
      sa[577] = 0.04356918f;
      sa[578] = 0.121063516f;
      sa[579] = -0.052317653f;
      sa[580] = 0.09988545f;
      sa[581] = -0.12110775f;
      sa[582] = 0.10025233f;
      sa[583] = 0.029559655f;
      sa[584] = 0.13169026f;
      sa[585] = 0.18497899f;
      sa[586] = -0.21777233f;
      sa[587] = -0.11755117f;
      sa[588] = 0.09039012f;
      sa[589] = 0.13641341f;
      sa[590] = -0.0040868307f;
      sa[591] = 0.05429678f;
      sa[592] = -0.28773627f;
      sa[593] = -0.17061466f;
      sa[594] = -0.08771135f;
      sa[595] = -0.013549334f;
      sa[596] = 0.2689724f;
      sa[597] = -0.0094308825f;
      sa[598] = 0.2257696f;
      sa[599] = 0.050433658f;
      sa[600] = -0.2731979f;
      sa[601] = 0.21518493f;
      sa[602] = -0.08061081f;
      sa[603] = 0.2690528f;
      sa[604] = 0.23618299f;
      sa[605] = 0.17882773f;
      sa[606] = 0.21358323f;
      sa[607] = 0.07580019f;
      sa[608] = -0.042930733f;
      sa[609] = 0.058209263f;
      sa[610] = 0.117133066f;
      sa[611] = -0.043367386f;
      sa[612] = -0.105511226f;
      sa[613] = 0.09375059f;
      sa[614] = 0.067788586f;
      sa[615] = 0.013646404f;
      sa[616] = 0.03472214f;
      sa[617] = -0.3104165f;
      sa[618] = -0.17257155f;
      sa[619] = -0.1923063f;
      sa[620] = -0.06292659f;
      sa[621] = -0.20044945f;
      sa[622] = -0.292087f;
      sa[623] = -0.273463f;
      sa[624] = -0.06891878f;
      sa[625] = 0.21018545f;
      sa[626] = -0.03196122f;
      sa[627] = 0.22152165f;
      sa[628] = -0.26428983f;
      sa[629] = -0.034537993f;
      sa[630] = -0.13129754f;
      sa[631] = 0.20865722f;
      sa[632] = 0.083112545f;
      sa[633] = -0.1670963f;
      sa[634] = -0.22561087f;
      sa[635] = 0.13657969f;
      sa[636] = -0.17715195f;
      sa[637] = -0.04151544f;
      sa[638] = -0.09956616f;
      sa[639] = -0.090472214f;
      sa[640] = -0.148412f;
      sa[641] = -0.2936685f;
      sa[642] = 0.159437f;
      sa[643] = -0.3180091f;
      sa[644] = -0.05276025f;
      sa[645] = -0.18903959f;
      sa[646] = 0.28981045f;
      sa[647] = -0.22918232f;
      sa[648] = -0.04012208f;
      sa[649] = -0.03903947f;
      sa[650] = 0.055437826f;
      sa[651] = -0.13236788f;
      sa[652] = 0.073120415f;
      sa[653] = -0.15421303f;
      sa[654] = -0.16030572f;
      sa[655] = -0.1661776f;
      sa[656] = 0.08417704f;
      sa[657] = 0.13052987f;
      sa[658] = -0.23093697f;
      sa[659] = -0.22366136f;
      sa[660] = -0.24126497f;
      sa[661] = -0.11254868f;
      sa[662] = -0.28158617f;
      sa[663] = 0.1468921f;
      sa[664] = -0.16512853f;
      sa[665] = 0.272865f;
      sa[666] = -0.0139547f;
      sa[667] = -0.24435188f;
      sa[668] = 0.25432843f;
      sa[669] = -0.12647521f;
      sa[670] = 0.12130117f;
      sa[671] = 0.036161322f;
      sa[672] = -0.26298746f;
      sa[673] = 0.16392384f;
      sa[674] = 0.24078812f;
      sa[675] = -0.24767448f;
      sa[676] = -0.095043965f;
      sa[677] = -0.19665709f;
      sa[678] = 0.184433f;
      sa[679] = -0.070809774f;
      sa[680] = 0.063166775f;
      sa[681] = 0.08712383f;
      sa[682] = 0.055937245f;
      sa[683] = -0.106388114f;
      sa[684] = -0.02958308f;
      sa[685] = 0.016040025f;
      sa[686] = -0.17864352f;
      sa[687] = -0.20689335f;
      sa[688] = -0.2775796f;
      sa[689] = -0.23354138f;
      sa[690] = -0.029710911f;
      sa[691] = 0.09918029f;
      sa[692] = -0.15053308f;
      sa[693] = -0.17677487f;
      sa[694] = 0.2694771f;
      sa[695] = -0.018676748f;
      sa[696] = -0.09238912f;
      sa[697] = -0.13900493f;
      sa[698] = -0.1716717f;
      sa[699] = 0.28389317f;
      sa[700] = 0.15030943f;
      sa[701] = 0.09826419f;
      sa[702] = 0.19150166f;
      sa[703] = -0.050240476f;
      sa[704] = -0.271454f;
      sa[705] = -0.048455868f;
      sa[706] = -0.13802741f;
      sa[707] = 0.0055866013f;
      sa[708] = -0.024494778f;
      sa[709] = -0.2695315f;
      sa[710] = 0.2592565f;
      sa[711] = -0.10463068f;
      sa[712] = 0.02405542f;
      sa[713] = 0.12323099f;
      sa[714] = 0.17335881f;
      sa[715] = 0.0641138f;
      sa[716] = 0.058225796f;
      sa[717] = 0.18342465f;
      sa[718] = -0.06780772f;
      sa[719] = 0.07258881f;
      sa[720] = -0.26589182f;
      sa[721] = 0.22459807f;
      sa[722] = -0.115840174f;
      sa[723] = 0.016701028f;
      sa[724] = 0.045303583f;
      sa[725] = -0.29153374f;
      sa[726] = -0.22217318f;
      sa[727] = -0.28467384f;
      sa[728] = -0.13453226f;
      sa[729] = -0.027660036f;
      sa[730] = 0.06438832f;
      sa[731] = -0.25645477f;
      sa[732] = 0.15716974f;
      sa[733] = 0.19918598f;
      sa[734] = -0.1502803f;
      sa[735] = 0.2750121f;
      sa[736] = 0.002457654f;
      sa[737] = 0.16116798f;
      sa[738] = -0.16723797f;
      sa[739] = -0.3144265f;
      sa[740] = -0.27896976f;
      sa[741] = -0.29507312f;
      sa[742] = 0.0776101f;
      sa[743] = 0.026835464f;
      sa[744] = 0.06308221f;
      sa[745] = -0.2614305f;
      sa[746] = 0.112096906f;
      sa[747] = -0.13652699f;
      sa[748] = -0.15734346f;
      sa[749] = -0.18776582f;
      sa[750] = 0.17721114f;
      sa[751] = 0.23676288f;
      sa[752] = -0.042877585f;
      sa[753] = 0.17948f;
      sa[754] = 0.017724277f;
      sa[755] = 0.18716678f;
      sa[756] = -0.17766772f;
      sa[757] = 0.23021823f;
      sa[758] = -0.18612958f;
      sa[759] = -0.12942013f;
      sa[760] = -0.08581501f;
      sa[761] = 0.04617521f;
      sa[762] = -0.09238154f;
      sa[763] = 0.16240592f;
      sa[764] = 0.07366828f;
      sa[765] = -0.064470485f;
      sa[766] = -0.21933806f;
      sa[767] = 0.10573109f;
      sa[768] = -0.16827533f;
      sa[769] = -0.2697044f;
      sa[770] = -0.0071538985f;
      sa[771] = 0.020134099f;
      sa[772] = 0.03642636f;
      sa[773] = -0.27972454f;
      sa[774] = -0.0097195655f;
      sa[775] = 0.265138f;
      sa[776] = -0.05943488f;
      sa[777] = 0.060094833f;
      sa[778] = 0.1709046f;
      sa[779] = -0.14339137f;
      sa[780] = -0.04007793f;
      sa[781] = -0.06439143f;
      sa[782] = 0.13660829f;
      sa[783] = -0.15755999f;
      sa[784] = -0.14132226f;
      sa[785] = -0.11538968f;
      sa[786] = -0.08697519f;
      sa[787] = -0.2283196f;
      sa[788] = -0.25812098f;
      sa[789] = 0.17670089f;
      sa[790] = -0.13455021f;
      sa[791] = -0.10389622f;
      sa[792] = 0.19100304f;
      sa[793] = -0.10719176f;
      sa[794] = -0.21993054f;
      sa[795] = -0.0221522f;
      sa[796] = 0.22710842f;
      sa[797] = -0.19536513f;
      sa[798] = -0.25935665f;
      sa[799] = -0.18109873f;
      sa[800] = 0.19825725f;
      sa[801] = 0.031072108f;
      sa[802] = 0.2474437f;
      sa[803] = 0.057776917f;
      sa[804] = 0.23374183f;
      sa[805] = 0.2913216f;
      sa[806] = 0.29164824f;
      sa[807] = 0.21295325f;
      sa[808] = -0.016828507f;
      sa[809] = -0.23031098f;
      sa[810] = 0.07951791f;
      sa[811] = 0.20052461f;
      sa[812] = 0.16335611f;
      sa[813] = -0.28621772f;
      sa[814] = 0.08333187f;
      sa[815] = -0.17060353f;
      sa[816] = -0.11279446f;
      sa[817] = -0.14964847f;
      sa[818] = 5.695143E-4f;
      sa[819] = -0.062123857f;
      sa[820] = -0.27242824f;
      sa[821] = -0.19000518f;
      sa[822] = -0.2588775f;
      sa[823] = 0.07159835f;
      sa[824] = 0.11214878f;
      sa[825] = 0.2991976f;
      sa[826] = -0.2653402f;
      sa[827] = -0.28887808f;
      sa[828] = 0.11094771f;
      sa[829] = -0.069140635f;
      sa[830] = 0.16247669f;
      sa[831] = 0.15238775f;
      sa[832] = 0.12431034f;
      sa[833] = 0.05812482f;
      sa[834] = 0.16356783f;
      sa[835] = -0.09946742f;
      sa[836] = 0.18700989f;
      sa[837] = -0.1611079f;
      sa[838] = 0.13785098f;
      sa[839] = -0.2605692f;
      sa[840] = 0.18820263f;
      sa[841] = 0.099220484f;
      sa[842] = 0.15046394f;
      sa[843] = 0.03332987f;
      sa[844] = 0.053633623f;
      sa[845] = 0.14054911f;
      sa[846] = -0.24807148f;
      sa[847] = -0.04416946f;
      sa[848] = 0.19767974f;
      sa[849] = 0.22928019f;
      sa[850] = -0.023907507f;
      sa[851] = 0.10427873f;
      sa[852] = 0.27517065f;
      sa[853] = 0.14944346f;
      sa[854] = 0.24008545f;
      sa[855] = 0.1841401f;
      sa[856] = 0.09161569f;
      sa[857] = -0.14851199f;
      sa[858] = 0.1365653f;
      sa[859] = 0.085027024f;
      sa[860] = 0.2640024f;
      sa[861] = -0.24382082f;
      sa[862] = -0.068865664f;
      sa[863] = 0.06153706f;
      sa[864] = -0.16539195f;
      sa[865] = 0.20282437f;
      sa[866] = -0.17359208f;
      sa[867] = 0.0074808844f;
      sa[868] = -0.17114924f;
      sa[869] = 0.21567196f;
      sa[870] = -0.014898209f;
      sa[871] = 0.14677188f;
      sa[872] = 0.26842442f;
      sa[873] = -0.079445206f;
      sa[874] = -0.008285751f;
      sa[875] = -0.2118156f;
      sa[876] = -0.2236902f;
      sa[877] = -0.19880997f;
      sa[878] = 0.045677047f;
      sa[879] = 0.18377307f;
      sa[880] = -0.13195959f;
      sa[881] = -0.1263086f;
      sa[882] = 0.16546017f;
      sa[883] = 0.17767234f;
      sa[884] = -0.12509337f;
      sa[885] = -0.1234217f;
      sa[886] = 0.10509681f;
      sa[887] = -0.060567304f;
      sa[888] = -0.114486605f;
      sa[889] = 0.036467154f;
      sa[890] = -0.30905557f;
      sa[891] = 0.32168302f;
      sa[892] = 0.1630032f;
      sa[893] = 0.25060523f;
      sa[894] = 0.03650899f;
      sa[895] = 0.20163572f;
      sa[896] = -0.17361589f;
      sa[897] = 0.25854966f;
      sa[898] = -0.09457504f;
      sa[899] = 0.16099024f;
      sa[900] = -0.15182197f;
      sa[901] = 0.15509765f;
      sa[902] = -0.23358196f;
      sa[903] = -0.093328655f;
      sa[904] = 0.15718283f;
      sa[905] = 0.15632845f;
      sa[906] = -0.25985503f;
      sa[907] = -0.26401317f;
      sa[908] = -0.24964184f;
      sa[909] = 0.07449466f;
      sa[910] = 0.00999473f;
      sa[911] = -0.10215851f;
      sa[912] = -0.035549834f;
      sa[913] = 0.024974577f;
      sa[914] = -0.20702834f;
      sa[915] = 0.033534497f;
      sa[916] = 0.21297799f;
      sa[917] = 0.024373502f;
      sa[918] = 0.19114123f;
      sa[919] = -0.046484288f;
      sa[920] = 0.12590437f;
      sa[921] = -0.085534975f;
      sa[922] = -0.1455058f;
      sa[923] = -0.13417047f;
      sa[924] = -0.10764821f;
      sa[925] = -0.196052f;
      sa[926] = 0.0976062f;
      sa[927] = -0.11147937f;
      sa[928] = 0.21997312f;
      sa[929] = 0.111982636f;
      sa[930] = 0.12308325f;
      sa[931] = -0.020323787f;
      sa[932] = 0.24988152f;
      sa[933] = 0.017505266f;
      sa[934] = 0.20066637f;
      sa[935] = -0.19065984f;
      sa[936] = 0.084670655f;
      sa[937] = 0.17875502f;
      sa[938] = -0.124404326f;
      sa[939] = -0.020948242f;
      sa[940] = -0.05145169f;
      sa[941] = -0.2933899f;
      sa[942] = -0.22742428f;
      sa[943] = -0.1681372f;
      sa[944] = -0.20655128f;
      sa[945] = 0.04224684f;
      sa[946] = 0.04488285f;
      sa[947] = 0.27246055f;
      sa[948] = 0.08559408f;
      sa[949] = -0.1761675f;
      sa[950] = 0.090163566f;
      sa[951] = -0.088086314f;
      sa[952] = -0.2147835f;
      sa[953] = -0.19407965f;
      sa[954] = -0.24369895f;
      sa[955] = 0.05381928f;
      sa[956] = -0.017466608f;
      sa[957] = 0.0342714f;
      sa[958] = 0.09731063f;
      sa[959] = -0.16272998f;
      sa[960] = 0.30108887f;
      sa[961] = -0.1435689f;
      sa[962] = -0.033834103f;
      sa[963] = -0.068454616f;
      sa[964] = -0.17305492f;
      sa[965] = 0.24103191f;
      sa[966] = -0.09108055f;
      sa[967] = -0.27241117f;
      sa[968] = 0.11398375f;
      sa[969] = 0.06960123f;
      sa[970] = 0.27295312f;
      sa[971] = -0.0017175946f;
      sa[972] = -0.19652478f;
      sa[973] = -0.1889267f;
      sa[974] = -0.30583167f;
      sa[975] = -0.2594181f;
      sa[976] = -0.09335546f;
      sa[977] = 0.015212684f;
      sa[978] = -0.113941595f;
      sa[979] = 0.13494715f;
      sa[980] = 0.059562318f;
      sa[981] = -0.18851101f;
      sa[982] = 0.1262192f;
      sa[983] = -0.104260094f;
      sa[984] = -0.28208074f;
      sa[985] = 0.03337654f;
      sa[986] = -0.2800477f;
      sa[987] = 0.07068718f;
      sa[988] = 0.16597657f;
      sa[989] = 0.23503765f;
      sa[990] = 0.2842418f;
      sa[991] = -0.21783054f;
      sa[992] = -0.202805f;
      sa[993] = -0.046744864f;
      sa[994] = -0.16700727f;
      sa[995] = -0.2619742f;
      sa[996] = 0.18800654f;
      sa[997] = 0.1622552f;
      sa[998] = 0.12280349f;
      sa[999] = 0.24595997f;
      sa[1000] = 0.023136225f;
      sa[1001] = 0.22993504f;
      sa[1002] = 0.24667047f;
      sa[1003] = -0.06509985f;
      sa[1004] = 0.17788044f;
      sa[1005] = -0.24448957f;
      sa[1006] = -0.048931785f;
      sa[1007] = 0.077834025f;
      sa[1008] = 0.18924372f;
      sa[1009] = 0.016082741f;
      sa[1010] = -0.024971329f;
      sa[1011] = 0.24820724f;
      sa[1012] = -0.07268362f;
      sa[1013] = 0.15067628f;
      sa[1014] = 0.26513284f;
      sa[1015] = -0.2820434f;
      sa[1016] = 0.25416794f;
      sa[1017] = 0.03801494f;
      sa[1018] = -0.021804973f;
      sa[1019] = 0.056613967f;
      sa[1020] = -0.23624751f;
      sa[1021] = 0.079553604f;
      sa[1022] = 0.23614669f;
      sa[1023] = 0.06912352f;
      sa[1024] = -0.06744256f;
      sa[1025] = 0.073978804f;
      sa[1026] = 0.1681106f;
      sa[1027] = 0.25987142f;
      sa[1028] = 0.28479147f;
      sa[1029] = -0.035654336f;
      sa[1030] = -0.16193229f;
      sa[1031] = -0.0093399305f;
      sa[1032] = -0.22513686f;
      sa[1033] = 0.036590863f;
      sa[1034] = -0.019767525f;
      sa[1035] = -0.25485858f;
      sa[1036] = 0.24718982f;
      sa[1037] = 0.018120768f;
      sa[1038] = -0.20996828f;
      sa[1039] = 0.230506f;
      sa[1040] = -0.01916476f;
      sa[1041] = 0.07078254f;
      sa[1042] = -0.22945578f;
      sa[1043] = -0.05868605f;
      sa[1044] = 0.18066996f;
      sa[1045] = 0.23427352f;
      sa[1046] = -0.1985224f;
      sa[1047] = -0.19037974f;
      sa[1048] = 0.15104729f;
      sa[1049] = -0.11009583f;
      sa[1050] = 0.03703081f;
      sa[1051] = -0.19284931f;
      sa[1052] = 0.1340652f;
      sa[1053] = 0.28031558f;
      sa[1054] = 0.23425296f;
      sa[1055] = -0.020246796f;
      sa[1056] = 0.24960215f;
      sa[1057] = -0.20779854f;
      sa[1058] = 0.20685837f;
      sa[1059] = -0.17584266f;
      sa[1060] = -0.26867658f;
      sa[1061] = 0.05222802f;
      sa[1062] = 0.25437546f;
      sa[1063] = -0.03610392f;
      sa[1064] = 0.09977203f;
      sa[1065] = -0.020513738f;
      sa[1066] = 0.1743932f;
      sa[1067] = -0.29797947f;
      sa[1068] = -0.2875944f;
      sa[1069] = 0.2088046f;
      sa[1070] = 0.14783095f;
      sa[1071] = 0.1966295f;
      sa[1072] = -0.23976797f;
      sa[1073] = 0.11785911f;
      sa[1074] = 0.105546795f;
      sa[1075] = -0.17152226f;
      sa[1076] = -0.100640416f;
      sa[1077] = 0.13542126f;
      sa[1078] = -0.02709379f;
      sa[1079] = 0.048947074f;
      sa[1080] = 0.1986643f;
      sa[1081] = 0.24652955f;
      sa[1082] = -0.29449832f;
      sa[1083] = -0.17873749f;
      sa[1084] = 0.23245102f;
      sa[1085] = -0.20951965f;
      sa[1086] = -0.26210013f;
      sa[1087] = -0.22524798f;
      sa[1088] = -0.20070711f;
      sa[1089] = 0.088788524f;
      sa[1090] = -0.26320872f;
      sa[1091] = 0.13476142f;
      sa[1092] = -0.236136f;
      sa[1093] = -0.25204676f;
      sa[1094] = 0.002087557f;
      sa[1095] = -0.20323612f;
      sa[1096] = 0.10636853f;
      sa[1097] = -0.11466167f;
      sa[1098] = -0.033637602f;
      sa[1099] = -0.04816968f;
      sa[1100] = -0.12228998f;
      sa[1101] = 0.13425502f;
      sa[1102] = -0.13619962f;
      sa[1103] = 0.2324258f;
      sa[1104] = -0.26075268f;
      sa[1105] = -0.1332203f;
      sa[1106] = -0.12670831f;
      sa[1107] = 0.21636048f;
      sa[1108] = -0.1871991f;
      sa[1109] = 0.23417732f;
      sa[1110] = 0.1724963f;
      sa[1111] = -0.23207784f;
      sa[1112] = 0.14421035f;
      sa[1113] = 0.18320131f;
      sa[1114] = 0.079735585f;
      sa[1115] = 0.23864765f;
      sa[1116] = -0.07987094f;
      sa[1117] = -0.21377166f;
      sa[1118] = -0.20519966f;
      sa[1119] = -0.10447124f;
      sa[1120] = 0.19185956f;
      sa[1121] = 0.07387504f;
      sa[1122] = 0.23963048f;
      sa[1123] = 0.26211423f;
      sa[1124] = 0.0075070783f;
      sa[1125] = -0.07705207f;
      sa[1126] = 0.23667629f;
      sa[1127] = 0.13522188f;
      sa[1128] = 0.0010802613f;
      sa[1129] = -0.11401284f;
      sa[1130] = 0.19533956f;
      sa[1131] = 0.26247072f;
      sa[1132] = -0.19473805f;
      sa[1133] = -0.16348137f;
      sa[1134] = 0.27023265f;
      sa[1135] = -0.30793443f;
      sa[1136] = -0.0412917f;
      sa[1137] = 0.19257726f;
      sa[1138] = -0.08379725f;
      sa[1139] = 0.1418947f;
      sa[1140] = 0.23141116f;
      sa[1141] = -0.2636157f;
      sa[1142] = 0.12630747f;
      sa[1143] = 2.4937844E-4f;
      sa[1144] = -0.27523226f;
      sa[1145] = 0.165174f;
      sa[1146] = 0.21624027f;
      sa[1147] = -0.06728457f;
      sa[1148] = 0.021760298f;
      sa[1149] = 0.007432409f;
      sa[1150] = -0.2683145f;
      sa[1151] = -0.24610342f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2727767f;
      sa[1] = -0.123937264f;
      sa[2] = -0.5433092f;
      sa[3] = -0.92423403f;
      sa[4] = 0.078164846f;
      sa[5] = 0.21347831f;
      sa[6] = 1.2108343f;
      sa[7] = -0.6855409f;
      sa[8] = -0.9286614f;
      sa[9] = 0.68265647f;
      sa[10] = -0.16800146f;
      sa[11] = 0.41847664f;
      sa[12] = 0.20178321f;
      sa[13] = 0.053764306f;
      sa[14] = -1.2749069f;
      sa[15] = 1.129004f;
      sa[16] = 1.5779718f;
      sa[17] = -0.44494414f;
      sa[18] = 0.036903095f;
      sa[19] = -0.46959013f;
      sa[20] = 1.16152f;
      sa[21] = 0.015490525f;
      sa[22] = -1.023392f;
      sa[23] = 0.77639616f;
      sa[24] = -1.3452135f;
      sa[25] = 0.4518324f;
      sa[26] = -0.2231042f;
      sa[27] = 1.4934592f;
      sa[28] = -1.4145937f;
      sa[29] = -0.46995112f;
      sa[30] = 0.4027706f;
      sa[31] = -0.656967f;
      sa[32] = -1.1553551f;
      sa[33] = -1.4686372f;
      sa[34] = 0.03854833f;
      sa[35] = 1.379367f;
      sa[36] = -0.30478144f;
      sa[37] = -0.05122258f;
      sa[38] = 0.17807269f;
      sa[39] = 0.81962335f;
      sa[40] = -0.7519446f;
      sa[41] = -1.3497641f;
      sa[42] = -1.0264734f;
      sa[43] = -1.4021938f;
      sa[44] = 0.029409848f;
      sa[45] = -1.3339994f;
      sa[46] = 1.1940117f;
      sa[47] = 1.3220038f;
      sa[48] = -1.338012f;
      sa[49] = -1.0174091f;
      sa[50] = 0.4100161f;
      sa[51] = -0.31121308f;
      sa[52] = 0.81012535f;
      sa[53] = 0.901239f;
      sa[54] = -0.22774725f;
      sa[55] = 1.1381541f;
      sa[56] = -1.0020947f;
      sa[57] = -1.1146884f;
      sa[58] = 0.16608155f;
      sa[59] = -0.1744323f;
      sa[60] = 1.371054f;
      sa[61] = -0.58202636f;
      sa[62] = -0.3564211f;
      sa[63] = 0.693016f;
      sa[64] = 1.446118f;
      sa[65] = -0.64559704f;
      sa[66] = 0.6120097f;
      sa[67] = 1.5840502f;
      sa[68] = 0.71003187f;
      sa[69] = -1.0360287f;
      sa[70] = -1.5516739f;
      sa[71] = -0.43712118f;
      sa[72] = -1.3008195f;
      sa[73] = 1.155494f;
      sa[74] = 1.318673f;
      sa[75] = -0.1144708f;
      sa[76] = 0.9070866f;
      sa[77] = 0.50343764f;
      sa[78] = -1.2896453f;
      sa[79] = 0.96293694f;
      sa[80] = -0.7994877f;
      sa[81] = 0.2596059f;
      sa[82] = 0.79141843f;
      sa[83] = -0.6306911f;
      sa[84] = -1.6063069f;
      sa[85] = -1.3030468f;
      sa[86] = 0.24249817f;
      sa[87] = 1.2316319f;
      sa[88] = -1.559624f;
      sa[89] = -0.51742357f;
      sa[90] = -1.0588843f;
      sa[91] = 1.5259142f;
      sa[92] = -0.33023626f;
      sa[93] = 0.2465645f;
      sa[94] = -1.5413191f;
      sa[95] = -0.23553972f;
      sa[96] = -1.1202312f;
      sa[97] = 0.16746876f;
      sa[98] = -0.071290076f;
      sa[99] = 0.31185254f;
      sa[100] = -1.256435f;
      sa[101] = -0.39987838f;
      sa[102] = 1.3187886f;
      sa[103] = 0.04959461f;
      sa[104] = -0.16950479f;
      sa[105] = -0.57354903f;
      sa[106] = 1.4440739f;
      sa[107] = 1.1777676f;
      sa[108] = 0.72305876f;
      sa[109] = 0.11133442f;
      sa[110] = 0.696009f;
      sa[111] = -0.7718335f;
      sa[112] = -1.1316116f;
      sa[113] = 0.15643547f;
      sa[114] = 0.19233786f;
      sa[115] = -0.298773f;
      sa[116] = 1.1696404f;
      sa[117] = 0.05558504f;
      sa[118] = -1.3016499f;
      sa[119] = -0.7988097f;
      sa[120] = -0.32764012f;
      sa[121] = 1.089254f;
      sa[122] = -0.0701779f;
      sa[123] = 0.34095883f;
      sa[124] = -0.72233856f;
      sa[125] = 0.7746037f;
      sa[126] = -0.9536937f;
      sa[127] = 0.46137404f;
      sa[128] = -0.88454175f;
      sa[129] = 0.77514523f;
      sa[130] = -0.37695125f;
      sa[131] = 0.8943567f;
      sa[132] = 0.46200478f;
      sa[133] = 0.62575364f;
      sa[134] = 0.66157734f;
      sa[135] = -1.0906036f;
      sa[136] = 0.55187416f;
      sa[137] = -0.6031938f;
      sa[138] = -0.1338376f;
      sa[139] = 1.1847063f;
      sa[140] = -0.44604877f;
      sa[141] = -0.015521121f;
      sa[142] = 0.29801998f;
      sa[143] = -0.78576934f;
      sa[144] = 0.99791074f;
      sa[145] = -0.7660536f;
      sa[146] = 0.07532518f;
      sa[147] = -0.31496835f;
      sa[148] = -0.8287168f;
      sa[149] = 1.0919816f;
      sa[150] = -1.0840111f;
      sa[151] = -1.5512863f;
      sa[152] = 1.5889877f;
      sa[153] = -0.59369916f;
      sa[154] = 1.3163013f;
      sa[155] = -1.5265423f;
      sa[156] = -1.4085454f;
      sa[157] = -1.093318f;
      sa[158] = -0.20971045f;
      sa[159] = -0.6256084f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


