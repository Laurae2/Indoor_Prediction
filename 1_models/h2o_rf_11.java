/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:01.465+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_11 > h2o_rf_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_11", algorithm="drf")
public class h2o_rf_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};

  public h2o_rf_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6316362390847065148L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_11_Forest_0.score0(data,preds);
    h2o_rf_11_Forest_1.score0(data,preds);
    h2o_rf_11_Forest_2.score0(data,preds);
    h2o_rf_11_Forest_3.score0(data,preds);
    h2o_rf_11_Forest_4.score0(data,preds);
    h2o_rf_11_Forest_5.score0(data,preds);
    h2o_rf_11_Forest_6.score0(data,preds);
    h2o_rf_11_Forest_7.score0(data,preds);
    h2o_rf_11_Forest_8.score0(data,preds);
    h2o_rf_11_Forest_9.score0(data,preds);
    h2o_rf_11_Forest_10.score0(data,preds);
    h2o_rf_11_Forest_11.score0(data,preds);
    h2o_rf_11_Forest_12.score0(data,preds);
    h2o_rf_11_Forest_13.score0(data,preds);
    h2o_rf_11_Forest_14.score0(data,preds);
    h2o_rf_11_Forest_15.score0(data,preds);
    h2o_rf_11_Forest_16.score0(data,preds);
    h2o_rf_11_Forest_17.score0(data,preds);
    h2o_rf_11_Forest_18.score0(data,preds);
    h2o_rf_11_Forest_19.score0(data,preds);
    h2o_rf_11_Forest_20.score0(data,preds);
    h2o_rf_11_Forest_21.score0(data,preds);
    h2o_rf_11_Forest_22.score0(data,preds);
    h2o_rf_11_Forest_23.score0(data,preds);
    h2o_rf_11_Forest_24.score0(data,preds);
    h2o_rf_11_Forest_25.score0(data,preds);
    h2o_rf_11_Forest_26.score0(data,preds);
    h2o_rf_11_Forest_27.score0(data,preds);
    h2o_rf_11_Forest_28.score0(data,preds);
    h2o_rf_11_Forest_29.score0(data,preds);
    h2o_rf_11_Forest_30.score0(data,preds);
    h2o_rf_11_Forest_31.score0(data,preds);
    h2o_rf_11_Forest_32.score0(data,preds);
    h2o_rf_11_Forest_33.score0(data,preds);
    h2o_rf_11_Forest_34.score0(data,preds);
    h2o_rf_11_Forest_35.score0(data,preds);
    h2o_rf_11_Forest_36.score0(data,preds);
    h2o_rf_11_Forest_37.score0(data,preds);
    h2o_rf_11_Forest_38.score0(data,preds);
    h2o_rf_11_Forest_39.score0(data,preds);
    h2o_rf_11_Forest_40.score0(data,preds);
    h2o_rf_11_Forest_41.score0(data,preds);
    h2o_rf_11_Forest_42.score0(data,preds);
    h2o_rf_11_Forest_43.score0(data,preds);
    h2o_rf_11_Forest_44.score0(data,preds);
    h2o_rf_11_Forest_45.score0(data,preds);
    h2o_rf_11_Forest_46.score0(data,preds);
    h2o_rf_11_Forest_47.score0(data,preds);
    h2o_rf_11_Forest_48.score0(data,preds);
    h2o_rf_11_Forest_49.score0(data,preds);
    h2o_rf_11_Forest_50.score0(data,preds);
    h2o_rf_11_Forest_51.score0(data,preds);
    h2o_rf_11_Forest_52.score0(data,preds);
    h2o_rf_11_Forest_53.score0(data,preds);
    h2o_rf_11_Forest_54.score0(data,preds);
    h2o_rf_11_Forest_55.score0(data,preds);
    h2o_rf_11_Forest_56.score0(data,preds);
    h2o_rf_11_Forest_57.score0(data,preds);
    h2o_rf_11_Forest_58.score0(data,preds);
    h2o_rf_11_Forest_59.score0(data,preds);
    h2o_rf_11_Forest_60.score0(data,preds);
    h2o_rf_11_Forest_61.score0(data,preds);
    h2o_rf_11_Forest_62.score0(data,preds);
    h2o_rf_11_Forest_63.score0(data,preds);
    h2o_rf_11_Forest_64.score0(data,preds);
    h2o_rf_11_Forest_65.score0(data,preds);
    h2o_rf_11_Forest_66.score0(data,preds);
    h2o_rf_11_Forest_67.score0(data,preds);
    h2o_rf_11_Forest_68.score0(data,preds);
    h2o_rf_11_Forest_69.score0(data,preds);
    h2o_rf_11_Forest_70.score0(data,preds);
    h2o_rf_11_Forest_71.score0(data,preds);
    h2o_rf_11_Forest_72.score0(data,preds);
    h2o_rf_11_Forest_73.score0(data,preds);
    h2o_rf_11_Forest_74.score0(data,preds);
    h2o_rf_11_Forest_75.score0(data,preds);
    h2o_rf_11_Forest_76.score0(data,preds);
    h2o_rf_11_Forest_77.score0(data,preds);
    h2o_rf_11_Forest_78.score0(data,preds);
    h2o_rf_11_Forest_79.score0(data,preds);
    h2o_rf_11_Forest_80.score0(data,preds);
    h2o_rf_11_Forest_81.score0(data,preds);
    h2o_rf_11_Forest_82.score0(data,preds);
    h2o_rf_11_Forest_83.score0(data,preds);
    h2o_rf_11_Forest_84.score0(data,preds);
    h2o_rf_11_Forest_85.score0(data,preds);
    h2o_rf_11_Forest_86.score0(data,preds);
    h2o_rf_11_Forest_87.score0(data,preds);
    h2o_rf_11_Forest_88.score0(data,preds);
    h2o_rf_11_Forest_89.score0(data,preds);
    h2o_rf_11_Forest_90.score0(data,preds);
    h2o_rf_11_Forest_91.score0(data,preds);
    h2o_rf_11_Forest_92.score0(data,preds);
    h2o_rf_11_Forest_93.score0(data,preds);
    h2o_rf_11_Forest_94.score0(data,preds);
    h2o_rf_11_Forest_95.score0(data,preds);
    h2o_rf_11_Forest_96.score0(data,preds);
    h2o_rf_11_Forest_97.score0(data,preds);
    h2o_rf_11_Forest_98.score0(data,preds);
    h2o_rf_11_Forest_99.score0(data,preds);
    h2o_rf_11_Forest_100.score0(data,preds);
    h2o_rf_11_Forest_101.score0(data,preds);
    h2o_rf_11_Forest_102.score0(data,preds);
    h2o_rf_11_Forest_103.score0(data,preds);
    h2o_rf_11_Forest_104.score0(data,preds);
    h2o_rf_11_Forest_105.score0(data,preds);
    h2o_rf_11_Forest_106.score0(data,preds);
    h2o_rf_11_Forest_107.score0(data,preds);
    h2o_rf_11_Forest_108.score0(data,preds);
    h2o_rf_11_Forest_109.score0(data,preds);
    h2o_rf_11_Forest_110.score0(data,preds);
    h2o_rf_11_Forest_111.score0(data,preds);
    h2o_rf_11_Forest_112.score0(data,preds);
    h2o_rf_11_Forest_113.score0(data,preds);
    h2o_rf_11_Forest_114.score0(data,preds);
    h2o_rf_11_Forest_115.score0(data,preds);
    h2o_rf_11_Forest_116.score0(data,preds);
    h2o_rf_11_Forest_117.score0(data,preds);
    h2o_rf_11_Forest_118.score0(data,preds);
    h2o_rf_11_Forest_119.score0(data,preds);
    h2o_rf_11_Forest_120.score0(data,preds);
    h2o_rf_11_Forest_121.score0(data,preds);
    h2o_rf_11_Forest_122.score0(data,preds);
    h2o_rf_11_Forest_123.score0(data,preds);
    h2o_rf_11_Forest_124.score0(data,preds);
    h2o_rf_11_Forest_125.score0(data,preds);
    h2o_rf_11_Forest_126.score0(data,preds);
    h2o_rf_11_Forest_127.score0(data,preds);
    h2o_rf_11_Forest_128.score0(data,preds);
    h2o_rf_11_Forest_129.score0(data,preds);
    h2o_rf_11_Forest_130.score0(data,preds);
    h2o_rf_11_Forest_131.score0(data,preds);
    h2o_rf_11_Forest_132.score0(data,preds);
    h2o_rf_11_Forest_133.score0(data,preds);
    h2o_rf_11_Forest_134.score0(data,preds);
    h2o_rf_11_Forest_135.score0(data,preds);
    h2o_rf_11_Forest_136.score0(data,preds);
    h2o_rf_11_Forest_137.score0(data,preds);
    h2o_rf_11_Forest_138.score0(data,preds);
    h2o_rf_11_Forest_139.score0(data,preds);
    h2o_rf_11_Forest_140.score0(data,preds);
    h2o_rf_11_Forest_141.score0(data,preds);
    h2o_rf_11_Forest_142.score0(data,preds);
    h2o_rf_11_Forest_143.score0(data,preds);
    h2o_rf_11_Forest_144.score0(data,preds);
    h2o_rf_11_Forest_145.score0(data,preds);
    h2o_rf_11_Forest_146.score0(data,preds);
    h2o_rf_11_Forest_147.score0(data,preds);
    h2o_rf_11_Forest_148.score0(data,preds);
    h2o_rf_11_Forest_149.score0(data,preds);
    h2o_rf_11_Forest_150.score0(data,preds);
    h2o_rf_11_Forest_151.score0(data,preds);
    h2o_rf_11_Forest_152.score0(data,preds);
    h2o_rf_11_Forest_153.score0(data,preds);
    h2o_rf_11_Forest_154.score0(data,preds);
    h2o_rf_11_Forest_155.score0(data,preds);
    h2o_rf_11_Forest_156.score0(data,preds);
    h2o_rf_11_Forest_157.score0(data,preds);
    h2o_rf_11_Forest_158.score0(data,preds);
    h2o_rf_11_Forest_159.score0(data,preds);
    h2o_rf_11_Forest_160.score0(data,preds);
    h2o_rf_11_Forest_161.score0(data,preds);
    h2o_rf_11_Forest_162.score0(data,preds);
    h2o_rf_11_Forest_163.score0(data,preds);
    h2o_rf_11_Forest_164.score0(data,preds);
    h2o_rf_11_Forest_165.score0(data,preds);
    h2o_rf_11_Forest_166.score0(data,preds);
    h2o_rf_11_Forest_167.score0(data,preds);
    h2o_rf_11_Forest_168.score0(data,preds);
    h2o_rf_11_Forest_169.score0(data,preds);
    h2o_rf_11_Forest_170.score0(data,preds);
    h2o_rf_11_Forest_171.score0(data,preds);
    h2o_rf_11_Forest_172.score0(data,preds);
    h2o_rf_11_Forest_173.score0(data,preds);
    h2o_rf_11_Forest_174.score0(data,preds);
    h2o_rf_11_Forest_175.score0(data,preds);
    h2o_rf_11_Forest_176.score0(data,preds);
    h2o_rf_11_Forest_177.score0(data,preds);
    h2o_rf_11_Forest_178.score0(data,preds);
    h2o_rf_11_Forest_179.score0(data,preds);
    h2o_rf_11_Forest_180.score0(data,preds);
    h2o_rf_11_Forest_181.score0(data,preds);
    h2o_rf_11_Forest_182.score0(data,preds);
    h2o_rf_11_Forest_183.score0(data,preds);
    h2o_rf_11_Forest_184.score0(data,preds);
    h2o_rf_11_Forest_185.score0(data,preds);
    h2o_rf_11_Forest_186.score0(data,preds);
    h2o_rf_11_Forest_187.score0(data,preds);
    h2o_rf_11_Forest_188.score0(data,preds);
    h2o_rf_11_Forest_189.score0(data,preds);
    h2o_rf_11_Forest_190.score0(data,preds);
    h2o_rf_11_Forest_191.score0(data,preds);
    h2o_rf_11_Forest_192.score0(data,preds);
    h2o_rf_11_Forest_193.score0(data,preds);
    h2o_rf_11_Forest_194.score0(data,preds);
    h2o_rf_11_Forest_195.score0(data,preds);
    h2o_rf_11_Forest_196.score0(data,preds);
    h2o_rf_11_Forest_197.score0(data,preds);
    h2o_rf_11_Forest_198.score0(data,preds);
    h2o_rf_11_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_11_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[21 /* X22 */] <0.119967334f ? 
             (data[35 /* X36 */] <-0.23447266f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.3717781f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.06349043f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22486861f ? 
                         (data[32 /* X33 */] <-0.3437503f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2675f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.42863873f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1586208f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.6826716f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.5090318f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46875f ? 
                     (data[32 /* X33 */] <-0.35866508f ? 
                         (data[18 /* X19 */] <0.05699989f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24060078f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.11896559f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.101101935f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[13 /* X14 */] <0.036030065f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41128644f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35330877f ? 
             (data[15 /* X16 */] <0.13276382f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1599098f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0979945f ? 
                         (data[5 /* X6 */] <0.12155223f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23140158f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25655422f ? 
                         (data[32 /* X33 */] <-0.8210228f ? 
                             (data[17 /* X18 */] <0.106723785f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.26697895f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[27 /* X28 */] <-0.30813247f ? 
             (data[23 /* X24 */] <0.11953812f ? 
                 (data[35 /* X36 */] <-0.9143885f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.10063266f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[19 /* X20 */] <0.042708527f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.60145485f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19388157f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5087358f ? 
                 (data[17 /* X18 */] <-0.8645963f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.36443734f ? 
                         (data[11 /* X12 */] <0.3033338f ? 
                             (data[20 /* X21 */] <0.071293466f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[1 /* X2 */] <-0.7976404f ? 
                             (data[19 /* X20 */] <-0.17918642f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1945314f ? 
                                    0.0f : 
                                     (data[27 /* X28 */] <0.18556002f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[20 /* X21 */] <0.26140937f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.120535366f ? 
                                         (data[1 /* X2 */] <-0.26088396f ? 
                                            1.0f : 
                                             (data[17 /* X18 */] <-0.27246425f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f) : 
                                    0.0f))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (data[9 /* X10 */] <-0.5616738f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.115947254f ? 
                 (data[0 /* X1 */] <-0.20294051f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17106663f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23475713f ? 
                 (data[4 /* X5 */] <0.10164498f ? 
                     (data[8 /* X9 */] <0.20805618f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.12918314f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30317065f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15785053f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.7799995f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[5 /* X6 */] <0.10218513f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[1 /* X2 */] <0.13396685f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[1 /* X2 */] <-0.46791303f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.45188236f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.012739545f ? 
                     (data[15 /* X16 */] <0.18836236f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <0.0103905415f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.18263233f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
        0.022058824f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10912209f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22990099f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3001485f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.27799985f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <0.08334933f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.114273995f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[16 /* X17 */] <-0.76963f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17640202f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14681794f ? 
                     (data[30 /* X31 */] <0.1183164f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40101543f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08870075f ? 
                                1.0f : 
                                0.0f) : 
                             (data[35 /* X36 */] <-0.27128f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[14 /* X15 */] <0.08922098f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.08346953f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.6171875f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.0792458f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[31 /* X32 */] <0.04005953f ? 
             (data[15 /* X16 */] <0.04432014f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.06138859f ? 
                 (data[34 /* X35 */] <-0.1953125f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28155f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09918988f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[14 /* X15 */] <0.10196867f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25163874f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2868245f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.30289134f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20636661f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                 (data[12 /* X13 */] <0.13392763f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.33302125f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4336805f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26667067f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19199091f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11542183f ? 
                        1.0f : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.111074455f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.005154805f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.2491257f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2606273f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[31 /* X32 */] <0.1485681f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[30 /* X31 */] <0.18816453f ? 
             (data[32 /* X33 */] <-0.22443219f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06131134f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.2593921f ? 
                 (data[7 /* X8 */] <0.08537177f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.11011491f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29870516f ? 
             (data[9 /* X10 */] <-0.3519073f ? 
                 (data[33 /* X34 */] <-0.7578125f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.39152667f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.001404316f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.38821095f ? 
                     (data[12 /* X13 */] <0.10327098f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54210746f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30445525f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.32725614f ? 
                                 (data[6 /* X7 */] <0.13411683f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.08464699f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24006867f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.23162642f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.088589065f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5011413f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1685157f ? 
             (data[22 /* X23 */] <0.15615916f ? 
                 (data[5 /* X6 */] <0.097087115f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.052083906f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.0475817f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[33 /* X34 */] <-0.4453125f ? 
                     (data[13 /* X14 */] <0.08786835f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38801685f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24458788f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46164703f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26966357f ? 
                         (data[5 /* X6 */] <0.15433799f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.12566048f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.19104551f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.55f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.16149557f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.13809346f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.026762143f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.08012871f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[11 /* X12 */] <-0.2597212f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20702617f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6567965f ? 
                 (data[34 /* X35 */] <-0.46875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.102234244f ? 
         (data[31 /* X32 */] <0.16110928f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.7240768f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0299429f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5668275f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5498881f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2730417f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17366152f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.42167476f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[32 /* X33 */] <0.31249937f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20316714f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.06929446f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[10 /* X11 */] <-0.37932023f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.421875f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.5233187f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0053330706f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.32539064f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1313396f ? 
                     (data[7 /* X8 */] <0.047503594f ? 
                         (data[2 /* X3 */] <0.56164664f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.14021175f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19576336f ? 
                             (data[2 /* X3 */] <-0.16008231f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09910404f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.117002256f ? 
                                 (data[12 /* X13 */] <0.121947564f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16982745f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2750082f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.26686844f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[34 /* X35 */] <0.21875f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[7 /* X8 */] <0.092945404f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.144054f ? 
                 (data[5 /* X6 */] <0.09937715f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34191847f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.087599434f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.14621614f ? 
                     (data[14 /* X15 */] <0.15295944f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2367769f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.3329607f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (data[19 /* X20 */] <-0.50160146f ? 
             (data[7 /* X8 */] <0.10935495f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <1.0547066f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.084508054f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37554562f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (data[19 /* X20 */] <-1.0897065f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3726255f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07523392f ? 
                     (data[14 /* X15 */] <0.11896559f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.102813706f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                 (data[26 /* X27 */] <0.049937587f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17061834f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019926572f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.025f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[34 /* X35 */] <-0.46875f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X2 */] <-0.41295847f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2636373f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013599401f ? 
             (data[21 /* X22 */] <0.11998059f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.6496094f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.74838907f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.80045396f ? 
                     (data[32 /* X33 */] <-0.41832414f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.3535315f ? 
                             (data[9 /* X10 */] <-0.45476103f ? 
                                0.0f : 
                                1.0f) : 
                             (data[20 /* X21 */] <0.16635142f ? 
                                 (data[17 /* X18 */] <-0.15454504f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12482715f ? 
                                        0.0f : 
                                         (data[25 /* X26 */] <-0.13160989f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (data[20 /* X21 */] <0.2226083f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23198079f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.049328253f ? 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18886615f ? 
                                                 (data[23 /* X24 */] <0.07059407f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63332075f ? 
                                        0.0f : 
                                         (data[12 /* X13 */] <0.26268554f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23830411f ? 
         (data[3 /* X4 */] <-0.54879916f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (data[23 /* X24 */] <0.1424799f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18270405f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.08181788f ? 
                 (data[6 /* X7 */] <0.05035888f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.6551836f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09229939f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.100968584f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.55390626f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.12915982f ? 
             (data[15 /* X16 */] <0.24171732f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09546995f ? 
                 (data[29 /* X30 */] <0.08682894f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4283653f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0625f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11645207f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29918805f ? 
             (data[9 /* X10 */] <-0.57319945f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79765624f ? 
                     (data[5 /* X6 */] <0.076476805f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.03787845f ? 
                             (data[35 /* X36 */] <-0.2809375f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2879783f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.11087594f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.27047557f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20334148f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7017199f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (data[3 /* X4 */] <-0.540345f ? 
             (data[35 /* X36 */] <0.42441407f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.97333986f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21110405f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19343874f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2719443f ? 
                             (data[33 /* X34 */] <-0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46394303f ? 
             (data[19 /* X20 */] <0.02185374f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.15534262f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.296875f ? 
                         (data[5 /* X6 */] <0.117697425f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.81640625f ? 
             (data[12 /* X13 */] <0.15021397f ? 
                 (data[35 /* X36 */] <-0.5734375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.46679688f ? 
                 (data[18 /* X19 */] <-0.0843877f ? 
                     (data[3 /* X4 */] <0.5433815f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10537485f ? 
             (data[22 /* X23 */] <0.112781614f ? 
                 (data[33 /* X34 */] <-0.9296875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.40106842f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2478361f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.57996875f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19613867f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37782806f ? 
                             (data[25 /* X26 */] <-0.22739951f ? 
                                 (data[2 /* X3 */] <-0.16623636f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))))) : 
         (data[18 /* X19 */] <-0.032135762f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12195673f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26757812f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11314177f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41968977f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.15433799f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.115565374f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[29 /* X30 */] <0.121085785f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19154164f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[4 /* X5 */] <0.10129207f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42441407f ? 
                 (data[35 /* X36 */] <-0.4401535f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31867942f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21412358f ? 
                     (data[33 /* X34 */] <-0.40625f ? 
                         (data[1 /* X2 */] <-0.3580039f ? 
                             (data[24 /* X25 */] <-0.061605144f ? 
                                0.0f : 
                                1.0f) : 
                             (data[2 /* X3 */] <-0.12193241f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3080911f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.15652902f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[17 /* X18 */] <-0.019926572f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.18507752f ? 
                             (data[8 /* X9 */] <-0.1333712f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[21 /* X22 */] <0.09354853f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.036106676f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5120117f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2291239f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5430547f ? 
                         (data[25 /* X26 */] <-0.48904613f ? 
                             (data[27 /* X28 */] <0.060426082f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.38937804f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.1041898f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.17450653f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.009718006f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20528194f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.15591422f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.19554335f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[16 /* X17 */] <-0.2035259f ? 
             (data[30 /* X31 */] <0.08812811f ? 
                 (data[1 /* X2 */] <-0.3700528f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.035212375f ? 
                     (data[33 /* X34 */] <-0.390625f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06682883f ? 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.57416147f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25119513f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.038137384f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.17153695f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.953125f ? 
                     (data[3 /* X4 */] <-0.11076339f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.080278486f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22520943f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.15827669f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31923732f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.118511915f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23035847f ? 
            0.0f : 
             (data[13 /* X14 */] <0.12370233f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20469022f ? 
             (data[30 /* X31 */] <0.04265701f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.70807004f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23906848f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8494309f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.1399198f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[7 /* X8 */] <0.17841128f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[3 /* X4 */] <-0.62488616f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.042454503f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18710315f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.015871517f ? 
                             (data[8 /* X9 */] <-0.1333712f ? 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16125515f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[3 /* X4 */] <-0.36552715f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.35634765f ? 
             (data[34 /* X35 */] <-0.81640625f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14418676f ? 
                     (data[11 /* X12 */] <-0.10421077f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.11293822f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.008727244f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.150517f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17416447f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.5608028f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                 (data[25 /* X26 */] <-0.6045243f ? 
                     (data[15 /* X16 */] <0.11672215f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31080624f ? 
                         (data[26 /* X27 */] <-0.03482301f ? 
                             (data[31 /* X32 */] <0.058816787f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <-0.5041016f ? 
                                     (data[3 /* X4 */] <-0.2441112f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.2472618f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19208984f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28063613f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07971878f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11620003f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.36079937f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1544873f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[21 /* X22 */] <0.18666397f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2591709f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.022265624f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08149999f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.1392537f ? 
                             (data[23 /* X24 */] <0.07761316f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29059675f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23743339f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.85f ? 
                                 (data[24 /* X25 */] <-0.2726742f ? 
                                     (data[15 /* X16 */] <0.13134341f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.43123445f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.72265625f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79211646f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07493893f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14208253f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8552986f ? 
                    0.0f : 
                    1.0f)) : 
             (data[18 /* X19 */] <0.07544175f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.4381686f ? 
                     (data[2 /* X3 */] <-0.014200929f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.44987297f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3764926f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[27 /* X28 */] <-0.29346833f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.2755721f ? 
                 (data[21 /* X22 */] <0.11661799f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.638645f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21833491f ? 
                             (data[5 /* X6 */] <0.08048165f ? 
                                 (data[18 /* X19 */] <0.28731257f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <0.0390625f ? 
                     (data[12 /* X13 */] <0.14740682f ? 
                         (data[25 /* X26 */] <-0.1318295f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.2159013f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[26 /* X27 */] <0.1449066f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2757804f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.44735f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36197862f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08529757f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[3 /* X4 */] <-0.87850964f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.5118017f ? 
                 (data[20 /* X21 */] <0.21907888f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29243192f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.11542183f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[21 /* X22 */] <0.03248509f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2771018f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.101101935f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.52977735f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17101866f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.28906083f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.21348967f ? 
                 (data[33 /* X34 */] <-0.234375f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.19957529f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[30 /* X31 */] <0.13700955f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16706103f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18590207f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6471394f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21385063f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.6085315f ? 
         (data[30 /* X31 */] <0.15690315f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54214716f ? 
             (data[1 /* X2 */] <-0.76466763f ? 
                 (data[20 /* X21 */] <0.10418288f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.64277f ? 
                     (data[20 /* X21 */] <0.09357982f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.84375f ? 
                         (data[25 /* X26 */] <-0.14494875f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.469698f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30633232f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32118484f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12219278f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[15 /* X16 */] <0.18714179f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2868889f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15843011f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19619206f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05423336f ? 
                 (data[1 /* X2 */] <-0.39897585f ? 
                     (data[15 /* X16 */] <0.052090265f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.62590444f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.13076979f ? 
                             (data[2 /* X3 */] <-0.30208966f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22605026f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.1809182f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5354412f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27799985f ? 
                 (data[28 /* X29 */] <0.20624174f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21434592f ? 
                         (data[17 /* X18 */] <-0.5592579f ? 
                             (data[4 /* X5 */] <0.16524811f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7f ? 
                                 (data[16 /* X17 */] <-0.6909724f ? 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06470785f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[15 /* X16 */] <0.061580665f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.19140884f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.20134509f ? 
                1.0f : 
                 (data[11 /* X12 */] <0.9468252f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.036370587f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.048054464f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.109109804f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39306897f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.14021175f ? 
                        0.0f : 
                        1.0f))) : 
             (data[17 /* X18 */] <-0.17525558f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26667738f ? 
                     (data[12 /* X13 */] <0.12243138f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.06661659f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13205093f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.13522543f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.36324114f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.009365065f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20072018f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[2 /* X3 */] <-0.34211412f ? 
             (data[35 /* X36 */] <-0.146875f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.27290517f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3000778f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7673997f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.77157766f ? 
                     (data[24 /* X25 */] <-0.67722327f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.17531298f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                 (data[23 /* X24 */] <0.06652556f ? 
                                     (data[30 /* X31 */] <0.08790076f ? 
                                         (data[24 /* X25 */] <-0.037689105f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3323983f ? 
                                     (data[4 /* X5 */] <0.17956834f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13372767f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.008400231f ? 
                 (data[8 /* X9 */] <0.17277315f ? 
                     (data[17 /* X18 */] <-0.09759107f ? 
                         (data[26 /* X27 */] <-0.12643343f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.726403f ? 
             (data[3 /* X4 */] <-0.5023015f ? 
                 (data[30 /* X31 */] <0.18020709f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.11567345f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4625f ? 
                            1.0f : 
                             (data[26 /* X27 */] <-0.28923744f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24291424f ? 
                     (data[0 /* X1 */] <-0.026762143f ? 
                         (data[31 /* X32 */] <0.12512152f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16630481f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467485f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.13572223f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24054582f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[10 /* X11 */] <-0.15274362f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.6037509f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20407942f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15939406f ? 
             (data[4 /* X5 */] <0.115761526f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5660504f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.31082034f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22267139f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.162194f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.026998531f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0035086654f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.59992015f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28251708f ? 
                 (data[9 /* X10 */] <-0.1767177f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2313469f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26550984f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49964237f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.21156782f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[26 /* X27 */] <0.5790506f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1491856f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17206426f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37876138f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34250778f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[9 /* X10 */] <-0.17210744f ? 
             (data[29 /* X30 */] <0.11423442f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22301078f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32741416f ? 
                     (data[32 /* X33 */] <-0.46352026f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20548353f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.24217497f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.188321f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.85881114f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19664487f ? 
                     (data[0 /* X1 */] <-0.08548826f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.3055462f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2386368f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <-0.08843135f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2519327f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[9 /* X10 */] <0.2935281f ? 
             (data[4 /* X5 */] <0.16234615f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.66672504f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.076556936f ? 
             (data[3 /* X4 */] <-0.34091234f ? 
                 (data[31 /* X32 */] <0.15129444f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.39914435f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30490884f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.7627206f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09578417f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43531594f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5791008f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43282306f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25881934f ? 
                     (data[3 /* X4 */] <-0.4898809f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30985835f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.3f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20385104f ? 
                             (data[12 /* X13 */] <0.12096537f ? 
                                 (data[16 /* X17 */] <-0.2690932f ? 
                                    1.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.28617403f ? 
                                         (data[34 /* X35 */] <-0.45f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.040464792f ? 
                                    0.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2648536f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[13 /* X14 */] <0.20504719f ? 
                                 (data[21 /* X22 */] <0.10765587f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21920352f ? 
                                    0.0f : 
                                     (data[10 /* X11 */] <-0.41286597f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19142802f ? 
             (data[31 /* X32 */] <0.016067686f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28798345f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.078125f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.1896282f ? 
                 (data[27 /* X28 */] <-0.20671572f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.20245731f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.19536647f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.116503865f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15720867f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5839895f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24722004f ? 
             (data[15 /* X16 */] <0.11387614f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3203125f ? 
                     (data[13 /* X14 */] <0.108016886f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.01798825f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3467546f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (data[9 /* X10 */] <-0.48560464f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.57405275f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.11011491f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.19920702f ? 
             (data[15 /* X16 */] <0.07523392f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.0063903495f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.15145569f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[16 /* X17 */] <-0.20983045f ? 
            0.0f : 
             (data[31 /* X32 */] <0.054236524f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19888903f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.11148714f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15834555f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.011649036f ? 
                 (data[4 /* X5 */] <0.14681794f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.09343933f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.71875f ? 
                            1.0f : 
                             (data[16 /* X17 */] <-0.37669083f ? 
                                 (data[10 /* X11 */] <0.023507006f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22325623f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21049134f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05977703f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
                         (data[1 /* X2 */] <-0.6217858f ? 
                             (data[10 /* X11 */] <-0.29915413f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8176411f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36898613f ? 
                     (data[33 /* X34 */] <-0.328125f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.15246457f ? 
                             (data[28 /* X29 */] <0.3139821f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.360533f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[13 /* X14 */] <0.23235357f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.190936f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24422215f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[17 /* X18 */] <0.014051647f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
            0.0f : 
             (data[14 /* X15 */] <0.10196867f ? 
                 (data[3 /* X4 */] <-0.70364225f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.29045984f ? 
                     (data[30 /* X31 */] <0.19157486f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10857331f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.35481313f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38041425f ? 
                                1.0f : 
                                 (data[10 /* X11 */] <-0.079018444f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (data[33 /* X34 */] <0.453125f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
        0.04761905f : 
         (data[1 /* X2 */] <-0.16291524f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5057518f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1609345f ? 
                     (data[32 /* X33 */] <-0.12002883f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30771062f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.10308569f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.29758462f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21977955f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X10 */] <-0.61469173f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43815777f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7367188f ? 
                         (data[7 /* X8 */] <0.067699954f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3288758f ? 
                                 (data[16 /* X17 */] <-0.22625957f ? 
                                     (data[16 /* X17 */] <-0.27992326f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5012457f ? 
                                        0.0f : 
                                         (data[19 /* X20 */] <0.16692491f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09398136f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6288289f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18566006f ? 
                     (data[28 /* X29 */] <0.068422005f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3962707f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.08548826f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21399589f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34286833f ? 
                             (data[26 /* X27 */] <-0.24582304f ? 
                                1.0f : 
                                 (data[12 /* X13 */] <0.14005895f ? 
                                     (data[10 /* X11 */] <-0.17420769f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[27 /* X28 */] <-0.31497574f ? 
                                         (data[3 /* X4 */] <0.17926842f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f))) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.17801262f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.24192649f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.11650636f ? 
             (data[31 /* X32 */] <0.0637811f ? 
                 (data[19 /* X20 */] <-0.2909681f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08540904f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.17367198f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.094948776f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[8 /* X9 */] <-0.16498393f ? 
             (data[1 /* X2 */] <-0.4349403f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.08817047f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.14755382f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (data[10 /* X11 */] <-0.9009733f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.11567345f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18173306f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.124249764f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                             (data[5 /* X6 */] <0.12502554f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                    0.0f : 
                                     (data[17 /* X18 */] <-0.23738718f ? 
                                         (data[16 /* X17 */] <0.4317181f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[14 /* X15 */] <0.21839759f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.03828305f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.3671875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[6 /* X7 */] <0.17531298f ? 
                 (data[33 /* X34 */] <-0.4140625f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.13501854f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.3984375f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.08548826f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.44010967f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.415f ? 
                                 (data[12 /* X13 */] <0.2504229f ? 
                                    0.0f : 
                                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32230997f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[26 /* X27 */] <0.188321f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24227531f ? 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-9.9124416E-5f ? 
                                         (data[33 /* X34 */] <-0.18867187f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                     (data[20 /* X21 */] <0.10762921f ? 
                                        0.0f : 
                                        1.0f))))))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14336523f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10249982f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16079222f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1385244f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.19157486f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2784901f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06461511f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26462108f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17578393f ? 
                 (data[16 /* X17 */] <-0.27077442f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.109375f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19199091f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23707698f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4727121f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3060125f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.15707362f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05025841f ? 
                 (data[28 /* X29 */] <0.19887966f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.3125f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16654652f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[24 /* X25 */] <-0.1285468f ? 
                     (data[17 /* X18 */] <-0.019926572f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[30 /* X31 */] <0.03981507f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42730376f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.28706646f ? 
             (data[25 /* X26 */] <-0.11648226f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27405334f ? 
                     (data[0 /* X1 */] <0.002600917f ? 
                        1.0f : 
                         (data[33 /* X34 */] <0.0625f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.32022932f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33186153f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.43203124f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.19267102f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.21555847f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14848539f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[30 /* X31 */] <0.15292443f ? 
             (data[27 /* X28 */] <-0.49003074f ? 
                 (data[29 /* X30 */] <0.10224452f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[29 /* X30 */] <0.08340325f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32067743f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17633021f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.21550967f ? 
                     (data[7 /* X8 */] <0.080872275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.10740758f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.120810464f ? 
        0.0f : 
         (data[23 /* X24 */] <0.097882666f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22990914f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.015687056f ? 
                     (data[33 /* X34 */] <-0.703125f ? 
                         (data[15 /* X16 */] <0.059463333f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5383248f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07387424f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5751806f ? 
                 (data[25 /* X26 */] <-0.6045243f ? 
                     (data[2 /* X3 */] <0.1265618f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06335891f ? 
                 (data[29 /* X30 */] <0.097105995f ? 
                     (data[15 /* X16 */] <0.045304976f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26820788f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.45532352f ? 
                 (data[24 /* X25 */] <-0.37107515f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11763923f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20329152f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3154925f ? 
                 (data[5 /* X6 */] <0.2551272f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10188537f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <0.0078125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[32 /* X33 */] <0.4038523f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12784787f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24649619f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <1.4066467f ? 
                         (data[35 /* X36 */] <-0.4750641f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21824457f ? 
                                0.0f : 
                                1.0f) : 
                             (data[13 /* X14 */] <0.104053415f ? 
                                 (data[28 /* X29 */] <0.2463651f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3849721f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.22874409f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16768694f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[13 /* X14 */] <0.10292876f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.08660788f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16972657f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.6167608f ? 
                 (data[6 /* X7 */] <0.085762545f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8828125f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2692652f ? 
                         (data[5 /* X6 */] <0.06273659f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28826806f ? 
                                 (data[15 /* X16 */] <0.0735993f ? 
                                     (data[10 /* X11 */] <-0.22018969f ? 
                                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16478677f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[16 /* X17 */] <0.20837128f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (data[7 /* X8 */] <0.103043586f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25640222f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10144786f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[31 /* X32 */] <0.09788102f ? 
                 (data[22 /* X23 */] <0.1995367f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.18554352f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.83623904f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.83984375f ? 
             (data[35 /* X36 */] <-0.79052734f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <0.37237966f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.116258174f ? 
                 (data[24 /* X25 */] <0.081306204f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.13574418f ? 
                     (data[6 /* X7 */] <0.11544527f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[30 /* X31 */] <0.20180586f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.28313813f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25543562f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.3036298f ? 
                    0.0f : 
                    1.0f))) : 
         (data[20 /* X21 */] <0.16523746f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28374848f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.043810662f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19481422f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.09068637f ? 
                     (data[15 /* X16 */] <0.23963536f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[34 /* X35 */] <-0.53125f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.035697374f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1765625f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2147547f ? 
             (data[24 /* X25 */] <-0.33093807f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09227688f ? 
                     (data[28 /* X29 */] <0.21579826f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.09741001f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38732776f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27165112f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[33 /* X34 */] <0.21875f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3262992f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5138487f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11372626f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21753494f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36886168f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15129444f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.09984405f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3252579f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2705996f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.258502f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38409024f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (data[15 /* X16 */] <0.14633562f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26263592f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.2371039f ? 
         (data[27 /* X28 */] <-0.256808f ? 
             (data[23 /* X24 */] <0.09230786f ? 
                 (data[6 /* X7 */] <0.10658823f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.068413526f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27434102f ? 
                         (data[31 /* X32 */] <0.07486852f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.6558427f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[14 /* X15 */] <0.14021175f ? 
             (data[12 /* X13 */] <0.08794265f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.47378916f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.02142064f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.13601771f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.582222f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7454959f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27544844f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.08034357f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102646865f ? 
            0.0f : 
             (data[23 /* X24 */] <0.10490902f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16868176f ? 
                     (data[10 /* X11 */] <-0.13166673f ? 
                         (data[17 /* X18 */] <-0.31934097f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.16630481f ? 
                                 (data[15 /* X16 */] <0.10800253f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17724939f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (data[15 /* X16 */] <0.078325294f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49071565f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43366158f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                             (data[0 /* X1 */] <-0.12072393f ? 
                                 (data[11 /* X12 */] <-0.43224236f ? 
                                     (data[34 /* X35 */] <-0.10087891f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3283397f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.24375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[27 /* X28 */] <-0.30813247f ? 
             (data[17 /* X18 */] <-0.26586416f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18103527f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.11285118f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.41441894f ? 
                         (data[2 /* X3 */] <0.3786958f ? 
                            1.0f : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.11973726f ? 
                             (data[20 /* X21 */] <0.11882244f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27512482f ? 
                 (data[27 /* X28 */] <-0.17386399f ? 
                     (data[17 /* X18 */] <-0.27880824f ? 
                         (data[10 /* X11 */] <-0.13459145f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.234989f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28621888f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12993275f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39807004f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006294766f ? 
                         (data[10 /* X11 */] <-0.5742815f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18365043f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.053970877f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <-0.022174116f ? 
                                     (data[15 /* X16 */] <0.088217705f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.059867263f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3447494f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15454504f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.38913265f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33567074f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20300122f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53556526f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.13168667f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2439407f ? 
             (data[23 /* X24 */] <0.047546044f ? 
                 (data[18 /* X19 */] <0.07544175f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.08926489f ? 
                     (data[7 /* X8 */] <0.044803593f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.07206247f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14233288f ? 
                         (data[33 /* X34 */] <-0.8125f ? 
                             (data[26 /* X27 */] <0.14074205f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17462946f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f) : 
         (data[5 /* X6 */] <0.097659625f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15247263f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.94721574f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3547979f ? 
                     (data[19 /* X20 */] <-0.69972193f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.061327036f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.39547592f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47051463f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.578569f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08870075f ? 
                                    0.0f : 
                                     (data[21 /* X22 */] <0.17739573f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28987113f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12782417f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.40470508f ? 
                     (data[21 /* X22 */] <0.21827991f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2389551f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.30548027f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <6.384727E-5f ? 
             (data[11 /* X12 */] <-0.43668133f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16281757f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24708746f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19901411f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.2712501f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.08627839f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18130448f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1688393f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.06138859f ? 
         (data[8 /* X9 */] <0.12285831f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09227688f ? 
                 (data[33 /* X34 */] <-0.640625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0392675f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14119358f ? 
                 (data[33 /* X34 */] <-0.421875f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5629455f ? 
                         (data[31 /* X32 */] <0.055766337f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.21164118f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.28758654f ? 
             (data[20 /* X21 */] <0.12346394f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.703125f ? 
                     (data[16 /* X17 */] <-0.7057735f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.11442863f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.32634506f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.15276715f ? 
                        0.0f : 
                        1.0f))) : 
             (data[28 /* X29 */] <0.0534785f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3887791f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4629369f ? 
                         (data[12 /* X13 */] <0.17224844f ? 
                             (data[27 /* X28 */] <0.8112297f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18604717f ? 
             (data[20 /* X21 */] <0.011627948f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4395884f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07997242f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15100995f ? 
                 (data[15 /* X16 */] <0.081416674f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.12361618f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0962111f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.20430677f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.1485681f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14610377f ? 
             (data[19 /* X20 */] <-0.19503607f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17608052f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.7768847f ? 
             (data[23 /* X24 */] <0.12300299f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22852013f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15949535f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.19441359f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.71281993f ? 
             (data[17 /* X18 */] <-0.864528f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55878127f ? 
                     (data[33 /* X34 */] <-0.734375f ? 
                         (data[9 /* X10 */] <-0.26503286f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.09634252f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.31142524f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18651484f ? 
                         (data[30 /* X31 */] <0.15519798f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[20 /* X21 */] <0.16152427f ? 
             (data[7 /* X8 */] <0.10935495f ? 
                 (data[8 /* X9 */] <0.15515338f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.061538696f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.38305706f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.53348464f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17324366f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.22108889f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X4 */] <-0.15461992f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47566113f ? 
                            0.0f : 
                            1.0f) : 
                         (data[25 /* X26 */] <-0.2300518f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15479676f ? 
                 (data[1 /* X2 */] <-0.3360221f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23915526f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <0.08145646f ? 
                     (data[28 /* X29 */] <0.22280644f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1175852f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08967902f ? 
             (data[32 /* X33 */] <-0.9291549f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10758737f ? 
             (data[6 /* X7 */] <0.058689155f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17366152f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3781221f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.19424227f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27479964f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.26320183f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.082904525f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.015347119f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37554562f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36302692f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.15947346f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.27007663f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.05096491f ? 
         (data[35 /* X36 */] <-0.1487793f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.062019728f ? 
             (data[32 /* X33 */] <-0.27663386f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28757513f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.310948f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3000778f ? 
                 (data[22 /* X23 */] <0.09398468f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.27429932f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                             (data[33 /* X34 */] <-0.35f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.14258693f ? 
                                    1.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17161548f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.5546548f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25580806f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.19273908f ? 
                     (data[16 /* X17 */] <-0.2445798f ? 
                         (data[23 /* X24 */] <0.11101452f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1799456f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[29 /* X30 */] <0.06284915f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27802205f ? 
                 (data[10 /* X11 */] <-0.30028188f ? 
                     (data[28 /* X29 */] <0.075104624f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[24 /* X25 */] <0.13154867f ? 
                     (data[16 /* X17 */] <-0.24604726f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.103946194f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2539545f ? 
                 (data[17 /* X18 */] <-0.32411253f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.51326746f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20917961f ? 
                         (data[16 /* X17 */] <-0.57149434f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47446474f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17381366f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[11 /* X12 */] <0.04425785f ? 
                             (data[12 /* X13 */] <0.26268554f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.39186355f ? 
             (data[34 /* X35 */] <-0.90625f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17117772f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42652735f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.05859842f ? 
                     (data[24 /* X25 */] <0.087885104f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (data[25 /* X26 */] <-0.60145485f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23785353f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.26549518f ? 
                 (data[31 /* X32 */] <0.11203506f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1845211f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.20793928f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[23 /* X24 */] <0.08748805f ? 
             (data[24 /* X25 */] <-0.35292444f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.49062645f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7454959f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.5768993f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.112191536f ? 
             (data[32 /* X33 */] <-0.635654f ? 
                 (data[31 /* X32 */] <0.05750814f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.046067346f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.6371243f ? 
                 (data[5 /* X6 */] <0.39082086f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5410156f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21357723f ? 
                 (data[27 /* X28 */] <-0.20548353f ? 
                     (data[29 /* X30 */] <0.14163989f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.20184007f ? 
                             (data[13 /* X14 */] <0.17769788f ? 
                                 (data[2 /* X3 */] <-0.06455951f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.59072673f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[7 /* X8 */] <0.044410694f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4546386f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.6587869f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.740982f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1842198f ? 
                     (data[33 /* X34 */] <0.390625f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0171875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4062418f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.063166834f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.1324717f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12457625f ? 
        0.0091743115f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0084932f ? 
             (data[22 /* X23 */] <0.10266019f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.47806108f ? 
                        0.0f : 
                        1.0f) : 
                     (data[24 /* X25 */] <0.07031302f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.26106393f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20915473f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09779597f ? 
             (data[0 /* X1 */] <0.12739392f ? 
                 (data[16 /* X17 */] <-0.6574534f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38349298f ? 
                         (data[35 /* X36 */] <-0.5125f ? 
                             (data[19 /* X20 */] <-0.28596294f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1748563f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.3064634f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26794025f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22874409f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07616855f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4507925f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06315382f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4732128f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27787912f ? 
                    0.0f : 
                    1.0f))) : 
         (data[14 /* X15 */] <0.14021175f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09067697f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.37890625f ? 
                 (data[10 /* X11 */] <-0.5742815f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.078065194f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.41116387f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18566006f ? 
                 (data[25 /* X26 */] <-0.5861077f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.21827991f ? 
                     (data[0 /* X1 */] <-0.026762143f ? 
                         (data[20 /* X21 */] <0.2049462f ? 
                             (data[32 /* X33 */] <-0.28409126f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.21408783f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30781934f ? 
                             (data[22 /* X23 */] <0.16191562f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1774672f ? 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17925332f ? 
                                        1.0f : 
                                         (data[4 /* X5 */] <0.17053375f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16457613f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2617191f ? 
             (data[22 /* X23 */] <0.11567345f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.41453207f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[6 /* X7 */] <0.16177629f ? 
             (data[11 /* X12 */] <-0.10421077f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.047486857f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32420596f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.15502615f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22790144f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34417483f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.86125f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
         (data[25 /* X26 */] <-0.6045243f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22649425f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37419412f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6196814f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39526924f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5604991f ? 
                             (data[10 /* X11 */] <-0.62486607f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24060078f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26250976f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.14257012f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2836154f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                             (data[21 /* X22 */] <0.1777422f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6540938f ? 
             (data[8 /* X9 */] <0.5719359f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2234883f ? 
         (data[2 /* X3 */] <-0.26533446f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.050006304f ? 
                 (data[16 /* X17 */] <-0.38005325f ? 
                     (data[6 /* X7 */] <0.13782676f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.5532046f ? 
                         (data[16 /* X17 */] <-0.2783776f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.21677735f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17951714f ? 
                 (data[33 /* X34 */] <-0.421875f ? 
                     (data[30 /* X31 */] <0.11882111f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.16583936f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.92882586f ? 
                     (data[27 /* X28 */] <-0.5767631f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.49773815f ? 
                            1.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6658794f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33307767f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.11822143f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48961222f ? 
             (data[9 /* X10 */] <-0.28275353f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X9 */] <0.07876687f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4609375f ? 
             (data[3 /* X4 */] <-0.24867803f ? 
                 (data[34 /* X35 */] <0.15103945f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.29037377f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[14 /* X15 */] <0.21032405f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32796162f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0701611f ? 
             (data[22 /* X23 */] <0.13157855f ? 
                 (data[11 /* X12 */] <-0.3041867f ? 
                     (data[20 /* X21 */] <0.15454058f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20179209f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35579124f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.35634765f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17930135f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.34243566f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14589472f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29922137f ? 
                 (data[4 /* X5 */] <0.07661412f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.875f ? 
                         (data[33 /* X34 */] <-0.415f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2248499f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.24198063f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[31 /* X32 */] <0.11465235f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24566059f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.71375f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[16 /* X17 */] <-0.5649867f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-0.359375f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6943829f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[3 /* X4 */] <-0.54879916f ? 
             (data[27 /* X28 */] <0.39085788f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.841604f ? 
                 (data[30 /* X31 */] <0.26541364f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.48962033f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2223415f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19125f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[29 /* X30 */] <0.21357927f ? 
                 (data[17 /* X18 */] <-0.29822436f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.54817456f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.599619f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.236364f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[9 /* X10 */] <-0.16519207f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17224964f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.07713783f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21308278f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.051299658f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15069835f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10941726f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[19 /* X20 */] <0.017682781f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34197745f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4013103f ? 
             (data[10 /* X11 */] <-0.60589683f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1675908f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.861292f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1845211f ? 
                         (data[8 /* X9 */] <0.079598784f ? 
                             (data[16 /* X17 */] <-0.37669083f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                    0.0f : 
                                     (data[32 /* X33 */] <0.0499995f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.14849126f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[28 /* X29 */] <0.23845086f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.082128905f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.87631667f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16231966f ? 
                     (data[5 /* X6 */] <0.09021701f ? 
                         (data[33 /* X34 */] <-0.6875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.1896149f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34191847f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <0.031963978f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21978705f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2518451f ? 
                                    0.0f : 
                                    1.0f))))) : 
                1.0f) : 
             (data[30 /* X31 */] <0.14610377f ? 
                 (data[4 /* X5 */] <0.07708109f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20242871f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.017897418f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.01562547f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.85887f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.16149114f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9924059f ? 
             (data[11 /* X12 */] <-0.53362924f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24459559f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <-0.953125f ? 
                     (data[19 /* X20 */] <-0.5161998f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                         (data[33 /* X34 */] <-0.39f ? 
                             (data[29 /* X30 */] <0.21353261f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20837128f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (data[24 /* X25 */] <-0.526067f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.25419018f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.40585938f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17929384f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.030540233f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25645703f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49839488f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <0.18757825f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3215402f ? 
                                 (data[8 /* X9 */] <0.14708894f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09478459f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2749482f ? 
                                0.0f : 
                                1.0f)))))) : 
        0.03773585f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40231293f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11486173f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.18671377f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.6164321f ? 
             (data[15 /* X16 */] <0.14324424f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.878125f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.21597432f ? 
                     (data[14 /* X15 */] <0.15720867f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (data[19 /* X20 */] <-0.68720907f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19326858f ? 
             (data[19 /* X20 */] <-0.37021628f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.30487904f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.23046817f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.11998136f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.28369224f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[21 /* X22 */] <0.0976765f ? 
                 (data[35 /* X36 */] <-0.5101563f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.62182647f ? 
        0.6666667f : 
         (data[5 /* X6 */] <0.13659021f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3586027f ? 
                     (data[16 /* X17 */] <-0.38005325f ? 
                         (data[13 /* X14 */] <0.23016743f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.44593123f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5501878f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7185087f ? 
                                 (data[25 /* X26 */] <-0.5836521f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.18499246f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31081733f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15422145f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.045864966f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4137398f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.015031792f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
             (data[3 /* X4 */] <-0.33233964f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48852777f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6434519f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22175188f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29823968f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-0.285715f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[34 /* X35 */] <-0.571429f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[19 /* X20 */] <-0.46950212f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.033607192f ? 
                                 (data[33 /* X34 */] <-0.65f ? 
                                     (data[21 /* X22 */] <0.1691289f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[26 /* X27 */] <0.188321f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[19 /* X20 */] <-0.60797507f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.1319615f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23263769f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.5208542f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13175718f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6359878f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27618712f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1933581f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.2959926f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[11 /* X12 */] <-0.3294328f ? 
             (data[19 /* X20 */] <-0.38272917f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.46875f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1749704f ? 
                     (data[19 /* X20 */] <-0.43278065f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.17929384f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.7499201f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7367188f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.040059533f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3600755f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10780823f ? 
                                     (data[3 /* X4 */] <-0.14704022f ? 
                                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0714295f ? 
                                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.024148673f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                     (data[1 /* X2 */] <0.19616483f ? 
                                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3117032f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14946392f ? 
                                 (data[35 /* X36 */] <-0.18111336f ? 
                                     (data[12 /* X13 */] <0.115272366f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14645566f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
             (data[3 /* X4 */] <-0.48539326f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09042086f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (data[1 /* X2 */] <-0.762959f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.100876495f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.09634252f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.17769788f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2203214f ? 
                                         (data[19 /* X20 */] <-0.25305575f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f)))) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2329289f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
                    1.0f : 
                     (data[27 /* X28 */] <0.17700593f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[2 /* X3 */] <-0.6716269f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.83987427f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.81551206f ? 
                     (data[9 /* X10 */] <-0.37956885f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.030540233f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.12633906f ? 
                             (data[1 /* X2 */] <-0.38072842f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.006535948f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[14 /* X15 */] <0.1476479f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37074628f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24812964f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.47415173f ? 
                     (data[0 /* X1 */] <-0.6433864f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.622941f ? 
                             (data[22 /* X23 */] <0.18507752f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64822423f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.03736235f ? 
                                    0.0f : 
                                     (data[1 /* X2 */] <0.08420746f ? 
                                         (data[12 /* X13 */] <0.1891096f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                 (data[19 /* X20 */] <0.1853668f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1472571f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.114273995f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16370994f ? 
                 (data[6 /* X7 */] <0.3144216f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[11 /* X12 */] <-0.17928477f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0390625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35024872f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5558806f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31786752f ? 
                            0.0f : 
                            1.0f) : 
                         (data[14 /* X15 */] <0.17825842f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.4811662f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0779519f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.107498504f ? 
                         (data[22 /* X23 */] <0.19664487f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20430677f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.30090022f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35266206f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                             (data[5 /* X6 */] <0.1689942f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.40983745f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[11 /* X12 */] <1.0728424f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.02227423f ? 
             (data[11 /* X12 */] <-0.6726282f ? 
                 (data[9 /* X10 */] <-0.20589228f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.31244165f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4625f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3166196f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.19448814f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.033607192f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22636719f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.13787462f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[12 /* X13 */] <0.08985869f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.41490507f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26873332f ? 
             (data[4 /* X5 */] <0.12513775f ? 
                 (data[35 /* X36 */] <-0.19257812f ? 
                     (data[30 /* X31 */] <0.122756965f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.46875f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15308803f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[30 /* X31 */] <0.1688393f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25344262f ? 
                             (data[27 /* X28 */] <-0.09721097f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18366726f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28220332f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.387659f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <0.12219278f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[0 /* X1 */] <0.20019074f ? 
                                 (data[4 /* X5 */] <0.13749093f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (data[12 /* X13 */] <0.1751225f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.30859375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54214716f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4116845f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6778758f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                         (data[3 /* X4 */] <-0.50652856f ? 
                             (data[7 /* X8 */] <0.06407954f ? 
                                1.0f : 
                                0.0f) : 
                             (data[35 /* X36 */] <-0.5125f ? 
                                 (data[2 /* X3 */] <0.13495906f ? 
                                     (data[21 /* X22 */] <0.19957021f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.17640202f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[35 /* X36 */] <-0.49345702f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30143416f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23431993f ? 
             (data[22 /* X23 */] <0.16555762f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5451331f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.102213755f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.10972688f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.73339236f ? 
             (data[28 /* X29 */] <0.12709934f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[33 /* X34 */] <-0.5800781f ? 
             (data[27 /* X28 */] <-0.16637918f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6722709f ? 
                     (data[18 /* X19 */] <0.044705316f ? 
                         (data[17 /* X18 */] <-0.04581474f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.6659133f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4111874f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37665877f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36625f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.18214935f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[9 /* X10 */] <-0.28736377f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.43164062f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0059821703f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06860856f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52419364f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30771062f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.77849704f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (data[9 /* X10 */] <-0.74838907f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.33450246f ? 
                             (data[33 /* X34 */] <0.217779f ? 
                                 (data[4 /* X5 */] <0.15246457f ? 
                                    0.0f : 
                                     (data[3 /* X4 */] <-0.17463702f ? 
                                        0.0f : 
                                         (data[12 /* X13 */] <0.14827888f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.56162083f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2751498f ? 
                                         (data[7 /* X8 */] <0.2395484f ? 
                                             (data[34 /* X35 */] <-0.79642624f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1791014f ? 
                                 (data[21 /* X22 */] <0.12666647f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25512323f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[33 /* X34 */] <0.48046875f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28151178f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56438345f ? 
             (data[25 /* X26 */] <-0.61776555f ? 
                 (data[34 /* X35 */] <0.0234375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24315074f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.34702036f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.71661943f ? 
                        0.0f : 
                        1.0f))) : 
             (data[26 /* X27 */] <-0.03146442f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1695598f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09493308f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16906528f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04832666f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.078125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.081086315f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.11858484f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.20290515f ? 
                    0.0f : 
                    1.0f))) : 
         (data[31 /* X32 */] <0.09567698f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26961392f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5660504f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.25092828f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46875f ? 
                            0.0f : 
                             (data[2 /* X3 */] <-0.11913315f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15283445f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48784146f ? 
                 (data[3 /* X4 */] <-0.8869638f ? 
                     (data[16 /* X17 */] <0.1972234f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[35 /* X36 */] <-0.9352539f ? 
             (data[29 /* X30 */] <0.1339321f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.036030065f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7317668f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                         (data[3 /* X4 */] <-0.57416147f ? 
                             (data[26 /* X27 */] <-0.21644823f ? 
                                1.0f : 
                                0.0f) : 
                             (data[0 /* X1 */] <0.16116144f ? 
                                0.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29998282f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8136355f ? 
                                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                                            0.0f : 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2068404f ? 
                                                0.0f : 
                                                 (data[8 /* X9 */] <0.21375671f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                         (data[19 /* X20 */] <-0.3019778f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[33 /* X34 */] <0.55f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f) : 
                    1.0f))) : 
         (data[31 /* X32 */] <0.17910317f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.052628387f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2652141f ? 
                     (data[4 /* X5 */] <0.15189196f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2733375f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[35 /* X36 */] <-0.46870118f ? 
             (data[13 /* X14 */] <0.114734404f ? 
                 (data[29 /* X30 */] <0.13478853f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31850183f ? 
                     (data[10 /* X11 */] <-0.2370512f ? 
                         (data[0 /* X1 */] <0.18061447f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17021939f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <0.010416016f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15115343f ? 
             (data[17 /* X18 */] <-0.6121184f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3828125f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17181377f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X5 */] <0.13623053f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2609167f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X5 */] <0.15881701f ? 
            1.0f : 
             (data[29 /* X30 */] <0.121085785f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.83824575f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[35 /* X36 */] <-0.16972657f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2915136f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14289537f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52419364f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26820788f ? 
             (data[27 /* X28 */] <-0.18593135f ? 
                 (data[28 /* X29 */] <0.19096406f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.99830407f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.21919423f ? 
                         (data[29 /* X30 */] <0.20964706f ? 
                             (data[3 /* X4 */] <0.22390705f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.23704596f ? 
                             (data[35 /* X36 */] <-0.36625f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.699176f ? 
                 (data[10 /* X11 */] <0.110717535f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.17044921f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.1703125f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.4111328f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.655318f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23830411f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5692715f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18394275f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22786725f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.2535317f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18432355f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63237065f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.2371039f ? 
         (data[27 /* X28 */] <-0.3008004f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.20218039f ? 
                 (data[14 /* X15 */] <0.08461969f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5787537f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17823367f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.060757454f ? 
             (data[34 /* X35 */] <-0.26171875f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29243192f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.03436661f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.9216174f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38472706f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.10424049f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8699785f ? 
             (data[3 /* X4 */] <-0.5657074f ? 
                 (data[13 /* X14 */] <0.16720396f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.47251996f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.42410094f ? 
             (data[11 /* X12 */] <-0.43668133f ? 
                 (data[34 /* X35 */] <-0.17994769f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.10196867f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.9296875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2421875f ? 
         (data[29 /* X30 */] <0.11123694f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20926175f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.026398614f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.955307f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.1276579f ? 
             (data[26 /* X27 */] <0.114380844f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10164498f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.9542969f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[30 /* X31 */] <0.15235604f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36074919f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37419412f ? 
                     (data[12 /* X13 */] <0.08794265f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.32186317f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X11 */] <-0.5742815f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19011591f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33353612f ? 
                                 (data[4 /* X5 */] <0.12025868f ? 
                                     (data[33 /* X34 */] <-0.6368164f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31020334f ? 
                                        0.0f : 
                                         (data[16 /* X17 */] <-0.2690932f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (data[13 /* X14 */] <0.21118669f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[17 /* X18 */] <0.0836261f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[26 /* X27 */] <-0.20783544f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.20066908f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.453125f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1341676f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08915859f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.085876144f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17688653f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.94921875f ? 
                 (data[11 /* X12 */] <-0.67254066f ? 
                     (data[27 /* X28 */] <-0.009961757f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.74838907f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.092010245f ? 
                             (data[17 /* X18 */] <-0.2923898f ? 
                                1.0f : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.115533635f ? 
                                 (data[24 /* X25 */] <-0.2726742f ? 
                                     (data[7 /* X8 */] <0.060963675f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (data[29 /* X30 */] <0.13136284f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17002864f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40515083f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28987113f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5424818f ? 
                             (data[30 /* X31 */] <0.20430677f ? 
                                 (data[6 /* X7 */] <0.2152983f ? 
                                    1.0f : 
                                     (data[34 /* X35 */] <-0.3f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42018616f ? 
             (data[6 /* X7 */] <0.12741391f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.17087966f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X6 */] <0.16140403f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <1.5672368E-4f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7452464f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.38489863f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.65312785f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30130792f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.09634252f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[31 /* X32 */] <0.0989486f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.58493304f ? 
                     (data[21 /* X22 */] <0.1316609f ? 
                         (data[13 /* X14 */] <0.5349949f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_11_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[16 /* X17 */] <-0.7183974f ? 
             (data[4 /* X5 */] <0.11364405f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43908605f ? 
                 (data[13 /* X14 */] <0.10424049f ? 
                     (data[23 /* X24 */] <0.07969208f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26165703f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.78125f ? 
                         (data[20 /* X21 */] <0.084228024f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6371696f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6750257f ? 
                                     (data[28 /* X29 */] <0.090610124f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20721766f ? 
                                            0.0f : 
                                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0046782214f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[24 /* X25 */] <-0.23055035f ? 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28596997f ? 
                                                 (data[6 /* X7 */] <0.10662366f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                 (data[12 /* X13 */] <0.19963102f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            0.0f)) : 
                                     (data[24 /* X25 */] <0.2962796f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1799456f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09528401f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.15260902f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.01953125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20609692f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3046875f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3139208f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24797496f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.06420997f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.10211304f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.1680782f ? 
                         (data[17 /* X18 */] <0.12913264f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14690462f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31562212f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[0 /* X1 */] <-0.09282903f ? 
             (data[35 /* X36 */] <-0.74482423f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18537071f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.46679688f ? 
                 (data[28 /* X29 */] <0.12709934f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17622836f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1580218f ? 
                 (data[32 /* X33 */] <0.41012993f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23033354f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.065945834f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[5 /* X6 */] <0.17723833f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.293917f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.44004568f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                         (data[33 /* X34 */] <-0.9375f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[3 /* X4 */] <0.40862948f ? 
                             (data[21 /* X22 */] <0.14413403f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.098972805f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1461519f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.03828305f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23016463f ? 
             (data[33 /* X34 */] <-0.40234375f ? 
                 (data[35 /* X36 */] <-0.48964843f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.11053516f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.109375f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20198041f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.322833f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[24 /* X25 */] <-0.33338475f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4494003f ? 
                             (data[11 /* X12 */] <-0.057021398f ? 
                                1.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24324474f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.2750451f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[2 /* X3 */] <-0.32387894f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.640625f ? 
                 (data[23 /* X24 */] <0.048508223f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.34288916f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27653226f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.625f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20212634f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.2241878f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.9045455f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0052148085f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2377925f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.640625f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18599601f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <0.0359375f ? 
                 (data[20 /* X21 */] <0.20736188f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.03183689f ? 
             (data[8 /* X9 */] <-0.03686918f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30548027f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.11869597f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.45322487f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.38721496f ? 
             (data[9 /* X10 */] <-0.42567137f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.73125f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08525955f ? 
                         (data[0 /* X1 */] <0.14941622f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12219278f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.6167608f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.575f ? 
                     (data[34 /* X35 */] <-0.453125f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19308648f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10069346f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19951588f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[25 /* X26 */] <-0.622941f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16427194f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3058507f ? 
                                 (data[34 /* X35 */] <0.128125f ? 
                                     (data[4 /* X5 */] <0.13910776f ? 
                                         (data[28 /* X29 */] <0.12857176f ? 
                                            0.0f : 
                                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21875f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33448303f ? 
                                            0.0f : 
                                             (data[1 /* X2 */] <-0.20777057f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[18 /* X19 */] <-0.061028007f ? 
                                1.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17928524f ? 
                                    0.0f : 
                                     (data[1 /* X2 */] <-0.3401572f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
        0.02f : 
         (data[25 /* X26 */] <-0.114947535f ? 
             (data[9 /* X10 */] <-0.16591294f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.18375f ? 
                     (data[12 /* X13 */] <0.19524093f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.14796807f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30141386f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30924407f ? 
                 (data[3 /* X4 */] <-0.6587026f ? 
                     (data[24 /* X25 */] <-0.08663579f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.13572223f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22654141f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.15200002f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2578125f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[5 /* X6 */] <0.16521566f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.059319843f ? 
                 (data[34 /* X35 */] <-0.9765625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23016463f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.12617908f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081306204f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.60448873f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06667377f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.15662801f ? 
                     (data[17 /* X18 */] <-0.23997599f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.119672365f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.080078125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1453258f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.19505821f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.17035158f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09229939f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.18536037f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7073144f ? 
                     (data[0 /* X1 */] <-0.46585986f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50553876f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.03379031f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19108573f ? 
                                    0.0f : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20044602f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[10 /* X11 */] <-0.14346786f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07488106f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[32 /* X33 */] <0.23792554f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[26 /* X27 */] <-0.05181492f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.14462166f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14117132f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24738316f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X10 */] <-0.25970227f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20607482f ? 
                     (data[24 /* X25 */] <-0.25516403f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2013845f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25632071f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08271834f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.77849704f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2459083f ? 
                         (data[9 /* X10 */] <-0.19737935f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.55f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.054749172f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42010725f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.22496599f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.076556936f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24878193f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4921875f ? 
                 (data[11 /* X12 */] <-0.4259565f ? 
                     (data[34 /* X35 */] <0.0625f ? 
                         (data[12 /* X13 */] <0.19215234f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4413776f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[14 /* X15 */] <0.14050533f ? 
             (data[6 /* X7 */] <0.12220749f ? 
                 (data[28 /* X29 */] <0.16943133f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.222999f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.47943547f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.13284127f ? 
                         (data[2 /* X3 */] <-0.33411625f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21198456f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15946253f ? 
                 (data[27 /* X28 */] <-0.16637918f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18939628f ? 
                         (data[35 /* X36 */] <-0.48203126f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17956494f ? 
                     (data[16 /* X17 */] <-0.90122926f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.5338585f ? 
                            1.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.45f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3206743f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.18507752f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))) : 
                     (data[16 /* X17 */] <-0.32961687f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.21399589f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.019416805f ? 
                                0.0f : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[20 /* X21 */] <0.15595445f ? 
                 (data[10 /* X11 */] <-0.9958194f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.026133426f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.054707497f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22492048f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04581474f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12473543f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.19924776f ? 
                                 (data[4 /* X5 */] <0.15246457f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.09701645f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16073501f ? 
             (data[22 /* X23 */] <0.13001424f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.10196867f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.6400939f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[26 /* X27 */] <-0.05520667f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08951295f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.9562012f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4848324f ? 
                 (data[5 /* X6 */] <0.15891805f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10421077f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.15946253f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.22499524f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.105577864f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17773438f ? 
            0.0f : 
             (data[26 /* X27 */] <0.07028809f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.097449556f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023437858f ? 
                 (data[31 /* X32 */] <0.06187029f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.079598784f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09746392f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[23 /* X24 */] <0.031594973f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.54793537f ? 
                 (data[30 /* X31 */] <0.19157486f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.047693297f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.70624125f ? 
             (data[2 /* X3 */] <-0.2413408f ? 
                 (data[5 /* X6 */] <0.09479708f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.03984995f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2997882f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.49404487f ? 
                                 (data[17 /* X18 */] <-0.15454504f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.04818321f ? 
                                        0.0f : 
                                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.2900495f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23936902f ? 
                     (data[16 /* X17 */] <-0.62702286f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1637578f ? 
                             (data[10 /* X11 */] <-0.119374745f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <0.7537778f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.0999659f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.0855029f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.85859376f ? 
                 (data[29 /* X30 */] <0.14849126f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.38088334f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43038982f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5148609f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.15834942f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[4 /* X5 */] <0.2518451f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[35 /* X36 */] <-0.4888867f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[6 /* X7 */] <0.2059698f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.79852057f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[16 /* X17 */] <-0.2434547f ? 
             (data[27 /* X28 */] <-0.259252f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1637578f ? 
                     (data[34 /* X35 */] <-0.171875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.62488616f ? 
                        0.0f : 
                        1.0f))) : 
             (data[23 /* X24 */] <0.03984604f ? 
                 (data[1 /* X2 */] <-0.05025841f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.080278486f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17877927f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79520935f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.13567606f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3763272f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8462907f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2840981f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17251599f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6029214f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1372222f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42441407f ? 
             (data[27 /* X28 */] <-0.11749873f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33349404f ? 
                 (data[24 /* X25 */] <-0.2211056f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.34552005f ? 
             (data[10 /* X11 */] <-0.30028188f ? 
                 (data[23 /* X24 */] <0.13166517f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17418128f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (data[34 /* X35 */] <-0.75f ? 
                         (data[35 /* X36 */] <-0.878125f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.10785971f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04466349f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.114734404f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[16 /* X17 */] <-0.5902049f ? 
             (data[11 /* X12 */] <-0.045224056f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.16288695f ? 
                 (data[7 /* X8 */] <0.07527359f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0024344036f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.65625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23212643f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.10710306f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17280492f ? 
             (data[15 /* X16 */] <0.050502896f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.3496022f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20905739f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27918345f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.75754654f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3790352f ? 
                 (data[10 /* X11 */] <-0.66605294f ? 
                     (data[34 /* X35 */] <-0.70238125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3036248f ? 
                         (data[12 /* X13 */] <0.10327098f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[24 /* X25 */] <0.15825847f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3794047f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.48725587f ? 
             (data[31 /* X32 */] <0.035697374f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10923908f ? 
                     (data[30 /* X31 */] <0.07920723f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.5470053f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2409085f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.45950034f ? 
                                 (data[5 /* X6 */] <0.095713094f ? 
                                     (data[32 /* X33 */] <-0.236364f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27843943f ? 
                                         (data[33 /* X34 */] <-0.6f ? 
                                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18623786f ? 
                                                0.0f : 
                                                 (data[9 /* X10 */] <-0.41291362f ? 
                                                    1.0f : 
                                                    0.0f)) : 
                                            0.0f) : 
                                        1.0f)) : 
                                1.0f))) : 
                     (data[10 /* X11 */] <-0.38458946f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.034950465f ? 
                             (data[23 /* X24 */] <0.06935494f ? 
                                0.0f : 
                                1.0f) : 
                             (data[15 /* X16 */] <0.18034077f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.027857857f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[4 /* X5 */] <0.1995285f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16330452f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
             (data[27 /* X28 */] <-0.73339236f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.74977344f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <1.4066546f ? 
                     (data[6 /* X7 */] <0.13366161f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08789632f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.15147395f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.07653586f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.5600144f ? 
                     (data[23 /* X24 */] <0.14607958f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.038410116f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30489892f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[14 /* X15 */] <0.13702482f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1381857f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07031302f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17080726f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.007821598f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.32260898f ? 
                                 (data[24 /* X25 */] <-0.08659061f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18069766f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[26 /* X27 */] <0.09063859f ? 
                 (data[9 /* X10 */] <-0.1674972f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44144785f ? 
                         (data[5 /* X6 */] <0.10853729f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.47168872f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4053237f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35749066f ? 
                 (data[7 /* X8 */] <0.06205833f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33691874f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70812887f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.077977225f ? 
                         (data[29 /* X30 */] <0.11843046f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26539698f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[11 /* X12 */] <-0.22985974f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[3 /* X4 */] <-0.54879916f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14511049f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <-0.841604f ? 
                 (data[30 /* X31 */] <0.26432863f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.08789632f ? 
             (data[15 /* X16 */] <0.09069081f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.18435897f ? 
                 (data[27 /* X28 */] <-0.4107814f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.21688771f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2660772f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[35 /* X36 */] <-0.89335936f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39359933f ? 
                         (data[3 /* X4 */] <-0.8108767f ? 
                             (data[24 /* X25 */] <0.119145654f ? 
                                0.0f : 
                                1.0f) : 
                             (data[5 /* X6 */] <0.12502554f ? 
                                 (data[35 /* X36 */] <-0.41414976f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47842613f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17793353f ? 
                 (data[11 /* X12 */] <-0.2221842f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07520688f ? 
                         (data[12 /* X13 */] <0.08794265f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.08340325f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33490965f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
         (data[10 /* X11 */] <-0.6085315f ? 
             (data[30 /* X31 */] <0.19043809f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6272776f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14281152f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21885753f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.16001874f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.01f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09921798f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2518451f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[20 /* X21 */] <0.16338086f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2071561f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[32 /* X33 */] <-0.3642581f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12106296f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.24848922f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10309545f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2147547f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.66723615f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4410562f ? 
                     (data[35 /* X36 */] <-0.42109376f ? 
                         (data[24 /* X25 */] <-0.32544148f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27158776f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[35 /* X36 */] <0.23398438f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.93610036f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.6160793f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39526924f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <0.11907601f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23830411f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3825535f ? 
                 (data[11 /* X12 */] <-0.68335307f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.65625f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.48203126f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[30 /* X31 */] <0.40168542f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15199156f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.027781747f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36333284f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[34 /* X35 */] <-0.53125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17633021f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28858355f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03698552f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15246457f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.14059778f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15946253f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08161348f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.23340827f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[1 /* X2 */] <-0.286563f ? 
             (data[32 /* X33 */] <-0.12002883f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35807163f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.705963f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79765624f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7017199f ? 
                         (data[16 /* X17 */] <-0.19950174f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28826806f ? 
                                    0.0f : 
                                     (data[22 /* X23 */] <0.24060078f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.22366454f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[31 /* X32 */] <0.15129444f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[25 /* X26 */] <-0.11649348f ? 
                 (data[9 /* X10 */] <-0.20183803f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.13601771f ? 
                         (data[24 /* X25 */] <-0.32544148f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.6502485f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14550453f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19087397f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35068366f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4727121f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13838722f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13946114f ? 
         (data[27 /* X28 */] <-0.3008004f ? 
             (data[13 /* X14 */] <0.2118031f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08953378f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.80078125f ? 
                 (data[26 /* X27 */] <0.1652571f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.098748885f ? 
         (data[32 /* X33 */] <-0.88627493f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37183526f ? 
                 (data[26 /* X27 */] <-0.16035093f ? 
                     (data[24 /* X25 */] <-0.061605144f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.2078125f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.21591f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.6659133f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6305136f ? 
                 (data[20 /* X21 */] <0.12996204f ? 
                     (data[29 /* X30 */] <0.18274811f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.039583024f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2439407f ? 
             (data[13 /* X14 */] <0.12095605f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.29900602f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2356037f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21126826f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.06405137f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5333277f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6652662f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.33880302f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.040089097f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2291239f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08160158f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.27016312f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3359375f ? 
                     (data[3 /* X4 */] <-0.16836393f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.030072793f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[22 /* X23 */] <0.049161218f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5217356f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2613148f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09638219f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5152701f ? 
                     (data[21 /* X22 */] <0.18016754f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.16849118f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.3032444f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.6167608f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14941622f ? 
                     (data[4 /* X5 */] <0.06776525f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29922137f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09424705f ? 
                             (data[21 /* X22 */] <0.14520864f ? 
                                1.0f : 
                                 (data[11 /* X12 */] <-0.26293865f ? 
                                    0.0f : 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13531019f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[23 /* X24 */] <0.00996151f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.1742717f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13335824f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.115904674f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[0 /* X1 */] <0.08180395f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3540323f ? 
                     (data[34 /* X35 */] <-0.546875f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.32001746f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.17420559f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.34375f ? 
                     (data[15 /* X16 */] <0.10675148f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[23 /* X24 */] <0.07752653f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.07947489f ? 
                 (data[11 /* X12 */] <-0.10421077f ? 
                     (data[20 /* X21 */] <0.18566006f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.1382142f ? 
                     (data[5 /* X6 */] <0.19279279f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.08488663f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.063124426f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[17 /* X18 */] <-0.62182647f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4093858f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <0.03930474f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <0.11223935f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[27 /* X28 */] <-0.4889901f ? 
                 (data[17 /* X18 */] <0.010998488f ? 
                     (data[13 /* X14 */] <0.21442656f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <0.9468252f ? 
                         (data[21 /* X22 */] <0.20788562f ? 
                            1.0f : 
                             (data[14 /* X15 */] <0.1993689f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20839494f ? 
                     (data[21 /* X22 */] <0.114337094f ? 
                         (data[16 /* X17 */] <-0.016248876f ? 
                            1.0f : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09302285f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47884268f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4234083f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50817096f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20072018f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2574871f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40625f ? 
                            0.0f : 
                            1.0f) : 
                         (data[14 /* X15 */] <0.1062179f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[33 /* X34 */] <-0.328125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.15189713f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44951442f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8503015f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4325868f ? 
                     (data[11 /* X12 */] <-0.47216794f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21457328f ? 
             (data[6 /* X7 */] <0.12324878f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.425675f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.2581281f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23508744f ? 
                         (data[30 /* X31 */] <0.09169716f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.0976057f ? 
                                 (data[22 /* X23 */] <0.23192024f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23513749f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.0427943f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[23 /* X24 */] <0.09701645f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21836178f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20418818f ? 
                     (data[35 /* X36 */] <-0.28191343f ? 
                         (data[17 /* X18 */] <-0.5211597f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24507129f ? 
                             (data[14 /* X15 */] <0.096019745f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6391555f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47011718f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29103988f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21741372f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4116845f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25655422f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1578125f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.12266804f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                1.0f) : 
             (data[13 /* X14 */] <0.13309875f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.10048132f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15289247f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.11200368f ? 
                            1.0f : 
                             (data[18 /* X19 */] <-0.13213876f ? 
                                0.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28810492f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[14 /* X15 */] <0.15003738f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[32 /* X33 */] <-0.33256423f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[21 /* X22 */] <0.094414726f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.91144633f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.15519798f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0263403f ? 
                     (data[19 /* X20 */] <-0.4186141f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[9 /* X10 */] <-0.36343294f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21317363f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21377687f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.5529235f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38526627f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3025392f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3595251f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.19957021f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[23 /* X24 */] <0.14344776f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.16977327f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.078325294f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.14370437f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23257205f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.059277344f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08662183f ? 
                     (data[29 /* X30 */] <0.097105995f ? 
                        1.0f : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.18424323f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.14313346f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[2 /* X3 */] <-0.21254842f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.09794137f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.48785725f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.51198435f ? 
             (data[24 /* X25 */] <-0.3694142f ? 
                 (data[32 /* X33 */] <-0.096353106f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.16430241f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3776987f ? 
                     (data[26 /* X27 */] <-0.3019985f ? 
                         (data[17 /* X18 */] <0.21625508f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30090022f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23257469f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.115666315f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
        0.0234375f : 
         (data[23 /* X24 */] <0.12300299f ? 
            0.0f : 
             (data[14 /* X15 */] <0.10196867f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.15408657f ? 
                     (data[14 /* X15 */] <0.12295954f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20790097f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18160357f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.19461223f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[32 /* X33 */] <-0.28409126f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[14 /* X15 */] <0.1338379f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.048957206f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16234615f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.35546875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.027923325f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16940442f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2809987f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2176597f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.35970947f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7949219f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29922137f ? 
                 (data[0 /* X1 */] <-0.18825898f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                        0.0f : 
                        1.0f) : 
                     (data[24 /* X25 */] <-0.8091414f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0076870555f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15535647f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03184976f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.19448814f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[20 /* X21 */] <0.011603754f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.841604f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15037549f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (data[15 /* X16 */] <0.09069081f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.3139208f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.85033405f ? 
                        1.0f : 
                         (data[2 /* X3 */] <0.17863828f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[28 /* X29 */] <0.19891539f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.102769636f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.63391256f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <-0.05419659f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17622836f ? 
             (data[15 /* X16 */] <0.055139963f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17466605f ? 
                     (data[35 /* X36 */] <-0.5125f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.006323581f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22169946f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13347894f ? 
                 (data[10 /* X11 */] <-0.5532046f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0979945f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38710058f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3025392f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.46375f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2109375f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32186636f ? 
             (data[27 /* X28 */] <-0.4205575f ? 
                 (data[27 /* X28 */] <-0.7392921f ? 
                     (data[17 /* X18 */] <-0.12347924f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.14621614f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5424818f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[33 /* X34 */] <-0.28125f ? 
                     (data[24 /* X25 */] <-0.083591506f ? 
                         (data[16 /* X17 */] <-0.36324114f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25417018f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08473288f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.32186317f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6225502f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[15 /* X16 */] <0.14015286f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.61656296f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16799277f ? 
             (data[22 /* X23 */] <0.12507191f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.51152176f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.14240098f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.09925677f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (data[3 /* X4 */] <-0.33321917f ? 
             (data[11 /* X12 */] <-0.4259565f ? 
                 (data[0 /* X1 */] <-0.16964944f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5766036f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.46503907f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.828125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.9631304f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1989763f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.3036248f ? 
                         (data[11 /* X12 */] <0.34623322f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-0.61f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[1 /* X2 */] <-0.2371039f ? 
             (data[6 /* X7 */] <0.15552859f ? 
                 (data[11 /* X12 */] <-0.35088247f ? 
                     (data[4 /* X5 */] <0.19886266f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.19352332f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.018411912f ? 
                         (data[20 /* X21 */] <0.12297035f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19523019f ? 
                                 (data[13 /* X14 */] <0.11581191f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.06888746f ? 
                 (data[32 /* X33 */] <-0.3437503f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.5376899f ? 
                         (data[7 /* X8 */] <0.06403454f ? 
                            1.0f : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.06842777f ? 
                             (data[4 /* X5 */] <0.2511549f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31182843f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48784146f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6447067f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31732193f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.72910154f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[15 /* X16 */] <0.081416674f ? 
             (data[30 /* X31 */] <0.036973126f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13336632f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6655812f ? 
                     (data[21 /* X22 */] <0.20351553f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18988065f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17134859f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2524977f ? 
                             (data[14 /* X15 */] <0.109617285f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2676519f ? 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.15591928f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3119691f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10935495f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.46870118f ? 
             (data[23 /* X24 */] <0.11953812f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0011404081f ? 
                     (data[18 /* X19 */] <0.27905557f ? 
                         (data[6 /* X7 */] <0.14199188f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.17826648f ? 
                         (data[20 /* X21 */] <0.17080726f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5475691f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.100233324f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1748615f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (data[33 /* X34 */] <-0.76953125f ? 
             (data[28 /* X29 */] <0.12617908f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32620186f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24853179f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23021848f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.15956904f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[25 /* X26 */] <-0.4326353f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51278406f ? 
             (data[9 /* X10 */] <-0.2643125f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19922373f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6544221f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[33 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12617908f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.28466997f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23574834f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                     (data[25 /* X26 */] <-0.3282741f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1933581f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.5167582f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.54553795f ? 
                 (data[18 /* X19 */] <-0.13233322f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11028638f ? 
                     (data[4 /* X5 */] <0.095998354f ? 
                         (data[34 /* X35 */] <-0.79166687f ? 
                            0.0f : 
                            1.0f) : 
                         (data[15 /* X16 */] <0.0575331f ? 
                             (data[32 /* X33 */] <-0.427273f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9364355f ? 
                         (data[28 /* X29 */] <0.15674569f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21807195f ? 
                                1.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.114605255f ? 
             (data[6 /* X7 */] <0.08472126f ? 
                 (data[2 /* X3 */] <-0.009180385f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21907888f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.2605339f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09546995f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.14159179f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.9375f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[28 /* X29 */] <0.10271244f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53216f ? 
                 (data[10 /* X11 */] <-0.08951295f ? 
                     (data[12 /* X13 */] <0.17588742f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.06206814f ? 
             (data[33 /* X34 */] <-0.28125f ? 
                 (data[18 /* X19 */] <0.16765104f ? 
                     (data[4 /* X5 */] <0.15246457f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.30765194f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.08792698f ? 
                 (data[11 /* X12 */] <-0.17928477f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12971884f ? 
             (data[14 /* X15 */] <0.09134559f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.10033329f ? 
                 (data[28 /* X29 */] <0.07556475f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13515624f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30708727f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26425967f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35156992f ? 
                         (data[9 /* X10 */] <-0.19515872f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.01936651f ? 
             (data[15 /* X16 */] <0.13696034f ? 
                 (data[0 /* X1 */] <0.19153367f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12512152f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.18634428f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16005407f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[27 /* X28 */] <0.26964965f ? 
                 (data[27 /* X28 */] <0.14653187f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29104933f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0296875f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08749794f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.065832585f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.133314f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_11_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[15 /* X16 */] <0.059004184f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.6231993f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041552186f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55212593f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.16630353f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.41094226f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.45333287f ? 
                         (data[28 /* X29 */] <0.1933581f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22097307f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[15 /* X16 */] <0.03536224f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                 (data[27 /* X28 */] <-0.21525963f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.1908194f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22418405f ? 
                 (data[24 /* X25 */] <-0.3804074f ? 
                     (data[3 /* X4 */] <-0.42198738f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20907448f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.47414887f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[19 /* X20 */] <-0.8999279f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20334148f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.5514952f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.83004016f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
        0.7f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98168105f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.96571016f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56873655f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20465828f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04763062f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.40976644f ? 
                                 (data[23 /* X24 */] <0.23999105f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23990165f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <0.016847475f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2291239f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.18984407f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[11 /* X12 */] <-0.5723645f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22299989f ? 
             (data[12 /* X13 */] <0.1233894f ? 
                 (data[24 /* X25 */] <-0.21550967f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19664487f ? 
                         (data[33 /* X34 */] <-0.625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.10772265f ? 
                     (data[15 /* X16 */] <0.10923908f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09910404f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.21037158f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27858943f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.080278486f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.24299262f ? 
                 (data[15 /* X16 */] <0.05977703f ? 
                     (data[3 /* X4 */] <-0.066914536f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.071380995f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28918135f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7367188f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.421875f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.295507f ? 
             (data[0 /* X1 */] <-0.12586246f ? 
                 (data[24 /* X25 */] <-0.1385574f ? 
                     (data[19 /* X20 */] <-0.4494645f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.026026526f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.36190096f ? 
                     (data[15 /* X16 */] <0.121604584f ? 
                         (data[17 /* X18 */] <-0.3823609f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.12434896f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4727121f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.18805577f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16568796f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <0.3089021f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[28 /* X29 */] <0.108234f ? 
            1.0f : 
             (data[31 /* X32 */] <0.089133754f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.102653116f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30559242f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20825598f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0720362f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25f ? 
                        0.0f : 
                        1.0f))) : 
             (data[17 /* X18 */] <-0.104063116f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (data[26 /* X27 */] <0.060112838f ? 
             (data[0 /* X1 */] <-0.5589676f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16634096f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.71661943f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[12 /* X13 */] <0.15021397f ? 
             (data[2 /* X3 */] <-0.15343642f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.29256877f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.14446098f ? 
                        0.0f : 
                        1.0f))) : 
             (data[25 /* X26 */] <-0.61066324f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.51787645f ? 
                     (data[1 /* X2 */] <-0.7710734f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.078325294f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.31196868f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (data[26 /* X27 */] <0.10759734f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3080339f ? 
                 (data[27 /* X28 */] <-0.8262556f ? 
                     (data[11 /* X12 */] <0.7537778f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.086684935f ? 
                         (data[1 /* X2 */] <-0.18214935f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2819164f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.08548826f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.11780185f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32741416f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.040823508f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2289347f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[12 /* X13 */] <0.11747572f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.025f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3f ? 
                                     (data[23 /* X24 */] <0.08824259f ? 
                                        0.0f : 
                                         (data[20 /* X21 */] <0.15033096f ? 
                                            1.0f : 
                                             (data[17 /* X18 */] <0.18535177f ? 
                                                 (data[1 /* X2 */] <-0.22574292f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f))) : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13853797f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.04146568f ? 
                                    1.0f : 
                                    0.0f))))))) : 
        0.0f);
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[13 /* X14 */] <0.26033744f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23213387f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14911336f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24732411f ? 
                     (data[13 /* X14 */] <0.16075557f ? 
                         (data[18 /* X19 */] <0.10617818f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22414097f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4879364f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.13768823f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14934768f ? 
                 (data[16 /* X17 */] <-0.3519997f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.079598784f ? 
                     (data[17 /* X18 */] <-0.12347924f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[32 /* X33 */] <-0.250533f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2637693f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2506873f ? 
                     (data[17 /* X18 */] <-0.5765222f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09441779f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8503907f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2478361f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.03488087f ? 
            1.0f : 
             (data[12 /* X13 */] <0.08890067f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.013045661f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46318838f ? 
                     (data[17 /* X18 */] <-0.74479526f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8047122f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.039998f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63332075f ? 
                                     (data[0 /* X1 */] <-0.20738488f ? 
                                         (data[21 /* X22 */] <0.2160878f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (data[6 /* X7 */] <0.12378359f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[31 /* X32 */] <0.015522416f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.08789632f ? 
             (data[31 /* X32 */] <0.14911336f ? 
                 (data[4 /* X5 */] <0.1482296f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.11058984f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.227808f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.35267922f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15671006f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5440513f ? 
             (data[5 /* X6 */] <0.08907199f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2909681f ? 
                     (data[23 /* X24 */] <0.11780568f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2642184f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.11882111f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[7 /* X8 */] <0.06517541f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12729153f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35528854f ? 
             (data[25 /* X26 */] <-0.6045243f ? 
                 (data[32 /* X33 */] <0.029118828f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22623067f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28906518f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.19247495f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20863408f ? 
                        0.0f : 
                        1.0f))) : 
             (data[35 /* X36 */] <-0.23066406f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08659116f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13700955f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23688175f ? 
             (data[24 /* X25 */] <-0.3694142f ? 
                 (data[19 /* X20 */] <-0.31599385f ? 
                     (data[3 /* X4 */] <-0.33744624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20965606f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.042818934f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[21 /* X22 */] <0.1489847f ? 
                 (data[29 /* X30 */] <0.10738304f ? 
                    0.0f : 
                    1.0f) : 
                 (data[33 /* X34 */] <0.1796875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23053429f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16634096f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3810818f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.10617818f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.110182725f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[19 /* X20 */] <0.20880511f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X11 */] <-0.23178197f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.022803584f ? 
                     (data[14 /* X15 */] <0.15295944f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.24631152f ? 
             (data[4 /* X5 */] <0.15952283f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[18 /* X19 */] <0.19838747f ? 
             (data[4 /* X5 */] <0.18634428f ? 
                 (data[13 /* X14 */] <0.1383457f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33158308f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.35546875f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1471102f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.07755245f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16542898f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.050006304f ? 
                     (data[35 /* X36 */] <-0.6039063f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12641063f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.045698244f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43402675f ? 
                 (data[28 /* X29 */] <0.08476736f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                         (data[12 /* X13 */] <0.16445509f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.755f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.3686102f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (data[3 /* X4 */] <-0.49596092f ? 
             (data[18 /* X19 */] <0.07984655f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.38911524f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.07274904f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.26414007f ? 
                 (data[15 /* X16 */] <0.1339701f ? 
                     (data[15 /* X16 */] <0.08337109f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08179829f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21354194f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.082962364f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.3201648f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3359375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
        0.01923077f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12576449f ? 
             (data[31 /* X32 */] <0.054236524f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.093670614f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.090456896f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.06461511f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[20 /* X21 */] <0.111396044f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3713188f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16658111f ? 
                 (data[25 /* X26 */] <-0.61066324f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.16637918f ? 
                         (data[24 /* X25 */] <-0.061605144f ? 
                             (data[8 /* X9 */] <0.07693528f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21681832f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.2519327f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[20 /* X21 */] <0.13181865f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1634664f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2152921f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26908126f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.7040641f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45314038f ? 
         (data[3 /* X4 */] <-0.33321917f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                     (data[27 /* X28 */] <-0.24943373f ? 
                         (data[30 /* X31 */] <0.20066908f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X3 */] <-0.53886205f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33791244f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-9.9124416E-5f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19612198f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17373085f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.07240783f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X7 */] <0.17947812f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.00546875f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.43740937f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.41369787f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0052148085f ? 
         (data[22 /* X23 */] <0.070849985f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.039342698f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24753582f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.17059325f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X12 */] <-0.27580848f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17466156f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24912393f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28820896f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26992935f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5546548f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.12300299f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[24 /* X25 */] <-0.526067f ? 
             (data[30 /* X31 */] <0.15860832f ? 
                 (data[32 /* X33 */] <-0.3064634f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[1 /* X2 */] <-0.2590857f ? 
                 (data[19 /* X20 */] <-0.2909681f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.12172145f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27280787f ? 
                             (data[20 /* X21 */] <0.09945658f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.39535972f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.053594276f ? 
                     (data[34 /* X35 */] <-0.515625f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12347139f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[18 /* X19 */] <-0.37331015f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29575244f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34156832f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[14 /* X15 */] <0.117903285f ? 
             (data[6 /* X7 */] <0.105546944f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28814492f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09378219f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.19056183f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1845211f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37145716f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24270773f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6964919f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[1 /* X2 */] <-0.2371039f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.28409126f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30068228f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.6037509f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.21525963f ? 
             (data[14 /* X15 */] <0.15083481f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.14155665f ? 
                     (data[24 /* X25 */] <-0.19910252f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.16335171f ? 
                             (data[22 /* X23 */] <0.16796893f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.09354853f ? 
                         (data[20 /* X21 */] <0.10396964f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[10 /* X11 */] <-0.6401468f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23640761f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (data[33 /* X34 */] <-0.765625f ? 
                     (data[18 /* X19 */] <0.2291239f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41368374f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[32 /* X33 */] <-0.4332389f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.03309807f ? 
                             (data[24 /* X25 */] <-0.2726742f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3833431f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2967276f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.15192911f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.227282f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13642332f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32741416f ? 
                     (data[34 /* X35 */] <-0.6875f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.04135669f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22574803f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2315702f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22445898f ? 
                 (data[31 /* X32 */] <0.042240605f ? 
                     (data[12 /* X13 */] <0.13392763f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.26892278f ? 
                         (data[6 /* X7 */] <0.10986177f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06804467f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[14 /* X15 */] <0.10740918f ? 
                             (data[15 /* X16 */] <0.04603458f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4644653f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09956152f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19186592f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.33906424f ? 
                        1.0f : 
                        0.0f))) : 
             (data[26 /* X27 */] <-0.4622167f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13423556f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3072414f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.50710607f ? 
                    0.0f : 
                     (data[10 /* X11 */] <0.21788156f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[22 /* X23 */] <0.13157855f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.13166517f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.1062179f ? 
                         (data[9 /* X10 */] <-0.08451264f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[3 /* X4 */] <0.18670894f ? 
             (data[26 /* X27 */] <-0.004330417f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20673716f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[12 /* X13 */] <0.08985869f ? 
            1.0f : 
             (data[6 /* X7 */] <0.13886803f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16291524f ? 
             (data[21 /* X22 */] <0.11606947f ? 
                 (data[34 /* X35 */] <-0.46875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19140884f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1296981f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1563501f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.078125f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.55878127f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25480956f ? 
                 (data[15 /* X16 */] <0.05977703f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.21550967f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17379814f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.47500026f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <0.02494991f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20636661f ? 
             (data[10 /* X11 */] <-0.5532046f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10467392f ? 
                     (data[21 /* X22 */] <0.16284375f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.03192015f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.4908829f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21352346f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24253324f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.46875f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22098526f ? 
                 (data[24 /* X25 */] <0.004353939f ? 
                    1.0f : 
                     (data[34 /* X35 */] <0.03125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.15192434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[18 /* X19 */] <-0.3856047f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.26558626f ? 
                 (data[3 /* X4 */] <-0.57796746f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.095280915f ? 
                     (data[16 /* X17 */] <0.023437858f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7366774f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[0 /* X1 */] <-0.6562327f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3726995f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.4994354f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20422608f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36960125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.6164353f ? 
                     (data[25 /* X26 */] <-0.50016314f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30637127f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13454746f ? 
             (data[31 /* X32 */] <0.10003913f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[32 /* X33 */] <-0.3027347f ? 
             (data[3 /* X4 */] <-0.22754273f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
                         (data[24 /* X25 */] <-0.4133869f ? 
                             (data[13 /* X14 */] <0.13257405f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.14849126f ? 
                             (data[34 /* X35 */] <-0.05f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3043785f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.38921076f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15656394f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18780023f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6658794f ? 
                                         (data[33 /* X34 */] <-0.104f ? 
                                            0.0f : 
                                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47873372f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0165368f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.021140741f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.515625f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.612205f ? 
             (data[15 /* X16 */] <0.14478992f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.38305706f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.53320503f ? 
                 (data[21 /* X22 */] <0.16804089f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30782515f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20442086f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.15019532f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.011962781f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29922137f ? 
                 (data[28 /* X29 */] <0.08660788f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18796936f ? 
                         (data[35 /* X36 */] <-0.68284845f ? 
                             (data[33 /* X34 */] <0.55f ? 
                                1.0f : 
                                0.0f) : 
                             (data[34 /* X35 */] <-0.142858f ? 
                                 (data[9 /* X10 */] <-0.25455382f ? 
                                     (data[29 /* X30 */] <0.24262972f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[27 /* X28 */] <-0.19039485f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.5276993f ? 
                                 (data[28 /* X29 */] <0.18533258f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[30 /* X31 */] <0.14610377f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                     (data[0 /* X1 */] <0.16409774f ? 
                         (data[17 /* X18 */] <-0.04173884f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3213332f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.36066622f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (data[28 /* X29 */] <0.07050332f ? 
            1.0f : 
             (data[15 /* X16 */] <0.087599434f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6655812f ? 
                     (data[3 /* X4 */] <-0.50652856f ? 
                         (data[11 /* X12 */] <-0.2972582f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.365f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3117362f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[5 /* X6 */] <0.15433799f ? 
                             (data[34 /* X35 */] <-0.619048f ? 
                                 (data[17 /* X18 */] <-0.363812f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.121947564f ? 
                                 (data[33 /* X34 */] <0.356f ? 
                                     (data[19 /* X20 */] <-0.4461277f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.46848503f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (data[15 /* X16 */] <0.04586583f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20655085f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.17734642f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3671289f ? 
                    0.0f : 
                    1.0f))) : 
        0.006535948f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2302253f ? 
             (data[32 /* X33 */] <-0.9291549f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.09016335f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.734375f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.65072715f ? 
                    1.0f : 
                     (data[11 /* X12 */] <0.003037802f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23156139f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4988895f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1700003f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.043554686f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16326874f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06607163f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1800422f ? 
             (data[13 /* X14 */] <0.096370056f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3650212f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27342284f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.76898867f ? 
                            0.0f : 
                            1.0f) : 
                         (data[31 /* X32 */] <0.16001874f ? 
                             (data[17 /* X18 */] <0.039759714f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22716072f ? 
                 (data[22 /* X23 */] <0.17431444f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46536946f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.4205575f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29931f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5410156f ? 
             (data[14 /* X15 */] <0.10090636f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12025403f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30798057f ? 
                     (data[33 /* X34 */] <-0.41007996f ? 
                         (data[11 /* X12 */] <-0.5606027f ? 
                             (data[0 /* X1 */] <-0.16770484f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.023705928f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.09478217f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[17 /* X18 */] <-0.21570584f ? 
             (data[11 /* X12 */] <-0.2591969f ? 
                 (data[4 /* X5 */] <0.1441862f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16577275f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13077551f ? 
                 (data[19 /* X20 */] <-0.31599385f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.12551422f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.06900615f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06818f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.08493948f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33318254f ? 
                 (data[23 /* X24 */] <0.093551576f ? 
                     (data[24 /* X25 */] <-0.25948238f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.13095f ? 
                             (data[17 /* X18 */] <-0.23738718f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55878127f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1585689f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.026575955f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19917522f ? 
            0.0f : 
             (data[30 /* X31 */] <0.16201864f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.43927488f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.31799173f ? 
                         (data[11 /* X12 */] <-0.45063084f ? 
                             (data[24 /* X25 */] <0.008751211f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.30477548f ? 
                     (data[26 /* X27 */] <-0.33123076f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.28106755f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24722004f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.35435447f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23998718f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[25 /* X26 */] <-0.17326704f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06639601f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30805635f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.53299713f ? 
                1.0f : 
                0.0f)) : 
        0.006535948f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44726562f ? 
         (data[25 /* X26 */] <-0.7027466f ? 
            1.0f : 
            0.0f) : 
         (data[20 /* X21 */] <0.16941482f ? 
             (data[11 /* X12 */] <-0.3187079f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18234083f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40903932f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21530083f ? 
                 (data[25 /* X26 */] <-0.54927427f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.065736376f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10492395f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.57559824f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20242871f ? 
                     (data[9 /* X10 */] <-0.637743f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.08922098f ? 
                             (data[13 /* X14 */] <0.104295015f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23203877f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18560168f ? 
                             (data[32 /* X33 */] <-0.35227376f ? 
                                 (data[31 /* X32 */] <0.07051853f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[12 /* X13 */] <0.19524093f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39814782f ? 
                     (data[12 /* X13 */] <0.1308689f ? 
                         (data[0 /* X1 */] <-0.52593416f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.058025304f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.47768033f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[29 /* X30 */] <0.14035526f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9924059f ? 
             (data[11 /* X12 */] <-0.52160484f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1338379f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.6474966f ? 
                     (data[19 /* X20 */] <0.017682781f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.58494765f ? 
                         (data[27 /* X28 */] <-0.9484663f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24092796f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31673717f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.364f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f))) : 
            1.0f) : 
         (data[29 /* X30 */] <0.12750894f ? 
            0.0f : 
             (data[26 /* X27 */] <0.1313396f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[15 /* X16 */] <0.060549874f ? 
            1.0f : 
             (data[23 /* X24 */] <0.066698804f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044033594f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.31054688f ? 
             (data[33 /* X34 */] <-0.15625f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06405137f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25069174f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.16836393f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19293387f ? 
                 (data[26 /* X27 */] <-0.29602093f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.506147f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17695302f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[12 /* X13 */] <0.1377597f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.29005197f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32982352f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[33 /* X34 */] <-0.28320312f ? 
             (data[3 /* X4 */] <-0.6750804f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2721549f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[30 /* X31 */] <0.040951844f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.6328125f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.11217416f ? 
                     (data[0 /* X1 */] <0.017282447f ? 
                         (data[0 /* X1 */] <-0.07403976f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.1524335f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.17724939f ? 
                             (data[8 /* X9 */] <0.21159342f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34191847f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24820289f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.21145934f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.599804f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[34 /* X35 */] <-0.7228294f ? 
                 (data[17 /* X18 */] <-0.49238563f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.74881417f ? 
                         (data[35 /* X36 */] <-0.97007966f ? 
                            1.0f : 
                             (data[32 /* X33 */] <0.4318175f ? 
                                 (data[16 /* X17 */] <-0.21007223f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22599737f ? 
             (data[25 /* X26 */] <-0.6352188f ? 
                 (data[32 /* X33 */] <0.044033594f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.45142666f ? 
                 (data[7 /* X8 */] <0.12576449f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.65072715f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31020334f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[19 /* X20 */] <0.23029776f ? 
             (data[35 /* X36 */] <-0.1542579f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[30 /* X31 */] <0.16656576f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.031252578f ? 
                     (data[32 /* X33 */] <-0.29900602f ? 
                         (data[0 /* X1 */] <0.031963978f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.16349812f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                         (data[25 /* X26 */] <-0.27677122f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.09149081f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.31850687f ? 
                                     (data[8 /* X9 */] <-0.1333712f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30148223f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[14 /* X15 */] <0.16570713f ? 
                             (data[3 /* X4 */] <-0.15483734f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.03326278f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (data[3 /* X4 */] <-0.33744624f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35103485f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.09925677f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.012433636f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3318439f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3980497f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22672641f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.22867419f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[27 /* X28 */] <-0.3032444f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.119782336f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.540345f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.19874093f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24414684f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2970561f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.44735f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
                     (data[11 /* X12 */] <-0.512875f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24281049f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.16836393f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2152983f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07679449f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.09417976f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.07143125f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.0735709f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.726403f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                 (data[1 /* X2 */] <-0.8086313f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20980914f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08528369f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-0.9765625f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.140625f ? 
                         (data[32 /* X33 */] <-0.94034094f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23283947f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.12566048f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.18214935f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.31715637f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.41375f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[29 /* X30 */] <0.177267f ? 
                                         (data[2 /* X3 */] <-0.011853184f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))))))) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46394303f ? 
             (data[23 /* X24 */] <0.103946194f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[2 /* X3 */] <-0.62843835f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.2831157f ? 
                 (data[16 /* X17 */] <-0.22874409f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.13700955f ? 
                     (data[34 /* X35 */] <-0.578125f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29931f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18578574f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18616197f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.6638583f ? 
                 (data[28 /* X29 */] <0.15470715f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.18903686f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16245256f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.045224056f ? 
                 (data[30 /* X31 */] <0.11082445f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.34701303f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26239526f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10868694f ? 
                 (data[28 /* X29 */] <0.13078038f ? 
                     (data[32 /* X33 */] <-0.12002883f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.40386686f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21311483f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12101123f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2644531f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.15274362f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.359375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0234375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2793327f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3039698f ? 
                         (data[10 /* X11 */] <-0.8932813f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14213972f ? 
                                1.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5736919f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20213199f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5291151f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.087736316f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0487114f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.43278065f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.2086695f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08271834f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13713738f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.286563f ? 
             (data[13 /* X14 */] <0.15146309f ? 
                 (data[30 /* X31 */] <0.112000436f ? 
                     (data[0 /* X1 */] <0.061327036f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.4903392f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3334782f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.1818184f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[17 /* X18 */] <-0.7383232f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.08821529f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0608214f ? 
                             (data[23 /* X24 */] <0.060570527f ? 
                                 (data[2 /* X3 */] <-0.3950047f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38275447f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08173305f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[26 /* X27 */] <0.022803584f ? 
             (data[22 /* X23 */] <0.041208666f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.092945404f ? 
             (data[23 /* X24 */] <0.08922048f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.13466315f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.43311635f ? 
                 (data[13 /* X14 */] <0.16195701f ? 
                     (data[27 /* X28 */] <-0.3227966f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.26409638f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[28 /* X29 */] <0.0792458f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.7040641f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[26 /* X27 */] <0.116076715f ? 
             (data[35 /* X36 */] <-0.46884766f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1597451f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.10292876f ? 
                 (data[13 /* X14 */] <0.087365195f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30942515f ? 
            0.0f : 
             (data[24 /* X25 */] <0.081306204f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10848341f ? 
         (data[15 /* X16 */] <0.11774036f ? 
             (data[11 /* X12 */] <-0.15430774f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15427153f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.08402317f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.510046f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.23384956f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15532438f ? 
             (data[10 /* X11 */] <-0.60589683f ? 
                 (data[27 /* X28 */] <-0.35212487f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18819179f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[35 /* X36 */] <-0.0859375f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20025966f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.058758825f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21223016f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.14097957f ? 
                 (data[13 /* X14 */] <0.09374658f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5690485f ? 
                         (data[17 /* X18 */] <-0.32854268f ? 
                             (data[23 /* X24 */] <0.15346156f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[7 /* X8 */] <0.14797843f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20846014f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[5 /* X6 */] <0.1670027f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.25f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.17323802f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[2 /* X3 */] <0.011392296f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.52408516f ? 
                     (data[5 /* X6 */] <0.18639848f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.41839594f ? 
             (data[19 /* X20 */] <-0.24925852f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.85830975f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29785913f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23541439f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.24936175f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[33 /* X34 */] <-0.36914062f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32926497f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22781362f ? 
                     (data[15 /* X16 */] <0.04579266f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2528403f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.078574516f ? 
                 (data[19 /* X20 */] <-0.30765194f ? 
                     (data[11 /* X12 */] <-0.2972582f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23058431f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.048957206f ? 
             (data[3 /* X4 */] <-0.05423336f ? 
                 (data[34 /* X35 */] <0.046875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.42006713f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35023156f ? 
                     (data[15 /* X16 */] <0.09725007f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.315587f ? 
                             (data[35 /* X36 */] <-0.285108f ? 
                                 (data[21 /* X22 */] <0.15384203f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[25 /* X26 */] <0.10144848f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[3 /* X4 */] <-0.6692703f ? 
             (data[18 /* X19 */] <0.046187274f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.10769339f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5795192f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20328414f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.63756734f ? 
                 (data[12 /* X13 */] <0.15883616f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17168754f ? 
                     (data[31 /* X32 */] <0.13384582f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.12759368f ? 
                             (data[4 /* X5 */] <0.15107657f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.053594276f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26450175f ? 
                 (data[30 /* X31 */] <0.10517977f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23151724f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.28280166f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.10786259f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.3160225f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.35634765f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.026681887f ? 
                    1.0f : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.864528f ? 
            1.0f : 
             (data[18 /* X19 */] <0.084662676f ? 
                 (data[33 /* X34 */] <-0.453125f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17531298f ? 
                         (data[29 /* X30 */] <0.23070769f ? 
                             (data[11 /* X12 */] <-0.47756785f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40687373f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.06535636f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.014663384f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.32441318f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[6 /* X7 */] <0.16097619f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21717307f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22728129f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (data[25 /* X26 */] <-0.03667664f ? 
             (data[18 /* X19 */] <-0.103963815f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.40449762f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44408116f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10492395f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23554939f ? 
                 (data[16 /* X17 */] <-0.5229564f ? 
                     (data[18 /* X19 */] <0.14306189f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.40625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[29 /* X30 */] <0.07997757f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19732971f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.4470397f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7f ? 
                                     (data[33 /* X34 */] <-0.5f ? 
                                         (data[29 /* X30 */] <0.17308858f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                     (data[11 /* X12 */] <-0.34613425f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18493263f ? 
                     (data[26 /* X27 */] <0.1313396f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.14578952f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
                 (data[10 /* X11 */] <-0.42674324f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25115526f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.2477824f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.16293389f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[11 /* X12 */] <0.7049294f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48283216f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_11_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07493893f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6376953f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15519798f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22874409f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X3 */] <0.011392296f ? 
                 (data[33 /* X34 */] <-0.2890625f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.390625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.30798307f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15032217f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17216381f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19247495f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.27574012f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[11 /* X12 */] <0.5111474f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20019531f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14941622f ? 
                 (data[5 /* X6 */] <0.065026626f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.6552369f ? 
                         (data[5 /* X6 */] <0.20945957f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18493263f ? 
                     (data[7 /* X8 */] <0.051787686f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.340625f ? 
                            1.0f : 
                            0.0f) : 
                         (data[22 /* X23 */] <0.110599235f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.08790076f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05342674f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.4162048f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.086781956f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18035014f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10556813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.2909681f ? 
                 (data[14 /* X15 */] <0.17420559f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.645835f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07545653f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.15433799f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13076732f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.5500907f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18734571f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
        0.007936508f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.44726562f ? 
             (data[25 /* X26 */] <0.0032261705f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18401058f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.78315073f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.36134133f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.47165173f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55378973f ? 
             (data[19 /* X20 */] <-0.8999279f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.50177294f ? 
             (data[17 /* X18 */] <-0.5894663f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.11133653f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13258295f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.2239282f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[2 /* X3 */] <0.08561265f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[18 /* X19 */] <0.46432123f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38965827f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.32798815f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30642763f ? 
                 (data[14 /* X15 */] <0.14446098f ? 
                     (data[5 /* X6 */] <0.17243455f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2234883f ? 
         (data[9 /* X10 */] <-0.17210744f ? 
             (data[0 /* X1 */] <0.12005316f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17347223f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1856076f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.46875f ? 
                     (data[35 /* X36 */] <-0.66484374f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.25371304f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.078249246f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0016577468f ? 
                     (data[24 /* X25 */] <-0.32544148f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1801734f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2120934f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.322833f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[32 /* X33 */] <0.4318175f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.177241f ? 
                                     (data[16 /* X17 */] <-0.05389794f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9714106f ? 
             (data[2 /* X3 */] <-0.2349425f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15649374f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56438345f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.418837f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6271014f ? 
                     (data[0 /* X1 */] <-0.14836733f ? 
                         (data[4 /* X5 */] <0.17505105f ? 
                             (data[28 /* X29 */] <0.20918271f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[14 /* X15 */] <0.1062179f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11310443f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12504977f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.7871158f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2962239f ? 
             (data[35 /* X36 */] <-0.35634765f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1729512f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2784901f ? 
                         (data[31 /* X32 */] <0.05593324f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.8902793f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.90122926f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26170322f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.9f ? 
                                 (data[14 /* X15 */] <0.08860395f ? 
                                    1.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34059978f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.13147397f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.15899423f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[16 /* X17 */] <-0.35483506f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.103279255f ? 
                     (data[8 /* X9 */] <0.013045661f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.17734376f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20212634f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[28 /* X29 */] <0.18231498f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.063166834f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.02887483f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15576218f ? 
                         (data[19 /* X20 */] <-0.06448923f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[35 /* X36 */] <-0.9771484f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.9765625f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114216134f ? 
                     (data[21 /* X22 */] <0.18049099f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22931674f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.046825003f ? 
                            0.0f : 
                             (data[24 /* X25 */] <0.008751211f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[28 /* X29 */] <0.108234f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.77934134f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.15883616f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19545174f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.46870118f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23381385f ? 
                 (data[18 /* X19 */] <0.17379832f ? 
                     (data[0 /* X1 */] <0.22282387f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.36244825f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31621724f ? 
                 (data[27 /* X28 */] <-0.22503571f ? 
                     (data[21 /* X22 */] <0.12473138f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2660076f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.42299804f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2550995f ? 
                 (data[32 /* X33 */] <-0.3884946f ? 
                     (data[31 /* X32 */] <0.049861453f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.37823674f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.5742815f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X3 */] <0.10736689f ? 
                     (data[3 /* X4 */] <-0.011599022f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25179464f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0359375f ? 
                 (data[34 /* X35 */] <-0.859375f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22545104f ? 
                         (data[2 /* X3 */] <-0.43648914f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.049594548f ? 
                                 (data[21 /* X22 */] <0.118130594f ? 
                                    1.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49988386f ? 
                                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11218504f ? 
                                             (data[11 /* X12 */] <-0.3327865f ? 
                                                 (data[28 /* X29 */] <0.17491397f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f) : 
                                             (data[25 /* X26 */] <-0.09057664f ? 
                                                1.0f : 
                                                 (data[23 /* X24 */] <0.07564128f ? 
                                                    0.0f : 
                                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17769788f ? 
                                                        1.0f : 
                                                        0.0f)))) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21043171f ? 
                                    0.0f : 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29305568f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.19790772f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14257012f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18446094f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6376953f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07817495f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17386915f ? 
                     (data[18 /* X19 */] <0.08158903f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2974948f ? 
                             (data[14 /* X15 */] <0.117845595f ? 
                                1.0f : 
                                 (data[11 /* X12 */] <-0.40021682f ? 
                                     (data[15 /* X16 */] <0.10554011f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X10 */] <-0.13983569f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27458227f ? 
             (data[31 /* X32 */] <0.05096491f ? 
                 (data[1 /* X2 */] <-0.4349403f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12436943f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.026356285f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[20 /* X21 */] <0.07797003f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.26794025f ? 
                         (data[22 /* X23 */] <0.09253876f ? 
                             (data[17 /* X18 */] <-0.30187228f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.167084f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[14 /* X15 */] <0.11471636f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[3 /* X4 */] <-0.5700479f ? 
                 (data[26 /* X27 */] <-0.1735272f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23219916f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.062415563f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[21 /* X22 */] <0.03978511f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42730376f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.2561561f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.4811662f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23844346f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.359375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2580675f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16363268f ? 
                         (data[3 /* X4 */] <-0.2374499f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.07929964f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <0.008751211f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[35 /* X36 */] <-0.58676755f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.10421077f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15870112f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.1493674f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.12987807f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.006535948f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.6085315f ? 
         (data[30 /* X31 */] <0.19043809f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5864211f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (data[6 /* X7 */] <0.09226266f ? 
                     (data[21 /* X22 */] <0.12486695f ? 
                         (data[9 /* X10 */] <-0.3426868f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[26 /* X27 */] <0.117772594f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5585298f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3789158f ? 
                                 (data[16 /* X17 */] <-0.34603295f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.08656849f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[20 /* X21 */] <0.17617162f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[27 /* X28 */] <-0.06470785f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.1079008f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.062367715f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (data[21 /* X22 */] <0.09536466f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1751089f ? 
                1.0f : 
                 (data[25 /* X26 */] <0.046198428f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.6875f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[31 /* X32 */] <0.03297103f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.080435365f ? 
                     (data[23 /* X24 */] <0.06929746f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.40191537f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.16683944f ? 
                                 (data[10 /* X11 */] <-0.54794145f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <-0.45406666f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.61762553f ? 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19677094f ? 
                                             (data[22 /* X23 */] <0.14201768f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f) : 
                                         (data[23 /* X24 */] <0.13580537f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f)))) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27342284f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.2375306f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.05369969f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.039819717f ? 
                 (data[31 /* X32 */] <0.18846115f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0050661834f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34333882f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                     (data[17 /* X18 */] <-0.074234225f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.46870118f ? 
             (data[19 /* X20 */] <-0.25760043f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27891323f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79482955f ? 
                     (data[13 /* X14 */] <0.10424049f ? 
                         (data[4 /* X5 */] <0.11858484f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.06875661f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[34 /* X35 */] <-0.5345269f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18860294f ? 
                                 (data[24 /* X25 */] <-0.69481236f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[26 /* X27 */] <-0.07216542f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.46f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.72484916f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4504262f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <0.08712164f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20198041f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.40525f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.13335772f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26667738f ? 
                 (data[0 /* X1 */] <-0.14922605f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.40124792f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30283964f ? 
                         (data[8 /* X9 */] <-0.038031753f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1859281f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.09496803f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[15 /* X16 */] <0.20551254f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X4 */] <-0.51498264f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33414936f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[27 /* X28 */] <0.070690975f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18619166f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[23 /* X24 */] <0.12213678f ? 
             (data[29 /* X30 */] <0.15876831f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61807156f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.3201648f ? 
             (data[35 /* X36 */] <-0.8057617f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.33411625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[0 /* X1 */] <-0.6415243f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19762029f ? 
                     (data[18 /* X19 */] <0.2783022f ? 
                         (data[33 /* X34 */] <-0.5625f ? 
                             (data[1 /* X2 */] <-0.04146568f ? 
                                0.0f : 
                                1.0f) : 
                             (data[8 /* X9 */] <-0.19367671f ? 
                                 (data[25 /* X26 */] <-0.42649642f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3296875f ? 
                    0.0f : 
                    1.0f))) : 
         (data[26 /* X27 */] <-0.029768543f ? 
            1.0f : 
             (data[23 /* X24 */] <0.0710299f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4663086f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19784865f ? 
                 (data[29 /* X30 */] <0.100531675f ? 
                     (data[35 /* X36 */] <-0.146875f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.0981013f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16855991f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.8590605f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                                0.0f : 
                                 (data[9 /* X10 */] <-0.47465038f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[24 /* X25 */] <-0.11657105f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.355178f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27688658f ? 
                             (data[28 /* X29 */] <0.12500517f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <0.1f ? 
                                    1.0f : 
                                     (data[35 /* X36 */] <-0.765f ? 
                                        1.0f : 
                                         (data[2 /* X3 */] <0.03656671f ? 
                                             (data[26 /* X27 */] <0.40456682f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)))) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.38387874f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21273386f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23707047f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.53698367f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.21257432f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <1.1146652f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.625f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.26126748f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.044934623f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.46885592f ? 
                                     (data[11 /* X12 */] <-0.57932055f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30823514f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[11 /* X12 */] <0.43203208f ? 
                            0.0f : 
                             (data[9 /* X10 */] <0.20316714f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                     (data[1 /* X2 */] <0.14757799f ? 
                         (data[17 /* X18 */] <0.42017227f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.103043586f ? 
                        0.0f : 
                        1.0f))) : 
             (data[31 /* X32 */] <0.1447512f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.087736316f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}


class h2o_rf_11_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[16 /* X17 */] <-0.24135318f ? 
             (data[19 /* X20 */] <-0.30765194f ? 
                 (data[24 /* X25 */] <-0.479346f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06595979f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15720867f ? 
                         (data[32 /* X33 */] <-0.25426173f ? 
                             (data[14 /* X15 */] <0.103472434f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.08660788f ? 
                 (data[34 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13700955f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.084705114f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.63498455f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28517386f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28890842f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[17 /* X18 */] <-0.36957392f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47395465f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23570748f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6664189f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2882289f ? 
             (data[34 /* X35 */] <-0.83984375f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28155f ? 
                     (data[15 /* X16 */] <0.14015286f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.13171329f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.42117336f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.51887476f ? 
                         (data[30 /* X31 */] <0.18248065f ? 
                             (data[5 /* X6 */] <0.1560997f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15245442f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27128986f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23199514f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41368374f ? 
                             (data[7 /* X8 */] <0.0757785f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3193263f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <-0.15799215f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[19 /* X20 */] <-0.28596294f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[19 /* X20 */] <-0.05739446f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.3671875f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10492395f ? 
             (data[19 /* X20 */] <-0.49951598f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44564095f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.2168299f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.3015643f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2660936f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.6045243f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.65660626f ? 
                 (data[6 /* X7 */] <0.32109278f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.8515625f ? 
                     (data[25 /* X26 */] <-0.14545155f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.13859043f ? 
                         (data[25 /* X26 */] <-0.3033091f ? 
                             (data[30 /* X31 */] <0.3498143f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (data[27 /* X28 */] <-0.5907047f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.110872336f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[0 /* X1 */] <-0.13320324f ? 
            0.0f : 
             (data[34 /* X35 */] <0.05859375f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.21550967f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23369482f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07972323f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18761584f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30710143f ? 
                 (data[16 /* X17 */] <-0.5902049f ? 
                     (data[35 /* X36 */] <-0.07070313f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.046602756f ? 
                         (data[32 /* X33 */] <-0.07528453f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16804634f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19660133f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.5353902f ? 
                     (data[28 /* X29 */] <0.103229925f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.57936376f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0487114f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4723172f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.15623176f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.414691f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6439073f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23906927f ? 
                 (data[34 /* X35 */] <-0.22135566f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36839592f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17420559f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[32 /* X33 */] <-0.3027347f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11400829f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.17681804f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21457328f ? 
                 (data[19 /* X20 */] <-0.33267766f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20972846f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.043869436f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.11293822f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1330468f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.0637878f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28220332f ? 
                 (data[7 /* X8 */] <0.06265087f ? 
                     (data[22 /* X23 */] <0.12126297f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.14143758f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.18653956f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15859313f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49263293f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.24835108f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104305856f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.35546875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6751399f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10556925f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.15433799f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3775427f ? 
                                 (data[15 /* X16 */] <0.18714179f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.005961594f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[23 /* X24 */] <0.11910501f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1076729f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1381857f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.1176601f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.43069518f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.36129054f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[25 /* X26 */] <-0.32060048f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23750539f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.12579487f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.10614504f ? 
             (data[33 /* X34 */] <-0.375f ? 
                 (data[3 /* X4 */] <-0.16836393f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.115671836f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20917961f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.5953584f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12609334f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.20392439f ? 
             (data[18 /* X19 */] <0.13384096f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.23042004f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19000962f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15783766f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55176175f ? 
                     (data[3 /* X4 */] <-0.30594087f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2985252f ? 
                             (data[20 /* X21 */] <0.09505796f ? 
                                 (data[22 /* X23 */] <0.101150796f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.0557621f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20914653f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21790464f ? 
                                        0.0f : 
                                         (data[5 /* X6 */] <0.31180438f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98972464f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5989574f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.25961685f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.13968298f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07597576f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12050573f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16016752f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.15658554f ? 
                        1.0f : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.10196867f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24588776f ? 
                     (data[30 /* X31 */] <0.1688393f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20808226f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35981792f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[19 /* X20 */] <-1.0042019f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23041406f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25028545f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[11 /* X12 */] <-0.35088247f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04208541f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                     (data[10 /* X11 */] <-0.6075379f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.14517784f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29556042f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[14 /* X15 */] <0.15295944f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26719862f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18608378f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.06265087f ? 
                     (data[32 /* X33 */] <-0.40340936f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.375f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5790506f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16797526f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.676339f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.103946194f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.16570713f ? 
                     (data[5 /* X6 */] <0.15433799f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12828904f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.428572f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[3 /* X4 */] <-0.5910697f ? 
                         (data[27 /* X28 */] <0.42018616f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27329162f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.16995636f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2849882f ? 
             (data[5 /* X6 */] <0.1886885f ? 
                 (data[23 /* X24 */] <0.18710315f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.2598655f ? 
                 (data[10 /* X11 */] <0.18448666f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[17 /* X18 */] <-0.26586416f ? 
                 (data[11 /* X12 */] <-0.22240867f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.25316682f ? 
                     (data[9 /* X10 */] <0.099897474f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.66682816f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.12533134f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093531795f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[10 /* X11 */] <-0.6006276f ? 
             (data[28 /* X29 */] <0.1537869f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.6561575f ? 
                 (data[4 /* X5 */] <0.36703613f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.05890284f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14925595f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.15496367f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.23156139f ? 
                             (data[35 /* X36 */] <-0.025f ? 
                                 (data[17 /* X18 */] <-0.14219521f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.571429f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08544227f ? 
             (data[15 /* X16 */] <0.053594276f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.047693297f ? 
         (data[35 /* X36 */] <-0.021191407f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10492395f ? 
             (data[21 /* X22 */] <0.1749704f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2699907f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33358818f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4625f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21839759f ? 
                                 (data[0 /* X1 */] <0.09528857f ? 
                                     (data[5 /* X6 */] <0.11656454f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[22 /* X23 */] <0.20173812f ? 
                                     (data[16 /* X17 */] <-0.39709288f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09096244f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.085876144f ? 
                     (data[10 /* X11 */] <-0.17382053f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.2300789f ? 
                         (data[19 /* X20 */] <-0.36604533f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.15952283f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0335039f ? 
                     (data[3 /* X4 */] <-0.28672156f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.25f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3944925f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (data[11 /* X12 */] <-0.5358863f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3125f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3135485f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.351611f ? 
                 (data[11 /* X12 */] <-0.43197304f ? 
                     (data[6 /* X7 */] <0.17054386f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3454144f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15597078f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0353053f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43372223f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[28 /* X29 */] <0.105933346f ? 
             (data[0 /* X1 */] <0.28148076f ? 
                 (data[4 /* X5 */] <0.14964125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2784801f ? 
             (data[20 /* X21 */] <0.116965845f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13705091f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.0663536f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.875f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.41893035f ? 
                             (data[11 /* X12 */] <-0.12566048f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.330843f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                                         (data[24 /* X25 */] <-0.6755799f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[0 /* X1 */] <0.40802103f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.06391314f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.20681296f ? 
                     (data[13 /* X14 */] <0.098483585f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26749486f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0027255735f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19056183f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4336805f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.2547957f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20096263f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28297606f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.46902472f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20073448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.107411064f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11487363f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23151724f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13586268f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19344994f ? 
                 (data[30 /* X31 */] <0.11882111f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19260423f ? 
                         (data[11 /* X12 */] <-0.12566048f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[18 /* X19 */] <-0.3978993f ? 
                1.0f : 
                0.0f)) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27840012f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37869108f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.11858484f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1420598f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.65225863f ? 
                 (data[2 /* X3 */] <-0.065387376f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.21589085f ? 
                         (data[34 /* X35 */] <-0.5f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.40124565f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4766204f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09181486f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22694856f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16490014f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.609375f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18553588f ? 
             (data[17 /* X18 */] <-0.4438453f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07495675f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16855991f ? 
                     (data[34 /* X35 */] <-0.28125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17877994f ? 
             (data[23 /* X24 */] <0.06374449f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.21550967f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.39107108f ? 
                     (data[30 /* X31 */] <0.18702775f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.14654635f ? 
                            1.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19939788f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.386845f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.17224964f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27260283f ? 
                     (data[18 /* X19 */] <-0.16430241f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.08620479f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28070417f ? 
                                 (data[34 /* X35 */] <-0.838096f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23830411f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104305856f ? 
            0.0f : 
             (data[6 /* X7 */] <0.15113601f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27199253f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20673716f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.15433799f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.22421755f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[17 /* X18 */] <0.015669657f ? 
            0.0f : 
             (data[10 /* X11 */] <0.03694841f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9575501f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.259826f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15002295f ? 
                 (data[34 /* X35 */] <-0.140625f ? 
                     (data[26 /* X27 */] <0.05961226f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20235838f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.053698592f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[32 /* X33 */] <-0.9254262f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21057178f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.039861627f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.69920963f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32655367f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7454959f ? 
                 (data[31 /* X32 */] <0.09458644f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25961685f ? 
                         (data[4 /* X5 */] <0.09035174f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24858266f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.3150021f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.21145934f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48784146f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.723401f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15796818f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.47648814f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22604114f ? 
             (data[28 /* X29 */] <0.058079805f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18542437f ? 
                     (data[10 /* X11 */] <-0.42674324f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23464656f ? 
                             (data[27 /* X28 */] <-0.24428648f ? 
                                 (data[1 /* X2 */] <-0.27815768f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.80468667f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15892844f ? 
                             (data[32 /* X33 */] <-0.36835966f ? 
                                 (data[6 /* X7 */] <0.109120905f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[35 /* X36 */] <-0.5212775f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20800242f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.019296004f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1875f ? 
                         (data[34 /* X35 */] <-0.9151788f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17531298f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31182843f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.25363556f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37506717f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[31 /* X32 */] <0.110399246f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.48964843f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.15534262f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[29 /* X30 */] <0.137786f ? 
             (data[1 /* X2 */] <-0.44593123f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.05417911f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.041416027f ? 
                        1.0f : 
                        0.0f))) : 
             (data[13 /* X14 */] <0.117223f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.44398087f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41315502f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3070408f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1757981f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.48997393f ? 
                            1.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.336363f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.15f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[21 /* X22 */] <0.15591422f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X10 */] <-0.04763062f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.029189609f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.17020635f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.032135762f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21613336f ? 
             (data[5 /* X6 */] <0.17036822f ? 
                 (data[14 /* X15 */] <0.11471636f ? 
                     (data[32 /* X33 */] <-0.29900602f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.05003504f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19155915f ? 
                         (data[23 /* X24 */] <0.15245442f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.030489804f ? 
                                1.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.8174212f ? 
                                    0.0f : 
                                     (data[21 /* X22 */] <0.19465269f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28240564f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24121164f ? 
                        1.0f : 
                         (data[35 /* X36 */] <0.23123139f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[4 /* X5 */] <0.15387622f ? 
                 (data[19 /* X20 */] <-0.18021673f ? 
                     (data[32 /* X33 */] <0.17826648f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.078125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.3694142f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.28369224f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19956711f ? 
                            1.0f : 
                            0.0f) : 
                         (data[15 /* X16 */] <0.078325294f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22264892f ? 
                                 (data[25 /* X26 */] <-0.30862963f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[13 /* X14 */] <0.22951157f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.09884834f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.56001735f ? 
             (data[22 /* X23 */] <0.17351018f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.077798136f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4375f ? 
                         (data[21 /* X22 */] <0.19402659f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37201717f ? 
                 (data[15 /* X16 */] <0.04027305f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.203125f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28876796f ? 
                         (data[3 /* X4 */] <-0.23599684f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.08642011f ? 
                                 (data[6 /* X7 */] <0.20885877f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12566048f ? 
                                    0.0f : 
                                     (data[6 /* X7 */] <0.15302081f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25765944f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27178338f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.033189304f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.20430677f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5861917f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05766211f ? 
                     (data[8 /* X9 */] <-0.15999246f ? 
                        0.0f : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.13022356f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[9 /* X10 */] <-0.16519207f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1986857f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6778758f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22874409f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8494309f ? 
                            0.0f : 
                            1.0f) : 
                         (data[14 /* X15 */] <0.11471636f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.19076288f ? 
                                 (data[27 /* X28 */] <-0.22112495f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35274768f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3628086f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[5 /* X6 */] <0.1612081f ? 
             (data[22 /* X23 */] <0.1677265f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3790878f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.49787742f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18513381f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.10948745f ? 
                        1.0f : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.11086366f ? 
                 (data[34 /* X35 */] <-0.6878467f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2890625f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2277102f ? 
             (data[15 /* X16 */] <0.10460201f ? 
                 (data[0 /* X1 */] <0.28155f ? 
                     (data[27 /* X28 */] <-0.08085656f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44169605f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.19392721f ? 
                     (data[17 /* X18 */] <-0.29175234f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.23257469f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24795903f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.07449477f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.076805435f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25478548f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21311483f ? 
                 (data[31 /* X32 */] <0.03787845f ? 
                     (data[8 /* X9 */] <-0.25316682f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.30852303f ? 
                         (data[12 /* X13 */] <0.1185993f ? 
                            1.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14428274f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X5 */] <0.11497328f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07238087f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[30 /* X31 */] <0.2156287f ? 
                     (data[14 /* X15 */] <0.19545174f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2009561f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.2152983f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.46903175f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21056925f ? 
                             (data[5 /* X6 */] <0.36724088f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <0.009390595f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05977703f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.18189168f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03379986f ? 
             (data[22 /* X23 */] <0.049161218f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.4381686f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14811634f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.46501005f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3764926f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.18608378f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30836368f ? 
             (data[16 /* X17 */] <-0.25396228f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.119451694f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08094905f ? 
                         (data[26 /* X27 */] <-0.09929942f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.46063974f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.09534236f ? 
                                    1.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.04497065f ? 
                                        0.0f : 
                                         (data[11 /* X12 */] <-0.112758964f ? 
                                            1.0f : 
                                            0.0f))))) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.62969744f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.8856316f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.12724079f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15611729f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.121999234f ? 
                                1.0f : 
                                 (data[34 /* X35 */] <-0.4f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.40845215f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23713057f ? 
                 (data[34 /* X35 */] <-0.140625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13275528f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[35 /* X36 */] <-0.9523926f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (data[10 /* X11 */] <-0.2370512f ? 
                         (data[9 /* X10 */] <-0.12139467f ? 
                            0.0f : 
                            1.0f) : 
                         (data[26 /* X27 */] <-0.15356743f ? 
                             (data[23 /* X24 */] <0.1862963f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.21347646f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.29947352f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6368423f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[35 /* X36 */] <-0.46870118f ? 
             (data[32 /* X33 */] <0.04588884f ? 
                 (data[4 /* X5 */] <0.1609345f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.40930623f ? 
            1.0f : 
             (data[2 /* X3 */] <0.002948124f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.36324114f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                         (data[7 /* X8 */] <0.084029205f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.075228326f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[10 /* X11 */] <-0.6427814f ? 
             (data[3 /* X4 */] <0.18248188f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11061913f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.09759948f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17608052f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22422636f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.107498504f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.34234878f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3283806f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13222992f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30715528f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))))) : 
         (data[19 /* X20 */] <0.10318742f ? 
             (data[19 /* X20 */] <-0.82284653f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13442904f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10421077f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.2205463f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25448158f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3515625f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22519636f ? 
                         (data[16 /* X17 */] <-0.22874409f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-0.61f ? 
                                0.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24940307f ? 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1400663f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32505327f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0515778f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0113424f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21386866f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22111577f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26991427f ? 
                                        0.0f : 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6658794f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14269222f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29971153f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10196867f ? 
             (data[31 /* X32 */] <0.12948367f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.42823282f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3249093f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.72081447f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.04763062f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.14110166f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.23204073f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[31 /* X32 */] <0.20364027f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009850529f ? 
         (data[16 /* X17 */] <-0.2035259f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05859375f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.121604584f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13928309f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.28409126f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.15032217f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.09028892f ? 
                         (data[2 /* X3 */] <-0.56833726f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.175536f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29605967f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3412789f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.324914f ? 
                 (data[13 /* X14 */] <0.09374658f ? 
                     (data[8 /* X9 */] <-0.02688621f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7353691f ? 
                         (data[17 /* X18 */] <-0.43413725f ? 
                             (data[22 /* X23 */] <0.13880815f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[25 /* X26 */] <0.26105973f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <0.21875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.151172f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22785212f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1573213f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.09996494f ? 
                     (data[28 /* X29 */] <0.11712451f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[21 /* X22 */] <0.2022554f ? 
             (data[30 /* X31 */] <0.10290622f ? 
                 (data[2 /* X3 */] <0.3303142f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.54879916f ? 
                     (data[6 /* X7 */] <0.11004897f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.5318909f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12576449f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18866226f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[28 /* X29 */] <0.21912539f ? 
                     (data[2 /* X3 */] <-0.14080854f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.18155463f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.008084886f ? 
             (data[22 /* X23 */] <0.1721343f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0392675f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13627134f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.116203874f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38960773f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[21 /* X22 */] <0.08705211f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[0 /* X1 */] <-0.6561575f ? 
             (data[23 /* X24 */] <0.04590957f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.5363174f ? 
                 (data[33 /* X34 */] <0.078125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1986857f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3716963f ? 
                         (data[4 /* X5 */] <0.11858484f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5481327f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11973726f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.14848539f ? 
                         (data[8 /* X9 */] <-0.1333712f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24031985f ? 
                                 (data[21 /* X22 */] <0.13586591f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10751969f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19099492f ? 
             (data[34 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[27 /* X28 */] <-0.3252406f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24580608f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.011113917f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32782334f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26686844f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.1644805f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.21578933f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                             (data[11 /* X12 */] <-0.2704489f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[30 /* X31 */] <0.1745232f ? 
                 (data[2 /* X3 */] <-0.3789044f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.10436668f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2796875f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23959602f ? 
                             (data[13 /* X14 */] <0.07873551f ? 
                                 (data[17 /* X18 */] <-0.293781f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.57416147f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1531858f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.12960042f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[24 /* X25 */] <-0.056108553f ? 
            1.0f : 
             (data[29 /* X30 */] <0.14163989f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.079750896f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[14 /* X15 */] <0.0855029f ? 
             (data[23 /* X24 */] <0.11434081f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5194305f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20434289f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41845965f ? 
                 (data[11 /* X12 */] <-0.4259565f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0639837f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.25555813f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.29921874f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[7 /* X8 */] <0.19645175f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.99830407f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[24 /* X25 */] <-0.61950904f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3211675f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.06187029f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1796875f ? 
                     (data[2 /* X3 */] <-0.66839886f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3513594f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31977546f ? 
                         (data[12 /* X13 */] <0.08456342f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.088503584f ? 
                                 (data[19 /* X20 */] <-0.097153455f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2831043f ? 
                                    0.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                                        0.0f : 
                                         (data[22 /* X23 */] <0.21283914f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (data[27 /* X28 */] <-0.04906611f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.12630652f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.019081874f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[32 /* X33 */] <-0.5600144f ? 
             (data[9 /* X10 */] <-0.14905618f ? 
                 (data[22 /* X23 */] <0.16917242f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2882289f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.105371624f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16720396f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32396564f ? 
                 (data[27 /* X28 */] <0.39085788f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.21360382f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (data[10 /* X11 */] <-0.5532046f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.25048175f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1796875f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.9085938f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.3818177f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.13812636f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[13 /* X14 */] <0.10424049f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0023246268f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.87890625f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.54279387f ? 
                     (data[10 /* X11 */] <-0.29714134f ? 
                         (data[34 /* X35 */] <-0.5625f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.56945986f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33181828f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (data[9 /* X10 */] <-0.3426868f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.39611658f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.2859556f ? 
             (data[31 /* X32 */] <0.071685135f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.6164353f ? 
                 (data[15 /* X16 */] <0.09996494f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4017842f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27422202f ? 
                         (data[0 /* X1 */] <-0.4965711f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08623846f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.017632423f ? 
             (data[32 /* X33 */] <-0.27663386f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16904536f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.23213021f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11314177f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.123705655f ? 
                            0.0f : 
                            1.0f) : 
                         (data[26 /* X27 */] <0.41451535f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.13679539f ? 
                                 (data[4 /* X5 */] <0.16954903f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[22 /* X23 */] <0.1695577f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38828915f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[9 /* X10 */] <-0.75602454f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3009045f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3309152f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.90625f ? 
                             (data[19 /* X20 */] <-0.75755626f ? 
                                 (data[4 /* X5 */] <0.18904154f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[6 /* X7 */] <0.28360653f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[30 /* X31 */] <0.1838454f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[14 /* X15 */] <0.09400136f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.52216667f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0075168936f ? 
             (data[12 /* X13 */] <0.151172f ? 
                 (data[32 /* X33 */] <-0.112167574f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.57936376f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.11560332f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.47781402f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[17 /* X18 */] <-0.3807429f ? 
             (data[13 /* X14 */] <0.09374658f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1210902f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.08660788f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.11311736f ? 
                     (data[33 /* X34 */] <-0.390625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17877927f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25772956f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.55065036f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.46814623f ? 
                             (data[25 /* X26 */] <-0.66222996f ? 
                                1.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27045307f ? 
                                     (data[31 /* X32 */] <0.058816787f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[22 /* X23 */] <0.14736673f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f))))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3852917f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28092518f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.216102f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.17311336f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.066848874f ? 
            0.0f : 
             (data[30 /* X31 */] <0.11995788f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41624662f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.17019758f ? 
             (data[28 /* X29 */] <0.28998545f ? 
                 (data[34 /* X35 */] <-0.4921875f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17999938f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16370568f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[4 /* X5 */] <0.17222774f ? 
                 (data[11 /* X12 */] <-0.17928477f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26996195f ? 
                         (data[24 /* X25 */] <-0.63325053f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.14096919f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13326947f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.031570602f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[29 /* X30 */] <0.15362978f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07214254f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.1841734f ? 
                         (data[4 /* X5 */] <0.17545444f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0116176875f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5320266f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3967583f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38482705f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17463551f ? 
                        0.0f : 
                         (data[11 /* X12 */] <0.28612757f ? 
                             (data[10 /* X11 */] <0.18448666f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[11 /* X12 */] <0.98972464f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.5703125f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.12386921f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.43164062f ? 
             (data[29 /* X30 */] <0.14249632f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.08849963f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4107019f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.34379864f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20578197f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98197275f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                             (data[19 /* X20 */] <-0.5290477f ? 
                                 (data[25 /* X26 */] <-0.46578532f ? 
                                    0.0f : 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22975059f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[24 /* X25 */] <0.020811316f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.53648823f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4234083f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13667957f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.09771944f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.53937906f ? 
                         (data[11 /* X12 */] <-0.58054703f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31977546f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.010899788f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.23204073f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15916993f ? 
             (data[20 /* X21 */] <0.12346394f ? 
                 (data[15 /* X16 */] <0.053594276f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.035046007f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.06515149f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2633218f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22112949f ? 
                 (data[19 /* X20 */] <-0.3226585f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.53125f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.14955059f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.08267354f ? 
            1.0f : 
             (data[15 /* X16 */] <0.05977703f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.125f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14803286f ? 
                        0.0f : 
                        1.0f) : 
                     (data[17 /* X18 */] <-0.4600254f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.41893035f ? 
                     (data[17 /* X18 */] <-0.6800748f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79833436f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23240836f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.19929819f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[18 /* X19 */] <0.4504262f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (data[32 /* X33 */] <-0.20951742f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3193353f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42441407f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21135725f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30157933f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.26305002f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[31 /* X32 */] <0.080174804f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11654755f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.9453125f ? 
                     (data[4 /* X5 */] <0.23199423f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[19 /* X20 */] <-0.5620803f ? 
             (data[6 /* X7 */] <0.1544873f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <0.37237966f ? 
             (data[35 /* X36 */] <-0.5734375f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.7858576f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.49885768f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36314568f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.8331926f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[31 /* X32 */] <0.109853975f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (data[9 /* X10 */] <-0.34701195f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.031843923f ? 
                     (data[19 /* X20 */] <-0.23257469f ? 
                         (data[34 /* X35 */] <-0.25f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36734515f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30506656f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.3524096f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[33 /* X34 */] <-0.59375f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <0.07966149f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X5 */] <0.16234615f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[32 /* X33 */] <-0.34188595f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16720396f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05700566f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.03978249f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[26 /* X27 */] <0.80968964f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.12002883f ? 
             (data[6 /* X7 */] <0.07951484f ? 
                 (data[19 /* X20 */] <0.1845211f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.3199449f ? 
                 (data[33 /* X34 */] <-0.5625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.16201864f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03184976f ? 
                         (data[7 /* X8 */] <0.16195051f ? 
                             (data[3 /* X4 */] <0.1967939f ? 
                                 (data[13 /* X14 */] <0.23437041f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.38394505f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.08798808f ? 
                                 (data[30 /* X31 */] <0.33834568f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.36722103f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.20615011f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20447196f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23899014f ? 
                 (data[25 /* X26 */] <-0.009051617f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.78255564f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.59375f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.283812f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.3712627f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.11434081f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28411037f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3166196f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.073345706f ? 
                 (data[29 /* X30 */] <0.08682894f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.20548353f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17088334f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30357227f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.6826716f ? 
             (data[29 /* X30 */] <0.21957421f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.83966625f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.34375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.72910154f ? 
                     (data[7 /* X8 */] <0.057601772f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.1377597f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[1 /* X2 */] <-0.8690813f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24484906f ? 
             (data[7 /* X8 */] <0.07527359f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.21871778f ? 
                     (data[33 /* X34 */] <-0.25f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15671006f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6589009f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[3 /* X4 */] <-0.70942736f ? 
                         (data[15 /* X16 */] <0.26508448f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[34 /* X35 */] <-0.44726562f ? 
             (data[7 /* X8 */] <0.3327772f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.16736503f ? 
            0.0f : 
             (data[23 /* X24 */] <0.11000972f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.305042f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0766958f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11129864f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-0.3496022f ? 
             (data[15 /* X16 */] <0.05977703f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.08067322f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16283742f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.18757676f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4824955f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38792154f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40625f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.15835239f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.15232162f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.6551836f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15247263f ? 
             (data[11 /* X12 */] <-0.23789003f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.3089517f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29922137f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15204795f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.390625f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27200863f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.31204885f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18937327f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15560974f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0359375f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.13601771f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
                         (data[29 /* X30 */] <0.10738304f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9725649f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22383206f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.13392763f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[11 /* X12 */] <-0.45276862f ? 
             (data[7 /* X8 */] <0.103043586f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <0.029088596f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8503015f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20364027f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2205254f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21434592f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[13 /* X14 */] <0.13572223f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[15 /* X16 */] <0.039683074f ? 
             (data[23 /* X24 */] <0.041578475f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.26657137f ? 
                 (data[0 /* X1 */] <0.17143852f ? 
                     (data[34 /* X35 */] <0.03749781f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.012334135f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.5489028f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.10787509f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.04938801f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <-0.16008231f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[17 /* X18 */] <-0.7383232f ? 
                     (data[33 /* X34 */] <0.046875f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22282387f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16903281f ? 
                             (data[25 /* X26 */] <-0.50507426f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.007308618f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0757785f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9406723f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28402588f ? 
                 (data[12 /* X13 */] <0.15308803f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.5401114f ? 
                         (data[33 /* X34 */] <-0.25f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.19781727f ? 
                             (data[27 /* X28 */] <-0.77089924f ? 
                                0.0f : 
                                1.0f) : 
                             (data[13 /* X14 */] <0.17202213f ? 
                                 (data[19 /* X20 */] <-0.39273947f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04466349f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.13209829f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18385667f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.18352097f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17793353f ? 
             (data[27 /* X28 */] <-0.29346833f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2432147f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22589757f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.098748885f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22876412f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.021182511f ? 
                 (data[1 /* X2 */] <-0.2550252f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <5.370503E-4f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.08149999f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07911662f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.053145986f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.3296875f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31108934f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38458568f ? 
             (data[17 /* X18 */] <-0.5894663f ? 
                 (data[9 /* X10 */] <-0.37956885f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25371304f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.5369965f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17951714f ? 
             (data[9 /* X10 */] <-0.25048175f ? 
                 (data[32 /* X33 */] <-0.16477312f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.090980604f ? 
                         (data[3 /* X4 */] <-0.08583194f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.19076288f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27527857f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1799126f ? 
                        0.0f : 
                        1.0f))) : 
             (data[31 /* X32 */] <0.041150067f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.16684465f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.28369224f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4749315f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.087138124f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31232104f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.079598784f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060549874f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[14 /* X15 */] <0.0716929f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23522995f ? 
             (data[9 /* X10 */] <-0.0061383443f ? 
                 (data[6 /* X7 */] <0.15865244f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.56711084f ? 
                         (data[9 /* X10 */] <-0.06742046f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.796875f ? 
                     (data[2 /* X3 */] <0.011392296f ? 
                         (data[27 /* X28 */] <-0.3772657f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37410504f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (data[16 /* X17 */] <-0.23925167f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16728695f ? 
                 (data[35 /* X36 */] <-0.44394532f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.06929746f ? 
                         (data[15 /* X16 */] <0.04404315f ? 
                             (data[15 /* X16 */] <0.037471272f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22348431f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.012270165f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13589169f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.06281725f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.06843606f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.09375f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1495474f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.08723701f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25593582f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.22115678f ? 
                            1.0f : 
                            0.0f))))) : 
        0.03773585f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (data[3 /* X4 */] <-0.5635938f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.6289952f ? 
             (data[31 /* X32 */] <0.16547143f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14343631f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18969564f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18635358f ? 
                     (data[27 /* X28 */] <-0.37991518f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.125f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.08572352f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.455f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[16 /* X17 */] <-0.30019563f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.61452335f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.041524004f ? 
                 (data[18 /* X19 */] <-0.16430241f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.06843606f ? 
                     (data[12 /* X13 */] <0.18663788f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.7285043f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.78371423f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[3 /* X4 */] <-0.11129864f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.113765195f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.72376114f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3859638f ? 
                 (data[7 /* X8 */] <0.0979945f ? 
                     (data[18 /* X19 */] <-0.04135669f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3002671f ? 
                         (data[23 /* X24 */] <0.09701645f ? 
                             (data[6 /* X7 */] <0.22823368f ? 
                                 (data[3 /* X4 */] <-0.046624657f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[26 /* X27 */] <-0.20910579f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38671622f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48976883f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24459657f ? 
             (data[31 /* X32 */] <0.035697374f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.7138401f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31916404f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.04292989f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21096379f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.13195859f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0010253906f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30515844f ? 
                                    0.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2007192f ? 
                                        0.0f : 
                                        1.0f))))))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28820094f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3004096f ? 
                     (data[7 /* X8 */] <0.10591193f ? 
                         (data[18 /* X19 */] <0.35206962f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.5671988f ? 
                    1.0f : 
                    0.0f))) : 
         (data[26 /* X27 */] <0.22970036f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17606133f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[3 /* X4 */] <-0.33321917f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26171875f ? 
                 (data[22 /* X23 */] <0.11383311f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.2785217f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1589282f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3213332f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
             (data[35 /* X36 */] <0.0016601563f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09069081f ? 
                     (data[3 /* X4 */] <-0.28531644f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05038934f ? 
                             (data[32 /* X33 */] <-0.427273f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.23257469f ? 
                                     (data[31 /* X32 */] <0.059623763f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19924776f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[16 /* X17 */] <-0.6322352f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19519895f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14343631f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.17823367f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.22070312f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23222308f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
        0.02f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23162666f ? 
             (data[11 /* X12 */] <-0.39770085f ? 
                 (data[29 /* X30 */] <0.124511465f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.51498264f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1449066f ? 
                         (data[30 /* X31 */] <0.14610377f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.1112339f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.51533824f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[12 /* X13 */] <0.09321176f ? 
             (data[5 /* X6 */] <0.16464314f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.81337893f ? 
                 (data[4 /* X5 */] <0.13693635f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
                     (data[10 /* X11 */] <-0.32135877f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11009286f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.65f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.02728498f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[6 /* X7 */] <0.1805194f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
             (data[0 /* X1 */] <-0.33311293f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24835108f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.8482811f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53216f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.03345086f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30526176f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15246457f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <-0.11628176f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[21 /* X22 */] <0.1330468f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11087594f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.36436504f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[33 /* X34 */] <-0.34375f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[4 /* X5 */] <0.14399463f ? 
                1.0f : 
                 (data[16 /* X17 */] <0.023437858f ? 
                     (data[34 /* X35 */] <-0.8660716f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[11 /* X12 */] <-0.2221842f ? 
             (data[35 /* X36 */] <-0.40585938f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.733108f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.09025463f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09350767f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.046525847f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.1670752f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25162396f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.5409277f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1796875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39928785f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.52487355f ? 
                     (data[27 /* X28 */] <-0.69428796f ? 
                         (data[2 /* X3 */] <0.08703348f ? 
                             (data[31 /* X32 */] <0.37987125f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.07899641f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.117002256f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37812623f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13778804f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[9 /* X10 */] <0.27281797f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.15654768f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.18671377f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.1318295f ? 
                         (data[7 /* X8 */] <0.047503594f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.5154617f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16349812f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20927005f ? 
                 (data[14 /* X15 */] <0.14446098f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.006982489f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04024999f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3354107f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.2328942f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35690084f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49147657f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.119871244f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10878915f ? 
                 (data[32 /* X33 */] <-0.3064634f ? 
                     (data[22 /* X23 */] <0.112781614f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37582892f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.121604584f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
                             (data[29 /* X30 */] <0.10010995f ? 
                                 (data[33 /* X34 */] <-0.1f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[16 /* X17 */] <-0.544602f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[14 /* X15 */] <0.10196867f ? 
            1.0f : 
             (data[15 /* X16 */] <0.06905116f ? 
                 (data[34 /* X35 */] <-0.23836899f ? 
                     (data[19 /* X20 */] <-0.1324717f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1185993f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.061308842f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.693378f ? 
                     (data[3 /* X4 */] <-0.8776959f ? 
                         (data[23 /* X24 */] <0.2841196f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.29743874f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.36219323f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <0.11418054f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95296687f ? 
             (data[23 /* X24 */] <0.101114765f ? 
                 (data[28 /* X29 */] <0.06268111f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                     (data[11 /* X12 */] <-0.27580848f ? 
                         (data[29 /* X30 */] <0.13478853f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                             (data[2 /* X3 */] <-0.03723483f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.19827497f ? 
                                    0.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.124249764f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[31 /* X32 */] <0.22326995f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11387614f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[29 /* X30 */] <0.11166515f ? 
             (data[9 /* X10 */] <-0.056851126f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.13700955f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41236436f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5800781f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.048954427f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[18 /* X19 */] <0.16611421f ? 
             (data[8 /* X9 */] <0.3591219f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3066879f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                 (data[25 /* X26 */] <-0.59838545f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.104069926f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                             (data[10 /* X11 */] <-0.8272042f ? 
                                 (data[10 /* X11 */] <-1.0632654f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29348245f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.2806982f ? 
                                         (data[12 /* X13 */] <0.2749482f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                            1.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27925813f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15669852f ? 
                1.0f : 
                 (data[2 /* X3 */] <0.049782135f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17633021f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2961584f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.40839317f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11028638f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31249937f ? 
                     (data[0 /* X1 */] <-0.08548826f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.53212774f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.15483734f ? 
                                0.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19957021f ? 
                                    1.0f : 
                                     (data[30 /* X31 */] <0.21885753f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.84612995f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13022356f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[19 /* X20 */] <-0.9000328f ? 
             (data[13 /* X14 */] <0.17113918f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26021764f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30319023f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[14 /* X15 */] <0.060007513f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.53320503f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19375303f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.15371649f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28125f ? 
                            0.0f : 
                             (data[35 /* X36 */] <0.244841f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.25171593f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19070803f ? 
         (data[15 /* X16 */] <0.07368823f ? 
             (data[2 /* X3 */] <-0.42689168f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.5048828f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.41082188f ? 
                         (data[7 /* X8 */] <0.034611408f ? 
                            1.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17105998f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.40005395f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7938477f ? 
                 (data[30 /* X31 */] <0.15065087f ? 
                     (data[24 /* X25 */] <-0.479346f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24646446f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7207911f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                 (data[31 /* X32 */] <0.055327065f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15344633f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.357458f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845895f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2952455f ? 
                         (data[21 /* X22 */] <0.27718085f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1806763f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.14615703f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.15534262f ? 
                             (data[34 /* X35 */] <-0.2f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11347459f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14941406f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0359375f ? 
             (data[3 /* X4 */] <-0.5699344f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.010394619f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.50531894f ? 
                         (data[33 /* X34 */] <0.3125f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1936821f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15038244f ? 
                                    0.0f : 
                                     (data[24 /* X25 */] <0.21982028f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.09806558f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.14920336f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.24669966f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32578057f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.018181818f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30486944f ? 
             (data[13 /* X14 */] <0.106699f ? 
                 (data[27 /* X28 */] <-0.20548353f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06131134f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.06854395f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41315502f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10295366f ? 
                 (data[30 /* X31 */] <0.13506055f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.039861627f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.65625f ? 
                             (data[31 /* X32 */] <0.08673456f ? 
                                 (data[4 /* X5 */] <0.16149916f ? 
                                     (data[18 /* X19 */] <0.25371304f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49002948f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.4515625f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.14446098f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.55536795f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23794405f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.014200929f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07832031f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.115442805f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.31183913f ? 
                             (data[18 /* X19 */] <0.017657256f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.15615916f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19654441f ? 
                             (data[11 /* X12 */] <-0.26293865f ? 
                                 (data[34 /* X35 */] <0.0010253906f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[12 /* X13 */] <0.10327098f ? 
                             (data[17 /* X18 */] <-0.32022932f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20409873f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.1995367f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19046244f ? 
                 (data[30 /* X31 */] <0.12791532f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37418133f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21536568f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50387436f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.08084321f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.61122006f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X9 */] <0.07876687f ? 
         (data[14 /* X15 */] <0.10409328f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08177367f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4749315f ? 
                     (data[14 /* X15 */] <0.1822188f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8573131f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10604086f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0064380323f ? 
                 (data[15 /* X16 */] <0.11851321f ? 
                     (data[31 /* X32 */] <0.12948367f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.12464124f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[32 /* X33 */] <-0.34188595f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14228092f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-1.0105081f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.6442437f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11434081f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31182843f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40983614f ? 
                         (data[25 /* X26 */] <-0.1318295f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                 (data[15 /* X16 */] <0.08458534f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.527272f ? 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20199816f ? 
                                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4935633f ? 
                                                0.0f : 
                                                 (data[18 /* X19 */] <0.585223f ? 
                                                    1.0f : 
                                                    0.0f)) : 
                                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.040000014f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                     (data[23 /* X24 */] <0.06652556f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.6666667f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.14110166f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.25992408f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[30 /* X31 */] <0.036404736f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.6905186f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.41041008f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.15258731f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6655812f ? 
                 (data[24 /* X25 */] <-0.43462217f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3712627f ? 
                        1.0f : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.703125f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.37738526f ? 
                             (data[13 /* X14 */] <0.19448814f ? 
                                1.0f : 
                                0.0f) : 
                             (data[25 /* X26 */] <-0.09499614f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[19 /* X20 */] <-0.5391401f ? 
             (data[29 /* X30 */] <0.1176601f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18024483f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <0.37237966f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23114678f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.116758205f ? 
                 (data[30 /* X31 */] <0.21037628f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.7540749f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.119871244f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2155534f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.442557f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.3328484f ? 
                         (data[11 /* X12 */] <-0.34015763f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20748974f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08451264f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.17823367f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[29 /* X30 */] <0.20929715f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16733252f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.089116834f ? 
                 (data[3 /* X4 */] <-0.041552186f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.51198435f ? 
             (data[3 /* X4 */] <-0.14722863f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.1417832f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.017632423f ? 
                         (data[25 /* X26 */] <-0.14196284f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23946743f ? 
                                 (data[19 /* X20 */] <-0.8732338f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4621026f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[32 /* X33 */] <0.20486253f ? 
                             (data[17 /* X18 */] <-0.23738718f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33525425f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26173958f ? 
                 (data[24 /* X25 */] <-0.27872315f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.38134003f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.11546671f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X6 */] <0.23219916f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10196867f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4273835f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.59615576f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.44121388f ? 
                         (data[11 /* X12 */] <-0.5244492f ? 
                             (data[20 /* X21 */] <0.18766566f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35928202f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <0.048690338f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[34 /* X35 */] <-0.53125f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <0.18670894f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <0.25452793f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[15 /* X16 */] <0.038137384f ? 
             (data[28 /* X29 */] <0.09489022f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.12040043f ? 
                 (data[28 /* X29 */] <0.0534785f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.11882244f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5958799f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.069209896f ? 
                             (data[25 /* X26 */] <-0.46687695f ? 
                                 (data[6 /* X7 */] <0.06868548f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24995454f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.07484126f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[9 /* X10 */] <0.024762541f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19162561f ? 
             (data[3 /* X4 */] <-0.8531473f ? 
                 (data[6 /* X7 */] <0.18989097f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.2075843f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.013762659f ? 
                     (data[13 /* X14 */] <0.13548169f ? 
                         (data[35 /* X36 */] <-0.2f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0026599045f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
        0.02f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.65636027f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
                 (data[2 /* X3 */] <-0.2829298f ? 
                     (data[8 /* X9 */] <-0.051802393f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24298088f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.26532474f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[18 /* X19 */] <-0.055331957f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4719957f ? 
                         (data[0 /* X1 */] <-0.42176646f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12948367f ? 
             (data[26 /* X27 */] <0.117772594f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11882111f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49547783f ? 
                         (data[28 /* X29 */] <0.14770216f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[21 /* X22 */] <0.08488663f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15120097f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.098748885f ? 
         (data[18 /* X19 */] <0.11232546f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14289537f ? 
                 (data[35 /* X36 */] <-0.44447953f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.14681315f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18248065f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.828125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.35088247f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.52746564f ? 
             (data[18 /* X19 */] <-0.31472915f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49893394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.1339321f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.464258f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[27 /* X28 */] <-0.3008004f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36197862f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24742557f ? 
                     (data[30 /* X31 */] <0.17798418f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.515821f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17918642f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f) : 
             (data[21 /* X22 */] <0.11780185f ? 
                 (data[35 /* X36 */] <-0.07832031f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16340977f ? 
                     (data[2 /* X3 */] <-0.2213651f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19695853f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29256877f ? 
                                 (data[10 /* X11 */] <-0.20784849f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[29 /* X30 */] <0.14163989f ? 
                             (data[16 /* X17 */] <-0.6456849f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.19791438f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015743822f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3370894f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22654158f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2608904f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (data[27 /* X28 */] <-1.1537641f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.10305632f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27812243f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5020432f ? 
                             (data[30 /* X31 */] <0.123335324f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.042347196f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22107634f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[24 /* X25 */] <-0.526067f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11578787f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.19939439f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
                 (data[12 /* X13 */] <0.11668326f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3125f ? 
                         (data[27 /* X28 */] <-0.3052797f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.69660777f ? 
                         (data[7 /* X8 */] <0.122209065f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.0977009f ? 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17048791f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[16 /* X17 */] <-0.28753114f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19343874f ? 
                         (data[9 /* X10 */] <-0.19515872f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.154058f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (data[3 /* X4 */] <-0.4811662f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.116464585f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10891715f ? 
             (data[27 /* X28 */] <-0.4161111f ? 
                 (data[14 /* X15 */] <0.16570713f ? 
                     (data[23 /* X24 */] <0.103946194f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23521073f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.39273006f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20608267f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.68961275f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10103161f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43039995f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17746735f ? 
                     (data[28 /* X29 */] <0.19703914f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.3712627f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.03962931f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[28 /* X29 */] <0.28906518f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[28 /* X29 */] <0.12709934f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.21989025f ? 
                     (data[34 /* X35 */] <-0.6461804f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.5247458f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19572571f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.9542969f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.09354853f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.13403156f ? 
                         (data[23 /* X24 */] <0.06977828f ? 
                            0.0f : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.113886535f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[16 /* X17 */] <-0.18251073f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.12995128f ? 
                 (data[25 /* X26 */] <-0.29144073f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15732715f ? 
                         (data[6 /* X7 */] <0.09912384f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47713932f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25240877f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48557281f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.008184844f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20929715f ? 
             (data[30 /* X31 */] <0.111770965f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45314038f ? 
         (data[3 /* X4 */] <-0.33321917f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.044793844f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2644531f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11381138f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16007194f ? 
                                     (data[10 /* X11 */] <-0.3550818f ? 
                                         (data[14 /* X15 */] <0.17161104f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                     (data[13 /* X14 */] <0.09657391f ? 
                                        1.0f : 
                                         (data[28 /* X29 */] <0.14428636f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                             (data[18 /* X19 */] <-0.13971327f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49898285f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[8 /* X9 */] <0.017403394f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07871563f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.014547275f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.15933329f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29363006f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22254059f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6030866f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.086802796f ? 
             (data[14 /* X15 */] <0.08603405f ? 
                 (data[30 /* X31 */] <0.15634373f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4375f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.17505105f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[19 /* X20 */] <-0.17418128f ? 
                 (data[27 /* X28 */] <-0.95824236f ? 
                     (data[4 /* X5 */] <0.39526924f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33484462f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14255895f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                     (data[27 /* X28 */] <-0.24458788f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.26496452f ? 
                             (data[31 /* X32 */] <0.11188861f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.08230424f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_11_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.2371039f ? 
         (data[6 /* X7 */] <0.15344602f ? 
             (data[4 /* X5 */] <0.12634894f ? 
                 (data[11 /* X12 */] <-0.30798307f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52419364f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.07807958f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.08707647f ? 
                         (data[8 /* X9 */] <0.26594752f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[0 /* X1 */] <0.15478382f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.053145986f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.55255705f ? 
                         (data[20 /* X21 */] <0.17357895f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.048957206f ? 
             (data[33 /* X34 */] <-0.48828125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19126488f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.72910154f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41939422f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.33467558f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.23309447f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.15172254f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.034186106f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2223415f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50817096f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.21700494f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[7 /* X8 */] <0.101781316f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (data[1 /* X2 */] <-0.841604f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.20754895f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.38966304f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37665877f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6840231f ? 
                         (data[0 /* X1 */] <-0.0021547412f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18558f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.056396943f ? 
                                     (data[20 /* X21 */] <0.22695537f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[32 /* X33 */] <0.35473844f ? 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[28 /* X29 */] <0.10041179f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.87890625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761164f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23716387f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.47077188f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5513231f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22754788f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33414936f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.13871746f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.77565855f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.19987652f ? 
                         (data[16 /* X17 */] <-0.3968654f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19016801f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2844333f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3072269f ? 
                                    0.0f : 
                                     (data[18 /* X19 */] <-0.06811434f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2109375f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22832943f ? 
             (data[32 /* X33 */] <-0.34747902f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.5547584f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1324717f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25448158f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34077543f ? 
                                 (data[33 /* X34 */] <-0.25f ? 
                                     (data[33 /* X34 */] <-0.637f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24392706f ? 
                                         (data[24 /* X25 */] <-0.32221848f ? 
                                             (data[8 /* X9 */] <-0.1333712f ? 
                                                0.0f : 
                                                1.0f) : 
                                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3602602f ? 
                                                0.0f : 
                                                 (data[19 /* X20 */] <-0.95094925f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.012706075f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1663139f ? 
                 (data[33 /* X34 */] <-0.40875f ? 
                     (data[34 /* X35 */] <0.171875f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10306518f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[6 /* X7 */] <0.088886395f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.014051647f ? 
             (data[33 /* X34 */] <-0.2890625f ? 
                 (data[11 /* X12 */] <-0.4259565f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.35212487f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3062483f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.43911615f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.37890625f ? 
             (data[35 /* X36 */] <-0.12783203f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.526067f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09765625f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.08660788f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.058025304f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2896297f ? 
                         (data[31 /* X32 */] <0.055327065f ? 
                             (data[27 /* X28 */] <-0.12727483f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35055992f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.011139228f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.10394509f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.31015626f ? 
                         (data[16 /* X17 */] <-0.59861094f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17995496f ? 
                             (data[18 /* X19 */] <0.10700793f ? 
                                 (data[22 /* X23 */] <0.11108851f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[21 /* X22 */] <0.03248213f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08456652f ? 
             (data[3 /* X4 */] <-0.6502485f ? 
                 (data[17 /* X18 */] <-0.6606587f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.5161998f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.057737928f ? 
                         (data[19 /* X20 */] <-0.4428934f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.10069346f ? 
                                 (data[27 /* X28 */] <-0.43337378f ? 
                                    1.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.19266525f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.027427925f ? 
                                    0.0f : 
                                     (data[1 /* X2 */] <0.14696229f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26001257f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37554562f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.08817047f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[16 /* X17 */] <-0.31070322f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1420598f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.32904032f ? 
                     (data[18 /* X19 */] <-0.42248842f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.11017268f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20857368f ? 
            0.0f : 
             (data[21 /* X22 */] <0.18276611f ? 
                 (data[27 /* X28 */] <-0.24099824f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.71281993f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                 (data[33 /* X34 */] <-0.57375f ? 
                     (data[35 /* X36 */] <0.11701875f ? 
                         (data[16 /* X17 */] <-0.060622793f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.11061722f ? 
                     (data[31 /* X32 */] <0.10331075f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2127416f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.15485035f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1159863f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-1.1251596f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.08142452f ? 
                     (data[30 /* X31 */] <0.20066908f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.1590502f ? 
                             (data[1 /* X2 */] <-0.5338585f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (data[35 /* X36 */] <-0.21162109f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.146827f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32186636f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7045454f ? 
                 (data[27 /* X28 */] <-0.63563144f ? 
                     (data[7 /* X8 */] <0.26461446f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.1491856f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.09374658f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.25069794f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3681613f ? 
                                 (data[33 /* X34 */] <-0.35f ? 
                                     (data[3 /* X4 */] <-0.26699954f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.241783f ? 
                                        0.0f : 
                                         (data[6 /* X7 */] <0.22862674f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            0.0f))) : 
                 (data[14 /* X15 */] <0.1717818f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.022141699f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22733514f ? 
            0.0f : 
             (data[14 /* X15 */] <0.11259174f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0061383443f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07817495f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.59615576f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.21827991f ? 
                     (data[10 /* X11 */] <-0.15585302f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.10948745f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08497282f ? 
             (data[32 /* X33 */] <-0.250533f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16799277f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.16488388f ? 
                         (data[1 /* X2 */] <-0.31404027f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093551576f ? 
                     (data[28 /* X29 */] <0.09028892f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16583936f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.13782676f ? 
                        1.0f : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.48591357f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21311483f ? 
             (data[12 /* X13 */] <0.08411057f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.12727483f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.13565563f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.37809542f ? 
                                 (data[20 /* X21 */] <0.18913577f ? 
                                    1.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24281049f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
             (data[32 /* X33 */] <-0.746449f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15940483f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.2784982f ? 
             (data[20 /* X21 */] <0.22557698f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.140625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.50652856f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15207192f ? 
                        1.0f : 
                         (data[2 /* X3 */] <0.17662394f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12403098f ? 
                 (data[15 /* X16 */] <0.087599434f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.102167785f ? 
                         (data[35 /* X36 */] <-0.5212775f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
        0.007936508f : 
         (data[13 /* X14 */] <0.11342267f ? 
             (data[32 /* X33 */] <0.22637391f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.62843835f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.8095703f ? 
                     (data[20 /* X21 */] <0.19779488f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.06713399f ? 
                         (data[3 /* X4 */] <-0.066914536f ? 
                            1.0f : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.11973726f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.099141695f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10848341f ? 
         (data[20 /* X21 */] <0.15873936f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0019639689f ? 
                 (data[33 /* X34 */] <-0.375f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29857087f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.17531298f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.19829655f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3030596f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1617925f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.62289554f ? 
             (data[1 /* X2 */] <-0.77565855f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24857372f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.07523946f ? 
                         (data[32 /* X33 */] <-0.21652047f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[20 /* X21 */] <0.11882244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09070541f ? 
             (data[5 /* X6 */] <0.04212628f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.8875f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.40472275f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5349514f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17825483f ? 
                     (data[13 /* X14 */] <0.11891456f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09375f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26140937f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30394232f ? 
                     (data[32 /* X33 */] <-0.4332389f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.1806277f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30538547f ? 
                                 (data[18 /* X19 */] <-0.06940384f ? 
                                     (data[18 /* X19 */] <-0.13087675f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[6 /* X7 */] <0.2074422f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.26954645f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.24061759f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.13481887f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20242871f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.57782215f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63237065f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39526924f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30709317f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.103777215f ? 
                             (data[28 /* X29 */] <0.2463651f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[9 /* X10 */] <0.1367795f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23743425f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.26458117f ? 
             (data[3 /* X4 */] <-0.2002125f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.66723615f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.097688235f ? 
                     (data[34 /* X35 */] <-0.453125f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14621614f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.011374718f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.10972688f ? 
                             (data[19 /* X20 */] <-0.15911378f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26654968f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36088368f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.66045266f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.14540629f ? 
                     (data[33 /* X34 */] <-0.203125f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23750539f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.055841547f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4010048f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14645566f ? 
         (data[3 /* X4 */] <-0.52132326f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18969564f ? 
                 (data[28 /* X29 */] <0.06820267f ? 
                     (data[24 /* X25 */] <0.008436543f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4501641f ? 
                     (data[13 /* X14 */] <0.16720396f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.054084513f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.40134078f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.6587026f ? 
             (data[20 /* X21 */] <0.2645656f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.65861094f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1396495f ? 
             (data[30 /* X31 */] <0.12109466f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19091944f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10144848f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16841635f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16904536f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30911866f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12819614f ? 
                    0.0f : 
                    1.0f))) : 
         (data[29 /* X30 */] <0.08340325f ? 
             (data[8 /* X9 */] <0.023028629f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08804982f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17609331f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2756198f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.17323802f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.4994354f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.30371854f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17525558f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40515083f ? 
                     (data[23 /* X24 */] <0.13166517f ? 
                         (data[17 /* X18 */] <-0.17525558f ? 
                             (data[7 /* X8 */] <0.08555425f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.043699436f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23340827f ? 
                                     (data[32 /* X33 */] <-0.1724055f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18869232f ? 
             (data[35 /* X36 */] <-0.23447266f ? 
                 (data[19 /* X20 */] <-0.24925852f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.20934986f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3824179f ? 
                 (data[4 /* X5 */] <0.09741001f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09759107f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.921875f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.625f ? 
                             (data[19 /* X20 */] <-0.3019778f ? 
                                 (data[24 /* X25 */] <-0.32221848f ? 
                                    1.0f : 
                                     (data[27 /* X28 */] <-0.6278106f ? 
                                         (data[15 /* X16 */] <0.26628107f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                 (data[21 /* X22 */] <0.110872336f ? 
                                     (data[19 /* X20 */] <0.06760189f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[33 /* X34 */] <0.653125f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6309704f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3011698f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014965567f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20701943f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33484462f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.07068201f ? 
                        0.0f : 
                        1.0f))) : 
             (data[14 /* X15 */] <0.1062179f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.6163028f ? 
                     (data[23 /* X24 */] <0.15202238f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.875f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19209634f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.51475f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.22705108f ? 
                                    1.0f : 
                                    0.0f))))))) : 
         (data[3 /* X4 */] <-0.24233744f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5720919f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.75914025f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[16 /* X17 */] <-0.7751383f ? 
            1.0f : 
             (data[20 /* X21 */] <0.11789414f ? 
                 (data[31 /* X32 */] <0.046602756f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.078125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3125f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3183764f ? 
                     (data[8 /* X9 */] <0.13284127f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                             (data[8 /* X9 */] <0.20987982f ? 
                                 (data[33 /* X34 */] <-0.6f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.3347913f ? 
                                        1.0f : 
                                         (data[30 /* X31 */] <0.10899853f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.36669698f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-5.551115E-17f ? 
                                             (data[14 /* X15 */] <0.20480005f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    1.0f)) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1731795f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.078125f ? 
                         (data[15 /* X16 */] <0.09069081f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27180278f ? 
             (data[17 /* X18 */] <-0.6638947f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.14693227f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09373315f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15276188f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.18073976f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.02734375f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25941914f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10305632f ? 
                             (data[8 /* X9 */] <-0.1333712f ? 
                                1.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27475134f ? 
                                    0.0f : 
                                     (data[6 /* X7 */] <0.15856709f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[33 /* X34 */] <-0.3399985f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34013942f ? 
             (data[31 /* X32 */] <0.17964843f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.0508526f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.13859043f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36259654f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.218287f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17622836f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.004353939f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.071702905f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12423146f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34428874f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.44654846f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[9 /* X10 */] <-0.19515872f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                 (data[17 /* X18 */] <-0.3500007f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36960125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37268275f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16570374f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.10617818f ? 
                             (data[12 /* X13 */] <0.10962184f ? 
                                1.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                                    0.0f : 
                                     (data[16 /* X17 */] <-0.015937591f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.15470715f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05859375f ? 
             (data[27 /* X28 */] <-0.28369224f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19081527f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.27925813f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
             (data[5 /* X6 */] <0.098232135f ? 
                 (data[1 /* X2 */] <-0.27007663f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3105927f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.2721198f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015669657f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.40625f ? 
                     (data[21 /* X22 */] <0.09354853f ? 
                        0.0f : 
                        1.0f) : 
                     (data[28 /* X29 */] <0.21443275f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17773438f ? 
             (data[27 /* X28 */] <-1.1537641f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12127056f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15933353f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08271834f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32344106f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24580608f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.0671875f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22572751f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.042830072f ? 
                 (data[19 /* X20 */] <-0.31599385f ? 
                     (data[5 /* X6 */] <0.117697425f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.12423146f ? 
                         (data[0 /* X1 */] <0.08055796f ? 
                            1.0f : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.38722217f ? 
                             (data[4 /* X5 */] <0.1562399f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[19 /* X20 */] <-0.11578787f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.18895689f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70246494f ? 
             (data[12 /* X13 */] <0.08794265f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077301055f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                     (data[25 /* X26 */] <-0.69660777f ? 
                         (data[26 /* X27 */] <-0.1268994f ? 
                            0.0f : 
                            1.0f) : 
                         (data[14 /* X15 */] <0.13131578f ? 
                             (data[26 /* X27 */] <0.18624997f ? 
                                 (data[17 /* X18 */] <-0.03028184f ? 
                                     (data[21 /* X22 */] <0.21065743f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2999975f ? 
                                0.0f : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18852551f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18666397f ? 
            0.0f : 
             (data[14 /* X15 */] <0.15083481f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22781362f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15671006f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1313396f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23477241f ? 
                     (data[14 /* X15 */] <0.1774384f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5857683f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35210857f ? 
                                1.0f : 
                                 (data[11 /* X12 */] <0.14889586f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.1318295f ? 
                             (data[3 /* X4 */] <-0.42536905f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.2152983f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14782338f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.42198738f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17126723f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19612198f ? 
                     (data[34 /* X35 */] <-0.9547119f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.24867803f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.9242021f ? 
                     (data[5 /* X6 */] <0.1680782f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.10164498f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34417483f ? 
            0.0f : 
             (data[2 /* X3 */] <0.20654064f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[17 /* X18 */] <-0.35323673f ? 
            0.0f : 
             (data[14 /* X15 */] <0.12442218f ? 
                 (data[19 /* X20 */] <0.03436661f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19899367f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3728966f ? 
                 (data[9 /* X10 */] <-0.1767177f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23021848f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28125f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.1767177f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18985184f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35724366f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3560944f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20501252f ? 
             (data[27 /* X28 */] <-0.9044739f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.089116834f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0859375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.08105687f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20591736f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3211896f ? 
                             (data[6 /* X7 */] <0.12007016f ? 
                                 (data[20 /* X21 */] <0.1566971f ? 
                                     (data[18 /* X19 */] <0.3323983f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (data[1 /* X2 */] <0.042929396f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[28 /* X29 */] <0.11145491f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08917069f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29551342f ? 
                         (data[24 /* X25 */] <-0.21476664f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.61499023f ? 
                                0.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15095553f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (data[24 /* X25 */] <0.08787334f ? 
                         (data[11 /* X12 */] <-0.039861627f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[5 /* X6 */] <0.1222775f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.10057806f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30529353f ? 
             (data[14 /* X15 */] <0.09402973f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12617129f ? 
                 (data[1 /* X2 */] <-0.061249323f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9468252f ? 
             (data[12 /* X13 */] <0.18406574f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11372626f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4184771f ? 
                         (data[35 /* X36 */] <-0.5359375f ? 
                             (data[34 /* X35 */] <-0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.72578126f ? 
                     (data[13 /* X14 */] <0.20917961f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12194897f ? 
             (data[5 /* X6 */] <0.093614206f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.047642004f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.3008004f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14097701f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.19272155f ? 
                     (data[9 /* X10 */] <-0.2946946f ? 
                         (data[31 /* X32 */] <0.08149999f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.06929746f ? 
                             (data[26 /* X27 */] <0.21366392f ? 
                                0.0f : 
                                1.0f) : 
                             (data[16 /* X17 */] <-0.75328255f ? 
                                1.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1912025f ? 
                                    0.0f : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1844468f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (data[12 /* X13 */] <0.17224844f ? 
                         (data[21 /* X22 */] <0.13859043f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15825847f ? 
                             (data[28 /* X29 */] <0.17430581f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5148609f ? 
                                    1.0f : 
                                     (data[3 /* X4 */] <-0.21236925f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3648267f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.53542656f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.28238717f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                     (data[5 /* X6 */] <0.13961664f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3980372f ? 
                             (data[9 /* X10 */] <-0.108411655f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16717845f ? 
                                     (data[29 /* X30 */] <0.177267f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24141526f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3028703f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.29197404f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.81640625f ? 
             (data[13 /* X14 */] <0.114734404f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20894252f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.09396996f ? 
                    1.0f : 
                     (data[32 /* X33 */] <0.41012993f ? 
                         (data[11 /* X12 */] <-0.2972582f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[5 /* X6 */] <0.09365206f ? 
                1.0f : 
                 (data[33 /* X34 */] <0.011389844f ? 
                     (data[0 /* X1 */] <0.076008566f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[6 /* X7 */] <0.16646206f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.119871244f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3790352f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3576737f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26432863f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.061385687f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.009236584f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[23 /* X24 */] <0.12386921f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[3 /* X4 */] <-0.14722863f ? 
             (data[0 /* X1 */] <-0.09282903f ? 
                 (data[28 /* X29 */] <0.10522431f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.046775788f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.37167704f ? 
             (data[5 /* X6 */] <0.1612081f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                     (data[24 /* X25 */] <0.011975875f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.15753873f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9725649f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.384148f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6225502f ? 
                 (data[13 /* X14 */] <0.09374658f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25961685f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.071878485f ? 
                     (data[16 /* X17 */] <-0.31280473f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[6 /* X7 */] <0.088886395f ? 
             (data[23 /* X24 */] <0.15765172f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.250168f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1715219f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39834124f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3403296f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7127352f ? 
                            0.0f : 
                             (data[1 /* X2 */] <0.3102435f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                 (data[31 /* X32 */] <0.0989486f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.267204f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.07216542f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[21 /* X22 */] <0.11866804f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.59861094f ? 
                 (data[34 /* X35 */] <-0.25f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.203125f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.08660788f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15883616f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26139963f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8828125f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7353691f ? 
                         (data[28 /* X29 */] <0.13055956f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12728857f ? 
                                 (data[22 /* X23 */] <0.17631443f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15759276f ? 
                                        0.0f : 
                                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.35481313f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[33 /* X34 */] <-0.6f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2883242f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[32 /* X33 */] <-0.40340936f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.109853975f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.71629584f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.42939737f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.30714366f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.12720592f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[21 /* X22 */] <0.04460879f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X8 */] <0.103043586f ? 
             (data[1 /* X2 */] <-0.19314025f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16879024f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20242853f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.38272917f ? 
                         (data[34 /* X35 */] <-0.93333346f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.111109376f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
        0.007936508f : 
         (data[35 /* X36 */] <-0.46870118f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15362908f ? 
                 (data[17 /* X18 */] <-0.091119036f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23369482f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[12 /* X13 */] <0.15979417f ? 
                 (data[19 /* X20 */] <-0.5161998f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[0 /* X1 */] <0.4302005f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.015687056f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.3662725f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43203208f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20334148f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4403324f ? 
                         (data[18 /* X19 */] <-0.28724813f ? 
                             (data[12 /* X13 */] <0.14005895f ? 
                                1.0f : 
                                0.0f) : 
                             (data[18 /* X19 */] <0.07435314f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103386626f ? 
                                    0.0f : 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24574335f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[2 /* X3 */] <0.021389648f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.3282741f ? 
                         (data[7 /* X8 */] <0.0979945f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39533183f ? 
             (data[16 /* X17 */] <-0.47251996f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.22534503f ? 
                     (data[34 /* X35 */] <-0.3125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16698271f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.2233436f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1908194f ? 
             (data[25 /* X26 */] <-0.15638508f ? 
                 (data[19 /* X20 */] <-0.38272917f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50857013f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.6974861f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31693044f ? 
                     (data[24 /* X25 */] <-0.32544148f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3007055f ? 
                             (data[32 /* X33 */] <-0.045455f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35203034f ? 
                                     (data[18 /* X19 */] <-0.1755226f ? 
                                         (data[5 /* X6 */] <0.20349513f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.29387793f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09840333f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2574871f ? 
                     (data[30 /* X31 */] <0.19157486f ? 
                         (data[34 /* X35 */] <-0.375f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19693291f ? 
                                 (data[2 /* X3 */] <-0.19192666f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[14 /* X15 */] <0.08072251f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.1812299f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.261162f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[3 /* X4 */] <-0.5635938f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.227282f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093551576f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3326278f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6275738f ? 
             (data[12 /* X13 */] <0.08794265f ? 
                 (data[11 /* X12 */] <-0.12566048f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.36229572f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28921902f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3334782f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.4f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.43526733f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[12 /* X13 */] <0.44870934f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16338874f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4267831f ? 
             (data[3 /* X4 */] <-0.6679364f ? 
                 (data[23 /* X24 */] <0.1749761f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.31019208f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
                 (data[23 /* X24 */] <0.12646787f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.110452026f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.10948745f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.50652856f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.36510748f ? 
                 (data[7 /* X8 */] <0.10809267f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19524093f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4023166f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.17057788f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[27 /* X28 */] <-0.30813247f ? 
             (data[30 /* X31 */] <0.15292443f ? 
                 (data[34 /* X35 */] <-0.9765625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06924329f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23906848f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07969208f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.6085315f ? 
         (data[25 /* X26 */] <-0.4142186f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4824955f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41079745f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5790506f ? 
                         (data[9 /* X10 */] <-0.3426868f ? 
                             (data[26 /* X27 */] <-0.18070143f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17534563f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <-0.46782875f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[20 /* X21 */] <0.15072939f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23997551f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3722349f ? 
                                        0.0f : 
                                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29035845f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04928915f ? 
                                    0.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3393512f ? 
                                        0.0f : 
                                         (data[30 /* X31 */] <0.18680872f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.118190855f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.122989975f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
             (data[33 /* X34 */] <-0.5859375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12600492f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1642922f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.026879711f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1377597f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13706148f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20290509f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.05734375f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30245018f ? 
                 (data[22 /* X23 */] <0.15595284f ? 
                     (data[3 /* X4 */] <-0.20218039f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08315695f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0916475f ? 
                                0.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.484375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.41721988f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.10913996f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.6322352f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15990536f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.53016716f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.56913996f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14693227f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.20520791f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2291239f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.46354863f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19798245f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[26 /* X27 */] <-0.017897418f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2174373f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3027347f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.058025304f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0794619f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2512564f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.18016754f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.0291426f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.14407445f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1643809f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.23257469f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.053145986f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.096758425f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.10305632f ? 
                         (data[30 /* X31 */] <0.13251719f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[13 /* X14 */] <0.078005716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3449689f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95450366f ? 
                     (data[35 /* X36 */] <-0.9085938f ? 
                         (data[13 /* X14 */] <0.1783097f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019926572f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.14792792f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22515476f ? 
                                    0.0f : 
                                     (data[35 /* X36 */] <-0.685f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17493086f ? 
             (data[32 /* X33 */] <-0.28409126f ? 
                 (data[31 /* X32 */] <0.24508072f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.129672f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1156488f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38749418f ? 
            0.0f : 
             (data[14 /* X15 */] <0.24325559f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08064383f ? 
             (data[10 /* X11 */] <-0.11799241f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7366774f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.79052734f ? 
                 (data[31 /* X32 */] <0.12948367f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.097013295f ? 
                     (data[19 /* X20 */] <-0.9499794f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.07148677f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23207508f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.625f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.6190699f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29424635f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.42490235f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3591219f ? 
                     (data[35 /* X36 */] <-0.38193664f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.76476985f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.4265102f ? 
                                 (data[17 /* X18 */] <0.011139228f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.328125f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (data[32 /* X33 */] <-0.18341658f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.2421875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
             (data[21 /* X22 */] <0.11866804f ? 
                 (data[21 /* X22 */] <0.1017023f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46973163f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.484375f ? 
                         (data[30 /* X31 */] <0.073350005f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.08720253f ? 
                                 (data[6 /* X7 */] <0.060098175f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30071262f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2788812f ? 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18952677f ? 
                                            0.0f : 
                                             (data[17 /* X18 */] <-0.26853758f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.05369969f ? 
                                            0.0f : 
                                             (data[32 /* X33 */] <-0.045455f ? 
                                                0.0f : 
                                                1.0f))) : 
                                    1.0f))) : 
                         (data[15 /* X16 */] <0.068799116f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.17314328f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.12512152f ? 
                     (data[3 /* X4 */] <-0.16836393f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.23137295f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.34375f ? 
                            1.0f : 
                            0.0f) : 
                         (data[24 /* X25 */] <-0.061605144f ? 
                             (data[32 /* X33 */] <0.09772675f ? 
                                1.0f : 
                                 (data[17 /* X18 */] <-0.14342621f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[8 /* X9 */] <-0.0907772f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42490053f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 28, static init size = 0B
}

class h2o_rf_11_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[3 /* X4 */] <-0.2402239f ? 
             (data[15 /* X16 */] <0.14169854f ? 
                 (data[21 /* X22 */] <0.18016754f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1799456f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20893076f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63237065f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20174614f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.18214935f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.22573031f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20556356f ? 
             (data[19 /* X20 */] <-0.30348098f ? 
                 (data[16 /* X17 */] <-0.733108f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.46679688f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.017519722f ? 
                        1.0f : 
                        0.0f) : 
                     (data[34 /* X35 */] <0.0625f ? 
                         (data[7 /* X8 */] <0.067699954f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20692661f ? 
                                 (data[20 /* X21 */] <0.123463474f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[16 /* X17 */] <-0.05389794f ? 
                                 (data[0 /* X1 */] <0.16199942f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2633218f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20667212f ? 
                                0.0f : 
                                1.0f) : 
                             (data[27 /* X28 */] <-0.14272523f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[0 /* X1 */] <-0.23597394f ? 
             (data[16 /* X17 */] <-0.031201564f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1598238f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.9015625f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.36190096f ? 
                             (data[3 /* X4 */] <0.16980071f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.09634252f ? 
                                     (data[25 /* X26 */] <-0.26934072f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24391913f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1658425f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.14005895f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.1448398f ? 
             (data[31 /* X32 */] <0.13711743f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2693939f ? 
                 (data[3 /* X4 */] <-0.50652856f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[17 /* X18 */] <-0.1008271f ? 
             (data[3 /* X4 */] <-0.21486156f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.013762659f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.266946f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15858358f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.487467f ? 
            0.0f : 
             (data[2 /* X3 */] <0.20654064f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22169946f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31919003f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22836189f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40973872f ? 
             (data[20 /* X21 */] <0.15316956f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.029513935f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05025841f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.20615011f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21839759f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[15 /* X16 */] <0.053594276f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.679666f ? 
                     (data[11 /* X12 */] <-0.12566048f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.12186584f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17474702f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.20137225f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[31 /* X32 */] <0.035697374f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.018592468f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.25970227f ? 
                 (data[27 /* X28 */] <-0.20548353f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44673225f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41124207f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4484375f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42583707f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.39773f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18130448f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08883666f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30489892f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.336363f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <0.27688795f ? 
                         (data[17 /* X18 */] <-0.13193947f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-1.0032123f ? 
                                 (data[26 /* X27 */] <-0.16514117f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[12 /* X13 */] <0.16458428f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0010865283f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18047445f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2846019f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19608523f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.17114785f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                     (data[22 /* X23 */] <0.072295904f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.11542183f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.64045364f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[2 /* X3 */] <0.20654064f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6892946f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14955242f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0076870555f ? 
                     (data[3 /* X4 */] <-0.545593f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22556323f ? 
                             (data[20 /* X21 */] <0.09505796f ? 
                                0.0f : 
                                1.0f) : 
                             (data[35 /* X36 */] <-0.19734f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.118190855f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3540323f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.06138859f ? 
             (data[22 /* X23 */] <0.14097701f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07259832f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.046253294f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <1.2136964f ? 
                 (data[3 /* X4 */] <-0.8869638f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.06929746f ? 
                         (data[35 /* X36 */] <-0.2078125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (data[9 /* X10 */] <-0.15597157f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.540345f ? 
                 (data[11 /* X12 */] <-0.45813105f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.41855183f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.199073f ? 
                         (data[2 /* X3 */] <-0.4108959f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.761905f ? 
                         (data[29 /* X30 */] <0.1596769f ? 
                            0.0f : 
                             (data[11 /* X12 */] <0.027239664f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.18955058f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[28 /* X29 */] <0.07556475f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[14 /* X15 */] <0.109404825f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.6159448f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[6 /* X7 */] <0.16177629f ? 
             (data[15 /* X16 */] <0.050502896f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.014840424f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.78354436f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3217168f ? 
                 (data[12 /* X13 */] <0.09560681f ? 
                     (data[33 /* X34 */] <-0.203125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34417483f ? 
            0.0f : 
             (data[29 /* X30 */] <0.08340325f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.056571547f ? 
             (data[15 /* X16 */] <0.05977703f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.3496022f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21544181f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24620391f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19213925f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3125f ? 
                     (data[8 /* X9 */] <0.052977532f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.041527618f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08870075f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20019531f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.15145569f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34764552f ? 
             (data[3 /* X4 */] <-0.1599098f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.11701515f ? 
                     (data[34 /* X35 */] <-0.5302073f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09910404f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.098257005f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19392721f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13173608f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.14608939f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                             (data[33 /* X34 */] <0.124164015f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.16149114f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.04813473f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.47251996f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10329256f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5619394f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2964132f ? 
                     (data[33 /* X34 */] <-0.8680544f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24869792f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.024579355f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[8 /* X9 */] <-0.48776656f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.5582045f ? 
                 (data[31 /* X32 */] <0.17746735f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16290878f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19199091f ? 
                 (data[17 /* X18 */] <-0.46782517f ? 
                     (data[33 /* X34 */] <-0.725f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.13967575f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0625f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21236458f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.25249118f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.020843709f ? 
                 (data[33 /* X34 */] <-0.35625f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19545174f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20471875f ? 
                         (data[0 /* X1 */] <-0.0561252f ? 
                            0.0f : 
                            1.0f) : 
                         (data[15 /* X16 */] <0.047755174f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17578393f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[22 /* X23 */] <0.025665047f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.06602035f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21589085f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.18294483f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.087599434f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.35353246f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25738546f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.19612198f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.31280473f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22649544f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.57610446f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06301545f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.395f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3894194f ? 
                                1.0f : 
                                 (data[26 /* X27 */] <0.21205951f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[26 /* X27 */] <-0.03485617f ? 
             (data[23 /* X24 */] <0.15505306f ? 
                 (data[19 /* X20 */] <-0.9082698f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0720362f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.113148496f ? 
                     (data[0 /* X1 */] <0.046645507f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.078065194f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[8 /* X9 */] <0.36078572f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14119358f ? 
             (data[17 /* X18 */] <-0.62182647f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12612769f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090010166f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.32039273f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4127615f ? 
                                 (data[25 /* X26 */] <-0.54436314f ? 
                                    1.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2211923f ? 
                                         (data[4 /* X5 */] <0.16794479f ? 
                                             (data[7 /* X8 */] <0.101823926f ? 
                                                 (data[14 /* X15 */] <0.2010122f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f) : 
                                            0.0f) : 
                                         (data[7 /* X8 */] <0.24342322f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f))) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12075936f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15508184f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18883558f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22492667f ? 
                     (data[13 /* X14 */] <0.08849963f ? 
                         (data[33 /* X34 */] <-0.26041952f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.561472f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3739637f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.7469955f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1751152f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.17323802f ? 
                        1.0f : 
                        0.0f))) : 
             (data[32 /* X33 */] <-0.34747902f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.118578285f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.4893321f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.15433799f ? 
                         (data[9 /* X10 */] <-0.30537587f ? 
                             (data[10 /* X11 */] <-0.15274362f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.10022219f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.26260033f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2138804f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15048021f ? 
                                        0.0f : 
                                         (data[33 /* X34 */] <0.17f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[27 /* X28 */] <-0.13991733f ? 
                                        1.0f : 
                                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50458074f ? 
                                            0.0f : 
                                            1.0f))))))))) : 
        0.0f);
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[17 /* X18 */] <0.02537772f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.30449045f ? 
                     (data[30 /* X31 */] <0.3461766f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5668275f ? 
                 (data[12 /* X13 */] <0.1569201f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23704596f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15319422f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.7707103f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17366152f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.1473227f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[35 /* X36 */] <0.53867185f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.013049484f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15825847f ? 
                     (data[19 /* X20 */] <-0.6106556f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.3695904f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13513005f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.070983686f ? 
                    0.0f : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.048957206f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.047642004f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.083591506f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28722468f ? 
                 (data[11 /* X12 */] <-0.58836186f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.64148587f ? 
                        0.0f : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.14021175f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20863408f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.11434081f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3781221f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.4775f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
             (data[3 /* X4 */] <-0.54879916f ? 
                 (data[9 /* X10 */] <0.15512569f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.06284915f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[15 /* X16 */] <0.11078476f ? 
             (data[35 /* X36 */] <-0.76767576f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.22279209f ? 
                 (data[21 /* X22 */] <0.1969043f ? 
                     (data[34 /* X35 */] <-0.734375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.15308803f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.50652856f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.19860584f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20802869f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[19 /* X20 */] <-0.6079609f ? 
             (data[34 /* X35 */] <-0.65220666f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.17201956f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.051299658f ? 
                 (data[28 /* X29 */] <0.12510939f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23257469f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[23 /* X24 */] <0.11693946f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.017632423f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19491597f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10848341f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (data[11 /* X12 */] <-0.0076870555f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.026413696f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.4205575f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.031993594f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13859493f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3671875f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23457259f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.2647096f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.03667664f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05025841f ? 
                 (data[33 /* X34 */] <-0.9296875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5718351f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12101123f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29900405f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.359375f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.65f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.114093795f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.15246457f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (data[35 /* X36 */] <0.0125f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.20819944f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22485924f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.49553883f ? 
                         (data[12 /* X13 */] <0.13392763f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16635142f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <0.054696742f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17535554f ? 
                             (data[34 /* X35 */] <-0.35f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24484617f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04832666f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08176189f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.11056008f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41845965f ? 
         (data[19 /* X20 */] <-0.90409887f ? 
             (data[33 /* X34 */] <0.5f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.5224802f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2421875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.6508089f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0138102f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3781221f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.46369067f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.047618f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[24 /* X25 */] <0.39956683f ? 
                             (data[14 /* X15 */] <0.16362755f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[28 /* X29 */] <0.08660788f ? 
             (data[23 /* X24 */] <0.047642004f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.079188526f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4325549f ? 
                 (data[15 /* X16 */] <0.035046007f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.3139208f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15656394f ? 
                                 (data[19 /* X20 */] <-0.22129194f ? 
                                     (data[7 /* X8 */] <0.0617972f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[17 /* X18 */] <-0.3968211f ? 
                                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11376606f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[2 /* X3 */] <-0.11913315f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[0 /* X1 */] <-0.010667093f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20820369f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18908699f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09999625f ? 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.29063365f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.38020086f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[31 /* X32 */] <0.050017297f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20358527f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[11 /* X12 */] <-0.43668133f ? 
             (data[0 /* X1 */] <-0.22129242f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8403763f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.103946194f ? 
            0.0f : 
             (data[15 /* X16 */] <0.12778734f ? 
                 (data[3 /* X4 */] <-0.135071f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[31 /* X32 */] <0.084771596f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08027889f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.047486857f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_11_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (data[31 /* X32 */] <0.05859868f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.15287133f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.15456201f ? 
             (data[32 /* X33 */] <-0.18341658f ? 
                 (data[19 /* X20 */] <0.051050443f ? 
                     (data[10 /* X11 */] <-0.49539247f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22832799f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2890625f ? 
                 (data[25 /* X26 */] <-0.6045243f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.46943793f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99261427f ? 
                 (data[15 /* X16 */] <0.1617925f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28918362f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35128725f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0390625f ? 
                     (data[25 /* X26 */] <-0.15638508f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06640625f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07885028f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6623047f ? 
                                    0.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14966637f ? 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2660936f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1912199f ? 
                         (data[6 /* X7 */] <0.061378393f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[19 /* X20 */] <-0.399413f ? 
                     (data[2 /* X3 */] <-0.21894673f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.85566396f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5097873f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3743464f ? 
                 (data[3 /* X4 */] <-0.24445097f ? 
                     (data[25 /* X26 */] <-0.5247187f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1934608f ? 
                     (data[7 /* X8 */] <0.08284722f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13157764f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.23552649f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4280888f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                     (data[2 /* X3 */] <0.35690084f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11703404f ? 
             (data[1 /* X2 */] <-0.2371039f ? 
                 (data[21 /* X22 */] <0.11661799f ? 
                     (data[13 /* X14 */] <0.13047527f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.101189375f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.20800115f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.14687446f ? 
                     (data[22 /* X23 */] <0.08963233f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18888843f ? 
                         (data[34 /* X35 */] <-0.19642937f ? 
                             (data[26 /* X27 */] <0.35917294f ? 
                                 (data[4 /* X5 */] <0.19311967f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[8 /* X9 */] <0.21766204f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.07023675f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44951442f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.49807444f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104305856f ? 
             (data[22 /* X23 */] <0.12507191f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.025665047f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31796893f ? 
                 (data[27 /* X28 */] <-0.24468982f ? 
                     (data[13 /* X14 */] <0.16720396f ? 
                         (data[35 /* X36 */] <-0.8796875f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22508879f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.19262172f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.12564176f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20844334f ? 
            0.0f : 
             (data[22 /* X23 */] <0.26026526f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.20256071f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2929781f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5211579f ? 
                         (data[1 /* X2 */] <-0.520478f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12518881f ? 
                                1.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1973185f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33465952f ? 
             (data[22 /* X23 */] <0.10049131f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.7714844f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25880876f ? 
                1.0f : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.20444368f ? 
             (data[27 /* X28 */] <-0.9068015f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.12109466f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.42109376f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.3206271f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.06929746f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1920849f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.0992065f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14868744f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4504262f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[21 /* X22 */] <0.119967334f ? 
             (data[22 /* X23 */] <0.09759948f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.08622652f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.13047527f ? 
                         (data[1 /* X2 */] <-0.21017297f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29935881f ? 
                 (data[4 /* X5 */] <0.09741001f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                         (data[27 /* X28 */] <-0.8530737f ? 
                             (data[22 /* X23 */] <0.18343848f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.523808f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21296288f ? 
                                    0.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.044978272f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[34 /* X35 */] <0.666665f ? 
                                    1.0f : 
                                     (data[13 /* X14 */] <0.1452172f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[3 /* X4 */] <0.062274933f ? 
                             (data[10 /* X11 */] <-0.42088723f ? 
                                0.0f : 
                                1.0f) : 
                             (data[12 /* X13 */] <0.17684694f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3094265f ? 
                 (data[6 /* X7 */] <0.08877166f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04654822f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.51091844f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.2276191f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[27 /* X28 */] <-0.5582463f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.082962364f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15933353f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2604256f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12253063f ? 
             (data[11 /* X12 */] <-0.3294328f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39166147f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.13782676f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47737578f ? 
                         (data[24 /* X25 */] <-0.57467747f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2750578f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27631465f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.08794265f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.112781614f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.693378f ? 
                     (data[0 /* X1 */] <-0.18374144f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22520944f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.2859165f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3222332f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[13 /* X14 */] <0.036030065f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.96679825f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.53542656f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32026362f ? 
                 (data[7 /* X8 */] <0.092945404f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18400784f ? 
                             (data[18 /* X19 */] <-0.1790559f ? 
                                 (data[24 /* X25 */] <-0.2726742f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.21217616f ? 
                         (data[19 /* X20 */] <-0.36604533f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12199069f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.12092407f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45063242f ? 
             (data[18 /* X19 */] <-0.15815513f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18224715f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.10733371f ? 
                     (data[6 /* X7 */] <0.20863408f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23978667f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9092882f ? 
            0.0f : 
             (data[29 /* X30 */] <0.10652663f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[13 /* X14 */] <0.15933353f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29674405f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24580608f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.75511295f ? 
             (data[20 /* X21 */] <0.15038465f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18094605f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
                             (data[18 /* X19 */] <-0.021685375f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.38821095f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24459657f ? 
             (data[2 /* X3 */] <-0.52926457f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25861573f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18952471f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.43183568f ? 
                         (data[23 /* X24 */] <0.041578475f ? 
                             (data[11 /* X12 */] <-0.17371172f ? 
                                1.0f : 
                                0.0f) : 
                             (data[5 /* X6 */] <0.095713094f ? 
                                 (data[14 /* X15 */] <0.13681236f ? 
                                     (data[2 /* X3 */] <-0.12369193f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[24 /* X25 */] <-0.13203251f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[24 /* X25 */] <0.008670047f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.19866772f ? 
                             (data[9 /* X10 */] <-0.20991153f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27406347f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23070769f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28706416f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.284384f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.14237842f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-6.898636E-4f ? 
                             (data[35 /* X36 */] <0.02375f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12690349f ? 
             (data[22 /* X23 */] <0.10049131f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0379865f ? 
             (data[11 /* X12 */] <-0.41818652f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3081957f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23563866f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.26320115f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.28125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.38964197f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22014104f ? 
             (data[27 /* X28 */] <-0.18593135f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.11937294f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X9 */] <0.13117746f ? 
             (data[0 /* X1 */] <-0.8856316f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.45568407f ? 
                     (data[26 /* X27 */] <0.28057662f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79765624f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7002833f ? 
                             (data[12 /* X13 */] <0.115533635f ? 
                                 (data[29 /* X30 */] <0.17652425f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.15519798f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14955242f ? 
                 (data[7 /* X8 */] <0.06517541f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5354536f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06176872f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X2 */] <-0.22611299f ? 
                         (data[12 /* X13 */] <0.12036905f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.13204448f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11233045f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.025f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19054487f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.48997447f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15858358f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19709705f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.108956195f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3348079f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.061927058f ? 
                                 (data[35 /* X36 */] <-0.85375f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[32 /* X33 */] <-0.1409095f ? 
                                    1.0f : 
                                     (data[30 /* X31 */] <0.16065452f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21580401f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29017663f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.40839317f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.33446226f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.03339585f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[18 /* X19 */] <-0.044430334f ? 
             (data[11 /* X12 */] <0.2443471f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.10424049f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.8125f ? 
                     (data[18 /* X19 */] <0.22627836f ? 
                         (data[2 /* X3 */] <-0.04610575f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2199943f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15532438f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.070806734f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.76953125f ? 
             (data[8 /* X9 */] <0.46440178f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.10310453f ? 
                 (data[0 /* X1 */] <-0.65072715f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                         (data[29 /* X30 */] <0.14109829f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08529757f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14233288f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X1 */] <-0.33507428f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18343215f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.02783956f ? 
                             (data[32 /* X33 */] <-0.3318185f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[2 /* X3 */] <-0.36610776f ? 
             (data[16 /* X17 */] <-0.36744416f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.8203125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.14928088f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0709757f ? 
                     (data[1 /* X2 */] <-0.3580039f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.123692445f ? 
             (data[4 /* X5 */] <0.09882167f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15146309f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2127416f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.46428624f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06461511f ? 
                             (data[3 /* X4 */] <-0.21668196f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1409095f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50966376f ? 
                                     (data[35 /* X36 */] <-0.4425565f ? 
                                        1.0f : 
                                         (data[9 /* X10 */] <-0.07840407f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[1 /* X2 */] <-0.60420036f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24612327f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22284433f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.45724064f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.031843923f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23908544f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (data[22 /* X23 */] <0.049161218f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37619376f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.15129444f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.5037117f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3206319f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.12473543f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06897705f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14199188f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.10727392f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[33 /* X34 */] <-0.28320312f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16554025f ? 
                 (data[16 /* X17 */] <-0.4220836f ? 
                     (data[21 /* X22 */] <0.15591422f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26638895f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19033875f ? 
                            0.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41108358f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.14325511f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.14350782f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.13308688f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27371606f ? 
                     (data[1 /* X2 */] <-0.40196756f ? 
                         (data[10 /* X11 */] <-0.2370512f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2795467f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.11569437f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[19 /* X20 */] <-0.36604533f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.540345f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2313469f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20992279f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.18930131f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.17382053f ? 
                         (data[22 /* X23 */] <0.21119352f ? 
                            1.0f : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.23151202f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.23978293f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3671875f ? 
                 (data[21 /* X22 */] <0.27371606f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.45352098f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.63968086f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.90625f ? 
                 (data[2 /* X3 */] <-0.11657383f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21682933f ? 
                         (data[3 /* X4 */] <0.42434886f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.036030065f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.17308478f ? 
                         (data[9 /* X10 */] <-0.04763062f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.130832f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0065130205f ? 
                                    0.0f : 
                                     (data[12 /* X13 */] <0.12779629f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[28 /* X29 */] <0.18890905f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[29 /* X30 */] <0.12065757f ? 
             (data[26 /* X27 */] <-0.26549518f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.79296875f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6496705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[4 /* X5 */] <0.10093915f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24911162f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.5085423f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8651408f ? 
                 (data[13 /* X14 */] <0.10424049f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22301078f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5381728f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10848341f ? 
         (data[33 /* X34 */] <-0.76953125f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29322642f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4100916f ? 
                 (data[23 /* X24 */] <0.12820031f ? 
                     (data[33 /* X34 */] <-0.4025f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2741497f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.02887615f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18558507f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.012939328f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25751224f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.39894468f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.12819614f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20655614f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.62697375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5011413f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25005084f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30297905f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.105114065f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[24 /* X25 */] <-0.22650285f ? 
                     (data[18 /* X19 */] <0.3314546f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.12321482f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.48989487f ? 
                         (data[26 /* X27 */] <0.29599845f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.40234375f ? 
                 (data[2 /* X3 */] <-0.020599235f ? 
                     (data[22 /* X23 */] <0.16666894f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.08271834f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.44903564f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[11 /* X12 */] <-0.41523162f ? 
                     (data[3 /* X4 */] <0.42342418f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.048765864f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.46875f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21308278f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12839313f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24878193f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.096085556f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.20624174f ? 
                 (data[23 /* X24 */] <0.12473543f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.8955966f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.14007448f ? 
                     (data[33 /* X34 */] <-0.3268743f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30289134f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28820094f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                 (data[13 /* X14 */] <0.23803787f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22428453f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48774788f ? 
                 (data[15 /* X16 */] <0.035046007f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.575f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.08853679f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06253995f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.31953573f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.16972657f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.55725324f ? 
                         (data[28 /* X29 */] <0.21544434f ? 
                            1.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4522242f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.04200161f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[29 /* X30 */] <0.06284915f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.746449f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11233045f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16409774f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X9 */] <-0.046852145f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.07888083f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.087599434f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26582095f ? 
                 (data[14 /* X15 */] <0.15720867f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.15638508f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2712501f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.19596611f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[13 /* X14 */] <0.15671006f ? 
                             (data[13 /* X14 */] <0.14065361f ? 
                                1.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.354803f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4388956f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12948367f ? 
             (data[26 /* X27 */] <-0.014505668f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                     (data[32 /* X33 */] <0.40944535f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.074036285f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.21323495f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.4142186f ? 
             (data[10 /* X11 */] <-0.4372817f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (data[17 /* X18 */] <-0.73185116f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30637127f ? 
                         (data[33 /* X34 */] <-0.55f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.047040034f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09037656f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31508723f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.058058664f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[1 /* X2 */] <-0.24023645f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.43088934f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.26757812f ? 
            1.0f : 
             (data[21 /* X22 */] <0.16544232f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09070541f ? 
             (data[26 /* X27 */] <0.07367984f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.113782816f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.43278065f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.3034551f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26068243f ? 
                 (data[6 /* X7 */] <0.14199188f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.07194842f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.6487011f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09227688f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.6700625f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.5769749f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28943115f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9468252f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44120583f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35024872f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38383758f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6004445f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56f ? 
                                    0.0f : 
                                     (data[5 /* X6 */] <0.13100974f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[22 /* X23 */] <0.17467237f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10196867f ? 
             (data[24 /* X25 */] <-0.06710173f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5638707f ? 
                 (data[11 /* X12 */] <-0.41659844f ? 
                     (data[15 /* X16 */] <0.11542183f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.472209f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.20814234f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[35 /* X36 */] <-0.72578126f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.338883f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04338383f ? 
             (data[1 /* X2 */] <-0.2371039f ? 
                 (data[8 /* X9 */] <0.059632845f ? 
                     (data[17 /* X18 */] <-0.4729695f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.40429932f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2336249f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.14015259f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.078325294f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1471102f ? 
                         (data[35 /* X36 */] <-0.18254843f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.26892278f ? 
                             (data[18 /* X19 */] <0.22211424f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33467558f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.30887926f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79765624f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.26293486f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2552344f ? 
                     (data[30 /* X31 */] <0.110059105f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (data[0 /* X1 */] <-0.12953286f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17324366f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.56107736f ? 
                         (data[11 /* X12 */] <-0.08276106f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.9771484f ? 
                     (data[5 /* X6 */] <0.16688195f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.425675f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.035213806f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2617191f ? 
             (data[1 /* X2 */] <-0.32722268f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[5 /* X6 */] <0.11540739f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.49653086f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.78439236f ? 
                 (data[18 /* X19 */] <-0.44707757f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.11780568f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11478823f ? 
                             (data[18 /* X19 */] <-0.039340794f ? 
                                1.0f : 
                                0.0f) : 
                             (data[5 /* X6 */] <0.2156393f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.087377876f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28825682f ? 
         (data[25 /* X26 */] <-0.32980883f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25593582f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29126132f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (data[26 /* X27 */] <0.06350459f ? 
                     (data[33 /* X34 */] <-0.5359375f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.071976304f ? 
                             (data[21 /* X22 */] <0.19957021f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2960195f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.12546477f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.62200665f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.14614686f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (data[22 /* X23 */] <0.15796655f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.2597212f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.050028138f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26973972f ? 
             (data[25 /* X26 */] <-0.11341281f ? 
                 (data[33 /* X34 */] <-0.511875f ? 
                     (data[12 /* X13 */] <0.12626347f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.69972193f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.4876756f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.37941462f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2558422f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (data[5 /* X6 */] <0.15433799f ? 
                     (data[25 /* X26 */] <-0.00542418f ? 
                         (data[35 /* X36 */] <-0.29921874f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38632813f ? 
                         (data[34 /* X35 */] <-0.8125f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9725649f ? 
                                 (data[0 /* X1 */] <-0.762778f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f))) : 
             (data[29 /* X30 */] <0.18180136f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6652662f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.38841948f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2421875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.52011716f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04581474f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[32 /* X33 */] <0.44300357f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.3616061f ? 
                 (data[33 /* X34 */] <0.81631947f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[23 /* X24 */] <0.047208894f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.010602294f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.09403353f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27588156f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8824386f ? 
                 (data[3 /* X4 */] <-0.7939685f ? 
                     (data[35 /* X36 */] <0.4015625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9195312f ? 
                         (data[7 /* X8 */] <0.08789632f ? 
                             (data[20 /* X21 */] <0.11882244f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20846014f ? 
                                    0.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.0022946878f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[8 /* X9 */] <0.18646018f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4111016f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[5 /* X6 */] <0.035828684f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.53542656f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.28275353f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.17222774f ? 
                     (data[0 /* X1 */] <-0.070806734f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45664516f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41205007f ? 
                         (data[7 /* X8 */] <0.067699954f ? 
                            1.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6227265f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.50819206f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14833191f ? 
                                         (data[20 /* X21 */] <0.11882244f ? 
                                            1.0f : 
                                             (data[33 /* X34 */] <-0.58f ? 
                                                1.0f : 
                                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                                                    0.0f : 
                                                     (data[26 /* X27 */] <0.06909099f ? 
                                                        0.0f : 
                                                        1.0f)))) : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12730259f ? 
         (data[19 /* X20 */] <-0.30139548f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.03183689f ? 
                 (data[12 /* X13 */] <0.08985869f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.11047057f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1417687f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.113765195f ? 
                    1.0f : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.09268234f ? 
             (data[0 /* X1 */] <-0.015750995f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[5 /* X6 */] <0.1692232f ? 
            0.0f : 
            1.0f) : 
         (data[21 /* X22 */] <0.17020635f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10944385f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19151758f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.20673716f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.7380024f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4100916f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21490152f ? 
             (data[27 /* X28 */] <-0.1028346f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.359375f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.25435877f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1796875f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.18837538f ? 
             (data[30 /* X31 */] <0.16656576f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.039794154f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3163498f ? 
                         (data[8 /* X9 */] <-0.17386883f ? 
                            0.0f : 
                            1.0f) : 
                         (data[20 /* X21 */] <0.20051287f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.26892278f ? 
                         (data[25 /* X26 */] <-0.35282966f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45939004f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.32724738f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32810846f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37619376f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.15129444f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.1375007f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2846019f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3526066f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.50710607f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3296875f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.903054f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <0.08984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13244288f ? 
             (data[32 /* X33 */] <-0.4332389f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2109375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2951995f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21032405f ? 
                 (data[30 /* X31 */] <0.09835911f ? 
                     (data[7 /* X8 */] <0.05255268f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.0915383f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.08149999f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1928644f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15483734f ? 
                                 (data[1 /* X2 */] <-0.25249118f ? 
                                     (data[35 /* X36 */] <-0.025f ? 
                                         (data[31 /* X32 */] <0.15394226f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.26213014f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <5.551115E-17f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18047662f ? 
                 (data[34 /* X35 */] <-0.265625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
             (data[32 /* X33 */] <-0.2617191f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22340463f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20058747f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25253823f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4169195f ? 
                     (data[34 /* X35 */] <-0.96875f ? 
                         (data[2 /* X3 */] <-0.1374737f ? 
                             (data[20 /* X21 */] <0.1566499f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8725022f ? 
                             (data[25 /* X26 */] <-0.5836521f ? 
                                 (data[26 /* X27 */] <0.188321f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[0 /* X1 */] <0.01091004f ? 
                                     (data[35 /* X36 */] <-0.9025f ? 
                                         (data[32 /* X33 */] <0.15061077f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05859375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[13 /* X14 */] <0.10948745f ? 
             (data[32 /* X33 */] <0.22673947f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X5 */] <0.15669952f ? 
                 (data[20 /* X21 */] <0.25072715f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.008196721f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41315502f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
                 (data[10 /* X11 */] <-0.6164353f ? 
                     (data[31 /* X32 */] <0.0989486f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.43123445f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19277287f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26250976f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.2918596f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17323802f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.17434521f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.16245256f ? 
            1.0f : 
             (data[23 /* X24 */] <0.11347459f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[2 /* X3 */] <-0.38850185f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6625076f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1908612f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28684533f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.3923521f ? 
                 (data[23 /* X24 */] <0.13686249f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16001874f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.3916477f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21194856f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28721088f ? 
                             (data[1 /* X2 */] <-0.3580112f ? 
                                 (data[31 /* X32 */] <0.23444374f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22579074f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23750539f ? 
                     (data[6 /* X7 */] <0.15481123f ? 
                         (data[3 /* X4 */] <-0.40507916f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0261345f ? 
                                 (data[17 /* X18 */] <-0.56875575f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[9 /* X10 */] <-0.593673f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[33 /* X34 */] <-0.40625f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0299429f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.74841094f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26565135f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41845965f ? 
             (data[25 /* X26 */] <-0.6474966f ? 
                 (data[15 /* X16 */] <0.124695964f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.10196867f ? 
                     (data[8 /* X9 */] <0.03966691f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12533134f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25307053f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.15961455f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10773753f ? 
         (data[15 /* X16 */] <0.039683074f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.050006304f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.117076024f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[14 /* X15 */] <0.14021175f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13333812f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12533134f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.02239756f ? 
                             (data[10 /* X11 */] <-0.25378847f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14408703f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35724366f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20393266f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20050628f ? 
                     (data[33 /* X34 */] <-0.328125f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.08282928f ? 
                             (data[26 /* X27 */] <0.014663384f ? 
                                0.0f : 
                                1.0f) : 
                             (data[24 /* X25 */] <-0.7651687f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <-0.216f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32408983f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3039698f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.28320312f ? 
             (data[25 /* X26 */] <-0.42342696f ? 
                 (data[26 /* X27 */] <-0.024680918f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.17114785f ? 
                 (data[3 /* X4 */] <-0.4727121f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.017974932f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.17592001f ? 
                     (data[11 /* X12 */] <-0.2972582f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29491165f ? 
                             (data[33 /* X34 */] <-0.12f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.19935606f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15674712f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.1745232f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.051299658f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.146f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20290509f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[15 /* X16 */] <0.056685653f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.26458117f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27146417f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.21387888f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20448652f ? 
                    1.0f : 
                    0.0f))) : 
         (data[18 /* X19 */] <0.10925182f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5604991f ? 
                 (data[23 /* X24 */] <0.08835426f ? 
                     (data[6 /* X7 */] <0.21696435f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.09945268f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.16335171f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2981845f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.08872924f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[17 /* X18 */] <-0.44060928f ? 
             (data[11 /* X12 */] <-0.36160734f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.11657105f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.5565806f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21440133f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.28051123f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[30 /* X31 */] <0.093812f ? 
             (data[6 /* X7 */] <0.16073501f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.08885724f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14866541f ? 
                 (data[27 /* X28 */] <-0.46943793f ? 
                     (data[9 /* X10 */] <0.24547483f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.34700423f ? 
                         (data[15 /* X16 */] <0.078325294f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10801928f ? 
                                 (data[6 /* X7 */] <0.112048924f ? 
                                     (data[2 /* X3 */] <0.018650532f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18363827f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.009435097f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54017663f ? 
             (data[14 /* X15 */] <0.08603405f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.54392993f ? 
                     (data[9 /* X10 */] <-0.14849791f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.41689092f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17474702f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.49264735f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19037369f ? 
                                    0.0f : 
                                     (data[5 /* X6 */] <0.18365043f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.38937804f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[15 /* X16 */] <0.048957206f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.27077442f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18337667f ? 
                     (data[4 /* X5 */] <0.15246457f ? 
                         (data[35 /* X36 */] <-0.54296875f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17632224f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.12245606f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5188494f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.40010843f ? 
                     (data[24 /* X25 */] <-0.7983364f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.5546548f ? 
                             (data[32 /* X33 */] <-0.5568175f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[24 /* X25 */] <0.41158003f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.039861627f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.092945404f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32396564f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.9523926f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13153508f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10048132f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.15251836f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.13706148f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08149999f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2421875f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21616675f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.4453125f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.13058472f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.46811548f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.7877474f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.21550967f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19387567f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[15 /* X16 */] <0.059004184f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11434081f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.6427814f ? 
             (data[11 /* X12 */] <-0.35088247f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37268275f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05025841f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                             (data[33 /* X34 */] <-0.628f ? 
                                1.0f : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.11030705f ? 
                                 (data[11 /* X12 */] <-0.49325863f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[21 /* X22 */] <0.25639227f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25762522f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[7 /* X8 */] <0.043716773f ? 
             (data[7 /* X8 */] <0.03415123f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                 (data[11 /* X12 */] <-0.27580848f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26686844f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0359375f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10069346f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.2868889f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.03494571f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4015625f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[24 /* X25 */] <-0.11657105f ? 
                     (data[24 /* X25 */] <-0.6525084f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.08149999f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1933581f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.188321f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.2317995f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[27 /* X28 */] <-0.5652436f ? 
                                1.0f : 
                                 (data[16 /* X17 */] <-0.24674767f ? 
                                     (data[10 /* X11 */] <-0.017851513f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (data[14 /* X15 */] <0.10303097f ? 
             (data[5 /* X6 */] <0.10395722f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4259565f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.17389767f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.6350912f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3096012f ? 
                     (data[13 /* X14 */] <0.10007919f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.119077705f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.34674072f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.39573517f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.15148117f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.03772469f ? 
            0.0f : 
             (data[24 /* X25 */] <0.0263403f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[1 /* X2 */] <-0.2371039f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21544434f ? 
                 (data[20 /* X21 */] <0.11510924f ? 
                     (data[23 /* X24 */] <0.04504335f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.123182945f ? 
                         (data[32 /* X33 */] <-0.1897314f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4053237f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.765625f ? 
                     (data[25 /* X26 */] <-0.6712738f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                             (data[3 /* X4 */] <-0.80411345f ? 
                                 (data[15 /* X16 */] <0.25241208f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2790801f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31044254f ? 
                                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.57160205f ? 
                                             (data[5 /* X6 */] <0.117493026f ? 
                                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50274605f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f) : 
                                            1.0f) : 
                                        1.0f))) : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.3790091f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[34 /* X35 */] <-0.9765625f ? 
                 (data[24 /* X25 */] <-0.083591506f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19056801f ? 
                         (data[30 /* X31 */] <0.12791532f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[26 /* X27 */] <-0.28245392f ? 
                     (data[6 /* X7 */] <0.20957305f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.94277f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                             (data[0 /* X1 */] <-0.23341249f ? 
                                 (data[28 /* X29 */] <0.20056336f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24391913f ? 
                                 (data[5 /* X6 */] <0.1506994f ? 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.18986297f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        1.0f))) : 
             (data[13 /* X14 */] <0.14621614f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.26508364f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.26917648f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2447082f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.11387614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[0 /* X1 */] <-0.122192085f ? 
             (data[35 /* X36 */] <-0.7638672f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24925852f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.09268234f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3108724f ? 
                     (data[34 /* X35 */] <-0.796875f ? 
                         (data[6 /* X7 */] <0.15032217f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18455315f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
        0.6666667f : 
         (data[33 /* X34 */] <-0.9765625f ? 
             (data[35 /* X36 */] <-0.0859375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39807004f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36960125f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.108519904f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.032775838f ? 
                             (data[14 /* X15 */] <0.10804392f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.33358818f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.39824218f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2234883f ? 
         (data[7 /* X8 */] <0.042454503f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21242388f ? 
                 (data[13 /* X14 */] <0.12522832f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.015871517f ? 
                         (data[33 /* X34 */] <-0.4375f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.05476915f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34832078f ? 
                         (data[32 /* X33 */] <-0.28409126f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22688149f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15522632f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.41375f ? 
                                         (data[24 /* X25 */] <-0.22285576f ? 
                                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6026665f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[5 /* X6 */] <0.3462841f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2750871f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.34650233f ? 
             (data[2 /* X3 */] <-0.2349425f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.24659938f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[6 /* X7 */] <0.0852419f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5668275f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.103573725f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19308648f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.55390626f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.14656474f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26768866f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                0.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23566665f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                 (data[25 /* X26 */] <-0.015190511f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18740302f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1328125f ? 
                 (data[25 /* X26 */] <-0.39580193f ? 
                     (data[8 /* X9 */] <-0.010983378f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.12626347f ? 
                         (data[7 /* X8 */] <0.067699954f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09378219f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.1995367f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.14999372f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31388208f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
             (data[31 /* X32 */] <0.09567698f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.086400494f ? 
                     (data[5 /* X6 */] <0.09937715f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.113683514f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                     (data[6 /* X7 */] <0.097139485f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3461766f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.25342947f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.026133426f ? 
            0.0f : 
             (data[9 /* X10 */] <0.2335948f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.32633367f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.21163511f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.5318909f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2929178f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19784865f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.07713783f ? 
                 (data[14 /* X15 */] <0.16783175f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.11847275f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24501845f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.1968696f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.6660156f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20532037f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.49726564f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.36324114f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.4707886f ? 
                             (data[25 /* X26 */] <-0.22331174f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16284904f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14155665f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3600296f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.6496705f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.37195456f ? 
                 (data[22 /* X23 */] <0.09687652f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15115343f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24909128f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.2356037f ? 
                             (data[8 /* X9 */] <0.12219278f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15090029f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (data[19 /* X20 */] <-0.6663543f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3252579f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26017764f ? 
             (data[25 /* X26 */] <-0.36203802f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.082128905f ? 
             (data[33 /* X34 */] <-0.796875f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.4848159f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.256808f ? 
             (data[31 /* X32 */] <0.10876344f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21907888f ? 
                         (data[18 /* X19 */] <-0.11512413f ? 
                             (data[2 /* X3 */] <0.04466349f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49822333f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36532873f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X7 */] <0.16374975f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.0686678f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12457625f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78623044f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.9631304f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.2375306f ? 
                 (data[22 /* X23 */] <0.17524526f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2459083f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.24195518f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[30 /* X31 */] <0.19157486f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.081632525f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.13272452f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.10923908f ? 
                     (data[22 /* X23 */] <0.13781862f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[32 /* X33 */] <-0.16290878f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.83984375f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.11357387f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.14470045f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13773493f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.2909681f ? 
                     (data[22 /* X23 */] <0.13880815f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.036770336f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28430897f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2670684f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32817626f ? 
             (data[17 /* X18 */] <-0.49562165f ? 
                 (data[24 /* X25 */] <0.26560283f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.34362134f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19012873f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.38937804f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42938635f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.16458428f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.21597432f ? 
                 (data[25 /* X26 */] <-0.6183355f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.049268022f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19613867f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09375f ? 
                             (data[15 /* X16 */] <0.06978132f ? 
                                0.0f : 
                                 (data[28 /* X29 */] <0.23458576f ? 
                                    1.0f : 
                                     (data[14 /* X15 */] <0.16400744f ? 
                                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17378308f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.01953125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.13061517f ? 
                 (data[34 /* X35 */] <-0.65625f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006294766f ? 
                         (data[0 /* X1 */] <-0.08548826f ? 
                            1.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08673456f ? 
                                 (data[6 /* X7 */] <0.15946527f ? 
                                    1.0f : 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14182572f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.10164498f ? 
                     (data[25 /* X26 */] <0.01041596f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37376103f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5188494f ? 
                 (data[17 /* X18 */] <-0.861292f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <0.13828184f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.76953125f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.4994354f ? 
                 (data[9 /* X10 */] <-0.75789773f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.12948367f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.03213178f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21574146f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[32 /* X33 */] <-0.16290878f ? 
             (data[34 /* X35 */] <0.03515625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.036820717f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15380348f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.16917242f ? 
                     (data[10 /* X11 */] <0.051358126f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.53542656f ? 
             (data[17 /* X18 */] <0.015669657f ? 
                 (data[6 /* X7 */] <0.17531298f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.53542703f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <0.079102196f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.387803f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.9453125f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30090022f ? 
                         (data[30 /* X31 */] <0.10972688f ? 
                             (data[13 /* X14 */] <0.10172689f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.5918861f ? 
                                    1.0f : 
                                     (data[9 /* X10 */] <-0.5049677f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.20066908f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.038410116f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23045488f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.18583263f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.32787666f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[32 /* X33 */] <-0.67933255f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5605469f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.036990087f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25812465f ? 
                     (data[6 /* X7 */] <0.083679974f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.15015136f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[20 /* X21 */] <0.15688276f ? 
                 (data[20 /* X21 */] <0.08395679f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.078325294f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.14650668f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1759958f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5148609f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1749761f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20875409f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23430443f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25959834f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44726562f ? 
                     (data[7 /* X8 */] <0.06736313f ? 
                         (data[33 /* X34 */] <-0.625f ? 
                             (data[18 /* X19 */] <0.15778366f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18842946f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.28761172f ? 
                 (data[25 /* X26 */] <-0.3221352f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.29931f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.151172f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21210699f ? 
            0.0f : 
             (data[14 /* X15 */] <0.13065097f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33525074f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15037881f ? 
             (data[23 /* X24 */] <0.103946194f ? 
                 (data[31 /* X32 */] <0.018248761f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3359375f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22022401f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.048309688f ? 
                                 (data[8 /* X9 */] <-0.20231713f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[18 /* X19 */] <0.10678745f ? 
                                     (data[20 /* X21 */] <0.22980922f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31798726f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06373025f ? 
             (data[17 /* X18 */] <-0.44708133f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3211455f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[21 /* X22 */] <0.08921758f ? 
             (data[16 /* X17 */] <-0.014389435f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.71281993f ? 
             (data[21 /* X22 */] <0.15158327f ? 
                 (data[33 /* X34 */] <-0.734375f ? 
                     (data[23 /* X24 */] <0.048508223f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25490424f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26879424f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.2409085f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[8 /* X9 */] <-0.2465115f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.25249767f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.15745364f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.209093f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[27 /* X28 */] <-0.21525963f ? 
             (data[14 /* X15 */] <0.17420559f ? 
                 (data[23 /* X24 */] <0.06929746f ? 
                     (data[15 /* X16 */] <0.05977703f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.23204073f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.14309655f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11372626f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.28606588f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[30 /* X31 */] <0.19615139f ? 
                            0.0f : 
                             (data[8 /* X9 */] <-0.04818321f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <0.003545011f ? 
                                    1.0f : 
                                     (data[2 /* X3 */] <-0.03723483f ? 
                                        1.0f : 
                                        0.0f))))))) : 
             (data[6 /* X7 */] <0.083679974f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.09097344f ? 
                     (data[32 /* X33 */] <-0.039060626f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.6587869f ? 
                         (data[22 /* X23 */] <0.17017704f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.282637f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.02887615f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[15 /* X16 */] <0.058231343f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41845965f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5692715f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26966357f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.40171078f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14257012f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.15522476f ? 
                             (data[25 /* X26 */] <-0.26338893f ? 
                                0.0f : 
                                1.0f) : 
                             (data[22 /* X23 */] <0.07236079f ? 
                                1.0f : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4072183f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[32 /* X33 */] <-0.32883555f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24580608f ? 
                     (data[9 /* X10 */] <0.3027486f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.15811118f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.54392993f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10639648f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3081957f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27891323f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31806263f ? 
                 (data[15 /* X16 */] <0.094265215f ? 
                     (data[16 /* X17 */] <-0.2752747f ? 
                         (data[11 /* X12 */] <-0.2972582f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21885753f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[3 /* X4 */] <-0.100731f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.08673456f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43973833f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24281049f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[23 /* X24 */] <0.14032736f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21044384f ? 
                 (data[8 /* X9 */] <0.17277315f ? 
                     (data[5 /* X6 */] <0.0982287f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5234375f ? 
             (data[30 /* X31 */] <0.1642922f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2578125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13081358f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[21 /* X22 */] <0.03248213f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.19935733f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102646805f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35206962f ? 
                         (data[11 /* X12 */] <-0.12566048f ? 
                             (data[16 /* X17 */] <0.005931645f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[28 /* X29 */] <0.06820267f ? 
                     (data[10 /* X11 */] <0.079102196f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22442292f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.14610377f ? 
                             (data[23 /* X24 */] <0.13117443f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[5 /* X6 */] <0.08907199f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.78439236f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17565998f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2220655f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.791875f ? 
                             (data[26 /* X27 */] <0.014663384f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
             (data[23 /* X24 */] <0.05457175f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19140884f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.12109466f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.37167704f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47240987f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.25115526f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2733375f ? 
                         (data[18 /* X19 */] <0.10617818f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.55741996f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <-0.805f ? 
                                    1.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.16522074f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31602368f ? 
             (data[33 /* X34 */] <-0.41015625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49443218f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15654768f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.19847941f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.07363369f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.5280945f ? 
                     (data[24 /* X25 */] <0.114285745f ? 
                        1.0f : 
                         (data[10 /* X11 */] <0.14233288f ? 
                             (data[22 /* X23 */] <0.21283914f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[29 /* X30 */] <0.08682894f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18820031f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08182058f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28070417f ? 
                                    0.0f : 
                                     (data[5 /* X6 */] <0.36842695f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11892691f ? 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18086283f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f)))) : 
             (data[20 /* X21 */] <0.065909326f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.61674803f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6528029f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.030587215f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.079598784f ? 
                         (data[11 /* X12 */] <-0.38305706f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.44020498f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.19957669f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[33 /* X34 */] <-0.28125f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26889494f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21176331f ? 
                     (data[21 /* X22 */] <0.1489847f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.27918047f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.081306204f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X2 */] <-0.38273346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1577987f ? 
             (data[16 /* X17 */] <-0.5607836f ? 
                 (data[14 /* X15 */] <0.12296584f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8192634f ? 
                     (data[6 /* X7 */] <0.067019425f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5819447f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.723401f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.14114396f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[11 /* X12 */] <-0.12566048f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.013762659f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26376873f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                         (data[25 /* X26 */] <-0.25460738f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20122264f ? 
                                1.0f : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.12229903f ? 
                                 (data[5 /* X6 */] <0.12502554f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10221137f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13421904f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1912648f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15511131f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2138405f ? 
                 (data[27 /* X28 */] <-0.24458788f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18959947f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.08351801f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.087599434f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13239725f ? 
                        1.0f : 
                        0.0f))) : 
             (data[18 /* X19 */] <0.06314717f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22741587f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.28722468f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16283742f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (data[32 /* X33 */] <-0.951527f ? 
                 (data[25 /* X26 */] <-0.26074627f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[31 /* X32 */] <0.09676752f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0546875f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.093333766f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.047503978f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.066914536f ? 
                         (data[35 /* X36 */] <-0.5734375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[22 /* X23 */] <0.097238f ? 
             (data[21 /* X22 */] <0.10654139f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.08937971f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0720362f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.63751215f ? 
                     (data[14 /* X15 */] <0.19571488f ? 
                        1.0f : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.96875f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04024999f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.06978132f ? 
                                 (data[12 /* X13 */] <0.15560508f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38883755f ? 
                                    0.0f : 
                                    1.0f))))))) : 
         (data[2 /* X3 */] <-0.04619246f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18186441f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3216008f ? 
         (data[31 /* X32 */] <0.04442168f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20437922f ? 
                1.0f : 
                 (data[32 /* X33 */] <-7.1070314E-4f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22279209f ? 
                 (data[3 /* X4 */] <-0.33744624f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44726562f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19521438f ? 
                             (data[11 /* X12 */] <-0.40021682f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <-0.09904018f ? 
                                     (data[5 /* X6 */] <0.09385246f ? 
                                        1.0f : 
                                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13558134f ? 
                                             (data[32 /* X33 */] <-0.5227275f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f)) : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27894887f ? 
                                        0.0f : 
                                         (data[32 /* X33 */] <0.19318125f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (data[31 /* X32 */] <0.121958956f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.123079956f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[12 /* X13 */] <0.16964076f ? 
                                    1.0f : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26248646f ? 
                                         (data[25 /* X26 */] <0.28070417f ? 
                                            1.0f : 
                                             (data[6 /* X7 */] <0.17391962f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)))) : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3009045f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22230607f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X7 */] <0.13536985f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27929688f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_11_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10604086f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1338379f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06640625f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.5385675f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19706604f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9459052f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2512268f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.17127185f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
        0.04761905f : 
         (data[28 /* X29 */] <0.08660788f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.63604563f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <0.16611783f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6182521f ? 
                     (data[17 /* X18 */] <-0.4464336f ? 
                         (data[21 /* X22 */] <0.1663085f ? 
                            1.0f : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.43648914f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1891096f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                     (data[34 /* X35 */] <-0.27083406f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                             (data[3 /* X4 */] <-0.102131575f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45664516f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03287781f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.236364f ? 
                                    0.0f : 
                                     (data[8 /* X9 */] <0.4241059f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                     (data[28 /* X29 */] <0.1566535f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.14750162f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0116176875f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8699785f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18446094f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.71519804f ? 
                     (data[7 /* X8 */] <0.057601772f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1282311f ? 
                            0.0f : 
                            1.0f) : 
                         (data[35 /* X36 */] <-0.878125f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.41776034f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22623067f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.0625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.15333714f ? 
                 (data[3 /* X4 */] <0.20045379f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.765625f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5898621f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[18 /* X19 */] <-0.10590319f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3327772f ? 
                 (data[17 /* X18 */] <-0.36941683f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.81640625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                     (data[4 /* X5 */] <0.11169603f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09021701f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (data[19 /* X20 */] <-0.24596329f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42109376f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.375f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25487086f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3650212f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29348245f ? 
                                 (data[0 /* X1 */] <-0.04070221f ? 
                                     (data[16 /* X17 */] <-0.27491954f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[5 /* X6 */] <0.15099643f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.59838545f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2824945f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.40322348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[26 /* X27 */] <0.1923911f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.85881114f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2552344f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25448158f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.24388492f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.12743217f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[0 /* X1 */] <0.002600917f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.2733732f ? 
                             (data[5 /* X6 */] <0.32600534f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34816617f ? 
                     (data[27 /* X28 */] <-0.3227966f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2289347f ? 
                            1.0f : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.45638812f ? 
                            1.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1768235f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0125f ? 
                                    0.0f : 
                                     (data[15 /* X16 */] <0.088217705f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[15 /* X16 */] <0.06843289f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17565998f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[1 /* X2 */] <-0.19039252f ? 
             (data[19 /* X20 */] <-1.1696533f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.68877727f ? 
                 (data[4 /* X5 */] <0.122724876f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.2465645f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (data[11 /* X12 */] <-0.5010305f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.266368f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.302118f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24878193f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.54764664f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25110525f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14883962f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.043810662f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12501726f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058433425f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.14342996f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.106906205f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.12955427f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[13 /* X14 */] <0.07823117f ? 
                         (data[8 /* X9 */] <-0.50749f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.5453051f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.97249365f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.31490624f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16150375f ? 
                 (data[27 /* X28 */] <-0.22503571f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                     (data[3 /* X4 */] <-0.8714195f ? 
                         (data[2 /* X3 */] <0.07926612f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.19017778f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26997608f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18540466f ? 
                 (data[20 /* X21 */] <0.087008804f ? 
                     (data[16 /* X17 */] <-0.18276912f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.6328125f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1339701f ? 
                        1.0f : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.18507752f ? 
                         (data[13 /* X14 */] <0.13935772f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06715823f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.24975926f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21242343f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33321917f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                     (data[26 /* X27 */] <-0.1500476f ? 
                         (data[35 /* X36 */] <0.1578125f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20164044f ? 
         (data[19 /* X20 */] <-0.5057724f ? 
             (data[17 /* X18 */] <-0.12671526f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06131134f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.18069766f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.066914536f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11570029f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                 (data[25 /* X26 */] <-0.6036006f ? 
                     (data[34 /* X35 */] <-0.3024314f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.15783766f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.1404655f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.4437411f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.10891715f ? 
             (data[3 /* X4 */] <-0.050006304f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30923462f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.058162767f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.22304687f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3594689f ? 
                 (data[23 /* X24 */] <0.07622721f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18619166f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (data[21 /* X22 */] <0.10004496f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25574633f ? 
             (data[27 /* X28 */] <-0.72361624f ? 
                 (data[3 /* X4 */] <-0.083822764f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.091538444f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.390625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.44606045f ? 
                         (data[13 /* X14 */] <0.091522805f ? 
                             (data[7 /* X8 */] <0.05962141f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.123431325f ? 
                                 (data[2 /* X3 */] <-0.11913315f ? 
                                     (data[24 /* X25 */] <-0.4133869f ? 
                                         (data[22 /* X23 */] <0.1379028f ? 
                                            1.0f : 
                                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.124249764f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21437041f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.43337753f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[26 /* X27 */] <0.29085284f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[2 /* X3 */] <-0.05578992f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.052977532f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.03435237f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03184976f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015669657f ? 
             (data[11 /* X12 */] <-0.53320503f ? 
                 (data[9 /* X10 */] <-0.14905618f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09776943f ? 
                 (data[8 /* X9 */] <0.019700974f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.16231221f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34059978f ? 
                             (data[16 /* X17 */] <0.015238935f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009850529f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.19863571f ? 
             (data[6 /* X7 */] <0.15240473f ? 
                 (data[29 /* X30 */] <0.16561969f ? 
                     (data[34 /* X35 */] <-0.203125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.71519804f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.31832778f ? 
                         (data[28 /* X29 */] <0.09028892f ? 
                             (data[10 /* X11 */] <-0.29724923f ? 
                                0.0f : 
                                1.0f) : 
                             (data[17 /* X18 */] <-0.36045152f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09723492f ? 
                 (data[14 /* X15 */] <0.14021175f ? 
                     (data[32 /* X33 */] <-0.40340936f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.12423146f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[30 /* X31 */] <0.073350005f ? 
                         (data[4 /* X5 */] <0.12987807f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7938477f ? 
             (data[6 /* X7 */] <0.12949648f ? 
                 (data[15 /* X16 */] <0.04432014f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12828904f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.13284127f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[28 /* X29 */] <0.1495348f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.17311336f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95296687f ? 
             (data[8 /* X9 */] <-0.17043748f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08804321f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.36227283f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (data[15 /* X16 */] <0.1061477f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.10948745f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[28 /* X29 */] <0.21458142f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19838747f ? 
                     (data[13 /* X14 */] <0.18294483f ? 
                         (data[18 /* X19 */] <0.111782916f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[8 /* X9 */] <-0.2581583f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.40930623f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.09250704f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.8125f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                             (data[29 /* X30 */] <0.102233715f ? 
                                 (data[33 /* X34 */] <-0.0977785f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16735698f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[8 /* X9 */] <-0.096049264f ? 
                             (data[18 /* X19 */] <-0.36431077f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[13 /* X14 */] <0.14424853f ? 
            0.0f : 
             (data[7 /* X8 */] <0.048765864f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.6085315f ? 
             (data[29 /* X30 */] <0.121085785f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5751806f ? 
                 (data[0 /* X1 */] <-0.34614277f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14015286f ? 
                         (data[14 /* X15 */] <0.13171329f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.10617818f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24824426f ? 
                                 (data[33 /* X34 */] <-0.646f ? 
                                     (data[22 /* X23 */] <0.17582364f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[27 /* X28 */] <0.42384663f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.047690526f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[29 /* X30 */] <0.18103527f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.87625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (data[26 /* X27 */] <0.17543235f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.107299134f ? 
                 (data[16 /* X17 */] <-0.38005325f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
             (data[3 /* X4 */] <-0.33207166f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.37738526f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.3853027f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19920702f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.238094f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[9 /* X10 */] <-0.74838907f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.523808f ? 
                                 (data[3 /* X4 */] <-0.27746174f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[27 /* X28 */] <-0.50977725f ? 
                                         (data[10 /* X11 */] <0.0026268621f ? 
                                            1.0f : 
                                             (data[16 /* X17 */] <0.05369969f ? 
                                                 (data[22 /* X23 */] <0.22209303f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f)) : 
                                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22474131f ? 
                                             (data[16 /* X17 */] <-0.6456849f ? 
                                                 (data[30 /* X31 */] <0.13294914f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f) : 
                                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31734625f ? 
                                                 (data[34 /* X35 */] <-0.3904768f ? 
                                                    1.0f : 
                                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.16207497f ? 
                                                        0.0f : 
                                                         (data[2 /* X3 */] <-0.058631368f ? 
                                                            1.0f : 
                                                            0.0f))) : 
                                                1.0f)))) : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.032214645f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_11_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09811889f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25189918f ? 
                 (data[8 /* X9 */] <-0.13403298f ? 
                     (data[14 /* X15 */] <0.12321482f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.34241503f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <6.384727E-5f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.617361f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <0.1394966f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19154164f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X12 */] <-0.5385675f ? 
                1.0f : 
                 (data[33 /* X34 */] <0.1202782f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17845482f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1663085f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.91822565f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.69107765f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42996225f ? 
                 (data[2 /* X3 */] <-0.10993234f ? 
                     (data[14 /* X15 */] <0.1433331f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25225475f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.703125f ? 
                     (data[17 /* X18 */] <-0.123843335f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22671144f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28515625f ? 
             (data[13 /* X14 */] <0.10817571f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.13392763f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22347705f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5456605f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.21597432f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24291424f ? 
                         (data[2 /* X3 */] <-0.025992118f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.18746842f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.16075219f ? 
                         (data[15 /* X16 */] <0.09069081f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.4430468f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[29 /* X30 */] <0.121085785f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.44072077f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25440982f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.07495675f ? 
                     (data[22 /* X23 */] <0.21688771f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.23835184f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.10295366f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[10 /* X11 */] <-0.6085315f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3112433f ? 
                 (data[12 /* X13 */] <0.19715697f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1990201f ? 
                 (data[12 /* X13 */] <0.10710306f ? 
                     (data[33 /* X34 */] <-0.28125f ? 
                         (data[13 /* X14 */] <0.12615906f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.08158903f ? 
                         (data[9 /* X10 */] <-0.15140092f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.24997477f ? 
                                 (data[15 /* X16 */] <0.10800253f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3002618f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3547979f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22340463f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03930664f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34191847f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.102424696f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[22 /* X23 */] <0.14459181f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06843289f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[2 /* X3 */] <0.019570168f ? 
                         (data[16 /* X17 */] <-0.2743802f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1801734f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.2157067f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.434746f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07269134f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.2081072f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.010815626f ? 
             (data[22 /* X23 */] <0.12940967f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19332488f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09362967f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26427266f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4777344f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.17477955f ? 
                     (data[13 /* X14 */] <0.23541439f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[14 /* X15 */] <0.1407429f ? 
             (data[19 /* X20 */] <-0.8355021f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16016752f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22480084f ? 
                     (data[0 /* X1 */] <-0.08548826f ? 
                         (data[13 /* X14 */] <0.12522832f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X7 */] <0.0910928f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13296011f ? 
                     (data[33 /* X34 */] <-0.5f ? 
                         (data[10 /* X11 */] <-0.11058984f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33176538f ? 
                     (data[25 /* X26 */] <-0.24243534f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5979857f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.12424197f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[15 /* X16 */] <0.087599434f ? 
             (data[7 /* X8 */] <0.039929956f ? 
                 (data[26 /* X27 */] <0.1584736f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.1335992f ? 
                 (data[9 /* X10 */] <-0.09373315f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.3125f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23550528f ? 
                     (data[31 /* X32 */] <0.12353483f ? 
                         (data[29 /* X30 */] <0.17434043f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.238096f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6120237f ? 
                             (data[11 /* X12 */] <-0.26293865f ? 
                                 (data[2 /* X3 */] <-0.24198063f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[27 /* X28 */] <-0.13008785f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12702677f ? 
             (data[27 /* X28 */] <0.06824695f ? 
                 (data[2 /* X3 */] <-0.11657383f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20655614f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.16940442f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3112433f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.6413286f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.15292443f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07257838f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13887113f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.065387376f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[21 /* X22 */] <0.098745674f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10712763f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.44872263f ? 
                 (data[15 /* X16 */] <0.19754754f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.1783077f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.61066324f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.09759107f ? 
                         (data[0 /* X1 */] <-0.26166663f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24485892f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <0.35f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1068304f ? 
             (data[3 /* X4 */] <-0.392398f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[15 /* X16 */] <0.05977703f ? 
             (data[22 /* X23 */] <0.10193723f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                     (data[14 /* X15 */] <0.10013204f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.26395255f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2517492f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21412358f ? 
                 (data[21 /* X22 */] <0.18709706f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17768222f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1855501f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2226907f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.55f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07787209f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                     (data[21 /* X22 */] <0.15244946f ? 
                         (data[13 /* X14 */] <0.29612514f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.03966691f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10196867f ? 
             (data[7 /* X8 */] <0.07527359f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.7688211f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.6754403f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.554828f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.57011855f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.64548665f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4264763f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1768235f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1199171f ? 
                                        0.0f : 
                                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20576185f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.47500026f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[29 /* X30 */] <0.15472366f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[32 /* X33 */] <-0.34188595f ? 
            0.0f : 
             (data[15 /* X16 */] <0.04741152f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.11657105f ? 
                     (data[20 /* X21 */] <0.09654324f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22107361f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.57047427f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21883747f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.053581923f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0359375f ? 
             (data[13 /* X14 */] <0.09899354f ? 
                 (data[32 /* X33 */] <-0.37357983f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.1934608f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25738955f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15598506f ? 
                     (data[34 /* X35 */] <-0.01748453f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[23 /* X24 */] <0.015734043f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7147595f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (data[3 /* X4 */] <-0.4304415f ? 
                     (data[13 /* X14 */] <0.100774795f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.051813126f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.31249937f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.11488524f ? 
                                1.0f : 
                                 (data[7 /* X8 */] <0.124249764f ? 
                                    1.0f : 
                                    0.0f))))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13946114f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
             (data[18 /* X19 */] <-0.40712023f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2172754f ? 
                 (data[13 /* X14 */] <0.114734404f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                         (data[18 /* X19 */] <-0.04135669f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[25 /* X26 */] <-0.6168021f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657772f ? 
                 (data[22 /* X23 */] <0.16483466f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29837787f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26879424f ? 
                             (data[0 /* X1 */] <-0.340768f ? 
                                 (data[11 /* X12 */] <0.32797968f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.18783653f ? 
                     (data[18 /* X19 */] <0.13222213f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.4332389f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11648226f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.31812048f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11387614f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40225524f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0291426f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34884623f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.85881114f ? 
                 (data[9 /* X10 */] <-0.75760955f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6312434f ? 
                         (data[19 /* X20 */] <-0.69972193f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.8949228f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.046741117f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6276565f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35928202f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.26918957f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[4 /* X5 */] <0.10680754f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[32 /* X33 */] <0.22301078f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[14 /* X15 */] <0.060007513f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30891353f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.42224112f ? 
                    0.0f : 
                     (data[11 /* X12 */] <1.0540738f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[29 /* X30 */] <0.21877094f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.14343631f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1537869f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10460201f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.033853944f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.115666315f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4152981f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.12148464f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.06265087f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19082914f ? 
                 (data[35 /* X36 */] <-0.44394532f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.84046614f ? 
                 (data[3 /* X4 */] <-0.90979975f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.0792458f ? 
                     (data[17 /* X18 */] <-0.30458134f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.064124264f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33780098f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.0979945f ? 
             (data[4 /* X5 */] <0.11963329f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20960997f ? 
                 (data[7 /* X8 */] <0.117398016f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.11837046f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.15620504f ? 
                     (data[14 /* X15 */] <0.15295944f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3258756f ? 
                            0.0f : 
                            1.0f) : 
                         (data[18 /* X19 */] <-0.065945834f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[16 /* X17 */] <-0.59861094f ? 
            1.0f : 
             (data[4 /* X5 */] <0.0945867f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16390976f ? 
                     (data[27 /* X28 */] <-0.28369224f ? 
                         (data[22 /* X23 */] <0.23445101f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.17206472f ? 
                             (data[13 /* X14 */] <0.11053684f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28825682f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.119871244f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29857087f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.55401295f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4138109f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22385632f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.19957021f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26992378f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[28 /* X29 */] <0.1933581f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.102325656f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.44988576f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.0929094f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53125f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.15705547f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.24414062f ? 
             (data[33 /* X34 */] <-0.421875f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4404412f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.09654324f ? 
                     (data[24 /* X25 */] <-0.14955059f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15037881f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4825573f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6785768f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.04581474f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.118929915f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.41566944f ? 
                 (data[29 /* X30 */] <0.13136284f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33906248f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.15385026f ? 
                     (data[5 /* X6 */] <0.2596796f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.9351844f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.263525f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3810818f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.13838722f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16458148f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.104305856f ? 
            0.0f : 
             (data[24 /* X25 */] <0.03183689f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14442073f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2052162f ? 
                         (data[3 /* X4 */] <0.19065872f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1457245f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
             (data[1 /* X2 */] <-0.3250312f ? 
                 (data[24 /* X25 */] <-0.4242238f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11060899f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14935876f ? 
                             (data[12 /* X13 */] <0.09100831f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.040866356f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.035046007f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.26265898f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2970561f ? 
                             (data[18 /* X19 */] <0.14213383f ? 
                                 (data[15 /* X16 */] <0.05871557f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2425864f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13230161f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09528401f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34161422f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.65844816f ? 
                 (data[24 /* X25 */] <0.07541911f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35903907f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.20800242f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36836445f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.693244f ? 
                 (data[31 /* X32 */] <0.016067686f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22556323f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.12831476f ? 
                             (data[15 /* X16 */] <0.10554011f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06905116f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33110565f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[19 /* X20 */] <-0.5203708f ? 
             (data[10 /* X11 */] <-0.20016664f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <0.3959052f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.12434506f ? 
                 (data[24 /* X25 */] <0.081306204f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1344696f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X1 */] <-0.6415512f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17578125f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4111874f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.43919656f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31056994f ? 
                            0.0f : 
                            1.0f) : 
                         (data[19 /* X20 */] <-1.1335015f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3874631f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.15660308f ? 
                     (data[11 /* X12 */] <-0.35349125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3724325f ? 
                         (data[18 /* X19 */] <0.007821598f ? 
                             (data[1 /* X2 */] <-0.085523516f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.058980256f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[32 /* X33 */] <-0.3027347f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.17000692f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.15433799f ? 
                    0.0f : 
                     (data[8 /* X9 */] <-0.09343933f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.5908919f ? 
                             (data[30 /* X31 */] <0.16214319f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48683006f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.49038357f ? 
                 (data[29 /* X30 */] <0.18274811f ? 
                     (data[9 /* X10 */] <-0.56397897f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.27007663f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.08105687f ? 
                             (data[1 /* X2 */] <-0.11180751f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23290905f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7559506f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.099897474f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1689763f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.23248711f ? 
            0.0f : 
             (data[14 /* X15 */] <0.09665713f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.58238655f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.078325294f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X4 */] <-0.36069506f ? 
             (data[18 /* X19 */] <-0.21348071f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8503015f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[4 /* X5 */] <0.123878546f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2755721f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.16851832f ? 
                     (data[2 /* X3 */] <-0.120719165f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[0 /* X1 */] <0.12739392f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20821388f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28834394f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54272616f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3413293f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07110515f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0766417f ? 
                                    1.0f : 
                                     (data[4 /* X5 */] <0.20521015f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[7 /* X8 */] <0.11702448f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.08660788f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14811851f ? 
                 (data[25 /* X26 */] <-0.24846849f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.06905116f ? 
                 (data[35 /* X36 */] <0.23398438f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.067699954f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17827414f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.41893035f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23713057f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18918751f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.22576265f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[6 /* X7 */] <0.17947812f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_11_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[22 /* X23 */] <0.11892676f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.43668133f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4514624f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2644907f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
                 (data[34 /* X35 */] <-0.90625f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.026133426f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23233318f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42938635f ? 
                         (data[35 /* X36 */] <-0.9085938f ? 
                             (data[6 /* X7 */] <0.15823592f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27019104f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.19429956f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)) : 
                1.0f) : 
             (data[21 /* X22 */] <0.22520943f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[4 /* X5 */] <0.107291594f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17968789f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.54279387f ? 
                 (data[13 /* X14 */] <0.114734404f ? 
                     (data[27 /* X28 */] <-0.26414007f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.8125f ? 
                         (data[9 /* X10 */] <-0.15827669f ? 
                             (data[20 /* X21 */] <0.19492741f ? 
                                 (data[2 /* X3 */] <-0.3837666f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.12126662f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26702303f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33729413f ? 
                 (data[23 /* X24 */] <0.05543797f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16720396f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20066908f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.15638508f ? 
                 (data[11 /* X12 */] <-0.30798307f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.140625f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X5 */] <0.15881701f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.093485914f ? 
                 (data[8 /* X9 */] <0.2869848f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.34118223f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.049255f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21912539f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34162667f ? 
                     (data[34 /* X35 */] <-0.65625f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26918942f ? 
                             (data[14 /* X15 */] <0.13925953f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.114771f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5454706f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.41370022f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30753174f ? 
                 (data[24 /* X25 */] <-0.39140055f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36939692f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17078015f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25132534f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (data[32 /* X33 */] <0.46164703f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.54296875f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.66648f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13875325f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.43668133f ? 
                 (data[0 /* X1 */] <-0.17357744f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.45966184f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0459996f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.28409126f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.087079644f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.11218504f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3539293f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[28 /* X29 */] <0.10087191f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43203565f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.20548353f ? 
             (data[15 /* X16 */] <0.07006552f ? 
                 (data[2 /* X3 */] <-0.12937044f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12197767f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0452555f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22348239f ? 
                         (data[34 /* X35 */] <-0.46041843f ? 
                            1.0f : 
                            0.0f) : 
                         (data[32 /* X33 */] <-0.37357983f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22845507f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-8.2749844E-4f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[11 /* X12 */] <-0.3937819f ? 
                     (data[32 /* X33 */] <-0.50781274f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26735353f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[22 /* X23 */] <0.02385765f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19999744f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25727198f ? 
                         (data[21 /* X22 */] <0.17323802f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.07326742f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09118038f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09546995f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.15638508f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[26 /* X27 */] <-0.03485617f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1745232f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.78439236f ? 
                 (data[21 /* X22 */] <0.09181615f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23116685f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33414936f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.4318175f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.039440114f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09201316f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.67229176f ? 
             (data[2 /* X3 */] <0.20654064f ? 
                 (data[2 /* X3 */] <0.13027951f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[9 /* X10 */] <-0.36343294f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21317363f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.12006058f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[18 /* X19 */] <-0.03828305f ? 
            1.0f : 
             (data[13 /* X14 */] <0.15277484f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.13214295f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.09963173f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[27 /* X28 */] <-0.14438298f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22093548f ? 
                 (data[22 /* X23 */] <0.10372211f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.26414007f ? 
             (data[13 /* X14 */] <0.21442656f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.93610036f ? 
                     (data[24 /* X25 */] <0.07902133f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.90625f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.390622f ? 
                                 (data[24 /* X25 */] <0.17694157f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.2413408f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.2757794f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6010438f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.1311549f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.550395f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.16666874f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.627986f ? 
                                1.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33332938f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15388907f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.21135038f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5783746f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
            1.0f : 
            0.0f) : 
         (data[24 /* X25 */] <-0.61950904f ? 
             (data[21 /* X22 */] <0.22694181f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17483555f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18350159f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29277226f ? 
                     (data[28 /* X29 */] <0.09028892f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.24348594f ? 
                            1.0f : 
                            0.0f) : 
                         (data[1 /* X2 */] <-0.5338585f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4253499f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17769788f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.17628242f ? 
                                        1.0f : 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19957669f ? 
                                            0.0f : 
                                            1.0f)))))) : 
                     (data[0 /* X1 */] <0.07858148f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.15037549f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[8 /* X9 */] <-0.30308166f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2439407f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3001083f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61025566f ? 
                     (data[7 /* X8 */] <0.10240587f ? 
                         (data[6 /* X7 */] <0.14199188f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.13175897f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6406242f ? 
                             (data[3 /* X4 */] <-0.80411345f ? 
                                 (data[17 /* X18 */] <-0.113123976f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[13 /* X14 */] <0.13895822f ? 
                                     (data[27 /* X28 */] <-0.06470785f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.17704755f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.2371039f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[9 /* X10 */] <-0.107563905f ? 
             (data[13 /* X14 */] <0.21049134f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2346646f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3582169f ? 
                 (data[29 /* X30 */] <0.08340325f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[13 /* X14 */] <0.10096115f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3144941f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[8 /* X9 */] <-0.11506909f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22607562f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44350758f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28481084f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14621614f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10305632f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21311483f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27245525f ? 
                     (data[30 /* X31 */] <0.08036635f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.64353967f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.7149536f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[29 /* X30 */] <0.2889443f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.12347924f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19534628f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3594557f ? 
                         (data[22 /* X23 */] <0.17241614f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.34564042f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21839377f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.20080157f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[9 /* X10 */] <0.01691292f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03379986f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
                0.0f : 
                 (data[25 /* X26 */] <0.0072300467f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.10196867f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10737962f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3163498f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21352346f ? 
                             (data[26 /* X27 */] <0.02223537f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44452104f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27361313f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[13 /* X14 */] <0.14424853f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (data[19 /* X20 */] <-0.32433575f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09229939f ? 
                         (data[6 /* X7 */] <0.092010245f ? 
                             (data[27 /* X28 */] <-0.06470785f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[35 /* X36 */] <0.1578125f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[30 /* X31 */] <0.18589097f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081306204f ? 
                     (data[34 /* X35 */] <-0.171875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.048957206f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.44024494f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.72910154f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3334782f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25769803f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24060078f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[33 /* X34 */] <-0.03125f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (data[3 /* X4 */] <-0.5023015f ? 
             (data[33 /* X34 */] <-0.0625f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.395952f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.036973126f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2086212f ? 
                             (data[35 /* X36 */] <-0.9025f ? 
                                 (data[27 /* X28 */] <-0.2595831f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[5 /* X6 */] <0.15433799f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20275335f ? 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.46375f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[13 /* X14 */] <0.15508988f ? 
                                     (data[28 /* X29 */] <0.133721f ? 
                                        0.0f : 
                                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.44734976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[31 /* X32 */] <0.094041176f ? 
             (data[17 /* X18 */] <-0.104063116f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04254284f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15292443f ? 
                 (data[0 /* X1 */] <0.2154831f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16636652f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[13 /* X14 */] <0.1534307f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.061994843f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2649095f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4413776f ? 
                     (data[12 /* X13 */] <0.1185993f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17351018f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.2690932f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[6 /* X7 */] <0.12533134f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50553876f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[11 /* X12 */] <0.38913265f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25436398f ? 
                 (data[11 /* X12 */] <-0.54392993f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22447704f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.265306f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[31 /* X32 */] <0.047693297f ? 
             (data[34 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.24458788f ? 
                 (data[18 /* X19 */] <-0.065945834f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19645084f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.21550967f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.30852303f ? 
                         (data[20 /* X21 */] <0.10094926f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.5313624f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3312622f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2012837f ? 
             (data[4 /* X5 */] <0.11434987f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4015625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.114337094f ? 
                     (data[7 /* X8 */] <0.053200983f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.33411625f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[2 /* X3 */] <-0.1453662f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.5085423f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19967078f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.531141f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30836368f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19143423f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3825535f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3713057f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.46885592f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[13 /* X14 */] <0.30301213f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.16656576f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.58493304f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22411731f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.15927313f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15626138f ? 
                            1.0f : 
                            0.0f))))) : 
        0.75f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[32 /* X33 */] <-0.3027347f ? 
             (data[35 /* X36 */] <-0.36015624f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22113107f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31264916f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.22611299f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X6 */] <0.12800258f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2783022f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23021848f ? 
                         (data[24 /* X25 */] <-0.47110853f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18218575f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-0.234375f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07636315f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.1774015f ? 
                                1.0f : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (data[0 /* X1 */] <-0.14971995f ? 
             (data[10 /* X11 */] <-0.21070509f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21038109f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32956368f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21034242f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.421875f ? 
                         (data[20 /* X21 */] <0.14110166f ? 
                             (data[23 /* X24 */] <0.112594076f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.080078125f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30752617f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18695988f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.1381857f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[19 /* X20 */] <-0.5057724f ? 
             (data[13 /* X14 */] <0.21049134f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.016159747f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.18702775f ? 
                     (data[31 /* X32 */] <0.13891691f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.093690775f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[0 /* X1 */] <-0.36642128f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06301545f ? 
                 (data[17 /* X18 */] <-0.18172762f ? 
                     (data[33 /* X34 */] <0.125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3730363f ? 
                 (data[9 /* X10 */] <-0.36112782f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20249654f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.034516253f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1548923f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.6875f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.172143f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.24649626f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[34 /* X35 */] <-0.7109375f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.009428444f ? 
             (data[27 /* X28 */] <-0.59163904f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.047693297f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11161691f ? 
             (data[10 /* X11 */] <-0.3354551f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.395952f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.005961594f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.21875f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[31 /* X32 */] <0.11345538f ? 
                         (data[33 /* X34 */] <-0.6875f ? 
                            1.0f : 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                 (data[23 /* X24 */] <0.09379957f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24690431f ? 
                             (data[13 /* X14 */] <0.21700938f ? 
                                1.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.45f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.36536852f ? 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                                            1.0f : 
                                             (data[32 /* X33 */] <0.35475945f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f) : 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28101015f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3329607f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1029832f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.9351844f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31889394f ? 
                     (data[11 /* X12 */] <-0.53320503f ? 
                         (data[33 /* X34 */] <-0.71875f ? 
                            1.0f : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.5730078f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23990165f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.65312785f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20222671f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1953361f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07031302f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28556734f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.28543556f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[14 /* X15 */] <0.14021175f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                 (data[17 /* X18 */] <-0.5700501f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.23932768f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06301545f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.30630088f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[34 /* X35 */] <0.33333313f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[27 /* X28 */] <-0.3032444f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6257095f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17336786f ? 
                     (data[6 /* X7 */] <0.104779236f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.055327065f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17582364f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21536568f ? 
                         (data[26 /* X27 */] <0.09063859f ? 
                             (data[21 /* X22 */] <0.18848297f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.50731516f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24869253f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.124620035f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4267831f ? 
             (data[32 /* X33 */] <-0.746449f ? 
                 (data[3 /* X4 */] <-0.38817093f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18363827f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (data[32 /* X33 */] <-0.31019208f ? 
                 (data[25 /* X26 */] <-0.622941f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44400743f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.13240562f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[31 /* X32 */] <0.10112967f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                         (data[10 /* X11 */] <-0.32135877f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.52910113f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06250266f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.6660156f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.83953094f ? 
                 (data[12 /* X13 */] <0.09560681f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.046198428f ? 
                     (data[27 /* X28 */] <-0.6160793f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.053594276f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44300357f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.090098135f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[13 /* X14 */] <0.14621614f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.52746564f ? 
                 (data[10 /* X11 */] <-0.60589683f ? 
                     (data[29 /* X30 */] <0.121085785f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5680044f ? 
                         (data[23 /* X24 */] <0.09701645f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22390705f ? 
                                 (data[18 /* X19 */] <0.32385963f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24304014f ? 
                                         (data[6 /* X7 */] <0.14617608f ? 
                                            1.0f : 
                                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2072332f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.2109375f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.5965271f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[8 /* X9 */] <-0.065154254f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6257095f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24878193f ? 
                     (data[25 /* X26 */] <-0.23467906f ? 
                         (data[0 /* X1 */] <0.0906901f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40053797f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.058077786f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.72265625f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9714106f ? 
                 (data[27 /* X28 */] <-0.5769749f ? 
                     (data[17 /* X18 */] <0.018905679f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58852965f ? 
                            1.0f : 
                            0.0f) : 
                         (data[14 /* X15 */] <0.2166979f ? 
                             (data[4 /* X5 */] <0.2518451f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[29 /* X30 */] <0.17589673f ? 
                         (data[32 /* X33 */] <0.044033594f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33364156f ? 
                                 (data[24 /* X25 */] <-0.34303057f ? 
                                    1.0f : 
                                     (data[6 /* X7 */] <0.119576596f ? 
                                         (data[26 /* X27 */] <0.11651311f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14078347f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06286841f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (data[8 /* X9 */] <-0.105086125f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.021013046f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.5859375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4921875f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.026398614f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.7724967f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21364792f ? 
             (data[25 /* X26 */] <-0.08271834f ? 
                 (data[3 /* X4 */] <-0.14471392f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.26223055f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09530958f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
             (data[19 /* X20 */] <-0.19920702f ? 
                 (data[11 /* X12 */] <-0.0076870555f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10923908f ? 
                         (data[10 /* X11 */] <-0.8633712f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.20548353f ? 
                     (data[0 /* X1 */] <0.046645507f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10035704f ? 
                         (data[19 /* X20 */] <-0.15659696f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16586044f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.6826716f ? 
             (data[21 /* X22 */] <0.23300514f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.20640744f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18918751f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92265624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21366996f ? 
                         (data[8 /* X9 */] <0.32819304f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25371304f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14188361f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[10 /* X11 */] <-0.9958194f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95450366f ? 
                 (data[3 /* X4 */] <-0.49980435f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.32782257f ? 
                         (data[15 /* X16 */] <0.12778734f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14411736f ? 
                                 (data[15 /* X16 */] <0.10012049f ? 
                                     (data[10 /* X11 */] <-0.34202236f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[6 /* X7 */] <0.121686846f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24328482f ? 
                 (data[4 /* X5 */] <0.13787031f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.54457206f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3482422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[18 /* X19 */] <-0.42248842f ? 
                 (data[30 /* X31 */] <0.10290622f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X7 */] <0.16385886f ? 
             (data[13 /* X14 */] <0.114734404f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.101516396f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.19795333f ? 
                 (data[35 /* X36 */] <-0.6419922f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13864055f ? 
                 (data[1 /* X2 */] <-0.77565855f ? 
                     (data[11 /* X12 */] <0.06738695f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3825535f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3208955f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.026810998f ? 
                                    0.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f))) : 
                 (data[4 /* X5 */] <0.14135881f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[26 /* X27 */] <-0.03146442f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.4453125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.039583024f ? 
             (data[18 /* X19 */] <0.10925182f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32186636f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                 (data[30 /* X31 */] <0.096085556f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.390625f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0017012875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.31599385f ? 
                         (data[22 /* X23 */] <0.16194282f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.16008231f ? 
                                 (data[18 /* X19 */] <0.17502779f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[24 /* X25 */] <-0.23749603f ? 
                             (data[12 /* X13 */] <0.14005895f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3461766f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.50639135f ? 
                         (data[3 /* X4 */] <0.102167785f ? 
                             (data[20 /* X21 */] <0.11882244f ? 
                                0.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.35f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[2 /* X3 */] <-0.03723483f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <-0.22842376f ? 
                                     (data[14 /* X15 */] <0.22917916f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18536468f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5744092f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5217356f ? 
             (data[3 /* X4 */] <-0.6417944f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.62713087f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09070541f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.57421875f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5996094f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27047253f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.274567f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.79819554f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.14483327f ? 
                     (data[7 /* X8 */] <0.1989763f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[19 /* X20 */] <-0.30139548f ? 
             (data[12 /* X13 */] <0.08985869f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.30859375f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.09213846f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24135809f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18841822f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.026784688f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.123822026f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28030714f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22027326f ? 
                                 (data[24 /* X25 */] <-0.624456f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.023620311f ? 
                         (data[14 /* X15 */] <0.1062179f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23477241f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2728499f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[10 /* X11 */] <-0.5532046f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20130917f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.13925782f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.114337094f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18882945f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.42550766f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.090524435f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20304236f ? 
                         (data[25 /* X26 */] <-0.2300518f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.18214935f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (data[22 /* X23 */] <0.16519615f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38301533f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.6420456f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23716387f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04338383f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.3201648f ? 
             (data[30 /* X31 */] <0.13928309f ? 
                 (data[0 /* X1 */] <-0.13687362f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.046862997f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.09354853f ? 
                     (data[8 /* X9 */] <0.06628816f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.056662086f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.36324114f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[19 /* X20 */] <0.017682781f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2038631f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.6085315f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28596124f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26460302f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2960733f ? 
                     (data[12 /* X13 */] <0.10327098f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.16195701f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5790506f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08673456f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[8 /* X9 */] <-0.116732925f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.18359375f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2343484f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.14763471f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.1449066f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18287517f ? 
             (data[27 /* X28 */] <-0.6111912f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.12571703f ? 
                     (data[27 /* X28 */] <-0.10315935f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.1720406f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.348656f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.6662455f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16717607f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.74977344f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.0989486f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1449066f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.0499995f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (data[19 /* X20 */] <-0.9312101f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.5385675f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5098299f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5039904f ? 
                            0.0f : 
                             (data[2 /* X3 */] <-0.06898756f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2263086f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16053165f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
                 (data[22 /* X23 */] <0.17206426f ? 
                     (data[2 /* X3 */] <0.35310808f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.118578285f ? 
                 (data[19 /* X20 */] <-0.19920702f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12663962f ? 
                         (data[24 /* X25 */] <-0.4551201f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97761023f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0263403f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12502554f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1969317f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.32539064f ? 
             (data[23 /* X24 */] <0.097749196f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24253324f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.27007663f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21034242f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.079586685f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (data[30 /* X31 */] <0.16770254f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.6606587f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31953084f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20793928f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24080086f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.21399589f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.27701482f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X1 */] <-0.10751056f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.02871244f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.016767547f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[28 /* X29 */] <0.102252305f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[23 /* X24 */] <0.103079975f ? 
             (data[30 /* X31 */] <0.12223144f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.15037549f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19579765f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.76854277f ? 
             (data[4 /* X5 */] <0.15881701f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23000982f ? 
            0.0f : 
             (data[30 /* X31 */] <0.18248065f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10735837f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28374848f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.74365395f ? 
                     (data[32 /* X33 */] <-0.28409126f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39807004f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <0.004353939f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <0.09956152f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.15326732f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11530667f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30090022f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41952348f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.12724079f ? 
                             (data[10 /* X11 */] <0.049594548f ? 
                                1.0f : 
                                0.0f) : 
                             (data[18 /* X19 */] <0.4505756f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.003333275f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23384956f ? 
                     (data[19 /* X20 */] <-0.82458633f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.14495194f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.04497065f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36403674f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20909189f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28233683f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14041987f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (data[19 /* X20 */] <-0.8144233f ? 
             (data[25 /* X26 */] <-0.08271834f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.21786137f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2890625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6939559f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33414936f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[16 /* X17 */] <-0.25396228f ? 
             (data[30 /* X31 */] <0.13672566f ? 
                 (data[27 /* X28 */] <-0.10772265f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27765942f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.055782594f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22094713f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08158903f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.06439783f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34138823f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22520943f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3303331f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.098748885f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13838722f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.14466222f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18788761f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10051904f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21056925f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2682788f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.24418432f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.65858907f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13173085f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.035353933f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19749777f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.20538613f ? 
                         (data[14 /* X15 */] <0.26530814f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[11 /* X12 */] <0.12389329f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.015560924f ? 
                         (data[25 /* X26 */] <-0.22253811f ? 
                             (data[20 /* X21 */] <0.18475637f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.30664062f ? 
            0.0f : 
             (data[30 /* X31 */] <0.13152327f ? 
                 (data[25 /* X26 */] <-0.17371835f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.096167125f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20783818f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11946525f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.17711307f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[25 /* X26 */] <-0.13336422f ? 
             (data[30 /* X31 */] <0.15566213f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6640625f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.013968884f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.2409527f ? 
             (data[12 /* X13 */] <0.101354934f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.051973097f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.22703192f ? 
                         (data[26 /* X27 */] <0.1449066f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31135708f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19332713f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.23425658f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[30 /* X31 */] <0.13189404f ? 
             (data[9 /* X10 */] <-0.33548555f ? 
                 (data[2 /* X3 */] <-0.24453996f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.08835426f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.15939249f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.15705144f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.05977703f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0016601563f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2025973f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32304853f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19766301f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.02639906f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.76898867f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19353189f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.515625f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.40431824f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.81551147f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0084932f ? 
             (data[11 /* X12 */] <-0.42447448f ? 
                 (data[9 /* X10 */] <-0.12139467f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19079657f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.5940394f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5119274f ? 
                     (data[14 /* X15 */] <0.09771944f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.117697425f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25371304f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[32 /* X33 */] <-0.16290878f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2496103f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.15240473f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.114215694f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.23828125f ? 
                        1.0f : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.29144073f ? 
                         (data[20 /* X21 */] <0.22264892f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[32 /* X33 */] <-0.83966625f ? 
             (data[7 /* X8 */] <0.12702677f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3193353f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34718096f ? 
                 (data[25 /* X26 */] <-0.69046885f ? 
                     (data[30 /* X31 */] <0.2097633f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.0263403f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X5 */] <0.26822028f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[20 /* X21 */] <0.011603754f ? 
            1.0f : 
             (data[20 /* X21 */] <0.085378304f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20819944f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.227282f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.4030528f ? 
                         (data[21 /* X22 */] <0.17292166f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[23 /* X24 */] <0.10048132f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20917961f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2061589f ? 
                     (data[17 /* X18 */] <-0.3098775f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.3125f ? 
                             (data[8 /* X9 */] <-0.21855919f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26966357f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.34375528f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[8 /* X9 */] <-0.09011167f ? 
             (data[26 /* X27 */] <-0.30958793f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
            0.0f : 
             (data[32 /* X33 */] <0.39571765f ? 
                 (data[10 /* X11 */] <-0.54266614f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.11260837f ? 
                     (data[22 /* X23 */] <0.124316305f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36078572f ? 
             (data[27 /* X28 */] <-0.18104331f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.5155713f ? 
             (data[15 /* X16 */] <0.09532788f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19841698f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.89977264f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39526924f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17308478f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.15251836f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6779513f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.19318125f ? 
                                    0.0f : 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16707298f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (data[32 /* X33 */] <-0.13680793f ? 
             (data[27 /* X28 */] <-0.11261069f ? 
                 (data[8 /* X9 */] <0.28210777f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.27077442f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17216392f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.10738304f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32452214f ? 
             (data[30 /* X31 */] <0.08471778f ? 
                 (data[20 /* X21 */] <0.12439225f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19664487f ? 
                     (data[0 /* X1 */] <-0.51125264f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.09937715f ? 
                             (data[13 /* X14 */] <0.076956324f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.056452904f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20404401f ? 
                                 (data[24 /* X25 */] <-0.2726742f ? 
                                     (data[21 /* X22 */] <0.22267736f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19840568f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12959614f ? 
                                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18158044f ? 
                                            0.0f : 
                                             (data[15 /* X16 */] <0.3058507f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    1.0f)))) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4033936f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3009045f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49443877f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[20 /* X21 */] <0.25992408f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_11_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0299429f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27406347f ? 
                 (data[15 /* X16 */] <0.10923908f ? 
                     (data[14 /* X15 */] <0.10642662f ? 
                        1.0f : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.18959947f ? 
                         (data[22 /* X23 */] <0.18115394f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.43235803f ? 
                                0.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.042347196f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
        0.04761905f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2533861f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14343631f ? 
                     (data[34 /* X35 */] <-0.453125f ? 
                         (data[23 /* X24 */] <0.22868162f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[20 /* X21 */] <0.14481485f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.20072018f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[0 /* X1 */] <0.025705064f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.28057662f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.055327065f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1318984f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[19 /* X20 */] <-0.21829201f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2032904f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.603418f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <0.21677735f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2578125f ? 
                    1.0f : 
                    0.0f))) : 
         (data[22 /* X23 */] <0.025665047f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (data[34 /* X35 */] <-0.4921875f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18937327f ? 
                         (data[25 /* X26 */] <-0.49264735f ? 
                            1.0f : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.13166517f ? 
                             (data[6 /* X7 */] <0.14282726f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.47358447f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[19 /* X20 */] <-0.19503607f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20256071f ? 
                 (data[16 /* X17 */] <-0.31280473f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.15670119f ? 
                         (data[32 /* X33 */] <-0.08333625f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33846194f ? 
                                 (data[15 /* X16 */] <0.06843289f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[0 /* X1 */] <-0.36642128f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.23066406f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22411731f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.51595956f ? 
                 (data[10 /* X11 */] <-0.54266614f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38482705f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.375f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.051203463f ? 
                            0.0f : 
                             (data[1 /* X2 */] <0.10210036f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[25 /* X26 */] <-0.14588782f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20929715f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5213061f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6947911f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[23 /* X24 */] <0.04590957f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11648226f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32153204f ? 
                 (data[8 /* X9 */] <0.1175852f ? 
                     (data[11 /* X12 */] <-0.23290905f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.08230568f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26895845f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30616203f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10310445f ? 
                                        1.0f : 
                                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10854586f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22052868f ? 
                         (data[30 /* X31 */] <0.073350005f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.014037337f ? 
                                 (data[4 /* X5 */] <0.11632619f ? 
                                    1.0f : 
                                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.34366313f ? 
                                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.36914524f ? 
                                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15877998f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        1.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6428575f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27918345f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[9 /* X10 */] <0.27969733f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.4689593f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5549372f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.87571937f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5692715f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.21536568f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.35341704f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.43668133f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18635558f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08497282f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22458547f ? 
                 (data[18 /* X19 */] <0.17127791f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27718624f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.359375f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.48591357f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.09615023f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20482112f ? 
                     (data[12 /* X13 */] <0.080349825f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.14176227f ? 
                             (data[35 /* X36 */] <-0.145f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.15747154f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13586268f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.49289796f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4584863f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[30 /* X31 */] <0.1642922f ? 
            0.0f : 
             (data[22 /* X23 */] <0.12290304f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12576449f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6778758f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.086053744f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.16195701f ? 
                     (data[2 /* X3 */] <0.049782135f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24489269f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.046602756f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[18 /* X19 */] <-0.10590319f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18574142f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22601101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.093690775f ? 
                 (data[27 /* X28 */] <-0.28369224f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.10853729f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04832666f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.47007737f ? 
             (data[22 /* X23 */] <0.09759948f ? 
                 (data[2 /* X3 */] <-0.017533062f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3781221f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.15286663f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42299804f ? 
             (data[9 /* X10 */] <-0.53170717f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0705946f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.018592468f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.2621184f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24080086f ? 
                     (data[1 /* X2 */] <-0.30350897f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.07424497f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[2 /* X3 */] <-0.37410566f ? 
             (data[18 /* X19 */] <0.18594086f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.38005325f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.70584244f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.15720867f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[4 /* X5 */] <0.09882167f ? 
                 (data[31 /* X32 */] <0.042576827f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09937715f ? 
                     (data[16 /* X17 */] <-0.7499201f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.148046f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.28613824f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.125231f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28125f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.34335956f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.115533635f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[35 /* X36 */] <0.17f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19315867f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[25 /* X26 */] <-0.30371854f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25947082f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30186313f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.296f ? 
                                         (data[12 /* X13 */] <0.22639373f ? 
                                            0.0f : 
                                             (data[0 /* X1 */] <-0.12072393f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[6 /* X7 */] <0.088886395f ? 
             (data[24 /* X25 */] <-0.18802673f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.18172762f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.4381686f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5472753f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.12473543f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[30 /* X31 */] <0.108021714f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10644024f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3718607f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.72910154f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                     (data[17 /* X18 */] <-0.36941683f ? 
                         (data[3 /* X4 */] <-0.7988223f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.75f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[16 /* X17 */] <-0.89382154f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6750257f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.9f ? 
                                     (data[13 /* X14 */] <0.11053684f ? 
                                         (data[7 /* X8 */] <0.051276557f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[31 /* X32 */] <0.11465235f ? 
                                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2392342f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                     (data[15 /* X16 */] <0.10800253f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104305856f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.817754f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.035828684f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18969564f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21871778f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36197862f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24205805f ? 
                             (data[8 /* X9 */] <-0.04818321f ? 
                                 (data[0 /* X1 */] <-0.120567866f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[7 /* X8 */] <0.09853168f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17622836f ? 
             (data[18 /* X19 */] <-0.047503978f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23998718f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19844434f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15230885f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09913832f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37183526f ? 
            0.0f : 
             (data[33 /* X34 */] <0.0484375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
             (data[35 /* X36 */] <-0.77265626f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33202493f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44338062f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.079598784f ? 
                             (data[7 /* X8 */] <0.06407954f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.42299804f ? 
            0.0f : 
             (data[30 /* X31 */] <0.114273995f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33359456f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25584444f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26875827f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35585937f ? 
             (data[35 /* X36 */] <-0.47036743f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.38828915f ? 
                     (data[4 /* X5 */] <0.09882167f ? 
                         (data[7 /* X8 */] <0.13054544f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.78977185f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.8214275f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.046602756f ? 
                     (data[18 /* X19 */] <0.13076732f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.59796107f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20907448f ? 
                             (data[24 /* X25 */] <-0.2726742f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.093041584f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11384185f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-0.0977805f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (data[1 /* X2 */] <-0.3613058f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09731047f ? 
                                         (data[5 /* X6 */] <0.11647941f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[10 /* X11 */] <-0.08529757f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1870667f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3746143f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.4273835f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2421875f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3135608f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6594339f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5498881f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.46569476f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22556323f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.18244842f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[13 /* X14 */] <0.103584625f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.32961687f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21614853f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                     (data[24 /* X25 */] <-0.061605144f ? 
                         (data[0 /* X1 */] <-0.08548826f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21747714f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.1609345f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28872886f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.049082942f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31806263f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18928064f ? 
                         (data[25 /* X26 */] <-0.3443682f ? 
                             (data[15 /* X16 */] <0.07936729f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24195518f ? 
                             (data[27 /* X28 */] <0.23601983f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[26 /* X27 */] <0.10018098f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.33112395f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.02381125f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
             (data[32 /* X33 */] <-0.746449f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1953125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.6587026f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20580967f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.1896282f ? 
                 (data[33 /* X34 */] <-0.1796875f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2097633f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.15827669f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[27 /* X28 */] <-0.34234878f ? 
                     (data[19 /* X20 */] <-0.599619f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.44772905f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[18 /* X19 */] <-0.3978993f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.5859375f ? 
                 (data[10 /* X11 */] <-0.19489741f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[32 /* X33 */] <0.37237966f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19375303f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21056925f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06405137f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.13572223f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41315502f ? 
             (data[25 /* X26 */] <-0.6045243f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.9765625f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10772265f ? 
                        1.0f : 
                        0.0f) : 
                     (data[26 /* X27 */] <0.067727916f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16783726f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37792692f ? 
                                 (data[0 /* X1 */] <-0.7314756f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[27 /* X28 */] <0.34854013f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[22 /* X23 */] <0.104106106f ? 
                             (data[26 /* X27 */] <0.47461647f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22339435f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.24553543f ? 
             (data[31 /* X32 */] <0.076047294f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[4 /* X5 */] <0.12740768f ? 
             (data[34 /* X35 */] <-0.15625f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.421875f ? 
                 (data[27 /* X28 */] <-0.146827f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09910404f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.12005316f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X3 */] <-0.53886205f ? 
                     (data[9 /* X10 */] <-0.26892278f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.55869f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7995144f ? 
                 (data[24 /* X25 */] <-0.31670463f ? 
                     (data[27 /* X28 */] <-0.20548353f ? 
                         (data[25 /* X26 */] <-0.20549622f ? 
                            0.0f : 
                            1.0f) : 
                         (data[34 /* X35 */] <-0.34375f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[27 /* X28 */] <-0.28369224f ? 
                         (data[9 /* X10 */] <-0.74838907f ? 
                            1.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36060587f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1891096f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.619048f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17394821f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23830411f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09840333f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (data[28 /* X29 */] <0.16390976f ? 
                     (data[27 /* X28 */] <0.08779913f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.6747358f ? 
                         (data[19 /* X20 */] <-0.69972193f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[26 /* X27 */] <0.1516901f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24297844f ? 
                         (data[9 /* X10 */] <-0.19515872f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30479667f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.033920642f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[17 /* X18 */] <-0.37912488f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37833047f ? 
                 (data[27 /* X28 */] <-0.24458788f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.30028188f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0263403f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19919139f ? 
                                 (data[32 /* X33 */] <-0.18863675f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[31 /* X32 */] <0.058816787f ? 
                                 (data[10 /* X11 */] <-0.18565005f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <1.0793338f ? 
             (data[9 /* X10 */] <-0.57319945f ? 
                 (data[1 /* X2 */] <-0.2590857f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.08660788f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.09375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.2300518f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2552344f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.24812698f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[34 /* X35 */] <-0.8613281f ? 
             (data[6 /* X7 */] <0.23674875f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24458788f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2583387f ? 
                 (data[34 /* X35 */] <-0.77407837f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21135038f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.57416147f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7086122f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.55725324f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[5 /* X6 */] <0.11426237f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16799277f ? 
                1.0f : 
                0.0f) : 
             (data[29 /* X30 */] <0.11166515f ? 
                 (data[34 /* X35 */] <-0.72222185f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.08351426f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.10305632f ? 
                     (data[4 /* X5 */] <0.18390237f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.114734404f ? 
                             (data[30 /* X31 */] <0.13155301f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.008196721f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[17 /* X18 */] <-0.6137364f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7426858f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32584533f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6282383f ? 
                     (data[10 /* X11 */] <-0.6164353f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16559586f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30974838f ? 
                             (data[16 /* X17 */] <-0.3882834f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24485892f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (data[31 /* X32 */] <0.1218499f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[5 /* X6 */] <0.1682626f ? 
                 (data[29 /* X30 */] <0.08682894f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.09028892f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11536051f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.14059646f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9468252f ? 
                         (data[25 /* X26 */] <-0.27916294f ? 
                             (data[24 /* X25 */] <-0.20231785f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12219278f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52911144f ? 
                                         (data[6 /* X7 */] <0.25475088f ? 
                                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.29821312f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16799277f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.18435897f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23000982f ? 
                 (data[34 /* X35 */] <-0.83258826f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.9898499f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22733514f ? 
             (data[14 /* X15 */] <0.10196867f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.53320503f ? 
                     (data[34 /* X35 */] <0.015625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1989763f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.48693183f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12170702f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[30 /* X31 */] <0.20066908f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[3 /* X4 */] <-0.14610037f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.13136284f ? 
                     (data[32 /* X33 */] <0.3870732f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (data[34 /* X35 */] <-0.31054688f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17332748f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17081608f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.15891805f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6861312f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.16661245f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21248528f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2524977f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.032313533f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[3 /* X4 */] <-0.19583979f ? 
             (data[16 /* X17 */] <-0.3043987f ? 
                 (data[13 /* X14 */] <0.09374658f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.2409166f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23998718f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35742188f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.53867185f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.02385765f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.6492631f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.041532762f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.90625f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09701645f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7946742f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11465235f ? 
                                 (data[35 /* X36 */] <-0.5125f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[5 /* X6 */] <0.15557295f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13946114f ? 
         (data[34 /* X35 */] <-0.6660156f ? 
             (data[15 /* X16 */] <0.053594276f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.056851126f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21917266f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.24846849f ? 
                 (data[16 /* X17 */] <-0.8255747f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.6085315f ? 
         (data[31 /* X32 */] <0.10331075f ? 
            0.0f : 
             (data[21 /* X22 */] <0.11866804f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.10614504f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16570713f ? 
                 (data[17 /* X18 */] <-0.73432726f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6519556f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[22 /* X23 */] <0.10033416f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10074597f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40656248f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11778577f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3747988f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31087652f ? 
                                0.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.336363f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41512713f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[23 /* X24 */] <0.11503236f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05859375f ? 
             (data[5 /* X6 */] <0.1692232f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.15638508f ? 
                     (data[34 /* X35 */] <-0.37973022f ? 
                         (data[17 /* X18 */] <-0.22486375f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49510425f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.96827495f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
                             (data[20 /* X21 */] <0.11882244f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <0.06719965f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22408035f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.358628f ? 
                 (data[22 /* X23 */] <0.0985812f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12690349f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.36176834f ? 
             (data[3 /* X4 */] <-0.2410801f ? 
                 (data[14 /* X15 */] <0.10196867f ? 
                     (data[17 /* X18 */] <-0.3079922f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.64045364f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21054354f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1940329f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.2781932f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23906848f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27544844f ? 
             (data[16 /* X17 */] <-0.25396228f ? 
                 (data[27 /* X28 */] <-0.22503571f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.13831373f ? 
                         (data[21 /* X22 */] <0.12911646f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.08225267f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[35 /* X36 */] <-0.24579641f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.014663384f ? 
                                 (data[4 /* X5 */] <0.11632619f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (data[12 /* X13 */] <0.094152175f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.5975542f ? 
                         (data[0 /* X1 */] <-0.20294051f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.058460418f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3222332f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11802007f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.22313805f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.2888826f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95296687f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                 (data[27 /* X28 */] <-0.24458788f ? 
                     (data[7 /* X8 */] <0.16868176f ? 
                         (data[28 /* X29 */] <0.14138684f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.15246457f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6779513f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.16783726f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0030844295f ? 
             (data[3 /* X4 */] <-0.4811662f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4510742f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5168585f ? 
                 (data[35 /* X36 */] <-0.7638672f ? 
                     (data[13 /* X14 */] <0.16720396f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.9332956f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23713057f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[2 /* X3 */] <-0.6716269f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.21486156f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.47956318f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.3409214f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2302253f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.12846643f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11570029f ? 
             (data[25 /* X26 */] <-0.6168021f ? 
                 (data[23 /* X24 */] <0.14032736f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.65072715f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3140497f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14641483f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.20480005f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[15 /* X16 */] <0.082962364f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18762971f ? 
             (data[16 /* X17 */] <-0.2035259f ? 
                 (data[27 /* X28 */] <-0.34234878f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.07832031f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07969208f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09493308f ? 
             (data[27 /* X28 */] <-0.5329825f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9575501f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39526924f ? 
                         (data[5 /* X6 */] <0.26425967f ? 
                             (data[17 /* X18 */] <0.13540243f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.17928477f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23213895f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20814234f ? 
                             (data[4 /* X5 */] <0.13832214f ? 
                                0.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13305113f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09759107f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29237f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2749482f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (data[11 /* X12 */] <-0.44204378f ? 
             (data[9 /* X10 */] <-0.14905618f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.8108767f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1643809f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2613148f ? 
                     (data[27 /* X28 */] <-1.1370558f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.13572223f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11613887f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.025f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (data[23 /* X24 */] <0.1940329f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009850529f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1685157f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.097946554f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20656617f ? 
                         (data[18 /* X19 */] <-0.096306264f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3471206f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25225475f ? 
                     (data[12 /* X13 */] <0.080278486f ? 
                        1.0f : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.13503371f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.29178956f ? 
                 (data[22 /* X23 */] <0.14314589f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.41453207f ? 
                    0.0f : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.041228764f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.49562165f ? 
                 (data[19 /* X20 */] <-0.15749745f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19749135f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.87850964f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30771062f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3537072f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.19840568f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.416665f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16647278f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44487754f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1061477f ? 
                 (data[19 /* X20 */] <-0.30320007f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12431656f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.22301078f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.15827669f ? 
                     (data[6 /* X7 */] <0.10007797f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.0860177f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.6464967f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.13569757f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.16777538f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1968269f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.13660868f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33355173f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.5859375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.84658986f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.099897474f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3259244f ? 
                 (data[27 /* X28 */] <-0.3032444f ? 
                     (data[28 /* X29 */] <0.10581473f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.84765625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[19 /* X20 */] <0.0093408665f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.6085315f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0983434f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39597508f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6760033f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22529463f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24312086f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5011413f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0928476f ? 
             (data[27 /* X28 */] <-0.46943793f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28918362f ? 
                     (data[18 /* X19 */] <-0.08872201f ? 
                         (data[21 /* X22 */] <0.17323802f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.18330416f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[15 /* X16 */] <0.14015286f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.15356445f ? 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (data[18 /* X19 */] <0.22194211f ? 
                                0.0f : 
                                1.0f) : 
                             (data[9 /* X10 */] <-0.7410127f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4542709f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14889586f ? 
                                        0.0f : 
                                         (data[24 /* X25 */] <-0.33572033f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16266823f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16889405f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.044849228f ? 
                     (data[20 /* X21 */] <0.117879555f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15273708f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24708547f ? 
            0.0f : 
             (data[19 /* X20 */] <0.25374094f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3984375f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.026409963f ? 
             (data[14 /* X15 */] <0.09665713f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5570514f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.15638508f ? 
                        1.0f : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.05228678f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39510062f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.3008004f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.2035259f ? 
                 (data[26 /* X27 */] <0.2059581f ? 
                     (data[4 /* X5 */] <0.11858484f ? 
                         (data[16 /* X17 */] <-0.59125566f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.5582031f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09022429f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[15 /* X16 */] <0.07006552f ? 
                     (data[9 /* X10 */] <-0.19515872f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.021202251f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13989316f ? 
                            0.0f : 
                             (data[35 /* X36 */] <0.0037225f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.18013474f ? 
                                    0.0f : 
                                    1.0f))))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[20 /* X21 */] <0.08540363f ? 
             (data[35 /* X36 */] <-0.0859375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19275248f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22636719f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06329453f ? 
             (data[15 /* X16 */] <0.087599434f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.4811662f ? 
                     (data[16 /* X17 */] <-0.733108f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12948367f ? 
                         (data[3 /* X4 */] <-0.24897908f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.14269343f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26092625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[35 /* X36 */] <-0.46679688f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19332713f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.094414726f ? 
            1.0f : 
             (data[32 /* X33 */] <0.37183255f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10164498f ? 
                     (data[35 /* X36 */] <-0.5125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[0 /* X1 */] <0.41551894f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.67703134f ? 
             (data[35 /* X36 */] <-0.4515625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.68530846f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19608523f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.265625f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[23 /* X24 */] <0.0924902f ? 
                         (data[23 /* X24 */] <0.056866296f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40039062f ? 
             (data[5 /* X6 */] <0.155483f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15528788f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11542183f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.044350374f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.5720869f ? 
             (data[17 /* X18 */] <0.013525362f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5277344f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19351743f ? 
                         (data[14 /* X15 */] <0.23369482f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.05977703f ? 
                 (data[33 /* X34 */] <-0.40625f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12140815f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07734687f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.21737526f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10117187f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (data[25 /* X26 */] <-0.6474966f ? 
             (data[35 /* X36 */] <-0.48964843f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.3875982f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.68335307f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3454144f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <6.384727E-5f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[1 /* X2 */] <-0.2371039f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.38005325f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13408032f ? 
                         (data[27 /* X28 */] <-0.28369224f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1935159f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13990052f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.4471783f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114216134f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.06623245f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.050006304f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.484375f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27544844f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3956021f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.19342741f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[8 /* X9 */] <0.18608378f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35211986f ? 
                            1.0f : 
                             (data[0 /* X1 */] <0.16116144f ? 
                                1.0f : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (data[9 /* X10 */] <-0.16058181f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.6629297f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6871579f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24253324f ? 
                         (data[7 /* X8 */] <0.047503594f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13970725f ? 
                                0.0f : 
                                1.0f) : 
                             (data[2 /* X3 */] <-0.27854759f ? 
                                 (data[8 /* X9 */] <-0.0907772f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05514175f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3970156f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
             (data[12 /* X13 */] <0.15308803f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48742536f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20164044f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.39186355f ? 
             (data[34 /* X35 */] <-0.81640625f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03694841f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0033459144f ? 
                         (data[18 /* X19 */] <-0.065945834f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2182334f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.07562104f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.41356516f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16463982f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.253382f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31621724f ? 
                 (data[22 /* X23 */] <0.112781614f ? 
                     (data[2 /* X3 */] <-0.014607371f ? 
                         (data[12 /* X13 */] <0.122917995f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.6875f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53216f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.42299804f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.44246817f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2302253f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42583707f ? 
                     (data[27 /* X28 */] <-0.22503571f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16289656f ? 
                             (data[34 /* X35 */] <-0.2285705f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046636496f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13983569f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2594283f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49528417f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.21486156f ? 
             (data[14 /* X15 */] <0.09347021f ? 
                 (data[24 /* X25 */] <-0.3034551f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.38210353f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79461074f ? 
                     (data[3 /* X4 */] <-0.13288489f ? 
                         (data[32 /* X33 */] <-0.37357983f ? 
                            1.0f : 
                             (data[8 /* X9 */] <0.29256877f ? 
                                 (data[8 /* X9 */] <0.14370091f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.14925595f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.9f ? 
                                0.0f : 
                                 (data[9 /* X10 */] <-0.70391333f ? 
                                    1.0f : 
                                     (data[28 /* X29 */] <0.17105998f ? 
                                        1.0f : 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2986809f ? 
                                             (data[12 /* X13 */] <0.21211062f ? 
                                                 (data[33 /* X34 */] <-0.604f ? 
                                                     (data[24 /* X25 */] <-0.36830118f ? 
                                                        1.0f : 
                                                        0.0f) : 
                                                    1.0f) : 
                                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.043673232f ? 
                                                     (data[27 /* X28 */] <-0.87807846f ? 
                                                         (data[6 /* X7 */] <0.2948777f ? 
                                                            1.0f : 
                                                            0.0f) : 
                                                        0.0f) : 
                                                    1.0f)) : 
                                            0.0f)))))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.102234244f ? 
         (data[7 /* X8 */] <0.08347836f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.70942736f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2843076f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13711743f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.22520943f ? 
                     (data[31 /* X32 */] <0.17879875f ? 
                         (data[17 /* X18 */] <-0.17538008f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46875f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.58333f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.17113952f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.45545337f ? 
                     (data[2 /* X3 */] <0.20540084f ? 
                         (data[12 /* X13 */] <0.2412259f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13492748f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19863866f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21175408f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.29853994f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10017909f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24581458f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[18 /* X19 */] <0.08158903f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.031414878f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13549173f ? 
                                     (data[12 /* X13 */] <0.10374469f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19233927f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11605983f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2993553f ? 
                                 (data[23 /* X24 */] <0.08870075f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.38145313f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.05696287f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104305856f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20395021f ? 
                 (data[8 /* X9 */] <-0.21323495f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.015522416f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.43927488f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13286349f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.034478817f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11422946f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20532037f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14411736f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.10711514f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.057601772f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1367607f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.084226325f ? 
             (data[27 /* X28 */] <-0.3032444f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20979588f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46843246f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36427775f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.25825578f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14076047f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657772f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3046875f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19681582f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37345925f ? 
                             (data[14 /* X15 */] <0.13292697f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3055622f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[10 /* X11 */] <-0.468897f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.05977703f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.23934695f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.122766726f ? 
                            1.0f : 
                            0.0f) : 
                         (data[27 /* X28 */] <-0.51831836f ? 
                             (data[15 /* X16 */] <0.22741528f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[4 /* X5 */] <0.16909286f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2195251f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.171875f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657772f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.23444046f ? 
                     (data[10 /* X11 */] <-0.5953584f ? 
                         (data[20 /* X21 */] <0.14110166f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.33293533f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29843193f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                         (data[13 /* X14 */] <0.08333465f ? 
                             (data[33 /* X34 */] <-0.3f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1760582f ? 
                             (data[34 /* X35 */] <-0.5f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23128316f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25460956f ? 
                         (data[15 /* X16 */] <0.13045876f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.12571177f ? 
                                1.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.68648714f ? 
                                     (data[1 /* X2 */] <-0.32722437f ? 
                                         (data[4 /* X5 */] <0.21532018f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30771062f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.58703494f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0299429f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.09771944f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.375f ? 
                         (data[15 /* X16 */] <0.15251836f ? 
                             (data[9 /* X10 */] <-0.15090029f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04763062f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.327547f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44746244f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016443873f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29256114f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30118442f ? 
                     (data[23 /* X24 */] <0.06929746f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1760237f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.05562013f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14386036f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[13 /* X14 */] <0.10948745f ? 
             (data[15 /* X16 */] <0.042774454f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25225475f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.07012703f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.09458644f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25961685f ? 
                         (data[17 /* X18 */] <-0.48449782f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.322833f ? 
                                 (data[4 /* X5 */] <0.20667212f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
             (data[28 /* X29 */] <0.2756903f ? 
                 (data[33 /* X34 */] <-0.2578125f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.15176451f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.03248213f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6778758f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09874569f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.16720396f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09701645f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.16252397f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.14508805f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.86697596f ? 
             (data[35 /* X36 */] <-0.9771484f ? 
                 (data[2 /* X3 */] <0.062578745f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.2442111f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0625f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.102167785f ? 
                             (data[25 /* X26 */] <-0.30082372f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222344f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42102453f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.35983118f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2031901f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.26594234f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16110812f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1896149f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (data[17 /* X18 */] <-0.8645963f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1344696f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.31015626f ? 
                             (data[28 /* X29 */] <0.2110271f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.359375f ? 
                        0.0f : 
                        1.0f))) : 
             (data[33 /* X34 */] <-0.2109375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.49106446f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24459657f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                     (data[25 /* X26 */] <-0.42649642f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.034462947f ? 
                             (data[13 /* X14 */] <0.115455866f ? 
                                1.0f : 
                                 (data[28 /* X29 */] <0.11084857f ? 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20136859f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[1 /* X2 */] <-0.18214935f ? 
                                         (data[33 /* X34 */] <-0.4f ? 
                                            1.0f : 
                                             (data[18 /* X19 */] <0.09464138f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f))) : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19957669f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.119746014f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.5f ? 
                                        0.0f : 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32090303f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20580967f ? 
                     (data[33 /* X34 */] <-0.1875f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4169552f ? 
                             (data[19 /* X20 */] <-0.6062925f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2795683f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (data[11 /* X12 */] <-0.519799f ? 
             (data[35 /* X36 */] <0.44345704f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32344106f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25453383f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.65625f ? 
                     (data[25 /* X26 */] <-0.6352188f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.46814623f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2795683f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[5 /* X6 */] <0.23677924f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X10 */] <0.015328147f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31510538f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.8999279f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[25 /* X26 */] <-0.12262116f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[10 /* X11 */] <-0.326628f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.15019532f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.6826716f ? 
             (data[31 /* X32 */] <0.08259052f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2844125f ? 
                 (data[1 /* X2 */] <-0.3250312f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.198631f ? 
                         (data[29 /* X30 */] <0.11102564f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14273377f ? 
                                1.0f : 
                                0.0f) : 
                             (data[30 /* X31 */] <0.14610377f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21296288f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.5260654f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24678195f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18025313f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14306189f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.15388852f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.042217635f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3516732f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.13320324f ? 
             (data[0 /* X1 */] <-0.34149745f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.013762659f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07075401f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[18 /* X19 */] <-0.09053498f ? 
             (data[27 /* X28 */] <-0.63563144f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.78439236f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.050586484f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.19768274f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14453176f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33465952f ? 
             (data[22 /* X23 */] <0.09759948f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.46879274f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.734375f ? 
             (data[0 /* X1 */] <0.3389044f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.54006594f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.65843093f ? 
                     (data[22 /* X23 */] <0.12724079f ? 
                        0.0f : 
                        1.0f) : 
                     (data[18 /* X19 */] <0.10617818f ? 
                         (data[33 /* X34 */] <-0.2930564f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.33679742f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.5f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23688175f ? 
             (data[33 /* X34 */] <-0.40234375f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5213061f ? 
                         (data[34 /* X35 */] <-0.53125f ? 
                             (data[28 /* X29 */] <0.2110271f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.5280945f ? 
                     (data[6 /* X7 */] <0.17531298f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32578057f ? 
                            1.0f : 
                             (data[8 /* X9 */] <-0.13090111f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[2 /* X3 */] <-0.30852303f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.90478516f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.50710607f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.265625f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4875f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49147657f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (data[14 /* X15 */] <0.10090636f ? 
             (data[27 /* X28 */] <0.0047023767f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20073448f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0989486f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.18930131f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25352493f ? 
                         (data[3 /* X4 */] <-0.70942736f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.6f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17463551f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27154985f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[12 /* X13 */] <0.1612312f ? 
            0.0f : 
             (data[11 /* X12 */] <0.8074021f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[31 /* X32 */] <0.05205545f ? 
                 (data[23 /* X24 */] <0.048508223f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.04396001f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21126938f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29848355f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.13163066f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[27 /* X28 */] <-0.28369224f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5839872f ? 
                             (data[11 /* X12 */] <-0.26293865f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20743553f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.26326483f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.7383232f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.8911908f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13691974f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.7265625f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.53542656f ? 
            0.0f : 
             (data[26 /* X27 */] <0.22449453f ? 
                 (data[3 /* X4 */] <-0.66715676f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14436978f ? 
                         (data[11 /* X12 */] <-0.21145934f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                                 (data[11 /* X12 */] <-0.13413532f ? 
                                    1.0f : 
                                     (data[35 /* X36 */] <-0.5125f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                         (data[14 /* X15 */] <0.12321482f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X2 */] <-0.46791303f ? 
                     (data[5 /* X6 */] <0.14517784f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50553876f ? 
                         (data[27 /* X28 */] <-0.19673038f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-9.9124416E-5f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.5859375f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.037027385f ? 
                 (data[26 /* X27 */] <-0.02922575f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.360381f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.25290507f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0053462046f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.23306322f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37183526f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.22611299f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[17 /* X18 */] <-0.6137364f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.6045243f ? 
                 (data[13 /* X14 */] <0.18032135f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37247387f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23970097f ? 
                                0.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[22 /* X23 */] <0.16656977f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.13423556f ? 
            1.0f : 
             (data[21 /* X22 */] <0.15071708f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[30 /* X31 */] <0.16656576f ? 
                 (data[21 /* X22 */] <0.114337094f ? 
                     (data[25 /* X26 */] <-0.11955171f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30090022f ? 
                         (data[11 /* X12 */] <-0.46885592f ? 
                             (data[2 /* X3 */] <-0.30000773f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.14745238f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X4 */] <-0.15145569f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9468252f ? 
                         (data[25 /* X26 */] <-0.47560754f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.093641154f ? 
                                 (data[11 /* X12 */] <7.741058E-4f ? 
                                    1.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21230023f ? 
                                         (data[34 /* X35 */] <-0.9138672f ? 
                                            0.0f : 
                                             (data[22 /* X23 */] <0.14806202f ? 
                                                 (data[8 /* X9 */] <0.1286112f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                1.0f)) : 
                                         (data[26 /* X27 */] <-0.039171636f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (data[23 /* X24 */] <0.06652556f ? 
                                     (data[10 /* X11 */] <0.117040604f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09022429f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.08779913f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0840545f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15129444f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.3515625f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2673505f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.14096919f ? 
                 (data[26 /* X27 */] <0.1384779f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21387888f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.34234878f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13959554f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5605469f ? 
             (data[3 /* X4 */] <-0.24445097f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38574314f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2964132f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.20983045f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28748557f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.17963202f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.02809291f ? 
                     (data[11 /* X12 */] <-0.35797688f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <0.0030439978f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
                 (data[33 /* X34 */] <-0.234375f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11053516f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31977546f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.12423146f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3673625f ? 
                             (data[31 /* X32 */] <0.10964009f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17520526f ? 
                                     (data[19 /* X20 */] <-0.3393512f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[16 /* X17 */] <0.04414071f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (data[3 /* X4 */] <-0.4811662f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6694764f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18796326f ? 
             (data[31 /* X32 */] <0.016067686f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11341281f ? 
                 (data[27 /* X28 */] <-0.20548353f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.39796492f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.009504258f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[32 /* X33 */] <-0.3087647f ? 
                         (data[23 /* X24 */] <0.116435185f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[28 /* X29 */] <0.108234f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3980362f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41368374f ? 
                    1.0f : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.088784486f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08695267f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[9 /* X10 */] <-0.13983569f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08024715f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24692789f ? 
                     (data[11 /* X12 */] <-0.5350598f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4280246f ? 
                             (data[8 /* X9 */] <-0.15426253f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[11 /* X12 */] <-0.15646327f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3515625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.051973097f ? 
                 (data[33 /* X34 */] <-0.84375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4789175f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.203125f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[9 /* X10 */] <-0.17210744f ? 
             (data[33 /* X34 */] <-0.19921875f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.08149999f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23249885f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.235691f ? 
                             (data[23 /* X24 */] <0.086816564f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33253527f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61922514f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35477495f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                             (data[4 /* X5 */] <0.13439538f ? 
                                 (data[0 /* X1 */] <0.119165406f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.4f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[5 /* X6 */] <0.22954161f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26203963f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                                     (data[15 /* X16 */] <0.16946946f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.17649123f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (data[6 /* X7 */] <0.088886395f ? 
             (data[19 /* X20 */] <-0.032368712f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6059318f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14693227f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                         (data[31 /* X32 */] <0.16201474f ? 
                             (data[11 /* X12 */] <-0.057021398f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6406242f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23532163f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28889075f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.15015136f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19301832f ? 
             (data[21 /* X22 */] <0.14378756f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.19273908f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.4130509f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42655325f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.009092432f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.09765625f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18016754f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.65325034f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.03614314f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20046084f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.14021175f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3942841f ? 
                             (data[3 /* X4 */] <-0.53358173f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.18828125f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27706054f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[13 /* X14 */] <0.16392462f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19154164f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24937443f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10998608f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (data[8 /* X9 */] <-0.017275224f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.08149999f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.35733116f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23789139f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16982745f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38241547f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.71435547f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.5859375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39962354f ? 
                 (data[33 /* X34 */] <-0.578125f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.310948f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4841777f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.004714558f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.16717476f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.59838545f ? 
                         (data[33 /* X34 */] <0.11230469f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[2 /* X3 */] <0.36969745f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16544232f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[25 /* X26 */] <-0.3804547f ? 
            0.0f : 
             (data[23 /* X24 */] <0.043310914f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0392675f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07407829f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.234375f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16868176f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18585826f ? 
                                 (data[8 /* X9 */] <0.024177153f ? 
                                     (data[24 /* X25 */] <-0.37472305f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[5 /* X6 */] <0.14625883f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23479295f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26250976f ? 
                                    1.0f : 
                                     (data[16 /* X17 */] <-0.10744433f ? 
                                        0.0f : 
                                         (data[5 /* X6 */] <0.23926584f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04865605f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5549372f ? 
                 (data[11 /* X12 */] <-0.51175535f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.82014424f ? 
                         (data[4 /* X5 */] <0.31621656f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[24 /* X25 */] <0.086802796f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4453125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.07424523f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.013828653f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.15122956f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2012837f ? 
         (data[16 /* X17 */] <-0.24135318f ? 
             (data[33 /* X34 */] <-0.28125f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23733608f ? 
                     (data[35 /* X36 */] <-0.37539062f ? 
                         (data[33 /* X34 */] <-0.38232422f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059897203f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.296181f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.3910928f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.12116621f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5697791f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38867044f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24314262f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5370086f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.1379151f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[10 /* X11 */] <-0.08529757f ? 
                                 (data[6 /* X7 */] <0.10906192f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13150759f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29492188f ? 
             (data[20 /* X21 */] <0.07983383f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.43648914f ? 
                     (data[3 /* X4 */] <-0.16836393f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.04380673f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.49207598f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16615722f ? 
             (data[20 /* X21 */] <0.18566006f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18882945f ? 
                     (data[21 /* X22 */] <0.050157823f ? 
                        1.0f : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.07277568f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.17382053f ? 
                     (data[9 /* X10 */] <-0.14659962f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.3375f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30490884f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16001874f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.007481685f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.13914637f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20032056f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <-0.077555194f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[23 /* X24 */] <0.07492788f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.1674972f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19157486f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.34234878f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.18176149f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[29 /* X30 */] <0.08340325f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27521247f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55378973f ? 
             (data[33 /* X34 */] <-0.734375f ? 
                 (data[8 /* X9 */] <0.35812747f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.6045243f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.76599586f ? 
                         (data[31 /* X32 */] <0.25598612f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40291503f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26210347f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1945314f ? 
                                    0.0f : 
                                     (data[20 /* X21 */] <0.17823367f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36000773f ? 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21923435f ? 
                                        0.0f : 
                                         (data[30 /* X31 */] <0.27230725f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                             (data[28 /* X29 */] <0.3759378f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.32421875f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22481188f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22464868f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20223118f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22414097f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.41375f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2517856f ? 
                                     (data[2 /* X3 */] <-0.5714116f ? 
                                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18353724f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38976395f ? 
                                            0.0f : 
                                             (data[10 /* X11 */] <-0.28763574f ? 
                                                1.0f : 
                                                0.0f))) : 
                                     (data[10 /* X11 */] <0.049594548f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f) : 
                         (data[24 /* X25 */] <0.31903374f ? 
                            1.0f : 
                             (data[29 /* X30 */] <0.177267f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.15454504f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14552467f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[21 /* X22 */] <0.22174467f ? 
                 (data[28 /* X29 */] <0.10396604f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22646579f ? 
                        1.0f : 
                         (data[2 /* X3 */] <0.2766112f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06409884f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.17357744f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08663404f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11065681f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3076191f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.40316877f ? 
                 (data[8 /* X9 */] <-0.06825757f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32242528f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3825535f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.4665781f ? 
                         (data[11 /* X12 */] <-0.38305706f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13607281f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.03723483f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.009051617f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28723148f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.05096491f ? 
         (data[3 /* X4 */] <-0.107071586f ? 
            0.0f : 
             (data[23 /* X24 */] <0.047642004f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.9389236f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.5233187f ? 
             (data[22 /* X23 */] <0.18796936f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7938477f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.33220136f ? 
                     (data[15 /* X16 */] <0.039371f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.0892463f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28613824f ? 
                                0.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27212343f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.266966f ? 
                                        0.0f : 
                                         (data[6 /* X7 */] <0.24195518f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.32961687f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.18070143f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[19 /* X20 */] <-0.05739446f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (data[3 /* X4 */] <-0.48962033f ? 
             (data[10 /* X11 */] <-0.015743822f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3239509f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X2 */] <-0.7481813f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (data[34 /* X35 */] <-0.953125f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                             (data[7 /* X8 */] <0.09193559f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[34 /* X35 */] <-0.6479492f ? 
                             (data[19 /* X20 */] <-0.44466788f ? 
                                 (data[14 /* X15 */] <0.1912025f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (data[31 /* X32 */] <0.061256867f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[21 /* X22 */] <0.23170586f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.096875f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.1344696f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.8665603f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35104287f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[18 /* X19 */] <-0.09053498f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11530667f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.116784416f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09528401f ? 
                     (data[30 /* X31 */] <0.109606735f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36350492f ? 
            0.0f : 
             (data[24 /* X25 */] <0.10329256f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.59992015f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.19515872f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.3519073f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21658397f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29182595f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.37832937f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                         (data[33 /* X34 */] <-0.6875f ? 
                             (data[13 /* X14 */] <0.12504192f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.095713094f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[18 /* X19 */] <-0.04135669f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18146683f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27254096f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.34701303f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (data[3 /* X4 */] <-0.33110565f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15418684f ? 
                 (data[24 /* X25 */] <-0.18253013f ? 
                     (data[21 /* X22 */] <0.16977327f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.054808673f ? 
                             (data[34 /* X35 */] <-0.4994873f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21296288f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11705887f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.13968176f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.62936944f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                         (data[1 /* X2 */] <-0.43478042f ? 
                             (data[27 /* X28 */] <-0.30290243f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.009236584f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28097615f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22650528f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.03241074f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.05977703f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0044474467f ? 
             (data[14 /* X15 */] <0.09665713f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5978048f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20006281f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.18619166f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09779597f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.4250789f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.11835607f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.58417577f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25915673f ? 
             (data[16 /* X17 */] <-0.26657137f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0066392417f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1637578f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.10369266f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.077977225f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21104825f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17877927f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.11434081f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.15129444f ? 
                            1.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3199931f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18666397f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.300838f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29072565f ? 
                     (data[3 /* X4 */] <-0.67561084f ? 
                         (data[20 /* X21 */] <0.184962f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.11058984f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35771537f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3515625f ? 
                     (data[15 /* X16 */] <0.09069081f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17940657f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.014367993f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[19 /* X20 */] <-0.40438896f ? 
                             (data[30 /* X31 */] <0.19906892f ? 
                                 (data[34 /* X35 */] <-0.793333f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[6 /* X7 */] <0.09534236f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.1418727f ? 
                                     (data[30 /* X31 */] <0.25519595f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2541201f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.60897887f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16281757f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[30 /* X31 */] <0.13700955f ? 
             (data[27 /* X28 */] <-0.39993837f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.11492957f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.017626625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.0945867f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.14341012f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.55439454f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5953299f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19822124f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18343215f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16893512f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.1940329f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3070408f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2889652f ? 
                     (data[17 /* X18 */] <-0.35647276f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1638476f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <0.09872174f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.060622793f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41354248f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33368582f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.20762214f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.119782336f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.42198738f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14313346f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.46870115f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.34869957f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.47222114f ? 
                 (data[6 /* X7 */] <0.24848752f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49673462f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.51783097f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.15757771f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[11 /* X12 */] <0.7537778f ? 
                         (data[11 /* X12 */] <-0.16225156f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32080406f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2547957f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.43921208f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.070071705f ? 
                                    0.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18980625f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19763753f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.70929384f ? 
                                     (data[3 /* X4 */] <-0.08211347f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5814916f ? 
             (data[22 /* X23 */] <0.067958154f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6439073f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                         (data[6 /* X7 */] <0.094102345f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10876652f ? 
                                0.0f : 
                                1.0f) : 
                             (data[22 /* X23 */] <0.13751723f ? 
                                 (data[14 /* X15 */] <0.09908672f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21211876f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.15522632f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29756838f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[17 /* X18 */] <-0.47135147f ? 
            1.0f : 
             (data[12 /* X13 */] <0.08985869f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09779597f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.105491824f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1980375f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0025973588f ? 
                            0.0f : 
                             (data[2 /* X3 */] <-0.22203416f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.32961687f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1955711f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12566048f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[0 /* X1 */] <-0.019421378f ? 
                     (data[2 /* X3 */] <-0.32131964f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3002671f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30708727f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37972495f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.07743492f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47395465f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45355588f ? 
                 (data[2 /* X3 */] <-0.2744906f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.012121065f ? 
                 (data[33 /* X34 */] <-0.3125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[30 /* X31 */] <0.036404736f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.31906575f ? 
                 (data[32 /* X33 */] <0.2602977f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.10016979f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28687948f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09874569f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.17769788f ? 
                         (data[16 /* X17 */] <-0.31528893f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.14438044f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[29 /* X30 */] <0.11166515f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.014505668f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.5945854f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.19321844f ? 
                 (data[31 /* X32 */] <0.07713783f ? 
                     (data[29 /* X30 */] <0.12443859f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.008196721f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.68552595f ? 
             (data[1 /* X2 */] <-0.7426858f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.59838545f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.29104295f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15719098f ? 
                            0.0f : 
                             (data[26 /* X27 */] <-0.02875102f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19214325f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18446094f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114216134f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[2 /* X3 */] <-0.23974122f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1223132f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.029118828f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20802024f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13935602f ? 
                            1.0f : 
                             (data[3 /* X4 */] <0.06349035f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[26 /* X27 */] <0.2398756f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2108964f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11542183f ? 
                     (data[0 /* X1 */] <0.17877927f ? 
                         (data[3 /* X4 */] <-0.08643164f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.31046954f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2717494f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                     (data[32 /* X33 */] <-0.20951742f ? 
                         (data[31 /* X32 */] <0.04818159f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.10174691f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2739353f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08425957f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.5505859f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5692715f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26966357f ? 
                 (data[25 /* X26 */] <-0.56155205f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18182951f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5234375f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1639959f ? 
                            0.0f : 
                             (data[19 /* X20 */] <0.031673007f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36273205f ? 
                     (data[3 /* X4 */] <0.23743363f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18744864f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26517642f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2951995f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.1717323f ? 
                 (data[3 /* X4 */] <-0.09227688f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.114734404f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.112536944f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.32636088f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[19 /* X20 */] <-0.28262618f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05144309f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.39112166f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1663139f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <0.04466349f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43908605f ? 
             (data[15 /* X16 */] <0.041228764f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.620064f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <1.0674627f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23151724f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6308893f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.122082785f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[3 /* X4 */] <-0.100731f ? 
                                 (data[10 /* X11 */] <-0.08529757f ? 
                                    1.0f : 
                                     (data[3 /* X4 */] <-0.78644276f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[20 /* X21 */] <0.22743358f ? 
             (data[27 /* X28 */] <0.31753722f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14511575f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.17127185f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
             (data[0 /* X1 */] <-0.1335176f ? 
                 (data[30 /* X31 */] <0.13246243f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21399589f ? 
                     (data[27 /* X28 */] <-0.4010053f ? 
                         (data[6 /* X7 */] <0.154158f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.24093041f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.0184307f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17520526f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[18 /* X19 */] <-0.10129273f ? 
             (data[28 /* X29 */] <0.12709934f ? 
                 (data[3 /* X4 */] <7.183925E-4f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19086511f ? 
             (data[5 /* X6 */] <0.16006307f ? 
                 (data[25 /* X26 */] <-0.26074627f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13047527f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.06405137f ? 
                         (data[30 /* X31 */] <0.10972688f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.07969208f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.09354853f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15502615f ? 
             (data[31 /* X32 */] <0.047693297f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.3662725f ? 
             (data[6 /* X7 */] <0.30963865f ? 
                 (data[19 /* X20 */] <-0.6746962f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3730363f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3846009f ? 
                     (data[8 /* X9 */] <-0.23505843f ? 
                         (data[31 /* X32 */] <0.0989486f ? 
                            0.0f : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.22703192f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                 (data[25 /* X26 */] <-0.50507426f ? 
                                     (data[4 /* X5 */] <0.24281049f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[16 /* X17 */] <-0.37669083f ? 
                                 (data[9 /* X10 */] <-0.15090029f ? 
                                     (data[18 /* X19 */] <0.09634252f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.3744903f ? 
             (data[20 /* X21 */] <0.09296009f ? 
                 (data[5 /* X6 */] <0.1612081f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.112835936f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.16477312f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08242021f ? 
                     (data[26 /* X27 */] <0.009236584f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11607325f ? 
                     (data[31 /* X32 */] <0.07277568f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.23057805f ? 
                             (data[4 /* X5 */] <0.22474131f ? 
                                0.0f : 
                                1.0f) : 
                             (data[23 /* X24 */] <0.063840285f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18717876f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18546979f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63332075f ? 
                                 (data[2 /* X3 */] <-0.2520523f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.66f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.2571031f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35428992f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04865605f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5326112f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12052729f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.13366161f ? 
                         (data[5 /* X6 */] <0.13601771f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15251836f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.13258265f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2650833f ? 
                     (data[19 /* X20 */] <0.20120493f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2702601f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.27618712f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[0 /* X1 */] <0.08151414f ? 
             (data[3 /* X4 */] <0.017626625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.2371039f ? 
         (data[0 /* X1 */] <0.055821463f ? 
             (data[33 /* X34 */] <-0.62109375f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.46649745f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21279922f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34560046f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63004243f ? 
                             (data[30 /* X31 */] <0.117002256f ? 
                                 (data[32 /* X33 */] <-0.1409095f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.24232958f ? 
                     (data[27 /* X28 */] <-0.34234878f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.736275f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31269464f ? 
                 (data[4 /* X5 */] <0.08171277f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35471022f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.06994462f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39606592f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32396564f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25812465f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2605297f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.090980604f ? 
                     (data[27 /* X28 */] <-0.24458788f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[0 /* X1 */] <0.24636854f ? 
                 (data[25 /* X26 */] <-0.3221352f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.20608267f ? 
             (data[21 /* X22 */] <0.049372837f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.07743492f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5790997f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20821221f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.6f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3585815f ? 
                 (data[13 /* X14 */] <0.12522832f ? 
                     (data[7 /* X8 */] <0.08789632f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.189862f ? 
                     (data[32 /* X33 */] <-0.34523788f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.86697596f ? 
             (data[18 /* X19 */] <-0.10282955f ? 
                 (data[33 /* X34 */] <0.0546875f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10650025f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34510025f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.23599684f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.2972295f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.71281993f ? 
             (data[33 /* X34 */] <-0.8203125f ? 
                 (data[2 /* X3 */] <-0.103777215f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.15671006f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <-0.57996875f ? 
                     (data[27 /* X28 */] <0.009590421f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55878127f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18225697f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24485892f ? 
                                0.0f : 
                                 (data[26 /* X27 */] <0.49222183f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[29 /* X30 */] <0.20602687f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[15 /* X16 */] <0.058231343f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.11377118f ? 
             (data[27 /* X28 */] <-0.3912292f ? 
                 (data[4 /* X5 */] <0.14840777f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.038113605f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.077798136f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3655441f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.119101144f ? 
             (data[30 /* X31 */] <0.04265701f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0016601563f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22372039f ? 
             (data[27 /* X28 */] <-0.4107814f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.026409963f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47374475f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <0.43203208f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <-0.14216706f ? 
                     (data[26 /* X27 */] <0.06350459f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.25741392f ? 
                            1.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21839759f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.29489237f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                     (data[16 /* X17 */] <-0.43048966f ? 
                         (data[32 /* X33 */] <-0.1846575f ? 
                             (data[34 /* X35 */] <-0.04762f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49893394f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[0 /* X1 */] <-0.07998269f ? 
             (data[33 /* X34 */] <-0.4140625f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.42017227f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.09751918f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0075168936f ? 
             (data[35 /* X36 */] <-0.49345702f ? 
                 (data[2 /* X3 */] <0.3121127f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.38305706f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2364699f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.21072747f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24414062f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.101718545f ? 
                 (data[32 /* X33 */] <-0.32137817f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1764519f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27840766f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24954894f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.22471273f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40234375f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3499408f ? 
                     (data[18 /* X19 */] <-0.32872793f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.20803979f ? 
                             (data[27 /* X28 */] <0.12299305f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.6726282f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[28 /* X29 */] <0.06820267f ? 
             (data[2 /* X3 */] <0.08497282f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[25 /* X26 */] <-0.11341281f ? 
                 (data[31 /* X32 */] <0.122940436f ? 
                     (data[12 /* X13 */] <0.1098953f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.51831836f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.12995905f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.245998f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.08877789f ? 
                        0.0f : 
                        1.0f))) : 
             (data[17 /* X18 */] <-0.29498833f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.2822735f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.31625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23675841f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.07555717f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.17665389f ? 
             (data[29 /* X30 */] <0.11044122f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.71875f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46164703f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[16 /* X17 */] <0.1453258f ? 
            1.0f : 
            0.0f) : 
         (data[13 /* X14 */] <0.14621614f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                 (data[33 /* X34 */] <-0.734375f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33328995f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.8482811f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.015362109f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3789158f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3595251f ? 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                        0.0f : 
                                         (data[16 /* X17 */] <-0.16149557f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[5 /* X6 */] <0.39470005f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[25 /* X26 */] <0.049895927f ? 
                                    1.0f : 
                                    0.0f))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21245895f ? 
             (data[15 /* X16 */] <0.05977703f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.109375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49808562f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21885753f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.13920009f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.03028184f ? 
                                 (data[3 /* X4 */] <0.007481685f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08917069f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25453383f ? 
                     (data[30 /* X31 */] <0.24614018f ? 
                         (data[19 /* X20 */] <-0.42455488f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X9 */] <-0.012024176f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33676392f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30289134f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.5511356f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.40171078f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30251524f ? 
                 (data[11 /* X12 */] <-0.68263036f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.374375f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.310948f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X3 */] <-0.030196695f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.2371039f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20967537f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.227282f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15308803f ? 
                     (data[10 /* X11 */] <-0.3239871f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.736275f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.42067096f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.40010843f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.76290673f ? 
                         (data[23 /* X24 */] <0.09701645f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25735927f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16635142f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.058816787f ? 
                                         (data[3 /* X4 */] <-0.15483734f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4f ? 
                                0.0f : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16090761f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21387888f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29104933f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6464242f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18360452f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.57416147f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.30153084f ? 
                         (data[28 /* X29 */] <0.16390976f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19863471f ? 
                                1.0f : 
                                0.0f) : 
                             (data[31 /* X32 */] <0.14257012f ? 
                                 (data[35 /* X36 */] <-0.65875f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.46493277f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1207154f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3628086f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19555861f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22209941f ? 
                     (data[34 /* X35 */] <-0.890625f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20364027f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32882044f ? 
                                 (data[31 /* X32 */] <0.02304713f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (data[19 /* X20 */] <-0.19295059f ? 
             (data[11 /* X12 */] <-0.11493563f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.021642853f ? 
                     (data[7 /* X8 */] <0.057601772f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.120810464f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.5742815f ? 
            1.0f : 
             (data[12 /* X13 */] <0.13967575f ? 
                 (data[15 /* X16 */] <0.05977703f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.17095514f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04665033f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16390976f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.023067156f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (data[31 /* X32 */] <0.08586214f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.050006304f ? 
                         (data[19 /* X20 */] <0.07650036f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21700494f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12196353f ? 
                                 (data[31 /* X32 */] <0.116551235f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.0889807f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.1070314E-4f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.088365756f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20875861f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.37250608f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21357927f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25115526f ? 
                         (data[2 /* X3 */] <-0.21628866f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.25f ? 
                                 (data[33 /* X34 */] <-0.4f ? 
                                    1.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17476836f ? 
                                        0.0f : 
                                         (data[1 /* X2 */] <0.1695598f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                             (data[23 /* X24 */] <0.044350374f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32742226f ? 
                                     (data[4 /* X5 */] <0.16435234f ? 
                                         (data[9 /* X10 */] <-0.44595647f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                     (data[3 /* X4 */] <-0.07609959f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14944129f ? 
                             (data[32 /* X33 */] <0.0499995f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0725f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16978152f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22111577f ? 
                                 (data[34 /* X35 */] <-0.8f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[19 /* X20 */] <-0.8519619f ? 
             (data[23 /* X24 */] <0.20962483f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.12522832f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.4695691f ? 
             (data[11 /* X12 */] <-0.43995738f ? 
                 (data[27 /* X28 */] <-0.13705091f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.6129102f ? 
                     (data[20 /* X21 */] <0.2710637f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39781624f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.17118894f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X13 */] <0.13477197f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3047881f ? 
             (data[14 /* X15 */] <0.10303097f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09779597f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2617191f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8359375f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25807735f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26539698f ? 
                             (data[1 /* X2 */] <-0.3662041f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2190821f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27999148f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09424705f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18697758f ? 
                                 (data[12 /* X13 */] <0.115533635f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <-0.9f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2661028f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.41639864f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2718159f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2795467f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.15147395f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[27 /* X28 */] <0.2051122f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[28 /* X29 */] <0.07050332f ? 
             (data[30 /* X31 */] <0.089849375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1742717f ? 
             (data[13 /* X14 */] <0.11866962f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21875f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18670894f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28861278f ? 
                             (data[29 /* X30 */] <0.1451645f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23140721f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.12778734f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5436782f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3211919f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[30 /* X31 */] <0.14269343f ? 
             (data[21 /* X22 */] <0.12992851f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12719479f ? 
                    1.0f : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.08357472f ? 
                 (data[5 /* X6 */] <0.33754078f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.008196721f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13018888f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.67703134f ? 
             (data[30 /* X31 */] <0.1896018f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42299306f ? 
                 (data[33 /* X34 */] <-0.49995422f ? 
                     (data[9 /* X10 */] <-0.34898183f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.04906611f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05907806f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.13367525f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0291426f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19432218f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <0.14946392f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[18 /* X19 */] <-0.17088768f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37215844f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21302092f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[29 /* X30 */] <0.104813784f ? 
             (data[6 /* X7 */] <0.16906528f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.14748365f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4375f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3133679f ? 
                 (data[33 /* X34 */] <-0.734375f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.6160793f ? 
                         (data[9 /* X10 */] <0.011684314f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.16656977f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33949125f ? 
                             (data[2 /* X3 */] <-0.20103148f ? 
                                 (data[2 /* X3 */] <-0.3235819f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.13810657f ? 
                                        0.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23761252f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3259628f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.36078683f ? 
                                         (data[4 /* X5 */] <0.14277095f ? 
                                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5609384f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.2081072f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27406347f ? 
             (data[14 /* X15 */] <0.09771944f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.09910118f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19491597f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.032191068f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6046875f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.57011855f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.34375f ? 
                             (data[5 /* X6 */] <0.13250676f ? 
                                 (data[2 /* X3 */] <-0.006223813f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[8 /* X9 */] <0.054641362f ? 
             (data[14 /* X15 */] <0.074348666f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26852766f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2035259f ? 
                 (data[6 /* X7 */] <0.12116621f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2757986f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24982189f ? 
                         (data[19 /* X20 */] <-0.29931f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6309704f ? 
                                 (data[12 /* X13 */] <0.115533635f ? 
                                     (data[0 /* X1 */] <0.18343034f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01602901f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13108617f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0021408855f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (data[9 /* X10 */] <-0.28650174f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.37972495f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30879837f ? 
                 (data[32 /* X33 */] <-0.5600144f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006294766f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.16720396f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6664189f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18666397f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2546875f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.0702245f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.11866962f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.17382053f ? 
                     (data[23 /* X24 */] <0.10048132f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19678153f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.16455062f ? 
                         (data[4 /* X5 */] <0.18069766f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-9.911199E-4f ? 
                                 (data[19 /* X20 */] <-0.027871998f ? 
                                    0.0f : 
                                     (data[34 /* X35 */] <0.114284f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[1 /* X2 */] <-0.18214935f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[13 /* X14 */] <0.13649333f ? 
                             (data[6 /* X7 */] <0.13849975f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06667377f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26187685f ? 
                 (data[18 /* X19 */] <-0.096682265f ? 
                     (data[35 /* X36 */] <-0.37539062f ? 
                         (data[13 /* X14 */] <0.1986857f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28225183f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.11342267f ? 
                 (data[13 /* X14 */] <0.097218856f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X7 */] <0.16281757f ? 
                     (data[4 /* X5 */] <0.12140815f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6985428f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
                 (data[18 /* X19 */] <0.08158903f ? 
                     (data[20 /* X21 */] <0.1314818f ? 
                         (data[17 /* X18 */] <0.005961594f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.1309424f ? 
                             (data[23 /* X24 */] <0.06652556f ? 
                                1.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2409085f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.2035569f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.05228678f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33358818f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.16783175f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.21581697f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
             (data[24 /* X25 */] <-0.3199449f ? 
                 (data[7 /* X8 */] <0.05255268f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.114734404f ? 
                         (data[4 /* X5 */] <0.11293822f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                     (data[14 /* X15 */] <0.14021175f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10727392f ? 
                             (data[34 /* X35 */] <0.0f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0625f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17502779f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49443877f ? 
                                    0.0f : 
                                     (data[27 /* X28 */] <-0.7529445f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26968223f ? 
                         (data[32 /* X33 */] <-0.5227275f ? 
                             (data[25 /* X26 */] <-0.1524335f ? 
                                1.0f : 
                                0.0f) : 
                             (data[26 /* X27 */] <-0.07216542f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23965937f ? 
                             (data[0 /* X1 */] <-0.010108367f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1774015f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)))) : 
             (data[35 /* X36 */] <-0.53916013f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.5154617f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14478992f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27724943f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6370806f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.34506315f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.005961594f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (data[24 /* X25 */] <-0.51782215f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.37109375f ? 
                 (data[34 /* X35 */] <-0.90625f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3718763f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43477857f ? 
                             (data[17 /* X18 */] <-0.4859787f ? 
                                 (data[28 /* X29 */] <0.111564554f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40974975f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.017626625f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15174846f ? 
                         (data[8 /* X9 */] <-0.12322349f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.240002f ? 
                                 (data[33 /* X34 */] <-0.19970703f ? 
                                     (data[12 /* X13 */] <0.115533635f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4015625f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28760308f ? 
                                0.0f : 
                                1.0f) : 
                             (data[23 /* X24 */] <0.13688484f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[30 /* X31 */] <0.10972688f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X9 */] <-0.48776656f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <1.0776379f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.16519207f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <1.0165275f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27267233f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.092623435f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.18435897f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.053284507f ? 
                 (data[8 /* X9 */] <-0.016572531f ? 
                     (data[34 /* X35 */] <-0.71875f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29642728f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.12646376f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.14566152f ? 
                 (data[17 /* X18 */] <-0.18844229f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20422608f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24921875f ? 
                         (data[3 /* X4 */] <-0.57416147f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0016454111f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.15829247f ? 
                                     (data[34 /* X35 */] <-0.857143f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (data[34 /* X35 */] <0.3095225f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
        0.007936508f : 
         (data[17 /* X18 */] <-0.24806605f ? 
             (data[29 /* X30 */] <0.23670264f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.14258298f ? 
                 (data[34 /* X35 */] <-0.6484375f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.09008377f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.9296875f ? 
                     (data[21 /* X22 */] <0.22867419f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (data[26 /* X27 */] <0.039762337f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14752787f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17525558f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.864528f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4100916f ? 
                 (data[3 /* X4 */] <-0.083822764f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5604991f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.428572f ? 
                                    0.0f : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5498202f ? 
                                            0.0f : 
                                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.043855507f ? 
                                                0.0f : 
                                                1.0f)) : 
                                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50553876f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[26 /* X27 */] <0.06350459f ? 
            0.0f : 
             (data[13 /* X14 */] <0.11998136f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1953125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <0.09917514f ? 
                     (data[14 /* X15 */] <0.1487102f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41414872f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2332538f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[2 /* X3 */] <-0.042993307f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21881235f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24328482f ? 
                     (data[15 /* X16 */] <0.053594276f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                             (data[29 /* X30 */] <0.08956949f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (data[21 /* X22 */] <0.15674174f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.14032736f ? 
                    1.0f : 
                     (data[25 /* X26 */] <0.27362671f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1799126f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23640761f ? 
                 (data[19 /* X20 */] <-0.96666324f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45306635f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.3036248f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37619376f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3806956f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.9654662f ? 
                     (data[27 /* X28 */] <-0.96176594f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1854934f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4014109f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.16909654f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[21 /* X22 */] <0.097013295f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21544181f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.46333376f ? 
                 (data[3 /* X4 */] <-0.8108767f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29623702f ? 
             (data[1 /* X2 */] <-0.41295847f ? 
                 (data[21 /* X22 */] <0.11747423f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.022686105f ? 
                            1.0f : 
                             (data[11 /* X12 */] <-0.37969425f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.20549622f ? 
                     (data[23 /* X24 */] <0.0892699f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1578125f ? 
                             (data[32 /* X33 */] <-0.5704548f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.37669083f ? 
                                     (data[18 /* X19 */] <0.313028f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7367188f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84523624f ? 
                            0.0f : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.22703192f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[8 /* X9 */] <0.20937736f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (data[5 /* X6 */] <0.18525346f ? 
             (data[29 /* X30 */] <0.16733252f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.103043586f ? 
                     (data[22 /* X23 */] <0.12590685f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X9 */] <-0.04131943f ? 
                         (data[21 /* X22 */] <0.14666413f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.11229662f ? 
                             (data[33 /* X34 */] <0.05f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[30 /* X31 */] <0.1239366f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6458329f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.08661901f ? 
                 (data[24 /* X25 */] <0.10329256f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.14446098f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7450276f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.008196721f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[25 /* X26 */] <-0.5431354f ? 
             (data[15 /* X16 */] <0.11233045f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <-0.12006058f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15347551f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.078125f ? 
                         (data[29 /* X30 */] <0.13625014f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5953177f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.37074143f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.12386921f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[5 /* X6 */] <0.1680782f ? 
                 (data[21 /* X22 */] <0.10725235f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.32544148f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.18270405f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28620794f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.37832937f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30628836f ? 
                             (data[24 /* X25 */] <-0.012519069f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8190768f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16116144f ? 
                                         (data[11 /* X12 */] <0.0116176875f ? 
                                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.20121661f ? 
                                                1.0f : 
                                                 (data[23 /* X24 */] <0.14083692f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07677961f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[33 /* X34 */] <0.48046875f ? 
            0.0f : 
             (data[15 /* X16 */] <0.218983f ? 
                 (data[8 /* X9 */] <0.013045661f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2289347f ? 
             (data[3 /* X4 */] <-0.32476506f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3359375f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.07031302f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19329286f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.29921874f ? 
                        0.0f : 
                        1.0f))) : 
             (data[21 /* X22 */] <0.16121766f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20893076f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2740006f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21314369f ? 
             (data[35 /* X36 */] <-0.21162109f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19268213f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07969208f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.27770278f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.23174334f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.32265761f ? 
                 (data[4 /* X5 */] <0.16516946f ? 
                     (data[6 /* X7 */] <0.10867079f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.57416147f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.10143752f ? 
            1.0f : 
             (data[12 /* X13 */] <0.07932047f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.5772519f ? 
                     (data[26 /* X27 */] <0.37554562f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2970561f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21505982f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.38415706f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[15 /* X16 */] <0.12511975f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[28 /* X29 */] <0.2255672f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3146652f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42441407f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27564487f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.026896812f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.00996151f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31692764f ? 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (data[24 /* X25 */] <-0.2981153f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2655903f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24394357f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6192314f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[28 /* X29 */] <0.10685361f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.7638672f ? 
                 (data[22 /* X23 */] <0.19550318f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.81640625f ? 
             (data[32 /* X33 */] <0.32368544f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13924505f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5720919f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.43927488f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16783726f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3757328f ? 
                     (data[1 /* X2 */] <-0.7666863f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29983914f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.38720748f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[24 /* X25 */] <-0.008915109f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.3219258f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.093551576f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16711186f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2570656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45405796f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05859375f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19612198f ? 
                     (data[32 /* X33 */] <-0.42755905f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4121941f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23851383f ? 
                         (data[23 /* X24 */] <0.08824259f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20212634f ? 
                                 (data[34 /* X35 */] <-0.44423828f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[15 /* X16 */] <0.16735698f ? 
                                 (data[24 /* X25 */] <-0.10193417f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05977703f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.25426173f ? 
                         (data[2 /* X3 */] <-0.103777215f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19518948f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35244253f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22519636f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2783022f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32955664f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20788562f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.5485451f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[29 /* X30 */] <0.12793715f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                         (data[8 /* X9 */] <0.21270502f ? 
                             (data[26 /* X27 */] <0.23173541f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
            1.0f) : 
         (data[11 /* X12 */] <0.8503015f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3945306f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.43899128f ? 
             (data[5 /* X6 */] <0.09136203f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5078125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.58096516f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21357927f ? 
                     (data[0 /* X1 */] <-0.3373822f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.50016314f ? 
                             (data[0 /* X1 */] <0.010663289f ? 
                                0.0f : 
                                1.0f) : 
                             (data[0 /* X1 */] <-0.10535187f ? 
                                 (data[14 /* X15 */] <0.22021577f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11679293f ? 
                                    0.0f : 
                                     (data[17 /* X18 */] <-0.096205615f ? 
                                        1.0f : 
                                        0.0f))))) : 
                     (data[31 /* X32 */] <0.10331075f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1428575f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14805308f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35479146f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08789632f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.04735916f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4267831f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (data[11 /* X12 */] <-0.46885592f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17662132f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.94220906f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11998686f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.14282925f ? 
                                 (data[17 /* X18 */] <0.3005133f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[23 /* X24 */] <0.13946114f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21573831f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16390684f ? 
                    1.0f : 
                     (data[32 /* X33 */] <0.47869477f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07114159f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.8286133f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08392916f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.1609345f ? 
                         (data[32 /* X33 */] <0.18750125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.63213164f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33729413f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45007184f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2936779f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.05974334f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (data[25 /* X26 */] <-0.49709368f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.6807555f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.37361187f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33690962f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.13681236f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.27663386f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6519556f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19230045f ? 
             (data[5 /* X6 */] <0.09365206f ? 
                 (data[34 /* X35 */] <-0.140625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.20951742f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1637578f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14333883f ? 
                                 (data[14 /* X15 */] <0.13681236f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.16524345f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16001874f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20310856f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.1085882f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23340827f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14100698f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.0178694f ? 
                             (data[31 /* X32 */] <0.17620681f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23990883f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2846019f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07493893f ? 
             (data[3 /* X4 */] <-0.33744624f ? 
                 (data[22 /* X23 */] <0.13013263f ? 
                     (data[16 /* X17 */] <-0.22874409f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.1062179f ? 
                 (data[13 /* X14 */] <0.090026565f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.31244165f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.108805254f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.16038452f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[32 /* X33 */] <-0.34481406f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.39161333f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16092674f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18361741f ? 
                 (data[20 /* X21 */] <0.116965845f ? 
                     (data[24 /* X25 */] <-0.22127466f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26224807f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053506132f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15325682f ? 
                                0.0f : 
                                1.0f) : 
                             (data[11 /* X12 */] <-0.47873345f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[14 /* X15 */] <0.13048032f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22702827f ? 
                         (data[16 /* X17 */] <-0.26236835f ? 
                            1.0f : 
                            0.0f) : 
                         (data[34 /* X35 */] <-0.0625f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[7 /* X8 */] <0.0338373f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2356037f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1663139f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.18221067f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.12543005f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.340932f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27571464f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12109375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11503518f ? 
            1.0f : 
             (data[24 /* X25 */] <0.18172717f ? 
                 (data[2 /* X3 */] <0.113765195f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7615937f ? 
             (data[13 /* X14 */] <0.14621614f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18566006f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.077798136f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.8676119f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[20 /* X21 */] <0.08540363f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6840231f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.004353939f ? 
             (data[19 /* X20 */] <-0.49117407f ? 
                 (data[7 /* X8 */] <0.18130448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <0.024193194f ? 
                 (data[11 /* X12 */] <-0.20073448f ? 
                    0.0f : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.046875f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.20917961f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28057662f ? 
                             (data[19 /* X20 */] <-0.6596808f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.18094605f ? 
                             (data[21 /* X22 */] <0.09015751f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[24 /* X25 */] <-0.21825796f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009961757f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.59992015f ? 
             (data[7 /* X8 */] <0.07401132f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5751806f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4138109f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17420559f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36604533f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04574022f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22772762f ? 
                                     (data[7 /* X8 */] <0.124249764f ? 
                                         (data[21 /* X22 */] <0.11470802f ? 
                                            0.0f : 
                                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27240545f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f) : 
                                    1.0f)))) : 
                     (data[30 /* X31 */] <0.27796996f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22650528f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.09458469f ? 
             (data[26 /* X27 */] <0.06689634f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27739003f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16855991f ? 
                     (data[14 /* X15 */] <0.10278157f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.035104726f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.397526f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[13 /* X14 */] <0.16720396f ? 
                        0.0f : 
                        1.0f))) : 
             (data[27 /* X28 */] <-0.6307434f ? 
                 (data[9 /* X10 */] <0.23642027f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3007502f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8801611f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.24809481f ? 
                     (data[25 /* X26 */] <-0.1318295f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.08055466f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X13 */] <0.12626347f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.21437041f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10196867f ? 
             (data[2 /* X3 */] <0.0657779f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5912677f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43182784f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19679967f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.40101302f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[20 /* X21 */] <0.20608267f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[1 /* X2 */] <-0.23160845f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17266387f ? 
                 (data[2 /* X3 */] <-0.10567017f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.16867308f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[35 /* X36 */] <-0.8274733f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.3325727f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.083679974f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26412916f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1934608f ? 
                     (data[13 /* X14 */] <0.1055262f ? 
                         (data[0 /* X1 */] <-0.12743612f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.26892278f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25737342f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4657552f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23340827f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.2631522f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.82137716f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17930135f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12169933f ? 
             (data[35 /* X36 */] <-0.97333986f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (data[3 /* X4 */] <-0.6587026f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.31599632f ? 
                 (data[17 /* X18 */] <-0.14289537f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
                     (data[35 /* X36 */] <-0.878125f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.05002248f ? 
                            1.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26992378f ? 
                                0.0f : 
                                 (data[26 /* X27 */] <0.188321f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[8 /* X9 */] <-0.14668183f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.2060366f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[16 /* X17 */] <-0.026998531f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2096322f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19970098f ? 
            0.0f : 
             (data[31 /* X32 */] <0.084771596f ? 
                 (data[26 /* X27 */] <-0.03824792f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1749704f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18870266f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1061477f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22176664f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
                 (data[8 /* X9 */] <-0.24617353f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23021848f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                     (data[13 /* X14 */] <0.1337749f ? 
                         (data[25 /* X26 */] <-0.18094064f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[16 /* X17 */] <0.28402588f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.73046875f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45694762f ? 
                 (data[27 /* X28 */] <-0.35212487f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.017632423f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                             (data[26 /* X27 */] <-0.0969252f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <0.4430468f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                 (data[3 /* X4 */] <-0.07536865f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2234883f ? 
         (data[2 /* X3 */] <-0.23974122f ? 
             (data[35 /* X36 */] <-0.4477539f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5756662f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16072334f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.23635769f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.078325294f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[16 /* X17 */] <-0.61122006f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2009561f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.5280945f ? 
                     (data[13 /* X14 */] <0.2721431f ? 
                        1.0f : 
                         (data[10 /* X11 */] <0.015871517f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <-0.09158044f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.14291105f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.09318225f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24013175f ? 
             (data[2 /* X3 */] <-0.23606785f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1750744f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (data[14 /* X15 */] <0.0716929f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6376953f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.21953629f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5332031f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.012434511f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0596507f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31183857f ? 
                         (data[22 /* X23 */] <0.13302447f ? 
                             (data[3 /* X4 */] <-0.26305002f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
             (data[33 /* X34 */] <-0.35546875f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.121604584f ? 
                     (data[25 /* X26 */] <-0.40194082f ? 
                         (data[31 /* X32 */] <0.15129444f ? 
                            1.0f : 
                            0.0f) : 
                         (data[21 /* X22 */] <0.12473138f ? 
                             (data[10 /* X11 */] <-0.22018969f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21385708f ? 
                     (data[32 /* X33 */] <-0.3139208f ? 
                         (data[14 /* X15 */] <0.08922098f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.14298715f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.011458238f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[13 /* X14 */] <0.06947941f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3694479f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.63096523f ? 
                     (data[28 /* X29 */] <0.08381084f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11557856f ? 
                            0.0f : 
                            1.0f) : 
                         (data[31 /* X32 */] <0.09651829f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25613075f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.25623825f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[33 /* X34 */] <-0.35546875f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.9390625f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.44815367f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.074869186f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8438525f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2086212f ? 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.102224f ? 
                                        0.0f : 
                                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13681236f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17350975f ? 
                                        0.0f : 
                                         (data[29 /* X30 */] <0.21247992f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2617191f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25380504f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27690855f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.18172435f ? 
            1.0f : 
             (data[14 /* X15 */] <0.1338379f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.39071846f ? 
             (data[33 /* X34 */] <-0.0078125f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.44060928f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.3410196f ? 
                 (data[3 /* X4 */] <0.076805435f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.7558594f ? 
             (data[17 /* X18 */] <-0.24644804f ? 
                 (data[15 /* X16 */] <0.05099487f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[9 /* X10 */] <-0.5247918f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15418684f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.66796875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.50553876f ? 
                     (data[9 /* X10 */] <-0.31900522f ? 
                         (data[16 /* X17 */] <-0.026998531f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16995636f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.18016754f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.5247187f ? 
                            1.0f : 
                             (data[12 /* X13 */] <0.09914109f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35996547f ? 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30717397f ? 
                                        0.0f : 
                                         (data[24 /* X25 */] <-0.05792772f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[31 /* X32 */] <0.18798243f ? 
                                        1.0f : 
                                        0.0f)))))))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25501555f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18695328f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31875795f ? 
                         (data[32 /* X33 */] <-0.38454095f ? 
                             (data[6 /* X7 */] <0.20196986f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28097615f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.12658691f ? 
                             (data[10 /* X11 */] <-0.5331045f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3827366f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29911587f ? 
                                     (data[29 /* X30 */] <0.12386094f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05977703f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20453475f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22189401f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.048377734f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[9 /* X10 */] <0.1713564f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23213387f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.38106188f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10411094f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.17474702f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25371304f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.230954f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f) : 
             (data[29 /* X30 */] <0.14677842f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3504402f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30309188f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21484375f ? 
             (data[22 /* X23 */] <0.16700354f ? 
                 (data[21 /* X22 */] <0.10567519f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.039861627f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.066914536f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13686249f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58753f ? 
             (data[15 /* X16 */] <0.033500317f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7332014f ? 
                     (data[17 /* X18 */] <-0.74479526f ? 
                         (data[3 /* X4 */] <-0.2698133f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3638525f ? 
                             (data[23 /* X24 */] <0.08870075f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26391932f ? 
                                     (data[34 /* X35 */] <-0.653334f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (data[21 /* X22 */] <0.27189633f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[26 /* X27 */] <0.45070755f ? 
                        1.0f : 
                        0.0f))) : 
             (data[28 /* X29 */] <0.10685361f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.012433636f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
             (data[32 /* X33 */] <-0.31019208f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17580031f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16747044f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12075936f ? 
                     (data[17 /* X18 */] <-0.22703192f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.17901513f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6652336f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.8322089f ? 
                 (data[31 /* X32 */] <0.24944288f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.07713783f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.5859375f ? 
             (data[26 /* X27 */] <-0.05520667f ? 
                 (data[5 /* X6 */] <0.18510383f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4654471f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3011698f ? 
                     (data[21 /* X22 */] <0.09252577f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24147724f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27836815f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[33 /* X34 */] <0.09375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36744103f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23356678f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22451437f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.09955172f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18640691f ? 
                     (data[25 /* X26 */] <-0.15884303f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09375f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34250778f ? 
                        1.0f : 
                        0.0f))) : 
             (data[33 /* X34 */] <-0.453125f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12730259f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.05859375f ? 
             (data[5 /* X6 */] <0.1680782f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.040196836f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.18527216f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1646875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30245018f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49808562f ? 
                     (data[1 /* X2 */] <-0.5051119f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3125f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.31017086f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2750915f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.11341282f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[31 /* X32 */] <0.13146009f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30593175f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49147657f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[26 /* X27 */] <0.41989675f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0263403f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19612198f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18075265f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13875325f ? 
            0.0f : 
             (data[28 /* X29 */] <0.28538415f ? 
                 (data[6 /* X7 */] <0.13366161f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.41058236f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.30145076f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1912025f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44951442f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.55859375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6572541f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.22601101f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07407829f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26171875f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21368381f ? 
                     (data[3 /* X4 */] <-0.62488616f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.111375675f ? 
                             (data[1 /* X2 */] <-0.53085953f ? 
                                 (data[31 /* X32 */] <0.058816787f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[1 /* X2 */] <-0.42185044f ? 
                                 (data[27 /* X28 */] <-0.25240877f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.168679f ? 
                 (data[0 /* X1 */] <-0.041443672f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27588156f ? 
             (data[28 /* X29 */] <0.08660788f ? 
                 (data[12 /* X13 */] <0.08411057f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.23437622f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X6 */] <0.14975792f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.140625f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.1611238f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25176102f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[3 /* X4 */] <-0.7939685f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.079060405f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5472753f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.18435897f ? 
                 (data[23 /* X24 */] <0.100876495f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.29175234f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.159051f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.041220646f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25975034f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.044793844f ? 
                         (data[35 /* X36 */] <-0.8875f ? 
                            1.0f : 
                            0.0f) : 
                         (data[25 /* X26 */] <0.13828184f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25837123f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08017409f ? 
             (data[31 /* X32 */] <0.105491824f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.103043586f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[23 /* X24 */] <0.13946114f ? 
             (data[29 /* X30 */] <0.15106052f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.109853975f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.19086511f ? 
                 (data[23 /* X24 */] <0.07969208f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.119871244f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17951714f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.043810662f ? 
                        1.0f : 
                        0.0f))) : 
             (data[19 /* X20 */] <0.2665451f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19140884f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51645446f ? 
             (data[17 /* X18 */] <-0.42442918f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.08142452f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <7.183925E-4f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.098322436f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1061477f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.17633021f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12568147f ? 
         (data[21 /* X22 */] <0.119967334f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39900222f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06856375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32723612f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4921875f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                     (data[13 /* X14 */] <0.09214088f ? 
                         (data[23 /* X24 */] <0.11169845f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.39814427f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3575369f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[31 /* X32 */] <0.11465235f ? 
                                    0.0f : 
                                     (data[27 /* X28 */] <-0.32560724f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17877927f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                             (data[24 /* X25 */] <-0.21103424f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8190768f ? 
                                     (data[24 /* X25 */] <0.014470537f ? 
                                         (data[7 /* X8 */] <0.2325602f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22304395f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10604086f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4453125f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19365081f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.3055934f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08951295f ? 
                 (data[13 /* X14 */] <0.13572223f ? 
                     (data[23 /* X24 */] <0.10697658f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3648675f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.49030563f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.3991723f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[0 /* X1 */] <0.17694409f ? 
             (data[34 /* X35 */] <-0.515625f ? 
                 (data[27 /* X28 */] <-0.30773196f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.557106f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20992279f ? 
                 (data[20 /* X21 */] <0.12624885f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12533134f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18225579f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.39621758f ? 
                 (data[20 /* X21 */] <0.07827501f ? 
                     (data[26 /* X27 */] <0.1720406f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3287606f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5790506f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.25371304f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17553464f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07580961f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[31 /* X32 */] <0.020429838f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.841604f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31979945f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36178532f ? 
                 (data[20 /* X21 */] <0.18481657f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375f ? 
                         (data[9 /* X10 */] <-0.22864038f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.3712627f ? 
                                1.0f : 
                                 (data[31 /* X32 */] <0.08673456f ? 
                                    1.0f : 
                                     (data[11 /* X12 */] <-0.12566048f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.423929f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21933725f ? 
                 (data[17 /* X18 */] <-0.43125257f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[31 /* X32 */] <0.12730259f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
                 (data[26 /* X27 */] <-0.114787586f ? 
                     (data[27 /* X28 */] <-0.28369224f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31034905f ? 
                         (data[18 /* X19 */] <0.30289134f ? 
                             (data[9 /* X10 */] <-0.15751578f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.515625f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3271779f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.1505935f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36044112f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22451437f ? 
                 (data[8 /* X9 */] <-0.2465115f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27135336f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.59838545f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.5179556f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28638527f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21839759f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30526176f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[20 /* X21 */] <0.16895066f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.0077221673f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.6469635f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19944832f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6544221f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[24 /* X25 */] <-0.30070683f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22279209f ? 
                 (data[26 /* X27 */] <-0.21193157f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.3305846f ? 
                         (data[26 /* X27 */] <0.29979023f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14420907f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.245998f ? 
                     (data[34 /* X35 */] <-0.890625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.6307434f ? 
                 (data[17 /* X18 */] <0.018905679f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.16430241f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98972464f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[17 /* X18 */] <-0.557106f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.23204073f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15638804f ? 
                             (data[33 /* X34 */] <-0.3f ? 
                                1.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1568297f ? 
                                    0.0f : 
                                     (data[9 /* X10 */] <-0.4274102f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14047274f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.1311549f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0044474467f ? 
             (data[30 /* X31 */] <0.19043809f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.039342698f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.60825956f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32309166f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.52404076f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X3 */] <0.03698552f ? 
                 (data[20 /* X21 */] <0.15964434f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.76015204f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16917157f ? 
             (data[11 /* X12 */] <-0.28653336f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25448158f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27695528f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10094668f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[32 /* X33 */] <-0.32883555f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.11262493f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0050299643f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2f ? 
                                 (data[26 /* X27 */] <-0.07216542f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.18908106f ? 
                                         (data[22 /* X23 */] <0.13344534f ? 
                                            0.0f : 
                                             (data[19 /* X20 */] <-0.28692326f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[16 /* X17 */] <-0.37585023f ? 
                 (data[8 /* X9 */] <0.064924054f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.055698022f ? 
                    1.0f : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.49562165f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.647455f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21907489f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[7 /* X8 */] <0.092945404f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3074704f ? 
                 (data[17 /* X18 */] <-0.058758825f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.50781274f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07990239f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15747154f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15038876f ? 
                     (data[20 /* X21 */] <0.09283003f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3193353f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[35 /* X36 */] <-0.9542969f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08276106f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.13514268f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04745408f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.5168006f ? 
                                 (data[8 /* X9 */] <0.041317753f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37117937f ? 
             (data[18 /* X19 */] <-0.035209406f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30263522f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.21105509f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.13753055f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20862652f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0392675f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16357295f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.1662076f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[32 /* X33 */] <0.19318125f ? 
                     (data[19 /* X20 */] <-0.31599385f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.23819481f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.1578545f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[2 /* X3 */] <-0.37410566f ? 
             (data[35 /* X36 */] <-0.29921874f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18374468f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.5720869f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.31014755f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21352346f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.95335054f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.3218837f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34608358f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <0.04639892f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17203549f ? 
                                 (data[24 /* X25 */] <-0.1319615f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[30 /* X31 */] <0.111170344f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.4040956f ? 
             (data[11 /* X12 */] <-0.59219176f ? 
                 (data[24 /* X25 */] <-0.017632423f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.49317196f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.0032261705f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.12024322f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2508061f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40023038f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.12754257f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <0.40198797f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.649946f ? 
             (data[1 /* X2 */] <-0.2371039f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.018411912f ? 
                     (data[28 /* X29 */] <0.11237517f ? 
                         (data[27 /* X28 */] <-0.1657983f ? 
                            1.0f : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.4375f ? 
                             (data[35 /* X36 */] <-0.07375f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26159543f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30708727f ? 
                         (data[4 /* X5 */] <0.08430363f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.11053684f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14636724f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19975501f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20091392f ? 
            0.0f : 
             (data[12 /* X13 */] <0.18278666f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11681312f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.94220906f ? 
                 (data[22 /* X23 */] <0.042406477f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.46569747f ? 
                         (data[25 /* X26 */] <-0.20549622f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.16444519f ? 
                                 (data[16 /* X17 */] <-0.23435466f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[31 /* X32 */] <0.07785019f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19243667f ? 
                                 (data[25 /* X26 */] <-0.54436314f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[4 /* X5 */] <0.15513606f ? 
                                     (data[11 /* X12 */] <-0.18808825f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[31 /* X32 */] <0.12619886f ? 
                                         (data[27 /* X28 */] <-0.1757137f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3368585f ? 
                                            0.0f : 
                                             (data[7 /* X8 */] <0.10809267f ? 
                                                1.0f : 
                                                0.0f)))))))) : 
                1.0f) : 
             (data[4 /* X5 */] <0.17716853f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.19015436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.39639494f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12948367f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2699473f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12778734f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.6045243f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1585689f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                     (data[22 /* X23 */] <0.08962915f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4977908f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3539357f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                 (data[9 /* X10 */] <-0.5049677f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.209375f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[33 /* X34 */] <-0.58125f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17531298f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28606588f ? 
                                 (data[23 /* X24 */] <0.08870075f ? 
                                    1.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14839254f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22519636f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.453125f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09022429f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.43033358f ? 
                 (data[27 /* X28 */] <-0.9637414f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.11141654f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27938384f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.41092718f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[22 /* X23 */] <0.15341167f ? 
                     (data[24 /* X25 */] <-0.3008862f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13577871f ? 
                             (data[24 /* X25 */] <-0.578996f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14730549f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3348144f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10350723f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[18 /* X19 */] <-0.020347893f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24742557f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.065146156f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.22981319f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <1.5672368E-4f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5814916f ? 
                 (data[25 /* X26 */] <-0.63370806f ? 
                     (data[2 /* X3 */] <0.15080522f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.026263457f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.098700605f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32814598f ? 
                     (data[16 /* X17 */] <-0.46690035f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06843124f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.10967371f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29879317f ? 
             (data[19 /* X20 */] <-0.30348098f ? 
                 (data[20 /* X21 */] <0.08540363f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.22611299f ? 
                     (data[4 /* X5 */] <0.12140815f ? 
                         (data[24 /* X25 */] <-0.14955059f ? 
                             (data[32 /* X33 */] <-0.09090625f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.11640625f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.21095596f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18916759f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6419584f ? 
                             (data[2 /* X3 */] <-0.5286248f ? 
                                 (data[32 /* X33 */] <0.09772675f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[32 /* X33 */] <-0.37954575f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X2 */] <-0.06841564f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[6 /* X7 */] <0.12220749f ? 
                 (data[21 /* X22 */] <0.19575897f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20155007f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.2356037f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[33 /* X34 */] <-0.28320312f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29984102f ? 
                 (data[33 /* X34 */] <-0.7004004f ? 
                     (data[21 /* X22 */] <0.25985703f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.24490075f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[22 /* X23 */] <0.025665047f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.15333714f ? 
                 (data[34 /* X35 */] <-0.859375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.5124409f ? 
                     (data[30 /* X31 */] <0.1688393f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.1218459f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10800253f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2708756f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.31054688f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.6328125f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.15761115f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20242853f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.15978885f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[22 /* X23 */] <0.17206426f ? 
             (data[12 /* X13 */] <0.20194706f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.54245174f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2550995f ? 
             (data[11 /* X12 */] <-0.49566805f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28985426f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.036153354f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.73994124f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.76953125f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15409786f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7110152f ? 
                     (data[9 /* X10 */] <-0.091283955f ? 
                         (data[0 /* X1 */] <-0.14428413f ? 
                             (data[3 /* X4 */] <-0.26305002f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.266959f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5481327f ? 
                                    0.0f : 
                                     (data[24 /* X25 */] <-0.5936075f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[16 /* X17 */] <-0.37669083f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.1625652f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[2 /* X3 */] <-0.36610776f ? 
             (data[30 /* X31 */] <0.08585456f ? 
                 (data[6 /* X7 */] <0.16281757f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.8171875f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18710315f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18214935f ? 
                         (data[5 /* X6 */] <0.09937715f ? 
                             (data[16 /* X17 */] <-0.914679f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13275881f ? 
                                 (data[27 /* X28 */] <-0.25240877f ? 
                                     (data[5 /* X6 */] <0.20663056f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[31 /* X32 */] <0.04026908f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19097854f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23458576f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[31 /* X32 */] <0.043764815f ? 
                         (data[21 /* X22 */] <0.13185477f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5609375f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.21270502f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.31691143f ? 
             (data[11 /* X12 */] <-0.52784264f ? 
                 (data[25 /* X26 */] <-0.08885724f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2026917f ? 
                     (data[25 /* X26 */] <-0.6474966f ? 
                         (data[5 /* X6 */] <0.13601771f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22435082f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.16177629f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                    0.0f : 
                    1.0f))) : 
         (data[22 /* X23 */] <0.13121708f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.076974936f ? 
             (data[3 /* X4 */] <-0.57416147f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.08926489f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25640222f ? 
                         (data[28 /* X29 */] <0.10501309f ? 
                             (data[35 /* X36 */] <-0.56125f ? 
                                1.0f : 
                                0.0f) : 
                             (data[13 /* X14 */] <0.092844576f ? 
                                 (data[3 /* X4 */] <-0.14457081f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[27 /* X28 */] <-0.3939872f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
             (data[32 /* X33 */] <-0.50035536f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09378219f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.73166454f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32662684f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                     (data[7 /* X8 */] <0.047503594f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.042133246f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.26305002f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.43294874f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.09008378f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[7 /* X8 */] <0.06265087f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0703125f ? 
                     (data[21 /* X22 */] <0.28411037f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06595979f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19619894f ? 
             (data[3 /* X4 */] <-0.6604054f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29256877f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30708727f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.08252767f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.82694745f ? 
             (data[31 /* X32 */] <0.016067686f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19056183f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.20922513f ? 
                         (data[27 /* X28 */] <-0.37872922f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14126627f ? 
                                 (data[17 /* X18 */] <-0.40747038f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0851835f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[29 /* X30 */] <0.100531675f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (data[4 /* X5 */] <0.14611211f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.050502896f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.5369965f ? 
                        0.0f : 
                        1.0f))) : 
             (data[33 /* X34 */] <-0.1784375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <9.80021E-4f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.8644748f ? 
             (data[33 /* X34 */] <0.33203125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.38208255f ? 
             (data[4 /* X5 */] <0.11717318f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14677842f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <0.2118247f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06773428f ? 
             (data[9 /* X10 */] <-0.10264926f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21658397f ? 
                     (data[25 /* X26 */] <-0.61066324f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25448158f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.14411736f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[21 /* X22 */] <0.12516609f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09493308f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.34243566f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.17036822f ? 
                 (data[3 /* X4 */] <-0.306584f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.15870112f ? 
                     (data[21 /* X22 */] <0.1877394f ? 
                         (data[24 /* X25 */] <-0.14955059f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26105973f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2843076f ? 
                             (data[32 /* X33 */] <0.2619005f ? 
                                 (data[16 /* X17 */] <-0.17267011f ? 
                                    1.0f : 
                                     (data[22 /* X23 */] <0.20173396f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4344899f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[11 /* X12 */] <-0.47153714f ? 
             (data[4 /* X5 */] <0.13975966f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5217356f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.59920144f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.14633562f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08883666f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.2330279f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[28 /* X29 */] <0.08522749f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46537572f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31701487f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11833849f ? 
                     (data[35 /* X36 */] <-0.5125f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1843873f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <-0.017897418f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06797255f ? 
                                 (data[6 /* X7 */] <0.14865611f ? 
                                    1.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2735747f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[2 /* X3 */] <-0.32117617f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.00834617f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[4 /* X5 */] <0.158841f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.118190855f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38817093f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11261713f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[28 /* X29 */] <0.07050332f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28998545f ? 
             (data[29 /* X30 */] <0.10791683f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6655812f ? 
                     (data[33 /* X34 */] <-0.25f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.25435877f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5881129f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.06117002f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.12177026f ? 
                                         (data[16 /* X17 */] <-0.2928298f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11945313f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.43898562f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05894836f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.10295366f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[31 /* X32 */] <0.08531687f ? 
             (data[20 /* X21 */] <0.12717715f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.018592468f ? 
                     (data[25 /* X26 */] <-0.3068275f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.11851652f ? 
                 (data[8 /* X9 */] <-0.14572158f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.008196721f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12726176f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.1472571f ? 
                     (data[2 /* X3 */] <-0.052590765f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.11206497f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.12386921f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[4 /* X5 */] <0.1277606f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022285722f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13699682f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.21442656f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33293533f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                     (data[33 /* X34 */] <-0.4375f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16836393f ? 
                             (data[29 /* X30 */] <0.12209005f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3095093f ? 
                             (data[6 /* X7 */] <0.10867079f ? 
                                 (data[5 /* X6 */] <0.095713094f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22748983f ? 
                                    0.0f : 
                                     (data[35 /* X36 */] <-0.85638326f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)) : 
                     (data[32 /* X33 */] <0.17506899f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.15340795f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.23137295f ? 
                             (data[10 /* X11 */] <-0.42252785f ? 
                                0.0f : 
                                1.0f) : 
                             (data[35 /* X36 */] <-0.805f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.1330468f ? 
                                     (data[26 /* X27 */] <0.010094553f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (data[25 /* X26 */] <-0.08271834f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0906901f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.23978806f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.170645f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12818965f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.2421875f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21054354f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20973979f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.46306843f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4259565f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07646759f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14941622f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.38978556f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8192634f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47051463f ? 
                             (data[2 /* X3 */] <-0.11913315f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.21438245f ? 
                                    0.0f : 
                                     (data[32 /* X33 */] <-0.5704548f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[2 /* X3 */] <0.0037143289f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09687357f ? 
                     (data[33 /* X34 */] <-0.625f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                             (data[21 /* X22 */] <0.110872336f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24952713f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4678412f ? 
                         (data[26 /* X27 */] <-0.26210344f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.03894258f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22083047f ? 
                     (data[27 /* X28 */] <-0.20548353f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18916759f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.10567519f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.029513935f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[28 /* X29 */] <0.28538415f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20003103f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.5975542f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13207586f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (data[10 /* X11 */] <-1.0643193f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.40124792f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22556323f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06461511f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.23454429f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[24 /* X25 */] <-0.06710173f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (data[19 /* X20 */] <-0.68720907f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
             (data[4 /* X5 */] <0.11364405f ? 
                 (data[27 /* X28 */] <-0.34234878f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.16385886f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22611727f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.101332046f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (data[19 /* X20 */] <-0.9103553f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2583387f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.15071708f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.250533f ? 
             (data[2 /* X3 */] <-0.2893281f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5913559f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.41728806f ? 
                 (data[0 /* X1 */] <-0.10751056f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21658397f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.04763062f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36604533f ? 
                             (data[14 /* X15 */] <0.17890655f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (data[5 /* X6 */] <0.1680782f ? 
                 (data[2 /* X3 */] <-0.3853027f ? 
                     (data[21 /* X22 */] <0.10767489f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.26414007f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98972464f ? 
                         (data[30 /* X31 */] <0.13142522f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.5331045f ? 
                                 (data[9 /* X10 */] <-0.327934f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.21894673f ? 
                         (data[25 /* X26 */] <0.04442161f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.14242016f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07203299f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16209005f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.578851f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.053223502f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5600144f ? 
                 (data[31 /* X32 */] <0.14693227f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36152962f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.4381686f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1028346f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.109375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14837731f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.009849252f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024487516f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17143852f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.052152853f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27614504f ? 
                             (data[3 /* X4 */] <-0.8693175f ? 
                                 (data[28 /* X29 */] <0.31934497f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20340948f ? 
                                    0.0f : 
                                     (data[26 /* X27 */] <0.17577863f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f) : 
                     (data[29 /* X30 */] <0.22043063f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17801414f ? 
                                1.0f : 
                                 (data[19 /* X20 */] <-0.32182562f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21306694f ? 
                            1.0f : 
                             (data[21 /* X22 */] <0.27718085f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (data[3 /* X4 */] <-0.48962033f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
                 (data[11 /* X12 */] <-0.4259565f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20223118f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.13473599f ? 
                 (data[15 /* X16 */] <0.089489274f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25590846f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[15 /* X16 */] <0.124013685f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09240596f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.11667187f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[31 /* X32 */] <0.08804321f ? 
             (data[25 /* X26 */] <-0.26074627f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3835977f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.12996204f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31215113f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13136284f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.21583308f ? 
                        1.0f : 
                         (data[32 /* X33 */] <0.39686102f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X13 */] <0.24984808f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1471983f ? 
             (data[10 /* X11 */] <-0.09478217f ? 
                 (data[28 /* X29 */] <0.14158797f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (data[9 /* X10 */] <-0.3519073f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.191238f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24098474f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.01618984f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27065998f ? 
                         (data[33 /* X34 */] <-0.43f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.019926572f ? 
                             (data[9 /* X10 */] <-0.22701705f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[27 /* X28 */] <-0.13705091f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.109375f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45038757f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24459657f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2128613f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20361717f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17463551f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.2009561f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.7545639f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29642728f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18024483f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8292217f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.42666966f ? 
                 (data[22 /* X23 */] <0.11057293f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28349364f ? 
                         (data[21 /* X22 */] <0.097013295f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36886168f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3094265f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5549372f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23021848f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18822835f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[11 /* X12 */] <0.5037284f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.09076885f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.14542387f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.06843606f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.21237434f ? 
             (data[5 /* X6 */] <0.13601771f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21350908f ? 
                     (data[11 /* X12 */] <-0.27580848f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15825847f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.192863f ? 
                     (data[20 /* X21 */] <0.10768284f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.09950272f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16149557f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.37040514f ? 
                             (data[13 /* X14 */] <0.20357573f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10215325f ? 
                                0.0f : 
                                 (data[9 /* X10 */] <-0.26892278f ? 
                                     (data[7 /* X8 */] <0.0858995f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)))) : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7938477f ? 
                 (data[19 /* X20 */] <-0.26594234f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.10331075f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09076956f ? 
                             (data[7 /* X8 */] <0.05962141f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26992378f ? 
                                     (data[12 /* X13 */] <0.13091825f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[18 /* X19 */] <-0.11512413f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47992432f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_11_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.63042843f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.103946194f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.15671006f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.17243649f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21015358f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.26732892f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37294504f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20610745f ? 
                     (data[15 /* X16 */] <0.11542183f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.17746735f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[3 /* X4 */] <0.102167785f ? 
             (data[7 /* X8 */] <0.1346004f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.33730468f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.17665389f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18740536f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3062483f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.41609684f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08804982f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06132272f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <-0.44043577f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.5155713f ? 
             (data[16 /* X17 */] <-0.19511983f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22423276f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.864528f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                     (data[25 /* X26 */] <-0.59838545f ? 
                         (data[9 /* X10 */] <-0.18847062f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10487162f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24485892f ? 
                                    0.0f : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18742454f ? 
                                        0.0f : 
                                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.45f ? 
                                            0.0f : 
                                            1.0f))) : 
                                1.0f))) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3296875f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015743822f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0390625f ? 
                 (data[19 /* X20 */] <-0.23257469f ? 
                     (data[10 /* X11 */] <0.18448666f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.10196867f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17531298f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0032261705f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19838747f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2389551f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.05350746f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.20917961f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28723148f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.17206426f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.4252212f ? 
                         (data[10 /* X11 */] <-0.5742815f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42473152f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.5764026f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3175f ? 
                                    1.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2516052f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0111743f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.092010245f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38472706f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5800781f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (data[20 /* X21 */] <0.11882244f ? 
                     (data[26 /* X27 */] <-0.05859842f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[26 /* X27 */] <0.2873601f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35060665f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[1 /* X2 */] <-0.286563f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0657779f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.021792458f ? 
                     (data[7 /* X8 */] <0.047503594f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.38265833f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.110872336f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23906848f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.06012632f ? 
                 (data[34 /* X35 */] <-0.171875f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16836393f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.22733207f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2702601f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.3126941f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19619894f ? 
             (data[7 /* X8 */] <0.09042086f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                1.0f : 
                0.0f)) : 
         (data[28 /* X29 */] <0.06820267f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18969564f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.4921875f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18710315f ? 
                         (data[13 /* X14 */] <0.114734404f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2099473f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31169268f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (data[35 /* X36 */] <-0.9352539f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16615722f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.81640625f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.026133426f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18702775f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5864211f ? 
             (data[7 /* X8 */] <0.05255268f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29931608f ? 
                     (data[27 /* X28 */] <-0.19297533f ? 
                         (data[20 /* X21 */] <0.18941252f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.35742188f ? 
             (data[9 /* X10 */] <-0.46255338f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.2581281f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.6168021f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.13132566f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.058470864f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08451264f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23849124f ? 
                        1.0f : 
                         (data[33 /* X34 */] <0.15625f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10735131f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4663086f ? 
             (data[2 /* X3 */] <-0.21894673f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2023356f ? 
                     (data[12 /* X13 */] <0.10631417f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.07277568f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12727483f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27329162f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09015644f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.5769749f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98285526f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14112276f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.8877152f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2321465f ? 
                         (data[9 /* X10 */] <-0.7378462f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5684541f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <0.030140111f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.068644464f ? 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0265415f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56152344f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.96571016f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5113916f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.34430972f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20789239f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.14257012f ? 
                                1.0f : 
                                 (data[30 /* X31 */] <0.14610377f ? 
                                     (data[22 /* X23 */] <0.24463487f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19679967f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.51498264f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.093551576f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03515625f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07853445f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                     (data[32 /* X33 */] <-0.3884946f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.29931f ? 
                             (data[3 /* X4 */] <0.007481685f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2686568f ? 
             (data[7 /* X8 */] <0.06138859f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27955484f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29161128f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19641374f ? 
                     (data[19 /* X20 */] <-0.065736376f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18069766f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3016778f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (data[28 /* X29 */] <0.06820267f ? 
                 (data[6 /* X7 */] <0.40023038f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.859375f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1799126f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88352185f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.6705322f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.7026054f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.2758368f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[35 /* X36 */] <-0.9523926f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17838335f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.36190096f ? 
                 (data[7 /* X8 */] <0.1588903f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04662209f ? 
             (data[6 /* X7 */] <0.13366161f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.3969994f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3792949f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4634927f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5996094f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2813803f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17257503f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1811517f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.21875f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.12569061f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.49106446f ? 
             (data[27 /* X28 */] <-0.28369224f ? 
                 (data[5 /* X6 */] <0.1612081f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.33642644f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.005630398f ? 
                             (data[23 /* X24 */] <0.08890281f ? 
                                0.0f : 
                                1.0f) : 
                             (data[10 /* X11 */] <0.049594548f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.037004784f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1475f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[3 /* X4 */] <-0.3218837f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13770047f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.70929384f ? 
                                 (data[27 /* X28 */] <-0.1332201f ? 
                                    0.0f : 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30823514f ? 
                                        0.0f : 
                                         (data[34 /* X35 */] <-0.4866655f ? 
                                            0.0f : 
                                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10729801f ? 
                                                 (data[9 /* X10 */] <-0.37493074f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f)))) : 
                                 (data[7 /* X8 */] <0.13295522f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[8 /* X9 */] <0.13284127f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.40307143f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.48046875f ? 
             (data[5 /* X6 */] <0.11311736f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16906528f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2198477f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14306189f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4480632f ? 
                         (data[22 /* X23 */] <0.17945579f ? 
                             (data[17 /* X18 */] <-0.101716354f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (data[9 /* X10 */] <-0.052240875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[16 /* X17 */] <-0.920422f ? 
            1.0f : 
             (data[14 /* X15 */] <0.14233635f ? 
                 (data[11 /* X12 */] <-0.35088247f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.72302f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.37317097f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.61f ? 
                                 (data[3 /* X4 */] <-0.25164777f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.039861627f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17064434f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19645084f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.0865907f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18384048f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18441994f ? 
             (data[34 /* X35 */] <-0.7109375f ? 
                 (data[7 /* X8 */] <0.10556813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6379184f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3763272f ? 
                     (data[3 /* X4 */] <-0.13454746f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16691566f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23980515f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2882289f ? 
             (data[23 /* X24 */] <0.016458146f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
                     (data[35 /* X36 */] <-0.97007984f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.761905f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35f ? 
                                 (data[22 /* X23 */] <0.20358527f ? 
                                    0.0f : 
                                     (data[5 /* X6 */] <0.15433799f ? 
                                        1.0f : 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23668733f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.63332075f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26991427f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.058816787f ? 
                                        1.0f : 
                                         (data[35 /* X36 */] <-0.62364423f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.035053737f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.09479708f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
             (data[23 /* X24 */] <0.15591928f ? 
                 (data[3 /* X4 */] <-0.48962033f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.118190855f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
            0.0f : 
            1.0f) : 
         (data[13 /* X14 */] <0.11211093f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.44550347f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.40930623f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.097013295f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12949648f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7988281f ? 
             (data[9 /* X10 */] <-0.26892278f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13598424f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15532438f ? 
             (data[17 /* X18 */] <-0.11053516f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2142892f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24502693f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14406356f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[30 /* X31 */] <0.21431041f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13339761f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25478548f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50421494f ? 
             (data[23 /* X24 */] <0.043310914f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.034534857f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11028638f ? 
                     (data[24 /* X25 */] <-0.28146875f ? 
                         (data[5 /* X6 */] <0.1379471f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1943314f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[27 /* X28 */] <-0.55742276f ? 
                             (data[6 /* X7 */] <0.17531298f ? 
                                0.0f : 
                                1.0f) : 
                             (data[16 /* X17 */] <-0.7149602f ? 
                                 (data[3 /* X4 */] <-0.12529415f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[19 /* X20 */] <-0.8665603f ? 
                         (data[17 /* X18 */] <-0.0040926957f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29017663f ? 
                             (data[30 /* X31 */] <0.20036833f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.85659015f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[12 /* X13 */] <0.13091825f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (data[34 /* X35 */] <-0.46875f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12828904f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.13983569f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X9 */] <-0.20325197f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31097236f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63500524f ? 
             (data[11 /* X12 */] <-0.5208542f ? 
                 (data[34 /* X35 */] <-0.2421875f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.44878653f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5766036f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.2702601f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <0.5275797f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[19 /* X20 */] <-0.30139548f ? 
             (data[12 /* X13 */] <0.08985869f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1381857f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18493263f ? 
                     (data[19 /* X20 */] <-0.26554188f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.12727483f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18737192f ? 
                                 (data[9 /* X10 */] <-0.3529768f ? 
                                     (data[17 /* X18 */] <-0.5087238f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[29 /* X30 */] <0.12245606f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[31 /* X32 */] <0.08149999f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3916477f ? 
                     (data[9 /* X10 */] <-0.60086095f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14233288f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15944467f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19919139f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.100914426f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.81772655f ? 
             (data[33 /* X34 */] <-0.23828125f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.3797168f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6453125f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18820031f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.030972116f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08529757f ? 
                                 (data[7 /* X8 */] <0.09442617f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21494141f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.26732892f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.32899213f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48742536f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[19 /* X20 */] <-0.5203708f ? 
             (data[31 /* X32 */] <0.14584175f ? 
                 (data[22 /* X23 */] <0.13013263f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.11607325f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11882111f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.31754366f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (data[9 /* X10 */] <-0.3519073f ? 
                 (data[2 /* X3 */] <-0.11017552f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2550995f ? 
                         (data[23 /* X24 */] <0.07895808f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30776316f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44338062f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3025392f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15423533f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.1882292f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.20120493f ? 
                            0.0f : 
                             (data[1 /* X2 */] <0.14993584f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.599619f ? 
                        0.0f : 
                        1.0f))) : 
             (data[33 /* X34 */] <-0.421875f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3726995f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (data[32 /* X33 */] <-0.18341658f ? 
            1.0f : 
             (data[33 /* X34 */] <0.09765625f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.119967334f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0657779f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1728686f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20572498f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07400208f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.77849704f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08242021f ? 
                     (data[5 /* X6 */] <0.09594055f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18757676f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23120472f ? 
                             (data[19 /* X20 */] <-0.3349926f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21593443f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.24951112f ? 
                                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23202449f ? 
                                             (data[14 /* X15 */] <0.20500389f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14183538f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[5 /* X6 */] <0.13115306f ? 
                                     (data[32 /* X33 */] <0.073595f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.057802983f ? 
                                        0.0f : 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.622465f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0052148085f ? 
         (data[14 /* X15 */] <0.0716929f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.24848922f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26294532f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.2714676f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.12863341f ? 
            0.0f : 
             (data[2 /* X3 */] <0.008193144f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.7939685f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38911262f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[17 /* X18 */] <-0.44546333f ? 
             (data[24 /* X25 */] <-0.4298767f ? 
                 (data[16 /* X17 */] <-0.44699514f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37833047f ? 
                 (data[13 /* X14 */] <0.11998136f ? 
                     (data[3 /* X4 */] <-0.13454746f ? 
                         (data[16 /* X17 */] <-0.8491137f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.12126193f ? 
                         (data[26 /* X27 */] <0.31609094f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27320275f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.31491673f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
         (data[28 /* X29 */] <0.08660788f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18164174f ? 
                 (data[10 /* X11 */] <-0.36351258f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.8911908f ? 
                 (data[6 /* X7 */] <0.18989097f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.29822436f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.049052544f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7454959f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18448666f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25144246f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[21 /* X22 */] <0.03248213f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23105414f ? 
             (data[3 /* X4 */] <-0.6587026f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.43303728f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.31284797f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.25f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36546874f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.37223986f ? 
                                 (data[4 /* X5 */] <0.122886f ? 
                                    0.0f : 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30757526f ? 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28893277f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (data[17 /* X18 */] <-0.10891715f ? 
             (data[29 /* X30 */] <0.1253679f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.114975005f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.46870118f ? 
             (data[21 /* X22 */] <0.17670278f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.09227688f ? 
                     (data[8 /* X9 */] <-0.040196836f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7986109f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5388153f ? 
         (data[17 /* X18 */] <-0.864528f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.3150253f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.19825701f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.009223823f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.437845f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.7167941f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.890625f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.033607192f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.14258693f ? 
                                     (data[16 /* X17 */] <-0.39771003f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.40399006f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[16 /* X17 */] <-0.39771003f ? 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24485892f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                             (data[34 /* X35 */] <0.2f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[26 /* X27 */] <0.105901465f ? 
             (data[26 /* X27 */] <-0.28028813f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13992704f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.421875f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.12321482f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.1680782f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2685105f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.23715015f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.09765668f ? 
                 (data[27 /* X28 */] <-0.28369224f ? 
                     (data[20 /* X21 */] <0.14510679f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.16281757f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24742557f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.003549292f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.48875028f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3920325f ? 
                                     (data[17 /* X18 */] <-0.36597276f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[12 /* X13 */] <0.14005895f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (data[11 /* X12 */] <-0.3562373f ? 
                                 (data[10 /* X11 */] <-0.6504786f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
         (data[27 /* X28 */] <-0.2812482f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.1311549f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28814492f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21827991f ? 
                 (data[33 /* X34 */] <-0.25f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.19489741f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.026133426f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[33 /* X34 */] <-0.453125f ? 
                     (data[29 /* X30 */] <0.1406225f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.15106554f ? 
                         (data[16 /* X17 */] <-0.029148944f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.14470826f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.004353939f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09610072f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19511983f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0625f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.053877976f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04593723f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08159655f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1614472f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20814234f ? 
                             (data[25 /* X26 */] <-0.11218504f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18390937f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3985762f ? 
                 (data[22 /* X23 */] <0.12868671f ? 
                     (data[13 /* X14 */] <0.22585382f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4592905f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.51018375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
        0.02f : 
         (data[3 /* X4 */] <-0.49596092f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44951442f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24441043f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8568883f ? 
                 (data[35 /* X36 */] <-0.9085938f ? 
                     (data[23 /* X24 */] <0.14373809f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-9.033315E-4f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.08669547f ? 
                             (data[25 /* X26 */] <-0.072896115f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[12 /* X13 */] <0.093690775f ? 
             (data[3 /* X4 */] <-0.100731f ? 
                 (data[28 /* X29 */] <0.08660788f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.21525963f ? 
                 (data[6 /* X7 */] <0.16281757f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
                         (data[5 /* X6 */] <0.13870943f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.01891551f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22169946f ? 
             (data[26 /* X27 */] <-0.15695918f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.044100214f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11570029f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4824955f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.36960125f ? 
                     (data[9 /* X10 */] <-0.26503286f ? 
                         (data[13 /* X14 */] <0.10091031f ? 
                             (data[19 /* X20 */] <-0.13210674f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3296875f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3657772f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[33 /* X34 */] <-0.24414062f ? 
             (data[26 /* X27 */] <-0.07555717f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.68821645f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.39798892f ? 
                         (data[3 /* X4 */] <0.060086794f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11639721f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13513005f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.072273314f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.8778329f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
                 (data[9 /* X10 */] <-0.75760955f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24281049f ? 
                         (data[27 /* X28 */] <-0.5965271f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19957669f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6614124f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[4 /* X5 */] <0.098257005f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2993138f ? 
                             (data[31 /* X32 */] <0.17048791f ? 
                                0.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2f ? 
                                     (data[27 /* X28 */] <-0.9406454f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f))) : 
                 (data[18 /* X19 */] <0.22129536f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.49030563f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[15 /* X16 */] <0.081416674f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20080157f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.32242528f ? 
                     (data[34 /* X35 */] <-0.953125f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.63263845f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35970226f ? 
                                0.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.35447f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3894875f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23016852f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.13166517f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[31 /* X32 */] <0.056417603f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37490234f ? 
                 (data[15 /* X16 */] <0.041228764f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.37331015f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.09614219f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18860294f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0714295f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20623682f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[15 /* X16 */] <0.061070725f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33193943f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.18144897f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[5 /* X6 */] <0.17265826f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26257366f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44916993f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25480956f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.62083095f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07529214f ? 
                 (data[27 /* X28 */] <-0.44988576f ? 
                     (data[13 /* X14 */] <0.17769788f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18937327f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.32961687f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.1720406f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.14672382f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11218504f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35811275f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.116300136f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47128907f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.38057536f ? 
                 (data[9 /* X10 */] <-0.15827669f ? 
                     (data[4 /* X5 */] <0.11858484f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2528403f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28825682f ? 
         (data[33 /* X34 */] <-0.49414062f ? 
             (data[30 /* X31 */] <0.114273995f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10329256f ? 
                     (data[2 /* X3 */] <-0.32131964f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26732454f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X10 */] <-0.49482515f ? 
                 (data[5 /* X6 */] <0.25280946f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.2097633f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.104258925f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28757513f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22662413f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31056994f ? 
                         (data[25 /* X26 */] <-0.622941f ? 
                            1.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1945314f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.21065743f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[33 /* X34 */] <-0.24414062f ? 
             (data[34 /* X35 */] <-0.0390625f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15669852f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.334413f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25377873f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.5720869f ? 
             (data[10 /* X11 */] <0.17394821f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.05977703f ? 
                 (data[14 /* X15 */] <0.1062179f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.14985836f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18695131f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7079371f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.015503959f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4609375f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.51857984f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.53320503f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22587062f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.038410116f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24898213f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.047486857f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.10051904f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.16305041f ? 
                 (data[30 /* X31 */] <0.27877328f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.195296f ? 
             (data[34 /* X35 */] <-0.4921875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15461425f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1329759f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21011163f ? 
                     (data[24 /* X25 */] <-0.67722327f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.25619426f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.10152611f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.22121269f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[11 /* X12 */] <-0.17820923f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1207154f ? 
                     (data[35 /* X36 */] <-0.21775532f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0066257273f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.12756422f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4248678f ? 
                         (data[21 /* X22 */] <0.14551994f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.476191f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.21509613f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <0.1483645f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[11 /* X12 */] <-0.43668133f ? 
             (data[18 /* X19 */] <-0.21655434f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.903054f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21104825f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.06733547f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0076924143f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.245998f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16338086f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.18868575f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33484462f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.13572223f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22625577f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[30 /* X31 */] <0.15519798f ? 
             (data[11 /* X12 */] <-0.0012859576f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.83969116f ? 
                 (data[19 /* X20 */] <-0.19437802f ? 
                     (data[9 /* X10 */] <-0.21685596f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.40196756f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4013103f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4826267f ? 
                 (data[10 /* X11 */] <-0.60589683f ? 
                     (data[30 /* X31 */] <0.19126374f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05025841f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2919368f ? 
                            0.0f : 
                             (data[25 /* X26 */] <0.12354849f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <0.13423556f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3056788f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[11 /* X12 */] <-0.19000962f ? 
             (data[34 /* X35 */] <0.05859375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16476414f ? 
                     (data[6 /* X7 */] <0.14641483f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.14231043f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25294936f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.33744624f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.34120134f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3961154f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2710436f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.05369969f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[16 /* X17 */] <-0.1278713f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3828125f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2964534f ? 
                         (data[27 /* X28 */] <-0.7529445f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                                    1.0f : 
                                     (data[2 /* X3 */] <-0.19089714f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.80968964f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.0029046568f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.046582982f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0111743f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19210254f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.22348465f ? 
                         (data[22 /* X23 */] <0.18694223f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14955242f ? 
                 (data[19 /* X20 */] <-0.6716549f ? 
                     (data[25 /* X26 */] <-0.08271834f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.8116502f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.640625f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.4625869f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14446098f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7403556f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.114734404f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.35546875f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21387155f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10295366f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.06063236f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13645735f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[15 /* X16 */] <0.07214254f ? 
                 (data[23 /* X24 */] <0.038113605f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1597451f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.10424049f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17167783f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30836368f ? 
                     (data[1 /* X2 */] <-0.31404027f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17774826f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2978511f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.19318125f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14645566f ? 
         (data[3 /* X4 */] <-0.52977735f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.13320324f ? 
                 (data[0 /* X1 */] <-0.36427963f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.13246243f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27812898f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19056183f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.50731516f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18887812f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.09317845f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                             (data[34 /* X35 */] <-0.922222f ? 
                                 (data[4 /* X5 */] <0.2337759f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.12706198f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[7 /* X8 */] <0.092945404f ? 
            1.0f : 
             (data[27 /* X28 */] <0.23428771f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (data[16 /* X17 */] <-0.59861094f ? 
            1.0f : 
             (data[23 /* X24 */] <0.11953812f ? 
                 (data[15 /* X16 */] <0.053594276f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.22703192f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10857514f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0116176875f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.28825682f ? 
         (data[33 /* X34 */] <-0.76953125f ? 
             (data[7 /* X8 */] <0.06275311f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.6045243f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33955756f ? 
                         (data[9 /* X10 */] <-0.4883243f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.39597124f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3117362f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.3227726f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20556356f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.40423802f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[33 /* X34 */] <-0.37890625f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17838335f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19086511f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21727926f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.72265625f ? 
                 (data[4 /* X5 */] <0.09741001f ? 
                     (data[12 /* X13 */] <0.27188253f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20822112f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30637744f ? 
                             (data[9 /* X10 */] <-0.7410127f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14498833f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9575501f ? 
                 (data[22 /* X23 */] <0.14892957f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.18179105f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.20993179f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19366068f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08885724f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.5224802f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2783022f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23713057f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.17833841f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.114719875f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[27 /* X28 */] <-0.55742276f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.546875f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.14985836f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.046861745f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06990733f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24291424f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.08271834f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.28903344f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_11_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[5 /* X6 */] <0.086781956f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.31054688f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006294766f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12730259f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.06639223f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.1559621f ? 
                 (data[13 /* X14 */] <0.112864435f ? 
                     (data[10 /* X11 */] <-0.2581281f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.07324443f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16409774f ? 
                         (data[24 /* X25 */] <-0.5449071f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06783695f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.16635142f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[10 /* X11 */] <-0.12564471f ? 
                             (data[15 /* X16 */] <0.0908466f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[0 /* X1 */] <-0.046949245f ? 
             (data[2 /* X3 */] <-0.0078026224f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.115666315f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.8886719f ? 
             (data[2 /* X3 */] <-0.17415859f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.039893437f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95450366f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                     (data[19 /* X20 */] <-0.33267766f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3629171f ? 
                             (data[30 /* X31 */] <0.14610377f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2409085f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.13385539f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[26 /* X27 */] <-0.12643343f ? 
             (data[33 /* X34 */] <0.34765625f ? 
                 (data[31 /* X32 */] <0.10331075f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04581474f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[12 /* X13 */] <0.100396916f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06595979f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.008196721f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1818184f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.4994354f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13820797f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18819965f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.10424049f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.59838545f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40656248f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.30591828f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20430677f ? 
                                    0.0f : 
                                     (data[32 /* X33 */] <0.164775f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f))))) : 
         (data[15 /* X16 */] <0.10228348f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29798505f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[21 /* X22 */] <0.119967334f ? 
             (data[22 /* X23 */] <0.10266019f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.67933255f ? 
                     (data[17 /* X18 */] <-0.27880824f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.7312015f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X3 */] <-0.23814166f ? 
                 (data[35 /* X36 */] <-0.38300782f ? 
                     (data[19 /* X20 */] <-0.3493615f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3724325f ? 
                         (data[1 /* X2 */] <-0.37707373f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3009045f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4610073f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3331564f ? 
                             (data[32 /* X33 */] <-0.5704548f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2819405f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19957669f ? 
                                    0.0f : 
                                     (data[11 /* X12 */] <0.4920913f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.12125599f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.6507132f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
             (data[9 /* X10 */] <-0.13983569f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.1896149f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.122458346f ? 
                         (data[4 /* X5 */] <0.14681794f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27368686f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3713057f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39986715f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16571346f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22414097f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.20196986f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[34 /* X35 */] <0.020835156f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <0.47887492f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26432863f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.1847027f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5322554f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_11_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[1 /* X2 */] <-0.6437676f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.026668075f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.14722863f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                 (data[26 /* X27 */] <-0.31637144f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[9 /* X10 */] <-0.12139467f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.06324907f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2388883f ? 
                             (data[5 /* X6 */] <0.13485326f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (data[7 /* X8 */] <0.09042086f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1674972f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24343334f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5029747f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.102646865f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13709852f ? 
                 (data[7 /* X8 */] <0.12323995f ? 
                     (data[26 /* X27 */] <-0.04503142f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14517784f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.22361341f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2504491f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.1689942f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[34 /* X35 */] <-0.46875f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19061525f ? 
                             (data[34 /* X35 */] <-0.90703124f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.47611886f ? 
            1.0f : 
             (data[7 /* X8 */] <0.042454503f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[29 /* X30 */] <0.18189168f ? 
                 (data[12 /* X13 */] <0.16841635f ? 
                     (data[26 /* X27 */] <0.1449066f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.8886719f ? 
             (data[18 /* X19 */] <0.4227634f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (data[25 /* X26 */] <-0.6045243f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20415863f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.9009733f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.41079745f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18270405f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.111184284f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09743942f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.31201994f ? 
                                    1.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29035845f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.29306212f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17877994f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[3 /* X4 */] <-0.320538f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0053330706f ? 
                     (data[34 /* X35 */] <-0.43611437f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06607163f ? 
                        0.0f : 
                        1.0f))) : 
             (data[21 /* X22 */] <0.12040043f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.057062116f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24281049f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31841633f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.34852418f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15140809f ? 
                         (data[2 /* X3 */] <-0.026997542f ? 
                             (data[34 /* X35 */] <-0.65f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.63041335f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3200986f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.08678402f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.10157575f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
                 (data[8 /* X9 */] <0.16611783f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28333563f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.65312785f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35122997f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <0.16391066f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04457444f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.17127185f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25845787f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21598904f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48784146f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16868176f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.046875f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.055327065f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12116621f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.28120267f ? 
                             (data[7 /* X8 */] <0.09193559f ? 
                                1.0f : 
                                 (data[16 /* X17 */] <-0.6182807f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24830009f ? 
             (data[5 /* X6 */] <0.12342251f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4690666f ? 
                     (data[20 /* X21 */] <0.2784901f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95296687f ? 
             (data[5 /* X6 */] <0.16578816f ? 
                 (data[10 /* X11 */] <-0.5300447f ? 
                     (data[20 /* X21 */] <0.16338086f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X1 */] <-0.026762143f ? 
                         (data[23 /* X24 */] <0.0900867f ? 
                            0.0f : 
                             (data[8 /* X9 */] <-0.21855919f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14064644f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23362692f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.10711514f ? 
         (data[35 /* X36 */] <-0.7410156f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.44726562f ? 
             (data[9 /* X10 */] <-0.19515872f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18543904f ? 
                     (data[33 /* X34 */] <0.109375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.09754708f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[22 /* X23 */] <0.09904539f ? 
             (data[14 /* X15 */] <0.11259174f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.51326615f ? 
                 (data[5 /* X6 */] <0.21278404f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10944385f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.101928666f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.33976358f ? 
                            1.0f : 
                             (data[16 /* X17 */] <-0.39447793f ? 
                                 (data[31 /* X32 */] <0.09323463f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33526355f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[20 /* X21 */] <0.17823367f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44155273f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (data[5 /* X6 */] <0.1680782f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.4010053f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.24891564f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3100768f ? 
                                 (data[25 /* X26 */] <-0.46578532f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.03787845f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.013434944f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.70929384f ? 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13540243f ? 
                                        0.0f : 
                                         (data[25 /* X26 */] <-0.033607192f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17250077f ? 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.36728516f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))))) : 
                 (data[17 /* X18 */] <-0.31116846f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1569201f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07265043f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (data[11 /* X12 */] <-0.519799f ? 
             (data[34 /* X35 */] <-0.2421875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.019969104f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.24649619f ? 
                     (data[27 /* X28 */] <-0.34234878f ? 
                         (data[24 /* X25 */] <0.085753135f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3271779f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1921657f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14945348f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <0.19356547f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[22 /* X23 */] <0.12874548f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[15 /* X16 */] <0.034273162f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.30304936f ? 
                 (data[29 /* X30 */] <0.16561969f ? 
                     (data[12 /* X13 */] <0.08411057f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.100731f ? 
                         (data[8 /* X9 */] <-0.10226811f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.40839317f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22385632f ? 
                         (data[5 /* X6 */] <0.07189673f ? 
                             (data[28 /* X29 */] <0.12857176f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.094657615f ? 
                             (data[23 /* X24 */] <0.11087594f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27099088f ? 
                                     (data[11 /* X12 */] <-0.040310457f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[28 /* X29 */] <0.23209855f ? 
                                     (data[27 /* X28 */] <-0.25240877f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1514091f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12052627f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1362721f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32072777f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6778758f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23852393f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.41064322f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.38987017f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09388467f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.1737389f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26991427f ? 
                                         (data[7 /* X8 */] <0.06295154f ? 
                                            1.0f : 
                                             (data[35 /* X36 */] <-0.805f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[10 /* X11 */] <0.12640804f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[8 /* X9 */] <0.179168f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.3589686f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.540345f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26376873f ? 
                            1.0f : 
                            0.0f) : 
                         (data[28 /* X29 */] <0.1933581f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[15 /* X16 */] <0.06595979f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05859375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[17 /* X18 */] <-0.26586416f ? 
             (data[1 /* X2 */] <-0.28106755f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.10421077f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35579124f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.055948913f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.19314025f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22385632f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37183526f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.106544845f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10848341f ? 
         (data[20 /* X21 */] <0.16523746f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43203565f ? 
                 (data[34 /* X35 */] <-0.4494053f ? 
                    0.0f : 
                     (data[8 /* X9 */] <-0.31936356f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26697895f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.5532046f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3846009f ? 
                     (data[21 /* X22 */] <0.2009561f ? 
                         (data[6 /* X7 */] <0.12533134f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.15802757f ? 
                                 (data[11 /* X12 */] <0.074729055f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.84714353f ? 
                 (data[4 /* X5 */] <0.12140815f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14343631f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36979896f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.33267766f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22279209f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1888511f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                     (data[7 /* X8 */] <0.07610801f ? 
                         (data[24 /* X25 */] <-0.3694142f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0095235f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20196986f ? 
                                    0.0f : 
                                     (data[21 /* X22 */] <0.055436168f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087754875f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17223752f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22395892f ? 
                             (data[27 /* X28 */] <-0.25240877f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.47818354f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.3170792f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[23 /* X24 */] <0.08315695f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                         (data[8 /* X9 */] <-0.079415955f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.02375f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33800104f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18670894f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.109375f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13928309f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13686249f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26903242f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37232247f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.50710607f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.35284826f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.61570793f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.16390976f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.375f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[32 /* X33 */] <0.096235275f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.41523162f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22445898f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                    0.0f : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.15516728f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24340734f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[33 /* X34 */] <-0.421875f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.3008004f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30922988f ? 
                 (data[1 /* X2 */] <-0.24809481f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3668281f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16836393f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.025f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.76317155f ? 
                         (data[10 /* X11 */] <-0.15274362f ? 
                             (data[23 /* X24 */] <0.09424984f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20430677f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.527272f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.5546548f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[5 /* X6 */] <0.035828684f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.5329825f ? 
            0.0f : 
             (data[7 /* X8 */] <0.104305856f ? 
                 (data[1 /* X2 */] <-0.28106755f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.13384582f ? 
                         (data[3 /* X4 */] <7.183925E-4f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.056021776f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X6 */] <0.10995702f ? 
                             (data[8 /* X9 */] <-0.005589212f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[3 /* X4 */] <-0.8193308f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.18026169f ? 
                         (data[3 /* X4 */] <-0.13216342f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.03028184f ? 
                                 (data[33 /* X34 */] <0.35f ? 
                                     (data[6 /* X7 */] <0.18999086f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (data[5 /* X6 */] <0.16063558f ? 
             (data[21 /* X22 */] <0.16804089f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.08276106f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1911831f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.60939026f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.004353939f ? 
                    0.0f : 
                    1.0f))) : 
        0.006535948f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[33 /* X34 */] <-0.6855469f ? 
             (data[0 /* X1 */] <0.37697992f ? 
                 (data[23 /* X24 */] <0.07075899f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35471603f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.266472f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19853577f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.17509843f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[10 /* X11 */] <-0.5742815f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1940329f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.016020084f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.5416759f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (data[33 /* X34 */] <-0.421875f ? 
            1.0f : 
             (data[21 /* X22 */] <0.115203284f ? 
                 (data[2 /* X3 */] <-0.4766018f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18482867f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.47730532f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.1612081f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20046084f ? 
                     (data[32 /* X33 */] <-0.28409126f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.18990017f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.14610377f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0186946f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24441043f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.15250777f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.47332796f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23213387f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.092945404f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.68335307f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16015694f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1768235f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.49f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24878193f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46606752f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.369233f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31312773f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28125f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2847906f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.61079466f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22493798f ? 
                             (data[24 /* X25 */] <-0.2726742f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15454504f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.19460267f ? 
                                        0.0f : 
                                         (data[2 /* X3 */] <-0.2872338f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[9 /* X10 */] <-0.042511284f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20794941f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.1659862f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.09069081f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
                         (data[26 /* X27 */] <0.1720406f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.080256775f ? 
                                 (data[33 /* X34 */] <0.1153125f ? 
                                    1.0f : 
                                     (data[32 /* X33 */] <0.568185f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                         (data[6 /* X7 */] <0.12533134f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.29205847f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16338086f ? 
                             (data[14 /* X15 */] <0.14131348f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16783726f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22781014f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1645774f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_11_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14645566f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18666397f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                 (data[3 /* X4 */] <-0.5910697f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.0122563355f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[23 /* X24 */] <0.10494487f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3515625f ? 
                     (data[3 /* X4 */] <-0.42198738f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11273363f ? 
                             (data[24 /* X25 */] <-0.3172817f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2391083f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.018378435f ? 
             (data[23 /* X24 */] <0.11000972f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.092945404f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35646734f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[23 /* X24 */] <0.11910501f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23536377f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0546875f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09419909f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18034077f ? 
                    0.0f : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.2382188f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32741416f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40973872f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10556813f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.54927427f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                         (data[25 /* X26 */] <-0.30525324f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29017663f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.079239495f ? 
                             (data[0 /* X1 */] <-0.6844947f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.76953125f ? 
            1.0f : 
             (data[27 /* X28 */] <0.04380673f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
             (data[33 /* X34 */] <-0.43359375f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15519798f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.015871517f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.16341104f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1896149f ? 
                     (data[24 /* X25 */] <-0.50133234f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.125f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3209783f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5684541f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24221097f ? 
                                        0.0f : 
                                         (data[32 /* X33 */] <0.036366f ? 
                                            1.0f : 
                                            0.0f))) : 
                                 (data[19 /* X20 */] <-0.24494469f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26879424f ? 
                             (data[3 /* X4 */] <-0.3712627f ? 
                                0.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21824457f ? 
                                     (data[33 /* X34 */] <-0.18271485f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.33754078f ? 
                             (data[20 /* X21 */] <0.16615826f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2783022f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1818184f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.10303097f ? 
             (data[9 /* X10 */] <-0.09373315f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09229939f ? 
                 (data[11 /* X12 */] <-0.4237885f ? 
                     (data[15 /* X16 */] <0.121604584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05894836f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.18143716f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[16 /* X17 */] <-0.31070322f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16388465f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30964983f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30086637f ? 
                         (data[35 /* X36 */] <-0.42785454f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15016425f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09069081f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.61126417f ? 
                        1.0f : 
                        0.0f))) : 
             (data[23 /* X24 */] <0.10014045f ? 
                 (data[7 /* X8 */] <0.06265087f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19524093f ? 
                         (data[14 /* X15 */] <0.15716672f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.619302f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.08794265f ? 
                             (data[19 /* X20 */] <-0.28596294f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.24458788f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2598655f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22899485f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25952768f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.5023015f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11197083f ? 
                 (data[7 /* X8 */] <0.08537177f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.65858907f ? 
                 (data[19 /* X20 */] <-0.37242723f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40647808f ? 
                     (data[19 /* X20 */] <-0.47235626f ? 
                         (data[11 /* X12 */] <0.04593723f ? 
                             (data[13 /* X14 */] <0.16692945f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.22874409f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[8 /* X9 */] <-0.2764604f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.086781956f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.08854178f ? 
                 (data[10 /* X11 */] <-0.63751215f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04662209f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4848324f ? 
                 (data[32 /* X33 */] <0.37292677f ? 
                     (data[13 /* X14 */] <0.14566025f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4991557f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.36324114f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[27 /* X28 */] <-0.88966393f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15949056f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.73754853f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27137172f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.14210126f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.16251855f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.11053516f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.09375f ? 
                         (data[16 /* X17 */] <-0.40279245f ? 
                            1.0f : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.29921874f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.9140625f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.10327098f ? 
                         (data[13 /* X14 */] <0.13468124f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.2046044f ? 
                                1.0f : 
                                0.0f)))))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (data[5 /* X6 */] <0.13601771f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.21525963f ? 
                 (data[10 /* X11 */] <-0.44782013f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <-0.36610776f ? 
                     (data[31 /* X32 */] <0.055327065f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.5720869f ? 
             (data[8 /* X9 */] <-0.005146454f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5138487f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.37998575f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.12393599f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42981362f ? 
                     (data[4 /* X5 */] <0.12423146f ? 
                         (data[27 /* X28 */] <-0.08968694f ? 
                            0.0f : 
                            1.0f) : 
                         (data[13 /* X14 */] <0.086790055f ? 
                             (data[17 /* X18 */] <-0.19596611f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.31517917f ? 
                     (data[21 /* X22 */] <0.114337094f ? 
                         (data[23 /* X24 */] <0.062367715f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.056796037f ? 
                         (data[10 /* X11 */] <-0.05741943f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (data[14 /* X15 */] <0.0716929f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.8014536f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.796875f ? 
                         (data[11 /* X12 */] <-0.34015763f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10451792f ? 
             (data[29 /* X30 */] <0.21015358f ? 
                 (data[32 /* X33 */] <0.07386313f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4178116f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.015687056f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.43964845f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0326241f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.05096491f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49126527f ? 
                 (data[21 /* X22 */] <0.112604715f ? 
                     (data[16 /* X17 */] <0.023437858f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.7268034f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13598424f ? 
                 (data[15 /* X16 */] <0.041228764f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13838722f ? 
                         (data[31 /* X32 */] <0.1147614f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25512323f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[33 /* X34 */] <-0.1f ? 
                                     (data[2 /* X3 */] <-0.060309943f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.71606433f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19161275f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17245789f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <0.14946392f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (data[3 /* X4 */] <-0.46848503f ? 
             (data[7 /* X8 */] <0.079060405f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.031821124f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.056742407f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                         (data[27 /* X28 */] <-0.41285962f ? 
                             (data[23 /* X24 */] <0.11940472f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[7 /* X8 */] <0.11830111f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21589085f ? 
                         (data[14 /* X15 */] <0.18270405f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10272145f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.13354905f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[28 /* X29 */] <0.29642728f ? 
            0.0f : 
             (data[22 /* X23 */] <0.12796375f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.03309807f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3479441f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2421875f ? 
         (data[27 /* X28 */] <-0.30813247f ? 
             (data[30 /* X31 */] <0.12791532f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.08340325f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13921744f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.085840985f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.11259174f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5786168f ? 
                 (data[30 /* X31 */] <0.13928309f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2646725f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <0.090098135f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.109185115f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.21589085f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26432863f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77840656f ? 
                     (data[17 /* X18 */] <-0.73185116f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <0.36114836f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.27391616f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.076008566f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.59838545f ? 
                 (data[16 /* X17 */] <0.11085644f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16363268f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.16838823f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.047693297f ? 
         (data[32 /* X33 */] <-0.045455f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.39969888f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.05630519f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.87571937f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19402659f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.034950465f ? 
                         (data[32 /* X33 */] <-0.73153424f ? 
                            1.0f : 
                             (data[27 /* X28 */] <-0.6152853f ? 
                                1.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17125f ? 
                                     (data[3 /* X4 */] <-0.27208123f ? 
                                        1.0f : 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15926315f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[31 /* X32 */] <0.09905765f ? 
                                        1.0f : 
                                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31517836f ? 
                                            0.0f : 
                                            1.0f))))) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20520231f ? 
                         (data[28 /* X29 */] <0.12429536f ? 
                             (data[7 /* X8 */] <0.09193559f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.09361716f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048241757f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36886168f ? 
             (data[14 /* X15 */] <0.07222405f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.14629714f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5136719f ? 
             (data[14 /* X15 */] <0.10103325f ? 
                 (data[27 /* X28 */] <-0.06861829f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29741782f ? 
                     (data[30 /* X31 */] <0.1642922f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18558921f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05382325f ? 
             (data[8 /* X9 */] <-0.016903242f ? 
                 (data[9 /* X10 */] <-0.37034833f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11314177f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18634428f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.12278143f ? 
                                 (data[7 /* X8 */] <0.05373988f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10809267f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07568963f ? 
                            1.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13341825f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45443925f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19101375f ? 
                 (data[7 /* X8 */] <0.047503594f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3371106f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.3671875f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12582092f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8008215f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3211919f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20503868f ? 
                         (data[35 /* X36 */] <-0.9390625f ? 
                             (data[0 /* X1 */] <-0.2373226f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.19444375f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.17531298f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X7 */] <0.19197354f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.6629297f ? 
            1.0f : 
             (data[29 /* X30 */] <0.06713125f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.90625f ? 
                     (data[14 /* X15 */] <0.13561928f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.41592935f ? 
                         (data[27 /* X28 */] <0.34197745f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (data[18 /* X19 */] <-0.45783532f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.17781085f ? 
             (data[20 /* X21 */] <0.25528258f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.010748597f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.26819026f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14621614f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23578829f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.0854358f ? 
                     (data[14 /* X15 */] <0.15720867f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.3221352f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0983434f ? 
                 (data[16 /* X17 */] <-0.33802292f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5843108f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23369482f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22301078f ? 
                             (data[21 /* X22 */] <0.12982208f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.117040604f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[23 /* X24 */] <0.14413872f ? 
                                 (data[6 /* X7 */] <0.13632199f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24459657f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2014611f ? 
             (data[27 /* X28 */] <-0.72361624f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46973163f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.025390137f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04869478f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16985658f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16213965f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.2829298f ? 
                     (data[33 /* X34 */] <0.078125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20580967f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.076008566f ? 
                 (data[8 /* X9 */] <-0.0151824625f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.17863393f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.5154617f ? 
             (data[25 /* X26 */] <-0.08578779f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.35574517f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5766036f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1643809f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3764926f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25078967f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.27266335f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.1447512f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31442702f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.65844816f ? 
                 (data[12 /* X13 */] <0.080278486f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.2959926f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23704596f ? 
                             (data[26 /* X27 */] <-0.20240863f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.14149216f ? 
                                     (data[7 /* X8 */] <0.05962141f ? 
                                        0.0f : 
                                         (data[19 /* X20 */] <-0.31482378f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17769788f ? 
                                        0.0f : 
                                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17060639f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                             (data[7 /* X8 */] <0.05962141f ? 
                                 (data[25 /* X26 */] <-0.5836521f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[21 /* X22 */] <0.23582026f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.32250893f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (data[13 /* X14 */] <0.036030065f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[31 /* X32 */] <0.08149999f ? 
                 (data[4 /* X5 */] <0.18624373f ? 
                     (data[17 /* X18 */] <-0.04685649f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2199338f ? 
                     (data[14 /* X15 */] <0.16570713f ? 
                         (data[21 /* X22 */] <0.20452254f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13596456f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.20647573f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16283742f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22576265f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49263293f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4811662f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.1960788f ? 
         (data[13 /* X14 */] <0.11670201f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.0069202743f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.07713783f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13638534f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.16194282f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[13 /* X14 */] <0.14687201f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081306204f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18182951f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.5110508f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X10 */] <-0.3242458f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19370212f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.70074284f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.15595445f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6779513f ? 
                             (data[27 /* X28 */] <-0.23299469f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2703873f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
             (data[27 /* X28 */] <-0.46943793f ? 
                 (data[21 /* X22 */] <0.15937898f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.66797894f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.79540527f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28870794f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25090626f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.15827669f ? 
                     (data[29 /* X30 */] <0.10395736f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22519636f ? 
                             (data[24 /* X25 */] <-0.4133869f ? 
                                 (data[17 /* X18 */] <-0.40167782f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[9 /* X10 */] <-0.5523438f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.72828764f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29353005f ? 
                             (data[19 /* X20 */] <-0.4632808f ? 
                                 (data[35 /* X36 */] <-0.3175f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19011591f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11530667f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.105396986f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.025926985f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0111743f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.73828036f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22257635f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.53320503f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14525782f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.64377755f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
                        0.0f : 
                         (data[11 /* X12 */] <0.00971017f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12253063f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.45440248f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1189541f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08451264f ? 
                         (data[14 /* X15 */] <0.108450405f ? 
                            1.0f : 
                             (data[34 /* X35 */] <0.047618f ? 
                                 (data[16 /* X17 */] <-0.2690932f ? 
                                    1.0f : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.363829f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[32 /* X33 */] <-0.3437503f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17786404f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <0.15f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[16 /* X17 */] <-0.54817456f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[22 /* X23 */] <0.105552025f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20816317f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35546875f ? 
             (data[22 /* X23 */] <0.11928824f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.5376899f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.27147213f ? 
             (data[31 /* X32 */] <0.10753107f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22694181f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14009441f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (data[34 /* X35 */] <-0.44726562f ? 
             (data[18 /* X19 */] <-0.07824041f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3125f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16082978f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.46793634f ? 
             (data[22 /* X23 */] <0.08964692f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.36969745f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.15191652f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1908194f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4825573f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38482705f ? 
                     (data[17 /* X18 */] <-0.5894663f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.058231343f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845895f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11530667f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2796875f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33775333f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.03930664f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.16149557f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1711012f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X9 */] <-0.040196836f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.9545144f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.1483927f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33407485f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32673296f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24208619f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29902875f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
             (data[18 /* X19 */] <0.121546395f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.640625f ? 
                 (data[15 /* X16 */] <0.1339701f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2512564f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[20 /* X21 */] <0.16709407f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.11700107f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.09479708f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12253063f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04380673f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19238843f ? 
                     (data[33 /* X34 */] <-0.1875f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19293307f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17684694f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11199347f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17048791f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18619166f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27718085f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.13476562f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22728229f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.15671006f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.10112967f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.13562775f ? 
                     (data[35 /* X36 */] <-0.5811178f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.1637578f ? 
                         (data[18 /* X19 */] <-0.054169323f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31702557f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
        0.0121951215f : 
         (data[25 /* X26 */] <-0.114947535f ? 
             (data[11 /* X12 */] <-0.14487934f ? 
                 (data[1 /* X2 */] <-0.46791303f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29334292f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.35622615f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X4 */] <-0.48962033f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.10617818f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20793928f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.32605618f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1940329f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0175f ? 
                             (data[31 /* X32 */] <0.10291053f ? 
                                1.0f : 
                                0.0f) : 
                             (data[0 /* X1 */] <0.018821826f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
         (data[19 /* X20 */] <-0.41401136f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.35634765f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.99223304f ? 
                     (data[8 /* X9 */] <0.028626429f ? 
                         (data[4 /* X5 */] <0.15246457f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[28 /* X29 */] <0.24627307f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.76953125f ? 
             (data[19 /* X20 */] <0.0135118235f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2018725f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.43701547f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4111874f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.38439497f ? 
                             (data[0 /* X1 */] <-0.33323908f ? 
                                 (data[21 /* X22 */] <0.14413403f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3219258f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[33 /* X34 */] <-0.672f ? 
                                     (data[27 /* X28 */] <-0.12727483f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (data[32 /* X33 */] <0.28266984f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24995412f ? 
             (data[35 /* X36 */] <-0.16972657f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08149999f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.2680023f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.40234375f ? 
             (data[31 /* X32 */] <0.12075936f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.19612198f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.43183568f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.29200554f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2950634f ? 
                                1.0f : 
                                 (data[14 /* X15 */] <0.24088639f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                 (data[13 /* X14 */] <0.09374658f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31018096f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.09011197f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.086802796f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0487114f ? 
                 (data[11 /* X12 */] <-0.5621052f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X12 */] <-0.3187079f ? 
                 (data[10 /* X11 */] <-0.44465038f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18639353f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3301427f ? 
                     (data[27 /* X28 */] <-0.3646654f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30289134f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.55f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[14 /* X15 */] <0.14127405f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16621637f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16290878f ? 
             (data[1 /* X2 */] <-0.30304936f ? 
                 (data[25 /* X26 */] <-0.14179361f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.1290872f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29277226f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13782676f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.020843709f ? 
                 (data[11 /* X12 */] <-0.3473468f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09701645f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.135768f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[20 /* X21 */] <0.0828162f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[26 /* X27 */] <0.24984297f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06131962f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.1596777f ? 
                         (data[22 /* X23 */] <0.19664487f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10891715f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15028886f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.113765195f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.12112829f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.114285745f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X2 */] <-0.26458117f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1767177f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28998545f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.65636027f ? 
                 (data[29 /* X30 */] <0.06456199f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3280991f ? 
                         (data[5 /* X6 */] <0.12334078f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20358527f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.638645f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[23 /* X24 */] <0.06562243f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20398997f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4727121f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3112433f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.20733342f ? 
                1.0f : 
                0.0f)) : 
         (data[28 /* X29 */] <0.20256071f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5859375f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18334389f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09546471f ? 
                         (data[12 /* X13 */] <0.08326027f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.45228326f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[33 /* X34 */] <-0.76953125f ? 
             (data[28 /* X29 */] <0.12617908f ? 
                 (data[34 /* X35 */] <0.3828125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3967583f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26279598f ? 
                     (data[26 /* X27 */] <0.117772594f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1875f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26304716f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.31872213f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[31 /* X32 */] <0.11465235f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.36768293f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10017909f ? 
                             (data[5 /* X6 */] <0.21296288f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24007234f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.17305487f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15746793f ? 
                 (data[34 /* X35 */] <-0.4453125f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13454746f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21967353f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29843193f ? 
                     (data[21 /* X22 */] <0.114337094f ? 
                         (data[32 /* X33 */] <-0.16477312f ? 
                            1.0f : 
                            0.0f) : 
                         (data[24 /* X25 */] <-0.4133869f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11569437f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.117772594f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2891269f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4687177f ? 
                         (data[31 /* X32 */] <0.14257012f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30605263f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.45f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25005606f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[11 /* X12 */] <-0.5154617f ? 
             (data[25 /* X26 */] <-0.06430166f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1897018f ? 
                 (data[3 /* X4 */] <-0.16836393f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19155915f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.08583932f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24030101f ? 
                     (data[30 /* X31 */] <0.14527024f ? 
                        1.0f : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.15534262f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01778448f ? 
         (data[24 /* X25 */] <-0.60851586f ? 
             (data[22 /* X23 */] <0.14603773f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <0.116202995f ? 
                 (data[2 /* X3 */] <-0.56392664f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35527083f ? 
                         (data[23 /* X24 */] <0.05543797f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1330468f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.14852805f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[33 /* X34 */] <-0.765625f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.06253995f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14210995f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15359578f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.004086444f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23001455f ? 
                                 (data[22 /* X23 */] <0.18507752f ? 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46264696f ? 
                                         (data[8 /* X9 */] <0.17394467f ? 
                                             (data[20 /* X21 */] <0.23372354f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35450667f ? 
                                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18714179f ? 
                                             (data[35 /* X36 */] <-0.22f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f))))) : 
        0.03773585f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.12012492f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.27779686f ? 
             (data[2 /* X3 */] <-0.21894673f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15662801f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.2645656f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.15308803f ? 
             (data[25 /* X26 */] <-0.26688516f ? 
                 (data[16 /* X17 */] <-0.4725577f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.5783885f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.63541704f ? 
                     (data[31 /* X32 */] <0.08586214f ? 
                         (data[3 /* X4 */] <-0.29169554f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X8 */] <0.13838722f ? 
                             (data[27 /* X28 */] <-0.4113405f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.05198482f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.5068759f ? 
                             (data[22 /* X23 */] <0.20245643f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[19 /* X20 */] <-0.5057724f ? 
             (data[24 /* X25 */] <-0.105577864f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20893076f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <0.0703125f ? 
                     (data[5 /* X6 */] <0.22303903f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.5859375f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11882111f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.08149999f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12473543f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[19 /* X20 */] <-0.24717304f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33415386f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4772981f ? 
                     (data[25 /* X26 */] <-0.6352188f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40656248f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5720919f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15662801f ? 
                    0.0f : 
                    1.0f))) : 
         (data[18 /* X19 */] <-0.03828305f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.39097667f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45314038f ? 
         (data[21 /* X22 */] <0.12819614f ? 
             (data[34 /* X35 */] <-0.4453125f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.041520234f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.66193855f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845895f ? 
                     (data[31 /* X32 */] <0.08149999f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04906611f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0839983f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6432312f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.171875f ? 
                         (data[18 /* X19 */] <-0.11512413f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.16947606f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13114783f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.7265625f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006294766f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[14 /* X15 */] <0.09771944f ? 
             (data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.31531185f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.40171078f ? 
                     (data[33 /* X34 */] <-0.875f ? 
                         (data[1 /* X2 */] <-0.15210749f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10735131f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.14761499f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18848297f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.44815367f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3620556f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4187095f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19703914f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[15 /* X16 */] <0.04741152f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10830078f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18566072f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20080157f ? 
                 (data[1 /* X2 */] <-0.22611299f ? 
                     (data[9 /* X10 */] <-0.23204073f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.46221995f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19140884f ? 
                     (data[15 /* X16 */] <0.07801778f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20893076f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.060622793f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33883855f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22062021f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2700797f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7938477f ? 
             (data[31 /* X32 */] <0.09567698f ? 
                 (data[3 /* X4 */] <-0.11763923f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.1491856f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (data[30 /* X31 */] <0.036973126f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.49969354f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.14925595f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19308648f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.6f ? 
                                 (data[29 /* X30 */] <0.12631457f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1937717f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[26 /* X27 */] <-0.29070738f ? 
                                    1.0f : 
                                     (data[0 /* X1 */] <-0.19740957f ? 
                                        1.0f : 
                                        0.0f))))))) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20185621f ? 
             (data[23 /* X24 */] <0.13166517f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.5734375f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46537572f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.010602294f ? 
                 (data[18 /* X19 */] <-0.04388038f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.11293822f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26594752f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.20137225f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[20 /* X21 */] <0.10762764f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (data[26 /* X27 */] <-0.1823973f ? 
             (data[29 /* X30 */] <0.1990201f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16266823f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X11 */] <-0.6164353f ? 
                 (data[20 /* X21 */] <0.24700114f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.112781614f ? 
                     (data[25 /* X26 */] <-0.10727392f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.28146875f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34947938f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03436661f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[10 /* X11 */] <-0.09478217f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22014767f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21544434f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.10041179f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[32 /* X33 */] <-0.4164598f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13928309f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.21875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.033607192f ? 
                     (data[34 /* X35 */] <-0.078125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26368713f ? 
             (data[20 /* X21 */] <0.18959947f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1614558f ? 
                     (data[31 /* X32 */] <0.046602756f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14223745f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13642332f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17589673f ? 
                             (data[24 /* X25 */] <-0.1319615f ? 
                                 (data[9 /* X10 */] <-0.20991153f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24292336f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.8665603f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.43033358f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18883558f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3036755f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29458675f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0596507f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.20096332f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0032261705f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.4375f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.7017047f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.005205376f ? 
             (data[14 /* X15 */] <0.15512092f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16029444f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36575034f ? 
             (data[23 /* X24 */] <0.050806556f ? 
                 (data[34 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.67722327f ? 
                     (data[22 /* X23 */] <0.1674064f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.29931f ? 
            0.0f : 
             (data[8 /* X9 */] <0.22757061f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11105918f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18218568f ? 
                     (data[4 /* X5 */] <0.11293822f ? 
                         (data[10 /* X11 */] <-0.2370512f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.010490269f ? 
                                 (data[29 /* X30 */] <0.15534262f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24612032f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08989306f ? 
                            1.0f : 
                             (data[27 /* X28 */] <0.43582788f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[20 /* X21 */] <0.08540363f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13246243f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.103946194f ? 
            0.0f : 
             (data[7 /* X8 */] <0.0979945f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.421875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.11887879f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.0989486f ? 
                         (data[28 /* X29 */] <0.11973726f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31976336f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31707507f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.6417944f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[34 /* X35 */] <-0.428572f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2421875f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22372039f ? 
            0.0f : 
             (data[28 /* X29 */] <0.19519861f ? 
                 (data[9 /* X10 */] <-0.10295366f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.54106444f ? 
            0.0f : 
             (data[7 /* X8 */] <0.1396495f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.050611965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[13 /* X14 */] <0.14424853f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.082128905f ? 
             (data[18 /* X19 */] <0.11232546f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08683203f ? 
                     (data[9 /* X10 */] <-0.06607163f ? 
                         (data[24 /* X25 */] <-0.061605144f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23816024f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12903374f ? 
             (data[28 /* X29 */] <0.093049705f ? 
                 (data[21 /* X22 */] <0.07919718f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22372039f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009055189f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0390625f ? 
                     (data[31 /* X32 */] <0.08149999f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.98972464f ? 
                             (data[25 /* X26 */] <-0.20044748f ? 
                                0.0f : 
                                 (data[6 /* X7 */] <0.17531298f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.049594548f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.56171215f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10584763f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19927812f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2475853f ? 
                     (data[24 /* X25 */] <0.04832666f ? 
                         (data[4 /* X5 */] <0.172867f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35280403f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.09687357f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.7706282f ? 
            1.0f : 
             (data[8 /* X9 */] <0.06628816f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.59375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[16 /* X17 */] <-0.76963f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.26177138f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.30803642f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.114285745f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19402659f ? 
                         (data[25 /* X26 */] <-0.47560754f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5227275f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22518352f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[27 /* X28 */] <-0.13705091f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5548643f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46318838f ? 
                     (data[28 /* X29 */] <0.0534785f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18248065f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.11053684f ? 
                                1.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.755f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41791508f ? 
                                         (data[31 /* X32 */] <0.095022656f ? 
                                             (data[6 /* X7 */] <0.16997743f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f)))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[12 /* X13 */] <0.19619894f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28777128f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.25799042f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45694762f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.010431289f ? 
             (data[8 /* X9 */] <-0.14668183f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.63177115f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2414994f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40439552f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17505105f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19568947f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.1891096f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.02157622f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.010186402f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.041347947f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10421077f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.124832556f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                         (data[19 /* X20 */] <-0.43278065f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.07277568f ? 
                        1.0f : 
                        0.0f))) : 
             (data[27 /* X28 */] <-0.22503571f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[15 /* X16 */] <0.11696752f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.649503f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4453125f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.06405137f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.039856315f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19818597f ? 
                                     (data[11 /* X12 */] <-0.43767348f ? 
                                        0.0f : 
                                         (data[4 /* X5 */] <0.098257005f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[15 /* X16 */] <0.05127574f ? 
             (data[27 /* X28 */] <-0.12727483f ? 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.203125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.5720869f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4565203f ? 
                     (data[5 /* X6 */] <0.20471875f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.77522755f ? 
                            1.0f : 
                            0.0f) : 
                         (data[16 /* X17 */] <-0.15912542f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.32544148f ? 
                     (data[28 /* X29 */] <0.24347593f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.4345244f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <-0.08643164f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28360653f ? 
                             (data[4 /* X5 */] <0.11632619f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0052148085f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18360452f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.578125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.2101835f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0084932f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17520246f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1831531f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17633021f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35532394f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.3008004f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11703404f ? 
             (data[15 /* X16 */] <0.038137384f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.45615909f ? 
                     (data[9 /* X10 */] <-0.23204073f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03751364f ? 
                            0.0f : 
                            1.0f) : 
                         (data[15 /* X16 */] <0.05682754f ? 
                             (data[32 /* X33 */] <-0.37954575f ? 
                                0.0f : 
                                1.0f) : 
                             (data[1 /* X2 */] <-0.322833f ? 
                                 (data[25 /* X26 */] <-0.2126333f ? 
                                     (data[31 /* X32 */] <0.062533185f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[24 /* X25 */] <-0.62335664f ? 
                                    1.0f : 
                                     (data[13 /* X14 */] <0.107167155f ? 
                                        1.0f : 
                                         (data[35 /* X36 */] <-0.3175f ? 
                                             (data[3 /* X4 */] <-0.100731f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)))))) : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.5118017f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30708727f ? 
                    0.0f : 
                     (data[16 /* X17 */] <0.5109896f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14645566f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20351298f ? 
             (data[0 /* X1 */] <-0.045114055f ? 
                 (data[24 /* X25 */] <-0.45735964f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.010394619f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.07390362f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.06100881f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07496801f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20027362f ? 
                     (data[7 /* X8 */] <0.17877994f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77128226f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23307562f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <-0.046624657f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19888903f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35246658f ? 
                 (data[34 /* X35 */] <0.0390625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.35483506f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.094092816f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.5859375f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17622836f ? 
             (data[30 /* X31 */] <0.101399064f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.14905618f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.13782676f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.26236835f ? 
                             (data[33 /* X34 */] <-0.45f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.35577646f ? 
            0.0f : 
             (data[12 /* X13 */] <0.22110747f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21588267f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17101866f ? 
             (data[26 /* X27 */] <-0.18409318f ? 
                 (data[29 /* X30 */] <0.23242052f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.671875f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0844181f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.101354934f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.46332976f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28987113f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25115526f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.16908544f ? 
                                 (data[3 /* X4 */] <0.38622606f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[0 /* X1 */] <0.1225747f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[25 /* X26 */] <-0.15331562f ? 
             (data[15 /* X16 */] <0.047647983f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.22633591f ? 
                 (data[21 /* X22 */] <0.14282905f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.14621614f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54003906f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18057944f ? 
             (data[31 /* X32 */] <0.035697374f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.38878933f ? 
                     (data[33 /* X34 */] <-0.15625f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18998928f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.15615916f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1289934f ? 
                             (data[29 /* X30 */] <0.22111577f ? 
                                 (data[11 /* X12 */] <-0.36314803f ? 
                                    1.0f : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2675f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18979043f ? 
                 (data[2 /* X3 */] <-0.09737891f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11578787f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.36281198f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.039486885f ? 
                             (data[31 /* X32 */] <0.21236458f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[16 /* X17 */] <-0.22874409f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.10717138f ? 
                         (data[2 /* X3 */] <-0.35970947f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.06364125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (data[14 /* X15 */] <0.0855029f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.36722103f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.13179444f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0075168936f ? 
             (data[0 /* X1 */] <0.09221122f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.37844414f ? 
                     (data[24 /* X25 */] <0.10765435f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22370186f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.26164916f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.633576f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.07657015f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.11780568f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.47166672f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_11_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[16 /* X17 */] <-0.25396228f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22385632f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17954224f ? 
                     (data[22 /* X23 */] <0.109889776f ? 
                         (data[28 /* X29 */] <0.15602623f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.092945404f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.24458788f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.12630694f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[35 /* X36 */] <-0.20019531f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1381857f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26719862f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35340557f ? 
                         (data[31 /* X32 */] <0.1076729f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24738316f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14064723f ? 
                                    0.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23764488f ? 
                                         (data[1 /* X2 */] <-0.3555399f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.03221331f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[25 /* X26 */] <0.32213694f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.11314177f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13132566f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.39529067f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.6417944f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4345359f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25377873f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95296687f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8839796f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                     (data[22 /* X23 */] <0.043377545f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.48962033f ? 
                         (data[5 /* X6 */] <0.13601771f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22902381f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[21 /* X22 */] <0.19911544f ? 
                            1.0f : 
                             (data[11 /* X12 */] <-0.26293865f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12866892f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.60615426f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[2 /* X3 */] <-0.103777215f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (data[10 /* X11 */] <-0.50051236f ? 
             (data[19 /* X20 */] <-0.52454174f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.74585336f ? 
             (data[32 /* X33 */] <0.3959052f ? 
                 (data[26 /* X27 */] <0.12833266f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.1400446f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.09354853f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (data[9 /* X10 */] <-0.5363174f ? 
             (data[28 /* X29 */] <0.18139471f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.285234f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.723576f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45694762f ? 
                     (data[18 /* X19 */] <-0.09053498f ? 
                         (data[22 /* X23 */] <0.13302447f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X9 */] <-0.2398562f ? 
                             (data[9 /* X10 */] <-0.071580335f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17793353f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.21270502f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.13305113f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19575897f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.25393945f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.060659915f ? 
             (data[31 /* X32 */] <0.06514191f ? 
                 (data[35 /* X36 */] <-0.33730468f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14596085f ? 
                     (data[13 /* X14 */] <0.09374658f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.14723544f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15946253f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.78255564f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.093812f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.061947625f ? 
                 (data[34 /* X35 */] <-0.5625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46537572f ? 
                 (data[5 /* X6 */] <0.08105687f ? 
                     (data[33 /* X34 */] <-0.546875f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.003037802f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.38940293f ? 
                             (data[24 /* X25 */] <-0.2726742f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <-0.02419613f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16882798f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f))) : 
                 (data[0 /* X1 */] <0.11894959f ? 
                     (data[1 /* X2 */] <-0.3555399f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0030821615f ? 
             (data[14 /* X15 */] <0.1200279f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14257012f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5996094f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17584231f ? 
                 (data[13 /* X14 */] <0.14096919f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12512152f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29277226f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40401405f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24441043f ? 
                            1.0f : 
                             (data[8 /* X9 */] <-0.038992405f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20915473f ? 
         (data[24 /* X25 */] <-0.6140125f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.28106755f ? 
                 (data[21 /* X22 */] <0.11780185f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.11858484f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.10674995f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.20426641f ? 
                                 (data[26 /* X27 */] <0.038014177f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                 (data[28 /* X29 */] <0.08660788f ? 
                     (data[10 /* X11 */] <-0.37396055f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.058117736f ? 
                         (data[34 /* X35 */] <0.116665f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.121197276f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40026218f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28214625f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[21 /* X22 */] <0.07189378f ? 
            1.0f : 
             (data[28 /* X29 */] <0.08476736f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.15625f ? 
                     (data[21 /* X22 */] <0.23789139f ? 
                         (data[18 /* X19 */] <0.08020555f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28561422f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.096038274f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18015064f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.124695964f ? 
                     (data[7 /* X8 */] <0.07247314f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.67366093f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18937327f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.8511906f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26889494f ? 
                                 (data[2 /* X3 */] <0.0037143289f ? 
                                    0.0f : 
                                     (data[7 /* X8 */] <0.08272985f ? 
                                        1.0f : 
                                         (data[34 /* X35 */] <-0.626846f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30297905f ? 
             (data[22 /* X23 */] <0.17640202f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18714528f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3927284f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.04679722f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.29104412f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18077548f ? 
         (data[19 /* X20 */] <-0.50160146f ? 
             (data[6 /* X7 */] <0.15969372f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.8898097f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.39436623f ? 
                 (data[27 /* X28 */] <-0.16637918f ? 
                     (data[15 /* X16 */] <0.078325294f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12566048f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.15684542f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (data[19 /* X20 */] <0.017682781f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29322642f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.59992015f ? 
             (data[32 /* X33 */] <-0.045455f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-1.0951077f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4111874f ? 
                     (data[21 /* X22 */] <0.16542684f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.10327098f ? 
                             (data[7 /* X8 */] <0.09193559f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40543315f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.33021265f ? 
                                     (data[33 /* X34 */] <-0.672f ? 
                                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16129732f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3297885f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f))) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.39091635f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13442904f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12559617f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19157486f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.1036248f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.16356698f ? 
             (data[27 /* X28 */] <-0.6307434f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16138306f ? 
                     (data[4 /* X5 */] <0.095998354f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.32544148f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.030899007f ? 
                                1.0f : 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1867342f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.18395743f ? 
                                         (data[13 /* X14 */] <0.22806865f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))))) : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.5329825f ? 
                 (data[14 /* X15 */] <0.21032405f ? 
                     (data[8 /* X9 */] <-0.10674995f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06859197f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24121164f ? 
                     (data[33 /* X34 */] <-0.953125f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30765754f ? 
                             (data[24 /* X25 */] <-0.26688933f ? 
                                 (data[35 /* X36 */] <-0.042555f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <0.03436661f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[26 /* X27 */] <0.188321f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.49316406f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20223118f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14802282f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.09069081f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.15448084f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.020834375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[0 /* X1 */] <-0.10384017f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.41523162f ? 
                     (data[4 /* X5 */] <0.1646557f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.59220105f ? 
                         (data[32 /* X33 */] <0.5213061f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09754448f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07031302f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.3891353f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.22623222f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[1 /* X2 */] <-0.23985162f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.227282f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10772265f ? 
                     (data[21 /* X22 */] <0.1316609f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.08841951f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.124447f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19343874f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.06138859f ? 
                 (data[24 /* X25 */] <-0.7966393f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16477312f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47240987f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2642184f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.49154237f ? 
                     (data[9 /* X10 */] <-0.60086095f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[14 /* X15 */] <0.117903285f ? 
             (data[6 /* X7 */] <0.085762545f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.647455f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.79765624f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.017682781f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.010620261f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.697976f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4600309f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3540323f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.06843606f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.082962364f ? 
             (data[5 /* X6 */] <0.031821124f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.17323041f ? 
                 (data[7 /* X8 */] <0.092945404f ? 
                     (data[4 /* X5 */] <0.11777647f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.125332f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.05699989f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[29 /* X30 */] <0.115363285f ? 
                     (data[15 /* X16 */] <0.12904322f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.8984375f ? 
             (data[34 /* X35 */] <-0.6535581f ? 
                 (data[10 /* X11 */] <-0.4583586f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[14 /* X15 */] <0.15455289f ? 
             (data[11 /* X12 */] <-0.1095732f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3246865f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5553084f ? 
                 (data[20 /* X21 */] <0.10953944f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.62843835f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (data[29 /* X30 */] <0.1502041f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.47943547f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12022809f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10727392f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26164916f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.1f ? 
                                 (data[31 /* X32 */] <0.33799458f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0844181f ? 
             (data[19 /* X20 */] <-0.41493526f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24054101f ? 
         (data[33 /* X34 */] <-0.19921875f ? 
            1.0f : 
             (data[30 /* X31 */] <0.16770254f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.5123255f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.30142832f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23366703f ? 
             (data[7 /* X8 */] <0.047503594f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21165247f ? 
                     (data[0 /* X1 */] <0.061327036f ? 
                         (data[11 /* X12 */] <-0.30302042f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22422636f ? 
                     (data[15 /* X16 */] <0.04006346f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15865244f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <0.14645566f ? 
                         (data[9 /* X10 */] <0.06301545f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.036820717f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22333619f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.114605255f ? 
             (data[11 /* X12 */] <-0.53320503f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20893076f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23016743f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09546995f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3081957f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2544506f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06990733f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.110717535f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[23 /* X24 */] <0.047208894f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.3400216f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.20303951f ? 
             (data[12 /* X13 */] <0.114150144f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.071702905f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22520943f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31356454f ? 
                     (data[2 /* X3 */] <-0.4108959f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.09375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.5910697f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.6420456f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21682933f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19940136f ? 
                            1.0f : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.28220332f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.083735205f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66242f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.53542656f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24066135f ? 
                 (data[33 /* X34 */] <-0.3515625f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32593077f ? 
                         (data[27 /* X28 */] <0.32024854f ? 
                             (data[3 /* X4 */] <-0.31715637f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.5649867f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.2773283f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21831085f ? 
                                1.0f : 
                                 (data[30 /* X31 */] <0.18706408f ? 
                                    1.0f : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20622621f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30813247f ? 
         (data[28 /* X29 */] <0.108234f ? 
            1.0f : 
             (data[13 /* X14 */] <0.116046146f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10164498f ? 
                     (data[27 /* X28 */] <-0.5088478f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.9771484f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0546875f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.23997599f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.23204073f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76953125f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36078572f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.6085315f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19725876f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.4100916f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.4007419f ? 
                     (data[9 /* X10 */] <-0.12139467f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1344696f ? 
                             (data[0 /* X1 */] <-0.3086475f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24421732f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.14257012f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.5227275f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05939061f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26432863f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24323958f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1908194f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.77522755f ? 
                     (data[25 /* X26 */] <-0.15638508f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15245442f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26196963f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20992672f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.22865961f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.18214935f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.268478f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.18736285f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.9069179f ? 
         (data[2 /* X3 */] <0.0017948371f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.63500524f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5378715f ? 
                 (data[33 /* X34 */] <-0.375f ? 
                     (data[8 /* X9 */] <-0.12006058f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14499149f ? 
                            1.0f : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.6079779f ? 
                             (data[25 /* X26 */] <-0.11218504f ? 
                                0.0f : 
                                1.0f) : 
                             (data[3 /* X4 */] <-0.33773395f ? 
                                 (data[29 /* X30 */] <0.22012542f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2104715f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.38913265f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.24227531f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[4 /* X5 */] <0.22163565f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7207911f ? 
             (data[16 /* X17 */] <-0.35483506f ? 
                 (data[2 /* X3 */] <-0.29387626f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.041228764f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18069766f ? 
                             (data[16 /* X17 */] <-1.0066396f ? 
                                1.0f : 
                                0.0f) : 
                             (data[8 /* X9 */] <0.27504846f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[20 /* X21 */] <0.07983383f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.09937715f ? 
                         (data[14 /* X15 */] <0.106031165f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4657552f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20741586f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.755f ? 
                                     (data[2 /* X3 */] <-0.49184585f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1240798f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (data[25 /* X26 */] <-0.695598f ? 
                                             (data[9 /* X10 */] <-0.18679546f ? 
                                                0.0f : 
                                                1.0f) : 
                                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.809522f ? 
                                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28718182f ? 
                                                    0.0f : 
                                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22209303f ? 
                                                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2183205f ? 
                                                            0.0f : 
                                                            1.0f) : 
                                                        1.0f)) : 
                                                 (data[29 /* X30 */] <0.17090937f ? 
                                                    0.0f : 
                                                    1.0f)))) : 
                                    1.0f) : 
                                 (data[33 /* X34 */] <-0.35f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (data[27 /* X28 */] <-0.37167704f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_11_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103946194f ? 
         (data[10 /* X11 */] <-1.0669539f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11028638f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.21237929f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28538415f ? 
             (data[30 /* X31 */] <0.13854471f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1339701f ? 
                     (data[14 /* X15 */] <0.15720867f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41060156f ? 
                     (data[32 /* X33 */] <-0.68678993f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.3712627f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12828904f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13946114f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5168585f ? 
                 (data[19 /* X20 */] <-0.49951598f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26883972f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18635358f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07739863f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.30487454f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1165808f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.37399364f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.098748885f ? 
         (data[32 /* X33 */] <-0.88627493f ? 
            1.0f : 
             (data[26 /* X27 */] <0.10081384f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1015625f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.052590765f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.18819179f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12576449f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28468558f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009051617f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21958552f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25177112f ? 
                 (data[1 /* X2 */] <-0.39097667f ? 
                     (data[28 /* X29 */] <0.3275346f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.24382707f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25101596f ? 
                            0.0f : 
                             (data[11 /* X12 */] <0.12507683f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046126124f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26973972f ? 
             (data[12 /* X13 */] <0.1413687f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21176633f ? 
                     (data[27 /* X28 */] <-0.7916168f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.12756422f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21536568f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22664045f ? 
                         (data[5 /* X6 */] <0.20929882f ? 
                             (data[32 /* X33 */] <-0.154548f ? 
                                 (data[3 /* X4 */] <-0.3712627f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[25 /* X26 */] <-0.26934072f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.16656977f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.163487f ? 
                                         (data[22 /* X23 */] <0.13230227f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.50639135f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.05025841f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08955109f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.34447142f ? 
             (data[11 /* X12 */] <-0.68335307f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.2893281f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8503015f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0053330706f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.12820031f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2593844f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2277102f ? 
             (data[12 /* X13 */] <0.120349325f ? 
                 (data[19 /* X20 */] <-0.28763744f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49222812f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.09458644f ? 
                        1.0f : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.24539903f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22898455f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.080278486f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.736275f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25961685f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.187393f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.17724939f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[15 /* X16 */] <0.09069081f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.14199188f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[29 /* X30 */] <0.06284915f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20886758f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2817031f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.26688516f ? 
             (data[25 /* X26 */] <-0.60356516f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04527639f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32197478f ? 
                     (data[4 /* X5 */] <0.16940442f ? 
                         (data[8 /* X9 */] <-0.016575122f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2893169f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.092945404f ? 
                         (data[34 /* X35 */] <0.0f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09912967f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11281889f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.07725305f ? 
             (data[17 /* X18 */] <-0.23026793f ? 
                 (data[12 /* X13 */] <0.19324239f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.9771484f ? 
             (data[8 /* X9 */] <0.09623706f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23213895f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.12791532f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.015254503f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.3519073f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41315502f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21258079f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1532814f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.09848087f ? 
             (data[25 /* X26 */] <-0.18502513f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.36466604f ? 
                 (data[9 /* X10 */] <-0.14920026f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051050443f ? 
                         (data[8 /* X9 */] <-0.18296021f ? 
                            1.0f : 
                             (data[0 /* X1 */] <0.06719965f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23245971f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[25 /* X26 */] <-0.09151358f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3036248f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.288539f ? 
                             (data[23 /* X24 */] <0.08870075f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[9 /* X10 */] <0.12590218f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.119967334f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43198434f ? 
             (data[17 /* X18 */] <-0.20761578f ? 
                 (data[14 /* X15 */] <0.1338379f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.57559824f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.6741823f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25574633f ? 
             (data[5 /* X6 */] <0.08105687f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.04397758f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.109375f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21917266f ? 
                         (data[13 /* X14 */] <0.09384526f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.117002256f ? 
                                 (data[5 /* X6 */] <0.10162475f ? 
                                     (data[9 /* X10 */] <-0.051232357f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[19 /* X20 */] <-1.1335015f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.05630519f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2981845f ? 
                     (data[16 /* X17 */] <-0.19511983f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22763212f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6073418f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2512564f ? 
             (data[1 /* X2 */] <-0.87457675f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.033920642f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.64045364f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23743363f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.31025648f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[15 /* X16 */] <0.15406406f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4190197f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.04586583f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[35 /* X36 */] <-0.25732422f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.300506f ? 
             (data[28 /* X29 */] <0.08660788f ? 
                 (data[28 /* X29 */] <0.07132097f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8828125f ? 
                     (data[27 /* X28 */] <-0.20548353f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22174467f ? 
                             (data[16 /* X17 */] <-0.9684778f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.09667778f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.142f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[31 /* X32 */] <0.12482578f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1596338f ? 
                                     (data[24 /* X25 */] <-0.48888636f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)))) : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.0703125f ? 
                 (data[31 /* X32 */] <0.15347551f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.14359266f ? 
                     (data[7 /* X8 */] <0.042454503f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.49490413f ? 
         (data[15 /* X16 */] <0.09610072f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5158203f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.359375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[29 /* X30 */] <0.06284915f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.20661089f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13770697f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.4372817f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5958799f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13946114f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.32368544f ? 
             (data[26 /* X27 */] <-0.06877367f ? 
                 (data[0 /* X1 */] <-0.070806734f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.12822938f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.19086511f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0017803374f ? 
                     (data[10 /* X11 */] <-0.40183353f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09016335f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.46292016f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6305136f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33202493f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71875f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04024999f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[14 /* X15 */] <0.2527565f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.08229954f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.65225863f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.28933772f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2019371f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.5742815f ? 
                            1.0f : 
                             (data[11 /* X12 */] <-0.19429956f ? 
                                 (data[12 /* X13 */] <0.20219718f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[27 /* X28 */] <-0.3227966f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33427593f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13478853f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09781642f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.5061442f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13596252f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.09374658f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32798815f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[14 /* X15 */] <0.17951714f ? 
                 (data[28 /* X29 */] <0.06935992f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.10809267f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.029164687f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1623872f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[24 /* X25 */] <-0.017632423f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9039258f ? 
                             (data[29 /* X30 */] <0.13341825f ? 
                                 (data[19 /* X20 */] <-0.6865995f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[24 /* X25 */] <0.17988904f ? 
                                     (data[21 /* X22 */] <0.18704666f ? 
                                         (data[14 /* X15 */] <0.22669123f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12820031f ? 
        0.008333334f : 
         (data[24 /* X25 */] <0.029088596f ? 
             (data[4 /* X5 */] <0.14964125f ? 
                 (data[33 /* X34 */] <-0.171875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29366648f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                     (data[10 /* X11 */] <0.015871517f ? 
                         (data[14 /* X15 */] <0.1062179f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.091889046f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.06773715f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28411037f ? 
                             (data[24 /* X25 */] <0.08434869f ? 
                                 (data[11 /* X12 */] <-0.67477316f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.24765773f ? 
         (data[17 /* X18 */] <-0.37912488f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.119782336f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21071665f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09375f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16576627f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21839759f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1854251f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20808226f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X5 */] <0.081528895f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.47219703f ? 
                 (data[12 /* X13 */] <0.07836245f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3256875f ? 
                         (data[7 /* X8 */] <0.067699954f ? 
                             (data[3 /* X4 */] <-0.3361577f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08587205f ? 
                                     (data[2 /* X3 */] <-0.47956145f ? 
                                         (data[22 /* X23 */] <0.14806202f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                             (data[8 /* X9 */] <-0.11260279f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.70625f ? 
                                    0.0f : 
                                     (data[30 /* X31 */] <0.16071318f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[33 /* X34 */] <-0.15625f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28927967f ? 
         (data[25 /* X26 */] <-0.43110058f ? 
             (data[8 /* X9 */] <-0.22654557f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.0392675f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28814492f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
                         (data[28 /* X29 */] <0.07504173f ? 
                             (data[14 /* X15 */] <0.21151227f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2001592f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.20177022f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0029034505f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                             (data[3 /* X4 */] <-0.57419646f ? 
                                 (data[24 /* X25 */] <-0.1319615f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[19 /* X20 */] <-0.8361285f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10556813f ? 
                     (data[31 /* X32 */] <0.16566081f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.42939737f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.30832773f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23521273f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.30569f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34792194f ? 
             (data[30 /* X31 */] <0.13928309f ? 
                 (data[27 /* X28 */] <-0.3325727f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.098745674f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.08804321f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.044793844f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.60375696f ? 
         (data[4 /* X5 */] <0.16940442f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.76953125f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09779597f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.5132829f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5751806f ? 
                     (data[23 /* X24 */] <0.103946194f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.35586104f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1675605f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3193788f ? 
                                     (data[33 /* X34 */] <-0.6162233f ? 
                                         (data[14 /* X15 */] <0.15383047f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                             (data[26 /* X27 */] <-0.14963207f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.092945404f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.14370437f ? 
         (data[15 /* X16 */] <0.055139963f ? 
             (data[35 /* X36 */] <-0.1506836f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6086961f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17373085f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10017909f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.48989487f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26015455f ? 
                         (data[12 /* X13 */] <0.19524093f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[8 /* X9 */] <0.08126261f ? 
             (data[6 /* X7 */] <0.17323041f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.060297675f ? 
                     (data[34 /* X35 */] <-0.890625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.055018716f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.5125f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5360534f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[26 /* X27 */] <-0.32993844f ? 
                 (data[12 /* X13 */] <0.34716147f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.096085556f ? 
                     (data[20 /* X21 */] <0.12516616f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04905076f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6164029f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09458644f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.49296874f ? 
                 (data[21 /* X22 */] <0.20788562f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15289247f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.34375f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.19075096f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2470136f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6033373f ? 
         (data[15 /* X16 */] <0.039683074f ? 
             (data[28 /* X29 */] <0.11053465f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.61126417f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.07068201f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31806263f ? 
                     (data[12 /* X13 */] <0.080278486f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18556002f ? 
                             (data[13 /* X14 */] <0.14411736f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                                    0.0f : 
                                     (data[29 /* X30 */] <0.13977632f ? 
                                        1.0f : 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13540243f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f) : 
                             (data[17 /* X18 */] <-0.32022932f ? 
                                1.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.09642775f ? 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28070417f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                     (data[6 /* X7 */] <0.12116621f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.04906611f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[19 /* X20 */] <-0.29722452f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (data[8 /* X9 */] <-0.15666479f ? 
             (data[9 /* X10 */] <-0.09373315f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.036820717f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97909284f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.103946194f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25371304f ? 
                         (data[33 /* X34 */] <-0.25f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23321238f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.2157067f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))) : 
         (data[21 /* X22 */] <0.2364699f ? 
             (data[17 /* X18 */] <-0.21732385f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.14955059f ? 
                     (data[21 /* X22 */] <0.17036884f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.4345359f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34885412f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.51845807f ? 
             (data[35 /* X36 */] <-0.46679688f ? 
                 (data[18 /* X19 */] <-0.010620261f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.068429016f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7862276f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.54279387f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17823367f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.103946194f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.058162767f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.4314689f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
             (data[9 /* X10 */] <-0.36112782f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21189415f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33319584f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55878127f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18270405f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4375f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22012542f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.007481685f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[30 /* X31 */] <0.19612198f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35206962f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[26 /* X27 */] <-0.03146442f ? 
            1.0f : 
             (data[21 /* X22 */] <0.110533886f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.10095989f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12297927f ? 
             (data[35 /* X36 */] <-0.1506836f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.032870658f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09493308f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1484375f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18656424f ? 
                     (data[19 /* X20 */] <-0.8680472f ? 
                         (data[25 /* X26 */] <0.08917069f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30644727f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19946252f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22503571f ? 
                         (data[21 /* X22 */] <0.15951061f ? 
                            1.0f : 
                             (data[29 /* X30 */] <0.17721772f ? 
                                0.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5980469f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44746244f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[32 /* X33 */] <0.09772675f ? 
                                        1.0f : 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24452917f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.026133426f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15744445f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13179444f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12457625f ? 
         (data[11 /* X12 */] <-0.58682936f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X5 */] <0.1330543f ? 
             (data[9 /* X10 */] <-0.14905618f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.5549372f ? 
                 (data[14 /* X15 */] <0.10196867f ? 
                     (data[18 /* X19 */] <-0.0024422135f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6310282f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3593321f ? 
                             (data[27 /* X28 */] <-0.49578995f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29256877f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20774907f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.34791857f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21005848f ? 
         (data[15 /* X16 */] <0.039683074f ? 
             (data[8 /* X9 */] <0.029683942f ? 
                 (data[1 /* X2 */] <-0.39097667f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[24 /* X25 */] <-0.6753893f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24135809f ? 
                     (data[1 /* X2 */] <-0.40196756f ? 
                         (data[10 /* X11 */] <-0.10731709f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.17325206f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05632442f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[3 /* X4 */] <-0.7770603f ? 
                            1.0f : 
                             (data[10 /* X11 */] <-0.33233932f ? 
                                 (data[13 /* X14 */] <0.13596562f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[4 /* X5 */] <0.12133309f ? 
                                     (data[12 /* X13 */] <0.13997376f ? 
                                         (data[21 /* X22 */] <0.13103582f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f)))) : 
                     (data[23 /* X24 */] <0.10743136f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3403296f ? 
                             (data[24 /* X25 */] <-0.5535667f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2101835f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10604086f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.006982489f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24291424f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13333812f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.036370587f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X9 */] <-0.14002651f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.15065087f ? 
                         (data[22 /* X23 */] <0.16194282f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.10745333f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7054489f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2632979f ? 
                     (data[24 /* X25 */] <0.20841487f ? 
                         (data[4 /* X5 */] <0.1637578f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[27 /* X28 */] <-0.3545689f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11314177f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096167125f ? 
        0.007936508f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7862276f ? 
             (data[4 /* X5 */] <0.09811584f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.12791532f ? 
                     (data[34 /* X35 */] <-0.71875f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.54279387f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.9132063f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.6085315f ? 
        0.5f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.39597508f ? 
                 (data[4 /* X5 */] <0.11925379f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18709706f ? 
                         (data[22 /* X23 */] <0.104106106f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.3968654f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.102167785f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.102659315f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22200944f ? 
                 (data[7 /* X8 */] <0.08284722f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.047693297f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26757812f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.08391941f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21442656f ? 
                 (data[30 /* X31 */] <0.08699133f ? 
                     (data[1 /* X2 */] <-0.5601113f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.083679974f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980071f ? 
                             (data[3 /* X4 */] <-0.20894368f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.15705444f ? 
                                    1.0f : 
                                     (data[21 /* X22 */] <0.110872336f ? 
                                         (data[6 /* X7 */] <0.20288832f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.38020086f ? 
                                            0.0f : 
                                            1.0f)))) : 
                             (data[30 /* X31 */] <0.18453915f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-1.1935633f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.125f ? 
                     (data[10 /* X11 */] <-0.089860775f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.9039258f ? 
                             (data[1 /* X2 */] <-0.18214935f ? 
                                 (data[5 /* X6 */] <0.22957793f ? 
                                    0.0f : 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.12338623f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29348245f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4111016f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.43372223f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23909424f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.3454144f ? 
                        0.0f : 
                         (data[1 /* X2 */] <0.42812017f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24195518f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30035275f ? 
         (data[13 /* X14 */] <0.09964941f ? 
            1.0f : 
             (data[12 /* X13 */] <0.08411057f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04338383f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1381857f ? 
                 (data[35 /* X36 */] <-0.146875f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26998386f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.18029317f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.18709706f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.076628916f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10421077f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2552344f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.125f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19840568f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.03491631f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.68910533f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.48741502f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6120237f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.107498504f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18688051f ? 
         (data[3 /* X4 */] <-0.6692703f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17818464f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.087599434f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.079102196f ? 
                 (data[22 /* X23 */] <0.12724079f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.5546548f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.622941f ? 
                            0.0f : 
                             (data[26 /* X27 */] <-0.33265185f ? 
                                 (data[11 /* X12 */] <-0.20947197f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22474131f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.124249764f ? 
                                        1.0f : 
                                         (data[0 /* X1 */] <-0.035947185f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[33 /* X34 */] <0.15f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                 (data[13 /* X14 */] <0.13853736f ? 
                     (data[3 /* X4 */] <-0.11763923f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.3553955f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18612422f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                 (data[25 /* X26 */] <-0.26074627f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18507752f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.10869413f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29059675f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.40021002f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101101935f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41292655f ? 
                 (data[10 /* X11 */] <-0.6691275f ? 
                     (data[1 /* X2 */] <-0.006294766f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17463551f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.057048302f ? 
                             (data[25 /* X26 */] <0.12354849f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.19151758f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.1218499f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (data[9 /* X10 */] <-0.1674972f ? 
             (data[2 /* X3 */] <-0.43648914f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0053330706f ? 
                     (data[23 /* X24 */] <0.048508223f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.65625f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.145454f ? 
                                 (data[16 /* X17 */] <-0.76559675f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18236141f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.049972728f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.4965711f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[33 /* X34 */] <-0.453125f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1677265f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30408368f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12624505f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30761075f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.120583855f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[30 /* X31 */] <0.23704596f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30272263f ? 
                                 (data[26 /* X27 */] <-0.24582304f ? 
                                    1.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22608359f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                     (data[18 /* X19 */] <-0.12107963f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2554274f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27372286f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50817096f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5782381f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[2 /* X3 */] <0.4175281f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.056724906f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16950126f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31312773f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.048013695f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41624662f ? 
                     (data[15 /* X16 */] <0.041228764f ? 
                         (data[32 /* X33 */] <-0.5227275f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.31292412f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12566048f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1110571f ? 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
                                        0.0f : 
                                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11964119f ? 
                                             (data[20 /* X21 */] <0.1015581f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.10166718f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3155885f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.51018375f ? 
             (data[26 /* X27 */] <-0.26210344f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.04624132f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17578393f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <0.09811309f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1875f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.22174467f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6664189f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20701097f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.31015626f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.30371854f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24925852f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21434592f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.5523776f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10430218f ? 
                     (data[33 /* X34 */] <-0.015625f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.25879282f ? 
                             (data[31 /* X32 */] <0.08673456f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[29 /* X30 */] <0.22043063f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22466438f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[4 /* X5 */] <0.107291594f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12029806f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49256992f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.21820998f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.328125f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.17400952f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.124042206f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28621888f ? 
             (data[9 /* X10 */] <-0.60086095f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2676527f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.1245642f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17929384f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19734335f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.17034312f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16544232f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.012556662f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22867419f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12347924f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.00546875f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                         (data[27 /* X28 */] <-0.44010967f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09140162f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2123501f ? 
                                     (data[18 /* X19 */] <0.10202575f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.33450246f ? 
                     (data[5 /* X6 */] <0.2276191f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.2843076f ? 
                            1.0f : 
                             (data[5 /* X6 */] <0.28502253f ? 
                                 (data[9 /* X10 */] <0.3755906f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.3282741f ? 
                 (data[0 /* X1 */] <-0.041443672f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <1.0286022f ? 
         (data[8 /* X9 */] <-0.13503502f ? 
             (data[11 /* X12 */] <-0.362673f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04457444f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.85859376f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.12822658f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32127762f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5100402f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5374992f ? 
                            0.0f : 
                             (data[9 /* X10 */] <0.12845877f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.12127056f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}



