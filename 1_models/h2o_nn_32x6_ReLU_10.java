/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:48:48.347+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_10 > h2o_nn_32x6_ReLU_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_10", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-431802438667019056L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3950081307152428;
      sa[1] = 0.4236385235536846;
      sa[2] = 0.5703670429673384;
      sa[3] = 0.49329935926269314;
      sa[4] = 0.581277728216031;
      sa[5] = 0.42013049139383557;
      sa[6] = 0.481066600465582;
      sa[7] = 0.49133212906067963;
      sa[8] = 0.611394177820256;
      sa[9] = 0.35179194329985963;
      sa[10] = 0.47621464639532635;
      sa[11] = 0.6844520058216055;
      sa[12] = 0.5745008607747216;
      sa[13] = 0.3937844161465311;
      sa[14] = 0.648334559070487;
      sa[15] = 0.521195077161731;
      sa[16] = 0.4387641714373695;
      sa[17] = 0.6080525754296789;
      sa[18] = 0.31553613975522865;
      sa[19] = 0.6097186663593183;
      sa[20] = 0.5529273711393774;
      sa[21] = 0.5035255824338664;
      sa[22] = 0.5684405228529389;
      sa[23] = 0.46180621071260536;
      sa[24] = 0.4823453214753834;
      sa[25] = 0.526880639637727;
      sa[26] = 0.5231836404843396;
      sa[27] = 0.5225798232194857;
      sa[28] = 0.5067371543940458;
      sa[29] = 0.44465557938187117;
      sa[30] = 0.4882551449004704;
      sa[31] = 0.411560128099652;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.049928332831522246;
      sa[1] = -0.05016873844329883;
      sa[2] = -0.1036194892965947;
      sa[3] = -0.04225922646762863;
      sa[4] = -0.022083797960739848;
      sa[5] = 0.04667133592386825;
    }
  }
}
class h2o_nn_32x6_ReLU_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.05193629f;
      sa[1] = 0.073242985f;
      sa[2] = 0.06800693f;
      sa[3] = 0.12428677f;
      sa[4] = -0.09432526f;
      sa[5] = -0.21307932f;
      sa[6] = -0.04080029f;
      sa[7] = 0.31674013f;
      sa[8] = 0.064941145f;
      sa[9] = -0.17561668f;
      sa[10] = -0.07974592f;
      sa[11] = -0.2611394f;
      sa[12] = 0.004504442f;
      sa[13] = -0.35139295f;
      sa[14] = -0.1977695f;
      sa[15] = -0.077143505f;
      sa[16] = 0.04696442f;
      sa[17] = 0.124022596f;
      sa[18] = -0.13500945f;
      sa[19] = 0.39803562f;
      sa[20] = 0.1767296f;
      sa[21] = -0.2819816f;
      sa[22] = 0.22666073f;
      sa[23] = -0.15353186f;
      sa[24] = 0.22470963f;
      sa[25] = 0.24953777f;
      sa[26] = -0.17884578f;
      sa[27] = 0.40111125f;
      sa[28] = 0.1729837f;
      sa[29] = -0.23735775f;
      sa[30] = -0.20747471f;
      sa[31] = 0.105456926f;
      sa[32] = 0.17875484f;
      sa[33] = -0.14964077f;
      sa[34] = 0.09623974f;
      sa[35] = -0.09125725f;
      sa[36] = 0.07979483f;
      sa[37] = 0.16169155f;
      sa[38] = -0.08755749f;
      sa[39] = 0.4608042f;
      sa[40] = 0.08419856f;
      sa[41] = 0.006433515f;
      sa[42] = -0.11446999f;
      sa[43] = 0.05533976f;
      sa[44] = 0.25590053f;
      sa[45] = -0.30335024f;
      sa[46] = 0.02704121f;
      sa[47] = 0.081603654f;
      sa[48] = 0.2242079f;
      sa[49] = 0.33666852f;
      sa[50] = 0.22767168f;
      sa[51] = -0.3041608f;
      sa[52] = -0.09852313f;
      sa[53] = 0.17389938f;
      sa[54] = 0.19645183f;
      sa[55] = 0.12281133f;
      sa[56] = -0.19103032f;
      sa[57] = -0.28466576f;
      sa[58] = 0.22206952f;
      sa[59] = -0.28876245f;
      sa[60] = -0.18244387f;
      sa[61] = 0.1852417f;
      sa[62] = 0.17165826f;
      sa[63] = -0.36328527f;
      sa[64] = 0.12348478f;
      sa[65] = 0.13522752f;
      sa[66] = 0.06305238f;
      sa[67] = 0.06306301f;
      sa[68] = 0.065349124f;
      sa[69] = -0.25712037f;
      sa[70] = -0.08220204f;
      sa[71] = 0.31143796f;
      sa[72] = -0.2401927f;
      sa[73] = 0.17500296f;
      sa[74] = -0.10791325f;
      sa[75] = 0.012153628f;
      sa[76] = -0.18315636f;
      sa[77] = -0.042272657f;
      sa[78] = 0.009341124f;
      sa[79] = 0.26571304f;
      sa[80] = -0.3244209f;
      sa[81] = 0.11157983f;
      sa[82] = 0.056056023f;
      sa[83] = 0.13618547f;
      sa[84] = -0.038407687f;
      sa[85] = -0.16636622f;
      sa[86] = 0.15191641f;
      sa[87] = 0.3237683f;
      sa[88] = 0.18487899f;
      sa[89] = 0.10084967f;
      sa[90] = -0.059394374f;
      sa[91] = -0.09493136f;
      sa[92] = 0.027505474f;
      sa[93] = -0.25416848f;
      sa[94] = -0.12749806f;
      sa[95] = -0.13459839f;
      sa[96] = 0.14267753f;
      sa[97] = 0.13391735f;
      sa[98] = 0.11630594f;
      sa[99] = 0.043579347f;
      sa[100] = -0.16804981f;
      sa[101] = -0.3252805f;
      sa[102] = -0.30270717f;
      sa[103] = -0.068794884f;
      sa[104] = -0.11961068f;
      sa[105] = -0.07751482f;
      sa[106] = -0.23924306f;
      sa[107] = 0.23730195f;
      sa[108] = 0.175294f;
      sa[109] = -0.10155347f;
      sa[110] = -0.25367802f;
      sa[111] = 0.039563302f;
      sa[112] = 0.101828754f;
      sa[113] = 0.08409574f;
      sa[114] = -0.17312041f;
      sa[115] = -0.08385019f;
      sa[116] = -0.20553645f;
      sa[117] = 0.03734785f;
      sa[118] = -0.2926061f;
      sa[119] = -0.03874321f;
      sa[120] = 0.17241904f;
      sa[121] = 0.29769242f;
      sa[122] = 0.2507125f;
      sa[123] = 0.39599773f;
      sa[124] = 0.29424474f;
      sa[125] = 0.2943601f;
      sa[126] = -0.22976941f;
      sa[127] = -0.4580694f;
      sa[128] = 0.0024945745f;
      sa[129] = 0.082224056f;
      sa[130] = -0.24706268f;
      sa[131] = 0.31852275f;
      sa[132] = 0.15587208f;
      sa[133] = -0.2882882f;
      sa[134] = 0.09635898f;
      sa[135] = -0.29756033f;
      sa[136] = -0.27316862f;
      sa[137] = -0.04882988f;
      sa[138] = 0.13776578f;
      sa[139] = 0.030226868f;
      sa[140] = -0.076507956f;
      sa[141] = -0.08887808f;
      sa[142] = 0.031065468f;
      sa[143] = -0.22343114f;
      sa[144] = 0.27808356f;
      sa[145] = -0.1997061f;
      sa[146] = -0.3451186f;
      sa[147] = 0.18628186f;
      sa[148] = 0.16281259f;
      sa[149] = 0.1211332f;
      sa[150] = 0.2903306f;
      sa[151] = -0.1322801f;
      sa[152] = -0.058293518f;
      sa[153] = 0.31081495f;
      sa[154] = 0.36608437f;
      sa[155] = -0.098610766f;
      sa[156] = 0.115763165f;
      sa[157] = -0.25574633f;
      sa[158] = 0.10211108f;
      sa[159] = 0.24515772f;
      sa[160] = -0.022545552f;
      sa[161] = 0.1808357f;
      sa[162] = 0.2639466f;
      sa[163] = -0.22696461f;
      sa[164] = 0.24970347f;
      sa[165] = 0.007431741f;
      sa[166] = -0.0042679035f;
      sa[167] = 0.05064269f;
      sa[168] = 0.051740017f;
      sa[169] = 0.30795312f;
      sa[170] = 0.14307274f;
      sa[171] = -0.122149296f;
      sa[172] = -0.09993627f;
      sa[173] = -0.15823793f;
      sa[174] = -0.113861024f;
      sa[175] = -0.20395872f;
      sa[176] = -0.0723751f;
      sa[177] = 0.028276306f;
      sa[178] = -0.10944028f;
      sa[179] = 0.12593022f;
      sa[180] = 0.027505836f;
      sa[181] = -0.30621943f;
      sa[182] = -0.21256387f;
      sa[183] = 0.22003445f;
      sa[184] = 0.2882866f;
      sa[185] = 0.1483203f;
      sa[186] = -0.31626296f;
      sa[187] = 0.09445263f;
      sa[188] = -0.05907991f;
      sa[189] = 0.13315077f;
      sa[190] = 0.120579086f;
      sa[191] = -0.19685446f;
      sa[192] = -0.11444884f;
      sa[193] = 0.18731023f;
      sa[194] = 0.087289035f;
      sa[195] = 0.28527665f;
      sa[196] = 0.20342317f;
      sa[197] = -0.036512222f;
      sa[198] = 0.13085975f;
      sa[199] = -0.073841356f;
      sa[200] = 0.066036575f;
      sa[201] = -0.22056256f;
      sa[202] = 0.12143497f;
      sa[203] = 0.048897088f;
      sa[204] = -0.21346344f;
      sa[205] = 0.20771721f;
      sa[206] = 0.30755332f;
      sa[207] = -0.038369857f;
      sa[208] = -0.20838916f;
      sa[209] = 0.013743792f;
      sa[210] = -0.27022278f;
      sa[211] = -0.19770472f;
      sa[212] = 0.3093997f;
      sa[213] = -0.4395688f;
      sa[214] = 0.0014645153f;
      sa[215] = 0.019117195f;
      sa[216] = 0.061352983f;
      sa[217] = 0.19181436f;
      sa[218] = -0.04338663f;
      sa[219] = 0.4806261f;
      sa[220] = -0.17835031f;
      sa[221] = 0.07589271f;
      sa[222] = 0.23970383f;
      sa[223] = 0.07720737f;
      sa[224] = 0.08624395f;
      sa[225] = 0.22788033f;
      sa[226] = -0.15871583f;
      sa[227] = 0.017238813f;
      sa[228] = 0.14972948f;
      sa[229] = 0.09905246f;
      sa[230] = 0.26298597f;
      sa[231] = -0.29651704f;
      sa[232] = -0.1968052f;
      sa[233] = 0.116597295f;
      sa[234] = -0.029394886f;
      sa[235] = -0.11383269f;
      sa[236] = 0.04368558f;
      sa[237] = -0.14135641f;
      sa[238] = -0.13681528f;
      sa[239] = 0.14816347f;
      sa[240] = 0.12134936f;
      sa[241] = -0.23578134f;
      sa[242] = -0.17166f;
      sa[243] = -0.27619618f;
      sa[244] = -0.15832026f;
      sa[245] = -0.08539158f;
      sa[246] = -0.21121061f;
      sa[247] = -0.09321584f;
      sa[248] = 0.35723278f;
      sa[249] = 0.123097666f;
      sa[250] = -0.054982767f;
      sa[251] = -0.22588652f;
      sa[252] = -0.30166268f;
      sa[253] = -0.16057126f;
      sa[254] = -0.13241076f;
      sa[255] = 0.08951179f;
      sa[256] = -0.17004476f;
      sa[257] = 0.37380633f;
      sa[258] = -0.2095444f;
      sa[259] = -0.22980714f;
      sa[260] = -0.016390769f;
      sa[261] = -0.11562733f;
      sa[262] = -0.0684019f;
      sa[263] = 0.32744363f;
      sa[264] = -0.102809526f;
      sa[265] = 0.18663576f;
      sa[266] = -0.21071337f;
      sa[267] = -0.17683756f;
      sa[268] = 0.2647218f;
      sa[269] = -0.096614346f;
      sa[270] = -0.33098152f;
      sa[271] = 0.280478f;
      sa[272] = -0.09781729f;
      sa[273] = -0.16154115f;
      sa[274] = 0.082783826f;
      sa[275] = -0.04537528f;
      sa[276] = 0.20733154f;
      sa[277] = -0.14257911f;
      sa[278] = -0.23077834f;
      sa[279] = 0.20193897f;
      sa[280] = -0.11051437f;
      sa[281] = 0.2887255f;
      sa[282] = -0.0021571815f;
      sa[283] = 0.0102966875f;
      sa[284] = -0.060248394f;
      sa[285] = -0.08578329f;
      sa[286] = 0.15909185f;
      sa[287] = -0.043813884f;
      sa[288] = -0.21052767f;
      sa[289] = -0.110500336f;
      sa[290] = 0.017438123f;
      sa[291] = 0.24303257f;
      sa[292] = 0.16757098f;
      sa[293] = 0.0023131794f;
      sa[294] = 0.19856286f;
      sa[295] = 0.30262375f;
      sa[296] = 0.095799856f;
      sa[297] = 0.21938169f;
      sa[298] = 0.1040498f;
      sa[299] = -0.045134466f;
      sa[300] = -0.024296544f;
      sa[301] = 0.002036307f;
      sa[302] = 0.20235065f;
      sa[303] = 0.13811654f;
      sa[304] = -0.14968765f;
      sa[305] = 0.057213522f;
      sa[306] = 0.18502818f;
      sa[307] = -0.33759004f;
      sa[308] = -0.008345404f;
      sa[309] = 0.09395054f;
      sa[310] = 0.30782732f;
      sa[311] = 0.41930467f;
      sa[312] = -0.07427031f;
      sa[313] = -0.08884235f;
      sa[314] = -0.11365498f;
      sa[315] = -0.08985172f;
      sa[316] = -0.14495057f;
      sa[317] = -0.1934816f;
      sa[318] = 0.083850704f;
      sa[319] = 0.27140328f;
      sa[320] = -0.05447118f;
      sa[321] = -0.005762038f;
      sa[322] = 0.303771f;
      sa[323] = -0.14441395f;
      sa[324] = -0.018453399f;
      sa[325] = 0.08227614f;
      sa[326] = -0.3396573f;
      sa[327] = 0.028483344f;
      sa[328] = -0.1623924f;
      sa[329] = 0.080097385f;
      sa[330] = -0.28071737f;
      sa[331] = -0.1849136f;
      sa[332] = -0.24695008f;
      sa[333] = -0.026788019f;
      sa[334] = -0.09021071f;
      sa[335] = 0.23382512f;
      sa[336] = -0.26180282f;
      sa[337] = -0.2741869f;
      sa[338] = 0.20951779f;
      sa[339] = -0.59092623f;
      sa[340] = -0.41610453f;
      sa[341] = -0.4710801f;
      sa[342] = 0.3570206f;
      sa[343] = 0.101301014f;
      sa[344] = -0.22582556f;
      sa[345] = 0.15535986f;
      sa[346] = 0.12963092f;
      sa[347] = -0.37224284f;
      sa[348] = 0.15212858f;
      sa[349] = -0.26930934f;
      sa[350] = -0.1920639f;
      sa[351] = 0.02144443f;
      sa[352] = 0.10669002f;
      sa[353] = -0.090470724f;
      sa[354] = -0.090987384f;
      sa[355] = -0.14860913f;
      sa[356] = -0.088611364f;
      sa[357] = 0.22280742f;
      sa[358] = -0.51325905f;
      sa[359] = 0.0013025586f;
      sa[360] = -0.119255655f;
      sa[361] = -0.09305824f;
      sa[362] = -0.021157233f;
      sa[363] = 0.05149726f;
      sa[364] = -0.060626596f;
      sa[365] = -0.15218547f;
      sa[366] = 0.09996497f;
      sa[367] = -0.16406679f;
      sa[368] = -0.38466707f;
      sa[369] = 0.34156734f;
      sa[370] = -0.21123974f;
      sa[371] = 0.49233428f;
      sa[372] = -0.00795501f;
      sa[373] = 0.31317756f;
      sa[374] = -0.12630816f;
      sa[375] = -0.2792485f;
      sa[376] = -0.2402721f;
      sa[377] = -0.19659385f;
      sa[378] = 0.22255191f;
      sa[379] = 0.14493647f;
      sa[380] = -0.116158485f;
      sa[381] = -0.07283954f;
      sa[382] = -0.013761455f;
      sa[383] = -0.10448869f;
      sa[384] = -0.00844192f;
      sa[385] = -0.016286388f;
      sa[386] = -0.3150542f;
      sa[387] = -0.13788551f;
      sa[388] = 0.06260002f;
      sa[389] = -0.030889302f;
      sa[390] = 0.0020419913f;
      sa[391] = -0.12993628f;
      sa[392] = 0.1667504f;
      sa[393] = 0.3049484f;
      sa[394] = -0.074347734f;
      sa[395] = 0.3580733f;
      sa[396] = 0.25510097f;
      sa[397] = -0.44772515f;
      sa[398] = 0.21524948f;
      sa[399] = 0.448851f;
      sa[400] = 0.35212246f;
      sa[401] = 0.5047645f;
      sa[402] = 0.040211122f;
      sa[403] = 0.2978805f;
      sa[404] = 0.22319771f;
      sa[405] = -0.3003921f;
      sa[406] = -0.03343249f;
      sa[407] = 0.2600647f;
      sa[408] = -0.13815416f;
      sa[409] = 0.014551009f;
      sa[410] = 0.026636543f;
      sa[411] = 0.13290769f;
      sa[412] = -0.14181027f;
      sa[413] = 0.033246614f;
      sa[414] = 0.13731682f;
      sa[415] = 0.32629815f;
      sa[416] = -0.17740028f;
      sa[417] = 0.08319539f;
      sa[418] = 0.068598256f;
      sa[419] = 0.20998697f;
      sa[420] = 0.30244717f;
      sa[421] = 0.27012157f;
      sa[422] = 0.28892678f;
      sa[423] = -0.48204553f;
      sa[424] = 0.080693334f;
      sa[425] = -0.05480183f;
      sa[426] = -0.14438164f;
      sa[427] = 0.075178385f;
      sa[428] = 0.052893475f;
      sa[429] = -0.363765f;
      sa[430] = 0.17908283f;
      sa[431] = -0.040528025f;
      sa[432] = -0.11517105f;
      sa[433] = 0.15629098f;
      sa[434] = 0.44474506f;
      sa[435] = -0.020676801f;
      sa[436] = -0.26181203f;
      sa[437] = -0.23137781f;
      sa[438] = 0.028686633f;
      sa[439] = 0.023828303f;
      sa[440] = 0.25495943f;
      sa[441] = -0.20538488f;
      sa[442] = 0.11386756f;
      sa[443] = 0.07708214f;
      sa[444] = -0.20170262f;
      sa[445] = 0.07645275f;
      sa[446] = 0.20937388f;
      sa[447] = 0.04338512f;
      sa[448] = 0.20085584f;
      sa[449] = 0.30262813f;
      sa[450] = -0.1691769f;
      sa[451] = 0.09214516f;
      sa[452] = 0.16798268f;
      sa[453] = -0.06659781f;
      sa[454] = -0.10969257f;
      sa[455] = -0.05068467f;
      sa[456] = 0.049310252f;
      sa[457] = 0.09120258f;
      sa[458] = -0.2974741f;
      sa[459] = 0.46566027f;
      sa[460] = 0.17718953f;
      sa[461] = 0.20599468f;
      sa[462] = 0.049518652f;
      sa[463] = 0.16179273f;
      sa[464] = -0.32351246f;
      sa[465] = 0.29330882f;
      sa[466] = -0.017318873f;
      sa[467] = 0.2062579f;
      sa[468] = 0.095291704f;
      sa[469] = 0.2720476f;
      sa[470] = 0.30285123f;
      sa[471] = 0.18411909f;
      sa[472] = -0.014318746f;
      sa[473] = -0.1031723f;
      sa[474] = 0.03821591f;
      sa[475] = 0.23750111f;
      sa[476] = 0.20719452f;
      sa[477] = -0.053782646f;
      sa[478] = 0.30304167f;
      sa[479] = -0.15473372f;
      sa[480] = -0.35210463f;
      sa[481] = -0.21534039f;
      sa[482] = -0.2360892f;
      sa[483] = 0.1755314f;
      sa[484] = 0.1855892f;
      sa[485] = 0.18535306f;
      sa[486] = 0.037712995f;
      sa[487] = -0.19781074f;
      sa[488] = -0.2475934f;
      sa[489] = 0.031357594f;
      sa[490] = 0.0069231796f;
      sa[491] = -0.23814827f;
      sa[492] = 0.24548563f;
      sa[493] = 0.40795928f;
      sa[494] = -0.20956978f;
      sa[495] = 0.19436602f;
      sa[496] = -0.09922551f;
      sa[497] = -0.03647177f;
      sa[498] = 0.091801025f;
      sa[499] = 0.021123437f;
      sa[500] = -0.039667074f;
      sa[501] = 0.013829188f;
      sa[502] = 0.28280073f;
      sa[503] = 0.0839192f;
      sa[504] = -0.17863347f;
      sa[505] = -0.021769533f;
      sa[506] = 0.24134566f;
      sa[507] = -0.04950468f;
      sa[508] = 0.12784544f;
      sa[509] = 0.39979133f;
      sa[510] = 0.22749342f;
      sa[511] = -0.029396836f;
      sa[512] = 0.09735322f;
      sa[513] = -0.10925634f;
      sa[514] = 0.21761408f;
      sa[515] = -0.45276478f;
      sa[516] = 0.06131499f;
      sa[517] = 0.27276477f;
      sa[518] = 0.1411932f;
      sa[519] = 0.056572314f;
      sa[520] = 0.27645364f;
      sa[521] = 0.2249346f;
      sa[522] = -0.049478643f;
      sa[523] = -0.029446062f;
      sa[524] = 0.13219474f;
      sa[525] = 0.089478225f;
      sa[526] = -0.053836275f;
      sa[527] = -0.07132724f;
      sa[528] = 0.11388554f;
      sa[529] = 0.11763142f;
      sa[530] = -0.19580054f;
      sa[531] = 0.3068519f;
      sa[532] = 0.138757f;
      sa[533] = 0.07873645f;
      sa[534] = 0.2898336f;
      sa[535] = -0.020489069f;
      sa[536] = 0.10450969f;
      sa[537] = -0.28384107f;
      sa[538] = 0.25058612f;
      sa[539] = 0.19034393f;
      sa[540] = -0.18821467f;
      sa[541] = -0.12823462f;
      sa[542] = -0.23246211f;
      sa[543] = -0.5952281f;
      sa[544] = 0.030114619f;
      sa[545] = -0.18582644f;
      sa[546] = -0.06583444f;
      sa[547] = -0.004947576f;
      sa[548] = 0.085761435f;
      sa[549] = 0.1700516f;
      sa[550] = -0.06895639f;
      sa[551] = -0.23539232f;
      sa[552] = 0.076211564f;
      sa[553] = -0.21016261f;
      sa[554] = -0.18090351f;
      sa[555] = -0.11873339f;
      sa[556] = -0.19012165f;
      sa[557] = -0.2799445f;
      sa[558] = -0.09986529f;
      sa[559] = 0.16327101f;
      sa[560] = -0.08251903f;
      sa[561] = 0.035645224f;
      sa[562] = 0.25594845f;
      sa[563] = 0.008173341f;
      sa[564] = 0.04576723f;
      sa[565] = -0.044456646f;
      sa[566] = 0.24004367f;
      sa[567] = 0.26894352f;
      sa[568] = 0.069836825f;
      sa[569] = 0.15175341f;
      sa[570] = -0.1448291f;
      sa[571] = 0.11013049f;
      sa[572] = -0.17645591f;
      sa[573] = 0.3185864f;
      sa[574] = 0.16811955f;
      sa[575] = -0.29293504f;
      sa[576] = -0.019147981f;
      sa[577] = -0.07361455f;
      sa[578] = -0.0074388096f;
      sa[579] = 0.06163999f;
      sa[580] = 0.10510271f;
      sa[581] = -0.19660605f;
      sa[582] = 0.0605058f;
      sa[583] = 0.03131765f;
      sa[584] = 0.09433328f;
      sa[585] = 0.09526627f;
      sa[586] = -0.18941274f;
      sa[587] = -0.1893861f;
      sa[588] = 0.09280246f;
      sa[589] = 0.04574173f;
      sa[590] = 0.020355139f;
      sa[591] = 0.03459886f;
      sa[592] = -0.378703f;
      sa[593] = -0.2663675f;
      sa[594] = 0.031632427f;
      sa[595] = 0.14772701f;
      sa[596] = 0.35401013f;
      sa[597] = 0.088494495f;
      sa[598] = 0.25934333f;
      sa[599] = 0.04063431f;
      sa[600] = -0.34619612f;
      sa[601] = 0.1825619f;
      sa[602] = 6.738037E-4f;
      sa[603] = 0.050756194f;
      sa[604] = 0.2706136f;
      sa[605] = 0.25321528f;
      sa[606] = 0.15468119f;
      sa[607] = 0.042248838f;
      sa[608] = -0.015954297f;
      sa[609] = -0.044331033f;
      sa[610] = 0.16805312f;
      sa[611] = -0.047172498f;
      sa[612] = -0.14850114f;
      sa[613] = 0.17307152f;
      sa[614] = 0.12867483f;
      sa[615] = 0.2245451f;
      sa[616] = 0.08563775f;
      sa[617] = -0.20827676f;
      sa[618] = -0.094484724f;
      sa[619] = -0.12130765f;
      sa[620] = 0.022407206f;
      sa[621] = -0.2111206f;
      sa[622] = -0.2882812f;
      sa[623] = -0.29400837f;
      sa[624] = -0.06409075f;
      sa[625] = 0.30753025f;
      sa[626] = 0.006841232f;
      sa[627] = 0.12215165f;
      sa[628] = -0.13527161f;
      sa[629] = -0.048807085f;
      sa[630] = -0.28774512f;
      sa[631] = 0.36756635f;
      sa[632] = 0.07859837f;
      sa[633] = -0.14245555f;
      sa[634] = -0.18736373f;
      sa[635] = 0.04036165f;
      sa[636] = -0.11893362f;
      sa[637] = -0.08409041f;
      sa[638] = -0.258787f;
      sa[639] = 0.051480044f;
      sa[640] = -0.16137181f;
      sa[641] = -0.30300525f;
      sa[642] = 0.21360642f;
      sa[643] = -0.4858006f;
      sa[644] = -0.04454617f;
      sa[645] = -0.4205951f;
      sa[646] = 0.30676037f;
      sa[647] = -0.13966678f;
      sa[648] = 0.009285f;
      sa[649] = -0.040945634f;
      sa[650] = -0.07742362f;
      sa[651] = -0.20815948f;
      sa[652] = 0.058892615f;
      sa[653] = -0.17091936f;
      sa[654] = -0.21562462f;
      sa[655] = -0.24513075f;
      sa[656] = 0.24649413f;
      sa[657] = 0.07215721f;
      sa[658] = -0.3506167f;
      sa[659] = -0.21754856f;
      sa[660] = -0.30336735f;
      sa[661] = -0.13167894f;
      sa[662] = -0.33642426f;
      sa[663] = 0.12031275f;
      sa[664] = -0.16311179f;
      sa[665] = 0.06655963f;
      sa[666] = 0.13110399f;
      sa[667] = -0.32955673f;
      sa[668] = 0.19207475f;
      sa[669] = -0.16517629f;
      sa[670] = 0.013358998f;
      sa[671] = -0.09762539f;
      sa[672] = -0.42837402f;
      sa[673] = 0.13941841f;
      sa[674] = 0.44583422f;
      sa[675] = -0.2720547f;
      sa[676] = -0.10397342f;
      sa[677] = -0.17097324f;
      sa[678] = 0.1785872f;
      sa[679] = -0.06269703f;
      sa[680] = 0.14341588f;
      sa[681] = 0.21941784f;
      sa[682] = -0.2782627f;
      sa[683] = -0.065559775f;
      sa[684] = -0.019990686f;
      sa[685] = 0.23496617f;
      sa[686] = -0.06724362f;
      sa[687] = -0.058188222f;
      sa[688] = -0.2501883f;
      sa[689] = -0.12347123f;
      sa[690] = 0.0377325f;
      sa[691] = 0.34528884f;
      sa[692] = -0.19801323f;
      sa[693] = -0.13802601f;
      sa[694] = 0.33473444f;
      sa[695] = -0.22284211f;
      sa[696] = -0.10158411f;
      sa[697] = -0.098207526f;
      sa[698] = -0.16729885f;
      sa[699] = 0.47677556f;
      sa[700] = 0.21573721f;
      sa[701] = 0.2875185f;
      sa[702] = 0.08184554f;
      sa[703] = -0.5966128f;
      sa[704] = -0.36418465f;
      sa[705] = -0.15189618f;
      sa[706] = -0.15046519f;
      sa[707] = 0.4242868f;
      sa[708] = 0.08918668f;
      sa[709] = -0.21063443f;
      sa[710] = 0.2140846f;
      sa[711] = 0.025305469f;
      sa[712] = -0.04545145f;
      sa[713] = 0.019829564f;
      sa[714] = 0.2112427f;
      sa[715] = 0.27264556f;
      sa[716] = 0.08413519f;
      sa[717] = 0.11441144f;
      sa[718] = 0.071297266f;
      sa[719] = 0.03233305f;
      sa[720] = -0.28430292f;
      sa[721] = 0.23113231f;
      sa[722] = -0.07659223f;
      sa[723] = -0.07828195f;
      sa[724] = 0.08736003f;
      sa[725] = -0.22534385f;
      sa[726] = -0.22314794f;
      sa[727] = -0.46745333f;
      sa[728] = 0.007702435f;
      sa[729] = -0.1675306f;
      sa[730] = 0.08166707f;
      sa[731] = -0.42408046f;
      sa[732] = 0.24798182f;
      sa[733] = 0.2724925f;
      sa[734] = -0.11348038f;
      sa[735] = 0.18432854f;
      sa[736] = 0.018985342f;
      sa[737] = 0.09922652f;
      sa[738] = -0.48807302f;
      sa[739] = 0.09028083f;
      sa[740] = -0.1745602f;
      sa[741] = -0.22071548f;
      sa[742] = 0.09741957f;
      sa[743] = -0.118911706f;
      sa[744] = 0.10334455f;
      sa[745] = -0.23282227f;
      sa[746] = 0.047211513f;
      sa[747] = -0.02042798f;
      sa[748] = 0.016057508f;
      sa[749] = -0.02922035f;
      sa[750] = 0.34450296f;
      sa[751] = 0.24699205f;
      sa[752] = -0.030987816f;
      sa[753] = 0.060022432f;
      sa[754] = 0.06978441f;
      sa[755] = 0.055905785f;
      sa[756] = -0.11526335f;
      sa[757] = 0.28429934f;
      sa[758] = -0.25055265f;
      sa[759] = -0.03515253f;
      sa[760] = -0.07943209f;
      sa[761] = 0.0747244f;
      sa[762] = -0.11529153f;
      sa[763] = 0.12877704f;
      sa[764] = 0.11890222f;
      sa[765] = -0.11459446f;
      sa[766] = -0.17553452f;
      sa[767] = -0.1029526f;
      sa[768] = -0.13708287f;
      sa[769] = -0.23661576f;
      sa[770] = 0.005205235f;
      sa[771] = 0.0662893f;
      sa[772] = 0.064683124f;
      sa[773] = -0.20204812f;
      sa[774] = -0.103202544f;
      sa[775] = 0.23006183f;
      sa[776] = -0.029449208f;
      sa[777] = 0.06860249f;
      sa[778] = 0.12357791f;
      sa[779] = -0.09444984f;
      sa[780] = -0.020647828f;
      sa[781] = -0.024339221f;
      sa[782] = 0.1691929f;
      sa[783] = -0.28337386f;
      sa[784] = -0.07502384f;
      sa[785] = -0.039094843f;
      sa[786] = -0.023028152f;
      sa[787] = -0.09552467f;
      sa[788] = -0.18181387f;
      sa[789] = -0.06775582f;
      sa[790] = -0.027426101f;
      sa[791] = -0.15606518f;
      sa[792] = 0.21908942f;
      sa[793] = -0.07493883f;
      sa[794] = -0.22035101f;
      sa[795] = -0.42792717f;
      sa[796] = 0.10605074f;
      sa[797] = -0.44341782f;
      sa[798] = -0.32874826f;
      sa[799] = -0.15872104f;
      sa[800] = 0.17284217f;
      sa[801] = 0.20666488f;
      sa[802] = 0.1804018f;
      sa[803] = 0.20956646f;
      sa[804] = 0.20121743f;
      sa[805] = 0.16051723f;
      sa[806] = 0.25076234f;
      sa[807] = 0.42472526f;
      sa[808] = -0.032586824f;
      sa[809] = -0.14214501f;
      sa[810] = 0.28355873f;
      sa[811] = 0.026677212f;
      sa[812] = 0.16593634f;
      sa[813] = -0.33274752f;
      sa[814] = 0.11218186f;
      sa[815] = -0.023631223f;
      sa[816] = -0.20328166f;
      sa[817] = -0.26166704f;
      sa[818] = -0.008206105f;
      sa[819] = 0.039117742f;
      sa[820] = -0.34323284f;
      sa[821] = -0.30903175f;
      sa[822] = -0.4849083f;
      sa[823] = 0.15885834f;
      sa[824] = -0.018837223f;
      sa[825] = 0.593009f;
      sa[826] = -0.36660898f;
      sa[827] = -0.40686667f;
      sa[828] = 0.14242771f;
      sa[829] = -0.06921597f;
      sa[830] = 0.07493545f;
      sa[831] = -0.27098528f;
      sa[832] = 0.069887586f;
      sa[833] = -0.07910361f;
      sa[834] = 0.084710136f;
      sa[835] = -0.2592946f;
      sa[836] = 0.251968f;
      sa[837] = -0.140151f;
      sa[838] = 0.07728114f;
      sa[839] = -0.29255506f;
      sa[840] = 0.19909164f;
      sa[841] = -0.021813331f;
      sa[842] = 0.10307517f;
      sa[843] = 9.03818E-4f;
      sa[844] = 0.020307796f;
      sa[845] = 0.10222999f;
      sa[846] = -0.21060559f;
      sa[847] = 0.06504291f;
      sa[848] = 0.29668352f;
      sa[849] = 0.2991062f;
      sa[850] = -0.0034626755f;
      sa[851] = 0.08412852f;
      sa[852] = 0.13347562f;
      sa[853] = 0.080578275f;
      sa[854] = 0.18702316f;
      sa[855] = 0.44516835f;
      sa[856] = 0.18315095f;
      sa[857] = -0.07091265f;
      sa[858] = 0.09896741f;
      sa[859] = 0.15249054f;
      sa[860] = 0.20648226f;
      sa[861] = -0.0027646464f;
      sa[862] = -0.18410179f;
      sa[863] = 0.030902954f;
      sa[864] = -0.18837221f;
      sa[865] = 0.26383957f;
      sa[866] = -0.16373064f;
      sa[867] = 0.23359531f;
      sa[868] = -0.17164792f;
      sa[869] = 0.24177095f;
      sa[870] = 0.019482728f;
      sa[871] = 0.29926398f;
      sa[872] = 0.1337128f;
      sa[873] = -0.11332566f;
      sa[874] = 0.08126208f;
      sa[875] = -0.245608f;
      sa[876] = -0.27978247f;
      sa[877] = -0.19360353f;
      sa[878] = 0.037560005f;
      sa[879] = 0.23597172f;
      sa[880] = -0.09182347f;
      sa[881] = -0.09923531f;
      sa[882] = 0.20463032f;
      sa[883] = -0.049892824f;
      sa[884] = -0.23984115f;
      sa[885] = -0.20142044f;
      sa[886] = 0.07391693f;
      sa[887] = 0.013512672f;
      sa[888] = -0.062598415f;
      sa[889] = 0.10227886f;
      sa[890] = -0.24570791f;
      sa[891] = 0.2146899f;
      sa[892] = 0.022755155f;
      sa[893] = 0.14084516f;
      sa[894] = -0.01735707f;
      sa[895] = 0.16855319f;
      sa[896] = -0.16277541f;
      sa[897] = 0.059511933f;
      sa[898] = -0.010658999f;
      sa[899] = 0.22158311f;
      sa[900] = -0.23723179f;
      sa[901] = 0.10631585f;
      sa[902] = -0.079573594f;
      sa[903] = -0.019612502f;
      sa[904] = 0.20883231f;
      sa[905] = 0.24844989f;
      sa[906] = -0.18959582f;
      sa[907] = -0.20174772f;
      sa[908] = -0.25793734f;
      sa[909] = 0.06446462f;
      sa[910] = 0.17443562f;
      sa[911] = -0.113003105f;
      sa[912] = -0.005972118f;
      sa[913] = 0.10793728f;
      sa[914] = -0.16641438f;
      sa[915] = -0.09688611f;
      sa[916] = 0.25251025f;
      sa[917] = 0.042549174f;
      sa[918] = -0.010496584f;
      sa[919] = 0.13766979f;
      sa[920] = 0.14223085f;
      sa[921] = -0.058646552f;
      sa[922] = -0.09284104f;
      sa[923] = -0.20462872f;
      sa[924] = 0.003219763f;
      sa[925] = -0.13185868f;
      sa[926] = 0.024067858f;
      sa[927] = -0.031678926f;
      sa[928] = 0.22551921f;
      sa[929] = 0.11036141f;
      sa[930] = 0.18563405f;
      sa[931] = -0.09264372f;
      sa[932] = 0.2681209f;
      sa[933] = -0.026193174f;
      sa[934] = 0.25888923f;
      sa[935] = -0.21232437f;
      sa[936] = -0.08599187f;
      sa[937] = 0.19314387f;
      sa[938] = -0.1645572f;
      sa[939] = 0.13471675f;
      sa[940] = -0.050379463f;
      sa[941] = -0.29717407f;
      sa[942] = -0.25209895f;
      sa[943] = -0.14773342f;
      sa[944] = -0.40929544f;
      sa[945] = 0.07238176f;
      sa[946] = 0.0208184f;
      sa[947] = 0.2358165f;
      sa[948] = 0.11172179f;
      sa[949] = -0.15982856f;
      sa[950] = 0.096481666f;
      sa[951] = -0.062307067f;
      sa[952] = -0.20933309f;
      sa[953] = -0.112077124f;
      sa[954] = -0.21431541f;
      sa[955] = -0.041601792f;
      sa[956] = -0.022946702f;
      sa[957] = 0.021176783f;
      sa[958] = 0.07439041f;
      sa[959] = -0.14834319f;
      sa[960] = 0.29470456f;
      sa[961] = -0.12371844f;
      sa[962] = -0.038994465f;
      sa[963] = -0.23530713f;
      sa[964] = -0.1632505f;
      sa[965] = 0.24887963f;
      sa[966] = -0.0805799f;
      sa[967] = -0.23926517f;
      sa[968] = 0.15647237f;
      sa[969] = -0.28897133f;
      sa[970] = 0.3519061f;
      sa[971] = 0.123192266f;
      sa[972] = -0.2406416f;
      sa[973] = -0.24899924f;
      sa[974] = -0.27677283f;
      sa[975] = -0.3343389f;
      sa[976] = -0.07194046f;
      sa[977] = -1.4020388E-4f;
      sa[978] = -0.11347271f;
      sa[979] = 0.03200752f;
      sa[980] = 0.19974932f;
      sa[981] = -0.2066445f;
      sa[982] = -0.12626372f;
      sa[983] = -0.06441271f;
      sa[984] = -0.21759136f;
      sa[985] = 0.048084985f;
      sa[986] = -0.24435315f;
      sa[987] = 0.026159545f;
      sa[988] = 0.14398463f;
      sa[989] = 0.15253475f;
      sa[990] = 0.2732226f;
      sa[991] = 0.038638428f;
      sa[992] = -0.08951317f;
      sa[993] = 0.05006642f;
      sa[994] = -0.104838505f;
      sa[995] = -0.33466208f;
      sa[996] = 0.16169879f;
      sa[997] = 0.07713618f;
      sa[998] = 0.049246203f;
      sa[999] = 0.29417044f;
      sa[1000] = 0.12757052f;
      sa[1001] = 0.32298934f;
      sa[1002] = 0.28313273f;
      sa[1003] = -0.08993837f;
      sa[1004] = 0.18727206f;
      sa[1005] = -0.0886658f;
      sa[1006] = -0.1321125f;
      sa[1007] = 0.021215536f;
      sa[1008] = 0.17036378f;
      sa[1009] = 0.21747121f;
      sa[1010] = -0.014662542f;
      sa[1011] = 0.06665896f;
      sa[1012] = -0.16159531f;
      sa[1013] = 0.0851916f;
      sa[1014] = 0.19407146f;
      sa[1015] = -0.41340956f;
      sa[1016] = 0.26234388f;
      sa[1017] = 0.12348165f;
      sa[1018] = -0.040265128f;
      sa[1019] = -0.017200831f;
      sa[1020] = -0.24637024f;
      sa[1021] = 0.020437835f;
      sa[1022] = 0.17175305f;
      sa[1023] = 0.10616047f;
      sa[1024] = 0.048914164f;
      sa[1025] = 0.19907735f;
      sa[1026] = 0.11888911f;
      sa[1027] = 0.11386354f;
      sa[1028] = 0.27302104f;
      sa[1029] = -0.07897227f;
      sa[1030] = -0.18657428f;
      sa[1031] = 0.08035602f;
      sa[1032] = -0.24713561f;
      sa[1033] = 0.034099158f;
      sa[1034] = -0.07544502f;
      sa[1035] = 0.10709112f;
      sa[1036] = 0.2541143f;
      sa[1037] = -0.025756164f;
      sa[1038] = -0.22310646f;
      sa[1039] = 0.30707023f;
      sa[1040] = -0.07079688f;
      sa[1041] = 0.24538538f;
      sa[1042] = -0.26815417f;
      sa[1043] = -0.054542076f;
      sa[1044] = 0.089490175f;
      sa[1045] = 0.27346936f;
      sa[1046] = -0.07134107f;
      sa[1047] = -0.13284513f;
      sa[1048] = 0.14866652f;
      sa[1049] = -0.060730554f;
      sa[1050] = 0.042282775f;
      sa[1051] = -0.20032263f;
      sa[1052] = 0.25661945f;
      sa[1053] = 0.28848773f;
      sa[1054] = 0.35106853f;
      sa[1055] = 0.04757272f;
      sa[1056] = 0.25315797f;
      sa[1057] = -0.12533174f;
      sa[1058] = 0.22766657f;
      sa[1059] = -0.22055413f;
      sa[1060] = -0.20420349f;
      sa[1061] = 0.08116875f;
      sa[1062] = -0.03157792f;
      sa[1063] = 0.053216986f;
      sa[1064] = 0.032536518f;
      sa[1065] = -0.06477901f;
      sa[1066] = 0.12411579f;
      sa[1067] = -0.40494013f;
      sa[1068] = -0.16083683f;
      sa[1069] = 0.4155646f;
      sa[1070] = -0.0033094354f;
      sa[1071] = 0.19105573f;
      sa[1072] = -0.2394076f;
      sa[1073] = 0.11212777f;
      sa[1074] = 0.16692504f;
      sa[1075] = -0.19372602f;
      sa[1076] = -0.054608434f;
      sa[1077] = 0.019959029f;
      sa[1078] = -0.10787889f;
      sa[1079] = -0.009595961f;
      sa[1080] = 0.2965158f;
      sa[1081] = 0.13866633f;
      sa[1082] = -0.44955167f;
      sa[1083] = -0.25904852f;
      sa[1084] = 0.2514538f;
      sa[1085] = -0.26061895f;
      sa[1086] = -0.30602983f;
      sa[1087] = -0.29001364f;
      sa[1088] = -0.17440306f;
      sa[1089] = -0.018754039f;
      sa[1090] = -0.22874472f;
      sa[1091] = 0.04444758f;
      sa[1092] = -0.13925178f;
      sa[1093] = -0.29986966f;
      sa[1094] = 0.043590687f;
      sa[1095] = -0.20678891f;
      sa[1096] = 0.03365073f;
      sa[1097] = -0.12268311f;
      sa[1098] = -0.022540381f;
      sa[1099] = 0.12878056f;
      sa[1100] = 0.04368069f;
      sa[1101] = 0.27866024f;
      sa[1102] = -0.07410067f;
      sa[1103] = 0.2661567f;
      sa[1104] = -0.41359633f;
      sa[1105] = -0.11462487f;
      sa[1106] = -0.037521914f;
      sa[1107] = 0.14369227f;
      sa[1108] = -0.0065092705f;
      sa[1109] = 0.4567905f;
      sa[1110] = 0.23766017f;
      sa[1111] = -0.13671164f;
      sa[1112] = 0.097950555f;
      sa[1113] = 0.1638999f;
      sa[1114] = 0.19355127f;
      sa[1115] = 0.18974276f;
      sa[1116] = -0.121958174f;
      sa[1117] = -0.08939941f;
      sa[1118] = -0.15047766f;
      sa[1119] = -0.21405438f;
      sa[1120] = 0.16415189f;
      sa[1121] = 0.11701531f;
      sa[1122] = 0.19522293f;
      sa[1123] = 0.095163524f;
      sa[1124] = 0.11543365f;
      sa[1125] = -0.08470624f;
      sa[1126] = 0.14805649f;
      sa[1127] = 0.096936f;
      sa[1128] = 0.007576765f;
      sa[1129] = -0.031125585f;
      sa[1130] = 0.14529616f;
      sa[1131] = 0.21063617f;
      sa[1132] = -0.09153507f;
      sa[1133] = -0.08020106f;
      sa[1134] = 0.08258118f;
      sa[1135] = -0.26753053f;
      sa[1136] = -0.091481365f;
      sa[1137] = 0.115976304f;
      sa[1138] = -0.17201018f;
      sa[1139] = 0.010046307f;
      sa[1140] = 0.27621853f;
      sa[1141] = -0.2962935f;
      sa[1142] = 0.036809355f;
      sa[1143] = 0.16730312f;
      sa[1144] = -0.24252678f;
      sa[1145] = 0.16358562f;
      sa[1146] = 0.2846036f;
      sa[1147] = -0.018402487f;
      sa[1148] = 0.04257402f;
      sa[1149] = 0.016263211f;
      sa[1150] = -0.2963133f;
      sa[1151] = -0.2956027f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2162894f;
      sa[1] = -0.14050858f;
      sa[2] = -0.7479708f;
      sa[3] = -1.0301275f;
      sa[4] = 5.0453666E-5f;
      sa[5] = 0.13973692f;
      sa[6] = 1.168909f;
      sa[7] = -0.6588302f;
      sa[8] = -0.9480812f;
      sa[9] = 0.69004905f;
      sa[10] = -0.21841386f;
      sa[11] = 0.41767913f;
      sa[12] = 0.2244502f;
      sa[13] = 0.055055488f;
      sa[14] = -1.2287301f;
      sa[15] = 1.188261f;
      sa[16] = 1.6066263f;
      sa[17] = -0.44826737f;
      sa[18] = 0.1135004f;
      sa[19] = -0.59366614f;
      sa[20] = 0.9993511f;
      sa[21] = 0.075616986f;
      sa[22] = -1.005217f;
      sa[23] = 0.766351f;
      sa[24] = -1.3187284f;
      sa[25] = 0.43240884f;
      sa[26] = -0.26580238f;
      sa[27] = 1.4387604f;
      sa[28] = -1.3763742f;
      sa[29] = -0.46244085f;
      sa[30] = 0.47395924f;
      sa[31] = -0.7048675f;
      sa[32] = -1.2200831f;
      sa[33] = -1.5270015f;
      sa[34] = -0.09693174f;
      sa[35] = 1.3325518f;
      sa[36] = -0.37332895f;
      sa[37] = -0.13578175f;
      sa[38] = 0.14100313f;
      sa[39] = 0.31478056f;
      sa[40] = -0.74937975f;
      sa[41] = -1.3566301f;
      sa[42] = -1.0853003f;
      sa[43] = -1.6073161f;
      sa[44] = 0.11681455f;
      sa[45] = -1.3475397f;
      sa[46] = 1.1618694f;
      sa[47] = 1.3910443f;
      sa[48] = -1.2714849f;
      sa[49] = -1.2727007f;
      sa[50] = 0.46446955f;
      sa[51] = -0.22094505f;
      sa[52] = 0.93697757f;
      sa[53] = 0.8143379f;
      sa[54] = -0.2166022f;
      sa[55] = 1.1471126f;
      sa[56] = -0.9139472f;
      sa[57] = -1.0710013f;
      sa[58] = -0.103070326f;
      sa[59] = -0.123472586f;
      sa[60] = 1.3470309f;
      sa[61] = -0.55855614f;
      sa[62] = -0.23685065f;
      sa[63] = 0.64640456f;
      sa[64] = 1.0899696f;
      sa[65] = -0.6721474f;
      sa[66] = 0.63159746f;
      sa[67] = 1.4629372f;
      sa[68] = 0.63020563f;
      sa[69] = -1.080542f;
      sa[70] = -1.5016866f;
      sa[71] = -0.5245267f;
      sa[72] = -1.331532f;
      sa[73] = 1.2522814f;
      sa[74] = 1.4218016f;
      sa[75] = -0.23404457f;
      sa[76] = 0.8086133f;
      sa[77] = 0.32813072f;
      sa[78] = -1.5533047f;
      sa[79] = 0.8927872f;
      sa[80] = -0.8785745f;
      sa[81] = -0.24854967f;
      sa[82] = 0.83831006f;
      sa[83] = -0.6344618f;
      sa[84] = -1.768716f;
      sa[85] = -1.2709953f;
      sa[86] = 0.3557711f;
      sa[87] = 1.073739f;
      sa[88] = -1.5961984f;
      sa[89] = -0.695709f;
      sa[90] = -1.2610497f;
      sa[91] = 1.4772328f;
      sa[92] = -0.31826597f;
      sa[93] = 0.27154905f;
      sa[94] = -1.5338801f;
      sa[95] = -0.20593905f;
      sa[96] = -1.0249547f;
      sa[97] = 0.17018364f;
      sa[98] = -0.10412393f;
      sa[99] = 0.28984472f;
      sa[100] = -1.2865599f;
      sa[101] = -0.41655567f;
      sa[102] = 1.2390454f;
      sa[103] = 0.2122049f;
      sa[104] = -0.22964893f;
      sa[105] = -0.63477105f;
      sa[106] = 1.418616f;
      sa[107] = 1.2486633f;
      sa[108] = 0.73113763f;
      sa[109] = 0.16710022f;
      sa[110] = 0.7377518f;
      sa[111] = -0.87271845f;
      sa[112] = -1.1500914f;
      sa[113] = 0.2650188f;
      sa[114] = 0.06763383f;
      sa[115] = -0.43017262f;
      sa[116] = 1.1748838f;
      sa[117] = 0.035179824f;
      sa[118] = -1.4094003f;
      sa[119] = -0.7575578f;
      sa[120] = -0.36969376f;
      sa[121] = 1.0787325f;
      sa[122] = -0.04155424f;
      sa[123] = 0.3158063f;
      sa[124] = -0.7538873f;
      sa[125] = 0.7228007f;
      sa[126] = -1.1563613f;
      sa[127] = 0.40059933f;
      sa[128] = -0.998655f;
      sa[129] = 0.79431605f;
      sa[130] = -0.3427909f;
      sa[131] = 0.94331384f;
      sa[132] = 0.49014166f;
      sa[133] = 0.6548089f;
      sa[134] = 0.6896172f;
      sa[135] = -1.1333536f;
      sa[136] = 0.55150735f;
      sa[137] = -0.65432864f;
      sa[138] = -0.14197917f;
      sa[139] = 1.2750328f;
      sa[140] = -0.7442842f;
      sa[141] = -0.2045087f;
      sa[142] = 0.222097f;
      sa[143] = -0.9045243f;
      sa[144] = 0.9049798f;
      sa[145] = -0.78329766f;
      sa[146] = 0.06482319f;
      sa[147] = -0.26066592f;
      sa[148] = -0.857915f;
      sa[149] = 1.0286931f;
      sa[150] = -1.1003294f;
      sa[151] = -1.603186f;
      sa[152] = 1.4492645f;
      sa[153] = -0.5699423f;
      sa[154] = 1.4848183f;
      sa[155] = -1.5956689f;
      sa[156] = -1.4172128f;
      sa[157] = -1.1554766f;
      sa[158] = -0.2998087f;
      sa[159] = -0.6152847f;
      sa[160] = 1.3809823f;
      sa[161] = -1.1725832f;
      sa[162] = 1.686193f;
      sa[163] = -0.72959f;
      sa[164] = 0.7822288f;
      sa[165] = -0.50148785f;
      sa[166] = 1.3823373f;
      sa[167] = -1.3893431f;
      sa[168] = 1.0840327f;
      sa[169] = -1.507074f;
      sa[170] = 1.1473361f;
      sa[171] = 0.8406294f;
      sa[172] = 1.5396394f;
      sa[173] = 1.566441f;
      sa[174] = -0.10002591f;
      sa[175] = 0.0038660534f;
      sa[176] = -0.7811661f;
      sa[177] = 0.18602173f;
      sa[178] = -1.0947344f;
      sa[179] = -0.17490968f;
      sa[180] = -1.3745137f;
      sa[181] = -1.0045112f;
      sa[182] = 0.3721375f;
      sa[183] = -0.9769404f;
      sa[184] = 1.4899751f;
      sa[185] = 1.176818f;
      sa[186] = -0.50505316f;
      sa[187] = -0.9759733f;
      sa[188] = -0.511877f;
      sa[189] = -0.6999916f;
      sa[190] = -1.4477415f;
      sa[191] = -0.9835233f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


