/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:51.176+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_12 > h2o_nn_32x6_Tanh_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_12", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_12_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-5519448718764334240L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.034977601259795356;
      sa[1] = 0.040360750332397416;
      sa[2] = 0.0067353788661988845;
      sa[3] = -0.051816236408286864;
      sa[4] = 0.04820424109806841;
      sa[5] = 0.01062164809028665;
      sa[6] = 0.09708333093123042;
      sa[7] = -0.12985639216623268;
      sa[8] = -0.048081183028065;
      sa[9] = 0.03143568980409104;
      sa[10] = 0.027619140828055364;
      sa[11] = 0.05809225719591041;
      sa[12] = 0.01074588781534682;
      sa[13] = 0.04884754852039769;
      sa[14] = -0.09456497734444187;
      sa[15] = 0.04921166066557098;
      sa[16] = 0.11682457767875948;
      sa[17] = -0.02381881764941718;
      sa[18] = -0.07569662034219973;
      sa[19] = 0.013841735314111975;
      sa[20] = 0.04228326533131516;
      sa[21] = -0.03406290763371947;
      sa[22] = 0.015533883255700607;
      sa[23] = 0.0534846141102989;
      sa[24] = -0.08137962767011994;
      sa[25] = 0.049106805213983126;
      sa[26] = -0.025247836376404622;
      sa[27] = 0.06761268401457869;
      sa[28] = -0.07606632665615166;
      sa[29] = -0.05304063001303289;
      sa[30] = 0.08467619247796349;
      sa[31] = -0.08137287287368615;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.03770343965385691;
      sa[1] = -0.06121209845637763;
      sa[2] = -0.03048679095726545;
      sa[3] = -0.04899736913055202;
      sa[4] = -0.016211695891103703;
    }
  }
}
class h2o_nn_32x6_Tanh_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.02704054f;
      sa[1] = 0.19945325f;
      sa[2] = 0.11365512f;
      sa[3] = 0.19154915f;
      sa[4] = -0.23902704f;
      sa[5] = -0.16793323f;
      sa[6] = -0.06146646f;
      sa[7] = 0.12478397f;
      sa[8] = 0.11804943f;
      sa[9] = -0.20119053f;
      sa[10] = -0.13370432f;
      sa[11] = -0.12589554f;
      sa[12] = 0.07344509f;
      sa[13] = -0.22096054f;
      sa[14] = -0.15382972f;
      sa[15] = -0.09676738f;
      sa[16] = 0.0634717f;
      sa[17] = 0.13043214f;
      sa[18] = -0.24033752f;
      sa[19] = 0.28374088f;
      sa[20] = 0.18998651f;
      sa[21] = -0.35257468f;
      sa[22] = 0.19953579f;
      sa[23] = -0.27881837f;
      sa[24] = 0.2594881f;
      sa[25] = 0.1786552f;
      sa[26] = -0.27246952f;
      sa[27] = 0.1371466f;
      sa[28] = 0.19850868f;
      sa[29] = -0.322523f;
      sa[30] = -0.19197577f;
      sa[31] = 0.021251487f;
      sa[32] = 0.19618915f;
      sa[33] = -0.26550657f;
      sa[34] = 0.029254423f;
      sa[35] = -0.1281946f;
      sa[36] = 0.07467991f;
      sa[37] = 0.21314256f;
      sa[38] = -0.13846718f;
      sa[39] = 0.030896066f;
      sa[40] = 0.0059356554f;
      sa[41] = -0.10976339f;
      sa[42] = -0.18992738f;
      sa[43] = 0.010097769f;
      sa[44] = 0.18012384f;
      sa[45] = -0.2570139f;
      sa[46] = 0.08399699f;
      sa[47] = -0.0626962f;
      sa[48] = 0.17082056f;
      sa[49] = 0.1967001f;
      sa[50] = 0.124093056f;
      sa[51] = -0.3355467f;
      sa[52] = -0.13770202f;
      sa[53] = 0.16162755f;
      sa[54] = 0.21176638f;
      sa[55] = 0.10689023f;
      sa[56] = -0.18687026f;
      sa[57] = -0.28784195f;
      sa[58] = 0.22452313f;
      sa[59] = -0.15501146f;
      sa[60] = -0.22269863f;
      sa[61] = 0.17019522f;
      sa[62] = 0.15357235f;
      sa[63] = 0.056130495f;
      sa[64] = 0.11553594f;
      sa[65] = 0.115843676f;
      sa[66] = 0.0018458257f;
      sa[67] = 0.12147399f;
      sa[68] = -0.15402557f;
      sa[69] = 0.024135958f;
      sa[70] = -0.051315326f;
      sa[71] = 0.36478132f;
      sa[72] = -0.11133973f;
      sa[73] = 0.34118918f;
      sa[74] = -0.15136586f;
      sa[75] = 0.15604846f;
      sa[76] = -0.17133549f;
      sa[77] = 0.015870038f;
      sa[78] = -5.6077784E-4f;
      sa[79] = 0.113427445f;
      sa[80] = -0.18468684f;
      sa[81] = -0.0737053f;
      sa[82] = -0.054750383f;
      sa[83] = 0.19476938f;
      sa[84] = 0.058749683f;
      sa[85] = -0.03848944f;
      sa[86] = 0.2111652f;
      sa[87] = 0.32908154f;
      sa[88] = 0.33753544f;
      sa[89] = 0.13655539f;
      sa[90] = -0.2219643f;
      sa[91] = 0.14441605f;
      sa[92] = 0.16585267f;
      sa[93] = -0.15907967f;
      sa[94] = -0.115633845f;
      sa[95] = -0.25999644f;
      sa[96] = 0.10299484f;
      sa[97] = 0.032720026f;
      sa[98] = 0.09926122f;
      sa[99] = -0.15451476f;
      sa[100] = 0.002964811f;
      sa[101] = -0.14556412f;
      sa[102] = -0.15577613f;
      sa[103] = -0.057199705f;
      sa[104] = -0.102160476f;
      sa[105] = -0.2451113f;
      sa[106] = -0.06561459f;
      sa[107] = 0.20438623f;
      sa[108] = 0.16974142f;
      sa[109] = -0.095689036f;
      sa[110] = -0.08571931f;
      sa[111] = 0.14325073f;
      sa[112] = 0.16837068f;
      sa[113] = 0.091855004f;
      sa[114] = -0.1027474f;
      sa[115] = 0.06292475f;
      sa[116] = -0.21563736f;
      sa[117] = 0.05576961f;
      sa[118] = -0.25274578f;
      sa[119] = -0.14492296f;
      sa[120] = 0.27607253f;
      sa[121] = 0.29580146f;
      sa[122] = 0.33853498f;
      sa[123] = 0.41198045f;
      sa[124] = 0.38161814f;
      sa[125] = 0.394224f;
      sa[126] = -0.3754015f;
      sa[127] = -0.25642073f;
      sa[128] = 0.14334832f;
      sa[129] = 0.21576144f;
      sa[130] = -0.07096034f;
      sa[131] = 0.38104388f;
      sa[132] = 0.17396604f;
      sa[133] = -0.2823355f;
      sa[134] = -0.02540198f;
      sa[135] = -0.00390637f;
      sa[136] = -0.16827922f;
      sa[137] = 0.057312634f;
      sa[138] = 0.2070986f;
      sa[139] = 0.06053038f;
      sa[140] = -0.15801093f;
      sa[141] = -0.1924438f;
      sa[142] = 0.27347243f;
      sa[143] = -0.107012786f;
      sa[144] = 0.1814888f;
      sa[145] = -0.08003442f;
      sa[146] = -0.18199405f;
      sa[147] = 0.10624574f;
      sa[148] = 0.1758449f;
      sa[149] = 0.2646707f;
      sa[150] = 0.28881848f;
      sa[151] = -0.19542494f;
      sa[152] = -0.03087562f;
      sa[153] = 0.28849024f;
      sa[154] = 0.2838916f;
      sa[155] = -0.16815242f;
      sa[156] = 0.15023234f;
      sa[157] = -0.10524859f;
      sa[158] = 0.102430634f;
      sa[159] = 0.14410782f;
      sa[160] = 0.18373694f;
      sa[161] = 0.28057835f;
      sa[162] = -0.24301346f;
      sa[163] = 0.09316365f;
      sa[164] = 0.22827485f;
      sa[165] = -0.0381895f;
      sa[166] = -0.07824922f;
      sa[167] = -0.06535019f;
      sa[168] = 0.27769718f;
      sa[169] = 0.32817447f;
      sa[170] = 0.012683931f;
      sa[171] = -0.0101323165f;
      sa[172] = -0.001400962f;
      sa[173] = -0.08731911f;
      sa[174] = 0.0750377f;
      sa[175] = -0.1682623f;
      sa[176] = -0.019126723f;
      sa[177] = 0.004259151f;
      sa[178] = -0.077354476f;
      sa[179] = 0.041448075f;
      sa[180] = -0.07419842f;
      sa[181] = -0.32335708f;
      sa[182] = -0.021398671f;
      sa[183] = -0.030780468f;
      sa[184] = 0.3048479f;
      sa[185] = 0.14817661f;
      sa[186] = -0.30548573f;
      sa[187] = 0.14367989f;
      sa[188] = -0.060370848f;
      sa[189] = 0.23300628f;
      sa[190] = 0.1256442f;
      sa[191] = -0.12516798f;
      sa[192] = -0.15768778f;
      sa[193] = 0.16214195f;
      sa[194] = 0.024662385f;
      sa[195] = 0.27684954f;
      sa[196] = 0.23797962f;
      sa[197] = 0.012484366f;
      sa[198] = 0.13524997f;
      sa[199] = -0.061741743f;
      sa[200] = 0.0041930643f;
      sa[201] = -0.2514949f;
      sa[202] = 0.10719283f;
      sa[203] = 0.050065905f;
      sa[204] = -0.1108422f;
      sa[205] = 0.2586511f;
      sa[206] = 0.26272437f;
      sa[207] = 0.25493118f;
      sa[208] = -0.25580475f;
      sa[209] = -0.048387535f;
      sa[210] = -0.2717558f;
      sa[211] = -0.1700785f;
      sa[212] = 0.28277245f;
      sa[213] = -0.1518656f;
      sa[214] = -0.17766735f;
      sa[215] = 0.023889143f;
      sa[216] = 0.09478699f;
      sa[217] = 0.01678773f;
      sa[218] = -0.27895775f;
      sa[219] = 0.21732488f;
      sa[220] = -0.18551922f;
      sa[221] = -0.027200755f;
      sa[222] = 0.20058675f;
      sa[223] = 0.077127546f;
      sa[224] = 0.09100668f;
      sa[225] = 0.2179956f;
      sa[226] = -0.24798457f;
      sa[227] = 0.18641558f;
      sa[228] = 0.07337675f;
      sa[229] = -0.017992642f;
      sa[230] = 0.20894387f;
      sa[231] = -0.32286894f;
      sa[232] = -0.4075372f;
      sa[233] = -0.03230696f;
      sa[234] = 0.29502213f;
      sa[235] = -0.4208906f;
      sa[236] = -0.039300684f;
      sa[237] = -0.192974f;
      sa[238] = -0.18983075f;
      sa[239] = 0.17933041f;
      sa[240] = -0.018491894f;
      sa[241] = -0.2484653f;
      sa[242] = 0.059804235f;
      sa[243] = -0.20375508f;
      sa[244] = -0.23125976f;
      sa[245] = -0.13131493f;
      sa[246] = -0.3354643f;
      sa[247] = -0.07816206f;
      sa[248] = 0.32205692f;
      sa[249] = 0.29947895f;
      sa[250] = -0.2839835f;
      sa[251] = -0.1505971f;
      sa[252] = -0.2108321f;
      sa[253] = -0.23693566f;
      sa[254] = -0.24861638f;
      sa[255] = 0.30925584f;
      sa[256] = -0.16342299f;
      sa[257] = 0.24772054f;
      sa[258] = -0.21071088f;
      sa[259] = -0.11407584f;
      sa[260] = -0.13320254f;
      sa[261] = -0.08800106f;
      sa[262] = -0.20272033f;
      sa[263] = 0.3282642f;
      sa[264] = -0.13533132f;
      sa[265] = 0.04732025f;
      sa[266] = -0.23476768f;
      sa[267] = -0.19071035f;
      sa[268] = 0.12011542f;
      sa[269] = -0.17454852f;
      sa[270] = 0.030655572f;
      sa[271] = 0.03327074f;
      sa[272] = -0.069514476f;
      sa[273] = -0.10014776f;
      sa[274] = 0.13715291f;
      sa[275] = -0.033478327f;
      sa[276] = 0.029800858f;
      sa[277] = -0.2361223f;
      sa[278] = -0.14889209f;
      sa[279] = 0.136361f;
      sa[280] = -0.18308741f;
      sa[281] = 0.24371156f;
      sa[282] = -0.12250962f;
      sa[283] = -0.049519047f;
      sa[284] = 0.053108916f;
      sa[285] = -0.111662365f;
      sa[286] = 0.24171461f;
      sa[287] = 0.110614836f;
      sa[288] = -0.19512351f;
      sa[289] = -0.132658f;
      sa[290] = -0.033962358f;
      sa[291] = -0.14358073f;
      sa[292] = 0.1525144f;
      sa[293] = -0.11976294f;
      sa[294] = 0.03780363f;
      sa[295] = 0.18416667f;
      sa[296] = 0.19319026f;
      sa[297] = 0.26131672f;
      sa[298] = 0.027895955f;
      sa[299] = -0.13652411f;
      sa[300] = -0.04068147f;
      sa[301] = -0.12147778f;
      sa[302] = 0.07663812f;
      sa[303] = 0.055532362f;
      sa[304] = -0.17313786f;
      sa[305] = -0.0065637133f;
      sa[306] = 0.18605553f;
      sa[307] = -0.16354252f;
      sa[308] = 0.08615341f;
      sa[309] = 0.17160682f;
      sa[310] = 0.2705448f;
      sa[311] = 0.35972086f;
      sa[312] = -0.16230315f;
      sa[313] = -0.14441349f;
      sa[314] = -0.14187334f;
      sa[315] = 0.10114501f;
      sa[316] = -0.014028917f;
      sa[317] = -0.058461525f;
      sa[318] = 0.09194844f;
      sa[319] = 0.3339677f;
      sa[320] = -0.10789464f;
      sa[321] = 0.09914156f;
      sa[322] = 0.2882714f;
      sa[323] = -0.08809745f;
      sa[324] = -0.03271497f;
      sa[325] = 0.24195455f;
      sa[326] = -0.32474795f;
      sa[327] = 0.011137237f;
      sa[328] = -0.12123759f;
      sa[329] = 0.22363187f;
      sa[330] = -0.21551783f;
      sa[331] = -0.10554028f;
      sa[332] = -0.27498308f;
      sa[333] = 0.086158566f;
      sa[334] = -0.06054904f;
      sa[335] = 0.26762176f;
      sa[336] = -0.17903152f;
      sa[337] = -0.14485429f;
      sa[338] = 0.24206056f;
      sa[339] = -0.29879138f;
      sa[340] = -0.34071845f;
      sa[341] = -0.26732522f;
      sa[342] = 0.13734506f;
      sa[343] = 0.01947959f;
      sa[344] = -0.22110823f;
      sa[345] = 0.10961096f;
      sa[346] = 0.14430648f;
      sa[347] = -0.2637941f;
      sa[348] = 0.27168193f;
      sa[349] = -0.25771108f;
      sa[350] = -0.2547165f;
      sa[351] = -0.017702619f;
      sa[352] = 0.13942315f;
      sa[353] = -0.10091851f;
      sa[354] = 0.04820369f;
      sa[355] = -0.055317204f;
      sa[356] = -0.14184596f;
      sa[357] = 0.16584714f;
      sa[358] = -0.28339916f;
      sa[359] = 0.020381283f;
      sa[360] = 0.122742295f;
      sa[361] = -0.055373948f;
      sa[362] = -0.25117055f;
      sa[363] = 0.1424966f;
      sa[364] = -0.15275474f;
      sa[365] = -0.22980905f;
      sa[366] = -0.036210988f;
      sa[367] = -0.39770216f;
      sa[368] = -0.15580821f;
      sa[369] = 0.23554102f;
      sa[370] = -0.19931506f;
      sa[371] = 0.11211291f;
      sa[372] = -0.026499933f;
      sa[373] = 0.26543263f;
      sa[374] = -0.15054901f;
      sa[375] = -0.38963208f;
      sa[376] = -0.36013052f;
      sa[377] = -0.26381597f;
      sa[378] = 0.29332814f;
      sa[379] = 0.14582229f;
      sa[380] = -0.11386623f;
      sa[381] = -0.109868474f;
      sa[382] = -0.042990595f;
      sa[383] = -0.18401712f;
      sa[384] = -0.15882036f;
      sa[385] = 0.06491198f;
      sa[386] = -0.24759956f;
      sa[387] = -0.27122578f;
      sa[388] = 0.06509398f;
      sa[389] = -0.033208214f;
      sa[390] = -0.027168948f;
      sa[391] = -0.18686983f;
      sa[392] = 0.105635956f;
      sa[393] = -0.07286735f;
      sa[394] = 0.1352477f;
      sa[395] = 0.45100066f;
      sa[396] = 0.29589963f;
      sa[397] = -0.32196456f;
      sa[398] = 0.045502815f;
      sa[399] = -0.036334757f;
      sa[400] = 0.16096689f;
      sa[401] = 0.20715627f;
      sa[402] = -0.1538439f;
      sa[403] = 0.046088997f;
      sa[404] = 0.2114838f;
      sa[405] = -0.24817617f;
      sa[406] = -0.035479173f;
      sa[407] = 0.056891944f;
      sa[408] = -0.25640967f;
      sa[409] = -0.28707978f;
      sa[410] = -0.152157f;
      sa[411] = 0.09825894f;
      sa[412] = -0.231407f;
      sa[413] = 0.04141822f;
      sa[414] = 0.17945354f;
      sa[415] = 0.34092554f;
      sa[416] = -0.19489425f;
      sa[417] = 0.021857511f;
      sa[418] = -0.02082577f;
      sa[419] = 0.28294313f;
      sa[420] = 0.23301788f;
      sa[421] = 0.23020704f;
      sa[422] = 0.28617427f;
      sa[423] = 0.01964967f;
      sa[424] = 0.07339753f;
      sa[425] = -0.069143526f;
      sa[426] = -0.30147985f;
      sa[427] = 0.17082755f;
      sa[428] = -0.09690269f;
      sa[429] = -0.2820439f;
      sa[430] = 0.22039178f;
      sa[431] = 0.041671693f;
      sa[432] = -0.01106423f;
      sa[433] = 0.11782109f;
      sa[434] = 0.14393063f;
      sa[435] = 0.11076187f;
      sa[436] = -0.2883837f;
      sa[437] = -0.2480878f;
      sa[438] = -0.0036322165f;
      sa[439] = -0.091108866f;
      sa[440] = 0.3237917f;
      sa[441] = -0.32306716f;
      sa[442] = 0.032057345f;
      sa[443] = 0.108675726f;
      sa[444] = -0.20254357f;
      sa[445] = 0.076342836f;
      sa[446] = 0.23736978f;
      sa[447] = 0.010771704f;
      sa[448] = 0.13157463f;
      sa[449] = 0.16435026f;
      sa[450] = -0.078701615f;
      sa[451] = 0.10851432f;
      sa[452] = 0.16883393f;
      sa[453] = -0.07379459f;
      sa[454] = -0.15146904f;
      sa[455] = -0.1256219f;
      sa[456] = -0.110925f;
      sa[457] = 0.044789504f;
      sa[458] = -0.2297913f;
      sa[459] = 0.15569338f;
      sa[460] = 0.1942666f;
      sa[461] = 0.23000738f;
      sa[462] = 0.026305342f;
      sa[463] = 0.10829747f;
      sa[464] = -0.31581372f;
      sa[465] = 0.12075456f;
      sa[466] = 0.06981103f;
      sa[467] = 0.15282169f;
      sa[468] = 0.095336735f;
      sa[469] = 0.26751146f;
      sa[470] = 0.13035598f;
      sa[471] = 0.0045227734f;
      sa[472] = -0.017048731f;
      sa[473] = -0.106027424f;
      sa[474] = -0.03878367f;
      sa[475] = 0.019479664f;
      sa[476] = 0.23589647f;
      sa[477] = -0.18442242f;
      sa[478] = 0.11454004f;
      sa[479] = -0.15049638f;
      sa[480] = -0.30036655f;
      sa[481] = -0.19423252f;
      sa[482] = -0.26234174f;
      sa[483] = 0.12230217f;
      sa[484] = 0.17771442f;
      sa[485] = 0.09389845f;
      sa[486] = -0.028357664f;
      sa[487] = -0.09965258f;
      sa[488] = -0.20407718f;
      sa[489] = 0.035644054f;
      sa[490] = -0.02559802f;
      sa[491] = -0.30662957f;
      sa[492] = 0.24147312f;
      sa[493] = 0.22358084f;
      sa[494] = -0.19431582f;
      sa[495] = 0.06267621f;
      sa[496] = -0.01160445f;
      sa[497] = 0.044244107f;
      sa[498] = 0.16176935f;
      sa[499] = 0.10346941f;
      sa[500] = -0.14177775f;
      sa[501] = -0.129926f;
      sa[502] = 0.3013564f;
      sa[503] = 0.121867105f;
      sa[504] = -0.13988689f;
      sa[505] = -0.1851277f;
      sa[506] = 0.201973f;
      sa[507] = -0.067202374f;
      sa[508] = 0.114935756f;
      sa[509] = 0.18626507f;
      sa[510] = 0.1683757f;
      sa[511] = 0.06381959f;
      sa[512] = 0.075946964f;
      sa[513] = -0.062191732f;
      sa[514] = 0.21726279f;
      sa[515] = -0.2540569f;
      sa[516] = 0.021054313f;
      sa[517] = 0.052484628f;
      sa[518] = 0.12266992f;
      sa[519] = -0.021776564f;
      sa[520] = 0.2257125f;
      sa[521] = 0.13463554f;
      sa[522] = 0.11147296f;
      sa[523] = 0.11261749f;
      sa[524] = 0.20875843f;
      sa[525] = 0.20561294f;
      sa[526] = 0.018832061f;
      sa[527] = -0.018160265f;
      sa[528] = -0.022883954f;
      sa[529] = 0.0914966f;
      sa[530] = -0.17350961f;
      sa[531] = 0.22670908f;
      sa[532] = 0.1472443f;
      sa[533] = 0.14516772f;
      sa[534] = 0.12502442f;
      sa[535] = 0.020408452f;
      sa[536] = 0.06842656f;
      sa[537] = -0.18984134f;
      sa[538] = 0.27574235f;
      sa[539] = 0.33873174f;
      sa[540] = -0.24931487f;
      sa[541] = -0.16430928f;
      sa[542] = -0.04547002f;
      sa[543] = -0.11147649f;
      sa[544] = 0.13699275f;
      sa[545] = 0.14516015f;
      sa[546] = 0.12066735f;
      sa[547] = 0.14902814f;
      sa[548] = 0.08172158f;
      sa[549] = 0.1424666f;
      sa[550] = -0.054357775f;
      sa[551] = -0.028239667f;
      sa[552] = 0.0824456f;
      sa[553] = 0.0096139535f;
      sa[554] = -0.07254936f;
      sa[555] = -0.12684314f;
      sa[556] = -0.16179773f;
      sa[557] = -0.18943317f;
      sa[558] = -0.19820556f;
      sa[559] = 0.098400414f;
      sa[560] = -0.2950281f;
      sa[561] = -0.12025536f;
      sa[562] = 0.18738636f;
      sa[563] = -0.13859218f;
      sa[564] = 0.22755744f;
      sa[565] = 0.035473026f;
      sa[566] = 0.24887389f;
      sa[567] = -0.1152391f;
      sa[568] = -0.072486185f;
      sa[569] = 0.0011579309f;
      sa[570] = -0.012225348f;
      sa[571] = -0.11708884f;
      sa[572] = -0.021450002f;
      sa[573] = 0.25075224f;
      sa[574] = 0.10007118f;
      sa[575] = -0.33742732f;
      sa[576] = -0.12907368f;
      sa[577] = -0.017982239f;
      sa[578] = 0.09645242f;
      sa[579] = -0.1458371f;
      sa[580] = 0.08668325f;
      sa[581] = -0.12423491f;
      sa[582] = 0.07496868f;
      sa[583] = 0.022110386f;
      sa[584] = 0.10375354f;
      sa[585] = 0.15800121f;
      sa[586] = -0.16581483f;
      sa[587] = -0.18714666f;
      sa[588] = 0.046365418f;
      sa[589] = 0.10994786f;
      sa[590] = -0.033356864f;
      sa[591] = -0.023326255f;
      sa[592] = -0.3300983f;
      sa[593] = -0.17791432f;
      sa[594] = -0.05039799f;
      sa[595] = 0.069587894f;
      sa[596] = 0.22119775f;
      sa[597] = -0.045573846f;
      sa[598] = 0.18140674f;
      sa[599] = 0.05436789f;
      sa[600] = -0.24011135f;
      sa[601] = 0.22689928f;
      sa[602] = 0.025366103f;
      sa[603] = 0.2789472f;
      sa[604] = 0.22199929f;
      sa[605] = 0.17606102f;
      sa[606] = 0.20892262f;
      sa[607] = 0.055964865f;
      sa[608] = 0.042221658f;
      sa[609] = 0.15084594f;
      sa[610] = -0.012933763f;
      sa[611] = -0.16496111f;
      sa[612] = -0.06952225f;
      sa[613] = 0.0557095f;
      sa[614] = -0.054125886f;
      sa[615] = 0.030628942f;
      sa[616] = -0.019646486f;
      sa[617] = -0.3353528f;
      sa[618] = -0.20451507f;
      sa[619] = -0.2795523f;
      sa[620] = -0.033599947f;
      sa[621] = -0.24850982f;
      sa[622] = -0.30843824f;
      sa[623] = -0.2521857f;
      sa[624] = -0.08610854f;
      sa[625] = 0.20262052f;
      sa[626] = -0.039049122f;
      sa[627] = 0.14032955f;
      sa[628] = -0.35865778f;
      sa[629] = -0.1180199f;
      sa[630] = -0.11428227f;
      sa[631] = 0.2567846f;
      sa[632] = 0.0593923f;
      sa[633] = -0.21220577f;
      sa[634] = -0.23374404f;
      sa[635] = 0.06467502f;
      sa[636] = -0.22717044f;
      sa[637] = -0.068457104f;
      sa[638] = -0.12656799f;
      sa[639] = -0.17677067f;
      sa[640] = -0.19453858f;
      sa[641] = -0.359431f;
      sa[642] = 0.11128198f;
      sa[643] = -0.47357467f;
      sa[644] = -0.12358149f;
      sa[645] = -0.4002737f;
      sa[646] = 0.3817796f;
      sa[647] = -0.17340298f;
      sa[648] = -0.028161278f;
      sa[649] = 0.08649365f;
      sa[650] = 0.13478918f;
      sa[651] = 0.065291435f;
      sa[652] = 0.07911171f;
      sa[653] = -0.097939305f;
      sa[654] = -0.10660312f;
      sa[655] = -0.16888651f;
      sa[656] = 0.101773575f;
      sa[657] = 0.20083024f;
      sa[658] = -0.27773446f;
      sa[659] = -0.13508941f;
      sa[660] = -0.17216112f;
      sa[661] = -0.019961962f;
      sa[662] = -0.20271213f;
      sa[663] = 0.22820847f;
      sa[664] = -0.05235979f;
      sa[665] = 0.39767915f;
      sa[666] = -0.11072749f;
      sa[667] = -0.29520452f;
      sa[668] = 0.2953381f;
      sa[669] = -0.11287532f;
      sa[670] = 0.15154654f;
      sa[671] = 0.011714108f;
      sa[672] = -0.28775224f;
      sa[673] = 0.16452393f;
      sa[674] = 0.14474171f;
      sa[675] = -0.31079587f;
      sa[676] = -0.049186036f;
      sa[677] = -0.18487655f;
      sa[678] = 0.23383166f;
      sa[679] = -0.05974578f;
      sa[680] = 0.05199224f;
      sa[681] = 0.06377035f;
      sa[682] = 0.09493493f;
      sa[683] = -0.11762406f;
      sa[684] = -0.019524096f;
      sa[685] = -0.013630148f;
      sa[686] = -0.14287004f;
      sa[687] = -0.23378599f;
      sa[688] = -0.23739581f;
      sa[689] = -0.25028455f;
      sa[690] = -0.021314526f;
      sa[691] = 0.17082424f;
      sa[692] = -0.14723024f;
      sa[693] = -0.16769455f;
      sa[694] = 0.26183492f;
      sa[695] = -0.0898939f;
      sa[696] = -0.09842356f;
      sa[697] = -0.18170552f;
      sa[698] = -0.18992724f;
      sa[699] = 0.34407187f;
      sa[700] = 0.12184414f;
      sa[701] = 0.08648255f;
      sa[702] = 0.25297204f;
      sa[703] = -0.16835633f;
      sa[704] = -0.24857287f;
      sa[705] = -0.001299274f;
      sa[706] = -0.11650952f;
      sa[707] = 0.084582426f;
      sa[708] = -0.0023921267f;
      sa[709] = -0.27582252f;
      sa[710] = 0.3079386f;
      sa[711] = -0.0037096175f;
      sa[712] = 0.03609602f;
      sa[713] = 0.16043174f;
      sa[714] = 0.17346993f;
      sa[715] = 0.17273517f;
      sa[716] = 0.077353664f;
      sa[717] = 0.21582171f;
      sa[718] = -0.08861287f;
      sa[719] = 0.07351754f;
      sa[720] = -0.17476673f;
      sa[721] = 0.086858615f;
      sa[722] = -0.20630424f;
      sa[723] = 0.08967599f;
      sa[724] = 0.059629522f;
      sa[725] = -0.33032557f;
      sa[726] = -0.19606209f;
      sa[727] = -0.30499992f;
      sa[728] = -0.091088444f;
      sa[729] = -0.06287541f;
      sa[730] = 0.03469914f;
      sa[731] = -0.27058122f;
      sa[732] = 0.13474774f;
      sa[733] = 0.1405901f;
      sa[734] = -0.14197944f;
      sa[735] = 0.22340955f;
      sa[736] = -0.17678371f;
      sa[737] = 0.09104494f;
      sa[738] = -0.027305087f;
      sa[739] = -0.46359313f;
      sa[740] = -0.2900241f;
      sa[741] = -0.2862305f;
      sa[742] = 0.10332365f;
      sa[743] = 0.010288824f;
      sa[744] = -0.002674802f;
      sa[745] = -0.2571712f;
      sa[746] = 0.17876056f;
      sa[747] = -0.27967152f;
      sa[748] = -0.20677687f;
      sa[749] = -0.22410424f;
      sa[750] = 0.110517636f;
      sa[751] = 0.17305532f;
      sa[752] = 0.010853597f;
      sa[753] = 0.25787452f;
      sa[754] = -0.07118637f;
      sa[755] = 0.10966152f;
      sa[756] = -0.20198908f;
      sa[757] = 0.24854311f;
      sa[758] = -0.05842986f;
      sa[759] = -0.17141895f;
      sa[760] = -0.053692188f;
      sa[761] = 0.033785354f;
      sa[762] = -0.09371529f;
      sa[763] = 0.259764f;
      sa[764] = 0.047973707f;
      sa[765] = -0.022112086f;
      sa[766] = -0.19326414f;
      sa[767] = 0.05624747f;
      sa[768] = -0.17842102f;
      sa[769] = -0.3053117f;
      sa[770] = -0.03006625f;
      sa[771] = 0.09542778f;
      sa[772] = 0.07369158f;
      sa[773] = -0.21368003f;
      sa[774] = -0.003600715f;
      sa[775] = 0.18954569f;
      sa[776] = -0.04807469f;
      sa[777] = 0.097474456f;
      sa[778] = 0.17074923f;
      sa[779] = -0.054931495f;
      sa[780] = 0.008185647f;
      sa[781] = -0.0507666f;
      sa[782] = 0.15543638f;
      sa[783] = -0.041587267f;
      sa[784] = -0.12425583f;
      sa[785] = -0.075733386f;
      sa[786] = -0.07598211f;
      sa[787] = -0.12094084f;
      sa[788] = -0.21513623f;
      sa[789] = 0.29413468f;
      sa[790] = -0.17073345f;
      sa[791] = -0.11433284f;
      sa[792] = 0.20011465f;
      sa[793] = -0.035711236f;
      sa[794] = -0.05565762f;
      sa[795] = 0.12963185f;
      sa[796] = 0.24768977f;
      sa[797] = -0.05310235f;
      sa[798] = -0.1874191f;
      sa[799] = -0.164694f;
      sa[800] = 0.22664183f;
      sa[801] = 0.076592125f;
      sa[802] = 0.22545329f;
      sa[803] = 0.17091176f;
      sa[804] = 0.30832928f;
      sa[805] = 0.4909536f;
      sa[806] = 0.39018404f;
      sa[807] = 0.30177805f;
      sa[808] = 0.091002576f;
      sa[809] = -0.1611223f;
      sa[810] = 0.009450572f;
      sa[811] = 0.21841098f;
      sa[812] = 0.18913236f;
      sa[813] = -0.28585464f;
      sa[814] = 0.10926852f;
      sa[815] = -0.20118827f;
      sa[816] = -0.11032454f;
      sa[817] = -0.12815031f;
      sa[818] = -0.08041707f;
      sa[819] = -0.13835509f;
      sa[820] = -0.23388647f;
      sa[821] = -0.18439361f;
      sa[822] = -0.19311947f;
      sa[823] = 0.07304182f;
      sa[824] = 0.12970838f;
      sa[825] = 0.31047684f;
      sa[826] = -0.32535532f;
      sa[827] = -0.36213738f;
      sa[828] = 0.11667738f;
      sa[829] = -0.077429876f;
      sa[830] = 0.18224697f;
      sa[831] = 0.28345427f;
      sa[832] = 0.13207917f;
      sa[833] = 0.11150234f;
      sa[834] = 0.2293123f;
      sa[835] = -0.120300926f;
      sa[836] = 0.21427962f;
      sa[837] = -0.16159219f;
      sa[838] = 0.08885856f;
      sa[839] = -0.134114f;
      sa[840] = 0.23976474f;
      sa[841] = 0.17624775f;
      sa[842] = 0.23503871f;
      sa[843] = 0.050187707f;
      sa[844] = 0.0537351f;
      sa[845] = 0.17318125f;
      sa[846] = -0.26026422f;
      sa[847] = -0.06846346f;
      sa[848] = 0.20985842f;
      sa[849] = 0.21764258f;
      sa[850] = 6.407255E-4f;
      sa[851] = 0.04881829f;
      sa[852] = 0.23369558f;
      sa[853] = 0.15177298f;
      sa[854] = 0.21363153f;
      sa[855] = 0.050733052f;
      sa[856] = 0.098924115f;
      sa[857] = -0.16494054f;
      sa[858] = 0.1504371f;
      sa[859] = 0.027491301f;
      sa[860] = 0.3245842f;
      sa[861] = -0.14661255f;
      sa[862] = -0.17210099f;
      sa[863] = -0.020143932f;
      sa[864] = -0.1918955f;
      sa[865] = 0.27280354f;
      sa[866] = -0.10313401f;
      sa[867] = -0.10827135f;
      sa[868] = -0.16351706f;
      sa[869] = 0.1826019f;
      sa[870] = -0.07179381f;
      sa[871] = 0.19990784f;
      sa[872] = 0.22516643f;
      sa[873] = -0.008639865f;
      sa[874] = 0.03087858f;
      sa[875] = -0.2760772f;
      sa[876] = -0.25773323f;
      sa[877] = -0.25245282f;
      sa[878] = -0.037867527f;
      sa[879] = 0.21186495f;
      sa[880] = -0.06984596f;
      sa[881] = -0.05667564f;
      sa[882] = 0.12530358f;
      sa[883] = 0.19331104f;
      sa[884] = -0.12825732f;
      sa[885] = -0.11208519f;
      sa[886] = 0.081644736f;
      sa[887] = -0.004430459f;
      sa[888] = -0.08164124f;
      sa[889] = 0.03902752f;
      sa[890] = -0.2959375f;
      sa[891] = 0.42249343f;
      sa[892] = 0.17346412f;
      sa[893] = 0.27415502f;
      sa[894] = 0.044293586f;
      sa[895] = 0.26707846f;
      sa[896] = -0.18738699f;
      sa[897] = 0.26301506f;
      sa[898] = -0.028736135f;
      sa[899] = 0.20616846f;
      sa[900] = -0.10883097f;
      sa[901] = 0.08189537f;
      sa[902] = -0.36052698f;
      sa[903] = -0.10674198f;
      sa[904] = 0.12697922f;
      sa[905] = 0.11230413f;
      sa[906] = -0.29019982f;
      sa[907] = -0.38045725f;
      sa[908] = -0.23525216f;
      sa[909] = 0.017081503f;
      sa[910] = -0.0056332103f;
      sa[911] = -0.13981706f;
      sa[912] = -0.070060946f;
      sa[913] = -0.026883876f;
      sa[914] = -0.23236446f;
      sa[915] = -0.10853683f;
      sa[916] = 0.069141835f;
      sa[917] = -0.06696262f;
      sa[918] = 0.2820262f;
      sa[919] = -0.024195261f;
      sa[920] = 0.09980859f;
      sa[921] = -0.11280307f;
      sa[922] = -0.15168938f;
      sa[923] = -0.2000311f;
      sa[924] = -0.15777062f;
      sa[925] = -0.21762776f;
      sa[926] = 0.1592511f;
      sa[927] = -0.28372297f;
      sa[928] = 0.16469133f;
      sa[929] = 0.059815682f;
      sa[930] = 0.057990555f;
      sa[931] = -0.14081688f;
      sa[932] = 0.21981928f;
      sa[933] = -0.03755849f;
      sa[934] = 0.25282076f;
      sa[935] = -0.13718335f;
      sa[936] = 0.06585506f;
      sa[937] = 0.20654814f;
      sa[938] = -0.01785517f;
      sa[939] = -0.12966494f;
      sa[940] = -0.012338276f;
      sa[941] = -0.29573578f;
      sa[942] = -0.23705529f;
      sa[943] = -0.07135051f;
      sa[944] = -0.23580769f;
      sa[945] = 0.10155129f;
      sa[946] = 0.10224178f;
      sa[947] = 0.1888743f;
      sa[948] = 0.07512536f;
      sa[949] = -0.21311459f;
      sa[950] = 0.054261185f;
      sa[951] = -0.021338774f;
      sa[952] = -0.16708346f;
      sa[953] = -0.112734646f;
      sa[954] = -0.25514922f;
      sa[955] = 0.040231626f;
      sa[956] = -0.00421241f;
      sa[957] = 0.07117069f;
      sa[958] = 0.097983055f;
      sa[959] = -0.080927044f;
      sa[960] = 0.33756414f;
      sa[961] = -0.11993766f;
      sa[962] = -0.014318933f;
      sa[963] = 0.050280716f;
      sa[964] = -0.14888725f;
      sa[965] = 0.28350863f;
      sa[966] = -0.06737828f;
      sa[967] = -0.1739064f;
      sa[968] = 0.11099994f;
      sa[969] = 0.09273334f;
      sa[970] = 0.27693686f;
      sa[971] = 0.01948589f;
      sa[972] = -0.1752176f;
      sa[973] = -0.2873063f;
      sa[974] = -0.40150684f;
      sa[975] = -0.1910207f;
      sa[976] = -0.13495691f;
      sa[977] = 0.01646526f;
      sa[978] = -0.10761305f;
      sa[979] = 0.042365573f;
      sa[980] = 0.08579721f;
      sa[981] = -0.24753708f;
      sa[982] = 0.11857539f;
      sa[983] = -0.052937858f;
      sa[984] = -0.28448474f;
      sa[985] = 0.051311918f;
      sa[986] = -0.24671143f;
      sa[987] = -0.012320923f;
      sa[988] = 0.071191944f;
      sa[989] = 0.13066351f;
      sa[990] = 0.3300321f;
      sa[991] = -0.13622889f;
      sa[992] = -0.22154266f;
      sa[993] = -0.07915301f;
      sa[994] = -0.16828777f;
      sa[995] = -0.3415607f;
      sa[996] = 0.15574104f;
      sa[997] = 0.17279683f;
      sa[998] = 0.12334827f;
      sa[999] = 0.12413578f;
      sa[1000] = -0.006594491f;
      sa[1001] = 0.18991461f;
      sa[1002] = 0.20900168f;
      sa[1003] = -0.17346705f;
      sa[1004] = 0.15819642f;
      sa[1005] = -0.2882801f;
      sa[1006] = -0.06792995f;
      sa[1007] = 0.06583022f;
      sa[1008] = 0.2019279f;
      sa[1009] = 0.07335586f;
      sa[1010] = 0.03141502f;
      sa[1011] = 0.35208577f;
      sa[1012] = -0.050474692f;
      sa[1013] = 0.1618621f;
      sa[1014] = 0.2946696f;
      sa[1015] = -0.25057042f;
      sa[1016] = 0.2965084f;
      sa[1017] = 0.058176246f;
      sa[1018] = -0.054221872f;
      sa[1019] = 0.12363789f;
      sa[1020] = -0.2058607f;
      sa[1021] = 0.11921363f;
      sa[1022] = 0.2707072f;
      sa[1023] = 0.13445777f;
      sa[1024] = 0.023702323f;
      sa[1025] = 0.11413974f;
      sa[1026] = 0.12456902f;
      sa[1027] = 0.17882252f;
      sa[1028] = 0.313711f;
      sa[1029] = -0.0076564397f;
      sa[1030] = -0.1320315f;
      sa[1031] = -0.007901735f;
      sa[1032] = -0.2492368f;
      sa[1033] = 0.04014356f;
      sa[1034] = -0.08552045f;
      sa[1035] = -0.2810158f;
      sa[1036] = 0.26204345f;
      sa[1037] = 0.03043605f;
      sa[1038] = -0.2015211f;
      sa[1039] = 0.25703144f;
      sa[1040] = 0.013546264f;
      sa[1041] = 0.12212229f;
      sa[1042] = -0.26049596f;
      sa[1043] = -0.09769755f;
      sa[1044] = 0.2411391f;
      sa[1045] = 0.19899951f;
      sa[1046] = -0.2934643f;
      sa[1047] = -0.13358767f;
      sa[1048] = 0.10629234f;
      sa[1049] = -0.15320832f;
      sa[1050] = 0.02184231f;
      sa[1051] = -0.26707092f;
      sa[1052] = 0.18797885f;
      sa[1053] = 0.22833507f;
      sa[1054] = 0.19515759f;
      sa[1055] = 0.005097441f;
      sa[1056] = 0.23942953f;
      sa[1057] = -0.23020832f;
      sa[1058] = 0.21166399f;
      sa[1059] = -0.24388239f;
      sa[1060] = -0.35413456f;
      sa[1061] = -0.03878001f;
      sa[1062] = 0.28073305f;
      sa[1063] = -0.06949755f;
      sa[1064] = 0.09655623f;
      sa[1065] = -0.044738065f;
      sa[1066] = 0.18621807f;
      sa[1067] = -0.35630852f;
      sa[1068] = -0.3678966f;
      sa[1069] = 0.17541729f;
      sa[1070] = 0.10898243f;
      sa[1071] = 0.1129419f;
      sa[1072] = -0.28753668f;
      sa[1073] = 0.053237554f;
      sa[1074] = 0.041342217f;
      sa[1075] = -0.30663282f;
      sa[1076] = -0.180431f;
      sa[1077] = 1.13884205E-4f;
      sa[1078] = 0.11083209f;
      sa[1079] = 0.13051856f;
      sa[1080] = 0.1856379f;
      sa[1081] = 0.14641076f;
      sa[1082] = -0.289205f;
      sa[1083] = -0.19061711f;
      sa[1084] = 0.2524584f;
      sa[1085] = -0.21571103f;
      sa[1086] = -0.2515121f;
      sa[1087] = -0.18294936f;
      sa[1088] = -0.21150738f;
      sa[1089] = 0.06660025f;
      sa[1090] = -0.23367879f;
      sa[1091] = 0.06978596f;
      sa[1092] = -0.27274635f;
      sa[1093] = -0.2969733f;
      sa[1094] = -0.0151285175f;
      sa[1095] = -0.22164813f;
      sa[1096] = 0.03776412f;
      sa[1097] = -0.123326205f;
      sa[1098] = 0.057800777f;
      sa[1099] = -0.04776457f;
      sa[1100] = -0.1559354f;
      sa[1101] = 0.12747999f;
      sa[1102] = -0.14604516f;
      sa[1103] = 0.26744467f;
      sa[1104] = -0.2375907f;
      sa[1105] = -0.11461699f;
      sa[1106] = -0.028862163f;
      sa[1107] = 0.24948698f;
      sa[1108] = -0.20940419f;
      sa[1109] = 0.22609645f;
      sa[1110] = 0.13853085f;
      sa[1111] = -0.24641027f;
      sa[1112] = 0.26166335f;
      sa[1113] = 0.3375377f;
      sa[1114] = -0.1212788f;
      sa[1115] = 0.09272429f;
      sa[1116] = -0.00494038f;
      sa[1117] = -0.22975096f;
      sa[1118] = -0.21078554f;
      sa[1119] = 0.011869238f;
      sa[1120] = 0.1913224f;
      sa[1121] = 0.043578003f;
      sa[1122] = 0.27165785f;
      sa[1123] = 0.24459665f;
      sa[1124] = 0.050543196f;
      sa[1125] = -0.08757905f;
      sa[1126] = 0.15975396f;
      sa[1127] = 0.1847307f;
      sa[1128] = 0.018669274f;
      sa[1129] = -0.13364945f;
      sa[1130] = 0.23392852f;
      sa[1131] = 0.28787103f;
      sa[1132] = -0.23763455f;
      sa[1133] = -0.2116236f;
      sa[1134] = 0.33946505f;
      sa[1135] = -0.42674592f;
      sa[1136] = -0.027445326f;
      sa[1137] = 0.19709846f;
      sa[1138] = -0.05707032f;
      sa[1139] = 0.11282375f;
      sa[1140] = 0.16926767f;
      sa[1141] = -0.27921373f;
      sa[1142] = 0.08476528f;
      sa[1143] = -0.07156163f;
      sa[1144] = -0.29953024f;
      sa[1145] = 0.13393892f;
      sa[1146] = 0.17201443f;
      sa[1147] = -0.08402144f;
      sa[1148] = 0.023524608f;
      sa[1149] = 0.012668335f;
      sa[1150] = -0.22556314f;
      sa[1151] = -0.2370742f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2413542f;
      sa[1] = -0.13281207f;
      sa[2] = -0.5708523f;
      sa[3] = -1.0978062f;
      sa[4] = 0.056989234f;
      sa[5] = 0.24282245f;
      sa[6] = 1.4418035f;
      sa[7] = -0.6684785f;
      sa[8] = -0.96869427f;
      sa[9] = 0.7978044f;
      sa[10] = 0.05594332f;
      sa[11] = 0.45881218f;
      sa[12] = 0.14582798f;
      sa[13] = -0.012128885f;
      sa[14] = -1.4918749f;
      sa[15] = 1.2039776f;
      sa[16] = 1.5469131f;
      sa[17] = -0.4304122f;
      sa[18] = 0.08014576f;
      sa[19] = -0.3770937f;
      sa[20] = 1.1674806f;
      sa[21] = 0.17907248f;
      sa[22] = -0.7882616f;
      sa[23] = 0.7332137f;
      sa[24] = -1.4371473f;
      sa[25] = 0.4830263f;
      sa[26] = -0.24609347f;
      sa[27] = 1.5144652f;
      sa[28] = -1.2980492f;
      sa[29] = -0.4616219f;
      sa[30] = 0.40174794f;
      sa[31] = -0.589105f;
      sa[32] = -1.1622089f;
      sa[33] = -1.4955992f;
      sa[34] = 0.015517057f;
      sa[35] = 1.4192897f;
      sa[36] = -0.30956724f;
      sa[37] = -0.029133359f;
      sa[38] = 0.2497093f;
      sa[39] = 0.7429548f;
      sa[40] = -0.72860956f;
      sa[41] = -1.3447554f;
      sa[42] = -1.0969594f;
      sa[43] = -1.6105168f;
      sa[44] = 0.059608642f;
      sa[45] = -1.3415421f;
      sa[46] = 0.9689213f;
      sa[47] = 1.1700301f;
      sa[48] = -1.314253f;
      sa[49] = -1.1644925f;
      sa[50] = 0.58013684f;
      sa[51] = -0.32553872f;
      sa[52] = 0.88203126f;
      sa[53] = 0.8440254f;
      sa[54] = -0.14731558f;
      sa[55] = 1.1764799f;
      sa[56] = -1.0237944f;
      sa[57] = -1.1359298f;
      sa[58] = 0.13201882f;
      sa[59] = -0.33526874f;
      sa[60] = 1.46003f;
      sa[61] = -0.6247665f;
      sa[62] = -0.31047213f;
      sa[63] = 0.70599794f;
      sa[64] = 1.537628f;
      sa[65] = -0.60721576f;
      sa[66] = 0.7431109f;
      sa[67] = 1.6867907f;
      sa[68] = 0.74950755f;
      sa[69] = -1.0969106f;
      sa[70] = -1.5915596f;
      sa[71] = -0.35163844f;
      sa[72] = -1.3730142f;
      sa[73] = 1.1217402f;
      sa[74] = 1.348075f;
      sa[75] = -0.0994568f;
      sa[76] = 1.0081908f;
      sa[77] = 0.5877505f;
      sa[78] = -1.2237945f;
      sa[79] = 0.9163774f;
      sa[80] = -0.84306955f;
      sa[81] = 0.34674686f;
      sa[82] = 0.76371175f;
      sa[83] = -0.6751559f;
      sa[84] = -1.6510727f;
      sa[85] = -1.2749121f;
      sa[86] = 0.21725985f;
      sa[87] = 1.2230332f;
      sa[88] = -1.6003351f;
      sa[89] = -0.50237817f;
      sa[90] = -0.9929736f;
      sa[91] = 1.4581265f;
      sa[92] = -0.2728431f;
      sa[93] = 0.22301026f;
      sa[94] = -1.5926654f;
      sa[95] = -0.37178892f;
      sa[96] = -1.1541559f;
      sa[97] = 0.23897098f;
      sa[98] = -0.09788236f;
      sa[99] = 0.31348008f;
      sa[100] = -1.3709899f;
      sa[101] = -0.4402948f;
      sa[102] = 1.2494047f;
      sa[103] = 0.2683139f;
      sa[104] = -0.100153f;
      sa[105] = -0.5804296f;
      sa[106] = 1.7029519f;
      sa[107] = 1.2796993f;
      sa[108] = 0.68648744f;
      sa[109] = 0.13467005f;
      sa[110] = 0.8383995f;
      sa[111] = -0.75620854f;
      sa[112] = -1.1230618f;
      sa[113] = 0.32097793f;
      sa[114] = 0.17577028f;
      sa[115] = -0.3462977f;
      sa[116] = 1.1914457f;
      sa[117] = 0.03916341f;
      sa[118] = -1.480542f;
      sa[119] = -0.9139321f;
      sa[120] = -0.30513376f;
      sa[121] = 1.1025866f;
      sa[122] = -0.0077185924f;
      sa[123] = 0.41099262f;
      sa[124] = -1.0182174f;
      sa[125] = 0.9669146f;
      sa[126] = -0.9079995f;
      sa[127] = 0.4791766f;
      sa[128] = -0.74682873f;
      sa[129] = 0.7263074f;
      sa[130] = -0.36581647f;
      sa[131] = 0.9067016f;
      sa[132] = 0.53088075f;
      sa[133] = 0.6618599f;
      sa[134] = 0.5756447f;
      sa[135] = -1.1519353f;
      sa[136] = 0.5253302f;
      sa[137] = -0.67977786f;
      sa[138] = -0.20163736f;
      sa[139] = 1.1980753f;
      sa[140] = -0.36093536f;
      sa[141] = 0.1193037f;
      sa[142] = 0.39387426f;
      sa[143] = -0.77056795f;
      sa[144] = 1.0028338f;
      sa[145] = -0.903147f;
      sa[146] = -0.05512709f;
      sa[147] = -0.26372615f;
      sa[148] = -0.8309216f;
      sa[149] = 1.0791128f;
      sa[150] = -1.1547035f;
      sa[151] = -1.5158974f;
      sa[152] = 1.6671647f;
      sa[153] = -0.6118858f;
      sa[154] = 1.3490678f;
      sa[155] = -1.4575573f;
      sa[156] = -1.5774424f;
      sa[157] = -1.1144712f;
      sa[158] = -0.20661382f;
      sa[159] = -0.73248297f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


