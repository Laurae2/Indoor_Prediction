/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:57.338+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_05 > h2o_nn_32x6_Tanh_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_05", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_05_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_05_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_05_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-9036971790325710800L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_05_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_05_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_05_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_05_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_05_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_05_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_05_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.018153430420516377;
      sa[1] = 0.04031532352615414;
      sa[2] = -0.07527237636127297;
      sa[3] = -0.0914633488882824;
      sa[4] = 0.007795371033182956;
      sa[5] = 0.049005147346467104;
      sa[6] = 0.16564716367504162;
      sa[7] = -0.11574329956632401;
      sa[8] = -0.018183480130646933;
      sa[9] = 0.04964837603810811;
      sa[10] = -9.067655353197854E-4;
      sa[11] = 0.03662278455733711;
      sa[12] = 0.016834387578701586;
      sa[13] = 0.06524823302793512;
      sa[14] = -0.07094691615784429;
      sa[15] = 0.03606209836027892;
      sa[16] = 0.07039293153511532;
      sa[17] = -0.01897865614314732;
      sa[18] = -0.1190406234525139;
      sa[19] = 0.04892706307062891;
      sa[20] = 0.08295102425284619;
      sa[21] = -0.013200170005810388;
      sa[22] = -0.050628546080476566;
      sa[23] = 0.015814839291964825;
      sa[24] = -0.06975148709310316;
      sa[25] = 0.06729312939554018;
      sa[26] = -0.009746282721368935;
      sa[27] = 0.07315123189194063;
      sa[28] = -0.08793547884471353;
      sa[29] = -0.025941560823234;
      sa[30] = 0.06860250066584012;
      sa[31] = -0.025773809177276025;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_05_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_05_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.056676419971665726;
      sa[1] = -0.05602840871299539;
      sa[2] = -0.09644400354224777;
      sa[3] = -0.00422673727174869;
      sa[4] = -0.03233634899344014;
    }
  }
}
class h2o_nn_32x6_Tanh_05_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_05_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_05_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.09721293f;
      sa[1] = 0.22763239f;
      sa[2] = 0.08879236f;
      sa[3] = 0.19348721f;
      sa[4] = -0.19882238f;
      sa[5] = -0.16009712f;
      sa[6] = -0.06416224f;
      sa[7] = 0.1570724f;
      sa[8] = 0.2338072f;
      sa[9] = -0.19458127f;
      sa[10] = -0.104275316f;
      sa[11] = -0.12818545f;
      sa[12] = 0.05645113f;
      sa[13] = -0.23994137f;
      sa[14] = -0.187494f;
      sa[15] = -0.09063319f;
      sa[16] = 0.06668083f;
      sa[17] = 0.115687296f;
      sa[18] = -0.24639589f;
      sa[19] = 0.23103388f;
      sa[20] = 0.17649896f;
      sa[21] = -0.35733f;
      sa[22] = 0.17685953f;
      sa[23] = -0.25702092f;
      sa[24] = 0.17999345f;
      sa[25] = 0.17217903f;
      sa[26] = -0.2591154f;
      sa[27] = 0.22226794f;
      sa[28] = 0.2099477f;
      sa[29] = -0.29192954f;
      sa[30] = -0.15468186f;
      sa[31] = 0.077271424f;
      sa[32] = 0.20475747f;
      sa[33] = -0.24246304f;
      sa[34] = 0.030994987f;
      sa[35] = -0.14031917f;
      sa[36] = 0.062254783f;
      sa[37] = 0.23952605f;
      sa[38] = -0.1448325f;
      sa[39] = 0.0536646f;
      sa[40] = 0.003130078f;
      sa[41] = -0.09106385f;
      sa[42] = -0.19924425f;
      sa[43] = -0.001256639f;
      sa[44] = 0.20286211f;
      sa[45] = -0.26811442f;
      sa[46] = 0.05487734f;
      sa[47] = -0.03326253f;
      sa[48] = 0.20508108f;
      sa[49] = 0.23765624f;
      sa[50] = 0.14057311f;
      sa[51] = -0.31057334f;
      sa[52] = -0.10871164f;
      sa[53] = 0.17063297f;
      sa[54] = 0.19914092f;
      sa[55] = 0.08102632f;
      sa[56] = -0.17465723f;
      sa[57] = -0.29477447f;
      sa[58] = 0.21482857f;
      sa[59] = -0.1900789f;
      sa[60] = -0.24936648f;
      sa[61] = 0.15709762f;
      sa[62] = 0.16860524f;
      sa[63] = 0.08823257f;
      sa[64] = 0.15323327f;
      sa[65] = 0.14020954f;
      sa[66] = 0.04390742f;
      sa[67] = 0.17507532f;
      sa[68] = -0.18785192f;
      sa[69] = 0.08000298f;
      sa[70] = -0.05140498f;
      sa[71] = 0.34488887f;
      sa[72] = -0.09033308f;
      sa[73] = 0.2793232f;
      sa[74] = -0.13123785f;
      sa[75] = 0.13602948f;
      sa[76] = -0.19189186f;
      sa[77] = -0.04052452f;
      sa[78] = -0.01764169f;
      sa[79] = 0.15362291f;
      sa[80] = -0.14497541f;
      sa[81] = -0.15003915f;
      sa[82] = -0.04793545f;
      sa[83] = 0.13627136f;
      sa[84] = 0.014209296f;
      sa[85] = -0.13182662f;
      sa[86] = 0.20367241f;
      sa[87] = 0.29230583f;
      sa[88] = 0.3427913f;
      sa[89] = 0.0453469f;
      sa[90] = -0.16393079f;
      sa[91] = 0.19040032f;
      sa[92] = 0.12685882f;
      sa[93] = -0.19088748f;
      sa[94] = -0.12750928f;
      sa[95] = -0.21525f;
      sa[96] = 0.09690458f;
      sa[97] = 0.07107718f;
      sa[98] = 0.11965295f;
      sa[99] = -0.14366178f;
      sa[100] = -0.048691973f;
      sa[101] = -0.19997844f;
      sa[102] = -0.24550697f;
      sa[103] = -0.10857701f;
      sa[104] = -0.060176194f;
      sa[105] = -0.26074076f;
      sa[106] = -0.12405863f;
      sa[107] = 0.19581231f;
      sa[108] = 0.1349925f;
      sa[109] = -0.14418119f;
      sa[110] = -0.07360648f;
      sa[111] = 0.13837646f;
      sa[112] = 0.1336537f;
      sa[113] = 0.041235454f;
      sa[114] = -0.12555504f;
      sa[115] = 0.015929839f;
      sa[116] = -0.24784848f;
      sa[117] = 0.02433123f;
      sa[118] = -0.2496811f;
      sa[119] = -0.1952302f;
      sa[120] = 0.23456338f;
      sa[121] = 0.23493426f;
      sa[122] = 0.32049218f;
      sa[123] = 0.3355057f;
      sa[124] = 0.35539812f;
      sa[125] = 0.31725734f;
      sa[126] = -0.29991528f;
      sa[127] = -0.14736077f;
      sa[128] = 0.11131611f;
      sa[129] = 0.18364142f;
      sa[130] = -0.078169495f;
      sa[131] = 0.38985252f;
      sa[132] = 0.26140174f;
      sa[133] = -0.25924262f;
      sa[134] = 0.03183204f;
      sa[135] = -0.1626854f;
      sa[136] = -0.23013988f;
      sa[137] = -0.0033292903f;
      sa[138] = 0.12943548f;
      sa[139] = -0.016936446f;
      sa[140] = -0.11386351f;
      sa[141] = -0.22156702f;
      sa[142] = 0.2273826f;
      sa[143] = -0.20019501f;
      sa[144] = 0.2531494f;
      sa[145] = -0.10095979f;
      sa[146] = -0.19346382f;
      sa[147] = 0.14838225f;
      sa[148] = 0.17201082f;
      sa[149] = 0.20262416f;
      sa[150] = 0.27123636f;
      sa[151] = -0.20136434f;
      sa[152] = 0.018022075f;
      sa[153] = 0.29567257f;
      sa[154] = 0.274792f;
      sa[155] = -0.18749987f;
      sa[156] = 0.13529062f;
      sa[157] = -0.15831843f;
      sa[158] = 0.075585246f;
      sa[159] = 0.12867397f;
      sa[160] = 0.13981885f;
      sa[161] = 0.27492356f;
      sa[162] = -0.21590337f;
      sa[163] = 0.07921187f;
      sa[164] = 0.23802032f;
      sa[165] = -0.02134981f;
      sa[166] = -0.07805273f;
      sa[167] = -0.03782793f;
      sa[168] = 0.22807328f;
      sa[169] = 0.30003816f;
      sa[170] = 0.023555407f;
      sa[171] = 0.033917494f;
      sa[172] = -0.01652111f;
      sa[173] = -0.07433446f;
      sa[174] = 0.03171404f;
      sa[175] = -0.12870976f;
      sa[176] = 0.011761659f;
      sa[177] = -0.017991025f;
      sa[178] = -0.08211107f;
      sa[179] = 0.034435235f;
      sa[180] = -0.1082133f;
      sa[181] = -0.28288418f;
      sa[182] = -0.07844349f;
      sa[183] = -0.0066315844f;
      sa[184] = 0.30463344f;
      sa[185] = 0.16283327f;
      sa[186] = -0.3099854f;
      sa[187] = 0.12170245f;
      sa[188] = -0.14216329f;
      sa[189] = 0.2887466f;
      sa[190] = 0.089192174f;
      sa[191] = -0.09651291f;
      sa[192] = -0.12641348f;
      sa[193] = 0.2057795f;
      sa[194] = 0.04120876f;
      sa[195] = 0.2758653f;
      sa[196] = 0.22505029f;
      sa[197] = 0.09193928f;
      sa[198] = 0.14794455f;
      sa[199] = -0.06275027f;
      sa[200] = 0.04005055f;
      sa[201] = -0.22589353f;
      sa[202] = 0.11658515f;
      sa[203] = 0.047057122f;
      sa[204] = -0.10125478f;
      sa[205] = 0.20942181f;
      sa[206] = 0.26075262f;
      sa[207] = 0.23810053f;
      sa[208] = -0.21602656f;
      sa[209] = -0.014311541f;
      sa[210] = -0.238857f;
      sa[211] = -0.15466902f;
      sa[212] = 0.32047132f;
      sa[213] = -0.1607902f;
      sa[214] = -0.19152948f;
      sa[215] = -0.0116843395f;
      sa[216] = 0.060952205f;
      sa[217] = 0.07287346f;
      sa[218] = -0.24867128f;
      sa[219] = 0.11999628f;
      sa[220] = -0.17369074f;
      sa[221] = 0.03838459f;
      sa[222] = 0.219649f;
      sa[223] = 0.05736996f;
      sa[224] = 0.05919752f;
      sa[225] = 0.2688036f;
      sa[226] = -0.2315617f;
      sa[227] = 0.23197001f;
      sa[228] = 0.121786326f;
      sa[229] = 0.07579518f;
      sa[230] = 0.24347001f;
      sa[231] = -0.26617295f;
      sa[232] = -0.37086704f;
      sa[233] = 0.019506324f;
      sa[234] = 0.27302143f;
      sa[235] = -0.40777513f;
      sa[236] = -0.011722136f;
      sa[237] = -0.1739277f;
      sa[238] = -0.18747409f;
      sa[239] = 0.16072828f;
      sa[240] = -0.018370688f;
      sa[241] = -0.2569274f;
      sa[242] = 0.011239497f;
      sa[243] = -0.20444587f;
      sa[244] = -0.18658572f;
      sa[245] = -0.09377779f;
      sa[246] = -0.25135106f;
      sa[247] = -0.027199453f;
      sa[248] = 0.29825842f;
      sa[249] = 0.27633402f;
      sa[250] = -0.23394193f;
      sa[251] = -0.13837393f;
      sa[252] = -0.26253128f;
      sa[253] = -0.26090574f;
      sa[254] = -0.21125476f;
      sa[255] = 0.3101349f;
      sa[256] = -0.17492697f;
      sa[257] = 0.2360609f;
      sa[258] = -0.17332973f;
      sa[259] = -0.11782645f;
      sa[260] = -0.18043266f;
      sa[261] = -0.10548458f;
      sa[262] = -0.22988784f;
      sa[263] = 0.34124425f;
      sa[264] = -0.15581684f;
      sa[265] = 0.026843408f;
      sa[266] = -0.2099632f;
      sa[267] = -0.21295658f;
      sa[268] = 0.113112874f;
      sa[269] = -0.19280736f;
      sa[270] = 0.036204085f;
      sa[271] = 0.060371198f;
      sa[272] = -0.09859992f;
      sa[273] = -0.12143711f;
      sa[274] = 0.15608957f;
      sa[275] = -0.015526608f;
      sa[276] = 0.014962264f;
      sa[277] = -0.21543334f;
      sa[278] = -0.16524625f;
      sa[279] = 0.11114251f;
      sa[280] = -0.22386284f;
      sa[281] = 0.20791875f;
      sa[282] = -0.15251198f;
      sa[283] = -0.10959605f;
      sa[284] = 0.02977733f;
      sa[285] = -0.14083202f;
      sa[286] = 0.25459895f;
      sa[287] = 0.13723168f;
      sa[288] = -0.25393373f;
      sa[289] = -0.15352264f;
      sa[290] = -0.06552787f;
      sa[291] = -0.062407132f;
      sa[292] = 0.12963289f;
      sa[293] = -0.09931873f;
      sa[294] = 0.035328466f;
      sa[295] = 0.13930629f;
      sa[296] = 0.12126731f;
      sa[297] = 0.22570913f;
      sa[298] = 0.008650339f;
      sa[299] = -0.10761465f;
      sa[300] = 7.0432946E-4f;
      sa[301] = -0.06570714f;
      sa[302] = 0.12115032f;
      sa[303] = 0.05353179f;
      sa[304] = -0.17907318f;
      sa[305] = 0.010898792f;
      sa[306] = 0.2011485f;
      sa[307] = -0.11438512f;
      sa[308] = 0.102913864f;
      sa[309] = 0.17314382f;
      sa[310] = 0.26881793f;
      sa[311] = 0.339246f;
      sa[312] = -0.13518523f;
      sa[313] = -0.16055118f;
      sa[314] = -0.12969032f;
      sa[315] = 0.085521735f;
      sa[316] = 0.018339979f;
      sa[317] = -0.030802013f;
      sa[318] = 0.11798016f;
      sa[319] = 0.3382234f;
      sa[320] = -0.11796986f;
      sa[321] = 0.09008916f;
      sa[322] = 0.28161612f;
      sa[323] = -0.096010655f;
      sa[324] = 0.04982246f;
      sa[325] = 0.25862226f;
      sa[326] = -0.3738596f;
      sa[327] = 0.031233693f;
      sa[328] = -0.093321286f;
      sa[329] = 0.23814054f;
      sa[330] = -0.21471874f;
      sa[331] = -0.07383825f;
      sa[332] = -0.1641726f;
      sa[333] = 0.058982275f;
      sa[334] = -0.03064214f;
      sa[335] = 0.27161714f;
      sa[336] = -0.17432056f;
      sa[337] = -0.1451794f;
      sa[338] = 0.22252062f;
      sa[339] = -0.27321008f;
      sa[340] = -0.33299887f;
      sa[341] = -0.28857985f;
      sa[342] = 0.12231582f;
      sa[343] = -0.036869958f;
      sa[344] = -0.20375085f;
      sa[345] = 0.13668196f;
      sa[346] = 0.14212549f;
      sa[347] = -0.24172856f;
      sa[348] = 0.18354881f;
      sa[349] = -0.26844415f;
      sa[350] = -0.2097536f;
      sa[351] = 0.08461145f;
      sa[352] = 0.18188494f;
      sa[353] = -0.04608539f;
      sa[354] = 0.101602726f;
      sa[355] = 0.070243955f;
      sa[356] = -0.13366263f;
      sa[357] = 0.21964197f;
      sa[358] = -0.286999f;
      sa[359] = 0.00737686f;
      sa[360] = 0.12427722f;
      sa[361] = -0.04253494f;
      sa[362] = -0.23129584f;
      sa[363] = 0.1297656f;
      sa[364] = -0.14607617f;
      sa[365] = -0.21043047f;
      sa[366] = -0.023663415f;
      sa[367] = -0.31799647f;
      sa[368] = -0.098982066f;
      sa[369] = 0.19319674f;
      sa[370] = -0.19161251f;
      sa[371] = 0.09444509f;
      sa[372] = -0.017093856f;
      sa[373] = 0.27967483f;
      sa[374] = -0.13924454f;
      sa[375] = -0.30899042f;
      sa[376] = -0.30222675f;
      sa[377] = -0.2856895f;
      sa[378] = 0.275373f;
      sa[379] = 0.10159382f;
      sa[380] = -0.12844782f;
      sa[381] = -0.122199714f;
      sa[382] = -0.05419593f;
      sa[383] = -0.15722251f;
      sa[384] = -0.19391537f;
      sa[385] = 0.09754765f;
      sa[386] = -0.22328307f;
      sa[387] = -0.15268473f;
      sa[388] = 0.07630193f;
      sa[389] = -0.01611052f;
      sa[390] = 0.003182586f;
      sa[391] = -0.115527056f;
      sa[392] = 0.088911064f;
      sa[393] = 0.09620247f;
      sa[394] = 0.072186455f;
      sa[395] = 0.37007868f;
      sa[396] = 0.28818843f;
      sa[397] = -0.2877698f;
      sa[398] = 0.056068193f;
      sa[399] = -0.043429624f;
      sa[400] = 0.15813507f;
      sa[401] = 0.23127952f;
      sa[402] = -0.16700214f;
      sa[403] = 0.045123443f;
      sa[404] = 0.22989334f;
      sa[405] = -0.26605633f;
      sa[406] = -0.049340248f;
      sa[407] = 0.10615443f;
      sa[408] = -0.22058074f;
      sa[409] = -0.23923016f;
      sa[410] = -0.14091517f;
      sa[411] = 0.12347263f;
      sa[412] = -0.18352406f;
      sa[413] = 0.044933096f;
      sa[414] = 0.15615879f;
      sa[415] = 0.31309056f;
      sa[416] = -0.18721592f;
      sa[417] = 0.009326282f;
      sa[418] = -0.034854643f;
      sa[419] = 0.25497344f;
      sa[420] = 0.19972236f;
      sa[421] = 0.23482741f;
      sa[422] = 0.28117043f;
      sa[423] = 0.05764705f;
      sa[424] = 0.11722919f;
      sa[425] = -0.041004833f;
      sa[426] = -0.24877986f;
      sa[427] = 0.22937694f;
      sa[428] = -0.12932932f;
      sa[429] = -0.17152315f;
      sa[430] = 0.19725086f;
      sa[431] = 0.014769083f;
      sa[432] = 0.019070411f;
      sa[433] = 0.117825374f;
      sa[434] = 0.1679525f;
      sa[435] = 0.0873835f;
      sa[436] = -0.27409184f;
      sa[437] = -0.23740222f;
      sa[438] = 0.01020109f;
      sa[439] = -0.059618834f;
      sa[440] = 0.40819758f;
      sa[441] = -0.37473783f;
      sa[442] = 0.06355726f;
      sa[443] = 0.073873885f;
      sa[444] = -0.21145739f;
      sa[445] = 0.068300895f;
      sa[446] = 0.23421668f;
      sa[447] = 0.024212604f;
      sa[448] = 0.15284467f;
      sa[449] = 0.14033256f;
      sa[450] = -0.09516929f;
      sa[451] = 0.06934679f;
      sa[452] = 0.14804906f;
      sa[453] = -0.08374893f;
      sa[454] = -0.15833765f;
      sa[455] = -0.10587676f;
      sa[456] = -0.12788588f;
      sa[457] = 0.09399875f;
      sa[458] = -0.21996135f;
      sa[459] = 0.19886978f;
      sa[460] = 0.18336098f;
      sa[461] = 0.22825824f;
      sa[462] = 0.03199245f;
      sa[463] = 0.15508497f;
      sa[464] = -0.36876875f;
      sa[465] = 0.1592394f;
      sa[466] = 0.076615326f;
      sa[467] = 0.16367185f;
      sa[468] = 0.14751916f;
      sa[469] = 0.27477887f;
      sa[470] = 0.11381492f;
      sa[471] = -0.037197277f;
      sa[472] = -0.0028731728f;
      sa[473] = -0.08850506f;
      sa[474] = -0.039263543f;
      sa[475] = 0.0654238f;
      sa[476] = 0.29299864f;
      sa[477] = -0.24273863f;
      sa[478] = 0.10714484f;
      sa[479] = -0.17535503f;
      sa[480] = -0.28426462f;
      sa[481] = -0.17852573f;
      sa[482] = -0.26221073f;
      sa[483] = 0.17176224f;
      sa[484] = 0.19675112f;
      sa[485] = 0.05251278f;
      sa[486] = -0.033489358f;
      sa[487] = -0.13243899f;
      sa[488] = -0.19740663f;
      sa[489] = 0.057210583f;
      sa[490] = -0.030464737f;
      sa[491] = -0.26024196f;
      sa[492] = 0.18990149f;
      sa[493] = 0.2172194f;
      sa[494] = -0.18406042f;
      sa[495] = 0.17999743f;
      sa[496] = 0.01496921f;
      sa[497] = 0.076145306f;
      sa[498] = 0.19249152f;
      sa[499] = 0.17351793f;
      sa[500] = -0.15814379f;
      sa[501] = 0.01186409f;
      sa[502] = 0.28829417f;
      sa[503] = 0.06420062f;
      sa[504] = -0.2142372f;
      sa[505] = -0.2128904f;
      sa[506] = 0.24928802f;
      sa[507] = -0.07714282f;
      sa[508] = 0.09808615f;
      sa[509] = 0.19003738f;
      sa[510] = 0.18567711f;
      sa[511] = 0.048326146f;
      sa[512] = -0.010201444f;
      sa[513] = -0.05644032f;
      sa[514] = 0.189686f;
      sa[515] = -0.2724363f;
      sa[516] = 0.027724583f;
      sa[517] = 0.06652144f;
      sa[518] = 0.15849084f;
      sa[519] = -0.04248605f;
      sa[520] = 0.23152235f;
      sa[521] = 0.14652292f;
      sa[522] = 0.12588216f;
      sa[523] = 0.15207021f;
      sa[524] = 0.20004545f;
      sa[525] = 0.18544836f;
      sa[526] = 0.03247112f;
      sa[527] = -0.020108236f;
      sa[528] = 0.038506676f;
      sa[529] = 0.108798265f;
      sa[530] = -0.18791042f;
      sa[531] = 0.08164128f;
      sa[532] = 0.11178684f;
      sa[533] = 0.09415374f;
      sa[534] = 0.07825317f;
      sa[535] = -0.08629451f;
      sa[536] = 0.0685218f;
      sa[537] = -0.23577373f;
      sa[538] = 0.25597265f;
      sa[539] = 0.3187466f;
      sa[540] = -0.21484184f;
      sa[541] = -0.14320119f;
      sa[542] = -0.035550937f;
      sa[543] = -0.16032211f;
      sa[544] = 0.15705353f;
      sa[545] = 0.11892271f;
      sa[546] = 0.11720325f;
      sa[547] = 0.18063156f;
      sa[548] = 0.11826063f;
      sa[549] = 0.17161907f;
      sa[550] = -0.013886772f;
      sa[551] = -0.061250567f;
      sa[552] = 0.04803336f;
      sa[553] = -0.03951976f;
      sa[554] = -0.1050709f;
      sa[555] = -0.13952059f;
      sa[556] = -0.1689489f;
      sa[557] = -0.18463458f;
      sa[558] = -0.19898833f;
      sa[559] = 0.09397789f;
      sa[560] = -0.29173893f;
      sa[561] = -0.090240836f;
      sa[562] = 0.19938697f;
      sa[563] = -0.107436f;
      sa[564] = 0.22947441f;
      sa[565] = 0.043493968f;
      sa[566] = 0.23148319f;
      sa[567] = -0.11467949f;
      sa[568] = -0.0877205f;
      sa[569] = 0.0027555448f;
      sa[570] = -0.03407058f;
      sa[571] = -0.11588705f;
      sa[572] = -0.021217786f;
      sa[573] = 0.16422758f;
      sa[574] = 0.14282824f;
      sa[575] = -0.3233987f;
      sa[576] = -0.075929515f;
      sa[577] = 0.028742118f;
      sa[578] = 0.081796f;
      sa[579] = -0.1307894f;
      sa[580] = 0.10424611f;
      sa[581] = -0.11224949f;
      sa[582] = 0.07124784f;
      sa[583] = 0.0072984383f;
      sa[584] = 0.11969785f;
      sa[585] = 0.20070513f;
      sa[586] = -0.16714463f;
      sa[587] = -0.14430569f;
      sa[588] = 0.06814338f;
      sa[589] = 0.13383923f;
      sa[590] = -0.043443523f;
      sa[591] = 0.0012925009f;
      sa[592] = -0.3257016f;
      sa[593] = -0.15224019f;
      sa[594] = -0.08323991f;
      sa[595] = 0.0422604f;
      sa[596] = 0.24975021f;
      sa[597] = -0.021105459f;
      sa[598] = 0.17323919f;
      sa[599] = 0.015706176f;
      sa[600] = -0.2602279f;
      sa[601] = 0.20284739f;
      sa[602] = -0.04163591f;
      sa[603] = 0.32259017f;
      sa[604] = 0.2753202f;
      sa[605] = 0.23557897f;
      sa[606] = 0.26078162f;
      sa[607] = 0.13673425f;
      sa[608] = -0.003475055f;
      sa[609] = 0.13567433f;
      sa[610] = 0.065108284f;
      sa[611] = -0.11106068f;
      sa[612] = -0.043413125f;
      sa[613] = 0.07052445f;
      sa[614] = -0.020104801f;
      sa[615] = 0.018796623f;
      sa[616] = 0.004666153f;
      sa[617] = -0.3051743f;
      sa[618] = -0.18866335f;
      sa[619] = -0.2298658f;
      sa[620] = 0.043666475f;
      sa[621] = -0.3011139f;
      sa[622] = -0.28485212f;
      sa[623] = -0.27507013f;
      sa[624] = -0.072773874f;
      sa[625] = 0.22143063f;
      sa[626] = -0.033142965f;
      sa[627] = 0.18508139f;
      sa[628] = -0.30420667f;
      sa[629] = -0.14114921f;
      sa[630] = -0.14907919f;
      sa[631] = 0.21041776f;
      sa[632] = 0.053867716f;
      sa[633] = -0.20962732f;
      sa[634] = -0.24122125f;
      sa[635] = 0.087114125f;
      sa[636] = -0.25693524f;
      sa[637] = -0.028244883f;
      sa[638] = -0.09216935f;
      sa[639] = -0.088636935f;
      sa[640] = -0.16654214f;
      sa[641] = -0.32064155f;
      sa[642] = 0.16216609f;
      sa[643] = -0.36044213f;
      sa[644] = -0.18970656f;
      sa[645] = -0.26535922f;
      sa[646] = 0.3738745f;
      sa[647] = -0.1756307f;
      sa[648] = -0.010498172f;
      sa[649] = 0.007776928f;
      sa[650] = 0.12506306f;
      sa[651] = -0.020180067f;
      sa[652] = 0.06222438f;
      sa[653] = -0.14787488f;
      sa[654] = -0.12093868f;
      sa[655] = -0.1521167f;
      sa[656] = 0.13080119f;
      sa[657] = 0.119419515f;
      sa[658] = -0.26294133f;
      sa[659] = -0.17701027f;
      sa[660] = -0.23211846f;
      sa[661] = -0.10155933f;
      sa[662] = -0.23940223f;
      sa[663] = 0.1901675f;
      sa[664] = -0.064315796f;
      sa[665] = 0.28143373f;
      sa[666] = -0.07778933f;
      sa[667] = -0.20861778f;
      sa[668] = 0.2619664f;
      sa[669] = -0.13725924f;
      sa[670] = 0.14801799f;
      sa[671] = 0.028518734f;
      sa[672] = -0.2842473f;
      sa[673] = 0.18956754f;
      sa[674] = 0.15803467f;
      sa[675] = -0.36755174f;
      sa[676] = -0.11932574f;
      sa[677] = -0.2511783f;
      sa[678] = 0.15914702f;
      sa[679] = -0.13701189f;
      sa[680] = 0.023630438f;
      sa[681] = 0.044368125f;
      sa[682] = 0.099704586f;
      sa[683] = -0.063931875f;
      sa[684] = -0.080088705f;
      sa[685] = -0.010998545f;
      sa[686] = -0.138736f;
      sa[687] = -0.25434995f;
      sa[688] = -0.2540762f;
      sa[689] = -0.24364185f;
      sa[690] = -0.029763835f;
      sa[691] = 0.13647878f;
      sa[692] = -0.24597226f;
      sa[693] = -0.15016025f;
      sa[694] = 0.24150641f;
      sa[695] = -0.087020874f;
      sa[696] = -0.07629054f;
      sa[697] = -0.14588322f;
      sa[698] = -0.16886036f;
      sa[699] = 0.31902832f;
      sa[700] = 0.10249212f;
      sa[701] = 0.12257691f;
      sa[702] = 0.2598003f;
      sa[703] = -0.090240605f;
      sa[704] = -0.23766333f;
      sa[705] = -0.002370419f;
      sa[706] = -0.11425329f;
      sa[707] = 0.06441977f;
      sa[708] = 0.061241742f;
      sa[709] = -0.29646447f;
      sa[710] = 0.29192644f;
      sa[711] = -0.047619764f;
      sa[712] = 0.04758744f;
      sa[713] = 0.16172542f;
      sa[714] = 0.18163171f;
      sa[715] = 0.13573669f;
      sa[716] = 0.07547003f;
      sa[717] = 0.19996108f;
      sa[718] = -0.07894271f;
      sa[719] = 0.07790312f;
      sa[720] = -0.21526814f;
      sa[721] = 0.1445996f;
      sa[722] = -0.21581292f;
      sa[723] = 0.075200066f;
      sa[724] = 0.0658091f;
      sa[725] = -0.29636344f;
      sa[726] = -0.17633915f;
      sa[727] = -0.30634424f;
      sa[728] = -0.09922532f;
      sa[729] = -0.045623325f;
      sa[730] = 0.04207967f;
      sa[731] = -0.21839717f;
      sa[732] = 0.15020733f;
      sa[733] = 0.18597916f;
      sa[734] = -0.120802335f;
      sa[735] = 0.23871057f;
      sa[736] = -0.15784606f;
      sa[737] = 0.10845274f;
      sa[738] = -0.0641978f;
      sa[739] = -0.42342266f;
      sa[740] = -0.28979754f;
      sa[741] = -0.2864322f;
      sa[742] = 0.1022481f;
      sa[743] = -0.012802566f;
      sa[744] = -0.0090267025f;
      sa[745] = -0.24971516f;
      sa[746] = 0.11937526f;
      sa[747] = -0.19520295f;
      sa[748] = -0.19112168f;
      sa[749] = -0.219395f;
      sa[750] = 0.14037576f;
      sa[751] = 0.16666445f;
      sa[752] = 0.003978842f;
      sa[753] = 0.22121575f;
      sa[754] = -0.034217816f;
      sa[755] = 0.1535886f;
      sa[756] = -0.3203849f;
      sa[757] = 0.24094583f;
      sa[758] = -0.074616164f;
      sa[759] = -0.18090874f;
      sa[760] = -0.064370066f;
      sa[761] = 0.034068625f;
      sa[762] = -0.089887425f;
      sa[763] = 0.20327102f;
      sa[764] = -0.05057453f;
      sa[765] = 0.018982856f;
      sa[766] = -0.22045949f;
      sa[767] = 0.071177624f;
      sa[768] = -0.1626953f;
      sa[769] = -0.28193766f;
      sa[770] = -0.009165265f;
      sa[771] = 0.056694828f;
      sa[772] = 0.055476166f;
      sa[773] = -0.16153236f;
      sa[774] = 0.03475654f;
      sa[775] = 0.25978893f;
      sa[776] = -0.033650633f;
      sa[777] = 0.099994294f;
      sa[778] = 0.18678558f;
      sa[779] = -0.06896935f;
      sa[780] = 0.09754242f;
      sa[781] = -0.07240054f;
      sa[782] = 0.14750801f;
      sa[783] = -0.11327395f;
      sa[784] = -0.12444291f;
      sa[785] = -0.087751016f;
      sa[786] = -0.085453585f;
      sa[787] = -0.17258984f;
      sa[788] = -0.15477636f;
      sa[789] = 0.21209452f;
      sa[790] = -0.16764313f;
      sa[791] = -0.10231445f;
      sa[792] = 0.24628346f;
      sa[793] = -0.10030038f;
      sa[794] = -0.13626309f;
      sa[795] = 0.10922595f;
      sa[796] = 0.23687792f;
      sa[797] = -0.17426625f;
      sa[798] = -0.21242476f;
      sa[799] = -0.14594564f;
      sa[800] = 0.25722718f;
      sa[801] = 0.04997048f;
      sa[802] = 0.24284787f;
      sa[803] = 0.10125903f;
      sa[804] = 0.24053438f;
      sa[805] = 0.30825147f;
      sa[806] = 0.3300909f;
      sa[807] = 0.2511395f;
      sa[808] = 0.039107334f;
      sa[809] = -0.19102396f;
      sa[810] = 0.031943116f;
      sa[811] = 0.23571454f;
      sa[812] = 0.17408213f;
      sa[813] = -0.2764293f;
      sa[814] = 0.11297206f;
      sa[815] = -0.15408622f;
      sa[816] = -0.10413615f;
      sa[817] = -0.13024484f;
      sa[818] = -0.06354925f;
      sa[819] = -0.20017782f;
      sa[820] = -0.2848456f;
      sa[821] = -0.21297501f;
      sa[822] = -0.27384892f;
      sa[823] = 0.03371622f;
      sa[824] = 0.14665326f;
      sa[825] = 0.28693956f;
      sa[826] = -0.27472696f;
      sa[827] = -0.32012838f;
      sa[828] = 0.14735378f;
      sa[829] = -0.07013006f;
      sa[830] = 0.1926302f;
      sa[831] = 0.22593674f;
      sa[832] = 0.14119186f;
      sa[833] = 0.07559867f;
      sa[834] = 0.22391047f;
      sa[835] = -0.09500979f;
      sa[836] = 0.25635883f;
      sa[837] = -0.1456391f;
      sa[838] = 0.13837795f;
      sa[839] = -0.21172999f;
      sa[840] = 0.18920259f;
      sa[841] = 0.10986663f;
      sa[842] = 0.19215049f;
      sa[843] = 0.02786386f;
      sa[844] = 0.049495548f;
      sa[845] = 0.1633007f;
      sa[846] = -0.25610948f;
      sa[847] = -0.07251555f;
      sa[848] = 0.1941673f;
      sa[849] = 0.22942302f;
      sa[850] = 7.132073E-4f;
      sa[851] = 0.07601699f;
      sa[852] = 0.2323581f;
      sa[853] = 0.16760683f;
      sa[854] = 0.20484725f;
      sa[855] = 0.05414384f;
      sa[856] = 0.06506783f;
      sa[857] = -0.18214457f;
      sa[858] = 0.11527103f;
      sa[859] = 0.016272314f;
      sa[860] = 0.33552727f;
      sa[861] = -0.20192137f;
      sa[862] = -0.16224268f;
      sa[863] = -0.022694184f;
      sa[864] = -0.27162826f;
      sa[865] = 0.23721701f;
      sa[866] = -0.12436343f;
      sa[867] = -0.05421228f;
      sa[868] = -0.18256466f;
      sa[869] = 0.1872065f;
      sa[870] = -0.09364067f;
      sa[871] = 0.17809741f;
      sa[872] = 0.11886161f;
      sa[873] = 0.015537916f;
      sa[874] = 0.045514487f;
      sa[875] = -0.26799124f;
      sa[876] = -0.2238429f;
      sa[877] = -0.21899979f;
      sa[878] = -0.013903458f;
      sa[879] = 0.21854822f;
      sa[880] = -0.054137666f;
      sa[881] = 0.016155314f;
      sa[882] = 0.14613535f;
      sa[883] = 0.28176758f;
      sa[884] = -0.10977668f;
      sa[885] = -0.10840602f;
      sa[886] = 0.07627104f;
      sa[887] = -0.012573785f;
      sa[888] = -0.022046993f;
      sa[889] = 0.03377327f;
      sa[890] = -0.2723859f;
      sa[891] = 0.41900522f;
      sa[892] = 0.21908017f;
      sa[893] = 0.3182838f;
      sa[894] = 0.088480175f;
      sa[895] = 0.31413734f;
      sa[896] = -0.19759333f;
      sa[897] = 0.20500095f;
      sa[898] = -0.014677834f;
      sa[899] = 0.22009842f;
      sa[900] = -0.09797034f;
      sa[901] = 0.11007384f;
      sa[902] = -0.3424374f;
      sa[903] = -0.13146403f;
      sa[904] = 0.1476312f;
      sa[905] = 0.16069318f;
      sa[906] = -0.27204543f;
      sa[907] = -0.31331283f;
      sa[908] = -0.20179719f;
      sa[909] = 0.019169845f;
      sa[910] = 0.004350833f;
      sa[911] = -0.11278206f;
      sa[912] = -0.0368448f;
      sa[913] = 0.031066993f;
      sa[914] = -0.20905565f;
      sa[915] = -0.019831559f;
      sa[916] = 0.13971765f;
      sa[917] = -0.054372925f;
      sa[918] = 0.21818055f;
      sa[919] = -0.08832973f;
      sa[920] = 0.10651699f;
      sa[921] = -0.10978843f;
      sa[922] = -0.1594359f;
      sa[923] = -0.20378871f;
      sa[924] = -0.19723344f;
      sa[925] = -0.21402912f;
      sa[926] = 0.15148003f;
      sa[927] = -0.10118141f;
      sa[928] = 0.21054511f;
      sa[929] = 0.104038425f;
      sa[930] = 0.12935726f;
      sa[931] = -0.05496928f;
      sa[932] = 0.2037423f;
      sa[933] = 0.014149512f;
      sa[934] = 0.21636161f;
      sa[935] = -0.18614832f;
      sa[936] = -0.03145692f;
      sa[937] = 0.19657187f;
      sa[938] = -0.057916153f;
      sa[939] = -0.099893406f;
      sa[940] = -0.015492629f;
      sa[941] = -0.29471368f;
      sa[942] = -0.2559112f;
      sa[943] = -0.11750695f;
      sa[944] = -0.37458995f;
      sa[945] = 0.13096456f;
      sa[946] = 0.08231923f;
      sa[947] = 0.20713355f;
      sa[948] = 0.10386264f;
      sa[949] = -0.1762139f;
      sa[950] = 0.06261435f;
      sa[951] = -0.042415056f;
      sa[952] = -0.17381246f;
      sa[953] = -0.07486138f;
      sa[954] = -0.23048863f;
      sa[955] = 0.08311423f;
      sa[956] = 0.020756908f;
      sa[957] = 0.093051225f;
      sa[958] = 0.10755525f;
      sa[959] = -0.09271074f;
      sa[960] = 0.38576746f;
      sa[961] = -0.13846812f;
      sa[962] = 0.0026832116f;
      sa[963] = 0.01569791f;
      sa[964] = -0.13195299f;
      sa[965] = 0.300284f;
      sa[966] = -0.054192707f;
      sa[967] = -0.18069948f;
      sa[968] = 0.13956662f;
      sa[969] = 0.081810586f;
      sa[970] = 0.2627811f;
      sa[971] = 0.01408923f;
      sa[972] = -0.10185677f;
      sa[973] = -0.22908181f;
      sa[974] = -0.434407f;
      sa[975] = -0.20947058f;
      sa[976] = -0.10454556f;
      sa[977] = 0.038092326f;
      sa[978] = -0.08732419f;
      sa[979] = 0.06263913f;
      sa[980] = 0.20917875f;
      sa[981] = -0.26795775f;
      sa[982] = 0.13150162f;
      sa[983] = -0.05716824f;
      sa[984] = -0.29883048f;
      sa[985] = 0.04609216f;
      sa[986] = -0.26356325f;
      sa[987] = -0.005417494f;
      sa[988] = 0.061674163f;
      sa[989] = 0.13504307f;
      sa[990] = 0.2896118f;
      sa[991] = -0.24820043f;
      sa[992] = -0.24489342f;
      sa[993] = -0.09412379f;
      sa[994] = -0.17888f;
      sa[995] = -0.34442762f;
      sa[996] = 0.051990338f;
      sa[997] = 0.1783607f;
      sa[998] = 0.11034852f;
      sa[999] = 0.16579568f;
      sa[1000] = -0.023263607f;
      sa[1001] = 0.17101452f;
      sa[1002] = 0.22011502f;
      sa[1003] = -0.17323272f;
      sa[1004] = 0.15917224f;
      sa[1005] = -0.2473547f;
      sa[1006] = -0.06280907f;
      sa[1007] = 0.05819833f;
      sa[1008] = 0.16321838f;
      sa[1009] = 0.048938368f;
      sa[1010] = 0.058152035f;
      sa[1011] = 0.42235273f;
      sa[1012] = -0.0598398f;
      sa[1013] = 0.14109053f;
      sa[1014] = 0.32121143f;
      sa[1015] = -0.24466175f;
      sa[1016] = 0.24529524f;
      sa[1017] = 0.07163434f;
      sa[1018] = -0.05317501f;
      sa[1019] = 0.11037419f;
      sa[1020] = -0.22232632f;
      sa[1021] = 0.07093077f;
      sa[1022] = 0.2700876f;
      sa[1023] = 0.118005894f;
      sa[1024] = -0.0036053401f;
      sa[1025] = 0.10548316f;
      sa[1026] = 0.15852053f;
      sa[1027] = 0.21455619f;
      sa[1028] = 0.3036471f;
      sa[1029] = -0.012804884f;
      sa[1030] = -0.11624932f;
      sa[1031] = 0.029997569f;
      sa[1032] = -0.22349916f;
      sa[1033] = 0.05506996f;
      sa[1034] = -0.09169813f;
      sa[1035] = -0.33529654f;
      sa[1036] = 0.2202224f;
      sa[1037] = -0.017548667f;
      sa[1038] = -0.25270268f;
      sa[1039] = 0.18757115f;
      sa[1040] = -0.0014572747f;
      sa[1041] = 0.08012774f;
      sa[1042] = -0.24935511f;
      sa[1043] = -0.062069952f;
      sa[1044] = 0.2282042f;
      sa[1045] = 0.2055603f;
      sa[1046] = -0.2816839f;
      sa[1047] = -0.15828292f;
      sa[1048] = 0.13264547f;
      sa[1049] = -0.10978663f;
      sa[1050] = 0.04230333f;
      sa[1051] = -0.23186132f;
      sa[1052] = 0.21310852f;
      sa[1053] = 0.19942233f;
      sa[1054] = 0.21791278f;
      sa[1055] = -0.016176566f;
      sa[1056] = 0.24705696f;
      sa[1057] = -0.20334065f;
      sa[1058] = 0.2199275f;
      sa[1059] = -0.21204168f;
      sa[1060] = -0.3199778f;
      sa[1061] = -0.0375893f;
      sa[1062] = 0.2565626f;
      sa[1063] = -0.08418019f;
      sa[1064] = 0.06869582f;
      sa[1065] = -0.06896115f;
      sa[1066] = 0.1724599f;
      sa[1067] = -0.36012352f;
      sa[1068] = -0.3716281f;
      sa[1069] = 0.21927847f;
      sa[1070] = 0.13798957f;
      sa[1071] = 0.16163468f;
      sa[1072] = -0.27466825f;
      sa[1073] = 0.059094574f;
      sa[1074] = 0.08509765f;
      sa[1075] = -0.23444399f;
      sa[1076] = -0.2069469f;
      sa[1077] = 0.09277909f;
      sa[1078] = 0.044184804f;
      sa[1079] = 0.1177485f;
      sa[1080] = 0.19329813f;
      sa[1081] = 0.22098032f;
      sa[1082] = -0.301398f;
      sa[1083] = -0.19630934f;
      sa[1084] = 0.25633723f;
      sa[1085] = -0.20242454f;
      sa[1086] = -0.256697f;
      sa[1087] = -0.21687882f;
      sa[1088] = -0.22618747f;
      sa[1089] = 0.12688616f;
      sa[1090] = -0.2429715f;
      sa[1091] = 0.14698376f;
      sa[1092] = -0.24973516f;
      sa[1093] = -0.26166868f;
      sa[1094] = -0.007673597f;
      sa[1095] = -0.2279725f;
      sa[1096] = 0.049016837f;
      sa[1097] = -0.06911026f;
      sa[1098] = 0.008204407f;
      sa[1099] = -0.08840001f;
      sa[1100] = -0.12226661f;
      sa[1101] = 0.15480141f;
      sa[1102] = -0.14411679f;
      sa[1103] = 0.23222843f;
      sa[1104] = -0.25075388f;
      sa[1105] = -0.1398036f;
      sa[1106] = -0.09263823f;
      sa[1107] = 0.21085525f;
      sa[1108] = -0.18018143f;
      sa[1109] = 0.26262262f;
      sa[1110] = 0.17629214f;
      sa[1111] = -0.21741562f;
      sa[1112] = 0.20739631f;
      sa[1113] = 0.3119382f;
      sa[1114] = -0.006743187f;
      sa[1115] = 0.1313014f;
      sa[1116] = -0.07824839f;
      sa[1117] = -0.23418194f;
      sa[1118] = -0.19639824f;
      sa[1119] = -0.033828907f;
      sa[1120] = 0.19527952f;
      sa[1121] = 0.061910477f;
      sa[1122] = 0.28847975f;
      sa[1123] = 0.25587723f;
      sa[1124] = 0.036265455f;
      sa[1125] = -0.11025943f;
      sa[1126] = 0.17570497f;
      sa[1127] = 0.18061616f;
      sa[1128] = 0.017120892f;
      sa[1129] = -0.12262044f;
      sa[1130] = 0.25231767f;
      sa[1131] = 0.28130853f;
      sa[1132] = -0.24458216f;
      sa[1133] = -0.23359217f;
      sa[1134] = 0.3336058f;
      sa[1135] = -0.40774187f;
      sa[1136] = -0.03817678f;
      sa[1137] = 0.20023836f;
      sa[1138] = -0.015746934f;
      sa[1139] = 0.12938552f;
      sa[1140] = 0.17876537f;
      sa[1141] = -0.25896856f;
      sa[1142] = 0.108416304f;
      sa[1143] = -0.12561406f;
      sa[1144] = -0.35917753f;
      sa[1145] = 0.07636176f;
      sa[1146] = 0.15286487f;
      sa[1147] = -0.19565183f;
      sa[1148] = -0.008169542f;
      sa[1149] = -0.026982658f;
      sa[1150] = -0.23321721f;
      sa[1151] = -0.20777063f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_05_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_05_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2409995f;
      sa[1] = -0.103443265f;
      sa[2] = -0.5828463f;
      sa[3] = -1.0632529f;
      sa[4] = 0.08951656f;
      sa[5] = 0.28114262f;
      sa[6] = 1.3231229f;
      sa[7] = -0.7147021f;
      sa[8] = -0.9393038f;
      sa[9] = 0.8158332f;
      sa[10] = -0.06044766f;
      sa[11] = 0.39645404f;
      sa[12] = 0.16614728f;
      sa[13] = 0.002578893f;
      sa[14] = -1.4218711f;
      sa[15] = 1.1374407f;
      sa[16] = 1.5582454f;
      sa[17] = -0.52752507f;
      sa[18] = 0.08589511f;
      sa[19] = -0.39127013f;
      sa[20] = 1.1642109f;
      sa[21] = 0.047087517f;
      sa[22] = -0.9137652f;
      sa[23] = 0.75888884f;
      sa[24] = -1.3876436f;
      sa[25] = 0.49697492f;
      sa[26] = -0.25841755f;
      sa[27] = 1.54854f;
      sa[28] = -1.3327869f;
      sa[29] = -0.39124686f;
      sa[30] = 0.44830883f;
      sa[31] = -0.5910806f;
      sa[32] = -1.1393598f;
      sa[33] = -1.5264928f;
      sa[34] = 0.048778605f;
      sa[35] = 1.3760091f;
      sa[36] = -0.32017353f;
      sa[37] = -0.028776154f;
      sa[38] = 0.25989395f;
      sa[39] = 0.7981318f;
      sa[40] = -0.76253384f;
      sa[41] = -1.3322219f;
      sa[42] = -1.0108081f;
      sa[43] = -1.4755591f;
      sa[44] = 0.009454004f;
      sa[45] = -1.366496f;
      sa[46] = 1.1618007f;
      sa[47] = 1.2821119f;
      sa[48] = -1.3474356f;
      sa[49] = -1.0697665f;
      sa[50] = 0.45166606f;
      sa[51] = -0.36885193f;
      sa[52] = 0.7916086f;
      sa[53] = 0.8942625f;
      sa[54] = -0.16940692f;
      sa[55] = 1.1430985f;
      sa[56] = -1.0646187f;
      sa[57] = -1.1607856f;
      sa[58] = 0.12844154f;
      sa[59] = -0.30002797f;
      sa[60] = 1.4633431f;
      sa[61] = -0.6925369f;
      sa[62] = -0.3629054f;
      sa[63] = 0.691983f;
      sa[64] = 1.5930287f;
      sa[65] = -0.5906237f;
      sa[66] = 0.74267274f;
      sa[67] = 1.6429473f;
      sa[68] = 0.77620167f;
      sa[69] = -1.1276506f;
      sa[70] = -1.6385353f;
      sa[71] = -0.38101688f;
      sa[72] = -1.349242f;
      sa[73] = 1.103873f;
      sa[74] = 1.2733762f;
      sa[75] = -0.07219934f;
      sa[76] = 1.0777835f;
      sa[77] = 0.660437f;
      sa[78] = -1.2255627f;
      sa[79] = 0.9401457f;
      sa[80] = -0.83178014f;
      sa[81] = 0.33530173f;
      sa[82] = 0.7458082f;
      sa[83] = -0.752176f;
      sa[84] = -1.6486961f;
      sa[85] = -1.2793363f;
      sa[86] = 0.19914797f;
      sa[87] = 1.2348154f;
      sa[88] = -1.5182183f;
      sa[89] = -0.5628881f;
      sa[90] = -0.9974016f;
      sa[91] = 1.4732416f;
      sa[92] = -0.33101907f;
      sa[93] = 0.16097645f;
      sa[94] = -1.5533246f;
      sa[95] = -0.33660626f;
      sa[96] = -1.1480967f;
      sa[97] = 0.22066407f;
      sa[98] = -0.072924376f;
      sa[99] = 0.32638913f;
      sa[100] = -1.3413937f;
      sa[101] = -0.44323948f;
      sa[102] = 1.2717917f;
      sa[103] = 0.13771382f;
      sa[104] = -0.12430228f;
      sa[105] = -0.5915222f;
      sa[106] = 1.5332875f;
      sa[107] = 1.2384843f;
      sa[108] = 0.737561f;
      sa[109] = 0.13292015f;
      sa[110] = 0.7382819f;
      sa[111] = -0.7379133f;
      sa[112] = -1.1100954f;
      sa[113] = 0.24874572f;
      sa[114] = 0.20028464f;
      sa[115] = -0.34343463f;
      sa[116] = 1.2113687f;
      sa[117] = 0.04607039f;
      sa[118] = -1.37657f;
      sa[119] = -0.89493877f;
      sa[120] = -0.29652637f;
      sa[121] = 1.0851482f;
      sa[122] = -0.04730951f;
      sa[123] = 0.40088677f;
      sa[124] = -0.8212107f;
      sa[125] = 0.8601022f;
      sa[126] = -0.89831793f;
      sa[127] = 0.4652259f;
      sa[128] = -0.7984592f;
      sa[129] = 0.6799281f;
      sa[130] = -0.35916275f;
      sa[131] = 0.90603375f;
      sa[132] = 0.59648395f;
      sa[133] = 0.6258357f;
      sa[134] = 0.59422135f;
      sa[135] = -1.1399946f;
      sa[136] = 0.5091747f;
      sa[137] = -0.6508075f;
      sa[138] = -0.22693773f;
      sa[139] = 1.1822817f;
      sa[140] = -0.39039266f;
      sa[141] = 0.103773594f;
      sa[142] = 0.3390811f;
      sa[143] = -0.7704767f;
      sa[144] = 0.9837815f;
      sa[145] = -0.8649822f;
      sa[146] = -0.011642871f;
      sa[147] = -0.22933476f;
      sa[148] = -0.76787126f;
      sa[149] = 1.1069335f;
      sa[150] = -1.1608993f;
      sa[151] = -1.5201235f;
      sa[152] = 1.7199805f;
      sa[153] = -0.57338053f;
      sa[154] = 1.3900054f;
      sa[155] = -1.5175847f;
      sa[156] = -1.5318063f;
      sa[157] = -1.1769339f;
      sa[158] = -0.2143693f;
      sa[159] = -0.7155178f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


