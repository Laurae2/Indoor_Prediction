/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:49.473+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_12 > h2o_nn_32x6_ReLU_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_12", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_12_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_12_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_12_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_12_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6520679000095031392L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_12_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_12_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_12_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_12_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_12_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_12_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.4677524368432136;
      sa[1] = 0.46627035706937653;
      sa[2] = 0.6004551136223236;
      sa[3] = 0.5767247308022136;
      sa[4] = 0.695169878576997;
      sa[5] = 0.5848599692799016;
      sa[6] = 0.6102069694653464;
      sa[7] = 0.33034789886705984;
      sa[8] = 0.49835272917722456;
      sa[9] = 0.538938997266013;
      sa[10] = 0.5223650303531295;
      sa[11] = 0.5415086851456629;
      sa[12] = 0.4847520882653813;
      sa[13] = 0.4880818484472398;
      sa[14] = 0.5006706103547809;
      sa[15] = 0.5461040643563165;
      sa[16] = 0.5523476953945329;
      sa[17] = 0.5035001319492804;
      sa[18] = 0.5126201434636467;
      sa[19] = 0.51740612503369;
      sa[20] = 0.5039787886383247;
      sa[21] = 0.5186936259050107;
      sa[22] = 0.6523159040612831;
      sa[23] = 0.5274612832738514;
      sa[24] = 0.5094539111547032;
      sa[25] = 0.4281751670379604;
      sa[26] = 0.48687714968857765;
      sa[27] = 0.453822432528819;
      sa[28] = 0.5320241114203149;
      sa[29] = 0.39122228087957717;
      sa[30] = 0.6125936048060124;
      sa[31] = 0.42622237699191096;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_12_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_12_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.015907753341568572;
      sa[1] = 0.006693357668489481;
      sa[2] = -0.007303794770043537;
      sa[3] = -0.0690682363333825;
      sa[4] = 0.026446106978047536;
    }
  }
}
class h2o_nn_32x6_ReLU_12_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_12_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_12_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.10487955f;
      sa[1] = 0.22329389f;
      sa[2] = 0.12524493f;
      sa[3] = 0.2062934f;
      sa[4] = -0.22964323f;
      sa[5] = -0.17804271f;
      sa[6] = -0.070629194f;
      sa[7] = 0.12465873f;
      sa[8] = 0.16996144f;
      sa[9] = -0.18237443f;
      sa[10] = -0.12340614f;
      sa[11] = -0.13224907f;
      sa[12] = 0.07276151f;
      sa[13] = -0.22347872f;
      sa[14] = -0.1640632f;
      sa[15] = -0.092702754f;
      sa[16] = 0.06382931f;
      sa[17] = 0.13636054f;
      sa[18] = -0.21904309f;
      sa[19] = 0.2789546f;
      sa[20] = 0.19061443f;
      sa[21] = -0.3511661f;
      sa[22] = 0.19790608f;
      sa[23] = -0.26660112f;
      sa[24] = 0.25739086f;
      sa[25] = 0.17328633f;
      sa[26] = -0.2657588f;
      sa[27] = 0.16763291f;
      sa[28] = 0.19825067f;
      sa[29] = -0.3168268f;
      sa[30] = -0.18710686f;
      sa[31] = 0.028403614f;
      sa[32] = 0.18698488f;
      sa[33] = -0.2921088f;
      sa[34] = 0.054354347f;
      sa[35] = -0.11190197f;
      sa[36] = 0.08841779f;
      sa[37] = 0.23839448f;
      sa[38] = -0.12996931f;
      sa[39] = 0.047128823f;
      sa[40] = -0.0063923495f;
      sa[41] = -0.12290439f;
      sa[42] = -0.18325792f;
      sa[43] = 0.0073167477f;
      sa[44] = 0.19832948f;
      sa[45] = -0.25505194f;
      sa[46] = 0.09018764f;
      sa[47] = -0.05931906f;
      sa[48] = 0.1502731f;
      sa[49] = 0.17937377f;
      sa[50] = 0.12520981f;
      sa[51] = -0.33374804f;
      sa[52] = -0.107518405f;
      sa[53] = 0.16791382f;
      sa[54] = 0.20148495f;
      sa[55] = 0.097597755f;
      sa[56] = -0.2035006f;
      sa[57] = -0.30124158f;
      sa[58] = 0.21897078f;
      sa[59] = -0.16543077f;
      sa[60] = -0.20884624f;
      sa[61] = 0.21104309f;
      sa[62] = 0.119837925f;
      sa[63] = 0.06850366f;
      sa[64] = 0.08520611f;
      sa[65] = 0.08410153f;
      sa[66] = -0.031400595f;
      sa[67] = 0.09759982f;
      sa[68] = -0.1459441f;
      sa[69] = 0.03367766f;
      sa[70] = -0.050352775f;
      sa[71] = 0.372779f;
      sa[72] = -0.09782272f;
      sa[73] = 0.29095045f;
      sa[74] = -0.16021873f;
      sa[75] = 0.10818659f;
      sa[76] = -0.15957095f;
      sa[77] = 0.010329555f;
      sa[78] = 0.013741428f;
      sa[79] = 0.11358139f;
      sa[80] = -0.18176308f;
      sa[81] = -0.06551378f;
      sa[82] = -0.06184452f;
      sa[83] = 0.19084309f;
      sa[84] = 0.050425645f;
      sa[85] = -0.07367135f;
      sa[86] = 0.2201966f;
      sa[87] = 0.3034145f;
      sa[88] = 0.29371744f;
      sa[89] = 0.121615805f;
      sa[90] = -0.18901841f;
      sa[91] = 0.16733834f;
      sa[92] = 0.16329646f;
      sa[93] = -0.1566321f;
      sa[94] = -0.088913865f;
      sa[95] = -0.2489227f;
      sa[96] = 0.11118856f;
      sa[97] = 0.03862179f;
      sa[98] = 0.10735189f;
      sa[99] = -0.17300315f;
      sa[100] = 1.0897893E-4f;
      sa[101] = -0.15013736f;
      sa[102] = -0.19684866f;
      sa[103] = -0.07184244f;
      sa[104] = -0.21431288f;
      sa[105] = -0.2557256f;
      sa[106] = -0.04658692f;
      sa[107] = 0.33017555f;
      sa[108] = 0.16853535f;
      sa[109] = -0.09563511f;
      sa[110] = -0.08160856f;
      sa[111] = 0.1179582f;
      sa[112] = 0.20202954f;
      sa[113] = 0.12333868f;
      sa[114] = -0.06468634f;
      sa[115] = 0.055806994f;
      sa[116] = -0.20506871f;
      sa[117] = 0.0453092f;
      sa[118] = -0.2601346f;
      sa[119] = -0.17345078f;
      sa[120] = 0.30986592f;
      sa[121] = 0.33038107f;
      sa[122] = 0.37336957f;
      sa[123] = 0.39928204f;
      sa[124] = 0.3919541f;
      sa[125] = 0.35528538f;
      sa[126] = -0.38003793f;
      sa[127] = -0.23673083f;
      sa[128] = 0.17605293f;
      sa[129] = 0.24866538f;
      sa[130] = -0.038273662f;
      sa[131] = 0.37851262f;
      sa[132] = 0.17363179f;
      sa[133] = -0.27727976f;
      sa[134] = -0.02909993f;
      sa[135] = -0.087447666f;
      sa[136] = -0.13459961f;
      sa[137] = 0.0876053f;
      sa[138] = 0.24043864f;
      sa[139] = 0.10792411f;
      sa[140] = -0.14519493f;
      sa[141] = -0.2551775f;
      sa[142] = 0.27723542f;
      sa[143] = -0.19629055f;
      sa[144] = 0.20579565f;
      sa[145] = -0.088393755f;
      sa[146] = -0.1619311f;
      sa[147] = 0.08131244f;
      sa[148] = 0.20687361f;
      sa[149] = 0.3083059f;
      sa[150] = 0.33202013f;
      sa[151] = -0.14863046f;
      sa[152] = -0.0072876206f;
      sa[153] = 0.2806896f;
      sa[154] = 0.2809557f;
      sa[155] = -0.19910376f;
      sa[156] = 0.19592014f;
      sa[157] = -0.043805398f;
      sa[158] = 0.14873458f;
      sa[159] = 0.19093123f;
      sa[160] = 0.1747588f;
      sa[161] = 0.3022311f;
      sa[162] = -0.27710837f;
      sa[163] = 0.15302004f;
      sa[164] = 0.24711616f;
      sa[165] = -0.016015982f;
      sa[166] = -0.056700755f;
      sa[167] = -0.039043147f;
      sa[168] = 0.28490752f;
      sa[169] = 0.3308517f;
      sa[170] = 0.028897043f;
      sa[171] = 0.024897108f;
      sa[172] = 0.02694638f;
      sa[173] = -0.061201464f;
      sa[174] = 0.110793374f;
      sa[175] = -0.13936414f;
      sa[176] = 0.004334145f;
      sa[177] = -1.1231941E-4f;
      sa[178] = -0.14498663f;
      sa[179] = -0.0046944865f;
      sa[180] = -0.08271953f;
      sa[181] = -0.32731718f;
      sa[182] = -0.02333816f;
      sa[183] = -0.055610247f;
      sa[184] = 0.33096746f;
      sa[185] = 0.17278315f;
      sa[186] = -0.2825618f;
      sa[187] = 0.21177615f;
      sa[188] = -0.06928295f;
      sa[189] = 0.2234824f;
      sa[190] = 0.11824983f;
      sa[191] = -0.16055173f;
      sa[192] = -0.14171433f;
      sa[193] = 0.18249816f;
      sa[194] = 0.045662064f;
      sa[195] = 0.31499568f;
      sa[196] = 0.23955941f;
      sa[197] = 0.0106858285f;
      sa[198] = 0.16140173f;
      sa[199] = -0.063678175f;
      sa[200] = 0.019145722f;
      sa[201] = -0.23145382f;
      sa[202] = 0.12447987f;
      sa[203] = 0.07994993f;
      sa[204] = -0.14271684f;
      sa[205] = 0.24086829f;
      sa[206] = 0.2797873f;
      sa[207] = 0.2642901f;
      sa[208] = -0.2378202f;
      sa[209] = -0.030652544f;
      sa[210] = -0.2522334f;
      sa[211] = -0.16378525f;
      sa[212] = 0.30086493f;
      sa[213] = -0.07981409f;
      sa[214] = -0.25798526f;
      sa[215] = -0.001524646f;
      sa[216] = 0.116959564f;
      sa[217] = -0.06539879f;
      sa[218] = -0.3072247f;
      sa[219] = 0.17035526f;
      sa[220] = -0.2136485f;
      sa[221] = -0.03674951f;
      sa[222] = 0.16602185f;
      sa[223] = 0.008150957f;
      sa[224] = 0.1063616f;
      sa[225] = 0.13209976f;
      sa[226] = -0.22165596f;
      sa[227] = 0.13620178f;
      sa[228] = 0.061489422f;
      sa[229] = -0.02758025f;
      sa[230] = 0.18229322f;
      sa[231] = -0.39041618f;
      sa[232] = -0.4902727f;
      sa[233] = -0.075266294f;
      sa[234] = 0.30431807f;
      sa[235] = -0.32392654f;
      sa[236] = -0.06207327f;
      sa[237] = -0.22097865f;
      sa[238] = -0.22729485f;
      sa[239] = 0.1525273f;
      sa[240] = 0.0069964747f;
      sa[241] = -0.26711875f;
      sa[242] = 0.077711694f;
      sa[243] = -0.328196f;
      sa[244] = -0.24172519f;
      sa[245] = -0.14427014f;
      sa[246] = -0.33521405f;
      sa[247] = -0.11267847f;
      sa[248] = 0.2757416f;
      sa[249] = 0.23497379f;
      sa[250] = -0.26320928f;
      sa[251] = -0.103072494f;
      sa[252] = -0.24332912f;
      sa[253] = -0.24196577f;
      sa[254] = -0.24190524f;
      sa[255] = 0.24244694f;
      sa[256] = -0.21590865f;
      sa[257] = 0.20666815f;
      sa[258] = -0.24577618f;
      sa[259] = -0.18734777f;
      sa[260] = -0.16041085f;
      sa[261] = -0.08901758f;
      sa[262] = -0.15470168f;
      sa[263] = 0.32963234f;
      sa[264] = -0.19056344f;
      sa[265] = -0.010647703f;
      sa[266] = -0.2721193f;
      sa[267] = -0.2861896f;
      sa[268] = 0.10250518f;
      sa[269] = -0.17751642f;
      sa[270] = 0.0022976056f;
      sa[271] = 0.13783737f;
      sa[272] = -0.14162825f;
      sa[273] = -0.1965795f;
      sa[274] = 0.083129965f;
      sa[275] = -0.10281222f;
      sa[276] = 0.044846743f;
      sa[277] = -0.2005468f;
      sa[278] = -0.16872936f;
      sa[279] = 0.14937574f;
      sa[280] = -0.24786662f;
      sa[281] = 0.17472856f;
      sa[282] = -0.17776754f;
      sa[283] = -0.13831124f;
      sa[284] = 0.0057293125f;
      sa[285] = -0.15621956f;
      sa[286] = 0.27944553f;
      sa[287] = 0.15819886f;
      sa[288] = -0.19298665f;
      sa[289] = -0.12498456f;
      sa[290] = -0.03418709f;
      sa[291] = -0.17048231f;
      sa[292] = 0.15409905f;
      sa[293] = -0.10485515f;
      sa[294] = 0.05853172f;
      sa[295] = 0.18392977f;
      sa[296] = 0.19705525f;
      sa[297] = 0.26849616f;
      sa[298] = 0.030631134f;
      sa[299] = -0.13562986f;
      sa[300] = -0.021611676f;
      sa[301] = -0.10411038f;
      sa[302] = 0.0928958f;
      sa[303] = 0.06979348f;
      sa[304] = -0.1641175f;
      sa[305] = -2.0395998E-4f;
      sa[306] = 0.17566878f;
      sa[307] = -0.1451027f;
      sa[308] = 0.09742252f;
      sa[309] = 0.18118705f;
      sa[310] = 0.28090873f;
      sa[311] = 0.35862872f;
      sa[312] = -0.16183005f;
      sa[313] = -0.14350916f;
      sa[314] = -0.14106017f;
      sa[315] = 0.11313049f;
      sa[316] = -0.0020594082f;
      sa[317] = -0.0490571f;
      sa[318] = 0.10272264f;
      sa[319] = 0.34270352f;
      sa[320] = -0.12470582f;
      sa[321] = 0.07913782f;
      sa[322] = 0.30953208f;
      sa[323] = -0.062362887f;
      sa[324] = -0.008450498f;
      sa[325] = 0.23508503f;
      sa[326] = -0.30669397f;
      sa[327] = 0.003928341f;
      sa[328] = -0.11768406f;
      sa[329] = 0.23053786f;
      sa[330] = -0.20256135f;
      sa[331] = -0.08895874f;
      sa[332] = -0.25394088f;
      sa[333] = 0.08736277f;
      sa[334] = -0.029273713f;
      sa[335] = 0.23591289f;
      sa[336] = -0.17032252f;
      sa[337] = -0.13646455f;
      sa[338] = 0.24833804f;
      sa[339] = -0.2848567f;
      sa[340] = -0.35981038f;
      sa[341] = -0.2727871f;
      sa[342] = 0.14871188f;
      sa[343] = 0.019709276f;
      sa[344] = -0.21275805f;
      sa[345] = 0.11351599f;
      sa[346] = 0.1637356f;
      sa[347] = -0.24753797f;
      sa[348] = 0.27734435f;
      sa[349] = -0.21763873f;
      sa[350] = -0.23807873f;
      sa[351] = -0.011669147f;
      sa[352] = 0.14609452f;
      sa[353] = -0.09793644f;
      sa[354] = 0.05545123f;
      sa[355] = -0.05007471f;
      sa[356] = -0.1525271f;
      sa[357] = 0.12612222f;
      sa[358] = -0.2725972f;
      sa[359] = 0.028921695f;
      sa[360] = 0.1402057f;
      sa[361] = -0.050843492f;
      sa[362] = -0.23413694f;
      sa[363] = 0.13787937f;
      sa[364] = -0.1393211f;
      sa[365] = -0.21466778f;
      sa[366] = -0.024537249f;
      sa[367] = -0.3372997f;
      sa[368] = -0.14992939f;
      sa[369] = 0.23879611f;
      sa[370] = -0.1776678f;
      sa[371] = 0.089340925f;
      sa[372] = -0.01573053f;
      sa[373] = 0.2745562f;
      sa[374] = -0.14415853f;
      sa[375] = -0.33375844f;
      sa[376] = -0.34928787f;
      sa[377] = -0.26136523f;
      sa[378] = 0.28523985f;
      sa[379] = 0.13297507f;
      sa[380] = -0.10618299f;
      sa[381] = -0.09800027f;
      sa[382] = -0.037386544f;
      sa[383] = -0.16735862f;
      sa[384] = -0.14906885f;
      sa[385] = 0.076932885f;
      sa[386] = -0.23552279f;
      sa[387] = -0.27574128f;
      sa[388] = 0.081793785f;
      sa[389] = -0.0104593225f;
      sa[390] = -0.0043385783f;
      sa[391] = -0.13719033f;
      sa[392] = 0.10430226f;
      sa[393] = -0.102985285f;
      sa[394] = 0.12917079f;
      sa[395] = 0.43874013f;
      sa[396] = 0.29443207f;
      sa[397] = -0.29774377f;
      sa[398] = 0.06589607f;
      sa[399] = -0.024749333f;
      sa[400] = 0.16940808f;
      sa[401] = 0.21896082f;
      sa[402] = -0.1580053f;
      sa[403] = 0.053621974f;
      sa[404] = 0.23728673f;
      sa[405] = -0.25179505f;
      sa[406] = -0.03491462f;
      sa[407] = 0.05642562f;
      sa[408] = -0.23145111f;
      sa[409] = -0.26750618f;
      sa[410] = -0.14953576f;
      sa[411] = 0.112037495f;
      sa[412] = -0.2106773f;
      sa[413] = 0.026781306f;
      sa[414] = 0.16513254f;
      sa[415] = 0.32000518f;
      sa[416] = -0.1744681f;
      sa[417] = 0.033370197f;
      sa[418] = -0.0076005035f;
      sa[419] = 0.29386297f;
      sa[420] = 0.22856818f;
      sa[421] = 0.21358845f;
      sa[422] = 0.2767144f;
      sa[423] = 0.031818457f;
      sa[424] = 0.09305913f;
      sa[425] = -0.06018796f;
      sa[426] = -0.28333834f;
      sa[427] = 0.1857114f;
      sa[428] = -0.08215015f;
      sa[429] = -0.3000531f;
      sa[430] = 0.20200422f;
      sa[431] = 0.025121285f;
      sa[432] = -0.018989986f;
      sa[433] = 0.089120544f;
      sa[434] = 0.14590268f;
      sa[435] = 0.1127474f;
      sa[436] = -0.29132918f;
      sa[437] = -0.25005716f;
      sa[438] = -0.009146232f;
      sa[439] = -0.094105795f;
      sa[440] = 0.31521678f;
      sa[441] = -0.3152344f;
      sa[442] = 0.033782538f;
      sa[443] = 0.10792729f;
      sa[444] = -0.2098742f;
      sa[445] = 0.07185671f;
      sa[446] = 0.22649826f;
      sa[447] = 0.0063702646f;
      sa[448] = 0.11214758f;
      sa[449] = 0.18568523f;
      sa[450] = -0.06581826f;
      sa[451] = 0.10239872f;
      sa[452] = 0.15832114f;
      sa[453] = -0.083440766f;
      sa[454] = -0.15995789f;
      sa[455] = -0.13488263f;
      sa[456] = -0.06656113f;
      sa[457] = 0.042275053f;
      sa[458] = -0.20995995f;
      sa[459] = 0.14010197f;
      sa[460] = 0.18909717f;
      sa[461] = 0.23205973f;
      sa[462] = 0.029279243f;
      sa[463] = 0.13911295f;
      sa[464] = -0.30136013f;
      sa[465] = 0.06968475f;
      sa[466] = 0.056970198f;
      sa[467] = 0.13116649f;
      sa[468] = 0.094611995f;
      sa[469] = 0.3065758f;
      sa[470] = 0.17016464f;
      sa[471] = 0.047621157f;
      sa[472] = -0.0071812444f;
      sa[473] = -0.10292982f;
      sa[474] = -0.025496287f;
      sa[475] = 0.05732707f;
      sa[476] = 0.2506384f;
      sa[477] = -0.15926868f;
      sa[478] = 0.10168264f;
      sa[479] = -0.12523274f;
      sa[480] = -0.2902946f;
      sa[481] = -0.19043109f;
      sa[482] = -0.2540166f;
      sa[483] = 0.16842605f;
      sa[484] = 0.2240997f;
      sa[485] = 0.13158582f;
      sa[486] = -0.019553902f;
      sa[487] = -0.12882799f;
      sa[488] = -0.18938926f;
      sa[489] = 0.06389394f;
      sa[490] = -0.010678885f;
      sa[491] = -0.26116604f;
      sa[492] = 0.23169592f;
      sa[493] = 0.2229488f;
      sa[494] = -0.2154726f;
      sa[495] = 0.08913215f;
      sa[496] = -0.0038553632f;
      sa[497] = 0.05091884f;
      sa[498] = 0.16361214f;
      sa[499] = 0.13386159f;
      sa[500] = -0.100319445f;
      sa[501] = -0.07462545f;
      sa[502] = 0.27963102f;
      sa[503] = 0.08315771f;
      sa[504] = -0.13890234f;
      sa[505] = -0.18764535f;
      sa[506] = 0.21708968f;
      sa[507] = -0.079923235f;
      sa[508] = 0.14720023f;
      sa[509] = 0.20982769f;
      sa[510] = 0.18407515f;
      sa[511] = 0.08855125f;
      sa[512] = 0.07525019f;
      sa[513] = -0.06271788f;
      sa[514] = 0.21494432f;
      sa[515] = -0.2655137f;
      sa[516] = 0.039069433f;
      sa[517] = 0.079332955f;
      sa[518] = 0.14237933f;
      sa[519] = -0.016442288f;
      sa[520] = 0.22500242f;
      sa[521] = 0.1431486f;
      sa[522] = 0.11742144f;
      sa[523] = 0.09852026f;
      sa[524] = 0.21898896f;
      sa[525] = 0.2387391f;
      sa[526] = 0.02523753f;
      sa[527] = -0.0147017995f;
      sa[528] = -0.026963016f;
      sa[529] = 0.09808268f;
      sa[530] = -0.15890685f;
      sa[531] = 0.19249429f;
      sa[532] = 0.17160502f;
      sa[533] = 0.17938568f;
      sa[534] = 0.15581536f;
      sa[535] = 0.018678883f;
      sa[536] = 0.073842324f;
      sa[537] = -0.19182059f;
      sa[538] = 0.24531956f;
      sa[539] = 0.30755848f;
      sa[540] = -0.2474591f;
      sa[541] = -0.15469994f;
      sa[542] = -0.052927572f;
      sa[543] = -0.11186329f;
      sa[544] = 0.14083415f;
      sa[545] = 0.14536233f;
      sa[546] = 0.11762301f;
      sa[547] = 0.15516417f;
      sa[548] = 0.07906224f;
      sa[549] = 0.14667012f;
      sa[550] = -0.04350717f;
      sa[551] = -0.034807466f;
      sa[552] = 0.08351245f;
      sa[553] = 0.0043131993f;
      sa[554] = -0.07449523f;
      sa[555] = -0.12220519f;
      sa[556] = -0.15958445f;
      sa[557] = -0.18568322f;
      sa[558] = -0.19165082f;
      sa[559] = 0.085693754f;
      sa[560] = -0.29259244f;
      sa[561] = -0.11402367f;
      sa[562] = 0.19119881f;
      sa[563] = -0.1360946f;
      sa[564] = 0.23540203f;
      sa[565] = 0.042526573f;
      sa[566] = 0.24994537f;
      sa[567] = -0.10229606f;
      sa[568] = -0.07779166f;
      sa[569] = 1.8962837E-5f;
      sa[570] = -0.02048309f;
      sa[571] = -0.10415178f;
      sa[572] = -0.032569557f;
      sa[573] = 0.21091665f;
      sa[574] = 0.08673531f;
      sa[575] = -0.330221f;
      sa[576] = -0.119439624f;
      sa[577] = -0.020658888f;
      sa[578] = 0.110214554f;
      sa[579] = -0.15730523f;
      sa[580] = 0.080103286f;
      sa[581] = -0.13109118f;
      sa[582] = 0.06306242f;
      sa[583] = 0.0059161377f;
      sa[584] = 0.10268442f;
      sa[585] = 0.1653469f;
      sa[586] = -0.15605533f;
      sa[587] = -0.17259465f;
      sa[588] = 0.044089466f;
      sa[589] = 0.09245589f;
      sa[590] = -0.04858275f;
      sa[591] = -0.012861089f;
      sa[592] = -0.3318519f;
      sa[593] = -0.17735049f;
      sa[594] = -0.058758684f;
      sa[595] = 0.101476945f;
      sa[596] = 0.22407384f;
      sa[597] = -0.045529928f;
      sa[598] = 0.18434237f;
      sa[599] = 0.042251512f;
      sa[600] = -0.22675505f;
      sa[601] = 0.23047297f;
      sa[602] = 0.026908556f;
      sa[603] = 0.25709033f;
      sa[604] = 0.2086414f;
      sa[605] = 0.16572213f;
      sa[606] = 0.19988813f;
      sa[607] = 0.036312625f;
      sa[608] = 0.023340331f;
      sa[609] = 0.121164694f;
      sa[610] = -0.006270527f;
      sa[611] = -0.16564496f;
      sa[612] = -0.025676843f;
      sa[613] = 0.056898493f;
      sa[614] = -0.030583648f;
      sa[615] = 0.03408801f;
      sa[616] = 0.0037760683f;
      sa[617] = -0.3150408f;
      sa[618] = -0.1800142f;
      sa[619] = -0.2637962f;
      sa[620] = -0.010151045f;
      sa[621] = -0.24553362f;
      sa[622] = -0.30300054f;
      sa[623] = -0.265838f;
      sa[624] = -0.06565774f;
      sa[625] = 0.2176789f;
      sa[626] = -0.026146485f;
      sa[627] = 0.15981825f;
      sa[628] = -0.36317104f;
      sa[629] = -0.1173489f;
      sa[630] = -0.11302797f;
      sa[631] = 0.23808458f;
      sa[632] = 0.0793551f;
      sa[633] = -0.18860482f;
      sa[634] = -0.21250573f;
      sa[635] = 0.036973793f;
      sa[636] = -0.21177725f;
      sa[637] = -0.06404803f;
      sa[638] = -0.11597013f;
      sa[639] = -0.18479306f;
      sa[640] = -0.17438251f;
      sa[641] = -0.3353569f;
      sa[642] = 0.13152793f;
      sa[643] = -0.39516082f;
      sa[644] = -0.122297786f;
      sa[645] = -0.43715417f;
      sa[646] = 0.3851182f;
      sa[647] = -0.17752916f;
      sa[648] = -0.025340322f;
      sa[649] = 0.10579781f;
      sa[650] = 0.13073806f;
      sa[651] = 0.027927939f;
      sa[652] = 0.10419288f;
      sa[653] = -0.034110248f;
      sa[654] = -0.040251236f;
      sa[655] = -0.1643848f;
      sa[656] = 0.103256986f;
      sa[657] = 0.18289186f;
      sa[658] = -0.290131f;
      sa[659] = -0.09177448f;
      sa[660] = -0.15323542f;
      sa[661] = 0.009762988f;
      sa[662] = -0.18042812f;
      sa[663] = 0.31778f;
      sa[664] = -0.026762309f;
      sa[665] = 0.4324007f;
      sa[666] = -0.12492338f;
      sa[667] = -0.27624035f;
      sa[668] = 0.3122561f;
      sa[669] = -0.101911224f;
      sa[670] = 0.20054585f;
      sa[671] = -0.012214259f;
      sa[672] = -0.28632668f;
      sa[673] = 0.17176075f;
      sa[674] = 0.14352249f;
      sa[675] = -0.33057186f;
      sa[676] = -0.035667934f;
      sa[677] = -0.17543784f;
      sa[678] = 0.2503502f;
      sa[679] = -0.048997838f;
      sa[680] = -0.008112921f;
      sa[681] = 0.017956473f;
      sa[682] = 0.18251634f;
      sa[683] = -0.052822467f;
      sa[684] = -0.022368552f;
      sa[685] = 0.025607921f;
      sa[686] = -0.1364723f;
      sa[687] = -0.24096513f;
      sa[688] = -0.22392768f;
      sa[689] = -0.2455811f;
      sa[690] = -0.013822112f;
      sa[691] = 0.24171984f;
      sa[692] = -0.14453396f;
      sa[693] = -0.1432363f;
      sa[694] = 0.23978652f;
      sa[695] = -0.09199864f;
      sa[696] = -0.08739003f;
      sa[697] = -0.17259416f;
      sa[698] = -0.18202563f;
      sa[699] = 0.39096317f;
      sa[700] = 0.15895934f;
      sa[701] = 0.10689735f;
      sa[702] = 0.2222022f;
      sa[703] = -0.14487119f;
      sa[704] = -0.2332879f;
      sa[705] = 0.018062083f;
      sa[706] = -0.10999584f;
      sa[707] = 0.1360764f;
      sa[708] = -0.0035707292f;
      sa[709] = -0.29584223f;
      sa[710] = 0.28092068f;
      sa[711] = 0.1299414f;
      sa[712] = 0.05921763f;
      sa[713] = 0.18227626f;
      sa[714] = 0.19302177f;
      sa[715] = 0.20489986f;
      sa[716] = 0.059511878f;
      sa[717] = 0.20622371f;
      sa[718] = -0.055252932f;
      sa[719] = 0.13107245f;
      sa[720] = -0.18510653f;
      sa[721] = 0.07073524f;
      sa[722] = -0.25326622f;
      sa[723] = 0.11371632f;
      sa[724] = 0.039928894f;
      sa[725] = -0.3387351f;
      sa[726] = -0.20423263f;
      sa[727] = -0.31059185f;
      sa[728] = -0.064940706f;
      sa[729] = -0.06849377f;
      sa[730] = 0.0053623966f;
      sa[731] = -0.23702595f;
      sa[732] = 0.1174937f;
      sa[733] = 0.13119605f;
      sa[734] = -0.14516775f;
      sa[735] = 0.21715109f;
      sa[736] = -0.19330937f;
      sa[737] = 0.041284747f;
      sa[738] = -0.008932975f;
      sa[739] = -0.4429172f;
      sa[740] = -0.30802673f;
      sa[741] = -0.30646768f;
      sa[742] = 0.08884106f;
      sa[743] = -0.002839705f;
      sa[744] = -0.028206201f;
      sa[745] = -0.27851048f;
      sa[746] = 0.16105159f;
      sa[747] = -0.20007966f;
      sa[748] = -0.22803369f;
      sa[749] = -0.2458144f;
      sa[750] = 0.08522309f;
      sa[751] = 0.14836363f;
      sa[752] = -0.006987995f;
      sa[753] = 0.25028223f;
      sa[754] = -0.055203285f;
      sa[755] = 0.13295649f;
      sa[756] = -0.21513791f;
      sa[757] = 0.24927612f;
      sa[758] = -0.068476096f;
      sa[759] = -0.16740982f;
      sa[760] = -0.042124525f;
      sa[761] = 0.04750818f;
      sa[762] = -0.07526024f;
      sa[763] = 0.27937055f;
      sa[764] = 0.04834705f;
      sa[765] = -0.015586389f;
      sa[766] = -0.24363264f;
      sa[767] = 0.07694295f;
      sa[768] = -0.16430566f;
      sa[769] = -0.2866903f;
      sa[770] = -0.009071949f;
      sa[771] = 0.11552087f;
      sa[772] = 0.08065736f;
      sa[773] = -0.21149004f;
      sa[774] = 0.0076370034f;
      sa[775] = 0.21021512f;
      sa[776] = -0.034124896f;
      sa[777] = 0.1147812f;
      sa[778] = 0.18461923f;
      sa[779] = -0.017011672f;
      sa[780] = -0.0052121044f;
      sa[781] = -0.095355704f;
      sa[782] = 0.15562665f;
      sa[783] = 0.05022124f;
      sa[784] = -0.11031142f;
      sa[785] = -0.064783104f;
      sa[786] = -0.065363884f;
      sa[787] = -0.15442435f;
      sa[788] = -0.19082837f;
      sa[789] = 0.31753007f;
      sa[790] = -0.17799415f;
      sa[791] = -0.14386444f;
      sa[792] = 0.19886845f;
      sa[793] = -0.022241347f;
      sa[794] = -0.12435693f;
      sa[795] = 0.06894428f;
      sa[796] = 0.29733053f;
      sa[797] = -0.07203663f;
      sa[798] = -0.14560239f;
      sa[799] = -0.09813515f;
      sa[800] = 0.22893107f;
      sa[801] = 0.054788135f;
      sa[802] = 0.20699939f;
      sa[803] = 0.14837104f;
      sa[804] = 0.3473665f;
      sa[805] = 0.44425997f;
      sa[806] = 0.42410335f;
      sa[807] = 0.36361748f;
      sa[808] = 0.10235979f;
      sa[809] = -0.16243418f;
      sa[810] = 0.0058094542f;
      sa[811] = 0.1811487f;
      sa[812] = 0.24045916f;
      sa[813] = -0.23463611f;
      sa[814] = 0.1538531f;
      sa[815] = -0.16525108f;
      sa[816] = -0.1382881f;
      sa[817] = -0.090121046f;
      sa[818] = -0.065341f;
      sa[819] = -0.13084017f;
      sa[820] = -0.18267208f;
      sa[821] = -0.13391359f;
      sa[822] = -0.15748255f;
      sa[823] = 0.13383852f;
      sa[824] = 0.119452484f;
      sa[825] = 0.2983947f;
      sa[826] = -0.29075602f;
      sa[827] = -0.34321067f;
      sa[828] = 0.12326777f;
      sa[829] = -0.07509692f;
      sa[830] = 0.16562745f;
      sa[831] = 0.28075895f;
      sa[832] = 0.123402f;
      sa[833] = 0.10282383f;
      sa[834] = 0.21347497f;
      sa[835] = -0.12532696f;
      sa[836] = 0.2235828f;
      sa[837] = -0.16386786f;
      sa[838] = 0.09534953f;
      sa[839] = -0.17715698f;
      sa[840] = 0.2317303f;
      sa[841] = 0.16517338f;
      sa[842] = 0.21358189f;
      sa[843] = 0.04040751f;
      sa[844] = 0.049099404f;
      sa[845] = 0.17060971f;
      sa[846] = -0.24847743f;
      sa[847] = -0.0761563f;
      sa[848] = 0.19994952f;
      sa[849] = 0.21654142f;
      sa[850] = -0.006118562f;
      sa[851] = 0.048532322f;
      sa[852] = 0.24407479f;
      sa[853] = 0.1548168f;
      sa[854] = 0.21890227f;
      sa[855] = 0.08694122f;
      sa[856] = 0.08571189f;
      sa[857] = -0.17021036f;
      sa[858] = 0.1344053f;
      sa[859] = 0.035691176f;
      sa[860] = 0.3140253f;
      sa[861] = -0.16715042f;
      sa[862] = -0.17451322f;
      sa[863] = -0.00741865f;
      sa[864] = -0.18230675f;
      sa[865] = 0.2571144f;
      sa[866] = -0.10476606f;
      sa[867] = -0.10064409f;
      sa[868] = -0.1484761f;
      sa[869] = 0.21062516f;
      sa[870] = -0.041953485f;
      sa[871] = 0.20668377f;
      sa[872] = 0.23906909f;
      sa[873] = 0.003795745f;
      sa[874] = 0.03476381f;
      sa[875] = -0.28421858f;
      sa[876] = -0.2299534f;
      sa[877] = -0.22077039f;
      sa[878] = -0.008865957f;
      sa[879] = 0.23036073f;
      sa[880] = -0.07701869f;
      sa[881] = -0.05096395f;
      sa[882] = 0.11780933f;
      sa[883] = 0.20225209f;
      sa[884] = -0.10893037f;
      sa[885] = -0.09406235f;
      sa[886] = 0.10212552f;
      sa[887] = 0.0040170816f;
      sa[888] = -0.057032034f;
      sa[889] = 0.04557288f;
      sa[890] = -0.30441162f;
      sa[891] = 0.42957848f;
      sa[892] = 0.19237389f;
      sa[893] = 0.29044473f;
      sa[894] = 0.06545341f;
      sa[895] = 0.28281406f;
      sa[896] = -0.20952852f;
      sa[897] = 0.23374212f;
      sa[898] = -0.014836555f;
      sa[899] = 0.22821094f;
      sa[900] = -0.080264695f;
      sa[901] = 0.08328792f;
      sa[902] = -0.33306885f;
      sa[903] = -0.10325394f;
      sa[904] = 0.09962093f;
      sa[905] = 0.091501236f;
      sa[906] = -0.2981619f;
      sa[907] = -0.3795113f;
      sa[908] = -0.21737371f;
      sa[909] = 0.030521097f;
      sa[910] = 0.021057842f;
      sa[911] = -0.12999934f;
      sa[912] = -0.10171647f;
      sa[913] = -0.0507715f;
      sa[914] = -0.2542017f;
      sa[915] = -0.06470519f;
      sa[916] = 0.06304289f;
      sa[917] = -0.065162286f;
      sa[918] = 0.24940006f;
      sa[919] = -0.020984888f;
      sa[920] = 0.0673954f;
      sa[921] = -0.14523064f;
      sa[922] = -0.18265802f;
      sa[923] = -0.22593416f;
      sa[924] = -0.14221318f;
      sa[925] = -0.19859156f;
      sa[926] = 0.119111106f;
      sa[927] = -0.19936527f;
      sa[928] = 0.13329141f;
      sa[929] = 0.031308655f;
      sa[930] = 0.035044163f;
      sa[931] = -0.1255292f;
      sa[932] = 0.20636418f;
      sa[933] = -0.0835549f;
      sa[934] = 0.24852012f;
      sa[935] = -0.14318077f;
      sa[936] = 0.06721599f;
      sa[937] = 0.21626545f;
      sa[938] = -0.02777543f;
      sa[939] = -0.105783544f;
      sa[940] = -0.026514804f;
      sa[941] = -0.29978436f;
      sa[942] = -0.23883007f;
      sa[943] = -0.11311144f;
      sa[944] = -0.2296181f;
      sa[945] = 0.08435189f;
      sa[946] = 0.122846924f;
      sa[947] = 0.21754791f;
      sa[948] = 0.077238426f;
      sa[949] = -0.19873394f;
      sa[950] = 0.063704625f;
      sa[951] = -0.048259716f;
      sa[952] = -0.15506624f;
      sa[953] = -0.14736894f;
      sa[954] = -0.24544147f;
      sa[955] = 0.06198462f;
      sa[956] = -0.0048860773f;
      sa[957] = 0.06757947f;
      sa[958] = 0.09287712f;
      sa[959] = -0.09492828f;
      sa[960] = 0.3372619f;
      sa[961] = -0.14085123f;
      sa[962] = -0.006224041f;
      sa[963] = 0.019531436f;
      sa[964] = -0.1454951f;
      sa[965] = 0.28239307f;
      sa[966] = -0.07137261f;
      sa[967] = -0.20760491f;
      sa[968] = 0.10924426f;
      sa[969] = 0.092167f;
      sa[970] = 0.27881083f;
      sa[971] = 0.02425566f;
      sa[972] = -0.19093513f;
      sa[973] = -0.25071058f;
      sa[974] = -0.39806983f;
      sa[975] = -0.20167169f;
      sa[976] = -0.1412742f;
      sa[977] = -0.004762163f;
      sa[978] = -0.12350297f;
      sa[979] = 0.054487158f;
      sa[980] = 0.07407239f;
      sa[981] = -0.23941508f;
      sa[982] = 0.118907236f;
      sa[983] = -0.05271568f;
      sa[984] = -0.30414122f;
      sa[985] = 0.022909835f;
      sa[986] = -0.27222398f;
      sa[987] = -0.00574662f;
      sa[988] = 0.09281588f;
      sa[989] = 0.17707326f;
      sa[990] = 0.32123944f;
      sa[991] = -0.17510091f;
      sa[992] = -0.24820565f;
      sa[993] = -0.10625127f;
      sa[994] = -0.19291556f;
      sa[995] = -0.34756127f;
      sa[996] = 0.15850428f;
      sa[997] = 0.17470904f;
      sa[998] = 0.110161744f;
      sa[999] = 0.13627432f;
      sa[1000] = -0.03229948f;
      sa[1001] = 0.16878444f;
      sa[1002] = 0.20047133f;
      sa[1003] = -0.18587491f;
      sa[1004] = 0.18138812f;
      sa[1005] = -0.25111803f;
      sa[1006] = -0.07222745f;
      sa[1007] = 0.056785244f;
      sa[1008] = 0.20275396f;
      sa[1009] = 0.06432775f;
      sa[1010] = 0.022732254f;
      sa[1011] = 0.32182312f;
      sa[1012] = -0.03161769f;
      sa[1013] = 0.18161123f;
      sa[1014] = 0.31929478f;
      sa[1015] = -0.2190403f;
      sa[1016] = 0.29569265f;
      sa[1017] = 0.059377328f;
      sa[1018] = -0.0705883f;
      sa[1019] = 0.10533225f;
      sa[1020] = -0.18430926f;
      sa[1021] = 0.121000335f;
      sa[1022] = 0.2913542f;
      sa[1023] = 0.1580218f;
      sa[1024] = 0.017755548f;
      sa[1025] = 0.11655831f;
      sa[1026] = 0.15475953f;
      sa[1027] = 0.19205329f;
      sa[1028] = 0.33283967f;
      sa[1029] = 0.040960047f;
      sa[1030] = -0.1178588f;
      sa[1031] = 0.049599193f;
      sa[1032] = -0.2601012f;
      sa[1033] = 0.02071802f;
      sa[1034] = -0.06606909f;
      sa[1035] = -0.25812075f;
      sa[1036] = 0.28811362f;
      sa[1037] = 0.053449567f;
      sa[1038] = -0.1783228f;
      sa[1039] = 0.29048187f;
      sa[1040] = 0.004913942f;
      sa[1041] = 0.14835803f;
      sa[1042] = -0.2523931f;
      sa[1043] = -0.101296134f;
      sa[1044] = 0.22693354f;
      sa[1045] = 0.192634f;
      sa[1046] = -0.30219036f;
      sa[1047] = -0.13333859f;
      sa[1048] = 0.08727609f;
      sa[1049] = -0.1703366f;
      sa[1050] = 0.013144723f;
      sa[1051] = -0.28192514f;
      sa[1052] = 0.17239884f;
      sa[1053] = 0.23788993f;
      sa[1054] = 0.194916f;
      sa[1055] = 0.010387403f;
      sa[1056] = 0.2345423f;
      sa[1057] = -0.24682239f;
      sa[1058] = 0.20119618f;
      sa[1059] = -0.25134462f;
      sa[1060] = -0.35636592f;
      sa[1061] = -0.041959133f;
      sa[1062] = 0.2769063f;
      sa[1063] = -0.055655234f;
      sa[1064] = 0.08379658f;
      sa[1065] = -0.056429464f;
      sa[1066] = 0.16676103f;
      sa[1067] = -0.3779291f;
      sa[1068] = -0.34576842f;
      sa[1069] = 0.17704628f;
      sa[1070] = 0.12355412f;
      sa[1071] = 0.09186199f;
      sa[1072] = -0.27925014f;
      sa[1073] = 0.050790347f;
      sa[1074] = 0.040073354f;
      sa[1075] = -0.25705838f;
      sa[1076] = -0.17640612f;
      sa[1077] = -0.014984515f;
      sa[1078] = 0.12611052f;
      sa[1079] = 0.10727843f;
      sa[1080] = 0.20850547f;
      sa[1081] = 0.16672543f;
      sa[1082] = -0.2824724f;
      sa[1083] = -0.16912699f;
      sa[1084] = 0.2415877f;
      sa[1085] = -0.20455101f;
      sa[1086] = -0.25007528f;
      sa[1087] = -0.20677625f;
      sa[1088] = -0.18707372f;
      sa[1089] = 0.05879733f;
      sa[1090] = -0.25304517f;
      sa[1091] = 0.11150296f;
      sa[1092] = -0.2518599f;
      sa[1093] = -0.26989287f;
      sa[1094] = 0.003811412f;
      sa[1095] = -0.21970958f;
      sa[1096] = 0.046035096f;
      sa[1097] = -0.124920085f;
      sa[1098] = 0.080895126f;
      sa[1099] = -0.027333109f;
      sa[1100] = -0.14076509f;
      sa[1101] = 0.12827343f;
      sa[1102] = -0.14807269f;
      sa[1103] = 0.24573395f;
      sa[1104] = -0.2282728f;
      sa[1105] = -0.13456468f;
      sa[1106] = -0.014587935f;
      sa[1107] = 0.15511371f;
      sa[1108] = -0.19998991f;
      sa[1109] = 0.2344312f;
      sa[1110] = 0.16113423f;
      sa[1111] = -0.24461597f;
      sa[1112] = 0.30925256f;
      sa[1113] = 0.3232412f;
      sa[1114] = -0.17907588f;
      sa[1115] = -0.09506343f;
      sa[1116] = -0.049541578f;
      sa[1117] = -0.17459044f;
      sa[1118] = -0.19656798f;
      sa[1119] = 0.02145171f;
      sa[1120] = 0.22148295f;
      sa[1121] = 0.067408994f;
      sa[1122] = 0.2728649f;
      sa[1123] = 0.28887913f;
      sa[1124] = 0.036368657f;
      sa[1125] = -0.060403116f;
      sa[1126] = 0.17176394f;
      sa[1127] = 0.18690777f;
      sa[1128] = 0.029680658f;
      sa[1129] = -0.110661335f;
      sa[1130] = 0.22900522f;
      sa[1131] = 0.31926432f;
      sa[1132] = -0.17958091f;
      sa[1133] = -0.1687966f;
      sa[1134] = 0.27612567f;
      sa[1135] = -0.44391292f;
      sa[1136] = -0.009170981f;
      sa[1137] = 0.24092169f;
      sa[1138] = -0.048716556f;
      sa[1139] = 0.15195027f;
      sa[1140] = 0.16809665f;
      sa[1141] = -0.28037113f;
      sa[1142] = 0.053907204f;
      sa[1143] = 0.01143779f;
      sa[1144] = -0.26724762f;
      sa[1145] = 0.16805297f;
      sa[1146] = 0.20179571f;
      sa[1147] = -0.037063643f;
      sa[1148] = 0.017398389f;
      sa[1149] = 0.011957455f;
      sa[1150] = -0.23647204f;
      sa[1151] = -0.21974753f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_12_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_12_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2344575f;
      sa[1] = -0.1371356f;
      sa[2] = -0.609295f;
      sa[3] = -0.98797584f;
      sa[4] = 0.06447666f;
      sa[5] = 0.22986384f;
      sa[6] = 1.2772962f;
      sa[7] = -0.69150066f;
      sa[8] = -0.95838124f;
      sa[9] = 0.71892047f;
      sa[10] = -0.12597528f;
      sa[11] = 0.42285746f;
      sa[12] = 0.14758074f;
      sa[13] = -0.0059733093f;
      sa[14] = -1.3260999f;
      sa[15] = 1.1624174f;
      sa[16] = 1.5614593f;
      sa[17] = -0.4505177f;
      sa[18] = 0.027625421f;
      sa[19] = -0.45983988f;
      sa[20] = 1.1634475f;
      sa[21] = 0.050962333f;
      sa[22] = -0.9560931f;
      sa[23] = 0.7560176f;
      sa[24] = -1.3908617f;
      sa[25] = 0.45312274f;
      sa[26] = -0.24453072f;
      sa[27] = 1.505147f;
      sa[28] = -1.3754244f;
      sa[29] = -0.47873122f;
      sa[30] = 0.42294598f;
      sa[31] = -0.6256844f;
      sa[32] = -1.1783105f;
      sa[33] = -1.4849803f;
      sa[34] = 0.016090276f;
      sa[35] = 1.3950106f;
      sa[36] = -0.29839742f;
      sa[37] = -0.030895216f;
      sa[38] = 0.21835506f;
      sa[39] = 0.77508795f;
      sa[40] = -0.74582106f;
      sa[41] = -1.346956f;
      sa[42] = -1.0680147f;
      sa[43] = -1.4747818f;
      sa[44] = 0.03027106f;
      sa[45] = -1.3463937f;
      sa[46] = 1.1699419f;
      sa[47] = 1.2960709f;
      sa[48] = -1.3265661f;
      sa[49] = -1.0886085f;
      sa[50] = 0.43426535f;
      sa[51] = -0.32044357f;
      sa[52] = 0.8190844f;
      sa[53] = 0.8898644f;
      sa[54] = -0.21115929f;
      sa[55] = 1.1483717f;
      sa[56] = -1.0179448f;
      sa[57] = -1.1259766f;
      sa[58] = 0.120996855f;
      sa[59] = -0.20712793f;
      sa[60] = 1.393048f;
      sa[61] = -0.6058066f;
      sa[62] = -0.33033186f;
      sa[63] = 0.7019814f;
      sa[64] = 1.5031037f;
      sa[65] = -0.61541307f;
      sa[66] = 0.6922758f;
      sa[67] = 1.624212f;
      sa[68] = 0.7302876f;
      sa[69] = -1.0913582f;
      sa[70] = -1.7493244f;
      sa[71] = -0.4040043f;
      sa[72] = -1.3108411f;
      sa[73] = 1.1325389f;
      sa[74] = 1.310598f;
      sa[75] = -0.091374375f;
      sa[76] = 0.9514579f;
      sa[77] = 0.55474627f;
      sa[78] = -1.2513069f;
      sa[79] = 0.9584309f;
      sa[80] = -0.8087998f;
      sa[81] = 0.30579457f;
      sa[82] = 0.7888891f;
      sa[83] = -0.6679226f;
      sa[84] = -1.6289103f;
      sa[85] = -1.2987944f;
      sa[86] = 0.20954086f;
      sa[87] = 1.2325437f;
      sa[88] = -1.5593542f;
      sa[89] = -0.51958627f;
      sa[90] = -1.0338382f;
      sa[91] = 1.4884638f;
      sa[92] = -0.30961195f;
      sa[93] = 0.23448738f;
      sa[94] = -1.60321f;
      sa[95] = -0.2877259f;
      sa[96] = -1.197958f;
      sa[97] = 0.15359488f;
      sa[98] = -0.11588617f;
      sa[99] = 0.27242702f;
      sa[100] = -1.405015f;
      sa[101] = -0.46225685f;
      sa[102] = 1.2454262f;
      sa[103] = 0.073222384f;
      sa[104] = -0.16926725f;
      sa[105] = -0.5936547f;
      sa[106] = 1.4848208f;
      sa[107] = 1.1867384f;
      sa[108] = 0.64300364f;
      sa[109] = 0.057847627f;
      sa[110] = 0.662654f;
      sa[111] = -0.8009109f;
      sa[112] = -1.1637931f;
      sa[113] = 0.20603344f;
      sa[114] = 0.16081725f;
      sa[115] = -0.34821013f;
      sa[116] = 1.1550021f;
      sa[117] = 0.02073626f;
      sa[118] = -1.4052421f;
      sa[119] = -0.8790696f;
      sa[120] = -0.3521659f;
      sa[121] = 1.0745008f;
      sa[122] = -0.06679916f;
      sa[123] = 0.3248983f;
      sa[124] = -0.8022934f;
      sa[125] = 0.80021846f;
      sa[126] = -0.9915384f;
      sa[127] = 0.43289235f;
      sa[128] = -0.8299618f;
      sa[129] = 0.7682104f;
      sa[130] = -0.3410451f;
      sa[131] = 0.9204973f;
      sa[132] = 0.5028816f;
      sa[133] = 0.64620817f;
      sa[134] = 0.41330603f;
      sa[135] = -1.1153457f;
      sa[136] = 0.5633137f;
      sa[137] = -0.64008665f;
      sa[138] = -0.3333986f;
      sa[139] = 1.2038366f;
      sa[140] = -0.40437785f;
      sa[141] = 0.04619087f;
      sa[142] = 0.35035595f;
      sa[143] = -0.77447236f;
      sa[144] = 1.009845f;
      sa[145] = -0.7967417f;
      sa[146] = 0.025837334f;
      sa[147] = -0.2578474f;
      sa[148] = -0.8403509f;
      sa[149] = 1.0724068f;
      sa[150] = -1.1986947f;
      sa[151] = -1.5217196f;
      sa[152] = 1.6534362f;
      sa[153] = -0.5924582f;
      sa[154] = 1.3295064f;
      sa[155] = -1.503703f;
      sa[156] = -1.5296725f;
      sa[157] = -1.1031821f;
      sa[158] = -0.22041188f;
      sa[159] = -0.6505333f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_12_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_12_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_12_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


