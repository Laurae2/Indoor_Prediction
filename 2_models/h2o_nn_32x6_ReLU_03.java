/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:25.779+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_03 > h2o_nn_32x6_ReLU_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_03", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_03_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6096283978494781952L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.48043421462113706;
      sa[1] = 0.5040832058849425;
      sa[2] = 0.5016088420608013;
      sa[3] = 0.5499208598670571;
      sa[4] = 0.611365992652291;
      sa[5] = 0.541101833051728;
      sa[6] = 0.5382375461144002;
      sa[7] = 0.45030987411528506;
      sa[8] = 0.5001660703853656;
      sa[9] = 0.5270951091002725;
      sa[10] = 0.48539738946700706;
      sa[11] = 0.5429067600831049;
      sa[12] = 0.4378936872940068;
      sa[13] = 0.5072387395860062;
      sa[14] = 0.5216355132423881;
      sa[15] = 0.5195610885164171;
      sa[16] = 0.5213037725731934;
      sa[17] = 0.501615841759442;
      sa[18] = 0.5224617675729425;
      sa[19] = 0.5138946593181142;
      sa[20] = 0.46746893255934596;
      sa[21] = 0.3978360623299032;
      sa[22] = 0.6769408305579784;
      sa[23] = 0.5169932817904751;
      sa[24] = 0.5186717039886289;
      sa[25] = 0.43230193057485256;
      sa[26] = 0.4471984132319749;
      sa[27] = 0.4546410832483927;
      sa[28] = 0.5090389723421938;
      sa[29] = 0.4095458999047979;
      sa[30] = 0.5238942922495318;
      sa[31] = 0.46004436305816093;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.011060920141800261;
      sa[1] = 0.009440332426346051;
      sa[2] = 0.006843101582014503;
      sa[3] = -0.04994407779039767;
      sa[4] = 0.028356338359673557;
    }
  }
}
class h2o_nn_32x6_ReLU_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.009687086f;
      sa[1] = 0.22854437f;
      sa[2] = 0.15988067f;
      sa[3] = 0.21433616f;
      sa[4] = -0.22254531f;
      sa[5] = -0.17991321f;
      sa[6] = -0.06576727f;
      sa[7] = 0.13745126f;
      sa[8] = 0.122209236f;
      sa[9] = -0.1880285f;
      sa[10] = -0.15853287f;
      sa[11] = -0.14469017f;
      sa[12] = 0.10475192f;
      sa[13] = -0.21293432f;
      sa[14] = -0.12679107f;
      sa[15] = -0.064275764f;
      sa[16] = 0.09441134f;
      sa[17] = 0.13774176f;
      sa[18] = -0.20071177f;
      sa[19] = 0.34240958f;
      sa[20] = 0.19694494f;
      sa[21] = -0.3601443f;
      sa[22] = 0.1948237f;
      sa[23] = -0.24248646f;
      sa[24] = 0.3065747f;
      sa[25] = 0.16514704f;
      sa[26] = -0.24535844f;
      sa[27] = 0.16376363f;
      sa[28] = 0.21618113f;
      sa[29] = -0.3010855f;
      sa[30] = -0.16699588f;
      sa[31] = 0.062544145f;
      sa[32] = 0.21918024f;
      sa[33] = -0.25394833f;
      sa[34] = 0.014600938f;
      sa[35] = -0.14084387f;
      sa[36] = 0.07945023f;
      sa[37] = 0.20999096f;
      sa[38] = -0.02477028f;
      sa[39] = 0.06479931f;
      sa[40] = 0.019689754f;
      sa[41] = -0.11647794f;
      sa[42] = -0.15077849f;
      sa[43] = 0.03766284f;
      sa[44] = 0.21910013f;
      sa[45] = -0.26914185f;
      sa[46] = 0.073558025f;
      sa[47] = -0.076007575f;
      sa[48] = 0.16188106f;
      sa[49] = 0.18054464f;
      sa[50] = 0.15050486f;
      sa[51] = -0.33279622f;
      sa[52] = -0.13976955f;
      sa[53] = 0.14969182f;
      sa[54] = 0.20279525f;
      sa[55] = 0.115029685f;
      sa[56] = -0.18481448f;
      sa[57] = -0.27387238f;
      sa[58] = 0.25143972f;
      sa[59] = -0.12169875f;
      sa[60] = -0.22269611f;
      sa[61] = 0.19764605f;
      sa[62] = 0.09730465f;
      sa[63] = 0.0713389f;
      sa[64] = 0.09113725f;
      sa[65] = 0.086408615f;
      sa[66] = -0.04035717f;
      sa[67] = 0.083338186f;
      sa[68] = -0.15448442f;
      sa[69] = 0.004081026f;
      sa[70] = -0.047007732f;
      sa[71] = 0.37893075f;
      sa[72] = -0.1204468f;
      sa[73] = 0.27939647f;
      sa[74] = -0.18284781f;
      sa[75] = 0.01659203f;
      sa[76] = -0.17533205f;
      sa[77] = -0.036147986f;
      sa[78] = -0.0515413f;
      sa[79] = 0.10431252f;
      sa[80] = -0.19833629f;
      sa[81] = -0.049759004f;
      sa[82] = -0.04078429f;
      sa[83] = 0.18162762f;
      sa[84] = 0.011152942f;
      sa[85] = -0.13249052f;
      sa[86] = 0.16048224f;
      sa[87] = 0.24899235f;
      sa[88] = 0.2722811f;
      sa[89] = 0.12387712f;
      sa[90] = -0.16521749f;
      sa[91] = 0.16865811f;
      sa[92] = 0.13440856f;
      sa[93] = -0.16903292f;
      sa[94] = -0.15361278f;
      sa[95] = -0.25786653f;
      sa[96] = 0.12638472f;
      sa[97] = 0.025755865f;
      sa[98] = 0.15935317f;
      sa[99] = -0.08072288f;
      sa[100] = -0.01088715f;
      sa[101] = -0.14531963f;
      sa[102] = -0.1987765f;
      sa[103] = -0.050893545f;
      sa[104] = -0.053935744f;
      sa[105] = -0.17897631f;
      sa[106] = -0.12912014f;
      sa[107] = 0.19480619f;
      sa[108] = 0.22934958f;
      sa[109] = -0.121171914f;
      sa[110] = -0.17998384f;
      sa[111] = 0.067318775f;
      sa[112] = 0.17136668f;
      sa[113] = 0.0858196f;
      sa[114] = -0.11877142f;
      sa[115] = 0.01862218f;
      sa[116] = -0.19685479f;
      sa[117] = 0.07308666f;
      sa[118] = -0.21275534f;
      sa[119] = -0.16298495f;
      sa[120] = 0.23733002f;
      sa[121] = 0.26878488f;
      sa[122] = 0.3036843f;
      sa[123] = 0.32424527f;
      sa[124] = 0.32587498f;
      sa[125] = 0.35880125f;
      sa[126] = -0.33655694f;
      sa[127] = -0.23039956f;
      sa[128] = 0.12067394f;
      sa[129] = 0.22898114f;
      sa[130] = -0.07445241f;
      sa[131] = 0.33946514f;
      sa[132] = 0.13549474f;
      sa[133] = -0.25396705f;
      sa[134] = 0.027914194f;
      sa[135] = -0.0747027f;
      sa[136] = -0.19888496f;
      sa[137] = 0.067720585f;
      sa[138] = 0.18572254f;
      sa[139] = 0.008416311f;
      sa[140] = -0.13570522f;
      sa[141] = -0.17484662f;
      sa[142] = 0.23453318f;
      sa[143] = -0.20503905f;
      sa[144] = 0.15028504f;
      sa[145] = -0.10419969f;
      sa[146] = -0.2235443f;
      sa[147] = 0.14176041f;
      sa[148] = 0.20183669f;
      sa[149] = 0.2613993f;
      sa[150] = 0.3416664f;
      sa[151] = -0.14662997f;
      sa[152] = 0.0047352216f;
      sa[153] = 0.25036114f;
      sa[154] = 0.25738564f;
      sa[155] = -0.18872716f;
      sa[156] = 0.18260868f;
      sa[157] = -0.08652378f;
      sa[158] = 0.15800641f;
      sa[159] = 0.17827477f;
      sa[160] = 0.1480137f;
      sa[161] = 0.2601761f;
      sa[162] = -0.20498894f;
      sa[163] = 0.06163838f;
      sa[164] = 0.23466533f;
      sa[165] = -0.03873618f;
      sa[166] = -0.04955532f;
      sa[167] = -0.048345234f;
      sa[168] = 0.23058003f;
      sa[169] = 0.36388442f;
      sa[170] = 0.009186493f;
      sa[171] = -0.004103636f;
      sa[172] = -0.019157568f;
      sa[173] = -0.11364767f;
      sa[174] = 0.05471431f;
      sa[175] = -0.19982289f;
      sa[176] = -0.004021483f;
      sa[177] = 0.014943892f;
      sa[178] = -0.1169834f;
      sa[179] = 0.03227349f;
      sa[180] = -0.044242397f;
      sa[181] = -0.3354891f;
      sa[182] = -0.089358054f;
      sa[183] = 0.051190574f;
      sa[184] = 0.31161734f;
      sa[185] = 0.16497394f;
      sa[186] = -0.2541868f;
      sa[187] = 0.16643965f;
      sa[188] = -0.03871653f;
      sa[189] = 0.16697831f;
      sa[190] = 0.10989712f;
      sa[191] = -0.13240765f;
      sa[192] = -0.14013724f;
      sa[193] = 0.1902901f;
      sa[194] = 0.07267679f;
      sa[195] = 0.30634478f;
      sa[196] = 0.23490801f;
      sa[197] = -0.04546701f;
      sa[198] = 0.1414443f;
      sa[199] = -0.11764221f;
      sa[200] = 0.012785298f;
      sa[201] = -0.25128564f;
      sa[202] = 0.1517176f;
      sa[203] = 0.058569826f;
      sa[204] = -0.16438016f;
      sa[205] = 0.2801872f;
      sa[206] = 0.25004217f;
      sa[207] = 0.24689445f;
      sa[208] = -0.26954287f;
      sa[209] = -0.07811828f;
      sa[210] = -0.28669205f;
      sa[211] = -0.22747636f;
      sa[212] = 0.25963703f;
      sa[213] = -0.17896402f;
      sa[214] = -0.1597989f;
      sa[215] = -0.021934941f;
      sa[216] = 0.13326408f;
      sa[217] = 0.0048212362f;
      sa[218] = -0.17236708f;
      sa[219] = 0.26541167f;
      sa[220] = -0.2150287f;
      sa[221] = -0.015716374f;
      sa[222] = 0.20070043f;
      sa[223] = 0.062320493f;
      sa[224] = 0.10719121f;
      sa[225] = 0.18651935f;
      sa[226] = -0.23534139f;
      sa[227] = 0.18733563f;
      sa[228] = 0.0761797f;
      sa[229] = -0.002674402f;
      sa[230] = 0.21916132f;
      sa[231] = -0.29018494f;
      sa[232] = -0.37171456f;
      sa[233] = -0.0674051f;
      sa[234] = 0.2690629f;
      sa[235] = -0.28605443f;
      sa[236] = -0.04389422f;
      sa[237] = -0.20553164f;
      sa[238] = -0.19691527f;
      sa[239] = 0.20672354f;
      sa[240] = 0.0137586165f;
      sa[241] = -0.26606777f;
      sa[242] = -0.008952494f;
      sa[243] = -0.29797587f;
      sa[244] = -0.23471798f;
      sa[245] = -0.14019033f;
      sa[246] = -0.31683767f;
      sa[247] = -0.07825888f;
      sa[248] = 0.26370952f;
      sa[249] = 0.23205848f;
      sa[250] = -0.22366728f;
      sa[251] = -0.116519205f;
      sa[252] = -0.17694744f;
      sa[253] = -0.22145087f;
      sa[254] = -0.2826862f;
      sa[255] = 0.22147033f;
      sa[256] = -0.17766945f;
      sa[257] = 0.23104593f;
      sa[258] = -0.24647827f;
      sa[259] = -0.1455533f;
      sa[260] = -0.14474021f;
      sa[261] = -0.014432165f;
      sa[262] = -0.163917f;
      sa[263] = 0.34667745f;
      sa[264] = -0.150645f;
      sa[265] = 0.0217069f;
      sa[266] = -0.26762098f;
      sa[267] = -0.23377615f;
      sa[268] = 0.12184702f;
      sa[269] = -0.12893203f;
      sa[270] = 0.026769646f;
      sa[271] = 0.08392997f;
      sa[272] = -0.070634775f;
      sa[273] = -0.10047844f;
      sa[274] = 0.13125055f;
      sa[275] = -0.04342427f;
      sa[276] = 0.033782955f;
      sa[277] = -0.25760117f;
      sa[278] = -0.11558121f;
      sa[279] = 0.17600016f;
      sa[280] = -0.18108113f;
      sa[281] = 0.25358793f;
      sa[282] = -0.13400175f;
      sa[283] = -0.042539775f;
      sa[284] = 0.0070010806f;
      sa[285] = -0.1603781f;
      sa[286] = 0.26040664f;
      sa[287] = 0.139926f;
      sa[288] = -0.15201981f;
      sa[289] = -0.13687919f;
      sa[290] = -0.022018516f;
      sa[291] = -0.08932459f;
      sa[292] = 0.15475118f;
      sa[293] = -0.10048285f;
      sa[294] = 0.089095905f;
      sa[295] = 0.17208134f;
      sa[296] = 0.21777171f;
      sa[297] = 0.23272747f;
      sa[298] = 0.061985344f;
      sa[299] = -0.101197906f;
      sa[300] = -0.050572228f;
      sa[301] = -0.111198515f;
      sa[302] = 0.11244878f;
      sa[303] = 0.040815715f;
      sa[304] = -0.19559206f;
      sa[305] = -0.021016585f;
      sa[306] = 0.14563033f;
      sa[307] = -0.15505177f;
      sa[308] = 0.08756748f;
      sa[309] = 0.18420953f;
      sa[310] = 0.29684716f;
      sa[311] = 0.35013944f;
      sa[312] = -0.17360443f;
      sa[313] = -0.12307583f;
      sa[314] = -0.20721826f;
      sa[315] = 0.100942075f;
      sa[316] = -0.035406046f;
      sa[317] = -0.07720927f;
      sa[318] = 0.064462274f;
      sa[319] = 0.282791f;
      sa[320] = -0.12704355f;
      sa[321] = 0.08894733f;
      sa[322] = 0.29766637f;
      sa[323] = -0.087489106f;
      sa[324] = -0.11924731f;
      sa[325] = 0.21749473f;
      sa[326] = -0.22883107f;
      sa[327] = 0.015997307f;
      sa[328] = -0.10711051f;
      sa[329] = 0.23451997f;
      sa[330] = -0.18291499f;
      sa[331] = -0.099073306f;
      sa[332] = -0.28426355f;
      sa[333] = 0.062074546f;
      sa[334] = -0.068772875f;
      sa[335] = 0.23160805f;
      sa[336] = -0.12800647f;
      sa[337] = -0.10385748f;
      sa[338] = 0.30893236f;
      sa[339] = -0.2867156f;
      sa[340] = -0.32462403f;
      sa[341] = -0.29293123f;
      sa[342] = 0.18676881f;
      sa[343] = 0.07896959f;
      sa[344] = -0.20321013f;
      sa[345] = 0.11763937f;
      sa[346] = 0.15993747f;
      sa[347] = -0.22844855f;
      sa[348] = 0.35106108f;
      sa[349] = -0.24620761f;
      sa[350] = -0.22155444f;
      sa[351] = -0.012844758f;
      sa[352] = 0.171164f;
      sa[353] = -0.085906014f;
      sa[354] = 0.06913591f;
      sa[355] = 0.02749322f;
      sa[356] = -0.11084032f;
      sa[357] = 0.16194353f;
      sa[358] = -0.3104192f;
      sa[359] = 0.00517864f;
      sa[360] = 0.085779995f;
      sa[361] = -0.040902067f;
      sa[362] = -0.14019658f;
      sa[363] = 0.13031764f;
      sa[364] = -0.12321673f;
      sa[365] = -0.22588986f;
      sa[366] = -0.020943651f;
      sa[367] = -0.32495007f;
      sa[368] = -0.17361632f;
      sa[369] = 0.29560575f;
      sa[370] = -0.16982962f;
      sa[371] = 0.094067305f;
      sa[372] = -0.024158992f;
      sa[373] = 0.26510718f;
      sa[374] = -0.1493265f;
      sa[375] = -0.33756316f;
      sa[376] = -0.30575615f;
      sa[377] = -0.21522452f;
      sa[378] = 0.28758803f;
      sa[379] = 0.15842614f;
      sa[380] = -0.10680063f;
      sa[381] = -0.07882299f;
      sa[382] = -0.04252689f;
      sa[383] = -0.123710014f;
      sa[384] = -0.11701514f;
      sa[385] = 0.08786624f;
      sa[386] = -0.25265986f;
      sa[387] = -0.20345731f;
      sa[388] = 0.08026722f;
      sa[389] = -0.0047951154f;
      sa[390] = -0.013892336f;
      sa[391] = -0.12988807f;
      sa[392] = 0.1604143f;
      sa[393] = 0.050867874f;
      sa[394] = 0.06291769f;
      sa[395] = 0.38268608f;
      sa[396] = 0.27320725f;
      sa[397] = -0.3126459f;
      sa[398] = 0.13274236f;
      sa[399] = 0.047248967f;
      sa[400] = 0.18684661f;
      sa[401] = 0.19660549f;
      sa[402] = -0.12920646f;
      sa[403] = 0.06675226f;
      sa[404] = 0.2327812f;
      sa[405] = -0.2470642f;
      sa[406] = -0.04039687f;
      sa[407] = 0.088091776f;
      sa[408] = -0.23028304f;
      sa[409] = -0.28597888f;
      sa[410] = -0.12979117f;
      sa[411] = 0.1176372f;
      sa[412] = -0.18079828f;
      sa[413] = 0.025731895f;
      sa[414] = 0.1569857f;
      sa[415] = 0.32503864f;
      sa[416] = -0.16295905f;
      sa[417] = 0.06155082f;
      sa[418] = 0.022991352f;
      sa[419] = 0.31199035f;
      sa[420] = 0.20393509f;
      sa[421] = 0.24020742f;
      sa[422] = 0.22793415f;
      sa[423] = 0.017769113f;
      sa[424] = 0.07984283f;
      sa[425] = -0.0749486f;
      sa[426] = -0.3121991f;
      sa[427] = 0.15322275f;
      sa[428] = -0.055198833f;
      sa[429] = -0.23220563f;
      sa[430] = 0.22179355f;
      sa[431] = 0.038398452f;
      sa[432] = -0.06451881f;
      sa[433] = 0.12485096f;
      sa[434] = 0.20237409f;
      sa[435] = 0.07513442f;
      sa[436] = -0.2989463f;
      sa[437] = -0.26045388f;
      sa[438] = -0.041039124f;
      sa[439] = -0.11851196f;
      sa[440] = 0.2880379f;
      sa[441] = -0.26921713f;
      sa[442] = 0.020040095f;
      sa[443] = 0.12774129f;
      sa[444] = -0.20602833f;
      sa[445] = 0.07323046f;
      sa[446] = 0.21311525f;
      sa[447] = -0.0133671565f;
      sa[448] = 0.17063259f;
      sa[449] = 0.21981096f;
      sa[450] = -0.07756022f;
      sa[451] = 0.15440571f;
      sa[452] = 0.15821564f;
      sa[453] = -0.085953504f;
      sa[454] = -0.19794057f;
      sa[455] = -0.13920344f;
      sa[456] = -0.034682687f;
      sa[457] = 0.039310787f;
      sa[458] = -0.20633815f;
      sa[459] = 0.14576563f;
      sa[460] = 0.21129885f;
      sa[461] = 0.25913107f;
      sa[462] = 0.04820544f;
      sa[463] = 0.1697613f;
      sa[464] = -0.2808076f;
      sa[465] = 0.12452863f;
      sa[466] = 0.050017986f;
      sa[467] = 0.17611647f;
      sa[468] = 0.091565266f;
      sa[469] = 0.31004974f;
      sa[470] = 0.20077191f;
      sa[471] = 0.043160412f;
      sa[472] = -0.0073990664f;
      sa[473] = -0.10872497f;
      sa[474] = -0.013927747f;
      sa[475] = 0.04382604f;
      sa[476] = 0.26609564f;
      sa[477] = -0.12318762f;
      sa[478] = 0.0833079f;
      sa[479] = -0.110347636f;
      sa[480] = -0.28214198f;
      sa[481] = -0.18005359f;
      sa[482] = -0.22098412f;
      sa[483] = 0.15906245f;
      sa[484] = 0.23258097f;
      sa[485] = 0.15072432f;
      sa[486] = -0.016262641f;
      sa[487] = -0.09829526f;
      sa[488] = -0.18985029f;
      sa[489] = 0.06906027f;
      sa[490] = -0.0051150243f;
      sa[491] = -0.2551789f;
      sa[492] = 0.24185772f;
      sa[493] = 0.22687806f;
      sa[494] = -0.24680175f;
      sa[495] = 0.06412256f;
      sa[496] = -0.00941946f;
      sa[497] = 0.04413428f;
      sa[498] = 0.1546858f;
      sa[499] = 0.11439008f;
      sa[500] = -0.08677015f;
      sa[501] = -0.06221697f;
      sa[502] = 0.26618412f;
      sa[503] = 0.101426646f;
      sa[504] = -0.05127971f;
      sa[505] = -0.19617647f;
      sa[506] = 0.157723f;
      sa[507] = -0.104954f;
      sa[508] = 0.13889666f;
      sa[509] = 0.20354676f;
      sa[510] = 0.16681385f;
      sa[511] = 0.07180168f;
      sa[512] = 0.09531545f;
      sa[513] = -0.037105236f;
      sa[514] = 0.25888544f;
      sa[515] = -0.26259002f;
      sa[516] = 0.006847991f;
      sa[517] = 0.038825657f;
      sa[518] = 0.08235526f;
      sa[519] = -0.05424083f;
      sa[520] = 0.18306439f;
      sa[521] = 0.13703799f;
      sa[522] = 0.08880024f;
      sa[523] = 0.042496517f;
      sa[524] = 0.21329144f;
      sa[525] = 0.24321444f;
      sa[526] = 0.041868456f;
      sa[527] = -0.036428656f;
      sa[528] = -0.071461394f;
      sa[529] = 0.11274043f;
      sa[530] = -0.17313866f;
      sa[531] = 0.2022433f;
      sa[532] = 0.14765431f;
      sa[533] = 0.14887713f;
      sa[534] = 0.12674527f;
      sa[535] = -0.02808182f;
      sa[536] = 0.052452937f;
      sa[537] = -0.19056682f;
      sa[538] = 0.25193045f;
      sa[539] = 0.3114584f;
      sa[540] = -0.28398433f;
      sa[541] = -0.16117312f;
      sa[542] = -0.099534266f;
      sa[543] = -0.17337172f;
      sa[544] = 0.12505387f;
      sa[545] = 0.14021054f;
      sa[546] = 0.08594643f;
      sa[547] = 0.14520335f;
      sa[548] = 0.057075955f;
      sa[549] = 0.1216321f;
      sa[550] = -0.051202293f;
      sa[551] = -0.060343824f;
      sa[552] = 0.086299546f;
      sa[553] = 0.024782814f;
      sa[554] = -0.0843824f;
      sa[555] = -0.107448354f;
      sa[556] = -0.14941199f;
      sa[557] = -0.20393205f;
      sa[558] = -0.18734975f;
      sa[559] = 0.0707493f;
      sa[560] = -0.298635f;
      sa[561] = -0.13154525f;
      sa[562] = 0.16725828f;
      sa[563] = -0.13808802f;
      sa[564] = 0.24506338f;
      sa[565] = 0.025625221f;
      sa[566] = 0.2876446f;
      sa[567] = -0.07631033f;
      sa[568] = -0.059677787f;
      sa[569] = 0.017042195f;
      sa[570] = 0.007636573f;
      sa[571] = -0.056901157f;
      sa[572] = -0.05174629f;
      sa[573] = 0.17905736f;
      sa[574] = 0.13046204f;
      sa[575] = -0.32390216f;
      sa[576] = -0.14292552f;
      sa[577] = -0.0039669885f;
      sa[578] = 0.1463145f;
      sa[579] = -0.056217935f;
      sa[580] = 0.085734285f;
      sa[581] = -0.12742677f;
      sa[582] = 0.10623594f;
      sa[583] = 0.030657815f;
      sa[584] = 0.1041121f;
      sa[585] = 0.13540712f;
      sa[586] = -0.19487092f;
      sa[587] = -0.16293536f;
      sa[588] = 0.07562223f;
      sa[589] = 0.124333195f;
      sa[590] = 0.008222443f;
      sa[591] = 0.033182528f;
      sa[592] = -0.30006042f;
      sa[593] = -0.19238149f;
      sa[594] = -0.052731954f;
      sa[595] = 0.06506374f;
      sa[596] = 0.23531947f;
      sa[597] = -0.045565583f;
      sa[598] = 0.2151444f;
      sa[599] = 0.06247855f;
      sa[600] = -0.2285675f;
      sa[601] = 0.25086212f;
      sa[602] = -0.042290244f;
      sa[603] = 0.22937493f;
      sa[604] = 0.19886993f;
      sa[605] = 0.14475174f;
      sa[606] = 0.18280283f;
      sa[607] = 0.013551889f;
      sa[608] = -0.007473864f;
      sa[609] = 0.096117646f;
      sa[610] = 0.060327686f;
      sa[611] = -0.0989893f;
      sa[612] = -0.119145855f;
      sa[613] = 0.067962244f;
      sa[614] = 0.041992813f;
      sa[615] = 0.002082101f;
      sa[616] = 0.021710383f;
      sa[617] = -0.31868857f;
      sa[618] = -0.18323086f;
      sa[619] = -0.2685166f;
      sa[620] = -0.05086343f;
      sa[621] = -0.21190096f;
      sa[622] = -0.31115454f;
      sa[623] = -0.263897f;
      sa[624] = -0.0609637f;
      sa[625] = 0.2247093f;
      sa[626] = -0.016239472f;
      sa[627] = 0.15706818f;
      sa[628] = -0.29609692f;
      sa[629] = -0.09214187f;
      sa[630] = -0.11009001f;
      sa[631] = 0.2747083f;
      sa[632] = 0.087771f;
      sa[633] = -0.16921596f;
      sa[634] = -0.22777665f;
      sa[635] = 0.06613052f;
      sa[636] = -0.15691142f;
      sa[637] = -0.10462914f;
      sa[638] = -0.09846169f;
      sa[639] = -0.18909815f;
      sa[640] = -0.14762945f;
      sa[641] = -0.29902634f;
      sa[642] = 0.15485002f;
      sa[643] = -0.3619752f;
      sa[644] = -0.079742625f;
      sa[645] = -0.3163443f;
      sa[646] = 0.34298044f;
      sa[647] = -0.1637978f;
      sa[648] = -0.035231728f;
      sa[649] = 0.03983356f;
      sa[650] = 0.030282f;
      sa[651] = -0.13476884f;
      sa[652] = 0.08900222f;
      sa[653] = -0.08372615f;
      sa[654] = -0.13901609f;
      sa[655] = -0.18456197f;
      sa[656] = 0.107051015f;
      sa[657] = 0.19048384f;
      sa[658] = -0.25707695f;
      sa[659] = -0.12575406f;
      sa[660] = -0.18863289f;
      sa[661] = 0.0026893003f;
      sa[662] = -0.23492716f;
      sa[663] = 0.20887922f;
      sa[664] = -0.11017389f;
      sa[665] = 0.34457248f;
      sa[666] = -0.0911083f;
      sa[667] = -0.25558516f;
      sa[668] = 0.28518638f;
      sa[669] = -0.11123413f;
      sa[670] = 0.1277124f;
      sa[671] = -0.02463829f;
      sa[672] = -0.2899072f;
      sa[673] = 0.14759658f;
      sa[674] = 0.18157345f;
      sa[675] = -0.2707436f;
      sa[676] = -0.046165038f;
      sa[677] = -0.14881176f;
      sa[678] = 0.283438f;
      sa[679] = -0.01900706f;
      sa[680] = 0.029251812f;
      sa[681] = 0.04869668f;
      sa[682] = 0.094253905f;
      sa[683] = -0.06374398f;
      sa[684] = 0.040159415f;
      sa[685] = 0.011559301f;
      sa[686] = -0.16406639f;
      sa[687] = -0.2189542f;
      sa[688] = -0.2362284f;
      sa[689] = -0.24903055f;
      sa[690] = -0.02424178f;
      sa[691] = 0.21653165f;
      sa[692] = -0.11533413f;
      sa[693] = -0.14148562f;
      sa[694] = 0.28526998f;
      sa[695] = -0.06813874f;
      sa[696] = -0.11744302f;
      sa[697] = -0.17570262f;
      sa[698] = -0.21745388f;
      sa[699] = 0.34510118f;
      sa[700] = 0.11761725f;
      sa[701] = 0.0945025f;
      sa[702] = 0.18859346f;
      sa[703] = -0.20293854f;
      sa[704] = -0.25043574f;
      sa[705] = 0.011081934f;
      sa[706] = -0.10271008f;
      sa[707] = 0.094274305f;
      sa[708] = -0.06837726f;
      sa[709] = -0.26135975f;
      sa[710] = 0.2339257f;
      sa[711] = 0.021091102f;
      sa[712] = 0.030198334f;
      sa[713] = 0.14434624f;
      sa[714] = 0.16819356f;
      sa[715] = 0.121306755f;
      sa[716] = 0.03821818f;
      sa[717] = 0.19996929f;
      sa[718] = -0.034799308f;
      sa[719] = 0.09752025f;
      sa[720] = -0.2087185f;
      sa[721] = 0.07986581f;
      sa[722] = -0.1428308f;
      sa[723] = 0.124381475f;
      sa[724] = 0.025554078f;
      sa[725] = -0.326365f;
      sa[726] = -0.24308461f;
      sa[727] = -0.30979976f;
      sa[728] = -0.08018298f;
      sa[729] = -0.07583464f;
      sa[730] = -0.011526993f;
      sa[731] = -0.26353922f;
      sa[732] = 0.13609223f;
      sa[733] = 0.16032305f;
      sa[734] = -0.15944523f;
      sa[735] = 0.23490027f;
      sa[736] = -0.10553484f;
      sa[737] = 0.022758797f;
      sa[738] = -0.02938843f;
      sa[739] = -0.52859247f;
      sa[740] = -0.28427574f;
      sa[741] = -0.30467287f;
      sa[742] = 0.08441798f;
      sa[743] = 0.008262908f;
      sa[744] = 0.012939196f;
      sa[745] = -0.32478133f;
      sa[746] = 0.1843443f;
      sa[747] = -0.20415452f;
      sa[748] = -0.19392876f;
      sa[749] = -0.21600588f;
      sa[750] = 0.11704771f;
      sa[751] = 0.20762785f;
      sa[752] = -8.662157E-4f;
      sa[753] = 0.20422806f;
      sa[754] = -0.057624f;
      sa[755] = 0.12937789f;
      sa[756] = -0.15178677f;
      sa[757] = 0.28191212f;
      sa[758] = -0.20923492f;
      sa[759] = -0.041350078f;
      sa[760] = -0.09139741f;
      sa[761] = 0.022923568f;
      sa[762] = -0.12903954f;
      sa[763] = 0.19926882f;
      sa[764] = 0.08050498f;
      sa[765] = -0.026411388f;
      sa[766] = -0.24379016f;
      sa[767] = 0.12665033f;
      sa[768] = -0.20067687f;
      sa[769] = -0.3119096f;
      sa[770] = -0.061041985f;
      sa[771] = 0.055099055f;
      sa[772] = 0.07918393f;
      sa[773] = -0.23224787f;
      sa[774] = -0.07988752f;
      sa[775] = 0.1626666f;
      sa[776] = -0.06912233f;
      sa[777] = 0.059550673f;
      sa[778] = 0.14127561f;
      sa[779] = -0.13195185f;
      sa[780] = -0.113274224f;
      sa[781] = -0.07721276f;
      sa[782] = 0.09976446f;
      sa[783] = -0.10963629f;
      sa[784] = -0.14522421f;
      sa[785] = -0.11203206f;
      sa[786] = -0.095778376f;
      sa[787] = -0.18093191f;
      sa[788] = -0.17950605f;
      sa[789] = 0.2998484f;
      sa[790] = -0.24260746f;
      sa[791] = -0.21929215f;
      sa[792] = 0.17455588f;
      sa[793] = 0.106496945f;
      sa[794] = -0.23965909f;
      sa[795] = -0.016679714f;
      sa[796] = 0.27592117f;
      sa[797] = -0.112298064f;
      sa[798] = -0.19263367f;
      sa[799] = -0.12583856f;
      sa[800] = 0.21893345f;
      sa[801] = 0.078373626f;
      sa[802] = 0.2213284f;
      sa[803] = 0.13271296f;
      sa[804] = 0.35210526f;
      sa[805] = 0.39300686f;
      sa[806] = 0.38455442f;
      sa[807] = 0.3397908f;
      sa[808] = 0.15194124f;
      sa[809] = -0.07633936f;
      sa[810] = 0.003446193f;
      sa[811] = 0.17209333f;
      sa[812] = 0.22019073f;
      sa[813] = -0.26205474f;
      sa[814] = 0.11478894f;
      sa[815] = -0.19875205f;
      sa[816] = -0.14338253f;
      sa[817] = -0.12775284f;
      sa[818] = -0.035094965f;
      sa[819] = -0.056097932f;
      sa[820] = -0.16436638f;
      sa[821] = -0.118176445f;
      sa[822] = -0.115389965f;
      sa[823] = 0.1550236f;
      sa[824] = 0.10513304f;
      sa[825] = 0.31896433f;
      sa[826] = -0.30328488f;
      sa[827] = -0.30761382f;
      sa[828] = 0.084119484f;
      sa[829] = -0.076004624f;
      sa[830] = 0.11482099f;
      sa[831] = 0.23278941f;
      sa[832] = 0.11393901f;
      sa[833] = 0.0911507f;
      sa[834] = 0.18025503f;
      sa[835] = -0.1351446f;
      sa[836] = 0.19382153f;
      sa[837] = -0.17658971f;
      sa[838] = 0.08355539f;
      sa[839] = -0.19916624f;
      sa[840] = 0.2373607f;
      sa[841] = 0.16213846f;
      sa[842] = 0.22002769f;
      sa[843] = 0.057335965f;
      sa[844] = 0.066582575f;
      sa[845] = 0.1625236f;
      sa[846] = -0.2330586f;
      sa[847] = -0.08583877f;
      sa[848] = 0.20115091f;
      sa[849] = 0.20499778f;
      sa[850] = -0.029561875f;
      sa[851] = 0.048147522f;
      sa[852] = 0.25165966f;
      sa[853] = 0.13114613f;
      sa[854] = 0.27219638f;
      sa[855] = 0.10051167f;
      sa[856] = 0.11267842f;
      sa[857] = -0.14668556f;
      sa[858] = 0.1696599f;
      sa[859] = 0.09013953f;
      sa[860] = 0.32043684f;
      sa[861] = -0.18567763f;
      sa[862] = -0.16705899f;
      sa[863] = -0.022327652f;
      sa[864] = -0.14316511f;
      sa[865] = 0.24134552f;
      sa[866] = -0.11552828f;
      sa[867] = -0.06615211f;
      sa[868] = -0.1445491f;
      sa[869] = 0.21226929f;
      sa[870] = -0.007937804f;
      sa[871] = 0.19701046f;
      sa[872] = 0.26090696f;
      sa[873] = -0.026014155f;
      sa[874] = 0.054782495f;
      sa[875] = -0.25457713f;
      sa[876] = -0.2563062f;
      sa[877] = -0.23546635f;
      sa[878] = 0.006211164f;
      sa[879] = 0.20522481f;
      sa[880] = -0.10868076f;
      sa[881] = -0.082441f;
      sa[882] = 0.101275206f;
      sa[883] = 0.18700197f;
      sa[884] = -0.119908504f;
      sa[885] = -0.09217616f;
      sa[886] = 0.1182498f;
      sa[887] = -0.0066663465f;
      sa[888] = -0.09024869f;
      sa[889] = 0.064014606f;
      sa[890] = -0.358573f;
      sa[891] = 0.41840366f;
      sa[892] = 0.15731117f;
      sa[893] = 0.26302302f;
      sa[894] = 0.029037893f;
      sa[895] = 0.22871469f;
      sa[896] = -0.21553473f;
      sa[897] = 0.24288106f;
      sa[898] = -0.025416488f;
      sa[899] = 0.20672671f;
      sa[900] = -0.14600079f;
      sa[901] = 0.048699144f;
      sa[902] = -0.22577426f;
      sa[903] = -0.09407831f;
      sa[904] = 0.1185707f;
      sa[905] = 0.08091293f;
      sa[906] = -0.3001021f;
      sa[907] = -0.35940215f;
      sa[908] = -0.24558038f;
      sa[909] = 0.007485826f;
      sa[910] = 0.008870307f;
      sa[911] = -0.14274372f;
      sa[912] = -0.08194341f;
      sa[913] = -0.048729878f;
      sa[914] = -0.23801845f;
      sa[915] = -0.08632497f;
      sa[916] = 0.09550031f;
      sa[917] = -0.11977175f;
      sa[918] = 0.26852524f;
      sa[919] = 0.005420087f;
      sa[920] = 0.099811465f;
      sa[921] = -0.1074739f;
      sa[922] = -0.15988617f;
      sa[923] = -0.16725856f;
      sa[924] = -0.074729115f;
      sa[925] = -0.22813688f;
      sa[926] = 0.13221933f;
      sa[927] = -0.24973226f;
      sa[928] = 0.16373837f;
      sa[929] = 0.06359309f;
      sa[930] = 0.039789923f;
      sa[931] = -0.09112284f;
      sa[932] = 0.22151738f;
      sa[933] = -0.10412354f;
      sa[934] = 0.24341106f;
      sa[935] = -0.13744499f;
      sa[936] = 0.11198844f;
      sa[937] = 0.24301732f;
      sa[938] = -0.10585681f;
      sa[939] = -0.057911374f;
      sa[940] = -0.05630249f;
      sa[941] = -0.31234214f;
      sa[942] = -0.23543535f;
      sa[943] = -0.14268935f;
      sa[944] = -0.18463828f;
      sa[945] = 0.11145583f;
      sa[946] = 0.07063318f;
      sa[947] = 0.26697916f;
      sa[948] = 0.05174486f;
      sa[949] = -0.20751218f;
      sa[950] = 0.06431779f;
      sa[951] = -0.06791814f;
      sa[952] = -0.16935241f;
      sa[953] = -0.12199394f;
      sa[954] = -0.29551992f;
      sa[955] = 0.059422694f;
      sa[956] = -0.023345802f;
      sa[957] = 0.03975878f;
      sa[958] = 0.09697619f;
      sa[959] = -0.1373452f;
      sa[960] = 0.30335355f;
      sa[961] = -0.14721115f;
      sa[962] = -0.0825536f;
      sa[963] = -0.016575597f;
      sa[964] = -0.18016008f;
      sa[965] = 0.23973937f;
      sa[966] = -0.10553283f;
      sa[967] = -0.2599793f;
      sa[968] = 0.12706573f;
      sa[969] = 0.13136084f;
      sa[970] = 0.26507482f;
      sa[971] = -0.0058843996f;
      sa[972] = -0.23885614f;
      sa[973] = -0.24128659f;
      sa[974] = -0.34074312f;
      sa[975] = -0.20595811f;
      sa[976] = -0.13406597f;
      sa[977] = 0.0041814516f;
      sa[978] = -0.13247412f;
      sa[979] = 0.067427196f;
      sa[980] = 0.05757385f;
      sa[981] = -0.24612774f;
      sa[982] = 0.08372535f;
      sa[983] = -0.07180265f;
      sa[984] = -0.26624244f;
      sa[985] = 0.056950983f;
      sa[986] = -0.25112376f;
      sa[987] = 0.012554999f;
      sa[988] = 0.13378608f;
      sa[989] = 0.17424366f;
      sa[990] = 0.36261648f;
      sa[991] = -0.122943304f;
      sa[992] = -0.22447743f;
      sa[993] = -0.09275536f;
      sa[994] = -0.1919211f;
      sa[995] = -0.32091734f;
      sa[996] = 0.21518196f;
      sa[997] = 0.13980848f;
      sa[998] = 0.17708318f;
      sa[999] = 0.13676907f;
      sa[1000] = 0.00983417f;
      sa[1001] = 0.20069246f;
      sa[1002] = 0.23543228f;
      sa[1003] = -0.13144593f;
      sa[1004] = 0.2098735f;
      sa[1005] = -0.2645901f;
      sa[1006] = -0.09177444f;
      sa[1007] = 0.046780933f;
      sa[1008] = 0.25132105f;
      sa[1009] = 0.07218906f;
      sa[1010] = -0.053216163f;
      sa[1011] = 0.28154376f;
      sa[1012] = -0.051563665f;
      sa[1013] = 0.1925385f;
      sa[1014] = 0.2766641f;
      sa[1015] = -0.25039068f;
      sa[1016] = 0.28315127f;
      sa[1017] = 0.095938414f;
      sa[1018] = -0.037513323f;
      sa[1019] = 0.10656458f;
      sa[1020] = -0.2065962f;
      sa[1021] = 0.13150686f;
      sa[1022] = 0.24630417f;
      sa[1023] = 0.12925637f;
      sa[1024] = -0.024896191f;
      sa[1025] = 0.13562715f;
      sa[1026] = 0.14161938f;
      sa[1027] = 0.1619495f;
      sa[1028] = 0.31679687f;
      sa[1029] = 0.0030181124f;
      sa[1030] = -0.14671403f;
      sa[1031] = -0.017184786f;
      sa[1032] = -0.26648477f;
      sa[1033] = 0.023168093f;
      sa[1034] = -0.039656736f;
      sa[1035] = -0.19313657f;
      sa[1036] = 0.28773f;
      sa[1037] = 0.0647118f;
      sa[1038] = -0.16097051f;
      sa[1039] = 0.30370378f;
      sa[1040] = -0.017617393f;
      sa[1041] = 0.1241676f;
      sa[1042] = -0.23469715f;
      sa[1043] = -0.06800678f;
      sa[1044] = 0.19667596f;
      sa[1045] = 0.22829463f;
      sa[1046] = -0.21755491f;
      sa[1047] = -0.18735662f;
      sa[1048] = 0.12121808f;
      sa[1049] = -0.15129954f;
      sa[1050] = -0.0021415015f;
      sa[1051] = -0.28502768f;
      sa[1052] = 0.14929643f;
      sa[1053] = 0.2972236f;
      sa[1054] = 0.20638761f;
      sa[1055] = 0.01419072f;
      sa[1056] = 0.23606798f;
      sa[1057] = -0.23123205f;
      sa[1058] = 0.18263027f;
      sa[1059] = -0.25363126f;
      sa[1060] = -0.3058362f;
      sa[1061] = 0.00977574f;
      sa[1062] = 0.26766396f;
      sa[1063] = -0.007961131f;
      sa[1064] = 0.09840443f;
      sa[1065] = -0.02815682f;
      sa[1066] = 0.15811189f;
      sa[1067] = -0.36007476f;
      sa[1068] = -0.28875715f;
      sa[1069] = 0.15024123f;
      sa[1070] = 0.13461839f;
      sa[1071] = 0.11958095f;
      sa[1072] = -0.2471914f;
      sa[1073] = 0.10483573f;
      sa[1074] = 0.082317084f;
      sa[1075] = -0.21318863f;
      sa[1076] = -0.141598f;
      sa[1077] = 0.029126478f;
      sa[1078] = 0.053669095f;
      sa[1079] = 0.123203285f;
      sa[1080] = 0.20286176f;
      sa[1081] = 0.13274994f;
      sa[1082] = -0.2883517f;
      sa[1083] = -0.10593938f;
      sa[1084] = 0.22659625f;
      sa[1085] = -0.2082577f;
      sa[1086] = -0.24988796f;
      sa[1087] = -0.19783026f;
      sa[1088] = -0.17711858f;
      sa[1089] = 0.048510082f;
      sa[1090] = -0.27034765f;
      sa[1091] = 0.10451157f;
      sa[1092] = -0.23417856f;
      sa[1093] = -0.25097626f;
      sa[1094] = 0.01935319f;
      sa[1095] = -0.17498226f;
      sa[1096] = 0.06403118f;
      sa[1097] = -0.13087021f;
      sa[1098] = 0.009334835f;
      sa[1099] = -0.05223215f;
      sa[1100] = -0.13650613f;
      sa[1101] = 0.114271924f;
      sa[1102] = -0.13275309f;
      sa[1103] = 0.25300893f;
      sa[1104] = -0.24507792f;
      sa[1105] = -0.104584225f;
      sa[1106] = -0.08373751f;
      sa[1107] = 0.18861468f;
      sa[1108] = -0.20127618f;
      sa[1109] = 0.21991476f;
      sa[1110] = 0.1635661f;
      sa[1111] = -0.23800181f;
      sa[1112] = 0.22834903f;
      sa[1113] = 0.26898184f;
      sa[1114] = -0.06341311f;
      sa[1115] = 0.15173838f;
      sa[1116] = 0.025392313f;
      sa[1117] = -0.17241369f;
      sa[1118] = -0.24652638f;
      sa[1119] = -0.058017366f;
      sa[1120] = 0.20333366f;
      sa[1121] = 0.06310154f;
      sa[1122] = 0.22850199f;
      sa[1123] = 0.26692528f;
      sa[1124] = 0.040191833f;
      sa[1125] = -0.036517985f;
      sa[1126] = 0.20831974f;
      sa[1127] = 0.1771038f;
      sa[1128] = 0.0034903262f;
      sa[1129] = -0.12915315f;
      sa[1130] = 0.1724163f;
      sa[1131] = 0.28205988f;
      sa[1132] = -0.19424163f;
      sa[1133] = -0.14999375f;
      sa[1134] = 0.256515f;
      sa[1135] = -0.4246403f;
      sa[1136] = -0.01460577f;
      sa[1137] = 0.24223016f;
      sa[1138] = -0.07336885f;
      sa[1139] = 0.13433397f;
      sa[1140] = 0.17894897f;
      sa[1141] = -0.3056516f;
      sa[1142] = 0.10561798f;
      sa[1143] = 0.047723625f;
      sa[1144] = -0.2534575f;
      sa[1145] = 0.19023368f;
      sa[1146] = 0.22663096f;
      sa[1147] = -0.009935195f;
      sa[1148] = -8.336978E-4f;
      sa[1149] = 0.0059267706f;
      sa[1150] = -0.22906372f;
      sa[1151] = -0.21558902f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2494677f;
      sa[1] = -0.14873596f;
      sa[2] = -0.5481887f;
      sa[3] = -0.95594865f;
      sa[4] = 0.040629666f;
      sa[5] = 0.22622234f;
      sa[6] = 1.243213f;
      sa[7] = -0.71957177f;
      sa[8] = -0.95548916f;
      sa[9] = 0.70546466f;
      sa[10] = -0.1579624f;
      sa[11] = 0.41418388f;
      sa[12] = 0.1317141f;
      sa[13] = -0.014236927f;
      sa[14] = -1.3736129f;
      sa[15] = 1.1611499f;
      sa[16] = 1.5495255f;
      sa[17] = -0.44546655f;
      sa[18] = 0.036751933f;
      sa[19] = -0.455955f;
      sa[20] = 1.1806662f;
      sa[21] = 0.061610434f;
      sa[22] = -0.9930971f;
      sa[23] = 0.7757254f;
      sa[24] = -1.3871267f;
      sa[25] = 0.46552232f;
      sa[26] = -0.24065526f;
      sa[27] = 1.5034902f;
      sa[28] = -1.3936297f;
      sa[29] = -0.5151716f;
      sa[30] = 0.31442654f;
      sa[31] = -0.63454914f;
      sa[32] = -1.2116712f;
      sa[33] = -1.4696052f;
      sa[34] = -0.013054128f;
      sa[35] = 1.3998559f;
      sa[36] = -0.27117276f;
      sa[37] = -0.051533084f;
      sa[38] = 0.21469596f;
      sa[39] = 0.7191185f;
      sa[40] = -0.735782f;
      sa[41] = -1.3361381f;
      sa[42] = -1.0415723f;
      sa[43] = -1.5159404f;
      sa[44] = 0.046004236f;
      sa[45] = -1.3521898f;
      sa[46] = 0.99177045f;
      sa[47] = 1.2195387f;
      sa[48] = -1.3114384f;
      sa[49] = -1.1671563f;
      sa[50] = 0.44934702f;
      sa[51] = -0.29617104f;
      sa[52] = 0.87424207f;
      sa[53] = 0.9118986f;
      sa[54] = -0.19830188f;
      sa[55] = 1.1412752f;
      sa[56] = -0.988312f;
      sa[57] = -1.1222917f;
      sa[58] = 0.098023035f;
      sa[59] = -0.22272922f;
      sa[60] = 1.4046028f;
      sa[61] = -0.5637664f;
      sa[62] = -0.3083588f;
      sa[63] = 0.71078557f;
      sa[64] = 1.4854861f;
      sa[65] = -0.6165531f;
      sa[66] = 0.69873977f;
      sa[67] = 1.621701f;
      sa[68] = 0.75369936f;
      sa[69] = -1.049669f;
      sa[70] = -1.6400305f;
      sa[71] = -0.40705484f;
      sa[72] = -1.30895f;
      sa[73] = 1.1434451f;
      sa[74] = 1.3233982f;
      sa[75] = -0.10434785f;
      sa[76] = 0.94878435f;
      sa[77] = 0.5401015f;
      sa[78] = -1.2402672f;
      sa[79] = 0.95670956f;
      sa[80] = -0.80105525f;
      sa[81] = 0.29067826f;
      sa[82] = 0.7778824f;
      sa[83] = -0.6576101f;
      sa[84] = -1.6183655f;
      sa[85] = -1.3165246f;
      sa[86] = 0.2234059f;
      sa[87] = 1.243056f;
      sa[88] = -1.5578518f;
      sa[89] = -0.50636244f;
      sa[90] = -1.0277216f;
      sa[91] = 1.5296551f;
      sa[92] = -0.3150004f;
      sa[93] = 0.24412492f;
      sa[94] = -1.554964f;
      sa[95] = -0.27751684f;
      sa[96] = -1.1659553f;
      sa[97] = 0.16216813f;
      sa[98] = -0.12969626f;
      sa[99] = 0.28405425f;
      sa[100] = -1.3583649f;
      sa[101] = -0.44565764f;
      sa[102] = 1.269065f;
      sa[103] = 0.12916082f;
      sa[104] = -0.1700527f;
      sa[105] = -0.60324f;
      sa[106] = 1.4569017f;
      sa[107] = 1.1966534f;
      sa[108] = 0.68011445f;
      sa[109] = 0.08705092f;
      sa[110] = 0.72563344f;
      sa[111] = -0.80228233f;
      sa[112] = -1.1527529f;
      sa[113] = 0.19524023f;
      sa[114] = 0.1642447f;
      sa[115] = -0.335461f;
      sa[116] = 1.114467f;
      sa[117] = -0.006715969f;
      sa[118] = -1.3694365f;
      sa[119] = -0.83621985f;
      sa[120] = -0.34660065f;
      sa[121] = 1.0780394f;
      sa[122] = -0.061906006f;
      sa[123] = 0.3133043f;
      sa[124] = -0.76607025f;
      sa[125] = 0.7835339f;
      sa[126] = -0.9694459f;
      sa[127] = 0.43380907f;
      sa[128] = -0.8534712f;
      sa[129] = 0.78709286f;
      sa[130] = -0.36711714f;
      sa[131] = 0.89947957f;
      sa[132] = 0.49965835f;
      sa[133] = 0.65045667f;
      sa[134] = 0.5910435f;
      sa[135] = -1.1173245f;
      sa[136] = 0.5687878f;
      sa[137] = -0.6440623f;
      sa[138] = -0.24991663f;
      sa[139] = 1.2006814f;
      sa[140] = -0.4080924f;
      sa[141] = 0.04159914f;
      sa[142] = 0.33871433f;
      sa[143] = -0.77277607f;
      sa[144] = 1.0187992f;
      sa[145] = -0.7813558f;
      sa[146] = 0.04711461f;
      sa[147] = -0.30254763f;
      sa[148] = -0.8938324f;
      sa[149] = 1.0697712f;
      sa[150] = -1.1175315f;
      sa[151] = -1.5339273f;
      sa[152] = 1.6430229f;
      sa[153] = -0.6383125f;
      sa[154] = 1.3147289f;
      sa[155] = -1.5025736f;
      sa[156] = -1.4508498f;
      sa[157] = -1.066409f;
      sa[158] = -0.20190725f;
      sa[159] = -0.6569195f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


