/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:49:59.641+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_01

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_01 > h2o_nn_32x6_ReLU_01.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_01.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_01", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_01 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_01_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_01_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_01_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_01.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_01_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_01() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(8936761579417547728L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_01_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_01_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_01_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_01_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_01_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_01_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_01_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_01_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_01_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3827147882541984;
      sa[1] = 0.4538189836842527;
      sa[2] = 0.5356053367315249;
      sa[3] = 0.509659357721246;
      sa[4] = 0.5034664382520279;
      sa[5] = 0.544238417246527;
      sa[6] = 0.49833539281921974;
      sa[7] = 0.6144450759996622;
      sa[8] = 0.49386869366979;
      sa[9] = 0.5028690067503403;
      sa[10] = 0.4324451132378891;
      sa[11] = 0.5324499453136676;
      sa[12] = 0.4631755069711115;
      sa[13] = 0.4813226975597672;
      sa[14] = 0.6135455214109963;
      sa[15] = 0.4401376973164525;
      sa[16] = 0.4931405160165629;
      sa[17] = 0.5274016568442593;
      sa[18] = 0.49963870264425025;
      sa[19] = 0.5240246966336064;
      sa[20] = 0.5223760806285969;
      sa[21] = 0.46945199293775125;
      sa[22] = 0.4954491885032168;
      sa[23] = 0.5115825776236885;
      sa[24] = 0.5012217746631984;
      sa[25] = 0.4662579652180498;
      sa[26] = 0.48136641807407915;
      sa[27] = 0.4852180879563104;
      sa[28] = 0.5329664425083183;
      sa[29] = 0.47911303659475946;
      sa[30] = 0.42402861462364555;
      sa[31] = 0.5180589516138552;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_01_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_01_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -3.044780246179178E-4;
      sa[1] = 0.006069933903085777;
      sa[2] = -0.01933978551159744;
      sa[3] = -0.009464929170140354;
      sa[4] = -0.017582611339054595;
    }
  }
}
class h2o_nn_32x6_ReLU_01_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_01_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_01_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.045785125f;
      sa[1] = 0.24361287f;
      sa[2] = 0.15024386f;
      sa[3] = 0.1509799f;
      sa[4] = -0.1896012f;
      sa[5] = -0.19727446f;
      sa[6] = -0.068453155f;
      sa[7] = 0.20619044f;
      sa[8] = 0.10638925f;
      sa[9] = -0.17420445f;
      sa[10] = -0.17836311f;
      sa[11] = -0.17145163f;
      sa[12] = 0.045935918f;
      sa[13] = -0.27694473f;
      sa[14] = -0.19085774f;
      sa[15] = -0.044528197f;
      sa[16] = 0.104770385f;
      sa[17] = 0.11321618f;
      sa[18] = -0.2072732f;
      sa[19] = 0.14315668f;
      sa[20] = 0.1850382f;
      sa[21] = -0.3252816f;
      sa[22] = 0.19533135f;
      sa[23] = -0.21947221f;
      sa[24] = 0.23417829f;
      sa[25] = 0.13952363f;
      sa[26] = -0.26322636f;
      sa[27] = 0.2556524f;
      sa[28] = 0.17445973f;
      sa[29] = -0.3038059f;
      sa[30] = -0.20018466f;
      sa[31] = 0.102828085f;
      sa[32] = 0.15618247f;
      sa[33] = -0.25269032f;
      sa[34] = 0.09431022f;
      sa[35] = -0.08716399f;
      sa[36] = 0.04581953f;
      sa[37] = 0.24955963f;
      sa[38] = -0.033286836f;
      sa[39] = 0.049524415f;
      sa[40] = 0.01240814f;
      sa[41] = -0.05874981f;
      sa[42] = -0.10059273f;
      sa[43] = 0.058128703f;
      sa[44] = 0.20529276f;
      sa[45] = -0.19917396f;
      sa[46] = 0.099704005f;
      sa[47] = -0.040654674f;
      sa[48] = 0.22068602f;
      sa[49] = 0.2653022f;
      sa[50] = 0.22547345f;
      sa[51] = -0.2745137f;
      sa[52] = -0.07020716f;
      sa[53] = 0.23861392f;
      sa[54] = 0.19335179f;
      sa[55] = 0.10497127f;
      sa[56] = -0.20322856f;
      sa[57] = -0.33158246f;
      sa[58] = 0.25846273f;
      sa[59] = -0.22443217f;
      sa[60] = -0.21844192f;
      sa[61] = 0.22358564f;
      sa[62] = 0.10034737f;
      sa[63] = 0.069825396f;
      sa[64] = 0.08344602f;
      sa[65] = 0.04997406f;
      sa[66] = -2.7036326E-4f;
      sa[67] = 0.06774602f;
      sa[68] = -0.17394702f;
      sa[69] = 0.008109618f;
      sa[70] = -0.09531137f;
      sa[71] = 0.3463481f;
      sa[72] = -0.1582898f;
      sa[73] = 0.18436769f;
      sa[74] = -0.18352173f;
      sa[75] = 0.05457306f;
      sa[76] = -0.1616293f;
      sa[77] = -0.036613762f;
      sa[78] = -0.040700365f;
      sa[79] = 0.1291555f;
      sa[80] = -0.23958871f;
      sa[81] = -0.13205157f;
      sa[82] = -0.05317988f;
      sa[83] = 0.079844594f;
      sa[84] = -0.01057513f;
      sa[85] = -0.15524139f;
      sa[86] = 0.15097404f;
      sa[87] = 0.23217481f;
      sa[88] = 0.20969166f;
      sa[89] = 0.053064242f;
      sa[90] = -0.10371067f;
      sa[91] = 0.15043315f;
      sa[92] = 0.112197034f;
      sa[93] = -0.17699425f;
      sa[94] = -0.15284485f;
      sa[95] = -0.21153067f;
      sa[96] = 0.11174702f;
      sa[97] = 0.021702472f;
      sa[98] = 0.21362057f;
      sa[99] = -0.06796644f;
      sa[100] = -0.033168953f;
      sa[101] = -0.15582183f;
      sa[102] = -0.22395349f;
      sa[103] = -0.055639595f;
      sa[104] = -0.040488563f;
      sa[105] = -0.15547048f;
      sa[106] = -0.18549608f;
      sa[107] = 0.13963528f;
      sa[108] = 0.11590361f;
      sa[109] = -0.20094576f;
      sa[110] = -0.14111419f;
      sa[111] = 0.14776231f;
      sa[112] = 0.12927975f;
      sa[113] = 0.049172617f;
      sa[114] = -0.1358096f;
      sa[115] = -0.068980254f;
      sa[116] = -0.2738812f;
      sa[117] = 0.0051679197f;
      sa[118] = -0.27036667f;
      sa[119] = -0.2251263f;
      sa[120] = 0.20844966f;
      sa[121] = 0.2255349f;
      sa[122] = 0.2905873f;
      sa[123] = 0.24005024f;
      sa[124] = 0.2730338f;
      sa[125] = 0.28604388f;
      sa[126] = -0.25544578f;
      sa[127] = -0.1443599f;
      sa[128] = 0.06207688f;
      sa[129] = 0.14293659f;
      sa[130] = -0.11774361f;
      sa[131] = 0.30049354f;
      sa[132] = 0.18401587f;
      sa[133] = -0.30249256f;
      sa[134] = 0.09132915f;
      sa[135] = -0.17059617f;
      sa[136] = -0.25916287f;
      sa[137] = -0.023574272f;
      sa[138] = 0.119581126f;
      sa[139] = -0.07446659f;
      sa[140] = -0.10156989f;
      sa[141] = -0.23772705f;
      sa[142] = 0.23370019f;
      sa[143] = -0.20393434f;
      sa[144] = 0.2374867f;
      sa[145] = -0.13745946f;
      sa[146] = -0.2566879f;
      sa[147] = 0.2001279f;
      sa[148] = 0.17759773f;
      sa[149] = 0.1807253f;
      sa[150] = 0.28163853f;
      sa[151] = -0.2356809f;
      sa[152] = 0.017989108f;
      sa[153] = 0.27389416f;
      sa[154] = 0.23062167f;
      sa[155] = -0.17104422f;
      sa[156] = 0.12747563f;
      sa[157] = -0.18530671f;
      sa[158] = 0.07539843f;
      sa[159] = 0.078837685f;
      sa[160] = 0.062184483f;
      sa[161] = 0.179502f;
      sa[162] = -0.15493459f;
      sa[163] = -0.11020326f;
      sa[164] = 0.25324696f;
      sa[165] = 0.0043763723f;
      sa[166] = -0.049380828f;
      sa[167] = -0.07565455f;
      sa[168] = 0.14728208f;
      sa[169] = 0.27087468f;
      sa[170] = 0.021889424f;
      sa[171] = -0.07517223f;
      sa[172] = -0.036154997f;
      sa[173] = -0.11835436f;
      sa[174] = -0.011655827f;
      sa[175] = -0.22129914f;
      sa[176] = -0.012885659f;
      sa[177] = -0.023992784f;
      sa[178] = -0.09967626f;
      sa[179] = 0.058450658f;
      sa[180] = -0.015817173f;
      sa[181] = -0.24673055f;
      sa[182] = -0.1049748f;
      sa[183] = 0.09636467f;
      sa[184] = 0.26494855f;
      sa[185] = 0.15392499f;
      sa[186] = -0.29262757f;
      sa[187] = 0.098219015f;
      sa[188] = 0.018198311f;
      sa[189] = 0.25119033f;
      sa[190] = 0.08755633f;
      sa[191] = -0.041644722f;
      sa[192] = -0.09695815f;
      sa[193] = 0.22167224f;
      sa[194] = 0.09162211f;
      sa[195] = 0.28983024f;
      sa[196] = 0.2604928f;
      sa[197] = -0.017261107f;
      sa[198] = 0.093311034f;
      sa[199] = -0.09027594f;
      sa[200] = 0.06495537f;
      sa[201] = -0.24508086f;
      sa[202] = 0.14958282f;
      sa[203] = 0.003967857f;
      sa[204] = -0.15277891f;
      sa[205] = 0.24554072f;
      sa[206] = 0.20073396f;
      sa[207] = 0.1277516f;
      sa[208] = -0.22459011f;
      sa[209] = -0.06718563f;
      sa[210] = -0.26948574f;
      sa[211] = -0.2284834f;
      sa[212] = 0.29394263f;
      sa[213] = -0.25726908f;
      sa[214] = -0.1363588f;
      sa[215] = 0.017880935f;
      sa[216] = 0.1576378f;
      sa[217] = 0.15600051f;
      sa[218] = -0.18100142f;
      sa[219] = 0.22957994f;
      sa[220] = -0.22031613f;
      sa[221] = 0.025526008f;
      sa[222] = 0.20949443f;
      sa[223] = 0.09559884f;
      sa[224] = 0.17058322f;
      sa[225] = 0.29826063f;
      sa[226] = -0.16292603f;
      sa[227] = 0.35418135f;
      sa[228] = 0.10871325f;
      sa[229] = 0.073839895f;
      sa[230] = 0.2538333f;
      sa[231] = -0.22433078f;
      sa[232] = -0.2520815f;
      sa[233] = 0.079973206f;
      sa[234] = 0.1412253f;
      sa[235] = -0.3006867f;
      sa[236] = -0.031947523f;
      sa[237] = -0.21376145f;
      sa[238] = -0.2046941f;
      sa[239] = 0.1355739f;
      sa[240] = -0.0025932305f;
      sa[241] = -0.13457377f;
      sa[242] = -0.07729138f;
      sa[243] = -0.2338818f;
      sa[244] = -0.20316133f;
      sa[245] = -0.124699764f;
      sa[246] = -0.26717758f;
      sa[247] = -0.060853966f;
      sa[248] = 0.27950454f;
      sa[249] = 0.28525913f;
      sa[250] = -0.2370632f;
      sa[251] = -0.14912213f;
      sa[252] = -0.24319148f;
      sa[253] = -0.28600478f;
      sa[254] = -0.25370094f;
      sa[255] = 0.2227827f;
      sa[256] = -0.15350533f;
      sa[257] = 0.27643195f;
      sa[258] = -0.22899254f;
      sa[259] = -0.09680384f;
      sa[260] = -0.1887174f;
      sa[261] = -0.124326974f;
      sa[262] = -0.17206548f;
      sa[263] = 0.2905437f;
      sa[264] = -0.12400624f;
      sa[265] = 0.0749906f;
      sa[266] = -0.24645117f;
      sa[267] = -0.18603589f;
      sa[268] = 0.10196015f;
      sa[269] = -0.1317595f;
      sa[270] = -0.02215957f;
      sa[271] = 0.14032839f;
      sa[272] = -0.05335514f;
      sa[273] = -0.090066284f;
      sa[274] = 0.13005692f;
      sa[275] = 0.043394133f;
      sa[276] = 0.069670394f;
      sa[277] = -0.24078032f;
      sa[278] = -0.109101824f;
      sa[279] = 0.18473668f;
      sa[280] = -0.1183662f;
      sa[281] = 0.3164267f;
      sa[282] = -0.060092784f;
      sa[283] = 0.014944f;
      sa[284] = 0.083846755f;
      sa[285] = -0.08268122f;
      sa[286] = 0.22571664f;
      sa[287] = 0.10758487f;
      sa[288] = -0.20190479f;
      sa[289] = -0.13470379f;
      sa[290] = -0.03601999f;
      sa[291] = -0.021051375f;
      sa[292] = 0.10716037f;
      sa[293] = -0.07827913f;
      sa[294] = 0.0991433f;
      sa[295] = 0.12519386f;
      sa[296] = 0.20069662f;
      sa[297] = 0.23317094f;
      sa[298] = 0.009395036f;
      sa[299] = -0.079071596f;
      sa[300] = 0.0068464614f;
      sa[301] = -0.04019276f;
      sa[302] = 0.18690486f;
      sa[303] = 0.042608034f;
      sa[304] = -0.1672271f;
      sa[305] = 0.034625463f;
      sa[306] = 0.18741639f;
      sa[307] = -0.070726514f;
      sa[308] = 0.061240245f;
      sa[309] = 0.10404712f;
      sa[310] = 0.27862632f;
      sa[311] = 0.28198653f;
      sa[312] = -0.12129716f;
      sa[313] = -0.09756493f;
      sa[314] = -0.16653347f;
      sa[315] = 0.045320448f;
      sa[316] = -0.04743138f;
      sa[317] = -0.12872986f;
      sa[318] = 0.07709928f;
      sa[319] = 0.23850483f;
      sa[320] = -0.091151096f;
      sa[321] = 0.04096709f;
      sa[322] = 0.26497057f;
      sa[323] = -0.079272665f;
      sa[324] = -0.0077029434f;
      sa[325] = 0.25375512f;
      sa[326] = -0.27371678f;
      sa[327] = -0.016013443f;
      sa[328] = -0.033953927f;
      sa[329] = 0.24340256f;
      sa[330] = -0.15852213f;
      sa[331] = 0.008320758f;
      sa[332] = -0.25136635f;
      sa[333] = 0.08686256f;
      sa[334] = -0.098718874f;
      sa[335] = 0.23458925f;
      sa[336] = -0.15963283f;
      sa[337] = -0.14997704f;
      sa[338] = 0.2536866f;
      sa[339] = -0.21818426f;
      sa[340] = -0.33250564f;
      sa[341] = -0.35438147f;
      sa[342] = 0.16132396f;
      sa[343] = -0.1327628f;
      sa[344] = -0.16742086f;
      sa[345] = 0.21328509f;
      sa[346] = 0.20774709f;
      sa[347] = -0.18952885f;
      sa[348] = 0.24031766f;
      sa[349] = -0.28387848f;
      sa[350] = -0.2324144f;
      sa[351] = 0.07349498f;
      sa[352] = 0.18319474f;
      sa[353] = -0.020755507f;
      sa[354] = 0.09158407f;
      sa[355] = 0.098349586f;
      sa[356] = -0.17401667f;
      sa[357] = 0.2434283f;
      sa[358] = -0.31967464f;
      sa[359] = -0.002819942f;
      sa[360] = 0.04507616f;
      sa[361] = -0.049773235f;
      sa[362] = -0.13446157f;
      sa[363] = 0.13027062f;
      sa[364] = -0.114157535f;
      sa[365] = -0.18756911f;
      sa[366] = 0.024323711f;
      sa[367] = -0.2797141f;
      sa[368] = -0.20505685f;
      sa[369] = 0.24809049f;
      sa[370] = -0.20446539f;
      sa[371] = 0.08489888f;
      sa[372] = -0.024033923f;
      sa[373] = 0.2860806f;
      sa[374] = -0.11311997f;
      sa[375] = -0.2799875f;
      sa[376] = -0.27590123f;
      sa[377] = -0.21310581f;
      sa[378] = 0.29437608f;
      sa[379] = 0.12937973f;
      sa[380] = -0.1533272f;
      sa[381] = -0.12976202f;
      sa[382] = -0.045555864f;
      sa[383] = -0.14578597f;
      sa[384] = -0.10883789f;
      sa[385] = 0.11178675f;
      sa[386] = -0.23335841f;
      sa[387] = -0.132001f;
      sa[388] = 0.04303382f;
      sa[389] = -0.039112918f;
      sa[390] = -0.009899214f;
      sa[391] = -0.13526505f;
      sa[392] = 0.17336878f;
      sa[393] = 0.15150727f;
      sa[394] = -0.0027594292f;
      sa[395] = 0.30645502f;
      sa[396] = 0.24516915f;
      sa[397] = -0.28090844f;
      sa[398] = 0.16018991f;
      sa[399] = -0.013973633f;
      sa[400] = 0.20553896f;
      sa[401] = 0.27996776f;
      sa[402] = -0.070716605f;
      sa[403] = 0.1225421f;
      sa[404] = 0.19142596f;
      sa[405] = -0.20991032f;
      sa[406] = -0.023803676f;
      sa[407] = 0.1102575f;
      sa[408] = -0.1873833f;
      sa[409] = -0.20070547f;
      sa[410] = -0.064023465f;
      sa[411] = 0.18251252f;
      sa[412] = -0.12961705f;
      sa[413] = 0.10339193f;
      sa[414] = 0.135368f;
      sa[415] = 0.32155213f;
      sa[416] = -0.18622154f;
      sa[417] = 0.012884086f;
      sa[418] = 0.024363043f;
      sa[419] = 0.25047976f;
      sa[420] = 0.22865579f;
      sa[421] = 0.2839759f;
      sa[422] = 0.22162539f;
      sa[423] = 0.0358832f;
      sa[424] = 0.08383617f;
      sa[425] = -0.078911304f;
      sa[426] = -0.2608761f;
      sa[427] = 0.16600594f;
      sa[428] = -0.09910907f;
      sa[429] = -0.20838426f;
      sa[430] = 0.13894513f;
      sa[431] = -0.007570032f;
      sa[432] = -0.066393726f;
      sa[433] = 0.098388106f;
      sa[434] = 0.2306093f;
      sa[435] = -0.021704357f;
      sa[436] = -0.23733559f;
      sa[437] = -0.22351705f;
      sa[438] = 0.011488863f;
      sa[439] = -0.02175616f;
      sa[440] = 0.26477036f;
      sa[441] = -0.3531622f;
      sa[442] = 0.03884477f;
      sa[443] = 0.05310379f;
      sa[444] = -0.23411795f;
      sa[445] = 0.05757282f;
      sa[446] = 0.20877829f;
      sa[447] = 0.04174044f;
      sa[448] = 0.17028794f;
      sa[449] = 0.18100229f;
      sa[450] = -0.08374049f;
      sa[451] = 0.121092536f;
      sa[452] = 0.11579018f;
      sa[453] = -0.07711942f;
      sa[454] = -0.17543809f;
      sa[455] = -0.08467577f;
      sa[456] = -0.057895426f;
      sa[457] = 0.07447922f;
      sa[458] = -0.19354218f;
      sa[459] = 0.30164602f;
      sa[460] = 0.1821372f;
      sa[461] = 0.2597973f;
      sa[462] = 0.051794484f;
      sa[463] = 0.18904705f;
      sa[464] = -0.36981624f;
      sa[465] = 0.23713297f;
      sa[466] = 0.038487565f;
      sa[467] = 0.14894508f;
      sa[468] = 0.093075626f;
      sa[469] = 0.27368116f;
      sa[470] = 0.18170185f;
      sa[471] = 0.015071886f;
      sa[472] = 0.018718528f;
      sa[473] = -0.08947174f;
      sa[474] = 0.008934759f;
      sa[475] = 0.102309346f;
      sa[476] = 0.24315986f;
      sa[477] = -0.18590736f;
      sa[478] = 0.07831921f;
      sa[479] = -0.1574028f;
      sa[480] = -0.28977278f;
      sa[481] = -0.19091572f;
      sa[482] = -0.23300043f;
      sa[483] = 0.18347692f;
      sa[484] = 0.19920284f;
      sa[485] = 0.08196403f;
      sa[486] = -0.022499522f;
      sa[487] = -0.16109289f;
      sa[488] = -0.20117405f;
      sa[489] = 0.06859961f;
      sa[490] = -0.0042677443f;
      sa[491] = -0.2549817f;
      sa[492] = 0.19003029f;
      sa[493] = 0.23776264f;
      sa[494] = -0.22130759f;
      sa[495] = 0.1876447f;
      sa[496] = -0.01721065f;
      sa[497] = 0.052173298f;
      sa[498] = 0.16174655f;
      sa[499] = 0.14243838f;
      sa[500] = -0.09855353f;
      sa[501] = 0.067978576f;
      sa[502] = 0.21559241f;
      sa[503] = 0.038894728f;
      sa[504] = -0.16793086f;
      sa[505] = -0.21376283f;
      sa[506] = 0.19587879f;
      sa[507] = -0.046719458f;
      sa[508] = 0.088037685f;
      sa[509] = 0.22024882f;
      sa[510] = 0.1734275f;
      sa[511] = 0.017437918f;
      sa[512] = 0.062719665f;
      sa[513] = -0.05677907f;
      sa[514] = 0.27555382f;
      sa[515] = -0.23284245f;
      sa[516] = 0.043135386f;
      sa[517] = 0.101860896f;
      sa[518] = 0.15842968f;
      sa[519] = -0.060143255f;
      sa[520] = 0.214449f;
      sa[521] = 0.23022038f;
      sa[522] = 0.08946021f;
      sa[523] = 0.21572578f;
      sa[524] = 0.19729264f;
      sa[525] = 0.15244567f;
      sa[526] = 0.0050947326f;
      sa[527] = -0.050200667f;
      sa[528] = 0.027526394f;
      sa[529] = 0.13941202f;
      sa[530] = -0.16322812f;
      sa[531] = 0.08511606f;
      sa[532] = 0.15576342f;
      sa[533] = 0.123983316f;
      sa[534] = 0.13359384f;
      sa[535] = -0.05110773f;
      sa[536] = 0.13684905f;
      sa[537] = -0.20768909f;
      sa[538] = 0.2053399f;
      sa[539] = 0.28358245f;
      sa[540] = -0.21220897f;
      sa[541] = -0.14942388f;
      sa[542] = -0.102789864f;
      sa[543] = -0.22246471f;
      sa[544] = 0.12193606f;
      sa[545] = 0.0671415f;
      sa[546] = 0.029167863f;
      sa[547] = 0.14247152f;
      sa[548] = 0.09105382f;
      sa[549] = 0.12696695f;
      sa[550] = -0.024494465f;
      sa[551] = -0.080461636f;
      sa[552] = 0.015349727f;
      sa[553] = -0.09324465f;
      sa[554] = -0.18937641f;
      sa[555] = -0.17200834f;
      sa[556] = -0.19032408f;
      sa[557] = -0.28813958f;
      sa[558] = -0.20544218f;
      sa[559] = 0.06395638f;
      sa[560] = -0.28802446f;
      sa[561] = -0.07713382f;
      sa[562] = 0.15946756f;
      sa[563] = -0.089212015f;
      sa[564] = 0.2249658f;
      sa[565] = -0.012847825f;
      sa[566] = 0.25107118f;
      sa[567] = -0.04411368f;
      sa[568] = -0.06978667f;
      sa[569] = 0.032608483f;
      sa[570] = -0.041481614f;
      sa[571] = -0.059537016f;
      sa[572] = -0.10566485f;
      sa[573] = 0.17320034f;
      sa[574] = 0.21636721f;
      sa[575] = -0.27440712f;
      sa[576] = -0.04746694f;
      sa[577] = 0.042693626f;
      sa[578] = 0.10690217f;
      sa[579] = -0.05687895f;
      sa[580] = 0.101693206f;
      sa[581] = -0.13045216f;
      sa[582] = 0.09538256f;
      sa[583] = 0.04405908f;
      sa[584] = 0.16488759f;
      sa[585] = 0.21414366f;
      sa[586] = -0.15703113f;
      sa[587] = -0.095227435f;
      sa[588] = 0.08859382f;
      sa[589] = 0.12800948f;
      sa[590] = -0.011711203f;
      sa[591] = 0.050979257f;
      sa[592] = -0.30342466f;
      sa[593] = -0.18492039f;
      sa[594] = -0.09288403f;
      sa[595] = -0.060122084f;
      sa[596] = 0.29114556f;
      sa[597] = 0.013477306f;
      sa[598] = 0.24085395f;
      sa[599] = 0.0442057f;
      sa[600] = -0.29793838f;
      sa[601] = 0.24998797f;
      sa[602] = -0.09012162f;
      sa[603] = 0.23219645f;
      sa[604] = 0.24546377f;
      sa[605] = 0.18848035f;
      sa[606] = 0.21002936f;
      sa[607] = 0.070942454f;
      sa[608] = -0.022957057f;
      sa[609] = 0.090138875f;
      sa[610] = 0.0640638f;
      sa[611] = -0.09238968f;
      sa[612] = -0.11829198f;
      sa[613] = 0.062044483f;
      sa[614] = 0.07531258f;
      sa[615] = -0.047455795f;
      sa[616] = 0.07833653f;
      sa[617] = -0.25862333f;
      sa[618] = -0.12054382f;
      sa[619] = -0.15678547f;
      sa[620] = -0.07543824f;
      sa[621] = -0.27053845f;
      sa[622] = -0.3497021f;
      sa[623] = -0.30674234f;
      sa[624] = -0.053233624f;
      sa[625] = 0.24181895f;
      sa[626] = 0.0025712943f;
      sa[627] = 0.24092272f;
      sa[628] = -0.26511773f;
      sa[629] = -0.098294206f;
      sa[630] = -0.10946038f;
      sa[631] = 0.22544177f;
      sa[632] = 0.078929685f;
      sa[633] = -0.15456301f;
      sa[634] = -0.200976f;
      sa[635] = 0.15165387f;
      sa[636] = -0.1571487f;
      sa[637] = -0.051002096f;
      sa[638] = -0.07440736f;
      sa[639] = -0.015093449f;
      sa[640] = -0.14542414f;
      sa[641] = -0.27521f;
      sa[642] = 0.18704133f;
      sa[643] = -0.30463412f;
      sa[644] = -0.14383082f;
      sa[645] = -0.19882372f;
      sa[646] = 0.3179481f;
      sa[647] = -0.21302037f;
      sa[648] = -0.08475659f;
      sa[649] = -0.05933457f;
      sa[650] = 0.043255523f;
      sa[651] = -0.13368098f;
      sa[652] = 0.09899112f;
      sa[653] = -0.14106318f;
      sa[654] = -0.14477725f;
      sa[655] = -0.17590761f;
      sa[656] = 0.034890674f;
      sa[657] = 0.10922659f;
      sa[658] = -0.26026124f;
      sa[659] = -0.26433754f;
      sa[660] = -0.24717616f;
      sa[661] = -0.11173828f;
      sa[662] = -0.29280058f;
      sa[663] = 0.124494955f;
      sa[664] = -0.16923867f;
      sa[665] = 0.2599549f;
      sa[666] = 0.0027928269f;
      sa[667] = -0.22342873f;
      sa[668] = 0.24616817f;
      sa[669] = -0.11783001f;
      sa[670] = 0.119811706f;
      sa[671] = 0.047751255f;
      sa[672] = -0.27845296f;
      sa[673] = 0.13953358f;
      sa[674] = 0.25564072f;
      sa[675] = -0.22902627f;
      sa[676] = -0.09386019f;
      sa[677] = -0.18796745f;
      sa[678] = 0.19338968f;
      sa[679] = -0.05734278f;
      sa[680] = 0.028643873f;
      sa[681] = 0.05683507f;
      sa[682] = 0.0947068f;
      sa[683] = -0.07784372f;
      sa[684] = -0.024344029f;
      sa[685] = 0.04123735f;
      sa[686] = -0.1498821f;
      sa[687] = -0.18195225f;
      sa[688] = -0.30239666f;
      sa[689] = -0.2364094f;
      sa[690] = -0.03375823f;
      sa[691] = 0.08626885f;
      sa[692] = -0.14450367f;
      sa[693] = -0.15981328f;
      sa[694] = 0.29052278f;
      sa[695] = -0.026538149f;
      sa[696] = -0.07772787f;
      sa[697] = -0.1302379f;
      sa[698] = -0.15547708f;
      sa[699] = 0.29636386f;
      sa[700] = 0.18537925f;
      sa[701] = 0.17525083f;
      sa[702] = 0.17085962f;
      sa[703] = 0.004057242f;
      sa[704] = -0.26722375f;
      sa[705] = -0.075211614f;
      sa[706] = -0.14423735f;
      sa[707] = 0.015137872f;
      sa[708] = 0.024233598f;
      sa[709] = -0.25223145f;
      sa[710] = 0.24754539f;
      sa[711] = -0.07413511f;
      sa[712] = 0.029546967f;
      sa[713] = 0.10966333f;
      sa[714] = 0.17099595f;
      sa[715] = 0.06995391f;
      sa[716] = 0.07389296f;
      sa[717] = 0.14210792f;
      sa[718] = -0.03218135f;
      sa[719] = 0.10965352f;
      sa[720] = -0.20044382f;
      sa[721] = 0.24775092f;
      sa[722] = -0.15558358f;
      sa[723] = 0.020140298f;
      sa[724] = 0.03692516f;
      sa[725] = -0.29652095f;
      sa[726] = -0.23927338f;
      sa[727] = -0.2615446f;
      sa[728] = -0.07339482f;
      sa[729] = -0.0244778f;
      sa[730] = 0.12216914f;
      sa[731] = -0.22222257f;
      sa[732] = 0.16520306f;
      sa[733] = 0.20250238f;
      sa[734] = -0.14322627f;
      sa[735] = 0.30673218f;
      sa[736] = 0.0038080374f;
      sa[737] = 0.18416406f;
      sa[738] = -0.21331207f;
      sa[739] = -0.3096148f;
      sa[740] = -0.25267592f;
      sa[741] = -0.27681795f;
      sa[742] = 0.07742034f;
      sa[743] = 0.0637584f;
      sa[744] = 0.034345668f;
      sa[745] = -0.20611094f;
      sa[746] = 0.086927935f;
      sa[747] = -0.13187167f;
      sa[748] = -0.13737406f;
      sa[749] = -0.16779621f;
      sa[750] = 0.18358196f;
      sa[751] = 0.26615036f;
      sa[752] = -0.009973804f;
      sa[753] = 0.25944644f;
      sa[754] = -0.015795274f;
      sa[755] = 0.14943753f;
      sa[756] = -0.1124952f;
      sa[757] = 0.2941856f;
      sa[758] = -0.1822402f;
      sa[759] = -0.043889895f;
      sa[760] = -0.14113128f;
      sa[761] = 0.0025615948f;
      sa[762] = -0.14600816f;
      sa[763] = 0.13820195f;
      sa[764] = 0.09758425f;
      sa[765] = 0.013105206f;
      sa[766] = -0.18241715f;
      sa[767] = 0.11794609f;
      sa[768] = -0.17158571f;
      sa[769] = -0.2867542f;
      sa[770] = -0.024986865f;
      sa[771] = 0.020003337f;
      sa[772] = 0.08146334f;
      sa[773] = -0.13795535f;
      sa[774] = -0.022069935f;
      sa[775] = 0.30230638f;
      sa[776] = -0.05936987f;
      sa[777] = 0.035158977f;
      sa[778] = 0.13948312f;
      sa[779] = -0.13984635f;
      sa[780] = -0.012904163f;
      sa[781] = -0.024530591f;
      sa[782] = 0.12924008f;
      sa[783] = -0.1566703f;
      sa[784] = -0.12927489f;
      sa[785] = -0.12284298f;
      sa[786] = -0.105317794f;
      sa[787] = -0.21060836f;
      sa[788] = -0.20071416f;
      sa[789] = 0.16289295f;
      sa[790] = -0.093238324f;
      sa[791] = -0.0669828f;
      sa[792] = 0.13255496f;
      sa[793] = -0.15035595f;
      sa[794] = -0.23598966f;
      sa[795] = 0.008522571f;
      sa[796] = 0.23513441f;
      sa[797] = -0.20320083f;
      sa[798] = -0.27469328f;
      sa[799] = -0.21743762f;
      sa[800] = 0.15402684f;
      sa[801] = 0.016044864f;
      sa[802] = 0.21021959f;
      sa[803] = 0.059278466f;
      sa[804] = 0.21387321f;
      sa[805] = 0.27305943f;
      sa[806] = 0.2581879f;
      sa[807] = 0.17959346f;
      sa[808] = -0.0511058f;
      sa[809] = -0.26034817f;
      sa[810] = 0.105721936f;
      sa[811] = 0.18172811f;
      sa[812] = 0.16475594f;
      sa[813] = -0.26856124f;
      sa[814] = 0.074010335f;
      sa[815] = -0.16625676f;
      sa[816] = -0.13566992f;
      sa[817] = -0.1917575f;
      sa[818] = 0.014696196f;
      sa[819] = -0.09131157f;
      sa[820] = -0.26829916f;
      sa[821] = -0.18345237f;
      sa[822] = -0.26413468f;
      sa[823] = 0.07821296f;
      sa[824] = 0.13499568f;
      sa[825] = 0.3086936f;
      sa[826] = -0.24225709f;
      sa[827] = -0.27527696f;
      sa[828] = 0.13905513f;
      sa[829] = -0.08290162f;
      sa[830] = 0.12232602f;
      sa[831] = 0.18058668f;
      sa[832] = 0.14002f;
      sa[833] = 0.0454107f;
      sa[834] = 0.14327727f;
      sa[835] = -0.10627403f;
      sa[836] = 0.21430218f;
      sa[837] = -0.18434027f;
      sa[838] = 0.12313757f;
      sa[839] = -0.23366384f;
      sa[840] = 0.17405786f;
      sa[841] = 0.077460915f;
      sa[842] = 0.11805387f;
      sa[843] = 0.016648926f;
      sa[844] = 0.02694844f;
      sa[845] = 0.090316296f;
      sa[846] = -0.24806252f;
      sa[847] = -0.113828056f;
      sa[848] = 0.2301729f;
      sa[849] = 0.28520918f;
      sa[850] = -0.021510221f;
      sa[851] = 0.12712052f;
      sa[852] = 0.20747437f;
      sa[853] = 0.10044083f;
      sa[854] = 0.24027899f;
      sa[855] = 0.12522835f;
      sa[856] = 0.12542248f;
      sa[857] = -0.10012072f;
      sa[858] = 0.142815f;
      sa[859] = 0.12103513f;
      sa[860] = 0.2986203f;
      sa[861] = -0.16177958f;
      sa[862] = -0.115184285f;
      sa[863] = -0.003584139f;
      sa[864] = -0.20686233f;
      sa[865] = 0.23179704f;
      sa[866] = -0.118069515f;
      sa[867] = 0.0022531622f;
      sa[868] = -0.19114602f;
      sa[869] = 0.22235464f;
      sa[870] = -0.0016064305f;
      sa[871] = 0.15355878f;
      sa[872] = 0.23378131f;
      sa[873] = -0.034334008f;
      sa[874] = -6.9631793E-4f;
      sa[875] = -0.23854879f;
      sa[876] = -0.21123724f;
      sa[877] = -0.18224066f;
      sa[878] = 0.069051184f;
      sa[879] = 0.19552606f;
      sa[880] = -0.10267918f;
      sa[881] = -0.066388324f;
      sa[882] = 0.1702169f;
      sa[883] = 0.2626674f;
      sa[884] = -0.14536023f;
      sa[885] = -0.16671136f;
      sa[886] = 0.103093415f;
      sa[887] = -0.06984917f;
      sa[888] = -0.033386376f;
      sa[889] = 0.105881006f;
      sa[890] = -0.3087207f;
      sa[891] = 0.36487606f;
      sa[892] = 0.14122467f;
      sa[893] = 0.21016881f;
      sa[894] = 0.029088544f;
      sa[895] = 0.1772811f;
      sa[896] = -0.18500368f;
      sa[897] = 0.16740857f;
      sa[898] = -0.03878421f;
      sa[899] = 0.22846502f;
      sa[900] = -0.11821033f;
      sa[901] = 0.13299997f;
      sa[902] = -0.23916194f;
      sa[903] = -0.16514869f;
      sa[904] = 0.16466083f;
      sa[905] = 0.1791001f;
      sa[906] = -0.23884426f;
      sa[907] = -0.22919679f;
      sa[908] = -0.22335684f;
      sa[909] = 0.035747565f;
      sa[910] = 0.022477929f;
      sa[911] = -0.11544285f;
      sa[912] = -0.030434936f;
      sa[913] = 0.045407422f;
      sa[914] = -0.18074095f;
      sa[915] = 0.053835467f;
      sa[916] = 0.19247301f;
      sa[917] = -0.012767707f;
      sa[918] = 0.1720004f;
      sa[919] = -0.026162248f;
      sa[920] = 0.10893765f;
      sa[921] = -0.102414995f;
      sa[922] = -0.14263801f;
      sa[923] = -0.14651029f;
      sa[924] = -0.10472262f;
      sa[925] = -0.16484441f;
      sa[926] = 0.09017474f;
      sa[927] = -0.0539862f;
      sa[928] = 0.20570154f;
      sa[929] = 0.104986936f;
      sa[930] = 0.13246717f;
      sa[931] = -0.035946976f;
      sa[932] = 0.18406874f;
      sa[933] = 0.039167542f;
      sa[934] = 0.1934025f;
      sa[935] = -0.20950462f;
      sa[936] = 0.07490343f;
      sa[937] = 0.2019818f;
      sa[938] = -0.10483054f;
      sa[939] = 0.0017977796f;
      sa[940] = -0.069940075f;
      sa[941] = -0.29372826f;
      sa[942] = -0.23112874f;
      sa[943] = -0.15729177f;
      sa[944] = -0.22630417f;
      sa[945] = 0.103007555f;
      sa[946] = 0.09038616f;
      sa[947] = 0.24810646f;
      sa[948] = 0.09592735f;
      sa[949] = -0.1687496f;
      sa[950] = 0.09867953f;
      sa[951] = -0.07649372f;
      sa[952] = -0.19877547f;
      sa[953] = -0.10505654f;
      sa[954] = -0.27029034f;
      sa[955] = 0.09988546f;
      sa[956] = -0.021068804f;
      sa[957] = 0.014293914f;
      sa[958] = 0.08960756f;
      sa[959] = -0.14782587f;
      sa[960] = 0.33491242f;
      sa[961] = -0.041916344f;
      sa[962] = -0.06568146f;
      sa[963] = -0.041618433f;
      sa[964] = -0.17284907f;
      sa[965] = 0.22828512f;
      sa[966] = -0.09301415f;
      sa[967] = -0.25716096f;
      sa[968] = 0.13988411f;
      sa[969] = 0.01826658f;
      sa[970] = 0.2982446f;
      sa[971] = 0.026683269f;
      sa[972] = -0.15888608f;
      sa[973] = -0.2271266f;
      sa[974] = -0.34925547f;
      sa[975] = -0.2785813f;
      sa[976] = -0.06449602f;
      sa[977] = 0.02280336f;
      sa[978] = -0.11036972f;
      sa[979] = 0.14748456f;
      sa[980] = 0.09652193f;
      sa[981] = -0.24796797f;
      sa[982] = 0.111286886f;
      sa[983] = -0.08431267f;
      sa[984] = -0.29497585f;
      sa[985] = 0.025404539f;
      sa[986] = -0.29388565f;
      sa[987] = 0.06513667f;
      sa[988] = 0.122269735f;
      sa[989] = 0.12655587f;
      sa[990] = 0.28428334f;
      sa[991] = -0.31341782f;
      sa[992] = -0.19433029f;
      sa[993] = -0.0032895226f;
      sa[994] = -0.161345f;
      sa[995] = -0.26251334f;
      sa[996] = 0.11731048f;
      sa[997] = 0.12511453f;
      sa[998] = 0.1276304f;
      sa[999] = 0.20702228f;
      sa[1000] = 0.029349223f;
      sa[1001] = 0.26442507f;
      sa[1002] = 0.25747994f;
      sa[1003] = -0.053122256f;
      sa[1004] = 0.15889302f;
      sa[1005] = -0.17117709f;
      sa[1006] = -0.111002184f;
      sa[1007] = -0.0023187567f;
      sa[1008] = 0.17350262f;
      sa[1009] = 0.049154095f;
      sa[1010] = -0.04069198f;
      sa[1011] = 0.3246589f;
      sa[1012] = -0.084675126f;
      sa[1013] = 0.13450861f;
      sa[1014] = 0.22813053f;
      sa[1015] = -0.33165896f;
      sa[1016] = 0.2400549f;
      sa[1017] = 0.035692386f;
      sa[1018] = -0.08831979f;
      sa[1019] = 0.07783284f;
      sa[1020] = -0.2347432f;
      sa[1021] = 0.0665496f;
      sa[1022] = 0.20863193f;
      sa[1023] = 0.07057195f;
      sa[1024] = -0.04972952f;
      sa[1025] = 0.10334552f;
      sa[1026] = 0.17249052f;
      sa[1027] = 0.27026623f;
      sa[1028] = 0.3000268f;
      sa[1029] = -0.030952359f;
      sa[1030] = -0.17897175f;
      sa[1031] = 0.025319817f;
      sa[1032] = -0.23160036f;
      sa[1033] = 0.006944444f;
      sa[1034] = -0.015207123f;
      sa[1035] = -0.25596556f;
      sa[1036] = 0.2665729f;
      sa[1037] = 0.029004196f;
      sa[1038] = -0.21009913f;
      sa[1039] = 0.26324752f;
      sa[1040] = 0.039804593f;
      sa[1041] = 0.08404337f;
      sa[1042] = -0.18996821f;
      sa[1043] = -0.03622471f;
      sa[1044] = 0.17241977f;
      sa[1045] = 0.19575113f;
      sa[1046] = -0.20004967f;
      sa[1047] = -0.23766154f;
      sa[1048] = 0.17455192f;
      sa[1049] = -0.076753944f;
      sa[1050] = 0.0670404f;
      sa[1051] = -0.16523923f;
      sa[1052] = 0.12058612f;
      sa[1053] = 0.20671733f;
      sa[1054] = 0.18966374f;
      sa[1055] = -0.04708344f;
      sa[1056] = 0.2522669f;
      sa[1057] = -0.18393497f;
      sa[1058] = 0.23067968f;
      sa[1059] = -0.15583462f;
      sa[1060] = -0.27635562f;
      sa[1061] = -0.0068462696f;
      sa[1062] = 0.2587059f;
      sa[1063] = -0.0052216253f;
      sa[1064] = 0.06374128f;
      sa[1065] = -0.046767112f;
      sa[1066] = 0.17492256f;
      sa[1067] = -0.2941436f;
      sa[1068] = -0.27116162f;
      sa[1069] = 0.2125546f;
      sa[1070] = 0.15953927f;
      sa[1071] = 0.26018837f;
      sa[1072] = -0.26677108f;
      sa[1073] = 0.1060667f;
      sa[1074] = 0.11950239f;
      sa[1075] = -0.16999562f;
      sa[1076] = -0.16574937f;
      sa[1077] = 0.1350691f;
      sa[1078] = 0.012760739f;
      sa[1079] = 0.080380864f;
      sa[1080] = 0.23335122f;
      sa[1081] = 0.25885385f;
      sa[1082] = -0.3217079f;
      sa[1083] = -0.18135703f;
      sa[1084] = 0.19962308f;
      sa[1085] = -0.24482392f;
      sa[1086] = -0.2993284f;
      sa[1087] = -0.24213125f;
      sa[1088] = -0.18049857f;
      sa[1089] = 0.105417274f;
      sa[1090] = -0.22706363f;
      sa[1091] = 0.15679012f;
      sa[1092] = -0.25690153f;
      sa[1093] = -0.27943793f;
      sa[1094] = -0.024451172f;
      sa[1095] = -0.22803389f;
      sa[1096] = 0.10157444f;
      sa[1097] = -0.10343594f;
      sa[1098] = -0.026547067f;
      sa[1099] = -0.062270816f;
      sa[1100] = -0.12916172f;
      sa[1101] = 0.12844256f;
      sa[1102] = -0.1587603f;
      sa[1103] = 0.21082696f;
      sa[1104] = -0.29438934f;
      sa[1105] = -0.10499413f;
      sa[1106] = -0.122378066f;
      sa[1107] = 0.19645588f;
      sa[1108] = -0.20202412f;
      sa[1109] = 0.22053851f;
      sa[1110] = 0.14195359f;
      sa[1111] = -0.2570932f;
      sa[1112] = 0.14725922f;
      sa[1113] = 0.19831742f;
      sa[1114] = 0.09978796f;
      sa[1115] = 0.24381255f;
      sa[1116] = -0.09779318f;
      sa[1117] = -0.18204959f;
      sa[1118] = -0.19339442f;
      sa[1119] = -0.08865542f;
      sa[1120] = 0.17845894f;
      sa[1121] = 0.07682349f;
      sa[1122] = 0.23570107f;
      sa[1123] = 0.24750118f;
      sa[1124] = -0.004957766f;
      sa[1125] = -0.09485767f;
      sa[1126] = 0.18906362f;
      sa[1127] = 0.124327414f;
      sa[1128] = 0.008020488f;
      sa[1129] = -0.105181515f;
      sa[1130] = 0.20353365f;
      sa[1131] = 0.2749567f;
      sa[1132] = -0.1637331f;
      sa[1133] = -0.11730958f;
      sa[1134] = 0.26526105f;
      sa[1135] = -0.24893878f;
      sa[1136] = -0.04935147f;
      sa[1137] = 0.16352679f;
      sa[1138] = -0.099195525f;
      sa[1139] = 0.15736818f;
      sa[1140] = 0.25340673f;
      sa[1141] = -0.2942699f;
      sa[1142] = 0.12517692f;
      sa[1143] = 0.046812188f;
      sa[1144] = -0.27015004f;
      sa[1145] = 0.15853621f;
      sa[1146] = 0.22098877f;
      sa[1147] = -0.047317836f;
      sa[1148] = 0.024781791f;
      sa[1149] = -0.0091846045f;
      sa[1150] = -0.21109104f;
      sa[1151] = -0.19029346f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_01_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_01_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2595801f;
      sa[1] = -0.12249468f;
      sa[2] = -0.5891081f;
      sa[3] = -0.9427434f;
      sa[4] = 0.100560635f;
      sa[5] = 0.19520521f;
      sa[6] = 1.238469f;
      sa[7] = -0.7228924f;
      sa[8] = -0.919491f;
      sa[9] = 0.7216364f;
      sa[10] = -0.15913266f;
      sa[11] = 0.39573988f;
      sa[12] = 0.19758415f;
      sa[13] = 0.05522191f;
      sa[14] = -1.2754959f;
      sa[15] = 1.1270726f;
      sa[16] = 1.5924454f;
      sa[17] = -0.46821234f;
      sa[18] = 0.05711606f;
      sa[19] = -0.47210816f;
      sa[20] = 1.1582834f;
      sa[21] = 0.034292556f;
      sa[22] = -0.995668f;
      sa[23] = 0.77372015f;
      sa[24] = -1.3675f;
      sa[25] = 0.42891085f;
      sa[26] = -0.22189222f;
      sa[27] = 1.487493f;
      sa[28] = -1.3890618f;
      sa[29] = -0.45488465f;
      sa[30] = 0.41841507f;
      sa[31] = -0.6373667f;
      sa[32] = -1.1405789f;
      sa[33] = -1.4760197f;
      sa[34] = 0.046548188f;
      sa[35] = 1.3882445f;
      sa[36] = -0.31020144f;
      sa[37] = -0.05278148f;
      sa[38] = 0.18484187f;
      sa[39] = 0.84319746f;
      sa[40] = -0.7570382f;
      sa[41] = -1.3630478f;
      sa[42] = -1.0162456f;
      sa[43] = -1.3989761f;
      sa[44] = 0.024755908f;
      sa[45] = -1.3137528f;
      sa[46] = 1.1938558f;
      sa[47] = 1.2763121f;
      sa[48] = -1.3499974f;
      sa[49] = -1.0412832f;
      sa[50] = 0.40711355f;
      sa[51] = -0.31007907f;
      sa[52] = 0.8288561f;
      sa[53] = 0.8664772f;
      sa[54] = -0.23633431f;
      sa[55] = 1.1374675f;
      sa[56] = -1.0292705f;
      sa[57] = -1.0984975f;
      sa[58] = 0.18858796f;
      sa[59] = -0.20679475f;
      sa[60] = 1.37486f;
      sa[61] = -0.61345655f;
      sa[62] = -0.35086936f;
      sa[63] = 0.6777896f;
      sa[64] = 1.4231781f;
      sa[65] = -0.6455126f;
      sa[66] = 0.602567f;
      sa[67] = 1.5930067f;
      sa[68] = 0.6931251f;
      sa[69] = -1.0368521f;
      sa[70] = -1.5743811f;
      sa[71] = -0.37367058f;
      sa[72] = -1.2924703f;
      sa[73] = 1.1820843f;
      sa[74] = 1.3262317f;
      sa[75] = -0.10705677f;
      sa[76] = 0.89108676f;
      sa[77] = 0.47796208f;
      sa[78] = -1.2873423f;
      sa[79] = 0.98813266f;
      sa[80] = -0.7936568f;
      sa[81] = 0.28579846f;
      sa[82] = 0.8111553f;
      sa[83] = -0.62155664f;
      sa[84] = -1.6118758f;
      sa[85] = -1.2727386f;
      sa[86] = 0.22817934f;
      sa[87] = 1.2248837f;
      sa[88] = -1.5494194f;
      sa[89] = -0.50690377f;
      sa[90] = -1.0590755f;
      sa[91] = 1.5412389f;
      sa[92] = -0.34428197f;
      sa[93] = 0.25659165f;
      sa[94] = -1.5321292f;
      sa[95] = -0.22595514f;
      sa[96] = -1.1071562f;
      sa[97] = 0.17781354f;
      sa[98] = -0.06179872f;
      sa[99] = 0.3105965f;
      sa[100] = -1.2686874f;
      sa[101] = -0.39457032f;
      sa[102] = 1.29249f;
      sa[103] = 0.037629522f;
      sa[104] = -0.17770617f;
      sa[105] = -0.5994235f;
      sa[106] = 1.4204847f;
      sa[107] = 1.2050816f;
      sa[108] = 0.7601016f;
      sa[109] = 0.12817086f;
      sa[110] = 0.6949111f;
      sa[111] = -0.7615913f;
      sa[112] = -1.1264293f;
      sa[113] = 0.1688269f;
      sa[114] = 0.15599272f;
      sa[115] = -0.31543845f;
      sa[116] = 1.165603f;
      sa[117] = 0.06831208f;
      sa[118] = -1.322829f;
      sa[119] = -0.7927175f;
      sa[120] = -0.28993177f;
      sa[121] = 1.059876f;
      sa[122] = -0.07870329f;
      sa[123] = 0.3648725f;
      sa[124] = -0.76208544f;
      sa[125] = 0.7916775f;
      sa[126] = -0.95915323f;
      sa[127] = 0.43767673f;
      sa[128] = -0.8789276f;
      sa[129] = 0.7542281f;
      sa[130] = -0.3588229f;
      sa[131] = 0.8880179f;
      sa[132] = 0.4652891f;
      sa[133] = 0.6536614f;
      sa[134] = 0.63124037f;
      sa[135] = -1.1323379f;
      sa[136] = 0.5270351f;
      sa[137] = -0.6494446f;
      sa[138] = -0.13647996f;
      sa[139] = 1.165291f;
      sa[140] = -0.47126663f;
      sa[141] = -0.02019743f;
      sa[142] = 0.32546133f;
      sa[143] = -0.8022051f;
      sa[144] = 0.9657597f;
      sa[145] = -0.78392327f;
      sa[146] = 0.03577572f;
      sa[147] = -0.30323648f;
      sa[148] = -0.830854f;
      sa[149] = 1.0576963f;
      sa[150] = -1.1145194f;
      sa[151] = -1.5479386f;
      sa[152] = 1.5753947f;
      sa[153] = -0.59207994f;
      sa[154] = 1.3010498f;
      sa[155] = -1.5239232f;
      sa[156] = -1.447963f;
      sa[157] = -1.1073124f;
      sa[158] = -0.26689f;
      sa[159] = -0.6460457f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_01 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_01_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_01_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_01_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_01_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_01_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


