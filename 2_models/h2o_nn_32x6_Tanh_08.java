/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:43.532+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_08

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_08 > h2o_nn_32x6_Tanh_08.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_08.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_08", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_08 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_08_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_08_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_08_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_08.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_08_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_08() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(2366892781514526304L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_08_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_08_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_08_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_08_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_08_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_08_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_08_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_08_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_08_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.02114582443592845;
      sa[1] = -0.037464876228927864;
      sa[2] = 0.028445625404831688;
      sa[3] = -0.17778615521773494;
      sa[4] = -0.058293641193054004;
      sa[5] = -0.060975483213372074;
      sa[6] = 0.18166620133044242;
      sa[7] = -0.03134466293551051;
      sa[8] = -0.05981869734210769;
      sa[9] = -0.12832632715645195;
      sa[10] = 0.16313436017398256;
      sa[11] = 0.07736352544868796;
      sa[12] = 0.1831431600916921;
      sa[13] = 0.001874003792297013;
      sa[14] = 0.02618925713148709;
      sa[15] = -0.01240461105287579;
      sa[16] = -0.07463098824274013;
      sa[17] = 0.1451283039421719;
      sa[18] = -0.09769249647495964;
      sa[19] = 0.027146583044664045;
      sa[20] = 0.13637600048503826;
      sa[21] = -0.01754220054319116;
      sa[22] = -0.10549204480750178;
      sa[23] = -0.01509662473047296;
      sa[24] = -0.08616171992075082;
      sa[25] = 0.17691068328209295;
      sa[26] = -0.053429553038357884;
      sa[27] = 0.07921835861148924;
      sa[28] = -0.12858883732443835;
      sa[29] = 0.10107173161832517;
      sa[30] = 0.002688115632655243;
      sa[31] = 0.018627704415332458;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_08_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_08_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.03879861402406188;
      sa[1] = -0.12036083458451563;
      sa[2] = -0.06961005676978882;
      sa[3] = 0.06354404236276937;
      sa[4] = -0.2543981457205758;
      sa[5] = 0.03326049793292193;
    }
  }
}
class h2o_nn_32x6_Tanh_08_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_08_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_08_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.01454347f;
      sa[1] = 0.10138021f;
      sa[2] = 0.09583463f;
      sa[3] = 0.096846394f;
      sa[4] = -0.17384838f;
      sa[5] = -0.22579747f;
      sa[6] = -0.035837613f;
      sa[7] = 0.27780285f;
      sa[8] = 0.06308856f;
      sa[9] = -0.22390962f;
      sa[10] = -0.16165884f;
      sa[11] = -0.13022596f;
      sa[12] = 0.026216632f;
      sa[13] = -0.335628f;
      sa[14] = -0.18019186f;
      sa[15] = -0.04075184f;
      sa[16] = 0.047295973f;
      sa[17] = 0.058123857f;
      sa[18] = -0.118805155f;
      sa[19] = 0.1883241f;
      sa[20] = 0.189303f;
      sa[21] = -0.30515647f;
      sa[22] = 0.24079765f;
      sa[23] = -0.09287936f;
      sa[24] = 0.21622318f;
      sa[25] = 0.15288118f;
      sa[26] = -0.1964216f;
      sa[27] = 0.22791833f;
      sa[28] = 0.16105363f;
      sa[29] = -0.3215355f;
      sa[30] = -0.25284037f;
      sa[31] = 0.07172036f;
      sa[32] = 0.21575895f;
      sa[33] = -0.14740182f;
      sa[34] = -0.021846766f;
      sa[35] = -0.10425165f;
      sa[36] = 0.054903597f;
      sa[37] = 0.18284218f;
      sa[38] = -0.05018598f;
      sa[39] = 0.19446298f;
      sa[40] = -0.0682123f;
      sa[41] = -0.13334699f;
      sa[42] = -0.21048765f;
      sa[43] = -0.16243792f;
      sa[44] = 0.28728837f;
      sa[45] = -0.27260318f;
      sa[46] = 0.04126078f;
      sa[47] = 0.037491556f;
      sa[48] = 0.22951964f;
      sa[49] = 0.26505882f;
      sa[50] = 0.19802204f;
      sa[51] = -0.41883388f;
      sa[52] = -0.15266906f;
      sa[53] = 0.08650341f;
      sa[54] = 0.24059682f;
      sa[55] = 0.30830133f;
      sa[56] = -0.18223417f;
      sa[57] = -0.34207186f;
      sa[58] = 0.20596176f;
      sa[59] = -0.30096078f;
      sa[60] = -0.15960215f;
      sa[61] = 0.14921878f;
      sa[62] = 0.115052484f;
      sa[63] = -0.24148251f;
      sa[64] = 0.109892346f;
      sa[65] = 0.053315572f;
      sa[66] = -0.019551188f;
      sa[67] = -0.0049958318f;
      sa[68] = -0.087727755f;
      sa[69] = -0.07221062f;
      sa[70] = -0.10242959f;
      sa[71] = 0.3903918f;
      sa[72] = -0.119585104f;
      sa[73] = 0.26871017f;
      sa[74] = -0.19017054f;
      sa[75] = -0.09982627f;
      sa[76] = -0.05927296f;
      sa[77] = -0.022479715f;
      sa[78] = 0.014504345f;
      sa[79] = 0.32548055f;
      sa[80] = -0.29306352f;
      sa[81] = -0.03875532f;
      sa[82] = -0.0026030221f;
      sa[83] = 0.17710887f;
      sa[84] = -0.051749695f;
      sa[85] = -0.21408375f;
      sa[86] = 0.0835898f;
      sa[87] = 0.42073467f;
      sa[88] = 0.26280966f;
      sa[89] = 0.1285824f;
      sa[90] = -0.15209441f;
      sa[91] = -0.001804208f;
      sa[92] = 0.13036089f;
      sa[93] = -0.06721615f;
      sa[94] = -0.11781427f;
      sa[95] = -0.047308374f;
      sa[96] = 0.04852915f;
      sa[97] = 0.05857194f;
      sa[98] = 0.1787361f;
      sa[99] = 0.16365066f;
      sa[100] = -0.0367558f;
      sa[101] = -0.12363744f;
      sa[102] = -0.23687121f;
      sa[103] = 0.039972663f;
      sa[104] = -0.077398814f;
      sa[105] = 0.032718476f;
      sa[106] = -0.1776135f;
      sa[107] = 0.18659642f;
      sa[108] = 0.250757f;
      sa[109] = -0.13873582f;
      sa[110] = -0.18021877f;
      sa[111] = 0.08051425f;
      sa[112] = 0.12523383f;
      sa[113] = 0.042365395f;
      sa[114] = -0.16996773f;
      sa[115] = -0.024975142f;
      sa[116] = -0.19741869f;
      sa[117] = 0.10582688f;
      sa[118] = -0.22238077f;
      sa[119] = 0.1331951f;
      sa[120] = 0.21664533f;
      sa[121] = 0.24166946f;
      sa[122] = 0.26138142f;
      sa[123] = 0.3423887f;
      sa[124] = 0.2650456f;
      sa[125] = 0.3485395f;
      sa[126] = -0.27281055f;
      sa[127] = -0.41966486f;
      sa[128] = 0.09321731f;
      sa[129] = 0.17337298f;
      sa[130] = -0.14240685f;
      sa[131] = 0.24633193f;
      sa[132] = 0.12716036f;
      sa[133] = -0.2518913f;
      sa[134] = 0.046612956f;
      sa[135] = -0.25548977f;
      sa[136] = -0.22136241f;
      sa[137] = 0.026791958f;
      sa[138] = 0.16883972f;
      sa[139] = 0.066796124f;
      sa[140] = -0.10905239f;
      sa[141] = -0.042491194f;
      sa[142] = 0.15607037f;
      sa[143] = -0.23061794f;
      sa[144] = 0.24969864f;
      sa[145] = -0.2956108f;
      sa[146] = -0.38364977f;
      sa[147] = 0.08597701f;
      sa[148] = 0.19969822f;
      sa[149] = 0.12318008f;
      sa[150] = 0.28884357f;
      sa[151] = -0.14247148f;
      sa[152] = -0.017262574f;
      sa[153] = 0.2580806f;
      sa[154] = 0.16187096f;
      sa[155] = -0.10145641f;
      sa[156] = 0.06805823f;
      sa[157] = -0.27213296f;
      sa[158] = 0.039734077f;
      sa[159] = 0.083612405f;
      sa[160] = -0.053899292f;
      sa[161] = 0.016815253f;
      sa[162] = 0.0219046f;
      sa[163] = -0.28105056f;
      sa[164] = 0.22325799f;
      sa[165] = 0.022252988f;
      sa[166] = -0.022202315f;
      sa[167] = 0.05645722f;
      sa[168] = 0.047331374f;
      sa[169] = 0.22867039f;
      sa[170] = 0.08781829f;
      sa[171] = -0.009922845f;
      sa[172] = -0.1087497f;
      sa[173] = -0.162014f;
      sa[174] = -0.09233718f;
      sa[175] = -0.23353037f;
      sa[176] = -0.010700363f;
      sa[177] = 0.06949328f;
      sa[178] = -0.06840945f;
      sa[179] = 0.23760763f;
      sa[180] = -0.05072827f;
      sa[181] = -0.380092f;
      sa[182] = -0.1923737f;
      sa[183] = 0.3393086f;
      sa[184] = 0.22024593f;
      sa[185] = 0.07296745f;
      sa[186] = -0.35172027f;
      sa[187] = -0.06017073f;
      sa[188] = -0.003977374f;
      sa[189] = 0.058432575f;
      sa[190] = 0.021643426f;
      sa[191] = -0.39659867f;
      sa[192] = -0.16021916f;
      sa[193] = 0.121596806f;
      sa[194] = 0.034869768f;
      sa[195] = 0.101050995f;
      sa[196] = 0.15770198f;
      sa[197] = -0.20892118f;
      sa[198] = 0.18950199f;
      sa[199] = -0.058647495f;
      sa[200] = -0.0041693603f;
      sa[201] = -0.30849728f;
      sa[202] = 0.10449597f;
      sa[203] = -0.11867611f;
      sa[204] = -0.20197491f;
      sa[205] = 0.180891f;
      sa[206] = 0.3144951f;
      sa[207] = 0.08729807f;
      sa[208] = -0.29301423f;
      sa[209] = -0.1343563f;
      sa[210] = -0.3485817f;
      sa[211] = -0.3439246f;
      sa[212] = 0.3174014f;
      sa[213] = -0.45695052f;
      sa[214] = 0.010625824f;
      sa[215] = 0.022165902f;
      sa[216] = 0.05355942f;
      sa[217] = 0.14498265f;
      sa[218] = -0.15239462f;
      sa[219] = 0.3320054f;
      sa[220] = -0.1962462f;
      sa[221] = 0.085873336f;
      sa[222] = 0.2508071f;
      sa[223] = 0.04231809f;
      sa[224] = 0.12013495f;
      sa[225] = 0.16151704f;
      sa[226] = -0.2399377f;
      sa[227] = -0.03558446f;
      sa[228] = 0.14594032f;
      sa[229] = 0.13353154f;
      sa[230] = 0.29470488f;
      sa[231] = -0.25241587f;
      sa[232] = -0.20341685f;
      sa[233] = 0.043294825f;
      sa[234] = 0.12216293f;
      sa[235] = -0.1239008f;
      sa[236] = -0.022870254f;
      sa[237] = -0.21659535f;
      sa[238] = -0.17630373f;
      sa[239] = 0.12929311f;
      sa[240] = 0.05019602f;
      sa[241] = -0.2435188f;
      sa[242] = -0.060286663f;
      sa[243] = -0.13094321f;
      sa[244] = -0.1839435f;
      sa[245] = -0.114098474f;
      sa[246] = -0.21805023f;
      sa[247] = -0.08172977f;
      sa[248] = 0.23373938f;
      sa[249] = 0.06796368f;
      sa[250] = -0.13426949f;
      sa[251] = -0.124088824f;
      sa[252] = -0.17504299f;
      sa[253] = -0.05384329f;
      sa[254] = -0.11186231f;
      sa[255] = 0.3208043f;
      sa[256] = -0.17910331f;
      sa[257] = 0.38411048f;
      sa[258] = -0.23650773f;
      sa[259] = -0.13976032f;
      sa[260] = -0.096621476f;
      sa[261] = -0.0068946364f;
      sa[262] = -0.11808583f;
      sa[263] = 0.30766028f;
      sa[264] = -0.025958292f;
      sa[265] = 0.26121226f;
      sa[266] = -0.20538042f;
      sa[267] = -0.109170705f;
      sa[268] = 0.3782513f;
      sa[269] = 0.059280295f;
      sa[270] = -0.12117324f;
      sa[271] = 0.117957406f;
      sa[272] = -0.067667656f;
      sa[273] = -0.15996796f;
      sa[274] = 0.081506066f;
      sa[275] = -0.10758594f;
      sa[276] = 0.16037202f;
      sa[277] = -0.16094251f;
      sa[278] = -0.23987815f;
      sa[279] = 0.16977555f;
      sa[280] = -0.01106697f;
      sa[281] = 0.35129735f;
      sa[282] = 0.108746454f;
      sa[283] = 0.10052483f;
      sa[284] = 0.04592839f;
      sa[285] = -0.11343093f;
      sa[286] = 0.17700167f;
      sa[287] = -0.032229196f;
      sa[288] = -0.17638858f;
      sa[289] = -0.09475548f;
      sa[290] = -0.12752128f;
      sa[291] = -0.10088447f;
      sa[292] = 0.1528096f;
      sa[293] = -0.13063157f;
      sa[294] = 0.05817396f;
      sa[295] = 0.1360308f;
      sa[296] = 0.1643757f;
      sa[297] = 0.20432775f;
      sa[298] = -0.011414194f;
      sa[299] = -0.17875479f;
      sa[300] = -0.08474009f;
      sa[301] = -0.15147977f;
      sa[302] = 0.0534756f;
      sa[303] = -0.04849454f;
      sa[304] = -0.18851627f;
      sa[305] = -0.049757015f;
      sa[306] = 0.15733634f;
      sa[307] = -0.096903935f;
      sa[308] = 0.0802172f;
      sa[309] = 0.19241104f;
      sa[310] = 0.28550413f;
      sa[311] = 0.34913874f;
      sa[312] = -0.266294f;
      sa[313] = -0.17905499f;
      sa[314] = -0.16862717f;
      sa[315] = 0.17817917f;
      sa[316] = -0.052913263f;
      sa[317] = -0.08251148f;
      sa[318] = 0.043226503f;
      sa[319] = 0.24315841f;
      sa[320] = -0.14853029f;
      sa[321] = 0.045783475f;
      sa[322] = 0.42553034f;
      sa[323] = -0.03876124f;
      sa[324] = -0.09854859f;
      sa[325] = 0.19650142f;
      sa[326] = -0.22802855f;
      sa[327] = 0.03784242f;
      sa[328] = -0.15033026f;
      sa[329] = 0.1585101f;
      sa[330] = -0.22964987f;
      sa[331] = -0.079725504f;
      sa[332] = -0.25794762f;
      sa[333] = 0.093078405f;
      sa[334] = -0.06960315f;
      sa[335] = 0.38429993f;
      sa[336] = -0.17066899f;
      sa[337] = -0.16924691f;
      sa[338] = 0.26712087f;
      sa[339] = -0.2869044f;
      sa[340] = -0.3067176f;
      sa[341] = -0.31946406f;
      sa[342] = 0.25789243f;
      sa[343] = -1.9851429E-4f;
      sa[344] = -0.21643032f;
      sa[345] = 0.08385476f;
      sa[346] = 0.126153f;
      sa[347] = -0.23451678f;
      sa[348] = 0.31702232f;
      sa[349] = -0.24825864f;
      sa[350] = -0.18918282f;
      sa[351] = -0.1599265f;
      sa[352] = 0.13470984f;
      sa[353] = -0.10691708f;
      sa[354] = 0.02350923f;
      sa[355] = 0.029413182f;
      sa[356] = -0.0733446f;
      sa[357] = 0.24954474f;
      sa[358] = -0.41321647f;
      sa[359] = 0.013437222f;
      sa[360] = 0.08098268f;
      sa[361] = 0.09551262f;
      sa[362] = -0.03555044f;
      sa[363] = -0.21539782f;
      sa[364] = -0.099214f;
      sa[365] = -0.14774746f;
      sa[366] = 0.025351375f;
      sa[367] = -0.20173004f;
      sa[368] = -0.1335674f;
      sa[369] = 0.35815096f;
      sa[370] = -0.15123175f;
      sa[371] = 0.4776264f;
      sa[372] = 0.024329644f;
      sa[373] = 0.383765f;
      sa[374] = -0.0719807f;
      sa[375] = -0.19909889f;
      sa[376] = -0.1798956f;
      sa[377] = -0.12791094f;
      sa[378] = 0.22644615f;
      sa[379] = 0.23251903f;
      sa[380] = -0.09021029f;
      sa[381] = -0.06002765f;
      sa[382] = -0.03149149f;
      sa[383] = -0.0023618112f;
      sa[384] = -0.030998383f;
      sa[385] = 0.14472297f;
      sa[386] = -0.31326124f;
      sa[387] = -0.21620834f;
      sa[388] = 0.12375296f;
      sa[389] = 0.025976116f;
      sa[390] = 0.055847865f;
      sa[391] = -0.057913713f;
      sa[392] = 0.11889767f;
      sa[393] = 0.11513754f;
      sa[394] = -0.05780152f;
      sa[395] = 0.39399627f;
      sa[396] = 0.23699434f;
      sa[397] = -0.26391372f;
      sa[398] = 0.15789554f;
      sa[399] = -0.035962112f;
      sa[400] = 0.14986964f;
      sa[401] = 0.21991394f;
      sa[402] = -0.13544554f;
      sa[403] = 0.013477376f;
      sa[404] = 0.2544274f;
      sa[405] = -0.25713232f;
      sa[406] = -0.045741823f;
      sa[407] = 0.08009335f;
      sa[408] = -0.19834295f;
      sa[409] = -0.22038211f;
      sa[410] = -0.09419241f;
      sa[411] = 0.10254751f;
      sa[412] = -0.12614255f;
      sa[413] = 0.016339147f;
      sa[414] = 0.15760052f;
      sa[415] = 0.4855436f;
      sa[416] = -0.16226283f;
      sa[417] = 0.024871912f;
      sa[418] = 0.0011009087f;
      sa[419] = 0.27133676f;
      sa[420] = 0.25838968f;
      sa[421] = 0.2403083f;
      sa[422] = 0.22659013f;
      sa[423] = -0.14320128f;
      sa[424] = 0.09400786f;
      sa[425] = -0.08848287f;
      sa[426] = -0.2915245f;
      sa[427] = 0.11680083f;
      sa[428] = -0.0643813f;
      sa[429] = -0.34531316f;
      sa[430] = 0.19594093f;
      sa[431] = 0.120196894f;
      sa[432] = -0.07806173f;
      sa[433] = 0.27093974f;
      sa[434] = 0.3075124f;
      sa[435] = -0.11393445f;
      sa[436] = -0.16245523f;
      sa[437] = -0.12729128f;
      sa[438] = 0.061540857f;
      sa[439] = 0.11602381f;
      sa[440] = 0.18043928f;
      sa[441] = -0.22408964f;
      sa[442] = 0.11533259f;
      sa[443] = 0.16587166f;
      sa[444] = -0.16830596f;
      sa[445] = 0.15883854f;
      sa[446] = 0.2525127f;
      sa[447] = 0.20419732f;
      sa[448] = 0.31790456f;
      sa[449] = 0.34337875f;
      sa[450] = -0.2751369f;
      sa[451] = 0.19410321f;
      sa[452] = 0.20853664f;
      sa[453] = 0.015859645f;
      sa[454] = -0.12933743f;
      sa[455] = 0.04652424f;
      sa[456] = 0.029303825f;
      sa[457] = 0.12799704f;
      sa[458] = -0.40502885f;
      sa[459] = 0.3803457f;
      sa[460] = 0.29091796f;
      sa[461] = 0.3525322f;
      sa[462] = 0.15928379f;
      sa[463] = 0.30698076f;
      sa[464] = -0.36740097f;
      sa[465] = 0.38375783f;
      sa[466] = -0.05557305f;
      sa[467] = 0.13937472f;
      sa[468] = 0.03464627f;
      sa[469] = 0.27175558f;
      sa[470] = 0.19948873f;
      sa[471] = -0.14116699f;
      sa[472] = 0.035723448f;
      sa[473] = -0.14977685f;
      sa[474] = -0.0013815844f;
      sa[475] = 0.16968775f;
      sa[476] = 0.12635978f;
      sa[477] = -0.15054579f;
      sa[478] = 0.10595523f;
      sa[479] = -0.09637841f;
      sa[480] = -0.38204712f;
      sa[481] = -0.30320984f;
      sa[482] = -0.2926351f;
      sa[483] = 0.18102086f;
      sa[484] = 0.27161437f;
      sa[485] = 0.12332845f;
      sa[486] = -0.008742602f;
      sa[487] = 0.0037098373f;
      sa[488] = -0.21891677f;
      sa[489] = 0.117081866f;
      sa[490] = 0.0116726635f;
      sa[491] = -0.085978046f;
      sa[492] = 0.21437633f;
      sa[493] = 0.24812277f;
      sa[494] = -0.21864058f;
      sa[495] = 0.2594992f;
      sa[496] = -0.09493956f;
      sa[497] = 0.021769594f;
      sa[498] = 0.05931425f;
      sa[499] = 0.085917786f;
      sa[500] = -0.1377992f;
      sa[501] = 0.09128604f;
      sa[502] = 0.34649676f;
      sa[503] = 0.16663878f;
      sa[504] = -0.070909105f;
      sa[505] = -0.09429432f;
      sa[506] = 0.20921561f;
      sa[507] = -0.07685182f;
      sa[508] = 0.117311046f;
      sa[509] = 0.26384377f;
      sa[510] = 0.16062288f;
      sa[511] = 0.011392075f;
      sa[512] = 0.09340909f;
      sa[513] = -0.05353056f;
      sa[514] = 0.27077225f;
      sa[515] = -0.33918923f;
      sa[516] = 0.0367251f;
      sa[517] = 0.11818826f;
      sa[518] = 0.12021284f;
      sa[519] = -0.06457641f;
      sa[520] = 0.2347586f;
      sa[521] = 0.20980953f;
      sa[522] = 0.0010787671f;
      sa[523] = 0.16573441f;
      sa[524] = 0.20696542f;
      sa[525] = 0.19939914f;
      sa[526] = 0.001014379f;
      sa[527] = -0.12557523f;
      sa[528] = -0.017967597f;
      sa[529] = 0.13103867f;
      sa[530] = -0.23381838f;
      sa[531] = 0.30650324f;
      sa[532] = 0.17962204f;
      sa[533] = 0.16539568f;
      sa[534] = 0.18187629f;
      sa[535] = -0.03458653f;
      sa[536] = 0.015518406f;
      sa[537] = -0.2552781f;
      sa[538] = 0.32703722f;
      sa[539] = 0.29302636f;
      sa[540] = -0.2577203f;
      sa[541] = -0.2495607f;
      sa[542] = -0.16797332f;
      sa[543] = -0.062687576f;
      sa[544] = 0.16978441f;
      sa[545] = 0.09833118f;
      sa[546] = 0.11365433f;
      sa[547] = 0.26321787f;
      sa[548] = 0.02647964f;
      sa[549] = 0.07419325f;
      sa[550] = -0.050336972f;
      sa[551] = -0.10625688f;
      sa[552] = 0.014063013f;
      sa[553] = -0.099662445f;
      sa[554] = -0.14481026f;
      sa[555] = -0.08048668f;
      sa[556] = -0.19359225f;
      sa[557] = -0.24715438f;
      sa[558] = -0.16424008f;
      sa[559] = -0.0878203f;
      sa[560] = -0.31738845f;
      sa[561] = -0.104230896f;
      sa[562] = 0.1967993f;
      sa[563] = -0.05461117f;
      sa[564] = 0.16052231f;
      sa[565] = 0.032626934f;
      sa[566] = 0.31337968f;
      sa[567] = -0.012234309f;
      sa[568] = -0.11721969f;
      sa[569] = 0.003045966f;
      sa[570] = -0.05522987f;
      sa[571] = -0.043725193f;
      sa[572] = -0.010691125f;
      sa[573] = 0.2984036f;
      sa[574] = 0.07203553f;
      sa[575] = -0.4371259f;
      sa[576] = -0.18546245f;
      sa[577] = -0.07175114f;
      sa[578] = 0.029293345f;
      sa[579] = 0.12136181f;
      sa[580] = 0.008521385f;
      sa[581] = -0.25885454f;
      sa[582] = 0.025649767f;
      sa[583] = -0.17319821f;
      sa[584] = 0.08640484f;
      sa[585] = 0.098707356f;
      sa[586] = -0.24282475f;
      sa[587] = -0.27153307f;
      sa[588] = 0.043022648f;
      sa[589] = -0.009258809f;
      sa[590] = -0.03360105f;
      sa[591] = -0.1835736f;
      sa[592] = -0.36226526f;
      sa[593] = -0.2981805f;
      sa[594] = 0.03888555f;
      sa[595] = 0.04710001f;
      sa[596] = 0.2231175f;
      sa[597] = -0.093349434f;
      sa[598] = 0.1948763f;
      sa[599] = -0.055403654f;
      sa[600] = -0.3005323f;
      sa[601] = 0.15051292f;
      sa[602] = 0.025166951f;
      sa[603] = -0.13895653f;
      sa[604] = 0.14003298f;
      sa[605] = 0.04750514f;
      sa[606] = 0.02764438f;
      sa[607] = -0.1618696f;
      sa[608] = 0.03412992f;
      sa[609] = -0.03222534f;
      sa[610] = 0.102721915f;
      sa[611] = -0.04603878f;
      sa[612] = -0.14759254f;
      sa[613] = 0.19615437f;
      sa[614] = 0.16905473f;
      sa[615] = -0.30808258f;
      sa[616] = 0.052064657f;
      sa[617] = -0.21900584f;
      sa[618] = -0.13222209f;
      sa[619] = -0.11551925f;
      sa[620] = -0.03315308f;
      sa[621] = -0.16143115f;
      sa[622] = -0.24197474f;
      sa[623] = -0.123395704f;
      sa[624] = -0.029372917f;
      sa[625] = 0.3766728f;
      sa[626] = 0.04281226f;
      sa[627] = 0.28768128f;
      sa[628] = -0.14660385f;
      sa[629] = 0.017129375f;
      sa[630] = -0.20163794f;
      sa[631] = 0.45393604f;
      sa[632] = 0.07856025f;
      sa[633] = -0.16473265f;
      sa[634] = -0.21773422f;
      sa[635] = 0.22863467f;
      sa[636] = -0.030845039f;
      sa[637] = 0.031017546f;
      sa[638] = -0.22502017f;
      sa[639] = -0.11153786f;
      sa[640] = -0.1260714f;
      sa[641] = -0.28983456f;
      sa[642] = 0.21849152f;
      sa[643] = -0.32509553f;
      sa[644] = -0.15985693f;
      sa[645] = -0.24448907f;
      sa[646] = 0.24223137f;
      sa[647] = -0.17922191f;
      sa[648] = -0.010284235f;
      sa[649] = -0.04248548f;
      sa[650] = 0.07958196f;
      sa[651] = -0.095465094f;
      sa[652] = 0.035431255f;
      sa[653] = -0.14048004f;
      sa[654] = -0.17579253f;
      sa[655] = -0.197914f;
      sa[656] = 0.14831127f;
      sa[657] = 0.20852044f;
      sa[658] = -0.22549456f;
      sa[659] = -0.04934518f;
      sa[660] = -0.19329086f;
      sa[661] = -0.0570843f;
      sa[662] = -0.23336573f;
      sa[663] = 0.19233547f;
      sa[664] = -0.1926891f;
      sa[665] = 0.31315875f;
      sa[666] = 0.027604198f;
      sa[667] = -0.3502388f;
      sa[668] = 0.25118294f;
      sa[669] = -0.16820264f;
      sa[670] = 0.084918424f;
      sa[671] = -0.03197453f;
      sa[672] = -0.22161938f;
      sa[673] = 0.18160173f;
      sa[674] = 0.2466332f;
      sa[675] = -0.4134389f;
      sa[676] = -0.0703363f;
      sa[677] = -0.19529518f;
      sa[678] = 0.21214515f;
      sa[679] = -0.03562881f;
      sa[680] = 0.1013322f;
      sa[681] = 0.14647721f;
      sa[682] = -0.11513166f;
      sa[683] = -0.1767515f;
      sa[684] = 0.013843752f;
      sa[685] = 0.093534954f;
      sa[686] = -0.17544365f;
      sa[687] = -0.16470079f;
      sa[688] = -0.25364077f;
      sa[689] = -0.22195202f;
      sa[690] = -0.03352923f;
      sa[691] = 0.09732256f;
      sa[692] = -0.15744905f;
      sa[693] = -0.20151542f;
      sa[694] = 0.2703894f;
      sa[695] = -0.24354346f;
      sa[696] = -0.10226917f;
      sa[697] = -0.15534934f;
      sa[698] = -0.20630582f;
      sa[699] = 0.26034275f;
      sa[700] = 0.16650295f;
      sa[701] = 0.12416711f;
      sa[702] = 0.112585165f;
      sa[703] = -0.013636677f;
      sa[704] = -0.2529703f;
      sa[705] = -0.014336884f;
      sa[706] = -0.12879999f;
      sa[707] = 0.022497946f;
      sa[708] = -0.03634506f;
      sa[709] = -0.2844246f;
      sa[710] = 0.22966415f;
      sa[711] = 0.1338811f;
      sa[712] = 0.03965323f;
      sa[713] = 0.16080569f;
      sa[714] = 0.1960498f;
      sa[715] = 0.07610294f;
      sa[716] = 0.0081573045f;
      sa[717] = 0.0845146f;
      sa[718] = 0.046951234f;
      sa[719] = 0.11005397f;
      sa[720] = -0.2646535f;
      sa[721] = 0.250593f;
      sa[722] = -0.004356675f;
      sa[723] = 0.36318246f;
      sa[724] = 0.019132724f;
      sa[725] = -0.21393937f;
      sa[726] = -0.19499993f;
      sa[727] = -0.39556304f;
      sa[728] = -0.0591159f;
      sa[729] = -0.11287543f;
      sa[730] = 0.11649775f;
      sa[731] = -0.5281223f;
      sa[732] = 0.239965f;
      sa[733] = 0.3228315f;
      sa[734] = -0.058012106f;
      sa[735] = 0.27881646f;
      sa[736] = 0.06861897f;
      sa[737] = 0.20337903f;
      sa[738] = -0.29405078f;
      sa[739] = -0.094884515f;
      sa[740] = -0.27188948f;
      sa[741] = -0.34566218f;
      sa[742] = 0.06479f;
      sa[743] = -0.16116016f;
      sa[744] = 0.17433318f;
      sa[745] = -0.19917366f;
      sa[746] = 0.053101096f;
      sa[747] = -0.23361942f;
      sa[748] = -0.11182339f;
      sa[749] = -0.16152415f;
      sa[750] = 0.25969127f;
      sa[751] = 0.22592048f;
      sa[752] = -0.007989281f;
      sa[753] = 0.05382373f;
      sa[754] = 0.0012806635f;
      sa[755] = 0.0028197463f;
      sa[756] = -0.14452618f;
      sa[757] = 0.21912386f;
      sa[758] = -0.19328354f;
      sa[759] = 0.13913193f;
      sa[760] = -0.12566416f;
      sa[761] = 0.028481891f;
      sa[762] = -0.1358952f;
      sa[763] = 0.053567957f;
      sa[764] = 0.13065371f;
      sa[765] = -0.12318943f;
      sa[766] = -0.23480526f;
      sa[767] = -0.108214706f;
      sa[768] = -0.15014145f;
      sa[769] = -0.2605051f;
      sa[770] = -0.01550427f;
      sa[771] = -0.07195713f;
      sa[772] = -0.019822804f;
      sa[773] = -0.30962768f;
      sa[774] = -0.013524033f;
      sa[775] = 0.24468803f;
      sa[776] = -0.049835443f;
      sa[777] = 0.03535778f;
      sa[778] = 0.14916624f;
      sa[779] = -0.24735121f;
      sa[780] = -0.03630283f;
      sa[781] = -0.08027749f;
      sa[782] = 0.14758685f;
      sa[783] = -0.179225f;
      sa[784] = -0.13033088f;
      sa[785] = -0.11577273f;
      sa[786] = -0.07115316f;
      sa[787] = -0.2569235f;
      sa[788] = -0.24212787f;
      sa[789] = -0.02470126f;
      sa[790] = -0.024586463f;
      sa[791] = -0.096839756f;
      sa[792] = 0.183067f;
      sa[793] = -0.11181809f;
      sa[794] = -0.2616333f;
      sa[795] = -0.1215951f;
      sa[796] = 0.26592678f;
      sa[797] = -0.23707524f;
      sa[798] = -0.2547869f;
      sa[799] = -0.056433443f;
      sa[800] = 0.1321124f;
      sa[801] = 0.08537775f;
      sa[802] = 0.21656074f;
      sa[803] = 0.1774911f;
      sa[804] = 0.16933349f;
      sa[805] = 0.21430945f;
      sa[806] = 0.20944092f;
      sa[807] = 0.26303333f;
      sa[808] = -0.044248886f;
      sa[809] = -0.15997048f;
      sa[810] = 0.098542176f;
      sa[811] = -0.042191405f;
      sa[812] = 0.147317f;
      sa[813] = -0.25005233f;
      sa[814] = 0.09301724f;
      sa[815] = -0.059650432f;
      sa[816] = -0.21092379f;
      sa[817] = -0.17145501f;
      sa[818] = 0.00655579f;
      sa[819] = 0.07288896f;
      sa[820] = -0.3052354f;
      sa[821] = -0.19832546f;
      sa[822] = -0.3046158f;
      sa[823] = 0.11822187f;
      sa[824] = 0.099670686f;
      sa[825] = 0.4564189f;
      sa[826] = -0.25931275f;
      sa[827] = -0.2592992f;
      sa[828] = 0.07523788f;
      sa[829] = -0.14630339f;
      sa[830] = 0.15162975f;
      sa[831] = 0.2451323f;
      sa[832] = 0.1409643f;
      sa[833] = 0.10370061f;
      sa[834] = 0.21088646f;
      sa[835] = -0.01985673f;
      sa[836] = 0.17185676f;
      sa[837] = -0.17121507f;
      sa[838] = 0.13552558f;
      sa[839] = -0.13468745f;
      sa[840] = 0.20440848f;
      sa[841] = 0.13346176f;
      sa[842] = 0.18982518f;
      sa[843] = 0.12963447f;
      sa[844] = 0.04867296f;
      sa[845] = 0.17475767f;
      sa[846] = -0.24912359f;
      sa[847] = -0.17357385f;
      sa[848] = 0.180904f;
      sa[849] = 0.20659283f;
      sa[850] = -0.017213142f;
      sa[851] = 0.10438661f;
      sa[852] = 0.25978476f;
      sa[853] = 0.21209274f;
      sa[854] = 0.23781493f;
      sa[855] = 0.043141562f;
      sa[856] = 0.080264166f;
      sa[857] = -0.16183347f;
      sa[858] = 0.15712534f;
      sa[859] = 0.12336628f;
      sa[860] = 0.38467634f;
      sa[861] = -0.054120835f;
      sa[862] = -0.29854113f;
      sa[863] = -0.16198589f;
      sa[864] = -0.14456695f;
      sa[865] = 0.24367008f;
      sa[866] = -0.2421203f;
      sa[867] = -0.09242467f;
      sa[868] = -0.14998865f;
      sa[869] = 0.12985909f;
      sa[870] = -0.05837823f;
      sa[871] = 0.14936863f;
      sa[872] = 0.19727217f;
      sa[873] = -0.06630053f;
      sa[874] = -0.034800958f;
      sa[875] = -0.31404093f;
      sa[876] = -0.30909833f;
      sa[877] = -0.33395872f;
      sa[878] = -0.0772448f;
      sa[879] = 0.067792244f;
      sa[880] = -0.16334592f;
      sa[881] = -0.16973253f;
      sa[882] = 0.19833475f;
      sa[883] = 0.16897877f;
      sa[884] = -0.12124271f;
      sa[885] = -0.077241555f;
      sa[886] = 0.11131675f;
      sa[887] = -0.011782053f;
      sa[888] = -0.21386035f;
      sa[889] = -0.032823913f;
      sa[890] = -0.28603286f;
      sa[891] = 0.49284476f;
      sa[892] = 0.13011768f;
      sa[893] = 0.25194988f;
      sa[894] = -0.024147907f;
      sa[895] = 0.17823474f;
      sa[896] = -0.25827152f;
      sa[897] = 0.16977556f;
      sa[898] = 0.18337074f;
      sa[899] = 0.31715843f;
      sa[900] = -0.20618917f;
      sa[901] = 0.22338189f;
      sa[902] = -0.15751873f;
      sa[903] = -0.19116527f;
      sa[904] = 0.1677489f;
      sa[905] = 0.21862762f;
      sa[906] = -0.2287329f;
      sa[907] = -0.23252031f;
      sa[908] = -0.22522373f;
      sa[909] = -0.0028061022f;
      sa[910] = 0.037269764f;
      sa[911] = -0.26190704f;
      sa[912] = 0.0051967897f;
      sa[913] = 0.09687059f;
      sa[914] = -0.14037257f;
      sa[915] = 0.04599038f;
      sa[916] = 0.32020167f;
      sa[917] = 0.021489378f;
      sa[918] = 0.08605596f;
      sa[919] = 0.2296727f;
      sa[920] = 0.13338454f;
      sa[921] = -0.09385683f;
      sa[922] = -0.12944834f;
      sa[923] = -0.069973685f;
      sa[924] = -0.024361853f;
      sa[925] = -0.17304866f;
      sa[926] = 0.042882323f;
      sa[927] = -0.0021424454f;
      sa[928] = 0.24190658f;
      sa[929] = 0.120370954f;
      sa[930] = 0.16732676f;
      sa[931] = -0.063196555f;
      sa[932] = 0.19751798f;
      sa[933] = -0.08176858f;
      sa[934] = 0.23071934f;
      sa[935] = -0.15220352f;
      sa[936] = 0.13098565f;
      sa[937] = 0.116253644f;
      sa[938] = -0.16306685f;
      sa[939] = 0.11313452f;
      sa[940] = -0.07674223f;
      sa[941] = -0.34005544f;
      sa[942] = -0.26470894f;
      sa[943] = -0.26360518f;
      sa[944] = -0.15417102f;
      sa[945] = 0.010328951f;
      sa[946] = 0.02930299f;
      sa[947] = 0.119838685f;
      sa[948] = 0.082403064f;
      sa[949] = -0.21032842f;
      sa[950] = 0.06805735f;
      sa[951] = -0.18896502f;
      sa[952] = -0.30975458f;
      sa[953] = -0.26563025f;
      sa[954] = -0.1652792f;
      sa[955] = -0.009577371f;
      sa[956] = -0.0022757237f;
      sa[957] = 0.036985677f;
      sa[958] = 0.09303678f;
      sa[959] = -0.21311775f;
      sa[960] = 0.27024186f;
      sa[961] = -0.1645742f;
      sa[962] = 0.016843326f;
      sa[963] = -0.084672265f;
      sa[964] = -0.17394963f;
      sa[965] = 0.23647384f;
      sa[966] = -0.11338822f;
      sa[967] = -0.30476272f;
      sa[968] = 0.11034039f;
      sa[969] = -0.11770029f;
      sa[970] = 0.39292508f;
      sa[971] = 0.06381209f;
      sa[972] = -0.26313382f;
      sa[973] = -0.24717912f;
      sa[974] = -0.23640665f;
      sa[975] = -0.23798054f;
      sa[976] = -0.12607591f;
      sa[977] = 0.069234006f;
      sa[978] = -0.09175632f;
      sa[979] = 0.122123286f;
      sa[980] = 0.10492676f;
      sa[981] = -0.2101677f;
      sa[982] = 0.1515248f;
      sa[983] = 0.022316888f;
      sa[984] = -0.22429065f;
      sa[985] = 0.16620933f;
      sa[986] = -0.17366613f;
      sa[987] = 0.13469915f;
      sa[988] = 0.18905637f;
      sa[989] = 0.2360821f;
      sa[990] = 0.2741844f;
      sa[991] = -0.108609356f;
      sa[992] = -0.21839187f;
      sa[993] = -0.102922566f;
      sa[994] = -0.17957221f;
      sa[995] = -0.29521987f;
      sa[996] = 0.28900027f;
      sa[997] = 0.20369102f;
      sa[998] = 0.109553844f;
      sa[999] = 0.018457832f;
      sa[1000] = 0.035856362f;
      sa[1001] = 0.1991848f;
      sa[1002] = 0.28266212f;
      sa[1003] = -0.07929484f;
      sa[1004] = 0.24156433f;
      sa[1005] = -0.1513548f;
      sa[1006] = -0.27493712f;
      sa[1007] = -0.034030482f;
      sa[1008] = 0.25292602f;
      sa[1009] = 0.14885515f;
      sa[1010] = -0.008434687f;
      sa[1011] = 0.23599753f;
      sa[1012] = -0.032624394f;
      sa[1013] = 0.19280191f;
      sa[1014] = 0.28417313f;
      sa[1015] = -0.16925184f;
      sa[1016] = 0.26594776f;
      sa[1017] = 0.13913555f;
      sa[1018] = 0.0019333521f;
      sa[1019] = 0.16660416f;
      sa[1020] = -0.24563715f;
      sa[1021] = 0.085429706f;
      sa[1022] = 0.19699977f;
      sa[1023] = 0.19297746f;
      sa[1024] = 0.044147458f;
      sa[1025] = 0.24911462f;
      sa[1026] = 0.0692969f;
      sa[1027] = 0.080489144f;
      sa[1028] = 0.2840902f;
      sa[1029] = -0.012337981f;
      sa[1030] = -0.17387293f;
      sa[1031] = 0.0058550322f;
      sa[1032] = -0.2685245f;
      sa[1033] = 0.1003522f;
      sa[1034] = -0.1001579f;
      sa[1035] = 0.15312095f;
      sa[1036] = 0.29295665f;
      sa[1037] = 0.0751399f;
      sa[1038] = -0.14181073f;
      sa[1039] = 0.37990895f;
      sa[1040] = -0.045993306f;
      sa[1041] = 0.2513542f;
      sa[1042] = -0.21462817f;
      sa[1043] = -0.09716579f;
      sa[1044] = 0.17917949f;
      sa[1045] = 0.50393f;
      sa[1046] = 0.048130833f;
      sa[1047] = -0.5389043f;
      sa[1048] = 0.14230584f;
      sa[1049] = 3.2222515E-4f;
      sa[1050] = 0.069888845f;
      sa[1051] = -0.1637919f;
      sa[1052] = 0.1841427f;
      sa[1053] = 0.36712548f;
      sa[1054] = 0.3528908f;
      sa[1055] = 0.20449728f;
      sa[1056] = 0.3489588f;
      sa[1057] = -0.041944955f;
      sa[1058] = 0.3008195f;
      sa[1059] = -9.33846E-4f;
      sa[1060] = -0.04661559f;
      sa[1061] = 0.26104957f;
      sa[1062] = -0.020187225f;
      sa[1063] = 0.30776682f;
      sa[1064] = 0.11953686f;
      sa[1065] = -0.04722374f;
      sa[1066] = 0.14111568f;
      sa[1067] = -0.32032755f;
      sa[1068] = -0.108533345f;
      sa[1069] = 0.29384977f;
      sa[1070] = 0.032970734f;
      sa[1071] = 0.09421315f;
      sa[1072] = -0.14725344f;
      sa[1073] = 0.1615531f;
      sa[1074] = 0.2290056f;
      sa[1075] = -0.09750328f;
      sa[1076] = -0.18025881f;
      sa[1077] = 0.13084711f;
      sa[1078] = -0.1337007f;
      sa[1079] = 0.025587795f;
      sa[1080] = 0.1741182f;
      sa[1081] = 0.12776566f;
      sa[1082] = -0.37377626f;
      sa[1083] = 0.16035789f;
      sa[1084] = 0.15969147f;
      sa[1085] = -0.28220925f;
      sa[1086] = -0.30562183f;
      sa[1087] = -0.382434f;
      sa[1088] = -0.17591836f;
      sa[1089] = -0.060914118f;
      sa[1090] = -0.31240374f;
      sa[1091] = -0.13052204f;
      sa[1092] = -0.23493543f;
      sa[1093] = -0.29082286f;
      sa[1094] = 0.01565907f;
      sa[1095] = -0.33397827f;
      sa[1096] = 0.026344797f;
      sa[1097] = -0.24919076f;
      sa[1098] = 0.049371738f;
      sa[1099] = -0.037552882f;
      sa[1100] = -0.14295167f;
      sa[1101] = 0.059864417f;
      sa[1102] = -0.14228828f;
      sa[1103] = 0.10852976f;
      sa[1104] = -0.26805595f;
      sa[1105] = -0.17260511f;
      sa[1106] = -0.030733617f;
      sa[1107] = 5.7805282E-5f;
      sa[1108] = -0.22939083f;
      sa[1109] = 0.17199339f;
      sa[1110] = 0.11924752f;
      sa[1111] = -0.33925933f;
      sa[1112] = 0.2380452f;
      sa[1113] = 0.03510207f;
      sa[1114] = 0.10493528f;
      sa[1115] = 0.15521742f;
      sa[1116] = -0.016021553f;
      sa[1117] = 0.05102262f;
      sa[1118] = -0.042751092f;
      sa[1119] = -0.058977798f;
      sa[1120] = 0.15247752f;
      sa[1121] = 0.1824731f;
      sa[1122] = 0.23827903f;
      sa[1123] = 0.18420158f;
      sa[1124] = 0.074782036f;
      sa[1125] = -0.003998277f;
      sa[1126] = 0.26114738f;
      sa[1127] = 0.24062398f;
      sa[1128] = 0.08285641f;
      sa[1129] = 0.008867295f;
      sa[1130] = 0.25990734f;
      sa[1131] = 0.33012f;
      sa[1132] = 0.08155803f;
      sa[1133] = 0.019812657f;
      sa[1134] = 0.13622399f;
      sa[1135] = -0.22705778f;
      sa[1136] = -0.024816578f;
      sa[1137] = 0.1339949f;
      sa[1138] = -0.12949696f;
      sa[1139] = -0.012057681f;
      sa[1140] = 0.34973794f;
      sa[1141] = -0.19008924f;
      sa[1142] = 0.03801159f;
      sa[1143] = -0.07355569f;
      sa[1144] = -0.19750631f;
      sa[1145] = 0.20281456f;
      sa[1146] = 0.31417334f;
      sa[1147] = -0.0050720433f;
      sa[1148] = -0.02114792f;
      sa[1149] = -0.014866042f;
      sa[1150] = -0.32132557f;
      sa[1151] = -0.37387136f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_08_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_08_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.3174436f;
      sa[1] = -0.12107103f;
      sa[2] = -0.5727247f;
      sa[3] = -0.9750715f;
      sa[4] = 0.02308918f;
      sa[5] = 0.37133545f;
      sa[6] = 1.271431f;
      sa[7] = -0.66777754f;
      sa[8] = -0.98388624f;
      sa[9] = 0.7100604f;
      sa[10] = -0.202769f;
      sa[11] = 0.47460583f;
      sa[12] = -0.008942824f;
      sa[13] = -0.019277405f;
      sa[14] = -1.3218886f;
      sa[15] = 1.2093517f;
      sa[16] = 1.5779123f;
      sa[17] = -0.3302882f;
      sa[18] = 0.11493794f;
      sa[19] = -0.41904128f;
      sa[20] = 1.2017466f;
      sa[21] = 0.27502564f;
      sa[22] = -0.92356056f;
      sa[23] = 0.8177317f;
      sa[24] = -1.41857f;
      sa[25] = 0.4976589f;
      sa[26] = -0.2148966f;
      sa[27] = 1.5054284f;
      sa[28] = -1.3972229f;
      sa[29] = -0.6783051f;
      sa[30] = 0.3950533f;
      sa[31] = -0.60262793f;
      sa[32] = -1.0933293f;
      sa[33] = -1.5147253f;
      sa[34] = 0.0094498405f;
      sa[35] = 1.4578028f;
      sa[36] = -0.19938785f;
      sa[37] = -0.10777104f;
      sa[38] = 0.1831948f;
      sa[39] = 0.7943489f;
      sa[40] = -0.70004153f;
      sa[41] = -1.3515823f;
      sa[42] = -1.0950089f;
      sa[43] = -1.540456f;
      sa[44] = 0.17849782f;
      sa[45] = -1.1801142f;
      sa[46] = 1.1124958f;
      sa[47] = 1.3177333f;
      sa[48] = -1.2861288f;
      sa[49] = -1.0532882f;
      sa[50] = 0.48115557f;
      sa[51] = -0.3047408f;
      sa[52] = 0.86599946f;
      sa[53] = 0.70241594f;
      sa[54] = -0.19947858f;
      sa[55] = 1.1372172f;
      sa[56] = -0.92221856f;
      sa[57] = -1.0241673f;
      sa[58] = 0.1379666f;
      sa[59] = -0.2228794f;
      sa[60] = 1.3993826f;
      sa[61] = -0.5471559f;
      sa[62] = -0.27552652f;
      sa[63] = 0.65691996f;
      sa[64] = 1.322752f;
      sa[65] = -0.600076f;
      sa[66] = 0.69933075f;
      sa[67] = 1.5387597f;
      sa[68] = 0.72866327f;
      sa[69] = -1.1930841f;
      sa[70] = -1.4211624f;
      sa[71] = -0.44773155f;
      sa[72] = -1.3295757f;
      sa[73] = 1.3387108f;
      sa[74] = 1.4971175f;
      sa[75] = -0.14070858f;
      sa[76] = 0.9566615f;
      sa[77] = 0.43465912f;
      sa[78] = -1.3958747f;
      sa[79] = 0.9314535f;
      sa[80] = -0.8935568f;
      sa[81] = 0.13333708f;
      sa[82] = 0.8822935f;
      sa[83] = -0.55403125f;
      sa[84] = -1.6406757f;
      sa[85] = -1.245134f;
      sa[86] = 0.35558635f;
      sa[87] = 1.140288f;
      sa[88] = -1.5885873f;
      sa[89] = -0.64873654f;
      sa[90] = -1.0624864f;
      sa[91] = 1.5006777f;
      sa[92] = -0.22873977f;
      sa[93] = 0.4355168f;
      sa[94] = -1.518053f;
      sa[95] = -0.15246762f;
      sa[96] = -0.9387758f;
      sa[97] = 0.23001039f;
      sa[98] = -0.05180186f;
      sa[99] = 0.33972934f;
      sa[100] = -1.2458804f;
      sa[101] = -0.47625557f;
      sa[102] = 1.164783f;
      sa[103] = 0.13414432f;
      sa[104] = -0.3192859f;
      sa[105] = -0.6976627f;
      sa[106] = 1.4391321f;
      sa[107] = 1.236709f;
      sa[108] = 0.9682663f;
      sa[109] = 0.31771466f;
      sa[110] = 0.8180617f;
      sa[111] = -0.85728276f;
      sa[112] = -1.1779705f;
      sa[113] = 0.38653544f;
      sa[114] = 0.050081182f;
      sa[115] = -0.36618224f;
      sa[116] = 1.2308282f;
      sa[117] = 0.041515037f;
      sa[118] = -1.4306977f;
      sa[119] = -0.7220474f;
      sa[120] = -0.37270263f;
      sa[121] = 1.057294f;
      sa[122] = -0.06987854f;
      sa[123] = 0.36305216f;
      sa[124] = -0.71495855f;
      sa[125] = 0.81005096f;
      sa[126] = -1.0682815f;
      sa[127] = 0.3746186f;
      sa[128] = -0.93658406f;
      sa[129] = 0.80350703f;
      sa[130] = -0.4090285f;
      sa[131] = 0.8067766f;
      sa[132] = 0.51216f;
      sa[133] = 0.78002536f;
      sa[134] = 0.6323715f;
      sa[135] = -1.032124f;
      sa[136] = 0.59212327f;
      sa[137] = -0.655106f;
      sa[138] = 0.040321212f;
      sa[139] = 1.2902964f;
      sa[140] = -0.81967175f;
      sa[141] = -0.09149611f;
      sa[142] = 0.36949864f;
      sa[143] = -0.8176268f;
      sa[144] = 1.0103116f;
      sa[145] = -0.72950953f;
      sa[146] = 0.09176558f;
      sa[147] = -0.26705027f;
      sa[148] = -0.92767507f;
      sa[149] = 1.1059595f;
      sa[150] = -1.1697124f;
      sa[151] = -1.6110139f;
      sa[152] = 1.5567999f;
      sa[153] = -0.5799443f;
      sa[154] = 1.5227345f;
      sa[155] = -1.4928281f;
      sa[156] = -1.5396065f;
      sa[157] = -1.1864833f;
      sa[158] = -0.040609304f;
      sa[159] = -0.74050766f;
      sa[160] = 1.3209918f;
      sa[161] = -1.2087103f;
      sa[162] = 1.5327215f;
      sa[163] = -0.7579362f;
      sa[164] = 0.7274233f;
      sa[165] = -0.55629647f;
      sa[166] = 1.2640924f;
      sa[167] = -1.3549522f;
      sa[168] = 1.0958419f;
      sa[169] = -1.5160153f;
      sa[170] = 1.0528502f;
      sa[171] = 0.8489388f;
      sa[172] = 1.559667f;
      sa[173] = 1.5770866f;
      sa[174] = -0.08238497f;
      sa[175] = 0.074004084f;
      sa[176] = -0.75661796f;
      sa[177] = 0.13886042f;
      sa[178] = -1.1009282f;
      sa[179] = -0.21011654f;
      sa[180] = -1.3988541f;
      sa[181] = -0.950855f;
      sa[182] = 0.2644373f;
      sa[183] = -1.0401767f;
      sa[184] = 1.6147639f;
      sa[185] = 1.2560232f;
      sa[186] = -0.49739742f;
      sa[187] = -1.0353969f;
      sa[188] = -0.6722806f;
      sa[189] = -0.69550174f;
      sa[190] = -1.3829027f;
      sa[191] = -1.1947898f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_08 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_08_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_08_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_08_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_08_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_08_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


