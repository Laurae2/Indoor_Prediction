/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:27.517+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_03

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_03 > h2o_nn_32x6_Tanh_03.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_03.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_03", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_03 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_03_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_03_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_03_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_03.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_03_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.27956989247311825,0.13978494623655913,0.15053763440860216,0.27956989247311825,0.15053763440860216};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_03() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(4457691798209523824L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_03_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_03_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_03_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_03_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_03_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_03_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_03_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.020784546115337366;
      sa[1] = 0.061366735951039475;
      sa[2] = -0.003308229627363113;
      sa[3] = -0.03027614489873161;
      sa[4] = 0.022293999039404152;
      sa[5] = 0.002180835952558039;
      sa[6] = 0.0251159307314081;
      sa[7] = -0.0681072814086697;
      sa[8] = -0.03430211185555683;
      sa[9] = 0.025166361300982754;
      sa[10] = 0.020854128409060334;
      sa[11] = 0.039613285238457495;
      sa[12] = 0.005809821361093315;
      sa[13] = 0.0322061683732255;
      sa[14] = -0.07147349304162529;
      sa[15] = 0.006541768017574855;
      sa[16] = 0.047429524159175125;
      sa[17] = -0.015190344823484468;
      sa[18] = -0.04692133598485577;
      sa[19] = -0.0049275036632013365;
      sa[20] = 0.035893556768006894;
      sa[21] = -0.034994010112666674;
      sa[22] = 0.007679108323108829;
      sa[23] = 0.048697481736747025;
      sa[24] = -0.05394353770022533;
      sa[25] = 0.04860309598607852;
      sa[26] = -0.03461153469851101;
      sa[27] = 0.04120447435230774;
      sa[28] = -0.05517978423660406;
      sa[29] = -0.014570532434237324;
      sa[30] = 0.018278009385199367;
      sa[31] = -0.010269960894119889;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_03_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_03_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.020229237640012616;
      sa[1] = -0.04503087959448621;
      sa[2] = -0.033680692005379896;
      sa[3] = -0.024098785828362928;
      sa[4] = -0.019372727995359825;
    }
  }
}
class h2o_nn_32x6_Tanh_03_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_03_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_03_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.023952128f;
      sa[1] = 0.19947019f;
      sa[2] = 0.15820782f;
      sa[3] = 0.2012853f;
      sa[4] = -0.20957302f;
      sa[5] = -0.16250613f;
      sa[6] = -0.040546656f;
      sa[7] = 0.15441604f;
      sa[8] = 0.098407455f;
      sa[9] = -0.21685433f;
      sa[10] = -0.1831844f;
      sa[11] = -0.14699657f;
      sa[12] = 0.111000486f;
      sa[13] = -0.20511414f;
      sa[14] = -0.11310763f;
      sa[15] = -0.049625408f;
      sa[16] = 0.08257254f;
      sa[17] = 0.11999735f;
      sa[18] = -0.19695866f;
      sa[19] = 0.32261077f;
      sa[20] = 0.20660178f;
      sa[21] = -0.36495933f;
      sa[22] = 0.2095475f;
      sa[23] = -0.24144138f;
      sa[24] = 0.31905052f;
      sa[25] = 0.149457f;
      sa[26] = -0.24178028f;
      sa[27] = 0.14094944f;
      sa[28] = 0.22067621f;
      sa[29] = -0.29557663f;
      sa[30] = -0.16120777f;
      sa[31] = 0.070173204f;
      sa[32] = 0.22200486f;
      sa[33] = -0.2534112f;
      sa[34] = 0.020215547f;
      sa[35] = -0.1362758f;
      sa[36] = 0.080768816f;
      sa[37] = 0.17536527f;
      sa[38] = -0.060296062f;
      sa[39] = 0.08151352f;
      sa[40] = 0.027864091f;
      sa[41] = -0.101018585f;
      sa[42] = -0.13978985f;
      sa[43] = 0.04011752f;
      sa[44] = 0.20963594f;
      sa[45] = -0.28345782f;
      sa[46] = 0.06997882f;
      sa[47] = -0.081232265f;
      sa[48] = 0.17935477f;
      sa[49] = 0.1763849f;
      sa[50] = 0.15844828f;
      sa[51] = -0.32968268f;
      sa[52] = -0.17898032f;
      sa[53] = 0.1079874f;
      sa[54] = 0.21237381f;
      sa[55] = 0.12746003f;
      sa[56] = -0.17040278f;
      sa[57] = -0.26353475f;
      sa[58] = 0.26391977f;
      sa[59] = -0.120165884f;
      sa[60] = -0.22092251f;
      sa[61] = 0.19225465f;
      sa[62] = 0.10735273f;
      sa[63] = 0.052794784f;
      sa[64] = 0.102983795f;
      sa[65] = 0.09870666f;
      sa[66] = -0.022602987f;
      sa[67] = 0.0796486f;
      sa[68] = -0.14124836f;
      sa[69] = -0.0027098362f;
      sa[70] = -0.06377795f;
      sa[71] = 0.367288f;
      sa[72] = -0.11528647f;
      sa[73] = 0.27502084f;
      sa[74] = -0.19736214f;
      sa[75] = 0.041127633f;
      sa[76] = -0.1848588f;
      sa[77] = -0.028872505f;
      sa[78] = -0.059655745f;
      sa[79] = 0.10306703f;
      sa[80] = -0.18694156f;
      sa[81] = -0.05721219f;
      sa[82] = -0.023825152f;
      sa[83] = 0.17970373f;
      sa[84] = 0.014648364f;
      sa[85] = -0.11891124f;
      sa[86] = 0.16327886f;
      sa[87] = 0.25863025f;
      sa[88] = 0.27938995f;
      sa[89] = 0.114844576f;
      sa[90] = -0.16887349f;
      sa[91] = 0.15693958f;
      sa[92] = 0.12927239f;
      sa[93] = -0.18147045f;
      sa[94] = -0.16653131f;
      sa[95] = -0.26747128f;
      sa[96] = 0.11172007f;
      sa[97] = 0.021704158f;
      sa[98] = 0.15833196f;
      sa[99] = -0.10135359f;
      sa[100] = -0.002038988f;
      sa[101] = -0.14197753f;
      sa[102] = -0.18823072f;
      sa[103] = -0.0391285f;
      sa[104] = -0.03608657f;
      sa[105] = -0.18004282f;
      sa[106] = -0.15009207f;
      sa[107] = 0.17233354f;
      sa[108] = 0.21489045f;
      sa[109] = -0.13099505f;
      sa[110] = -0.17837082f;
      sa[111] = 0.08915288f;
      sa[112] = 0.14231169f;
      sa[113] = 0.060175378f;
      sa[114] = -0.14735118f;
      sa[115] = -0.015928578f;
      sa[116] = -0.21232153f;
      sa[117] = 0.041713875f;
      sa[118] = -0.21171331f;
      sa[119] = -0.13749902f;
      sa[120] = 0.20909551f;
      sa[121] = 0.24202959f;
      sa[122] = 0.28153282f;
      sa[123] = 0.28898174f;
      sa[124] = 0.31281894f;
      sa[125] = 0.33996636f;
      sa[126] = -0.32655072f;
      sa[127] = -0.23150568f;
      sa[128] = 0.08353756f;
      sa[129] = 0.18275428f;
      sa[130] = -0.11555935f;
      sa[131] = 0.30235648f;
      sa[132] = 0.14278188f;
      sa[133] = -0.25222373f;
      sa[134] = 0.037408285f;
      sa[135] = -0.08846963f;
      sa[136] = -0.23181498f;
      sa[137] = 0.010138056f;
      sa[138] = 0.15106364f;
      sa[139] = -0.03074175f;
      sa[140] = -0.11870101f;
      sa[141] = -0.16265486f;
      sa[142] = 0.22622396f;
      sa[143] = -0.21986327f;
      sa[144] = 0.1374047f;
      sa[145] = -0.0927149f;
      sa[146] = -0.22781624f;
      sa[147] = 0.10967325f;
      sa[148] = 0.16214666f;
      sa[149] = 0.22576769f;
      sa[150] = 0.3054448f;
      sa[151] = -0.20452528f;
      sa[152] = -0.021892417f;
      sa[153] = 0.26232153f;
      sa[154] = 0.2681446f;
      sa[155] = -0.1530877f;
      sa[156] = 0.15777104f;
      sa[157] = -0.12106984f;
      sa[158] = 0.12409205f;
      sa[159] = 0.1560235f;
      sa[160] = 0.14888087f;
      sa[161] = 0.27572542f;
      sa[162] = -0.20947263f;
      sa[163] = 0.08304546f;
      sa[164] = 0.21074854f;
      sa[165] = -0.063236065f;
      sa[166] = -0.074516036f;
      sa[167] = -0.076338746f;
      sa[168] = 0.2205539f;
      sa[169] = 0.38585708f;
      sa[170] = -0.012036393f;
      sa[171] = -0.013739086f;
      sa[172] = -0.034606595f;
      sa[173] = -0.13594872f;
      sa[174] = 0.044062447f;
      sa[175] = -0.2308167f;
      sa[176] = -0.006230279f;
      sa[177] = 0.008252447f;
      sa[178] = -0.09291718f;
      sa[179] = 0.047044907f;
      sa[180] = -0.047255848f;
      sa[181] = -0.33473593f;
      sa[182] = -0.091604084f;
      sa[183] = 0.05790447f;
      sa[184] = 0.2975117f;
      sa[185] = 0.15526402f;
      sa[186] = -0.27284133f;
      sa[187] = 0.14186156f;
      sa[188] = -0.04305287f;
      sa[189] = 0.17678338f;
      sa[190] = 0.1092394f;
      sa[191] = -0.115013294f;
      sa[192] = -0.14998926f;
      sa[193] = 0.18241993f;
      sa[194] = 0.05619158f;
      sa[195] = 0.2790436f;
      sa[196] = 0.22571081f;
      sa[197] = -0.047877483f;
      sa[198] = 0.13067804f;
      sa[199] = -0.104716845f;
      sa[200] = 0.0063557234f;
      sa[201] = -0.2619803f;
      sa[202] = 0.13500749f;
      sa[203] = 0.036198683f;
      sa[204] = -0.15608814f;
      sa[205] = 0.26868278f;
      sa[206] = 0.24715744f;
      sa[207] = 0.21729995f;
      sa[208] = -0.27334863f;
      sa[209] = -0.08413833f;
      sa[210] = -0.29244766f;
      sa[211] = -0.23910525f;
      sa[212] = 0.25010237f;
      sa[213] = -0.19168526f;
      sa[214] = -0.15298037f;
      sa[215] = -0.0029817838f;
      sa[216] = 0.109201305f;
      sa[217] = 0.039153587f;
      sa[218] = -0.17512019f;
      sa[219] = 0.3069334f;
      sa[220] = -0.19941022f;
      sa[221] = -0.0035568452f;
      sa[222] = 0.21656004f;
      sa[223] = 0.08277596f;
      sa[224] = 0.09097569f;
      sa[225] = 0.23892182f;
      sa[226] = -0.27851307f;
      sa[227] = 0.21054724f;
      sa[228] = 0.08238483f;
      sa[229] = 0.008348282f;
      sa[230] = 0.22469325f;
      sa[231] = -0.26806146f;
      sa[232] = -0.32117504f;
      sa[233] = -0.006876866f;
      sa[234] = 0.266705f;
      sa[235] = -0.35047275f;
      sa[236] = -0.03418509f;
      sa[237] = -0.19475745f;
      sa[238] = -0.1850478f;
      sa[239] = 0.18481304f;
      sa[240] = -0.016895253f;
      sa[241] = -0.2690937f;
      sa[242] = -2.787424E-4f;
      sa[243] = -0.24715775f;
      sa[244] = -0.23408869f;
      sa[245] = -0.13713834f;
      sa[246] = -0.3142059f;
      sa[247] = -0.07187055f;
      sa[248] = 0.29020897f;
      sa[249] = 0.27619585f;
      sa[250] = -0.23349571f;
      sa[251] = -0.13165529f;
      sa[252] = -0.18235472f;
      sa[253] = -0.2242629f;
      sa[254] = -0.29508373f;
      sa[255] = 0.25417846f;
      sa[256] = -0.17110035f;
      sa[257] = 0.24685186f;
      sa[258] = -0.25121704f;
      sa[259] = -0.12667145f;
      sa[260] = -0.16745299f;
      sa[261] = -0.04687321f;
      sa[262] = -0.17040078f;
      sa[263] = 0.32636863f;
      sa[264] = -0.14003184f;
      sa[265] = 0.044033602f;
      sa[266] = -0.28395528f;
      sa[267] = -0.20572117f;
      sa[268] = 0.13295208f;
      sa[269] = -0.14498796f;
      sa[270] = -0.0025225412f;
      sa[271] = 0.055664416f;
      sa[272] = -0.060540076f;
      sa[273] = -0.09713301f;
      sa[274] = 0.1199454f;
      sa[275] = -0.053734004f;
      sa[276] = 0.020187454f;
      sa[277] = -0.2820255f;
      sa[278] = -0.11664132f;
      sa[279] = 0.16407442f;
      sa[280] = -0.15160441f;
      sa[281] = 0.2895568f;
      sa[282] = -0.08230898f;
      sa[283] = 0.004048871f;
      sa[284] = 0.03649873f;
      sa[285] = -0.108611666f;
      sa[286] = 0.25175434f;
      sa[287] = 0.1267171f;
      sa[288] = -0.15544713f;
      sa[289] = -0.14488955f;
      sa[290] = -0.029934568f;
      sa[291] = -0.067714475f;
      sa[292] = 0.14447741f;
      sa[293] = -0.107170165f;
      sa[294] = 0.07706033f;
      sa[295] = 0.1594936f;
      sa[296] = 0.2125861f;
      sa[297] = 0.23503518f;
      sa[298] = 0.06494679f;
      sa[299] = -0.090188846f;
      sa[300] = -0.059114255f;
      sa[301] = -0.11619818f;
      sa[302] = 0.083062835f;
      sa[303] = 0.026493175f;
      sa[304] = -0.19609942f;
      sa[305] = -0.019272078f;
      sa[306] = 0.14764678f;
      sa[307] = -0.16231388f;
      sa[308] = 0.07478302f;
      sa[309] = 0.16886643f;
      sa[310] = 0.28203306f;
      sa[311] = 0.3337103f;
      sa[312] = -0.1794209f;
      sa[313] = -0.118867695f;
      sa[314] = -0.20278504f;
      sa[315] = 0.07678897f;
      sa[316] = -0.044837415f;
      sa[317] = -0.08534539f;
      sa[318] = 0.05943823f;
      sa[319] = 0.27828127f;
      sa[320] = -0.11388442f;
      sa[321] = 0.09554812f;
      sa[322] = 0.29152805f;
      sa[323] = -0.095689744f;
      sa[324] = -0.10595791f;
      sa[325] = 0.24299867f;
      sa[326] = -0.25376114f;
      sa[327] = 0.020411436f;
      sa[328] = -0.10264706f;
      sa[329] = 0.23665243f;
      sa[330] = -0.18138784f;
      sa[331] = -0.09438313f;
      sa[332] = -0.27909285f;
      sa[333] = 0.07335146f;
      sa[334] = -0.10002581f;
      sa[335] = 0.2582217f;
      sa[336] = -0.13023517f;
      sa[337] = -0.11769442f;
      sa[338] = 0.30328542f;
      sa[339] = -0.27559674f;
      sa[340] = -0.3079609f;
      sa[341] = -0.280254f;
      sa[342] = 0.17785616f;
      sa[343] = 0.06654824f;
      sa[344] = -0.19485462f;
      sa[345] = 0.12653935f;
      sa[346] = 0.1642493f;
      sa[347] = -0.23707373f;
      sa[348] = 0.33188736f;
      sa[349] = -0.28216127f;
      sa[350] = -0.22182591f;
      sa[351] = -0.015241451f;
      sa[352] = 0.17241935f;
      sa[353] = -0.07345979f;
      sa[354] = 0.076778084f;
      sa[355] = 0.010536333f;
      sa[356] = -0.107858166f;
      sa[357] = 0.17863922f;
      sa[358] = -0.31112856f;
      sa[359] = 0.006554873f;
      sa[360] = 0.08378318f;
      sa[361] = -0.039294615f;
      sa[362] = -0.16170096f;
      sa[363] = 0.12881042f;
      sa[364] = -0.12652117f;
      sa[365] = -0.22009026f;
      sa[366] = -0.015032296f;
      sa[367] = -0.36665916f;
      sa[368] = -0.16947736f;
      sa[369] = 0.27769166f;
      sa[370] = -0.20384724f;
      sa[371] = 0.11551802f;
      sa[372] = -0.011109312f;
      sa[373] = 0.27946335f;
      sa[374] = -0.12748793f;
      sa[375] = -0.34308723f;
      sa[376] = -0.3078998f;
      sa[377] = -0.22601695f;
      sa[378] = 0.29725718f;
      sa[379] = 0.19318625f;
      sa[380] = -0.09328126f;
      sa[381] = -0.075079486f;
      sa[382] = -0.03114633f;
      sa[383] = -0.13927983f;
      sa[384] = -0.123327784f;
      sa[385] = 0.04812383f;
      sa[386] = -0.25744212f;
      sa[387] = -0.25106445f;
      sa[388] = 0.088073924f;
      sa[389] = -0.0015247286f;
      sa[390] = -0.010587921f;
      sa[391] = -0.13109478f;
      sa[392] = 0.16648154f;
      sa[393] = 0.052565135f;
      sa[394] = 0.0676198f;
      sa[395] = 0.4037583f;
      sa[396] = 0.2683357f;
      sa[397] = -0.3718821f;
      sa[398] = 0.1413714f;
      sa[399] = 0.019377602f;
      sa[400] = 0.17848684f;
      sa[401] = 0.20295721f;
      sa[402] = -0.13019401f;
      sa[403] = 0.057675723f;
      sa[404] = 0.22313008f;
      sa[405] = -0.26179254f;
      sa[406] = -0.042327017f;
      sa[407] = 0.06015604f;
      sa[408] = -0.24474618f;
      sa[409] = -0.2910775f;
      sa[410] = -0.13323754f;
      sa[411] = 0.11115592f;
      sa[412] = -0.26325515f;
      sa[413] = -0.0014532699f;
      sa[414] = 0.16578053f;
      sa[415] = 0.34680182f;
      sa[416] = -0.1755489f;
      sa[417] = 0.047059525f;
      sa[418] = 0.009844978f;
      sa[419] = 0.3167521f;
      sa[420] = 0.22762483f;
      sa[421] = 0.24986404f;
      sa[422] = 0.2268486f;
      sa[423] = -0.007140448f;
      sa[424] = 0.068777345f;
      sa[425] = -0.08033085f;
      sa[426] = -0.32392687f;
      sa[427] = 0.14777513f;
      sa[428] = -0.09417433f;
      sa[429] = -0.29960728f;
      sa[430] = 0.2279346f;
      sa[431] = 0.04789705f;
      sa[432] = -0.05340396f;
      sa[433] = 0.14696296f;
      sa[434] = 0.21952713f;
      sa[435] = 0.05430006f;
      sa[436] = -0.27893677f;
      sa[437] = -0.24697009f;
      sa[438] = -0.01965562f;
      sa[439] = -0.0857831f;
      sa[440] = 0.29325905f;
      sa[441] = -0.26905787f;
      sa[442] = 0.018971534f;
      sa[443] = 0.10983214f;
      sa[444] = -0.18886591f;
      sa[445] = 0.075890414f;
      sa[446] = 0.23174036f;
      sa[447] = 0.010217784f;
      sa[448] = 0.17182757f;
      sa[449] = 0.20631388f;
      sa[450] = -0.06954771f;
      sa[451] = 0.1478592f;
      sa[452] = 0.18434422f;
      sa[453] = -0.053826932f;
      sa[454] = -0.16310067f;
      sa[455] = -0.10322344f;
      sa[456] = -0.041720707f;
      sa[457] = 0.032718986f;
      sa[458] = -0.21037363f;
      sa[459] = 0.17921641f;
      sa[460] = 0.22340637f;
      sa[461] = 0.27249897f;
      sa[462] = 0.05607391f;
      sa[463] = 0.18547069f;
      sa[464] = -0.29589868f;
      sa[465] = 0.12174988f;
      sa[466] = 0.0733292f;
      sa[467] = 0.19066548f;
      sa[468] = 0.050420687f;
      sa[469] = 0.25602365f;
      sa[470] = 0.19988292f;
      sa[471] = -0.0014475533f;
      sa[472] = -0.018636791f;
      sa[473] = -0.10800343f;
      sa[474] = -0.015201554f;
      sa[475] = 0.0217671f;
      sa[476] = 0.23964927f;
      sa[477] = -0.18478064f;
      sa[478] = 0.0956769f;
      sa[479] = -0.13708606f;
      sa[480] = -0.28811136f;
      sa[481] = -0.18509592f;
      sa[482] = -0.22386278f;
      sa[483] = 0.13634345f;
      sa[484] = 0.19172968f;
      sa[485] = 0.0846221f;
      sa[486] = -0.013615801f;
      sa[487] = -0.064362064f;
      sa[488] = -0.207968f;
      sa[489] = 0.05038572f;
      sa[490] = -0.019726073f;
      sa[491] = -0.26989394f;
      sa[492] = 0.24993408f;
      sa[493] = 0.22848903f;
      sa[494] = -0.2347424f;
      sa[495] = 0.035740264f;
      sa[496] = -0.027540727f;
      sa[497] = 0.027254354f;
      sa[498] = 0.13997653f;
      sa[499] = 0.084895596f;
      sa[500] = -0.08612145f;
      sa[501] = -0.05419408f;
      sa[502] = 0.28849125f;
      sa[503] = 0.11984006f;
      sa[504] = -0.06661881f;
      sa[505] = -0.18088695f;
      sa[506] = 0.1534262f;
      sa[507] = -0.08181151f;
      sa[508] = 0.10159158f;
      sa[509] = 0.17744559f;
      sa[510] = 0.13623102f;
      sa[511] = 0.05755439f;
      sa[512] = 0.08198595f;
      sa[513] = -0.03700594f;
      sa[514] = 0.25148287f;
      sa[515] = -0.2352028f;
      sa[516] = -0.024792721f;
      sa[517] = 0.017531198f;
      sa[518] = 0.059268113f;
      sa[519] = -0.07145435f;
      sa[520] = 0.2051194f;
      sa[521] = 0.14353628f;
      sa[522] = 0.06768831f;
      sa[523] = 0.07188145f;
      sa[524] = 0.1927445f;
      sa[525] = 0.19609267f;
      sa[526] = -0.0013840543f;
      sa[527] = -0.052549753f;
      sa[528] = -0.08009644f;
      sa[529] = 0.10079374f;
      sa[530] = -0.19638237f;
      sa[531] = 0.2257856f;
      sa[532] = 0.123864144f;
      sa[533] = 0.12948018f;
      sa[534] = 0.103808366f;
      sa[535] = -0.049305733f;
      sa[536] = 0.059514433f;
      sa[537] = -0.18040982f;
      sa[538] = 0.26569703f;
      sa[539] = 0.32484633f;
      sa[540] = -0.282078f;
      sa[541] = -0.15003653f;
      sa[542] = -0.09843815f;
      sa[543] = -0.1577489f;
      sa[544] = 0.11603571f;
      sa[545] = 0.12876058f;
      sa[546] = 0.07964f;
      sa[547] = 0.14053495f;
      sa[548] = 0.0632259f;
      sa[549] = 0.124388166f;
      sa[550] = -0.047672685f;
      sa[551] = -0.06239868f;
      sa[552] = 0.09096457f;
      sa[553] = 0.010955195f;
      sa[554] = -0.0904429f;
      sa[555] = -0.108584f;
      sa[556] = -0.14579076f;
      sa[557] = -0.20789185f;
      sa[558] = -0.18928695f;
      sa[559] = 0.075627446f;
      sa[560] = -0.30012006f;
      sa[561] = -0.14018017f;
      sa[562] = 0.16422011f;
      sa[563] = -0.13601835f;
      sa[564] = 0.25165337f;
      sa[565] = 0.018356143f;
      sa[566] = 0.2878897f;
      sa[567] = -0.072580166f;
      sa[568] = -0.06184967f;
      sa[569] = 0.013718075f;
      sa[570] = 0.008365414f;
      sa[571] = -0.058190513f;
      sa[572] = -0.058245517f;
      sa[573] = 0.18716198f;
      sa[574] = 0.14077006f;
      sa[575] = -0.3397587f;
      sa[576] = -0.13088456f;
      sa[577] = -0.0015350806f;
      sa[578] = 0.1352553f;
      sa[579] = -0.05438008f;
      sa[580] = 0.09787651f;
      sa[581] = -0.12006024f;
      sa[582] = 0.112407625f;
      sa[583] = 0.037852455f;
      sa[584] = 0.11265593f;
      sa[585] = 0.1436843f;
      sa[586] = -0.210181f;
      sa[587] = -0.16354288f;
      sa[588] = 0.09050269f;
      sa[589] = 0.13385044f;
      sa[590] = 0.012803554f;
      sa[591] = 0.044285458f;
      sa[592] = -0.3079651f;
      sa[593] = -0.19646911f;
      sa[594] = -0.053156476f;
      sa[595] = 0.038729973f;
      sa[596] = 0.2560792f;
      sa[597] = -0.025752835f;
      sa[598] = 0.22933535f;
      sa[599] = 0.070600055f;
      sa[600] = -0.24283066f;
      sa[601] = 0.23591067f;
      sa[602] = -0.049032863f;
      sa[603] = 0.2395356f;
      sa[604] = 0.21752593f;
      sa[605] = 0.16061908f;
      sa[606] = 0.19729462f;
      sa[607] = 0.036334466f;
      sa[608] = -0.011542866f;
      sa[609] = 0.08641375f;
      sa[610] = 0.062644444f;
      sa[611] = -0.08553449f;
      sa[612] = -0.118465535f;
      sa[613] = 0.06520603f;
      sa[614] = 0.038363818f;
      sa[615] = -0.0054948605f;
      sa[616] = 0.0035648271f;
      sa[617] = -0.32432577f;
      sa[618] = -0.19396485f;
      sa[619] = -0.27992555f;
      sa[620] = -0.057881165f;
      sa[621] = -0.21832766f;
      sa[622] = -0.3281808f;
      sa[623] = -0.252209f;
      sa[624] = -0.060772177f;
      sa[625] = 0.22394627f;
      sa[626] = -0.013806652f;
      sa[627] = 0.1553227f;
      sa[628] = -0.30338848f;
      sa[629] = -0.1203396f;
      sa[630] = -0.10369194f;
      sa[631] = 0.28594968f;
      sa[632] = 0.08761473f;
      sa[633] = -0.17696984f;
      sa[634] = -0.23146181f;
      sa[635] = 0.093111075f;
      sa[636] = -0.15463684f;
      sa[637] = -0.109390646f;
      sa[638] = -0.09941672f;
      sa[639] = -0.17160822f;
      sa[640] = -0.14794633f;
      sa[641] = -0.30777565f;
      sa[642] = 0.14884815f;
      sa[643] = -0.36459297f;
      sa[644] = -0.09570562f;
      sa[645] = -0.33313236f;
      sa[646] = 0.36679608f;
      sa[647] = -0.14659399f;
      sa[648] = -0.039695412f;
      sa[649] = 0.031149995f;
      sa[650] = 0.030489976f;
      sa[651] = -0.12547122f;
      sa[652] = 0.063822575f;
      sa[653] = -0.12900566f;
      sa[654] = -0.16416693f;
      sa[655] = -0.18931265f;
      sa[656] = 0.098864645f;
      sa[657] = 0.18370984f;
      sa[658] = -0.24563761f;
      sa[659] = -0.15586728f;
      sa[660] = -0.21801385f;
      sa[661] = -0.06659354f;
      sa[662] = -0.26852337f;
      sa[663] = 0.17206633f;
      sa[664] = -0.110195264f;
      sa[665] = 0.33545533f;
      sa[666] = -0.06767378f;
      sa[667] = -0.24615052f;
      sa[668] = 0.26121512f;
      sa[669] = -0.1344522f;
      sa[670] = 0.10433564f;
      sa[671] = -0.007908836f;
      sa[672] = -0.28433725f;
      sa[673] = 0.15075706f;
      sa[674] = 0.20652743f;
      sa[675] = -0.27564675f;
      sa[676] = -0.068245076f;
      sa[677] = -0.18163708f;
      sa[678] = 0.22380015f;
      sa[679] = -0.046872772f;
      sa[680] = 0.050795216f;
      sa[681] = 0.076716885f;
      sa[682] = 0.07625935f;
      sa[683] = -0.089580916f;
      sa[684] = 0.038336676f;
      sa[685] = 0.00887547f;
      sa[686] = -0.15778264f;
      sa[687] = -0.19789077f;
      sa[688] = -0.24029174f;
      sa[689] = -0.24624543f;
      sa[690] = -0.022359164f;
      sa[691] = 0.16390106f;
      sa[692] = -0.13660327f;
      sa[693] = -0.15676947f;
      sa[694] = 0.3003793f;
      sa[695] = -0.06970064f;
      sa[696] = -0.12284756f;
      sa[697] = -0.18683381f;
      sa[698] = -0.21459569f;
      sa[699] = 0.33600327f;
      sa[700] = 0.1251181f;
      sa[701] = 0.09653823f;
      sa[702] = 0.19658154f;
      sa[703] = -0.24044883f;
      sa[704] = -0.257626f;
      sa[705] = -0.006835522f;
      sa[706] = -0.1142954f;
      sa[707] = 0.065411456f;
      sa[708] = -0.08413856f;
      sa[709] = -0.24280262f;
      sa[710] = 0.25841773f;
      sa[711] = -0.012641398f;
      sa[712] = 0.02107331f;
      sa[713] = 0.14365137f;
      sa[714] = 0.16080244f;
      sa[715] = 0.14041649f;
      sa[716] = 0.047561374f;
      sa[717] = 0.22301537f;
      sa[718] = -0.059602346f;
      sa[719] = 0.074663006f;
      sa[720] = -0.22402512f;
      sa[721] = 0.104954034f;
      sa[722] = -0.13656637f;
      sa[723] = 0.15419477f;
      sa[724] = 0.055993404f;
      sa[725] = -0.3120665f;
      sa[726] = -0.22067018f;
      sa[727] = -0.28936434f;
      sa[728] = -0.11689153f;
      sa[729] = -0.07963346f;
      sa[730] = 0.021712651f;
      sa[731] = -0.30416957f;
      sa[732] = 0.15468937f;
      sa[733] = 0.17090854f;
      sa[734] = -0.14926004f;
      sa[735] = 0.25574863f;
      sa[736] = -0.08056178f;
      sa[737] = 0.08190536f;
      sa[738] = -0.0818734f;
      sa[739] = -0.4348027f;
      sa[740] = -0.26312864f;
      sa[741] = -0.27417037f;
      sa[742] = 0.104710795f;
      sa[743] = 0.03810202f;
      sa[744] = 0.016573777f;
      sa[745] = -0.32287177f;
      sa[746] = 0.18251267f;
      sa[747] = -0.21898773f;
      sa[748] = -0.17065404f;
      sa[749] = -0.18900071f;
      sa[750] = 0.13963383f;
      sa[751] = 0.23529357f;
      sa[752] = -0.005452934f;
      sa[753] = 0.20432541f;
      sa[754] = -0.031479392f;
      sa[755] = 0.14481817f;
      sa[756] = -0.14842619f;
      sa[757] = 0.21331207f;
      sa[758] = -0.14649574f;
      sa[759] = -0.12587346f;
      sa[760] = -0.056942474f;
      sa[761] = 0.035548106f;
      sa[762] = -0.09085245f;
      sa[763] = 0.22996983f;
      sa[764] = 0.07043959f;
      sa[765] = -0.032988835f;
      sa[766] = -0.1492084f;
      sa[767] = 0.03977721f;
      sa[768] = -0.20206042f;
      sa[769] = -0.3148875f;
      sa[770] = -0.04665111f;
      sa[771] = 0.06611365f;
      sa[772] = 0.026997933f;
      sa[773] = -0.19475897f;
      sa[774] = -0.036917828f;
      sa[775] = 0.1518073f;
      sa[776] = -0.06274037f;
      sa[777] = 0.080717385f;
      sa[778] = 0.17917821f;
      sa[779] = -0.09306061f;
      sa[780] = -0.073462866f;
      sa[781] = -0.012173007f;
      sa[782] = 0.13354783f;
      sa[783] = -0.047981977f;
      sa[784] = -0.15127954f;
      sa[785] = -0.10702883f;
      sa[786] = -0.10034067f;
      sa[787] = -0.17632759f;
      sa[788] = -0.2254951f;
      sa[789] = 0.29894608f;
      sa[790] = -0.23880158f;
      sa[791] = -0.15879117f;
      sa[792] = 0.18128663f;
      sa[793] = 0.005402603f;
      sa[794] = -0.22439742f;
      sa[795] = -0.0021008463f;
      sa[796] = 0.22239725f;
      sa[797] = -0.13500994f;
      sa[798] = -0.2427589f;
      sa[799] = -0.19433647f;
      sa[800] = 0.21635461f;
      sa[801] = 0.10232867f;
      sa[802] = 0.24076647f;
      sa[803] = 0.16343665f;
      sa[804] = 0.29033467f;
      sa[805] = 0.39466384f;
      sa[806] = 0.34054595f;
      sa[807] = 0.278043f;
      sa[808] = 0.07607612f;
      sa[809] = -0.11332724f;
      sa[810] = 0.013969715f;
      sa[811] = 0.19362329f;
      sa[812] = 0.17160493f;
      sa[813] = -0.3054838f;
      sa[814] = 0.07165113f;
      sa[815] = -0.23501292f;
      sa[816] = -0.111042686f;
      sa[817] = -0.1370534f;
      sa[818] = -0.05041703f;
      sa[819] = -0.1025718f;
      sa[820] = -0.22719415f;
      sa[821] = -0.17218904f;
      sa[822] = -0.18613447f;
      sa[823] = 0.115237206f;
      sa[824] = 0.11521237f;
      sa[825] = 0.328206f;
      sa[826] = -0.2854262f;
      sa[827] = -0.31607458f;
      sa[828] = 0.089903586f;
      sa[829] = -0.07509593f;
      sa[830] = 0.13088502f;
      sa[831] = 0.22180639f;
      sa[832] = 0.12329582f;
      sa[833] = 0.103687614f;
      sa[834] = 0.19094838f;
      sa[835] = -0.12859735f;
      sa[836] = 0.19110467f;
      sa[837] = -0.17796406f;
      sa[838] = 0.11280925f;
      sa[839] = -0.20506726f;
      sa[840] = 0.25092322f;
      sa[841] = 0.17968032f;
      sa[842] = 0.21827228f;
      sa[843] = 0.06808502f;
      sa[844] = 0.066746734f;
      sa[845] = 0.16450329f;
      sa[846] = -0.23740634f;
      sa[847] = -0.07446259f;
      sa[848] = 0.21106267f;
      sa[849] = 0.21094044f;
      sa[850] = -0.016515285f;
      sa[851] = 0.05075279f;
      sa[852] = 0.26019323f;
      sa[853] = 0.13280497f;
      sa[854] = 0.26545444f;
      sa[855] = 0.08867638f;
      sa[856] = 0.114031285f;
      sa[857] = -0.13944605f;
      sa[858] = 0.17923185f;
      sa[859] = 0.09450195f;
      sa[860] = 0.31770614f;
      sa[861] = -0.1771367f;
      sa[862] = -0.15328561f;
      sa[863] = -0.02446664f;
      sa[864] = -0.15121533f;
      sa[865] = 0.2460802f;
      sa[866] = -0.12740418f;
      sa[867] = -0.06421412f;
      sa[868] = -0.16345532f;
      sa[869] = 0.18986802f;
      sa[870] = -0.030914558f;
      sa[871] = 0.18843426f;
      sa[872] = 0.25131413f;
      sa[873] = -0.03801075f;
      sa[874] = 0.05814571f;
      sa[875] = -0.24563976f;
      sa[876] = -0.28829756f;
      sa[877] = -0.26755822f;
      sa[878] = -0.027421108f;
      sa[879] = 0.18580143f;
      sa[880] = -0.105507225f;
      sa[881] = -0.08162734f;
      sa[882] = 0.114504516f;
      sa[883] = 0.18344785f;
      sa[884] = -0.13825132f;
      sa[885] = -0.11148593f;
      sa[886] = 0.09584047f;
      sa[887] = -0.023290705f;
      sa[888] = -0.09112464f;
      sa[889] = 0.07133241f;
      sa[890] = -0.3549167f;
      sa[891] = 0.39954188f;
      sa[892] = 0.14525454f;
      sa[893] = 0.24805367f;
      sa[894] = 0.014443009f;
      sa[895] = 0.21249399f;
      sa[896] = -0.19945103f;
      sa[897] = 0.2567299f;
      sa[898] = -0.036473025f;
      sa[899] = 0.19978282f;
      sa[900] = -0.16435272f;
      sa[901] = 0.04065434f;
      sa[902] = -0.24944535f;
      sa[903] = -0.078827605f;
      sa[904] = 0.15165399f;
      sa[905] = 0.12436276f;
      sa[906] = -0.26105523f;
      sa[907] = -0.32641843f;
      sa[908] = -0.25128105f;
      sa[909] = -0.005702376f;
      sa[910] = -0.0351503f;
      sa[911] = -0.15031168f;
      sa[912] = -0.03317125f;
      sa[913] = -0.0068296064f;
      sa[914] = -0.19259906f;
      sa[915] = -0.041883957f;
      sa[916] = 0.09689346f;
      sa[917] = -0.10791157f;
      sa[918] = 0.27319786f;
      sa[919] = -3.7316236E-4f;
      sa[920] = 0.13761728f;
      sa[921] = -0.07771158f;
      sa[922] = -0.12388047f;
      sa[923] = -0.14569871f;
      sa[924] = -0.09860452f;
      sa[925] = -0.26826465f;
      sa[926] = 0.15707971f;
      sa[927] = -0.29518256f;
      sa[928] = 0.20146963f;
      sa[929] = 0.087556496f;
      sa[930] = 0.080530815f;
      sa[931] = -0.08767558f;
      sa[932] = 0.24392982f;
      sa[933] = -0.06080697f;
      sa[934] = 0.22378714f;
      sa[935] = -0.16316299f;
      sa[936] = 0.1087095f;
      sa[937] = 0.19612403f;
      sa[938] = -0.09405823f;
      sa[939] = -0.101322085f;
      sa[940] = -0.019106854f;
      sa[941] = -0.2968215f;
      sa[942] = -0.21794012f;
      sa[943] = -0.09647336f;
      sa[944] = -0.21062323f;
      sa[945] = 0.08092317f;
      sa[946] = 0.16654904f;
      sa[947] = 0.19540995f;
      sa[948] = 0.04474511f;
      sa[949] = -0.21618772f;
      sa[950] = 0.047314927f;
      sa[951] = -0.052134532f;
      sa[952] = -0.1949931f;
      sa[953] = -0.1366754f;
      sa[954] = -0.29278812f;
      sa[955] = 0.008643458f;
      sa[956] = -0.021009173f;
      sa[957] = 0.058821093f;
      sa[958] = 0.10577214f;
      sa[959] = -0.104203984f;
      sa[960] = 0.3111118f;
      sa[961] = -0.07944975f;
      sa[962] = -0.06282349f;
      sa[963] = 0.033750877f;
      sa[964] = -0.18478793f;
      sa[965] = 0.24967654f;
      sa[966] = -0.10137832f;
      sa[967] = -0.23292804f;
      sa[968] = 0.0876311f;
      sa[969] = 0.093216576f;
      sa[970] = 0.29498675f;
      sa[971] = 0.022255527f;
      sa[972] = -0.22573788f;
      sa[973] = -0.24645929f;
      sa[974] = -0.326663f;
      sa[975] = -0.21218279f;
      sa[976] = -0.10928488f;
      sa[977] = 0.027766706f;
      sa[978] = -0.10509059f;
      sa[979] = 0.078887016f;
      sa[980] = 0.06238294f;
      sa[981] = -0.23817647f;
      sa[982] = 0.06771068f;
      sa[983] = -0.08242005f;
      sa[984] = -0.24068506f;
      sa[985] = 0.077450626f;
      sa[986] = -0.2285158f;
      sa[987] = 0.038623925f;
      sa[988] = 0.12287259f;
      sa[989] = 0.18374966f;
      sa[990] = 0.34172353f;
      sa[991] = -0.1332127f;
      sa[992] = -0.19722542f;
      sa[993] = -0.06490408f;
      sa[994] = -0.16220991f;
      sa[995] = -0.3045165f;
      sa[996] = 0.20931098f;
      sa[997] = 0.13016199f;
      sa[998] = 0.16654292f;
      sa[999] = 0.14814897f;
      sa[1000] = 0.030612884f;
      sa[1001] = 0.22194721f;
      sa[1002] = 0.25653565f;
      sa[1003] = -0.10816207f;
      sa[1004] = 0.1898007f;
      sa[1005] = -0.27931374f;
      sa[1006] = -0.07586199f;
      sa[1007] = 0.061659865f;
      sa[1008] = 0.24043591f;
      sa[1009] = 0.07707712f;
      sa[1010] = -0.042599395f;
      sa[1011] = 0.28139257f;
      sa[1012] = -0.07231839f;
      sa[1013] = 0.16173826f;
      sa[1014] = 0.25592527f;
      sa[1015] = -0.27624226f;
      sa[1016] = 0.28594738f;
      sa[1017] = 0.088673346f;
      sa[1018] = -0.026374761f;
      sa[1019] = 0.1115898f;
      sa[1020] = -0.23021397f;
      sa[1021] = 0.09749481f;
      sa[1022] = 0.22392483f;
      sa[1023] = 0.10115677f;
      sa[1024] = -0.01334101f;
      sa[1025] = 0.12695642f;
      sa[1026] = 0.13566819f;
      sa[1027] = 0.18691991f;
      sa[1028] = 0.2955011f;
      sa[1029] = -0.027620537f;
      sa[1030] = -0.1704439f;
      sa[1031] = -0.047256224f;
      sa[1032] = -0.25318652f;
      sa[1033] = 0.026437243f;
      sa[1034] = -0.043472018f;
      sa[1035] = -0.22798137f;
      sa[1036] = 0.26476985f;
      sa[1037] = 0.04364647f;
      sa[1038] = -0.17595974f;
      sa[1039] = 0.2750644f;
      sa[1040] = -0.018105887f;
      sa[1041] = 0.11594118f;
      sa[1042] = -0.23006462f;
      sa[1043] = -0.06536199f;
      sa[1044] = 0.20760766f;
      sa[1045] = 0.23233262f;
      sa[1046] = -0.2168435f;
      sa[1047] = -0.20927224f;
      sa[1048] = 0.14134683f;
      sa[1049] = -0.12748842f;
      sa[1050] = 0.015759539f;
      sa[1051] = -0.24690315f;
      sa[1052] = 0.16107759f;
      sa[1053] = 0.2963112f;
      sa[1054] = 0.19495316f;
      sa[1055] = -0.0037864884f;
      sa[1056] = 0.2610808f;
      sa[1057] = -0.20368223f;
      sa[1058] = 0.20963177f;
      sa[1059] = -0.21950194f;
      sa[1060] = -0.30232882f;
      sa[1061] = 0.005826528f;
      sa[1062] = 0.2727804f;
      sa[1063] = -0.022548176f;
      sa[1064] = 0.12466565f;
      sa[1065] = 5.9080933E-4f;
      sa[1066] = 0.18893394f;
      sa[1067] = -0.31871107f;
      sa[1068] = -0.29916087f;
      sa[1069] = 0.15063049f;
      sa[1070] = 0.13357104f;
      sa[1071] = 0.15574805f;
      sa[1072] = -0.22426216f;
      sa[1073] = 0.12906942f;
      sa[1074] = 0.10754384f;
      sa[1075] = -0.17939246f;
      sa[1076] = -0.15445788f;
      sa[1077] = 0.03510026f;
      sa[1078] = 0.060650043f;
      sa[1079] = 0.13172434f;
      sa[1080] = 0.1821315f;
      sa[1081] = 0.17737298f;
      sa[1082] = -0.27885056f;
      sa[1083] = -0.11918839f;
      sa[1084] = 0.23829538f;
      sa[1085] = -0.214173f;
      sa[1086] = -0.24825315f;
      sa[1087] = -0.18528774f;
      sa[1088] = -0.20978925f;
      sa[1089] = 0.040170677f;
      sa[1090] = -0.26056916f;
      sa[1091] = 0.081835836f;
      sa[1092] = -0.2401513f;
      sa[1093] = -0.27067262f;
      sa[1094] = 0.010110015f;
      sa[1095] = -0.1879771f;
      sa[1096] = 0.072190806f;
      sa[1097] = -0.14477877f;
      sa[1098] = 0.012797606f;
      sa[1099] = -0.07969244f;
      sa[1100] = -0.13424893f;
      sa[1101] = 0.123479776f;
      sa[1102] = -0.12854396f;
      sa[1103] = 0.26628444f;
      sa[1104] = -0.2464095f;
      sa[1105] = -0.09655675f;
      sa[1106] = -0.08116162f;
      sa[1107] = 0.21492876f;
      sa[1108] = -0.20701087f;
      sa[1109] = 0.22029178f;
      sa[1110] = 0.15234756f;
      sa[1111] = -0.24177808f;
      sa[1112] = 0.18450882f;
      sa[1113] = 0.2581849f;
      sa[1114] = 0.01263026f;
      sa[1115] = 0.16344795f;
      sa[1116] = -0.012389246f;
      sa[1117] = -0.20408438f;
      sa[1118] = -0.23358528f;
      sa[1119] = -0.050368484f;
      sa[1120] = 0.20055093f;
      sa[1121] = 0.057339393f;
      sa[1122] = 0.23281798f;
      sa[1123] = 0.24339283f;
      sa[1124] = 0.03350923f;
      sa[1125] = -0.059869617f;
      sa[1126] = 0.17918034f;
      sa[1127] = 0.17221539f;
      sa[1128] = 0.011392998f;
      sa[1129] = -0.1318656f;
      sa[1130] = 0.18290925f;
      sa[1131] = 0.2686953f;
      sa[1132] = -0.22612904f;
      sa[1133] = -0.19674334f;
      sa[1134] = 0.2985156f;
      sa[1135] = -0.42871386f;
      sa[1136] = -0.006198898f;
      sa[1137] = 0.2360293f;
      sa[1138] = -0.064820826f;
      sa[1139] = 0.12415018f;
      sa[1140] = 0.18939649f;
      sa[1141] = -0.38244292f;
      sa[1142] = 0.13661653f;
      sa[1143] = -0.033200778f;
      sa[1144] = -0.25516897f;
      sa[1145] = 0.18678333f;
      sa[1146] = 0.21830685f;
      sa[1147] = -0.024551399f;
      sa[1148] = 0.0021415239f;
      sa[1149] = -0.0049936716f;
      sa[1150] = -0.21058694f;
      sa[1151] = -0.21127868f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_03_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_03_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2600406f;
      sa[1] = -0.1631978f;
      sa[2] = -0.5410594f;
      sa[3] = -0.98572445f;
      sa[4] = 0.05322522f;
      sa[5] = 0.23455136f;
      sa[6] = 1.2793597f;
      sa[7] = -0.68546355f;
      sa[8] = -0.9626473f;
      sa[9] = 0.7493616f;
      sa[10] = -0.1160683f;
      sa[11] = 0.4321488f;
      sa[12] = 0.12940319f;
      sa[13] = -0.008408296f;
      sa[14] = -1.32989f;
      sa[15] = 1.2041925f;
      sa[16] = 1.4950805f;
      sa[17] = -0.42769384f;
      sa[18] = 0.062429573f;
      sa[19] = -0.4049844f;
      sa[20] = 1.1706461f;
      sa[21] = 0.21188642f;
      sa[22] = -0.95623606f;
      sa[23] = 0.7883187f;
      sa[24] = -1.4277755f;
      sa[25] = 0.5247506f;
      sa[26] = -0.24699624f;
      sa[27] = 1.497819f;
      sa[28] = -1.364634f;
      sa[29] = -0.68366724f;
      sa[30] = 0.37652576f;
      sa[31] = -0.6150388f;
      sa[32] = -1.2049997f;
      sa[33] = -1.4771551f;
      sa[34] = 0.008374515f;
      sa[35] = 1.401318f;
      sa[36] = -0.2859664f;
      sa[37] = -0.057634946f;
      sa[38] = 0.23708415f;
      sa[39] = 0.77420807f;
      sa[40] = -0.73062176f;
      sa[41] = -1.3328433f;
      sa[42] = -1.0643008f;
      sa[43] = -1.5242729f;
      sa[44] = 0.056976087f;
      sa[45] = -1.315661f;
      sa[46] = 1.109097f;
      sa[47] = 1.2809329f;
      sa[48] = -1.3142606f;
      sa[49] = -1.2769426f;
      sa[50] = 0.4723178f;
      sa[51] = -0.2551851f;
      sa[52] = 0.8804309f;
      sa[53] = 0.88894564f;
      sa[54] = -0.1832615f;
      sa[55] = 1.1259216f;
      sa[56] = -0.98004687f;
      sa[57] = -1.1090109f;
      sa[58] = 0.14450008f;
      sa[59] = -0.25616464f;
      sa[60] = 1.411889f;
      sa[61] = -0.51640373f;
      sa[62] = -0.24524786f;
      sa[63] = 0.70230293f;
      sa[64] = 1.4964908f;
      sa[65] = -0.6268817f;
      sa[66] = 0.70916885f;
      sa[67] = 1.6532019f;
      sa[68] = 0.7558635f;
      sa[69] = -1.0751851f;
      sa[70] = -1.576099f;
      sa[71] = -0.3740028f;
      sa[72] = -1.3715913f;
      sa[73] = 1.1315858f;
      sa[74] = 1.3463734f;
      sa[75] = -0.12838432f;
      sa[76] = 0.976568f;
      sa[77] = 0.54079145f;
      sa[78] = -1.2222904f;
      sa[79] = 0.9162709f;
      sa[80] = -0.83805126f;
      sa[81] = 0.31394956f;
      sa[82] = 0.7808236f;
      sa[83] = -0.6466984f;
      sa[84] = -1.603274f;
      sa[85] = -1.27786f;
      sa[86] = 0.22763221f;
      sa[87] = 1.2218976f;
      sa[88] = -1.5930177f;
      sa[89] = -0.49750718f;
      sa[90] = -0.9914403f;
      sa[91] = 1.5187957f;
      sa[92] = -0.3077715f;
      sa[93] = 0.19809687f;
      sa[94] = -1.5510913f;
      sa[95] = -0.30241272f;
      sa[96] = -1.1211785f;
      sa[97] = 0.20033075f;
      sa[98] = -0.08839778f;
      sa[99] = 0.32866576f;
      sa[100] = -1.2875388f;
      sa[101] = -0.40658295f;
      sa[102] = 1.2469437f;
      sa[103] = 0.12952165f;
      sa[104] = -0.11062556f;
      sa[105] = -0.62024045f;
      sa[106] = 1.5582137f;
      sa[107] = 1.3025372f;
      sa[108] = 0.7075616f;
      sa[109] = 0.14910662f;
      sa[110] = 0.80261827f;
      sa[111] = -0.76372695f;
      sa[112] = -1.0979682f;
      sa[113] = 0.3495905f;
      sa[114] = 0.15851751f;
      sa[115] = -0.35971954f;
      sa[116] = 1.1516708f;
      sa[117] = -0.006801128f;
      sa[118] = -1.4013929f;
      sa[119] = -0.8428808f;
      sa[120] = -0.33033347f;
      sa[121] = 1.0737114f;
      sa[122] = 0.001842624f;
      sa[123] = 0.3668259f;
      sa[124] = -0.79836816f;
      sa[125] = 0.8905822f;
      sa[126] = -0.91638243f;
      sa[127] = 0.44191846f;
      sa[128] = -0.81709754f;
      sa[129] = 0.74787325f;
      sa[130] = -0.3843626f;
      sa[131] = 0.8374498f;
      sa[132] = 0.54794145f;
      sa[133] = 0.64925545f;
      sa[134] = 0.59330946f;
      sa[135] = -1.1320717f;
      sa[136] = 0.53439265f;
      sa[137] = -0.6988823f;
      sa[138] = -0.18242735f;
      sa[139] = 1.1927239f;
      sa[140] = -0.33959526f;
      sa[141] = 0.12592317f;
      sa[142] = 0.3876646f;
      sa[143] = -0.7467258f;
      sa[144] = 1.0189979f;
      sa[145] = -0.8868903f;
      sa[146] = 0.02399497f;
      sa[147] = -0.30790254f;
      sa[148] = -0.86647296f;
      sa[149] = 1.0610982f;
      sa[150] = -1.1596899f;
      sa[151] = -1.5363913f;
      sa[152] = 1.6794813f;
      sa[153] = -0.6911902f;
      sa[154] = 1.3202733f;
      sa[155] = -1.494536f;
      sa[156] = -1.5132259f;
      sa[157] = -1.0088971f;
      sa[158] = -0.19778642f;
      sa[159] = -0.7240145f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_03 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_03_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_03_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_03_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_03_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_03_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


