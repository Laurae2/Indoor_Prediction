/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:37.369+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_04

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_04 > h2o_rf_04.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_04.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_04", algorithm="drf")
public class h2o_rf_04 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_04.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_04_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};

  public h2o_rf_04() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4853137690845839764L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_04_Forest_0.score0(data,preds);
    h2o_rf_04_Forest_1.score0(data,preds);
    h2o_rf_04_Forest_2.score0(data,preds);
    h2o_rf_04_Forest_3.score0(data,preds);
    h2o_rf_04_Forest_4.score0(data,preds);
    h2o_rf_04_Forest_5.score0(data,preds);
    h2o_rf_04_Forest_6.score0(data,preds);
    h2o_rf_04_Forest_7.score0(data,preds);
    h2o_rf_04_Forest_8.score0(data,preds);
    h2o_rf_04_Forest_9.score0(data,preds);
    h2o_rf_04_Forest_10.score0(data,preds);
    h2o_rf_04_Forest_11.score0(data,preds);
    h2o_rf_04_Forest_12.score0(data,preds);
    h2o_rf_04_Forest_13.score0(data,preds);
    h2o_rf_04_Forest_14.score0(data,preds);
    h2o_rf_04_Forest_15.score0(data,preds);
    h2o_rf_04_Forest_16.score0(data,preds);
    h2o_rf_04_Forest_17.score0(data,preds);
    h2o_rf_04_Forest_18.score0(data,preds);
    h2o_rf_04_Forest_19.score0(data,preds);
    h2o_rf_04_Forest_20.score0(data,preds);
    h2o_rf_04_Forest_21.score0(data,preds);
    h2o_rf_04_Forest_22.score0(data,preds);
    h2o_rf_04_Forest_23.score0(data,preds);
    h2o_rf_04_Forest_24.score0(data,preds);
    h2o_rf_04_Forest_25.score0(data,preds);
    h2o_rf_04_Forest_26.score0(data,preds);
    h2o_rf_04_Forest_27.score0(data,preds);
    h2o_rf_04_Forest_28.score0(data,preds);
    h2o_rf_04_Forest_29.score0(data,preds);
    h2o_rf_04_Forest_30.score0(data,preds);
    h2o_rf_04_Forest_31.score0(data,preds);
    h2o_rf_04_Forest_32.score0(data,preds);
    h2o_rf_04_Forest_33.score0(data,preds);
    h2o_rf_04_Forest_34.score0(data,preds);
    h2o_rf_04_Forest_35.score0(data,preds);
    h2o_rf_04_Forest_36.score0(data,preds);
    h2o_rf_04_Forest_37.score0(data,preds);
    h2o_rf_04_Forest_38.score0(data,preds);
    h2o_rf_04_Forest_39.score0(data,preds);
    h2o_rf_04_Forest_40.score0(data,preds);
    h2o_rf_04_Forest_41.score0(data,preds);
    h2o_rf_04_Forest_42.score0(data,preds);
    h2o_rf_04_Forest_43.score0(data,preds);
    h2o_rf_04_Forest_44.score0(data,preds);
    h2o_rf_04_Forest_45.score0(data,preds);
    h2o_rf_04_Forest_46.score0(data,preds);
    h2o_rf_04_Forest_47.score0(data,preds);
    h2o_rf_04_Forest_48.score0(data,preds);
    h2o_rf_04_Forest_49.score0(data,preds);
    h2o_rf_04_Forest_50.score0(data,preds);
    h2o_rf_04_Forest_51.score0(data,preds);
    h2o_rf_04_Forest_52.score0(data,preds);
    h2o_rf_04_Forest_53.score0(data,preds);
    h2o_rf_04_Forest_54.score0(data,preds);
    h2o_rf_04_Forest_55.score0(data,preds);
    h2o_rf_04_Forest_56.score0(data,preds);
    h2o_rf_04_Forest_57.score0(data,preds);
    h2o_rf_04_Forest_58.score0(data,preds);
    h2o_rf_04_Forest_59.score0(data,preds);
    h2o_rf_04_Forest_60.score0(data,preds);
    h2o_rf_04_Forest_61.score0(data,preds);
    h2o_rf_04_Forest_62.score0(data,preds);
    h2o_rf_04_Forest_63.score0(data,preds);
    h2o_rf_04_Forest_64.score0(data,preds);
    h2o_rf_04_Forest_65.score0(data,preds);
    h2o_rf_04_Forest_66.score0(data,preds);
    h2o_rf_04_Forest_67.score0(data,preds);
    h2o_rf_04_Forest_68.score0(data,preds);
    h2o_rf_04_Forest_69.score0(data,preds);
    h2o_rf_04_Forest_70.score0(data,preds);
    h2o_rf_04_Forest_71.score0(data,preds);
    h2o_rf_04_Forest_72.score0(data,preds);
    h2o_rf_04_Forest_73.score0(data,preds);
    h2o_rf_04_Forest_74.score0(data,preds);
    h2o_rf_04_Forest_75.score0(data,preds);
    h2o_rf_04_Forest_76.score0(data,preds);
    h2o_rf_04_Forest_77.score0(data,preds);
    h2o_rf_04_Forest_78.score0(data,preds);
    h2o_rf_04_Forest_79.score0(data,preds);
    h2o_rf_04_Forest_80.score0(data,preds);
    h2o_rf_04_Forest_81.score0(data,preds);
    h2o_rf_04_Forest_82.score0(data,preds);
    h2o_rf_04_Forest_83.score0(data,preds);
    h2o_rf_04_Forest_84.score0(data,preds);
    h2o_rf_04_Forest_85.score0(data,preds);
    h2o_rf_04_Forest_86.score0(data,preds);
    h2o_rf_04_Forest_87.score0(data,preds);
    h2o_rf_04_Forest_88.score0(data,preds);
    h2o_rf_04_Forest_89.score0(data,preds);
    h2o_rf_04_Forest_90.score0(data,preds);
    h2o_rf_04_Forest_91.score0(data,preds);
    h2o_rf_04_Forest_92.score0(data,preds);
    h2o_rf_04_Forest_93.score0(data,preds);
    h2o_rf_04_Forest_94.score0(data,preds);
    h2o_rf_04_Forest_95.score0(data,preds);
    h2o_rf_04_Forest_96.score0(data,preds);
    h2o_rf_04_Forest_97.score0(data,preds);
    h2o_rf_04_Forest_98.score0(data,preds);
    h2o_rf_04_Forest_99.score0(data,preds);
    h2o_rf_04_Forest_100.score0(data,preds);
    h2o_rf_04_Forest_101.score0(data,preds);
    h2o_rf_04_Forest_102.score0(data,preds);
    h2o_rf_04_Forest_103.score0(data,preds);
    h2o_rf_04_Forest_104.score0(data,preds);
    h2o_rf_04_Forest_105.score0(data,preds);
    h2o_rf_04_Forest_106.score0(data,preds);
    h2o_rf_04_Forest_107.score0(data,preds);
    h2o_rf_04_Forest_108.score0(data,preds);
    h2o_rf_04_Forest_109.score0(data,preds);
    h2o_rf_04_Forest_110.score0(data,preds);
    h2o_rf_04_Forest_111.score0(data,preds);
    h2o_rf_04_Forest_112.score0(data,preds);
    h2o_rf_04_Forest_113.score0(data,preds);
    h2o_rf_04_Forest_114.score0(data,preds);
    h2o_rf_04_Forest_115.score0(data,preds);
    h2o_rf_04_Forest_116.score0(data,preds);
    h2o_rf_04_Forest_117.score0(data,preds);
    h2o_rf_04_Forest_118.score0(data,preds);
    h2o_rf_04_Forest_119.score0(data,preds);
    h2o_rf_04_Forest_120.score0(data,preds);
    h2o_rf_04_Forest_121.score0(data,preds);
    h2o_rf_04_Forest_122.score0(data,preds);
    h2o_rf_04_Forest_123.score0(data,preds);
    h2o_rf_04_Forest_124.score0(data,preds);
    h2o_rf_04_Forest_125.score0(data,preds);
    h2o_rf_04_Forest_126.score0(data,preds);
    h2o_rf_04_Forest_127.score0(data,preds);
    h2o_rf_04_Forest_128.score0(data,preds);
    h2o_rf_04_Forest_129.score0(data,preds);
    h2o_rf_04_Forest_130.score0(data,preds);
    h2o_rf_04_Forest_131.score0(data,preds);
    h2o_rf_04_Forest_132.score0(data,preds);
    h2o_rf_04_Forest_133.score0(data,preds);
    h2o_rf_04_Forest_134.score0(data,preds);
    h2o_rf_04_Forest_135.score0(data,preds);
    h2o_rf_04_Forest_136.score0(data,preds);
    h2o_rf_04_Forest_137.score0(data,preds);
    h2o_rf_04_Forest_138.score0(data,preds);
    h2o_rf_04_Forest_139.score0(data,preds);
    h2o_rf_04_Forest_140.score0(data,preds);
    h2o_rf_04_Forest_141.score0(data,preds);
    h2o_rf_04_Forest_142.score0(data,preds);
    h2o_rf_04_Forest_143.score0(data,preds);
    h2o_rf_04_Forest_144.score0(data,preds);
    h2o_rf_04_Forest_145.score0(data,preds);
    h2o_rf_04_Forest_146.score0(data,preds);
    h2o_rf_04_Forest_147.score0(data,preds);
    h2o_rf_04_Forest_148.score0(data,preds);
    h2o_rf_04_Forest_149.score0(data,preds);
    h2o_rf_04_Forest_150.score0(data,preds);
    h2o_rf_04_Forest_151.score0(data,preds);
    h2o_rf_04_Forest_152.score0(data,preds);
    h2o_rf_04_Forest_153.score0(data,preds);
    h2o_rf_04_Forest_154.score0(data,preds);
    h2o_rf_04_Forest_155.score0(data,preds);
    h2o_rf_04_Forest_156.score0(data,preds);
    h2o_rf_04_Forest_157.score0(data,preds);
    h2o_rf_04_Forest_158.score0(data,preds);
    h2o_rf_04_Forest_159.score0(data,preds);
    h2o_rf_04_Forest_160.score0(data,preds);
    h2o_rf_04_Forest_161.score0(data,preds);
    h2o_rf_04_Forest_162.score0(data,preds);
    h2o_rf_04_Forest_163.score0(data,preds);
    h2o_rf_04_Forest_164.score0(data,preds);
    h2o_rf_04_Forest_165.score0(data,preds);
    h2o_rf_04_Forest_166.score0(data,preds);
    h2o_rf_04_Forest_167.score0(data,preds);
    h2o_rf_04_Forest_168.score0(data,preds);
    h2o_rf_04_Forest_169.score0(data,preds);
    h2o_rf_04_Forest_170.score0(data,preds);
    h2o_rf_04_Forest_171.score0(data,preds);
    h2o_rf_04_Forest_172.score0(data,preds);
    h2o_rf_04_Forest_173.score0(data,preds);
    h2o_rf_04_Forest_174.score0(data,preds);
    h2o_rf_04_Forest_175.score0(data,preds);
    h2o_rf_04_Forest_176.score0(data,preds);
    h2o_rf_04_Forest_177.score0(data,preds);
    h2o_rf_04_Forest_178.score0(data,preds);
    h2o_rf_04_Forest_179.score0(data,preds);
    h2o_rf_04_Forest_180.score0(data,preds);
    h2o_rf_04_Forest_181.score0(data,preds);
    h2o_rf_04_Forest_182.score0(data,preds);
    h2o_rf_04_Forest_183.score0(data,preds);
    h2o_rf_04_Forest_184.score0(data,preds);
    h2o_rf_04_Forest_185.score0(data,preds);
    h2o_rf_04_Forest_186.score0(data,preds);
    h2o_rf_04_Forest_187.score0(data,preds);
    h2o_rf_04_Forest_188.score0(data,preds);
    h2o_rf_04_Forest_189.score0(data,preds);
    h2o_rf_04_Forest_190.score0(data,preds);
    h2o_rf_04_Forest_191.score0(data,preds);
    h2o_rf_04_Forest_192.score0(data,preds);
    h2o_rf_04_Forest_193.score0(data,preds);
    h2o_rf_04_Forest_194.score0(data,preds);
    h2o_rf_04_Forest_195.score0(data,preds);
    h2o_rf_04_Forest_196.score0(data,preds);
    h2o_rf_04_Forest_197.score0(data,preds);
    h2o_rf_04_Forest_198.score0(data,preds);
    h2o_rf_04_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_04 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_04_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_04_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_04_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_04_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_04_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_04_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[5 /* X6 */] <0.12628214f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21376419f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.48629993f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2589233f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.3139051f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.034069635f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.009433201f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12649234f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19041216f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.5240546f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <0.10948757f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[19 /* X20 */] <-0.52147126f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.59765625f ? 
                 (data[2 /* X3 */] <-0.19699204f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11912129f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011830366f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.460882f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008445925f ? 
            0.0f : 
             (data[35 /* X36 */] <0.28515625f ? 
                 (data[30 /* X31 */] <0.1318616f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.072631255f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[13 /* X14 */] <0.10914364f ? 
             (data[32 /* X33 */] <-0.4453125f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17510305f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06889086f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
             (data[29 /* X30 */] <0.060195986f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26934725f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.2999053f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49887046f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08926063f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.23079433f ? 
             (data[15 /* X16 */] <0.10468838f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22959073f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2881748f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7109375f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2776242f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13429832f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.35400307f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1678222f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19366865f ? 
         (data[35 /* X36 */] <-0.9277344f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.4338182f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.28636548f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15625422f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.1935032f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.058541346f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16800402f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (data[35 /* X36 */] <-0.18945312f ? 
            0.0f : 
             (data[26 /* X27 */] <0.031273335f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19853938f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.056429263f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.1718793f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15594874f ? 
             (data[32 /* X33 */] <-0.62109375f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.3923825f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5111968f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[19 /* X20 */] <-0.43773714f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47465327f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19786114f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.089067645f ? 
            1.0f : 
             (data[3 /* X4 */] <0.12230493f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[19 /* X20 */] <-0.3982625f ? 
             (data[15 /* X16 */] <0.103386655f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[19 /* X20 */] <-0.25830695f ? 
             (data[33 /* X34 */] <0.15384375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.37635145f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.012660331f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1294404f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31040478f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2551541f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[24 /* X25 */] <0.006672906f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.093579814f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0155811785f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24367169f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.061860215f ? 
             (data[18 /* X19 */] <0.049243845f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.25316522f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26780495f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13344724f ? 
             (data[10 /* X11 */] <-0.8188935f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.1601543f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.119140625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18326522f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13050152f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.175565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12649234f ? 
             (data[4 /* X5 */] <0.09748081f ? 
                 (data[12 /* X13 */] <0.14916058f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.28515625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22146015f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.07707824f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35899505f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21226484f ? 
                 (data[35 /* X36 */] <-0.9453125f ? 
                     (data[18 /* X19 */] <0.40647867f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7596117f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15953343f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.15998583f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.48937988f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.04966664f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.16073388f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.14987427f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11643524f ? 
                 (data[24 /* X25 */] <-0.23223498f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16200694f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07312148f ? 
             (data[35 /* X36 */] <0.21484375f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.057461333f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.21008827f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.12825815f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.140625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.025381427f ? 
         (data[3 /* X4 */] <-0.29360977f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                 (data[18 /* X19 */] <-0.0025688391f ? 
                     (data[35 /* X36 */] <-0.112335205f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.14797111f ? 
             (data[31 /* X32 */] <0.059856094f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <0.04561307f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.13886301f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.119140625f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17098427f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16750628f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.42920774f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.041370064f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18620284f ? 
             (data[19 /* X20 */] <-0.43654096f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06083675f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <0.14142002f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102735795f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.16890724f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (data[13 /* X14 */] <0.21278042f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22832331f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.034382597f ? 
            0.0f : 
             (data[15 /* X16 */] <0.054571852f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.041303817f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37459055f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.69140625f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5545174f ? 
                 (data[26 /* X27 */] <-0.041875828f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.334979f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.38310054f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11633903f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14689228f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2589233f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18458512f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.10678041f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23991372f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.79473424f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18742068f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.4233613f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[27 /* X28 */] <-0.28867936f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.0024733096f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08214991f ? 
            0.0f : 
             (data[17 /* X18 */] <0.021488504f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15625f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.086340375f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[27 /* X28 */] <0.02901339f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08214991f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29564306f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.112814784f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.32215014f ? 
                        1.0f : 
                        0.0f))) : 
             (data[18 /* X19 */] <0.32194218f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26780495f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30333796f ? 
                 (data[32 /* X33 */] <-0.8828125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.019732807f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09971338f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41396227f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
             (data[28 /* X29 */] <0.07189006f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.06604666f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[9 /* X10 */] <-0.2832185f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08882514f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.07871109f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.6634267f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24695015f ? 
             (data[6 /* X7 */] <0.08609587f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.421875f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[17 /* X18 */] <-0.4043583f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.24018022f ? 
             (data[35 /* X36 */] <-0.30859375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1389901f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3235402f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.312222f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24114132f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[17 /* X18 */] <-0.6065686f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13466181f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.091946416f ? 
                 (data[11 /* X12 */] <-0.2934054f ? 
                     (data[27 /* X28 */] <-0.0016270273f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.04614877f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.121166065f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11548531f ? 
            1.0f : 
             (data[20 /* X21 */] <0.22667155f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.09936844f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.04991054f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78515625f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.2598074f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.6749029f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.209596f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.08386073f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (data[21 /* X22 */] <0.073747575f ? 
            0.0f : 
            1.0f) : 
         (data[29 /* X30 */] <0.10803327f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.038961843f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12551604f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.5246251f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35358426f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22432962f ? 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25413573f ? 
                         (data[24 /* X25 */] <-0.45353913f ? 
                             (data[33 /* X34 */] <-0.26154f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18595788f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X2 */] <-0.17674822f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[12 /* X13 */] <0.20649341f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.24500054f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0887855f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.31811702f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08519465f ? 
                 (data[15 /* X16 */] <0.08751862f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14151745f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.052676003f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09083878f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (data[16 /* X17 */] <-0.6145284f ? 
            0.0f : 
            1.0f) : 
         (data[13 /* X14 */] <0.10914364f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19597925f ? 
                 (data[1 /* X2 */] <-0.3573381f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.06042963f ? 
                 (data[30 /* X31 */] <0.1296441f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25000155f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21791239f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[8 /* X9 */] <-0.028497629f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11741843f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15791735f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.097385205f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[34 /* X35 */] <-0.90838045f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24558665f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.28475028f ? 
                    0.0f : 
                    1.0f))) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[33 /* X34 */] <-0.9477165f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07453175f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09649682f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30869368f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.029805906f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11800569f ? 
             (data[33 /* X34 */] <-0.7151448f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16546111f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2759624f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1735217f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12496141f ? 
             (data[9 /* X10 */] <-0.13098165f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05320319f ? 
                 (data[14 /* X15 */] <0.10328122f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3311887f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7596117f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.045851376f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.08448001f ? 
             (data[29 /* X30 */] <0.10442744f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7109375f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06610442f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21414624f ? 
             (data[24 /* X25 */] <-0.11403845f ? 
                 (data[21 /* X22 */] <0.1315318f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.29748568f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[23 /* X24 */] <0.08379669f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22331743f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.78515625f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.488066f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25659746f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.56313753f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12363355f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18128838f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16894886f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.08929575f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.09817974f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33203125f ? 
             (data[35 /* X36 */] <0.16796875f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19008107f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0653651f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[13 /* X14 */] <0.08780665f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25621644f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (data[7 /* X8 */] <0.05852971f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14028649f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.06388117f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9744792f ? 
                     (data[20 /* X21 */] <0.13873324f ? 
                         (data[6 /* X7 */] <0.15625292f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
        0.024390243f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17442396f ? 
             (data[35 /* X36 */] <-0.28515625f ? 
                 (data[12 /* X13 */] <0.20911026f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.28515625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18341872f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19677769f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <0.056293976f ? 
                0.0f : 
                1.0f)) : 
        0.016666668f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17010646f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26814076f ? 
            0.0f : 
             (data[31 /* X32 */] <0.084248655f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.049975198f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.107587576f ? 
             (data[26 /* X27 */] <-0.013059491f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.032096855f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17578399f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[8 /* X9 */] <-0.14569053f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21803728f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.40805268f ? 
                 (data[12 /* X13 */] <0.13500378f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09610846f ? 
             (data[17 /* X18 */] <-0.54095066f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.13744955f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.09353675f ? 
                 (data[8 /* X9 */] <0.07705178f ? 
                     (data[15 /* X16 */] <0.09427456f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21101342f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.20804667f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.38196793f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1749217f ? 
                     (data[34 /* X35 */] <-0.8625707f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17704986f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26917103f ? 
             (data[8 /* X9 */] <-0.18916532f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.12554106f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.19411318f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04562988f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.15106376f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.04192647f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11336288f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14526816f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5269922f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16452454f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.11540213f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
            0.0f : 
             (data[23 /* X24 */] <0.07470014f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.08315896f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18341872f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22840193f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15105124f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09817873f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10468838f ? 
                             (data[26 /* X27 */] <0.16766156f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0062764026f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08736013f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
             (data[19 /* X20 */] <-0.43654096f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.003796794f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-1.0027195f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.0866541f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2765165f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35899505f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.25232595f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3977594f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05898445f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.1390846f ? 
                     (data[1 /* X2 */] <-0.3462262f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12421614f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2595874f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02813064f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.1111742f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19130076f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[25 /* X26 */] <-0.6159525f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.2746232f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.048399877f ? 
                     (data[32 /* X33 */] <-0.78125f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.29924998f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X2 */] <-0.31484637f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21336229f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.031761635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[18 /* X19 */] <-0.04347359f ? 
             (data[26 /* X27 */] <-0.14827462f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.09820272f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5356648f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.25830695f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15779366f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18683869f ? 
                 (data[26 /* X27 */] <0.002456998f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.09891106f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[24 /* X25 */] <-0.45605397f ? 
             (data[27 /* X28 */] <-0.079034396f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16464847f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46996558f ? 
                     (data[10 /* X11 */] <-0.9751699f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.54023f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2765165f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[32 /* X33 */] <0.37890625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18683869f ? 
                 (data[35 /* X36 */] <-0.9285712f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.01672633f ? 
            0.0f : 
             (data[32 /* X33 */] <0.22265625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07119274f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20867656f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.3923825f ? 
             (data[9 /* X10 */] <-0.08226587f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0753995f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6425781f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3645109f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48216903f ? 
                 (data[15 /* X16 */] <0.039601978f ? 
                     (data[24 /* X25 */] <-0.21857664f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10099675f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20527779f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19173439f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06932973f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0072448347f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.11639755f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46679688f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.47700518f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19838692f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.190182f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.18883166f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
        0.029850746f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.19632483f ? 
             (data[3 /* X4 */] <-0.041727662f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1015828f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.14028153f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29336238f ? 
             (data[23 /* X24 */] <0.028444627f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.1913878f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.19069414f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.14966452f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45446005f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17335775f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21321298f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06372352f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16286363f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.07149432f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13999121f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6425781f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33653572f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
                 (data[14 /* X15 */] <0.083287686f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.04786446f ? 
                        0.0f : 
                         (data[16 /* X17 */] <0.11014071f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[9 /* X10 */] <-0.024415875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.10099675f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19161767f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <0.04877543f ? 
             (data[9 /* X10 */] <-0.4750369f ? 
                 (data[30 /* X31 */] <0.14161558f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10308688f ? 
                 (data[29 /* X30 */] <0.06692686f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[35 /* X36 */] <-0.4765625f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.7548989f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.03023865f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12727942f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010406692f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1518192f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16821727f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.039402127f ? 
             (data[35 /* X36 */] <0.00148375f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49507028f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[10 /* X11 */] <-0.46679112f ? 
             (data[26 /* X27 */] <0.08447273f ? 
                 (data[11 /* X12 */] <-0.29486334f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27953717f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.088011004f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.13733894f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.05535541f ? 
                    1.0f : 
                    0.0f))) : 
        0.039215688f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08816498f ? 
        0.04347826f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2374144f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22633778f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15532707f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.082610406f ? 
            0.0f : 
             (data[6 /* X7 */] <0.14397131f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08083254f ? 
             (data[35 /* X36 */] <-0.6171875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28591716f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14470993f ? 
             (data[10 /* X11 */] <-0.38771328f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.265625f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.1875f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.117692664f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2632368f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17004389f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13718522f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14918742f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[11 /* X12 */] <-0.19037308f ? 
             (data[19 /* X20 */] <-0.43654096f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2503609f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.08696907f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20533155f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3226841f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.15633681f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[14 /* X15 */] <0.14326829f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.9277344f ? 
             (data[23 /* X24 */] <0.08783525f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.61538124f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.28626323f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26446226f ? 
            0.0f : 
             (data[34 /* X35 */] <0.43155518f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.14403373f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20425649f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[11 /* X12 */] <-0.20061994f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.023774436f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13032651f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10205666f ? 
            1.0f : 
             (data[21 /* X22 */] <0.16885702f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[14 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39728016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19293337f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1526922f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2580053f ? 
             (data[4 /* X5 */] <0.11903469f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16741106f ? 
                     (data[7 /* X8 */] <0.08755394f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15878925f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[33 /* X34 */] <0.10336309f ? 
             (data[22 /* X23 */] <0.13204548f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.018310964f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16436216f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07812276f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[33 /* X34 */] <0.35937217f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.43543082f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.52059305f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23713377f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15422496f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.09454476f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16576663f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3235402f ? 
            0.0f : 
             (data[22 /* X23 */] <0.13323663f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.114445746f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.09784965f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[33 /* X34 */] <-0.61598635f ? 
             (data[25 /* X26 */] <-0.2109785f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28003713f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16454455f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23845549f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X5 */] <0.09820272f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.17041367f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15562779f ? 
                    1.0f : 
                     (data[34 /* X35 */] <0.19105391f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
         (data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.095706016f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3507227f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.030666217f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11595286f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[19 /* X20 */] <-0.5501801f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22606172f ? 
             (data[17 /* X18 */] <-0.12849528f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19513422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.16289239f ? 
             (data[33 /* X34 */] <0.10336309f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.18699977f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06579829f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[29 /* X30 */] <0.17173618f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22001976f ? 
             (data[26 /* X27 */] <-0.07955873f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2169292f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[35 /* X36 */] <0.21484375f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1536416f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.10667805f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.6778306f ? 
                0.0f : 
                1.0f)) : 
        0.016393442f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27319756f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4837817f ? 
             (data[13 /* X14 */] <0.08780665f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[30 /* X31 */] <0.05840657f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10220496f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19156218f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.114042975f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13473704f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18915734f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[23 /* X24 */] <0.027256815f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3279175f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16579375f ? 
                 (data[5 /* X6 */] <0.07461553f ? 
                     (data[13 /* X14 */] <0.13124266f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.3095349f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20272851f ? 
            0.0f : 
             (data[5 /* X6 */] <0.20859706f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <0.10656656f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[18 /* X19 */] <-0.09255929f ? 
             (data[7 /* X8 */] <0.041115165f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18519793f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.06360388f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21006677f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[5 /* X6 */] <0.12771372f ? 
             (data[5 /* X6 */] <0.06989628f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.04141747f ? 
                 (data[5 /* X6 */] <0.13875432f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.23694026f ? 
                     (data[13 /* X14 */] <0.19830175f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[29 /* X30 */] <0.06500375f ? 
             (data[5 /* X6 */] <0.080414854f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22558302f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.108855784f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.13104941f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.2331216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
             (data[33 /* X34 */] <-0.46003482f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30229187f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[24 /* X25 */] <-0.735199f ? 
            1.0f : 
             (data[23 /* X24 */] <0.027494377f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21862608f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04237691f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08868157f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.14992154f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21883231f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[5 /* X6 */] <0.12800004f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.18149209f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.03652156f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15043326f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41865426f ? 
            0.0f : 
             (data[4 /* X5 */] <0.096036986f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.052438438f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.33282116f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.069697574f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16676486f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40865508f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.049350128f ? 
                     (data[20 /* X21 */] <0.113241084f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19140625f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.16307744f ? 
             (data[13 /* X14 */] <0.15562779f ? 
                 (data[34 /* X35 */] <-0.2746787f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46914396f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.1504414f ? 
                0.0f : 
                1.0f)) : 
        0.8888889f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.006781272f ? 
             (data[9 /* X10 */] <-0.8829171f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.16355498f ? 
             (data[33 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.37811235f ? 
                     (data[22 /* X23 */] <0.11810169f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-1.0933261f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08616941f ? 
             (data[9 /* X10 */] <-0.8830316f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10729184f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.3910853f ? 
                         (data[9 /* X10 */] <0.038001224f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1640411f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.042684294f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[33 /* X34 */] <0.07812276f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.010930833f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.5973024f ? 
             (data[15 /* X16 */] <0.10859357f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10385804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (data[12 /* X13 */] <0.14939848f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.17576392f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14048591f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0625f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[14 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.347042f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[34 /* X35 */] <-0.38729438f ? 
             (data[0 /* X1 */] <0.049620606f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10403752f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.027252765f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.091916405f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09676042f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[24 /* X25 */] <-0.45605397f ? 
             (data[0 /* X1 */] <0.0661445f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35358426f ? 
                 (data[10 /* X11 */] <-1.0774072f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34567243f ? 
                         (data[23 /* X24 */] <0.03224563f ? 
                             (data[7 /* X8 */] <0.065072216f ? 
                                1.0f : 
                                0.0f) : 
                             (data[19 /* X20 */] <-0.6245838f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.119140625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24740128f ? 
             (data[26 /* X27 */] <-0.42757142f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16109401f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10602193f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.08234953f ? 
                0.0f : 
                1.0f)) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (data[34 /* X35 */] <0.2960346f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.07084345f ? 
             (data[30 /* X31 */] <0.09305517f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.08552054f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03707666f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.11791493f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.112795554f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.22089778f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
        0.028571429f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093333595f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10351437f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[35 /* X36 */] <-0.30859375f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19450627f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10729184f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.23517436f ? 
                     (data[7 /* X8 */] <0.14205137f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05764531f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15936096f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.055551436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (data[16 /* X17 */] <-0.044134554f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4595919f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10498543f ? 
            0.0f : 
             (data[7 /* X8 */] <0.07716633f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
             (data[15 /* X16 */] <0.06042963f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.053335898f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21813378f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.3557866f ? 
             (data[30 /* X31 */] <0.088263184f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.08355707f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.76171875f ? 
             (data[11 /* X12 */] <-0.6778306f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.03133858f ? 
                     (data[21 /* X22 */] <0.097205065f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2596482f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.15512462f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[27 /* X28 */] <0.23059508f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[7 /* X8 */] <0.06616767f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09021088f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.06776416f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17066434f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3279175f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.2216357f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.045593042f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.15987836f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21747121f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.21211644f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26476648f ? 
             (data[27 /* X28 */] <-0.42091694f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.47651976f ? 
                     (data[15 /* X16 */] <0.117129706f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[7 /* X8 */] <0.028283399f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4116716f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.0916711f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.37623018f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[14 /* X15 */] <0.09578364f ? 
            1.0f : 
             (data[30 /* X31 */] <0.11412152f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.35711962f ? 
                     (data[33 /* X34 */] <-0.4519242f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.085756265f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12421614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.008077642f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06853477f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.017816337f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.059721332f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22003698f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.053875756f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.17712088f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.1629514f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5078125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (data[10 /* X11 */] <-1.0933261f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3473471f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35358426f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34010202f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1689634f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11969383f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (data[21 /* X22 */] <0.14156103f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.12578054f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24961251f ? 
             (data[9 /* X10 */] <-0.19678473f ? 
                 (data[21 /* X22 */] <0.189329f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12401294f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[31 /* X32 */] <0.040085915f ? 
             (data[34 /* X35 */] <0.29412588f ? 
                 (data[28 /* X29 */] <0.085328974f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16161022f ? 
                    0.0f : 
                    1.0f))) : 
        0.8888889f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44335938f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19774169f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.014411797f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.12340589f ? 
             (data[31 /* X32 */] <0.04509436f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.06954341f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.124564245f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <-0.1328125f ? 
                 (data[29 /* X30 */] <0.12173541f ? 
                     (data[3 /* X4 */] <-0.08752441f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
             (data[13 /* X14 */] <0.08780665f ? 
                 (data[31 /* X32 */] <0.06907359f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.12641455f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[19 /* X20 */] <-0.32050943f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.079646714f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12872666f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[21 /* X22 */] <0.1208758f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.5454334f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8114357f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.04218157f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[17 /* X18 */] <-0.5516638f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.014596f ? 
             (data[12 /* X13 */] <0.0787435f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27934787f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1567575f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.023774436f ? 
             (data[30 /* X31 */] <0.07198882f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.18588816f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.06433481f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1467358f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29187593f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15554057f ? 
            0.0f : 
             (data[27 /* X28 */] <0.4144376f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.26929876f ? 
            0.0f : 
             (data[4 /* X5 */] <0.10109037f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14433329f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20559382f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31033096f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (data[26 /* X27 */] <0.061197992f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20088196f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.39066866f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[7 /* X8 */] <0.055474523f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.026144452f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.061227232f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20088196f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.32506222f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (data[30 /* X31 */] <0.13962288f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.015478101f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
             (data[25 /* X26 */] <-0.5520092f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.26210105f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2924774f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.14684647f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14350353f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18915734f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13185409f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25770533f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.25509235f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18341872f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0425256f ? 
                 (data[26 /* X27 */] <7.254641E-4f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12690896f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19450627f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34070173f ? 
                 (data[26 /* X27 */] <0.037436713f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[14 /* X15 */] <0.14326829f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12142407f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[0 /* X1 */] <0.18456575f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.0703125f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.11272674f ? 
                 (data[0 /* X1 */] <-0.15233812f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.030029297f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23597343f ? 
             (data[15 /* X16 */] <0.034395065f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.067589134f ? 
                 (data[22 /* X23 */] <0.121722125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.35139507f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[3 /* X4 */] <-0.29360977f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33716986f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.116610244f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23107241f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.8333333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11368424f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.025390625f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19284314f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.053335898f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.100758836f ? 
             (data[4 /* X5 */] <0.15234613f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.16736762f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22812118f ? 
                     (data[13 /* X14 */] <0.14379945f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15448755f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.15106376f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17953776f ? 
             (data[28 /* X29 */] <0.102252044f ? 
                 (data[18 /* X19 */] <-0.09528627f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14754616f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2592224f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.8808594f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26700312f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29238772f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15552552f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08922118f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18760182f ? 
             (data[26 /* X27 */] <-0.21477385f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.05205529f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.030675756f ? 
                    0.0f : 
                    1.0f))) : 
        0.8888889f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.33293408f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.048875f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15348233f ? 
                 (data[24 /* X25 */] <-0.16736762f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.35976195f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[15 /* X16 */] <0.06368395f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50824165f ? 
                     (data[32 /* X33 */] <-0.84375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <0.12168376f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.8339844f ? 
             (data[26 /* X27 */] <-0.039659187f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08545197f ? 
                     (data[2 /* X3 */] <-0.32203126f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.024415875f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.597544f ? 
                         (data[18 /* X19 */] <0.40423617f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[14 /* X15 */] <0.10619694f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[15 /* X16 */] <0.0672637f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2503609f ? 
                 (data[7 /* X8 */] <0.04966968f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.10061706f ? 
                         (data[14 /* X15 */] <0.1799231f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[8 /* X9 */] <-1.4450522E-4f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26140317f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.016474977f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.0137930615f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17414007f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3473471f ? 
                 (data[19 /* X20 */] <-0.35759166f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.50332016f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[15 /* X16 */] <0.07312148f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2706951f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16087833f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[13 /* X14 */] <0.083996475f ? 
            1.0f : 
             (data[15 /* X16 */] <0.054898534f ? 
                 (data[6 /* X7 */] <0.1402441f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.037009723f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.4728935f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24285968f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3096151f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[13 /* X14 */] <0.08780665f ? 
             (data[7 /* X8 */] <0.058835227f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <0.4842683f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[23 /* X24 */] <0.059565313f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.085161924f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18683869f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.5409292f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.45856878f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16801086f ? 
         (data[23 /* X24 */] <0.031295378f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.24413754f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.67987293f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15011136f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18952492f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38167754f ? 
                    1.0f : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.15227091f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[23 /* X24 */] <0.08474694f ? 
             (data[0 /* X1 */] <0.0018849073f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21811467f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.061228253f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25178552f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41131032f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.053503387f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.057067193f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.095318146f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1010805f ? 
             (data[0 /* X1 */] <0.13774805f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.33740127f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X3 */] <-0.53042996f ? 
            1.0f : 
             (data[23 /* X24 */] <0.047449626f ? 
                 (data[16 /* X17 */] <-0.27483976f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.15732776f ? 
                     (data[9 /* X10 */] <-0.29844218f ? 
                         (data[29 /* X30 */] <0.0926685f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[13 /* X14 */] <0.09047378f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17855263f ? 
            0.0f : 
             (data[5 /* X6 */] <0.10910318f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.073500104f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.34586078f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.12322155f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15514547f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[20 /* X21 */] <0.12818219f ? 
             (data[19 /* X20 */] <-0.43414855f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.15824556f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.010158636f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0546875f ? 
                     (data[30 /* X31 */] <0.079750106f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.08984375f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20668414f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.055474523f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13202468f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25413573f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2360846f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24055116f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18240006f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.022725f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07595713f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15391849f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2890625f ? 
             (data[34 /* X35 */] <0.43155518f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.052952986f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.10975332f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1703494f ? 
             (data[13 /* X14 */] <0.08780665f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18335801f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.1949797f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[5 /* X6 */] <0.10624003f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.061860215f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.19035402f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09834204f ? 
                 (data[27 /* X28 */] <-0.24675037f ? 
                     (data[8 /* X9 */] <0.29633287f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26140317f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20958224f ? 
                 (data[23 /* X24 */] <0.026544128f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.405538f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14845142f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.2870352f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386073f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.13708992f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[3 /* X4 */] <-0.2598074f ? 
             (data[17 /* X18 */] <-0.25973108f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13707113f ? 
             (data[12 /* X13 */] <0.08064667f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.24676332f ? 
                     (data[23 /* X24 */] <0.08926063f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.1898236f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.30156478f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30370182f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[18 /* X19 */] <-0.12528309f ? 
             (data[4 /* X5 */] <0.1566776f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.29412588f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1736593f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.488066f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[9 /* X10 */] <-0.2390698f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.85498357f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15090531f ? 
             (data[18 /* X19 */] <-0.022966025f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21037333f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.043512747f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.063358516f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.035710465f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1888614f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.105579525f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15370706f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16331294f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.76682323f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.041619442f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16217689f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.087068915f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13419196f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26528743f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.203125f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.33486384f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16028716f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[27 /* X28 */] <-0.2451377f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12046043f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.06971347f ? 
                    0.0f : 
                    1.0f))) : 
         (data[19 /* X20 */] <-0.63152176f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
        0.024390243f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.016876012f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24162836f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3045823f ? 
            0.0f : 
             (data[30 /* X31 */] <0.21002884f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.121722125f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.051939666f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26768613f ? 
             (data[10 /* X11 */] <-0.8215063f ? 
                 (data[1 /* X2 */] <-0.081141815f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <0.13706118f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09491521f ? 
             (data[3 /* X4 */] <0.025877057f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10468838f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4621364f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14338161f ? 
             (data[17 /* X18 */] <-0.5838032f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14191778f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[18 /* X19 */] <-0.16482435f ? 
             (data[3 /* X4 */] <-0.15949072f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
                0.0f : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.1566434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[32 /* X33 */] <-0.8886719f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.5784466f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08349189f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71023124f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.014464596f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07930469f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (data[11 /* X12 */] <-0.7071073f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26249626f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.27834418f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16288602f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.20348717f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.034963965f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18466578f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23430571f ? 
             (data[29 /* X30 */] <0.08327327f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.47064674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15744951f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.109837756f ? 
             (data[20 /* X21 */] <0.12360838f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15014224f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[35 /* X36 */] <-0.9746094f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33087933f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46862713f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625176f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21081568f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
         (data[33 /* X34 */] <-0.8215148f ? 
             (data[14 /* X15 */] <0.18658762f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.09255929f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15410371f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0738546f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38085938f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.265625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08908153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.027460612f ? 
         (data[28 /* X29 */] <0.072138935f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15805924f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2822f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.11535611f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.32048848f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[17 /* X18 */] <-0.58648145f ? 
             (data[34 /* X35 */] <-0.3853846f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.154909f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16331294f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08450938f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.10208493f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88994217f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (data[17 /* X18 */] <-0.315975f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.26704317f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5699172f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.139754f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.15139078f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.11552861f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[11 /* X12 */] <-0.054236293f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.9277344f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1389901f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (data[22 /* X23 */] <0.08817121f ? 
             (data[26 /* X27 */] <0.015756845f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.14572105f ? 
            0.0f : 
             (data[12 /* X13 */] <0.15106376f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.31763563f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34118217f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.15090531f ? 
                     (data[4 /* X5 */] <0.12419156f ? 
                         (data[19 /* X20 */] <-0.027440112f ? 
                             (data[19 /* X20 */] <-0.42104337f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11548531f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.13667183f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.578125f ? 
         (data[25 /* X26 */] <0.00483003f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26180404f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9277344f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.42590904f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2351987f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.25991103f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[21 /* X22 */] <0.08313057f ? 
             (data[3 /* X4 */] <-0.12496001f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09396983f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.29094476f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[21 /* X22 */] <0.12599379f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.10278999f ? 
                 (data[18 /* X19 */] <0.27558348f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[30 /* X31 */] <0.086957015f ? 
             (data[27 /* X28 */] <-0.09516093f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[34 /* X35 */] <-0.47700518f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.95419025f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.7588961f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21037333f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17741206f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.004901129f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06502925f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.10867045f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
             (data[25 /* X26 */] <-0.63993126f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5373739f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15376602f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.2405634f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07075044f ? 
            1.0f : 
             (data[27 /* X28 */] <0.34670615f ? 
                 (data[32 /* X33 */] <-0.0703125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2728064f ? 
             (data[3 /* X4 */] <-0.4386328f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.012092739f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.06256247f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.35161066f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.049378507f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1629514f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27483976f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.13407911f ? 
                     (data[22 /* X23 */] <0.13464181f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[22 /* X23 */] <0.09293583f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1689634f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12093464f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20339891f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2778593f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.10782618f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.004465856f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18760182f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15728395f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.1749217f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24783404f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[26 /* X27 */] <0.046789825f ? 
             (data[25 /* X26 */] <-0.4134655f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.4728935f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (data[27 /* X28 */] <0.17899017f ? 
             (data[10 /* X11 */] <-0.56703675f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.03147306f ? 
            0.0f : 
             (data[28 /* X29 */] <0.17591718f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[15 /* X16 */] <0.041880004f ? 
             (data[16 /* X17 */] <-0.5239448f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.073500104f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0887855f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <0.087825775f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.28035152f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14416055f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[26 /* X27 */] <-0.015276133f ? 
             (data[35 /* X36 */] <0.16433972f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05630617f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (data[4 /* X5 */] <0.08917882f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.017242536f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.73340607f ? 
                    0.0f : 
                    1.0f))) : 
        0.016666668f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[15 /* X16 */] <0.07084345f ? 
             (data[35 /* X36 */] <0.07003184f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16202389f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12574373f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16879849f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1737101f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (data[18 /* X19 */] <0.06327949f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11995743f ? 
                     (data[3 /* X4 */] <-0.09391734f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17159246f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.026544128f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22269402f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16173099f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16373125f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.119140625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[3 /* X4 */] <-0.02755248f ? 
             (data[25 /* X26 */] <-0.29687092f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17725973f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[18 /* X19 */] <-0.19482116f ? 
             (data[18 /* X19 */] <-0.25589335f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45499822f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2553634f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[33 /* X34 */] <-0.33293408f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.17866535f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24162836f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07084345f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.027460612f ? 
         (data[3 /* X4 */] <-0.29360977f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.92578125f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.216127f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.22710134f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.4611828f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1419995f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06404101f ? 
             (data[22 /* X23 */] <0.10901645f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.35998407f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.116849124f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X6 */] <0.08448001f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.07928704f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22432962f ? 
             (data[19 /* X20 */] <-0.43654096f ? 
                 (data[12 /* X13 */] <0.15582167f ? 
                     (data[14 /* X15 */] <0.16479352f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.24316634f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16464847f ? 
             (data[2 /* X3 */] <-0.18508354f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.11966154f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.056293976f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.060668334f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.34726754f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.45410028f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[27 /* X28 */] <-0.06290786f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.017870503f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.007447632f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[1 /* X2 */] <-0.6733704f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (data[2 /* X3 */] <-0.33989403f ? 
                 (data[9 /* X10 */] <-0.23754744f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[19 /* X20 */] <-0.3958701f ? 
             (data[3 /* X4 */] <-0.27065602f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.080286205f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13391908f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[22 /* X23 */] <0.14137621f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.24633968f ? 
                 (data[0 /* X1 */] <0.18915573f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.9511719f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.9770951f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[19 /* X20 */] <-0.17816147f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <-0.18160449f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07225136f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10955254f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05868638f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08644069f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15158972f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (data[4 /* X5 */] <0.10614376f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1805628f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.07084345f ? 
             (data[9 /* X10 */] <-0.42632112f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08257779f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09201558f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15169163f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19815429f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.2303065f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30501914f ? 
             (data[1 /* X2 */] <-0.26173168f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.13031663f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10468838f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.06679618f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[35 /* X36 */] <-0.80859375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[26 /* X27 */] <-0.18041591f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.145092f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.20925376f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16215038f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.10371555f ? 
            0.0f : 
             (data[5 /* X6 */] <0.13315372f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5673086f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.33398438f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.5373023f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0091531295f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06486454f ? 
            1.0f : 
             (data[21 /* X22 */] <0.18250501f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55084544f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.26305956f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[8 /* X9 */] <-0.013375963f ? 
             (data[5 /* X6 */] <0.09135159f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.47123078f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08450938f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (data[35 /* X36 */] <-0.30859375f ? 
             (data[16 /* X17 */] <-0.28899348f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.50035095f ? 
                     (data[0 /* X1 */] <0.1486875f ? 
                         (data[35 /* X36 */] <-0.7404914f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.44012955f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28948224f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.94921875f ? 
                 (data[0 /* X1 */] <0.23321944f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29721063f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.111964464f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49130964f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0054033753f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06690211f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.075414844f ? 
             (data[5 /* X6 */] <0.13143583f ? 
                 (data[14 /* X15 */] <0.12494088f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.1296441f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15749748f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[26 /* X27 */] <-0.2491318f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.26171875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[28 /* X29 */] <0.072138935f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19037308f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.086331874f ? 
                 (data[28 /* X29 */] <0.11618869f ? 
                     (data[6 /* X7 */] <0.17094567f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.36227384f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (data[16 /* X17 */] <-0.27625513f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03707666f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4566747f ? 
                     (data[6 /* X7 */] <0.11062496f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.50517744f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[11 /* X12 */] <-0.054236293f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.43543082f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.5220195f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.061227232f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15777689f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07756366f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08214991f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06107878f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.33808157f ? 
                    0.0f : 
                    1.0f))) : 
         (data[34 /* X35 */] <-0.3414846f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[26 /* X27 */] <-0.2491318f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34185928f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.1679463f ? 
                     (data[6 /* X7 */] <0.12014785f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12861978f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08908153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (data[9 /* X10 */] <-0.2725619f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.5189975f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4660425f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26193804f ? 
             (data[0 /* X1 */] <-0.23679358f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <0.12860341f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.3946739f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10351437f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.02583144f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.3982625f ? 
                 (data[0 /* X1 */] <0.06430851f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.12173541f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22754341f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.71645206f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19241905f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15948382f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01323073f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08083254f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07441666f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06498568f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.029977547f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <-0.17164181f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[7 /* X8 */] <0.03133858f ? 
             (data[7 /* X8 */] <0.03010176f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17848296f ? 
                1.0f : 
                 (data[33 /* X34 */] <0.15384375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[10 /* X11 */] <-1.074048f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.735199f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.10538781f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29745045f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.030345127f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.36608145f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1872967f ? 
             (data[8 /* X9 */] <-1.4450522E-4f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1023942f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (data[18 /* X19 */] <-0.13210055f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21623391f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13519098f ? 
             (data[8 /* X9 */] <0.13217007f ? 
                 (data[4 /* X5 */] <0.1324628f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X6 */] <0.083334744f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (data[18 /* X19 */] <0.1378708f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.32516566f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.49846813f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0024017578f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1602f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.60255116f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28884992f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[11 /* X12 */] <-0.40409318f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16987936f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[7 /* X8 */] <0.05272486f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08593475f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.20085242f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.53233635f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.14615978f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15364468f ? 
                             (data[6 /* X7 */] <0.13408065f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <-0.25637725f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[8 /* X9 */] <-1.4450522E-4f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.0054590465f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.11108644f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18601888f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.043373924f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[7 /* X8 */] <0.073194586f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08736013f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05630617f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.16068923f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.62463737f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.3595349f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04237691f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[7 /* X8 */] <0.029199954f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4168183f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.47551253f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21037228f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16123393f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15257964f ? 
                 (data[0 /* X1 */] <0.092761114f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.35096288f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15548638f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.101607785f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15011136f ? 
             (data[6 /* X7 */] <0.11835695f ? 
                 (data[7 /* X8 */] <0.027672362f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16076694f ? 
             (data[18 /* X19 */] <0.0738626f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25741485f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16236104f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06594698f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22892623f ? 
                     (data[19 /* X20 */] <-0.47804236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.09249686f ? 
             (data[31 /* X32 */] <0.072509006f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.048828125f ? 
             (data[28 /* X29 */] <0.098767884f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.024415875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27458614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.40429688f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.019148694f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.2679948f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.9255371f ? 
                        1.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4471292f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.49563742f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15948382f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[26 /* X27 */] <-0.21809882f ? 
             (data[11 /* X12 */] <-0.2796671f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[13 /* X14 */] <0.11714501f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.24746269f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.21617715f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13995837f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.08832105f ? 
            1.0f : 
             (data[31 /* X32 */] <0.047943167f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06093375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[26 /* X27 */] <-0.031900942f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24768618f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.08437834f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[14 /* X15 */] <0.12327475f ? 
                 (data[1 /* X2 */] <-0.4263872f ? 
                     (data[16 /* X17 */] <-0.48431444f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[25 /* X26 */] <0.13538086f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06594698f ? 
                 (data[18 /* X19 */] <0.024700996f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.18546954f ? 
             (data[15 /* X16 */] <0.0428563f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12435175f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.10892119f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16742714f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.112795554f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11571742f ? 
                 (data[8 /* X9 */] <-0.3214799f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08621633f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3246991f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45446005f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2567199f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08090565f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2096306f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3999237f ? 
             (data[29 /* X30 */] <0.060195986f ? 
                 (data[17 /* X18 */] <-0.17670435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[35 /* X36 */] <-0.0703125f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04114264f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084898315f ? 
             (data[3 /* X4 */] <0.060365926f ? 
                 (data[0 /* X1 */] <-0.2331216f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (data[35 /* X36 */] <-0.8339844f ? 
             (data[24 /* X25 */] <-0.11152363f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.080944285f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[13 /* X14 */] <0.23754656f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.30342335f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.010838328f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06502925f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[10 /* X11 */] <-0.16990995f ? 
             (data[3 /* X4 */] <-0.19002189f ? 
                 (data[19 /* X20 */] <-0.07528816f ? 
                     (data[0 /* X1 */] <0.14167552f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* X3 */] <-0.4381391f ? 
                1.0f : 
                0.0f)) : 
        0.05882353f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21747799f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2716102f ? 
                 (data[7 /* X8 */] <0.03133858f ? 
                     (data[31 /* X32 */] <0.04825759f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.3257931f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[16 /* X17 */] <-0.3979769f ? 
             (data[24 /* X25 */] <-0.39821312f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.1328125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16212066f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10468838f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25012013f ? 
                             (data[2 /* X3 */] <-0.6076806f ? 
                                0.0f : 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.142855f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25731382f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.33777153f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <0.30408517f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14487942f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.97655827f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[35 /* X36 */] <-0.9746094f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.36061776f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07453175f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31722006f ? 
                     (data[34 /* X35 */] <-0.4474453f ? 
                         (data[31 /* X32 */] <0.09254279f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.03146392f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (data[22 /* X23 */] <0.086582996f ? 
            1.0f : 
             (data[7 /* X8 */] <0.028283399f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.26797324f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25879207f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15265003f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.38085938f ? 
            0.0f : 
             (data[7 /* X8 */] <0.0600573f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07757356f ? 
            1.0f : 
             (data[30 /* X31 */] <0.08363075f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
            0.0f : 
             (data[22 /* X23 */] <0.086781524f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[9 /* X10 */] <-0.51157373f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093597196f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[24 /* X25 */] <-0.735199f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3473471f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.12849528f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.049678814f ? 
                             (data[15 /* X16 */] <0.12343327f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18158923f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.12860341f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09361118f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
             (data[23 /* X24 */] <0.034621254f ? 
                 (data[23 /* X24 */] <0.03158324f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[28 /* X29 */] <0.18238777f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.087890625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (data[4 /* X5 */] <0.10072941f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13962288f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.07855977f ? 
            1.0f : 
             (data[31 /* X32 */] <0.057138983f ? 
                 (data[27 /* X28 */] <-0.02097887f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.07084345f ? 
                     (data[33 /* X34 */] <-0.379809f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11659778f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33653572f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15435275f ? 
                 (data[30 /* X31 */] <0.07531509f ? 
                     (data[23 /* X24 */] <0.0535447f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.38561034f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11368424f ? 
         (data[33 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (data[32 /* X33 */] <0.22265625f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24490209f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15084949f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X1 */] <-0.23036763f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14238697f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.47700518f ? 
                 (data[17 /* X18 */] <-0.21955685f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11644301f ? 
             (data[30 /* X31 */] <0.082522f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47238496f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.16477221f ? 
                 (data[11 /* X12 */] <0.10093036f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27458614f ? 
            0.0f : 
             (data[34 /* X35 */] <0.18341894f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.61538124f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37642655f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18458512f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.29758358f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48828125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3235402f ? 
            0.0f : 
             (data[30 /* X31 */] <0.14849293f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15034162f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15090531f ? 
         (data[33 /* X34 */] <-0.33293408f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15410371f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.041273f ? 
             (data[13 /* X14 */] <0.18534715f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1804315f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2854253f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <0.01613652f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.07812276f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.24059218f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16619381f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.096878015f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16788997f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.07871109f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (data[2 /* X3 */] <0.01140667f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48828125f ? 
             (data[35 /* X36 */] <-0.28515625f ? 
                 (data[16 /* X17 */] <-0.29733527f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.12147483f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.0234375f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49028015f ? 
                 (data[8 /* X9 */] <-0.17782408f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.08665213f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.43521369f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.07250387f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (data[13 /* X14 */] <0.15410371f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16461864f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
             (data[6 /* X7 */] <0.13242888f ? 
                 (data[16 /* X17 */] <-0.025734752f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.03742438f ? 
                     (data[26 /* X27 */] <0.13988876f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.27908587f ? 
             (data[5 /* X6 */] <0.07302737f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2728064f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20388222f ? 
                 (data[28 /* X29 */] <0.0723878f ? 
                     (data[15 /* X16 */] <0.042205434f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.39373082f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20487297f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        0.8888889f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18443155f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1629514f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06887466f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20346744f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
        0.029411765f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29012862f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.097330526f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.20242533f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15948382f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.021387806f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13399272f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10498543f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1736593f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.039402127f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08531061f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.35771048f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[11 /* X12 */] <-0.6412347f ? 
            1.0f : 
             (data[7 /* X8 */] <0.03133858f ? 
                 (data[11 /* X12 */] <-0.13164856f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.116794206f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.1871692f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.08683298f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102735795f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.083084f ? 
                 (data[3 /* X4 */] <-0.048270054f ? 
                     (data[0 /* X1 */] <-0.03748582f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
            0.0f : 
             (data[0 /* X1 */] <0.062472526f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.24018022f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[15 /* X16 */] <0.07312148f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08736013f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.16611768f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27285647f ? 
             (data[1 /* X2 */] <-0.24845304f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.11870996f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24510269f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.31667098f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.06195316f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[15 /* X16 */] <0.034069635f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1467371f ? 
                 (data[31 /* X32 */] <0.04614877f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.049368467f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.11760556f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.122756936f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[14 /* X15 */] <0.12285822f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.26438743f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16318822f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.081257276f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[16 /* X17 */] <-0.33570066f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.9765625f ? 
                 (data[2 /* X3 */] <-0.53042996f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.119383045f ? 
                         (data[17 /* X18 */] <-0.16960305f ? 
                             (data[18 /* X19 */] <0.09233019f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (data[26 /* X27 */] <0.02462341f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <0.2421875f ? 
                 (data[22 /* X23 */] <0.088369735f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07790706f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1797883f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[13 /* X14 */] <0.103047356f ? 
             (data[26 /* X27 */] <0.09555593f ? 
                 (data[17 /* X18 */] <-0.7016476f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.036691133f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.031295378f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16997424f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3370302f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1414622f ? 
             (data[22 /* X23 */] <0.1177516f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11247021f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16100907f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.4176629f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
         (data[11 /* X12 */] <-0.30455232f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28095514f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.0703125f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21215218f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18649021f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.28515625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1160785f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31489313f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15043326f ? 
        0.014705882f : 
         (data[34 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4115753f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.12494088f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09240208f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16676486f ? 
             (data[0 /* X1 */] <-0.031162884f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14746952f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.09531508f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.055222716f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.1718793f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[12 /* X13 */] <0.10538781f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51596165f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.09077896f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.04144569f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.3979769f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49887046f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.12322155f ? 
                 (data[32 /* X33 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09936844f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38167754f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24695015f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.4826146f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26531214f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12014375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[34 /* X35 */] <-0.90838045f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13177164f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49887046f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25754613f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20688324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.00765391f ? 
            0.0f : 
             (data[13 /* X14 */] <0.16782035f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20251901f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.039402127f ? 
             (data[34 /* X35 */] <-0.45463187f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16629627f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16076694f ? 
            0.0f : 
             (data[8 /* X9 */] <0.12460924f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.12452435f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24994403f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[7 /* X8 */] <0.051808305f ? 
             (data[32 /* X33 */] <-0.3984375f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.28930795f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07975813f ? 
                     (data[18 /* X19 */] <0.08987809f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10566468f ? 
             (data[28 /* X29 */] <0.11071358f ? 
                 (data[18 /* X19 */] <0.05197083f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.17343992f ? 
                 (data[11 /* X12 */] <0.13606244f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3440367f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12782095f ? 
                 (data[35 /* X36 */] <-0.921875f ? 
                     (data[23 /* X24 */] <0.10746717f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05130862f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[7 /* X8 */] <0.028283399f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32196322f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09696482f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.44947213f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.119140625f ? 
            0.0f : 
             (data[30 /* X31 */] <0.14350353f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.05136414f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.085756265f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1621004f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09140008f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.25639755f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.100424856f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.20431773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[5 /* X6 */] <0.08762948f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.08244987f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20940295f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.06509469f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16118002f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22651042f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.7742883f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16324814f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40039062f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21888387f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19003414f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.047920566f ? 
            0.0f : 
             (data[27 /* X28 */] <0.20156732f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.36550546f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.2649322f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17773438f ? 
             (data[6 /* X7 */] <0.11847316f ? 
                 (data[2 /* X3 */] <0.023315169f ? 
                     (data[3 /* X4 */] <-0.20093785f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.013476773f ? 
                     (data[20 /* X21 */] <0.16690712f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18238513f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.061227232f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2728064f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                 (data[29 /* X30 */] <0.060195986f ? 
                     (data[24 /* X25 */] <-0.1316422f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102735795f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18207407f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.06393131f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10407101f ? 
             (data[28 /* X29 */] <0.08582671f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.052810404f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.24164891f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.11437666f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14213946f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.93551344f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39701915f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.008077642f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15677084f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16695791f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.2068703f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.100876875f ? 
             (data[27 /* X28 */] <-0.20159607f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[31 /* X32 */] <0.045621566f ? 
             (data[26 /* X27 */] <0.13988876f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2008445f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.21116911f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15448755f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[13 /* X14 */] <0.08780665f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.12167492f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13644303f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.8333333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08257779f ? 
            0.0f : 
            1.0f) : 
         (data[29 /* X30 */] <0.11019676f ? 
            1.0f : 
             (data[7 /* X8 */] <0.058835227f ? 
                 (data[30 /* X31 */] <0.11530833f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.07310638f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17529322f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (data[24 /* X25 */] <-0.4598262f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.43654096f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.15236384f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.32936642f ? 
            0.0f : 
             (data[30 /* X31 */] <0.11634288f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24673581f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.12631783f ? 
                0.0f : 
                1.0f)) : 
        0.016666668f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07441666f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013085698f ? 
                 (data[35 /* X36 */] <-0.046875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.080858864f ? 
                1.0f : 
                0.0f)) : 
        0.05882353f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16454455f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
                 (data[30 /* X31 */] <0.07567836f ? 
                     (data[20 /* X21 */] <0.13519536f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.84288836f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.31931323f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.070857115f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11586763f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16500531f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.62109375f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.094886385f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1419995f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2387274f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3117995f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.124702275f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.14192803f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1861208f ? 
            0.0f : 
             (data[23 /* X24 */] <0.052676003f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20002034f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13399272f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07344691f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23197275f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.06889086f ? 
             (data[29 /* X30 */] <0.13663949f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.03727802f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45170206f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.14962046f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102735795f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.009690295f ? 
         (data[21 /* X22 */] <0.13089854f ? 
             (data[3 /* X4 */] <0.108747356f ? 
                 (data[2 /* X3 */] <-0.13735029f ? 
                     (data[14 /* X15 */] <0.23963137f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.3734569f ? 
                 (data[27 /* X28 */] <-0.17246751f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.017153867f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25511727f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[29 /* X30 */] <0.09841774f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31057015f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[21 /* X22 */] <0.06756333f ? 
             (data[14 /* X15 */] <0.22074322f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.106493995f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.33184513f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3689935f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15063195f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.37635145f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12727942f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <0.44578528f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (data[16 /* X17 */] <-0.073857315f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11278975f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.011274201f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25178552f ? 
             (data[26 /* X27 */] <-0.18817416f ? 
                 (data[14 /* X15 */] <0.12735762f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.057067193f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30769375f ? 
             (data[35 /* X36 */] <0.21484375f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43537265f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.016131941f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14422666f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
             (data[5 /* X6 */] <0.12628214f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.1424995f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.09368432f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13049164f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
             (data[10 /* X11 */] <-1.0913982f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22161181f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.16464847f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.23495722f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (data[31 /* X32 */] <0.053002432f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14117058f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.15343302f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20668414f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03487991f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.41045797f ? 
            1.0f : 
            0.0f) : 
         (data[13 /* X14 */] <0.107238546f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.049668863f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.20294629f ? 
                 (data[31 /* X32 */] <0.059856094f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.5666629f ? 
             (data[10 /* X11 */] <-0.5477587f ? 
                1.0f : 
                0.0f) : 
             (data[18 /* X19 */] <-0.06528946f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17653401f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09676042f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3750217f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[3 /* X4 */] <0.08475859f ? 
             (data[29 /* X30 */] <0.11500453f ? 
                 (data[26 /* X27 */] <0.39258587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19575131f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.80759764f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20887509f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3789839f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.08030448f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[7 /* X8 */] <0.07655529f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.25232595f ? 
             (data[3 /* X4 */] <-0.042294215f ? 
                 (data[8 /* X9 */] <-0.07953325f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31238025f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.04110867f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15625422f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.19029087f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026385566f ? 
                 (data[24 /* X25 */] <-0.106493995f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3246991f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[2 /* X3 */] <-0.5274529f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35546875f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1051957f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13351443f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07334922f ? 
            1.0f : 
             (data[30 /* X31 */] <0.26934725f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[7 /* X8 */] <0.07258355f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0482374f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.11446077f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1630843f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.42769969f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30698752f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24710748f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[29 /* X30 */] <0.15875521f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18729937f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7686261f ? 
             (data[27 /* X28 */] <-0.169343f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.024810871f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12417507f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.14282231f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08327669f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30704492f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18279405f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.072509006f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.61598635f ? 
            1.0f : 
             (data[7 /* X8 */] <0.027672362f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09133248f ? 
            0.0f : 
             (data[26 /* X27 */] <0.12215563f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.20124057f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.085756265f ? 
            1.0f : 
             (data[7 /* X8 */] <0.09794156f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1703494f ? 
             (data[29 /* X30 */] <0.06067676f ? 
                 (data[17 /* X18 */] <-0.17670435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20015165f ? 
                1.0f : 
                0.0f)) : 
        0.8888889f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16465208f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12341898f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2155586f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07975813f ? 
                     (data[9 /* X10 */] <-0.566379f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.37579966f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13559003f ? 
             (data[14 /* X15 */] <0.11692783f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.027494377f ? 
                    1.0f : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.33534262f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.53462946f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.06788841f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[35 /* X36 */] <-0.9746094f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12581559f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.027277162f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24735537f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20276375f ? 
             (data[14 /* X15 */] <0.10323308f ? 
                 (data[19 /* X20 */] <-0.06093375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.21619146f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.051167954f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.21318954f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
        0.0f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.050825104f ? 
             (data[12 /* X13 */] <0.09792854f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17953438f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <0.29510123f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (data[19 /* X20 */] <-0.24156015f ? 
             (data[31 /* X32 */] <0.078835465f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26140317f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.32430658f ? 
                     (data[34 /* X35 */] <-0.56320906f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09971338f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[28 /* X29 */] <0.10299865f ? 
             (data[23 /* X24 */] <0.030345127f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21763611f ? 
             (data[2 /* X3 */] <-0.13556969f ? 
                 (data[33 /* X34 */] <0.36297792f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16823661f ? 
             (data[27 /* X28 */] <-0.16289239f ? 
                 (data[23 /* X24 */] <0.091161124f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1982551f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.528843f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15740338f ? 
            0.0f : 
             (data[23 /* X24 */] <0.03652175f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.094766155f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.50961643f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[27 /* X28 */] <-0.22739853f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10111457f ? 
             (data[0 /* X1 */] <-0.075226605f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.03498115f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[13 /* X14 */] <0.08780665f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46455398f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.11090584f ? 
                    0.0f : 
                    1.0f))) : 
        0.8888889f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[28 /* X29 */] <0.074627616f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2570873f ? 
             (data[26 /* X27 */] <0.07560616f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.030666217f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[0 /* X1 */] <-0.2680054f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <0.048828125f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.18167116f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.18817545f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (data[21 /* X22 */] <0.085263066f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00483003f ? 
                 (data[22 /* X23 */] <0.09789898f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.08665213f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[7 /* X8 */] <0.028283399f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2931418f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.6171875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14433329f ? 
             (data[20 /* X21 */] <0.14251345f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.035223667f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5040873f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <0.04227665f ? 
             (data[11 /* X12 */] <-0.4201954f ? 
                 (data[4 /* X5 */] <0.18613811f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.191888f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.69140625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14422666f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22649777f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.140027f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.06360388f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.13760918f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1340264f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.0916711f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41807726f ? 
            0.0f : 
             (data[4 /* X5 */] <0.11408479f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08607943f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16837075f ? 
                 (data[12 /* X13 */] <0.10538781f ? 
                     (data[23 /* X24 */] <0.07595713f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1098953f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12727062f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39728016f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12363355f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16028716f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.072156124f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (data[20 /* X21 */] <0.08213918f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.15302126f ? 
                     (data[15 /* X16 */] <0.09427456f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.013882671f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14350353f ? 
                 (data[34 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27546465f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[30 /* X31 */] <0.08862015f ? 
             (data[33 /* X34 */] <-0.45913574f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26607347f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.32015783f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.080858864f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25841084f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09021058f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11310377f ? 
                 (data[11 /* X12 */] <-0.46701527f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.3772561f ? 
             (data[10 /* X11 */] <-0.23539153f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3083903f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24710748f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.20195472f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21862608f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023588538f ? 
         (data[30 /* X31 */] <0.1518192f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11468539f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25812152f ? 
             (data[6 /* X7 */] <0.098935135f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28692526f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.18840812f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (data[28 /* X29 */] <0.14505747f ? 
             (data[14 /* X15 */] <0.119942494f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24850217f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.10161509f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.093309544f ? 
                     (data[31 /* X32 */] <0.054584045f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[13 /* X14 */] <0.09771311f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[29 /* X30 */] <0.06259987f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13072295f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22508511f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.3871847f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16544501f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093333595f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19994141f ? 
                 (data[3 /* X4 */] <-0.25326502f ? 
                     (data[14 /* X15 */] <0.16326182f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.1340264f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[10 /* X11 */] <-1.0933261f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30283833f ? 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34010202f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3322749f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.164813f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15983914f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <-0.33632147f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2056741f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[10 /* X11 */] <-0.32798955f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.61538124f ? 
             (data[12 /* X13 */] <0.077316135f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15948382f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.1918764f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10803017f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2286005f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.64252627f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1245374f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23289981f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.12318522f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.033421118f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[17 /* X18 */] <-0.6065686f ? 
             (data[34 /* X35 */] <-0.65874183f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21484375f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.24489349f ? 
                     (data[3 /* X4 */] <-0.20092587f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15448755f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.073926285f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.10113875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12348302f ? 
         (data[17 /* X18 */] <-0.33740127f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.31667098f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.23867178f ? 
                     (data[20 /* X21 */] <0.09704929f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.264433f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78515625f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6047307f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1629514f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.027738543f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15923598f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.076925f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34070173f ? 
             (data[11 /* X12 */] <-0.4172677f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.082230955f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.1185457f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31725317f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.16094765f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (data[11 /* X12 */] <-0.22696899f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2906204f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09133248f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.015558094f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.219748f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08908153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12348302f ? 
         (data[6 /* X7 */] <0.10535477f ? 
            0.0f : 
             (data[15 /* X16 */] <0.054571852f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4144376f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17471242f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10403752f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06594698f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16873689f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46679688f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12313871f ? 
             (data[32 /* X33 */] <0.109375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5056346f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <0.22265625f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11510387f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[8 /* X9 */] <-0.38196656f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07453175f ? 
            1.0f : 
             (data[27 /* X28 */] <0.16286363f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[17 /* X18 */] <-0.5811249f ? 
             (data[23 /* X24 */] <0.07595713f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0564285f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.068291366f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19871457f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07084345f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14848381f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.272602f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.49829558f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08142106f ? 
             (data[19 /* X20 */] <-0.0025628645f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.100609824f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[9 /* X10 */] <-0.51005137f ? 
             (data[1 /* X2 */] <-0.08910901f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10533925f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0425256f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3507227f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (data[19 /* X20 */] <-0.47242698f ? 
             (data[11 /* X12 */] <0.07750898f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386073f ? 
            0.0f : 
             (data[33 /* X34 */] <0.12900329f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
        0.018181818f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.113764726f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05701527f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <0.13606244f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39728016f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.4356983f ? 
             (data[1 /* X2 */] <-0.01968127f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.046875f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1322695f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03461732f ? 
             (data[11 /* X12 */] <-0.32650986f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1361587f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.46093863f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35118937f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2725955f ? 
                 (data[29 /* X30 */] <0.08423482f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3817174f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.155303f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.12793691f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
        0.028571429f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16260143f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13462813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14552687f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34193155f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1098953f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.117886044f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.007295035f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[11 /* X12 */] <0.008708671f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
        0.024390243f : 
         (data[23 /* X24 */] <0.053151127f ? 
             (data[0 /* X1 */] <0.22771148f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[11 /* X12 */] <-0.44800827f ? 
             (data[10 /* X11 */] <-0.18147676f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.3762803f ? 
             (data[27 /* X28 */] <0.44346535f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20801793f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[28 /* X29 */] <0.072138935f ? 
             (data[10 /* X11 */] <-0.6133039f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19578789f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14197178f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.037652668f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.062879115f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29572943f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18729937f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3476262f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26863146f ? 
                 (data[19 /* X20 */] <-0.43893334f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16099916f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.23112598f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02813064f ? 
        1.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.64252627f ? 
                 (data[21 /* X22 */] <0.061379086f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15958048f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.19708058f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[27 /* X28 */] <-0.054406606f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.15321647f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14289635f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17478561f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1785006f ? 
            0.0f : 
             (data[6 /* X7 */] <0.19662523f ? 
                 (data[3 /* X4 */] <-0.2141133f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22216949f ? 
             (data[28 /* X29 */] <0.07189006f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.10729184f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
             (data[11 /* X12 */] <-0.06594698f ? 
                 (data[12 /* X13 */] <0.14689337f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12162389f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.43218488f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17738701f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16782035f ? 
             (data[12 /* X13 */] <0.14917983f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06799826f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1389901f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13752627f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[8 /* X9 */] <-0.18821467f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17890361f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.55161434f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.10635055f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.14987427f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[13 /* X14 */] <0.083996475f ? 
            1.0f : 
             (data[28 /* X29 */] <0.14505747f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13798878f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.16460377f ? 
                         (data[21 /* X22 */] <0.1140199f ? 
                            0.0f : 
                            1.0f) : 
                         (data[13 /* X14 */] <0.1064271f ? 
                             (data[6 /* X7 */] <0.1614973f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.36749727f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[12 /* X13 */] <0.10538781f ? 
             (data[11 /* X12 */] <-0.004465856f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2854253f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.148209f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10468838f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22509491f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08736013f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4621364f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22058813f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2686621f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.5760003f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.13577826f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.20850699f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.11036226f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.086409874f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2338514f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.015152241f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15306804f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.102504335f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20339891f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[18 /* X19 */] <-0.0911958f ? 
             (data[16 /* X17 */] <-0.0653651f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.59074605f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[25 /* X26 */] <-0.63993126f ? 
            1.0f : 
             (data[13 /* X14 */] <0.117526025f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2292287f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13327405f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.3557866f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18534715f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.025381427f ? 
         (data[22 /* X23 */] <0.09154615f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4273388f ? 
                 (data[3 /* X4 */] <-0.29251936f ? 
                     (data[18 /* X19 */] <0.096564405f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27312973f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11740842f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.049975198f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.05378463f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05687288f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.12876604f ? 
                     (data[13 /* X14 */] <0.10075485f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04877543f ? 
             (data[1 /* X2 */] <-0.7742883f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2589233f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0564285f ? 
                     (data[19 /* X20 */] <-0.42936373f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08816498f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25711694f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29039678f ? 
                 (data[26 /* X27 */] <-0.08232084f ? 
                     (data[27 /* X28 */] <-0.014528256f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.09936844f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26903597f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26082858f ? 
                 (data[24 /* X25 */] <-0.45856878f ? 
                     (data[13 /* X14 */] <0.21049431f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19158599f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.107702166f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0030888414f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (data[22 /* X23 */] <0.08817121f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18103056f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13726234f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.026462082f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15783215f ? 
                 (data[5 /* X6 */] <0.09822318f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.08667982f ? 
             (data[4 /* X5 */] <0.1680326f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21452531f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.43644708f ? 
                 (data[12 /* X13 */] <0.09016249f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4461941f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.25509235f ? 
             (data[33 /* X34 */] <-0.102165334f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093333595f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14692962f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.109862074f ? 
                         (data[15 /* X16 */] <0.079417706f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16236104f ? 
             (data[10 /* X11 */] <-1.0836871f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2630006f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.021488504f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.12822577f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.08266565f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.51322216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28707534f ? 
             (data[7 /* X8 */] <0.028894436f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25826618f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5328942f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.13327152f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.14738418f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17578125f ? 
                 (data[1 /* X2 */] <-0.4263872f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[29 /* X30 */] <0.06043637f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27299905f ? 
                 (data[32 /* X33 */] <-0.796875f ? 
                     (data[9 /* X10 */] <0.054747276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[5 /* X6 */] <0.12628214f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13035579f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.61228853f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.5458069f ? 
                     (data[30 /* X31 */] <0.13297036f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.44335938f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.166551f ? 
                 (data[23 /* X24 */] <0.027494377f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13644303f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.14904024f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X2 */] <-0.18737115f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0234375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.019148694f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10093036f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43913534f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.47651976f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02813064f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13372636f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.043961544f ? 
                 (data[26 /* X27 */] <-0.36550546f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.042205434f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5673086f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[25 /* X26 */] <-0.6252776f ? 
            1.0f : 
             (data[5 /* X6 */] <0.104046635f ? 
                 (data[33 /* X34 */] <-0.32932833f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.19241047f ? 
             (data[25 /* X26 */] <-0.27225745f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[26 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42416224f ? 
                 (data[29 /* X30 */] <0.068849966f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.42848623f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.19649968f ? 
                    1.0f : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.35742188f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (data[27 /* X28 */] <-0.14031523f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.125f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19855945f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.175565f ? 
             (data[5 /* X6 */] <0.08848843f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06513141f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.2736112f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.010930833f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.01708663f ? 
             (data[18 /* X19 */] <0.11469145f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.3748667f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19293337f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.20804667f ? 
                 (data[10 /* X11 */] <-0.038819563f ? 
                     (data[0 /* X1 */] <0.06430851f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3192152f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04237691f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.082610406f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.09725846f ? 
                    1.0f : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.05619759f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011889497f ? 
             (data[27 /* X28 */] <-0.10483685f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.122294374f ? 
                     (data[33 /* X34 */] <-0.22115546f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.05686672f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24946547f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19996475f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26607347f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.16640306f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.29567486f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15084949f ? 
             (data[33 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20540588f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23172122f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.256914f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[31 /* X32 */] <0.099660054f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.71676046f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35439467f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9082436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.07750898f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23947822f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.04740172f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.14987427f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.039204445f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03461732f ? 
                 (data[0 /* X1 */] <-0.042178813f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14849293f ? 
                         (data[34 /* X35 */] <-0.5113625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.5384625f ? 
                 (data[15 /* X16 */] <0.052133292f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27850807f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (data[11 /* X12 */] <-0.3923825f ? 
             (data[32 /* X33 */] <-0.109375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.14987427f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (data[21 /* X22 */] <0.07460058f ? 
            0.0f : 
            1.0f) : 
         (data[17 /* X18 */] <-0.23830482f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.37253183f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.14694284f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10566468f ? 
             (data[26 /* X27 */] <-0.013451083f ? 
                 (data[9 /* X10 */] <-0.7209747f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.05871241f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19597925f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15150572f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17725973f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05764531f ? 
            0.0f : 
             (data[31 /* X32 */] <0.067994766f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15043326f ? 
         (data[21 /* X22 */] <0.08547632f ? 
             (data[1 /* X2 */] <-0.13160075f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.06618255f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.040463116f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.048657805f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.063358516f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2890625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084634714f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.15471242f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.056429263f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15715185f ? 
                 (data[0 /* X1 */] <0.060636535f ? 
                     (data[13 /* X14 */] <0.11299118f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10400673f ? 
                 (data[0 /* X1 */] <0.16712387f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.026720569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.070857115f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08724842f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.5176632f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109244436f ? 
             (data[17 /* X18 */] <-0.54095066f ? 
                 (data[18 /* X19 */] <-0.06801644f ? 
                     (data[24 /* X25 */] <-0.14170147f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.6602442f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.2724721f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15936096f ? 
             (data[34 /* X35 */] <-0.90838045f ? 
                 (data[20 /* X21 */] <0.1536314f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[7 /* X8 */] <0.057002116f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.027887238f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[7 /* X8 */] <0.043253794f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12227371f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.8888889f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07084345f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12590696f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.025734752f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16882181f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5356648f ? 
                 (data[18 /* X19 */] <-0.05165454f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18538159f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22133905f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[6 /* X7 */] <0.114007324f ? 
             (data[35 /* X36 */] <0.09375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (data[19 /* X20 */] <-0.46524978f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2973651f ? 
             (data[18 /* X19 */] <-0.073470406f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24798474f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.14247462f ? 
                        1.0f : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.28291467f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06625687f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15043326f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41865426f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.06194094f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021484375f ? 
             (data[35 /* X36 */] <0.0234375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19140625f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.040560316f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2554544f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1804315f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (data[9 /* X10 */] <-0.479604f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.040301964f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.0703125f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.081658624f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15594874f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.07865382f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2609939f ? 
            0.0f : 
             (data[5 /* X6 */] <0.23834291f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12183214f ? 
             (data[23 /* X24 */] <0.053151127f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.06909008f ? 
                     (data[15 /* X16 */] <0.11035802f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.20804667f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17381059f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.9453125f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12417507f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.12108905f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5145025f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11208786f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.060910504f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.22265625f ? 
             (data[25 /* X26 */] <-0.3202149f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[35 /* X36 */] <0.16601562f ? 
             (data[33 /* X34 */] <-0.33293408f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05390157f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12394475f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25572726f ? 
            0.0f : 
             (data[22 /* X23 */] <0.26857212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15826343f ? 
             (data[9 /* X10 */] <-0.070204474f ? 
                 (data[23 /* X24 */] <0.047449626f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.42572618f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.049975198f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.88447297f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.42479876f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26259527f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08816498f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19338074f ? 
             (data[34 /* X35 */] <-0.7976735f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15550235f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.33337712f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
            0.0f : 
             (data[0 /* X1 */] <0.16345188f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.421875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12325385f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03705771f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[7 /* X8 */] <0.030422026f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.18916532f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.108234406f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.095768385f ? 
                        1.0f : 
                        0.0f)))) : 
        0.8888889f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059778765f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.045158695f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.12017059f ? 
             (data[4 /* X5 */] <0.16317481f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.24760316f ? 
                 (data[7 /* X8 */] <0.046003457f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21619849f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.83203125f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.42845416f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <0.40153635f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12924494f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10859357f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.086409874f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.20940295f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08450938f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2952834f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.088416785f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12435175f ? 
                     (data[33 /* X34 */] <0.12499688f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[0 /* X1 */] <0.18456575f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.030823676f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.014596f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.6815629f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2621222f ? 
                     (data[27 /* X28 */] <-0.42736757f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.29009667f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10783974f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12595056f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <0.37888926f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (data[0 /* X1 */] <-0.14866614f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04546854f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24950564f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34185928f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.31061843f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0653651f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.06093375f ? 
                     (data[31 /* X32 */] <0.060910504f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.081908144f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4837817f ? 
             (data[14 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20745525f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.026444336f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[8 /* X9 */] <-0.15136117f ? 
             (data[20 /* X21 */] <0.0736014f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08450938f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.013453659f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11380048f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.02583144f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.01180917f ? 
                        0.0f : 
                        1.0f) : 
                     (data[15 /* X16 */] <0.1567575f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[35 /* X36 */] <-0.30859375f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27932605f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7686261f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2980832f ? 
                 (data[27 /* X28 */] <-0.20804667f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08754573f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22268687f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.10402906f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[7 /* X8 */] <0.06800077f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.09278838f ? 
         (data[5 /* X6 */] <0.09822318f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.070254214f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0054534054f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07655529f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07578034f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[35 /* X36 */] <0.21484375f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29537416f ? 
                 (data[33 /* X34 */] <-0.92067325f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20731366f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12822087f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55084544f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.2999053f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11368424f ? 
         (data[12 /* X13 */] <0.16676486f ? 
             (data[6 /* X7 */] <0.108425036f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22972076f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1875f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23321944f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.49408075f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16923112f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4746016f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.056952126f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26863146f ? 
             (data[9 /* X10 */] <-0.8738974f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.096878015f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.10336309f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1534906f ? 
                 (data[11 /* X12 */] <0.13606244f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19366865f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.109940544f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1184964f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.008339095f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.030666217f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.20492955f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14677636f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[8 /* X9 */] <-0.1924455f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15691502f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.61598635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[31 /* X32 */] <0.046675973f ? 
             (data[21 /* X22 */] <0.10274956f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.2626874f ? 
                    0.0f : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.13327152f ? 
                 (data[10 /* X11 */] <-0.36160555f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2890625f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.9729568f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6982659f ? 
                 (data[28 /* X29 */] <0.10722942f ? 
                     (data[24 /* X25 */] <-0.15176076f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
             (data[7 /* X8 */] <0.03133858f ? 
                 (data[23 /* X24 */] <0.057323318f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27118996f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15724903f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19422908f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3993048f ? 
                 (data[17 /* X18 */] <-0.17670435f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.029805906f ? 
                         (data[17 /* X18 */] <-0.53922653f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.060663294f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1826695f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24695015f ? 
             (data[19 /* X20 */] <-0.7904016f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33991188f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26031277f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0234375f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.11151318f ? 
                 (data[19 /* X20 */] <-0.4343238f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22421095f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[26 /* X27 */] <-0.21809882f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0241706f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.033372786f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.39937845f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[32 /* X33 */] <-0.8886719f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.70641375f ? 
                 (data[25 /* X26 */] <-0.6212811f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2567199f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.38561034f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07075044f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.015478101f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11412936f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18013975f ? 
             (data[32 /* X33 */] <-0.80078125f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45721003f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.5436833f ? 
                     (data[4 /* X5 */] <0.102275126f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.31931323f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.09530665f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.041177914f ? 
             (data[13 /* X14 */] <0.117526025f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.069493f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.109065585f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.12694347f ? 
                         (data[31 /* X32 */] <0.04126101f ? 
                            0.0f : 
                            1.0f) : 
                         (data[27 /* X28 */] <-0.30181226f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[5 /* X6 */] <0.06672842f ? 
            1.0f : 
             (data[4 /* X5 */] <0.07798918f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.06769264f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1906814f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.84825f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.07225136f ? 
            1.0f : 
             (data[22 /* X23 */] <0.08797268f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19131969f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.054042142f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09507502f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01323073f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <-0.21809882f ? 
             (data[10 /* X11 */] <-0.058097564f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32993966f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.10186951f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03461732f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16990995f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.107238546f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18844174f ? 
                 (data[9 /* X10 */] <-0.46285796f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.453125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6464532f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45827755f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.3338049f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.06060417f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[20 /* X21 */] <0.09128679f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.046781328f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16576663f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1602f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.2999053f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08260888f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17670435f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.38240784f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.018181818f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.36103782f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3473471f ? 
                 (data[23 /* X24 */] <0.027494377f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28985822f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.09671973f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.28515625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43913534f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15293485f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <0.09893377f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25812152f ? 
             (data[7 /* X8 */] <0.028283399f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.20741777f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14214581f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.28815776f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40985283f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[13 /* X14 */] <0.10914364f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13460375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34670615f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.020073274f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09805044f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.070857115f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17056616f ? 
            1.0f : 
             (data[29 /* X30 */] <0.13375482f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1051957f ? 
             (data[20 /* X21 */] <0.11761332f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16715102f ? 
                     (data[34 /* X35 */] <-0.26704374f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.40262935f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17038846f ? 
                     (data[10 /* X11 */] <-0.43069613f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[34 /* X35 */] <-0.5457198f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1915594f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1624115f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[34 /* X35 */] <-0.24986508f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18279405f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13354534f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16908266f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X13 */] <0.14583005f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.7098715f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.41055903f ? 
             (data[16 /* X17 */] <-0.43902263f ? 
                 (data[34 /* X35 */] <-0.13661382f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21022749f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.1003655f ? 
            1.0f : 
             (data[12 /* X13 */] <0.11490363f ? 
                 (data[20 /* X21 */] <0.14722581f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[10 /* X11 */] <-0.8215063f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5414379f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.23696569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0716738f ? 
             (data[19 /* X20 */] <-0.44371817f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
                1.0f : 
                0.0f)) : 
        0.06521739f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[29 /* X30 */] <0.15875521f ? 
             (data[7 /* X8 */] <0.071055956f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16608582f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25870514f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.01953125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[6 /* X7 */] <0.12265988f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.003983535f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08083254f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.1328125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[3 /* X4 */] <-0.25653622f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.62109375f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.06372352f ? 
             (data[32 /* X33 */] <-0.66796875f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.05261926f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26402068f ? 
                         (data[2 /* X3 */] <-0.1553123f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[14 /* X15 */] <0.08661994f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20426193f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2596482f ? 
                     (data[32 /* X33 */] <-0.79444313f ? 
                         (data[21 /* X22 */] <0.16885702f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16260143f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.062879115f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.175565f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17635208f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.25177383f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (data[23 /* X24 */] <0.02583144f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25711694f ? 
                 (data[2 /* X3 */] <-0.4470705f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.390625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11438616f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17342593f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.16980968f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
         (data[25 /* X26 */] <-0.5866452f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.255038f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.40429688f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.049865827f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03139623f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15250511f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13491693f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2476989f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.122576766f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06368395f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15715185f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4765625f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.32305053f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[14 /* X15 */] <0.12285822f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06507705f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.14257812f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[3 /* X4 */] <0.04877543f ? 
             (data[28 /* X29 */] <0.07985386f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.062879115f ? 
                 (data[26 /* X27 */] <0.07153668f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.204429f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.018181818f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
        0.024390243f : 
         (data[32 /* X33 */] <0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2815569f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (data[3 /* X4 */] <-0.009015702f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2925567f ? 
             (data[19 /* X20 */] <-0.5489839f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[14 /* X15 */] <0.12244169f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16003317f ? 
                 (data[27 /* X28 */] <-0.07834636f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.033421118f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28245342f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25791106f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[3 /* X4 */] <-0.27725378f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5356648f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54900944f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.265625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.050956227f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15322629f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19991663f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11586763f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1494809f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.36164194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26685518f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.26171875f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.45856878f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (data[28 /* X29 */] <0.0883154f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.034762353f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.44809443f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.17895995f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23159955f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.26171875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27319756f ? 
             (data[14 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19948962f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2351987f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.15158972f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
        0.8888889f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.070857115f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12563539f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22423218f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.11255905f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.16401017f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.02097887f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14552687f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23897558f ? 
                 (data[2 /* X3 */] <-0.4232535f ? 
                     (data[24 /* X25 */] <-0.4334206f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.23112598f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.40262935f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1550745f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20475395f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.115606025f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09507502f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17098427f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16534054f ? 
            0.0f : 
             (data[7 /* X8 */] <0.057002116f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (data[0 /* X1 */] <0.052185707f ? 
                 (data[21 /* X22 */] <0.08039454f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (data[31 /* X32 */] <0.058010876f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06372352f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.062062893f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.21878965f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.43744424f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.06563654f ? 
                     (data[13 /* X14 */] <0.13344319f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.102032475f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3621628f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19871199f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43701473f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[11 /* X12 */] <-0.6749029f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12861978f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06889453f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.12209824f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1629514f ? 
             (data[18 /* X19 */] <0.10105653f ? 
                 (data[15 /* X16 */] <0.050015803f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.12341898f ? 
                         (data[7 /* X8 */] <0.08380292f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07411114f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.17053896f ? 
                        1.0f : 
                        0.0f))) : 
             (data[30 /* X31 */] <0.068662554f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.059484124f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.12727942f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.09278838f ? 
         (data[26 /* X27 */] <0.040139902f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44299418f ? 
             (data[0 /* X1 */] <-0.14866614f ? 
                 (data[15 /* X16 */] <0.068239994f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33142027f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[28 /* X29 */] <0.12340589f ? 
             (data[0 /* X1 */] <0.10102828f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29060438f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.09771311f ? 
                 (data[21 /* X22 */] <0.191035f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.25478488f ? 
             (data[28 /* X29 */] <0.07189006f ? 
                 (data[30 /* X31 */] <0.0775326f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.2588606f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.034963965f ? 
                 (data[26 /* X27 */] <0.07955435f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.140625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.140625f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[7 /* X8 */] <0.04966968f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20715663f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.5f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19069092f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[9 /* X10 */] <-0.15686192f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16845112f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.140625f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3089828f ? 
            0.0f : 
             (data[18 /* X19 */] <0.38738978f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1805628f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-2.635672E-4f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08823938f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13213259f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.23325703f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (data[13 /* X14 */] <0.18725224f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06698579f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13733894f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.08469463f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[13 /* X14 */] <0.0889497f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[12 /* X13 */] <0.089924596f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25621644f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21049431f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3395759f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.13030626f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13795976f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2567199f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38025662f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34193155f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0072448347f ? 
                     (data[13 /* X14 */] <0.11093899f ? 
                         (data[21 /* X22 */] <0.07818489f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.21485479f ? 
                         (data[31 /* X32 */] <0.06771704f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <0.10656656f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
        0.02631579f : 
         (data[3 /* X4 */] <0.09893377f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26802796f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15004604f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.20976126f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.13114952f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14296128f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[25 /* X26 */] <-0.17101395f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143583f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.046003457f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.18206091f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.02538274f ? 
         (data[12 /* X13 */] <0.14535426f ? 
             (data[17 /* X18 */] <-0.5543421f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.7027158f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4273388f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.031108364f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.14011587f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[19 /* X20 */] <-0.6339142f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.8738974f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26942557f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.26929876f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19140625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* X27 */] <0.396465f ? 
         (data[34 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5279383f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18683869f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.33705896f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.049881786f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023588538f ? 
         (data[19 /* X20 */] <0.00366112f ? 
            0.0f : 
             (data[12 /* X13 */] <0.17532909f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.045528166f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.064522356f ? 
            1.0f : 
            0.0f) : 
         (data[13 /* X14 */] <0.10914364f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.18533236f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.091946416f ? 
                 (data[27 /* X28 */] <-0.04033071f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7845955f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (data[29 /* X30 */] <0.06043637f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09432885f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17492713f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.1918914f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24364285f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14422666f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14677636f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.25303558f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08564277f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.15826343f ? 
                     (data[34 /* X35 */] <-0.84351313f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.046511628f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-1.0933261f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.24986508f ? 
             (data[0 /* X1 */] <0.097356305f ? 
                 (data[32 /* X33 */] <-0.2421875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46875f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16034034f ? 
                         (data[27 /* X28 */] <-0.014528256f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.5784466f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.36061776f ? 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1526922f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.113010615f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9273325f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1982551f ? 
                     (data[27 /* X28 */] <-0.29835528f ? 
                         (data[34 /* X35 */] <-0.5243658f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16196442f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.091906875f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08547632f ? 
         (data[34 /* X35 */] <-0.24986508f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11858315f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4392748f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.18325536f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5706984f ? 
                 (data[6 /* X7 */] <0.10116805f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.2917228f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.16308826f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5366375f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.55871266f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.10440638f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6567865f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[14 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.272602f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78125f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2351987f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4757184f ? 
                            0.0f : 
                            1.0f) : 
                         (data[23 /* X24 */] <0.08545963f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[25 /* X26 */] <-0.27687836f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.8888889f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11906005f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07988987f ? 
                 (data[3 /* X4 */] <-0.020331131f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.23556231f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.108294055f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.33711603f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.3958701f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21049431f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.025734752f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1110749f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.05868638f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.08586192f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.1213362f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.15284853f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16605435f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0060535227f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.17670435f ? 
                 (data[30 /* X31 */] <0.09749019f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.11785984f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05640822f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.46703815f ? 
                 (data[35 /* X36 */] <0.0f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2716102f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.16096203f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.16035675f ? 
             (data[0 /* X1 */] <0.26259527f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[29 /* X30 */] <0.047215015f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06887466f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06932973f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[19 /* X20 */] <-0.61357874f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1904738f ? 
                 (data[2 /* X3 */] <-0.411345f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.4220382f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.28545406f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20047124f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44594464f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.020942232f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.179946f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0087503195f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4591761f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15377717f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.56703675f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.5788584f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.22196054f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6621274f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15715185f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.055642627f ? 
             (data[12 /* X13 */] <0.09777515f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39831105f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <0.3370302f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20793882f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10978053f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[1 /* X2 */] <-0.7132064f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093333595f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.091262415f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.027256815f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14526327f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.098006986f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25354347f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.35512134f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16727169f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.031914074f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.9277344f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2310952f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.7504039f ? 
                 (data[34 /* X35 */] <-0.7733669f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10678571f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.044548765f ? 
            0.0f : 
             (data[8 /* X9 */] <0.26448464f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.33142027f ? 
             (data[4 /* X5 */] <0.088095956f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.412108f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.15919434f ? 
             (data[30 /* X31 */] <0.08584826f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1075188f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04838066f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.097814836f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[3 /* X4 */] <-0.4375424f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.57065934f ? 
                 (data[4 /* X5 */] <0.1025342f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27546465f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.0033583972f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[19 /* X20 */] <-0.3025664f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[16 /* X17 */] <-0.69661987f ? 
             (data[20 /* X21 */] <0.19252044f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09201558f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16934185f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.4689474f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27433664f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3226841f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.1837556f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08724842f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
        0.018181818f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09214734f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23459949f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.018863745f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.30879512f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.05424642f ? 
             (data[20 /* X21 */] <0.16629727f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1364772f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8400256f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (data[11 /* X12 */] <-0.43483377f ? 
             (data[20 /* X21 */] <0.22545187f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.147701f ? 
                 (data[12 /* X13 */] <0.094920404f ? 
                     (data[16 /* X17 */] <-0.088011004f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1669517f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[4 /* X5 */] <0.04694696f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08545627f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16782035f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.15970865f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[22 /* X23 */] <0.08578889f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09214734f ? 
             (data[21 /* X22 */] <0.13004555f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.08516246f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58582f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4258355f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.01310018f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
             (data[26 /* X27 */] <-0.21477385f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.030116508f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.18715698f ? 
                         (data[22 /* X23 */] <0.16418374f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[32 /* X33 */] <-0.26536384f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[5 /* X6 */] <0.13114952f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20625551f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.074748635f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.33184513f ? 
                 (data[10 /* X11 */] <-0.53733367f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1675484f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.0928888f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17941783f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.14493442f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09427456f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.12641455f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.2331216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06126646f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21669555f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18883166f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16129485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[9 /* X10 */] <-0.15990666f ? 
             (data[33 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21996802f ? 
                 (data[10 /* X11 */] <-0.50149155f ? 
                     (data[7 /* X8 */] <0.14132516f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25870514f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01953125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[19 /* X20 */] <-0.23438293f ? 
             (data[33 /* X34 */] <0.18268985f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3117995f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1308657f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.075333215f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.07841083f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.40124592f ? 
                             (data[16 /* X17 */] <-0.29347828f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[11 /* X12 */] <0.059942946f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.812645f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.19140625f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.14987427f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23197275f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023195773f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10955126f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2612355f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
             (data[28 /* X29 */] <0.07189006f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24529378f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.39091867f ? 
                        0.0f : 
                        1.0f))) : 
             (data[35 /* X36 */] <0.28515625f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.026019754f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19662523f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14197178f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03707666f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.094886385f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.28828904f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14552687f ? 
             (data[23 /* X24 */] <0.026069002f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10599011f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.2347419f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.107825294f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17046754f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30704492f ? 
             (data[14 /* X15 */] <0.13327152f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15550235f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <0.08576727f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4356983f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14223936f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
        0.057142857f : 
         (data[18 /* X19 */] <0.13378033f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[23 /* X24 */] <0.07453175f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14984296f ? 
            0.0f : 
             (data[20 /* X21 */] <0.08213918f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.117692664f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14792182f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[34 /* X35 */] <-0.6583355f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16178532f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24008806f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.17777315f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17332159f ? 
         (data[34 /* X35 */] <-0.6812404f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.47628123f ? 
                 (data[10 /* X11 */] <-0.15448755f ? 
                     (data[23 /* X24 */] <0.036046628f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.23749459f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25669953f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.16794401f ? 
             (data[33 /* X34 */] <-0.3581744f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21484375f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.3509825f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.35459495f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10205666f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.41666833f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.69140625f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5545174f ? 
                 (data[31 /* X32 */] <0.033495855f ? 
                     (data[10 /* X11 */] <-0.6942715f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <-0.16073388f ? 
                         (data[3 /* X4 */] <-0.15730992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[34 /* X35 */] <0.47736493f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[8 /* X9 */] <-0.028497629f ? 
             (data[34 /* X35 */] <0.16051406f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.108919f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15298589f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.06530109f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[18 /* X19 */] <-0.021657722f ? 
             (data[34 /* X35 */] <-0.24795635f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.46679688f ? 
             (data[22 /* X23 */] <0.08598742f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.111225784f ? 
                     (data[14 /* X15 */] <0.16364358f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6300913f ? 
             (data[3 /* X4 */] <-0.24672262f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5724422f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.28025037f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15853694f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5990515f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.22886895f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2553634f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11986008f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.20596406f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.11616339f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.578125f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0719818f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13169925f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27122098f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.2776705f ? 
         (data[34 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15140867f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18729937f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09021058f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30606923f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11199541f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[34 /* X35 */] <-0.9770951f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.84157455f ? 
             (data[3 /* X4 */] <0.01497307f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21226484f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.08531061f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[7 /* X8 */] <0.027672362f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08621633f ? 
            1.0f : 
             (data[22 /* X23 */] <0.11378108f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (data[34 /* X35 */] <-0.15824556f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.056429263f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16992633f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15019089f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.1268466f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.76860464f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.07214014f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.02805971f ? 
            0.0f : 
             (data[22 /* X23 */] <0.13641305f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.23593394f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.0719818f ? 
             (data[25 /* X26 */] <-0.5093804f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <0.16608894f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
        0.028571429f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19828549f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14157283f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.27809995f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.35324743f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.12791304f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24986508f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.046932183f ? 
             (data[0 /* X1 */] <-0.10827439f ? 
                 (data[35 /* X36 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.9770951f ? 
                     (data[27 /* X28 */] <-0.24675037f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.37811235f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27364513f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.047993988f ? 
             (data[21 /* X22 */] <0.09251356f ? 
                 (data[35 /* X36 */] <0.0f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[22 /* X23 */] <0.09690636f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1399999f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.17682885f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[34 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07149432f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.063358516f ? 
             (data[13 /* X14 */] <0.12971859f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55084544f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.8333333f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0425256f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09834204f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28761658f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.105473086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (data[21 /* X22 */] <0.073321074f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13630079f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.036594823f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.22122473f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.108747356f ? 
                 (data[22 /* X23 */] <0.088369735f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.23136763f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.055551436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (data[21 /* X22 */] <0.09805806f ? 
             (data[28 /* X29 */] <0.10822489f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.108425036f ? 
                1.0f : 
                0.0f)) : 
        0.016666668f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19241047f ? 
             (data[16 /* X17 */] <-0.6569895f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24909878f ? 
                1.0f : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.2491318f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[11 /* X12 */] <-0.3923825f ? 
             (data[28 /* X29 */] <0.14854163f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25903934f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[30 /* X31 */] <0.05840657f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10403752f ? 
             (data[19 /* X20 */] <-0.31692082f ? 
                 (data[24 /* X25 */] <-0.20205715f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18683869f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.107617274f ? 
             (data[19 /* X20 */] <-0.496351f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.14011587f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.117782146f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5056346f ? 
            0.0f : 
             (data[8 /* X9 */] <0.35143423f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.029180566f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1431606f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.117782146f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25659746f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3160241f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.24936312f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.039402127f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386073f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[26 /* X27 */] <-0.10061683f ? 
             (data[9 /* X10 */] <-0.2527711f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3270609f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.75f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[34 /* X35 */] <-0.38729438f ? 
             (data[35 /* X36 */] <-0.5234375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.1234348f ? 
             (data[26 /* X27 */] <-0.041875828f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.08450938f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15550235f ? 
                     (data[35 /* X36 */] <-0.875f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.052046627f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[0 /* X1 */] <-0.2680054f ? 
             (data[35 /* X36 */] <-0.4765625f ? 
                1.0f : 
                0.0f) : 
             (data[29 /* X30 */] <0.08327327f ? 
                 (data[1 /* X2 */] <-0.16612528f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.20214802f ? 
            1.0f : 
             (data[14 /* X15 */] <0.119942494f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.1171875f ? 
                     (data[3 /* X4 */] <-0.113693975f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[34 /* X35 */] <-0.90838045f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09769504f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24276057f ? 
                 (data[32 /* X33 */] <0.1953125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (data[0 /* X1 */] <-0.20925376f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0234375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.12151555f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13545547f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[34 /* X35 */] <0.06698579f ? 
            0.0f : 
             (data[35 /* X36 */] <0.21484375f ? 
                 (data[32 /* X33 */] <-0.59375f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.5998729f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.578125f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00483003f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15779366f ? 
         (data[9 /* X10 */] <-0.48721585f ? 
             (data[3 /* X4 */] <-0.25326502f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10220496f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08463511f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.05819323f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.097814985f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35517746f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23969749f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.053137023f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20694622f ? 
                 (data[24 /* X25 */] <-0.45856878f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19366865f ? 
         (data[7 /* X8 */] <0.058835227f ? 
            0.0f : 
             (data[12 /* X13 */] <0.0787435f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10975332f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29039678f ? 
                         (data[35 /* X36 */] <-0.78125f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19109555f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22974797f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <0.26922813f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[34 /* X35 */] <-0.8186697f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12417507f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.122305684f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3069826f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026462082f ? 
                 (data[14 /* X15 */] <0.119942494f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20080405f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.018867925f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16200694f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06616767f ? 
             (data[3 /* X4 */] <-0.22709544f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14107557f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4375f ? 
                        0.0f : 
                        1.0f))) : 
             (data[16 /* X17 */] <-0.50696033f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43155518f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10045086f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.12348302f ? 
         (data[9 /* X10 */] <-0.15381718f ? 
             (data[30 /* X31 */] <0.08821754f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15391849f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0056633535f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <-0.37538967f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15523377f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.054454487f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
        0.028571429f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08816498f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19575131f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.10468838f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.2144973f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.02583144f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20958224f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23969749f ? 
                     (data[19 /* X20 */] <-0.3910853f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28125f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0011876418f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.089067645f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04091307f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.085425526f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.07848608f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10093036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[7 /* X8 */] <0.026755808f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32175145f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09696482f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078570314f ? 
             (data[27 /* X28 */] <-0.08548501f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.10859357f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[32 /* X33 */] <-0.0234375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14481287f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.099948965f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.15553299f ? 
             (data[15 /* X16 */] <0.06368395f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.024415875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15435275f ? 
             (data[14 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.14326829f ? 
                0.0f : 
                1.0f)) : 
        0.8888889f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46462673f ? 
            0.0f : 
             (data[31 /* X32 */] <0.095706016f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16858238f ? 
             (data[2 /* X3 */] <-0.33989403f ? 
                 (data[22 /* X23 */] <0.18366228f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5710255f ? 
             (data[21 /* X22 */] <0.06820308f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30035153f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34010202f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29654825f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18119529f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18114027f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14667684f ? 
                                        0.0f : 
                                         (data[17 /* X18 */] <-0.04707551f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (data[25 /* X26 */] <-0.2250503f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[18 /* X19 */] <0.111964464f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08204918f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.049610462f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2973851f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.014412239f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.26190534f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.2629353f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16404375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (data[26 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29564306f ? 
             (data[31 /* X32 */] <0.064073734f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.35742188f ? 
             (data[31 /* X32 */] <0.051420815f ? 
                 (data[18 /* X19 */] <0.17741206f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.08247241f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10088306f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.06690746f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06954172f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21854423f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (data[11 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16343744f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.102032475f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.071771875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.017242536f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.015281665f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.45328775f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34193155f ? 
             (data[23 /* X24 */] <0.026069002f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15862103f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.36237648f ? 
                         (data[11 /* X12 */] <-0.19183691f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[14 /* X15 */] <0.16284528f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5086177f ? 
             (data[35 /* X36 */] <-0.90234375f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3065488f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14777313f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.051120326f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17332159f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21491179f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12477622f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28618708f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1853207f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.10898326f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.20925376f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.215504f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[14 /* X15 */] <0.16409488f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.12109375f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.056148943f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12156913f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[14 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48216903f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3414846f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4621364f ? 
             (data[0 /* X1 */] <-0.3139051f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.0491127f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10450561f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23420443f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[21 /* X22 */] <0.13004555f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.32546932f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09233847f ? 
             (data[33 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.014499508f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14104563f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27701604f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <-0.11502499f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.19172873f ? 
         (data[17 /* X18 */] <-0.5623769f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23016988f ? 
             (data[0 /* X1 */] <-0.20925376f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.08441007f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.024042286f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06977045f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20156732f ? 
             (data[13 /* X14 */] <0.1083816f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[16 /* X17 */] <-0.68812764f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11249875f ? 
                 (data[8 /* X9 */] <-0.19294575f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15936902f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08531061f ? 
             (data[15 /* X16 */] <0.103386655f ? 
                 (data[31 /* X32 */] <0.072509006f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[3 /* X4 */] <-0.024281284f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13847753f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35439467f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.08199869f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124895f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16224484f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06498568f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.2554102f ? 
             (data[31 /* X32 */] <0.057747275f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22131515f ? 
                     (data[1 /* X2 */] <-0.2298629f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0234375f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[12 /* X13 */] <0.09753726f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.07999569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.2331216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08854794f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11310377f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22035244f ? 
             (data[23 /* X24 */] <0.026069002f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.6111863f ? 
                     (data[2 /* X3 */] <-0.31012276f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17781352f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20897025f ? 
             (data[35 /* X36 */] <-0.30859375f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07476932f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.051159926f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41865426f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44173676f ? 
                 (data[15 /* X16 */] <0.042205434f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18288551f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19069092f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X9 */] <-0.119227625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[3 /* X4 */] <-0.25653622f ? 
            0.0f : 
             (data[35 /* X36 */] <0.09765625f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0832962f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.048875f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06042963f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.026119133f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75222355f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21487062f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1550745f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.18256502f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (data[3 /* X4 */] <-0.40046883f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.87890625f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2596482f ? 
                     (data[14 /* X15 */] <0.09661671f ? 
                         (data[8 /* X9 */] <0.10948757f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.012410325f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.12560768f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15834953f ? 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.114197746f ? 
                     (data[30 /* X31 */] <0.10192521f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25711694f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09610846f ? 
                 (data[9 /* X10 */] <-0.8830316f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.1021344f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[16 /* X17 */] <-0.3611773f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.9277344f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.76682323f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.207242f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.11773808f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.16834965f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.51399213f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.027344648f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0014698051f ? 
            0.0f : 
             (data[23 /* X24 */] <0.060278002f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[12 /* X13 */] <0.115379415f ? 
             (data[0 /* X1 */] <0.18915573f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15514547f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.048993547f ? 
                 (data[27 /* X28 */] <-0.09193563f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09794156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18523587f ? 
            0.0f : 
            1.0f) : 
        0.8888889f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[3 /* X4 */] <0.08475859f ? 
             (data[21 /* X22 */] <0.093793064f ? 
                 (data[1 /* X2 */] <-0.47950184f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09834204f ? 
                 (data[24 /* X25 */] <-0.6768164f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10316009f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
             (data[24 /* X25 */] <-0.735199f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.45236033f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.5155418f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.53462946f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[14 /* X15 */] <0.12993926f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[13 /* X14 */] <0.13276672f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3440367f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.02287003f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.2109375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.140625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18991937f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2554544f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44173676f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10042479f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.008764774f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[13 /* X14 */] <0.10571448f ? 
             (data[23 /* X24 */] <0.1001885f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37890625f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.12364276f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09752888f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (data[3 /* X4 */] <-0.29360977f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15435275f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.061227232f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15724903f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.015276133f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13909112f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.13660377f ? 
                         (data[19 /* X20 */] <-0.31912452f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[30 /* X31 */] <0.09139204f ? 
            0.0f : 
             (data[21 /* X22 */] <0.12820105f ? 
                 (data[9 /* X10 */] <-0.21318954f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.010930833f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7433858f ? 
             (data[35 /* X36 */] <-0.87890625f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15644176f ? 
                     (data[6 /* X7 */] <0.11568201f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42458943f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21803728f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.5113625f ? 
                        1.0f : 
                        0.0f))) : 
             (data[21 /* X22 */] <0.12961905f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18719651f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0025726364f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013085698f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.07919573f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
             (data[7 /* X8 */] <0.031949617f ? 
                 (data[24 /* X25 */] <-0.1316422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.24961042f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <0.14453125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[9 /* X10 */] <-0.51157373f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08816498f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15755327f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16052994f ? 
                 (data[25 /* X26 */] <-0.3175506f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[27 /* X28 */] <-0.02581683f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12452166f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13590243f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.019148694f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.078125f ? 
                        1.0f : 
                        0.0f))) : 
             (data[29 /* X30 */] <0.12317774f ? 
                 (data[13 /* X14 */] <0.16782035f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13847753f ? 
            0.0f : 
             (data[5 /* X6 */] <0.110821076f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06800077f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[19 /* X20 */] <-0.43773714f ? 
            0.0f : 
             (data[4 /* X5 */] <0.1025342f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07735209f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.012410325f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.009613281f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[30 /* X31 */] <0.09333236f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.1475946f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
             (data[29 /* X30 */] <0.0604186f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.07465403f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[1 /* X2 */] <-0.7132064f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.3946739f ? 
             (data[28 /* X29 */] <0.12614344f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24496679f ? 
             (data[19 /* X20 */] <-0.3982625f ? 
                 (data[28 /* X29 */] <0.19682215f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.09335285f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6164564f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12912987f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16141465f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.043961544f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10438576f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.122305684f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16745564f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.07880122f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.00366112f ? 
            0.0f : 
             (data[6 /* X7 */] <0.11121618f ? 
                 (data[25 /* X26 */] <-0.28025037f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13352473f ? 
             (data[19 /* X20 */] <-0.28103477f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (data[18 /* X19 */] <0.032881945f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37091857f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.06404224f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4273388f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11368424f ? 
         (data[21 /* X22 */] <0.13559003f ? 
             (data[12 /* X13 */] <0.13101874f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3216052f ? 
                 (data[10 /* X11 */] <-0.7775654f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.40569744f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.08225971f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0326546f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10220496f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18996875f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.123563446f ? 
                 (data[20 /* X21 */] <0.10958204f ? 
                     (data[4 /* X5 */] <0.09820272f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.027887238f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.140625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117782146f ? 
             (data[27 /* X28 */] <-0.19192015f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.043648627f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08910901f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1625339f ? 
             (data[20 /* X21 */] <0.08884743f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18306722f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.3412091f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09507502f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[0 /* X1 */] <-0.15968207f ? 
             (data[12 /* X13 */] <0.13627161f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.09255929f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.265625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.209596f ? 
             (data[27 /* X28 */] <-0.08548501f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16700275f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40865508f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.53125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19495815f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.60929173f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.59174967f ? 
                 (data[2 /* X3 */] <-0.26248878f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.11500453f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1156055f ? 
         (data[10 /* X11 */] <-0.8215063f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33653572f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.66796875f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26284817f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.140625f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.7051121f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (data[34 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13098165f ? 
                 (data[26 /* X27 */] <-0.09064194f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.97226363f ? 
                         (data[26 /* X27 */] <0.45749068f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.2562457f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[24 /* X25 */] <-0.735199f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.28035152f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.10336309f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.10205666f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29336238f ? 
             (data[18 /* X19 */] <-0.09255929f ? 
                 (data[26 /* X27 */] <-0.11345413f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16035675f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.09428125f ? 
             (data[33 /* X34 */] <-0.6141835f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.012996428f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-5.018275E-4f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.11142974f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17788632f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.36284053f ? 
                 (data[31 /* X32 */] <0.0556539f ? 
                     (data[30 /* X31 */] <0.09527268f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.053639814f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[28 /* X29 */] <0.072138935f ? 
             (data[26 /* X27 */] <0.082256086f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.701252f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.12641455f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13904336f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.08199869f ? 
                     (data[29 /* X30 */] <0.14437698f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.47123078f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14191778f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24529502f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.12269398f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08910901f ? 
         (data[19 /* X20 */] <-0.19012348f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.07750898f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[23 /* X24 */] <0.11064125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17773438f ? 
             (data[2 /* X3 */] <-0.32203126f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.7002654f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (data[32 /* X33 */] <-0.37890625f ? 
            1.0f : 
             (data[29 /* X30 */] <0.101542786f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.1377416f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.08552054f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[18 /* X19 */] <-0.2548148f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.56533074f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.056524444f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.265625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.025381427f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.21538875f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                 (data[11 /* X12 */] <-0.67197526f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.81169665f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10369753f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.16314417f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (data[29 /* X30 */] <0.09745618f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20796381f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.06949412f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
                 (data[1 /* X2 */] <-0.60697705f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.32415774f ? 
                         (data[9 /* X10 */] <-0.25326213f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14288847f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16067833f ? 
             (data[35 /* X36 */] <-0.28515625f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.203125f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-1.0836871f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21163073f ? 
             (data[35 /* X36 */] <-0.59765625f ? 
                 (data[5 /* X6 */] <0.1955706f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.35759166f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.186298f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0031027184f ? 
                 (data[32 /* X33 */] <0.21875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29336238f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14738418f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0659795f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.22196054f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14756326f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.16642144f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29854542f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.185917f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.15030989f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.059969824f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (data[9 /* X10 */] <-0.42479876f ? 
             (data[19 /* X20 */] <-0.4126169f ? 
                 (data[14 /* X15 */] <0.164893f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11904797f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.04966968f ? 
                 (data[32 /* X33 */] <0.0f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.11476568f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13117355f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.082133755f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.1766527f ? 
                     (data[22 /* X23 */] <0.16113958f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15686192f ? 
             (data[21 /* X22 */] <0.103163764f ? 
                 (data[10 /* X11 */] <-0.23931076f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.09139204f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.61550385f ? 
                    1.0f : 
                    0.0f))) : 
        0.011494253f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13847753f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.22649777f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.13856259f ? 
            1.0f : 
             (data[20 /* X21 */] <0.14350696f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (data[4 /* X5 */] <0.099646546f ? 
            0.0f : 
             (data[35 /* X36 */] <0.21484375f ? 
                 (data[2 /* X3 */] <-0.1314953f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06537179f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.14470993f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[5 /* X6 */] <0.11540213f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.22890846f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.272602f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21837153f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28835702f ? 
                    0.0f : 
                    1.0f) : 
                 (data[18 /* X19 */] <0.024700996f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.02417543f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.40124592f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.28245342f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12563553f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.048390787f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (data[24 /* X25 */] <-0.6874174f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19048648f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.801491f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.19557908f ? 
             (data[25 /* X26 */] <-0.17367825f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.5495373f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29336238f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25154513f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                     (data[26 /* X27 */] <-0.11086417f ? 
                         (data[21 /* X22 */] <0.14156103f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[34 /* X35 */] <0.3895629f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.22739853f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48055637f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.48006836f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0024017578f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-5.7981786E-5f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.81027967f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.756041f ? 
                     (data[27 /* X28 */] <-0.08973693f ? 
                         (data[31 /* X32 */] <0.04614877f ? 
                             (data[10 /* X11 */] <-0.52002907f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.080704026f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
         (data[34 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08593475f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3507227f ? 
                     (data[3 /* X4 */] <-0.0962476f ? 
                         (data[24 /* X25 */] <-0.010930833f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15659171f ? 
             (data[4 /* X5 */] <0.11408479f ? 
                 (data[31 /* X32 */] <0.04193113f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25870514f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31741047f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.43689606f ? 
            0.0f : 
             (data[21 /* X22 */] <0.13260454f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1098953f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.59338087f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[33 /* X34 */] <-0.9477165f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.067589134f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17211583f ? 
                 (data[7 /* X8 */] <0.030116508f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26780495f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35118937f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47006196f ? 
                 (data[12 /* X13 */] <0.098726735f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.94117916f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.37411672f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26408067f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
        0.028571429f : 
         (data[19 /* X20 */] <-0.46405357f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.094886385f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.09375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24923567f ? 
             (data[19 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1520692f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26335046f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[1 /* X2 */] <-0.23915796f ? 
            1.0f : 
             (data[7 /* X8 */] <0.1370479f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1184964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17427088f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24103633f ? 
             (data[35 /* X36 */] <0.09765625f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078807876f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.2010206f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.10161509f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.83203125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45170206f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.077144936f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43913534f ? 
            0.0f : 
             (data[14 /* X15 */] <0.1707594f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23962757f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22892623f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19677769f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.02583144f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16235796f ? 
                 (data[24 /* X25 */] <-0.735199f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14526327f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16019754f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.089067645f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14322583f ? 
         (data[7 /* X8 */] <0.02981099f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.057189688f ? 
             (data[24 /* X25 */] <-0.15930521f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19534771f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (data[3 /* X4 */] <-0.20863746f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1342908f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.04825759f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07473f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.06303308f ? 
                         (data[16 /* X17 */] <-0.40505376f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[9 /* X10 */] <-0.5511553f ? 
             (data[24 /* X25 */] <-0.06880837f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.44012955f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[9 /* X10 */] <-0.8449724f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.46524978f ? 
                 (data[29 /* X30 */] <0.1635418f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18283883f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3540499f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0048573213f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.062501445f ? 
                 (data[11 /* X12 */] <-0.25039038f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1445723f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0060535227f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14659768f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.19837075f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.09581627f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1703494f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2716102f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.16503994f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (data[4 /* X5 */] <0.0909836f ? 
            1.0f : 
             (data[31 /* X32 */] <0.07830826f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.23015252f ? 
                    1.0f : 
                     (data[8 /* X9 */] <0.26432464f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.7132064f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.06645463f ? 
                         (data[27 /* X28 */] <-0.29835528f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12069394f ? 
             (data[20 /* X21 */] <0.1120214f ? 
                 (data[8 /* X9 */] <0.036301024f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <0.34792277f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12471429f ? 
            0.0f : 
             (data[26 /* X27 */] <0.020190129f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20468475f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.22954795f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.95419025f ? 
             (data[16 /* X17 */] <-0.35578227f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37928602f ? 
                 (data[27 /* X28 */] <-0.4015651f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.13385184f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (data[4 /* X5 */] <0.088817865f ? 
             (data[20 /* X21 */] <0.16446775f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <0.062018152f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06372352f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.02856549f ? 
                 (data[34 /* X35 */] <-0.18305919f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04562988f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.025381427f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18593083f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.71813464f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.23762152f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14645799f ? 
             (data[3 /* X4 */] <0.038961843f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.115253724f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.2080674f ? 
                1.0f : 
                0.0f)) : 
        0.055555556f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16801086f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22305694f ? 
                 (data[17 /* X18 */] <-0.5355941f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15448755f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X10 */] <0.051521085f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06550438f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5078125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12183214f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[11 /* X12 */] <-0.016176548f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.95419025f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.76682323f ? 
                 (data[19 /* X20 */] <-0.55855346f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09128412f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.0774776f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24510269f ? 
             (data[7 /* X8 */] <0.028894436f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22490855f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.18761204f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008445925f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.053151127f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[29 /* X30 */] <0.069811516f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.022838574f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3189395f ? 
             (data[14 /* X15 */] <0.10161509f ? 
                 (data[9 /* X10 */] <-0.07922114f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08938705f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2535642f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[29 /* X30 */] <0.06043637f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12341898f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.14475115f ? 
                     (data[23 /* X24 */] <0.04554913f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17414007f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25870514f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023265507f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12632038f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3088915f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39258587f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.069305375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22100504f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16162881f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (data[8 /* X9 */] <0.48941943f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16646017f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (data[22 /* X23 */] <0.11576634f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.028575981f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5670757f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20073552f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088811904f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.13724825f ? 
                0.0f : 
                1.0f)) : 
        0.8888889f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.009690295f ? 
         (data[11 /* X12 */] <-0.23721585f ? 
             (data[18 /* X19 */] <0.065605745f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07603502f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[33 /* X34 */] <-0.28245342f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.40625f ? 
                     (data[23 /* X24 */] <0.076975174f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16268836f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[0 /* X1 */] <-0.2202697f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46101835f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22719032f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (data[19 /* X20 */] <-0.41500932f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12748654f ? 
            0.0f : 
             (data[29 /* X30 */] <0.117889196f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19020808f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.027738543f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2778593f ? 
            0.0f : 
             (data[29 /* X30 */] <0.13760103f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
            1.0f) : 
         (data[24 /* X25 */] <-0.067514285f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23490532f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14926864f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15090531f ? 
         (data[6 /* X7 */] <0.12265988f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.087622166f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.011332576f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.57806396f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[21 /* X22 */] <0.09485932f ? 
             (data[14 /* X15 */] <0.10744654f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.09251356f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
         (data[16 /* X17 */] <-0.33145455f ? 
             (data[32 /* X33 */] <0.0234375f ? 
                 (data[26 /* X27 */] <0.2207947f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.058683757f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[31 /* X32 */] <0.06460094f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.9770951f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07356342f ? 
             (data[12 /* X13 */] <0.12394366f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.11669042f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.15966707f ? 
                 (data[2 /* X3 */] <-0.1314953f ? 
                     (data[20 /* X21 */] <0.15958902f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32605505f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29336238f ? 
            0.0f : 
             (data[27 /* X28 */] <0.004823587f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.17913543f ? 
             (data[28 /* X29 */] <0.112206794f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.16200694f ? 
         (data[31 /* X32 */] <0.05511125f ? 
             (data[34 /* X35 */] <0.15669659f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <-0.21920714f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.117751665f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.6660156f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2008445f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24448836f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03799492f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <0.06083675f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5554354f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.607956f ? 
                 (data[14 /* X15 */] <0.08661994f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18712103f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[9 /* X10 */] <-0.51157373f ? 
             (data[28 /* X29 */] <0.098767884f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.3286238f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15791735f ? 
                 (data[27 /* X28 */] <-0.0016270273f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27128756f ? 
             (data[9 /* X10 */] <-0.8742943f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22813213f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24496679f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1829727f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14568463f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[32 /* X33 */] <0.15625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[19 /* X20 */] <-0.53462946f ? 
                        1.0f : 
                        0.0f))) : 
             (data[28 /* X29 */] <0.22419772f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2061273f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.049610462f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.14191778f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.16343431f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.236429f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (data[33 /* X34 */] <-0.6917074f ? 
             (data[15 /* X16 */] <0.042205434f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19483653f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.08134579f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X9 */] <-0.33282116f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (data[30 /* X31 */] <0.08862015f ? 
             (data[18 /* X19 */] <0.062878765f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.47865298f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20534368f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.1718793f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14215848f ? 
                         (data[8 /* X9 */] <-0.013944867f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[13 /* X14 */] <0.08780665f ? 
             (data[28 /* X29 */] <0.11519322f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5545174f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5273233f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.2999053f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[5 /* X6 */] <0.1219874f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1467371f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.049312f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.034069635f ? 
             (data[32 /* X33 */] <0.0f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.072265625f ? 
             (data[27 /* X28 */] <-0.06613317f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.35742188f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.027141603f ? 
                 (data[3 /* X4 */] <-0.06135484f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17554209f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.43911138f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[33 /* X34 */] <-0.9729568f ? 
             (data[1 /* X2 */] <0.12866114f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06889086f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14635836f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.9277344f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.39381823f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.32721066f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[19 /* X20 */] <-0.44252196f ? 
             (data[23 /* X24 */] <0.0355715f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.37087977f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.46524978f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18459472f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.45302474f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (data[5 /* X6 */] <0.18354534f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.097385205f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11909364f ? 
                        1.0f : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.45856878f ? 
                 (data[12 /* X13 */] <0.20435235f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[33 /* X34 */] <0.12860341f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1982551f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09507502f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <0.42805213f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008445925f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06502925f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.14804216f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4302688f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15264599f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13962288f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.5998729f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2632368f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35118937f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2016493f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09029636f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15714964f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.17090422f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.08172852f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.38213563f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[12 /* X13 */] <0.11989944f ? 
             (data[21 /* X22 */] <0.11213255f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.46405357f ? 
            0.0f : 
             (data[10 /* X11 */] <-1.0836871f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23099665f ? 
             (data[19 /* X20 */] <-0.61597115f ? 
                 (data[32 /* X33 */] <0.359375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16032702f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[11 /* X12 */] <-0.04398944f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.43865615f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.36025682f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12454523f ? 
                     (data[29 /* X30 */] <0.08135016f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04237691f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37041947f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12728064f ? 
            0.0f : 
             (data[4 /* X5 */] <0.09748081f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.046579335f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[33 /* X34 */] <-0.5114193f ? 
             (data[5 /* X6 */] <0.15090531f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[11 /* X12 */] <-0.6749029f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <0.011274201f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[32 /* X33 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15298589f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X5 */] <0.05921947f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[32 /* X33 */] <0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30681536f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.067167245f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.083847366f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[28 /* X29 */] <0.08333802f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14108674f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16781259f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39701915f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20194264f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[8 /* X9 */] <-0.36495468f ? 
             (data[20 /* X21 */] <0.23094045f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12888399f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[25 /* X26 */] <-0.5373556f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21142551f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.13476562f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07227803f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07690341f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.03546951f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2022779f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12888399f ? 
             (data[23 /* X24 */] <0.042336278f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[23 /* X24 */] <0.03153294f ? 
             (data[4 /* X5 */] <0.12996686f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08724842f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.12740566f ? 
                 (data[27 /* X28 */] <-0.0016270273f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[23 /* X24 */] <0.027256815f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5699172f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16173099f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.42920774f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008445925f ? 
            0.0f : 
             (data[12 /* X13 */] <0.14963637f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2548051f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[34 /* X35 */] <-0.29567486f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18844174f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.0234375f ? 
             (data[2 /* X3 */] <-0.116609685f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15448755f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.08931087f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.756041f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23715644f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.10192521f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18618612f ? 
             (data[26 /* X27 */] <-0.12167492f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.46822596f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[5 /* X6 */] <0.06987789f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <0.0040690824f ? 
             (data[9 /* X10 */] <-0.4750369f ? 
                 (data[11 /* X12 */] <-0.3440759f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11310377f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10599011f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[9 /* X10 */] <-0.8738974f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <0.109837756f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (data[5 /* X6 */] <0.13286741f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
                 (data[15 /* X16 */] <0.042205434f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.10278999f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10041833f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.14725742f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.142477f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.43155518f ? 
                 (data[28 /* X29 */] <0.16425738f ? 
                     (data[3 /* X4 */] <0.034600247f ? 
                         (data[0 /* X1 */] <0.07899642f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[30 /* X31 */] <0.0725432f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16533749f ? 
                    1.0f : 
                    0.0f))) : 
        0.016393442f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[28 /* X29 */] <0.072138935f ? 
             (data[34 /* X35 */] <0.2292287f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25621644f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19161767f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.2725619f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.079283f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.12364805f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3279175f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.093277596f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03829243f ? 
                 (data[1 /* X2 */] <-0.43537304f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (data[11 /* X12 */] <-0.032278746f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.6331408f ? 
             (data[7 /* X8 */] <0.071055956f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20301482f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16384917f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11019685f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (data[32 /* X33 */] <-0.17773438f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20759587f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.019776063f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.05970362f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.75f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35546875f ? 
             (data[7 /* X8 */] <0.03317169f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.11568201f ? 
                     (data[9 /* X10 */] <-0.23754744f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17788632f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21278648f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[3 /* X4 */] <-0.29360977f ? 
             (data[7 /* X8 */] <0.077777356f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[1 /* X2 */] <-0.7742883f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2600348f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29572943f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.566379f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[35 /* X36 */] <-0.8339844f ? 
             (data[28 /* X29 */] <0.1853742f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17798735f ? 
                 (data[9 /* X10 */] <-0.87085265f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.10026109f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8542296f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.02878451f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24162836f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5273233f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (data[35 /* X36 */] <-0.046875f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10400673f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17056301f ? 
                    1.0f : 
                     (data[2 /* X3 */] <0.094766155f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5269922f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.39900175f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.19796586f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.76171875f ? 
             (data[26 /* X27 */] <-0.039659187f ? 
                 (data[9 /* X10 */] <-0.3593369f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.09038106f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[7 /* X8 */] <0.103440896f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[21 /* X22 */] <0.08185107f ? 
             (data[12 /* X13 */] <0.12965316f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1739943f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[21 /* X22 */] <0.06756333f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5144199f ? 
                 (data[2 /* X3 */] <-0.5125672f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15514547f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1467371f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08373506f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (data[34 /* X35 */] <-0.47700518f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11510387f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[21 /* X22 */] <0.11853005f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07256728f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.032560654f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5384625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[24 /* X25 */] <-0.10146435f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18240006f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.38540983f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.09083766f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.38341475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22558318f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12597889f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.17373784f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07900565f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.38540983f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[16 /* X17 */] <-0.69661987f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15084949f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.111197025f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.102165334f ? 
             (data[35 /* X36 */] <-0.73828125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.47700518f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08776592f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.108885124f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.13891801f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11259727f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.3192152f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.026462082f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15252513f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[8 /* X9 */] <0.19643715f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.026444336f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21484375f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45446005f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.05587358f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[18 /* X19 */] <-0.06528946f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24768618f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[0 /* X1 */] <-0.010967012f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.020508138f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07476932f ? 
             (data[19 /* X20 */] <-0.53223705f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23087202f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (data[31 /* X32 */] <0.12417507f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.2458936f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29629594f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.08427181f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09784337f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[19 /* X20 */] <-0.35161066f ? 
             (data[12 /* X13 */] <0.13488685f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13707113f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.460882f ? 
                 (data[3 /* X4 */] <0.0127922725f ? 
                     (data[35 /* X36 */] <-0.31249937f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15018252f ? 
                 (data[11 /* X12 */] <0.10093036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[18 /* X19 */] <-0.1893672f ? 
            1.0f : 
             (data[31 /* X32 */] <0.035604674f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0091531295f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.74995506f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.018364575f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0714325f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3055803f ? 
             (data[24 /* X25 */] <-0.1718793f ? 
                 (data[0 /* X1 */] <0.2351379f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27950415f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.08418513f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06853477f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[32 /* X33 */] <-0.80078125f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55563515f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.921875f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2773666f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.29567486f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09188378f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6660156f ? 
             (data[5 /* X6 */] <0.06615579f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.4324106f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16802864f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (data[21 /* X22 */] <0.06841633f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.28515625f ? 
             (data[16 /* X17 */] <-0.34843898f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22633778f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.13896431f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.20804667f ? 
            1.0f : 
             (data[28 /* X29 */] <0.07587196f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.050315503f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.1842216f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2399037f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18519793f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.04585079f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.02635934f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17483504f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.11000005f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3125f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.113081425f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.14505747f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.10661347f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.016393442f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07960269f ? 
                1.0f : 
                0.0f)) : 
        0.8333333f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (data[19 /* X20 */] <-0.3767309f ? 
             (data[3 /* X4 */] <-0.2794346f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.052046627f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09834204f ? 
                 (data[29 /* X30 */] <0.07915665f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.025712658f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1160785f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.041727662f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.48908952f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01323073f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.43393296f ? 
        0.0f : 
         (data[15 /* X16 */] <0.07247061f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06295061f ? 
                 (data[3 /* X4 */] <-0.24916874f ? 
                    0.0f : 
                     (data[8 /* X9 */] <-0.17782408f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[12 /* X13 */] <0.10538781f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.607956f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06387954f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15133151f ? 
            0.0f : 
             (data[15 /* X16 */] <0.047412347f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16629627f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17056324f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17654395f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.09901582f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.05505163f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
             (data[2 /* X3 */] <-0.3384875f ? 
                 (data[27 /* X28 */] <0.004823587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <0.024263382f ? 
             (data[24 /* X25 */] <-0.42587614f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.08808103f ? 
                     (data[25 /* X26 */] <-0.030589722f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08284644f ? 
             (data[2 /* X3 */] <-0.526248f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.30859375f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.87020564f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22421095f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22449201f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09737359f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06301931f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.037947126f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11219287f ? 
                    1.0f : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.357976f ? 
                0.0f : 
                1.0f)) : 
        0.016666668f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17454557f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45446005f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.15227091f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.15448755f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.105251476f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.20461035f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.20032129f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11610519f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.27408427f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.5940259f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17422521f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4660425f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.23954757f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.44012955f ? 
            0.0f : 
             (data[30 /* X31 */] <0.09028328f ? 
                 (data[4 /* X5 */] <0.11786572f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10385804f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08285766f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.2415064f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7991643f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.016027853f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17565744f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23766813f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26929876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.142477f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3383041f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.359375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <1.7988282E-4f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.22886895f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.45504686f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-0.5083757f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22495571f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35439467f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[29 /* X30 */] <0.06043637f ? 
             (data[11 /* X12 */] <-0.06717754f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[8 /* X9 */] <0.07357361f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.036768686f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X6 */] <0.12628214f ? 
                 (data[23 /* X24 */] <0.086409874f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.018181818f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22542001f ? 
             (data[0 /* X1 */] <0.0018849073f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.006524801f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <0.0661445f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.3982625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.03023865f ? 
             (data[0 /* X1 */] <-0.20007381f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12782095f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.34339336f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8542296f ? 
             (data[0 /* X1 */] <-0.20925376f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.2158209f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <0.00366112f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51596165f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[33 /* X34 */] <-0.41045797f ? 
             (data[5 /* X6 */] <0.117692664f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15090531f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41314632f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[3 /* X4 */] <-0.2837962f ? 
             (data[5 /* X6 */] <0.13143583f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.07453175f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.2331216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22161181f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[5 /* X6 */] <0.06672842f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36411294f ? 
                 (data[27 /* X28 */] <0.049977887f ? 
                     (data[3 /* X4 */] <-0.27497083f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14862171f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32593685f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25841084f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15936096f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06311248f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61918336f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26789042f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.1721507f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[26 /* X27 */] <-0.1748743f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26446226f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17580488f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.060769815f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.05424642f ? 
             (data[27 /* X28 */] <-0.13063931f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.18508354f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.4304548f ? 
        1.0f : 
         (data[26 /* X27 */] <0.035706617f ? 
             (data[22 /* X23 */] <0.12291328f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18544078f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4755699f ? 
                 (data[3 /* X4 */] <-0.23920424f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.021364005f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12291258f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11368424f ? 
         (data[33 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14792182f ? 
                 (data[7 /* X8 */] <0.027672362f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.052046627f ? 
            0.0f : 
             (data[31 /* X32 */] <0.093597196f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[33 /* X34 */] <0.10336309f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10385804f ? 
                1.0f : 
                0.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4621364f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1670391f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14987968f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.14357148f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.021883199f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[18 /* X19 */] <-0.014840265f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.60850257f ? 
                 (data[7 /* X8 */] <0.027672362f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.10238768f ? 
             (data[6 /* X7 */] <0.1268466f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0014698051f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.06672842f ? 
             (data[6 /* X7 */] <0.09670222f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16076694f ? 
            0.0f : 
             (data[8 /* X9 */] <0.12460924f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.27834418f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11566163f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17328158f ? 
            0.0f : 
             (data[21 /* X22 */] <0.09592556f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2708398f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.013453659f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15963833f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (data[22 /* X23 */] <0.08578889f ? 
             (data[10 /* X11 */] <-0.07737556f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25991103f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.3095349f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.30859375f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1519089f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19289854f ? 
                 (data[19 /* X20 */] <-0.51549023f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12787727f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <0.5360545f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0705834f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25922158f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.27285647f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.082610406f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.169272f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.13108052f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16601562f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14625253f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.048078906f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02005994f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8400256f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21705149f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.19160117f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[11 /* X12 */] <-0.7407755f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.3643895f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[17 /* X18 */] <-0.58648145f ? 
             (data[1 /* X2 */] <-0.3573381f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2580053f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13328345f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.114704296f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.08450938f ? 
                 (data[32 /* X33 */] <0.28742218f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.109244436f ? 
             (data[0 /* X1 */] <-0.24413754f ? 
                 (data[24 /* X25 */] <-0.046138313f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.04927301f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16019754f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (data[15 /* X16 */] <0.07312148f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.61538124f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14987968f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20492955f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23607318f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.054236293f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5102117f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.17895995f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.27786675f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.04544162f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26936042f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.54670304f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07055017f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14535426f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27820116f ? 
            1.0f : 
             (data[6 /* X7 */] <0.14582638f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (data[18 /* X19 */] <-0.057108507f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.42232624f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2061273f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[3 /* X4 */] <0.09893377f ? 
             (data[0 /* X1 */] <-0.20007381f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.3958701f ? 
                 (data[23 /* X24 */] <0.048399877f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3279175f ? 
             (data[19 /* X20 */] <-0.43654096f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1077905f ? 
             (data[34 /* X35 */] <-0.8852985f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0546875f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.15127291f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.28867936f ? 
             (data[21 /* X22 */] <0.13345754f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.12750116f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.13606244f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <0.34825304f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1812548f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.051013064f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.034762353f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12866114f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0703125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[33 /* X34 */] <-0.5114193f ? 
             (data[19 /* X20 */] <-0.053756543f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.024299912f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17977878f ? 
         (data[18 /* X19 */] <0.011066078f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13900204f ? 
                 (data[5 /* X6 */] <0.110652745f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19996475f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.40153635f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (data[23 /* X24 */] <0.052200876f ? 
            0.0f : 
             (data[18 /* X19 */] <0.065605745f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.34560823f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089735754f ? 
                 (data[29 /* X30 */] <0.10058123f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.30769375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[8 /* X9 */] <-0.35928407f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.042888023f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20408195f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48283422f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15227091f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[4 /* X5 */] <0.08268161f ? 
             (data[18 /* X19 */] <0.06833273f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.292762f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19739917f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15635133f ? 
             (data[14 /* X15 */] <0.1150487f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.33293408f ? 
             (data[30 /* X31 */] <0.14350353f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07605036f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[10 /* X11 */] <-0.8215063f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39728016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (data[16 /* X17 */] <-0.68812764f ? 
             (data[32 /* X33 */] <-0.42243576f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06126646f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08593475f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21737391f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11510221f ? 
                         (data[33 /* X34 */] <-0.4519242f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (data[5 /* X6 */] <0.068732634f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.06673625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06126646f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17462085f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20745525f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13991892f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <0.10220496f ? 
             (data[23 /* X24 */] <0.053151127f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.20007381f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.068239994f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (data[23 /* X24 */] <0.034621254f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X9 */] <-0.18756032f ? 
                 (data[10 /* X11 */] <-0.40124592f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.088890254f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22957902f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[5 /* X6 */] <0.117406346f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16994433f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.23159955f ? 
                    1.0f : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.090965696f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.24393463f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09771311f ? 
             (data[14 /* X15 */] <0.1082796f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.08384361f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19161767f ? 
            0.0f : 
            1.0f) : 
         (data[16 /* X17 */] <-0.41071525f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.12867866f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1096685f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.12194204f ? 
                     (data[29 /* X30 */] <0.08904259f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40588573f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22542001f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24710748f ? 
                 (data[21 /* X22 */] <0.06820308f ? 
                     (data[16 /* X17 */] <0.09315628f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.4983628f ? 
                     (data[32 /* X33 */] <0.22361156f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.44763428f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.18985383f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[27 /* X28 */] <-0.20804667f ? 
             (data[2 /* X3 */] <0.079880536f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10955254f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34825304f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20408195f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24093547f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.011274201f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.60311806f ? 
             (data[8 /* X9 */] <0.5102117f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24510269f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.028808754f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.00483003f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.022904014f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13399272f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.28381264f ? 
             (data[14 /* X15 */] <0.09078526f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16636637f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22649777f ? 
             (data[5 /* X6 */] <0.09598318f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <0.0f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.379809f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.088776015f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.14495282f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X9 */] <-0.2080674f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15625f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13347298f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16801086f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20416008f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34193155f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1794286f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21560644f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14631768f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2439793f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28707534f ? 
             (data[31 /* X32 */] <0.035604674f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.035048537f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.043559313f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640625f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.48348546f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13870095f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.3931905f ? 
             (data[31 /* X32 */] <0.0719818f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.046675973f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.16182002f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[18 /* X19 */] <-0.06528946f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5782592f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13644303f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[4 /* X5 */] <0.048029833f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.032267444f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14456497f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11137503f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.030666217f ? 
                         (data[18 /* X19 */] <-0.008022806f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29467234f ? 
             (data[22 /* X23 */] <0.09948719f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.14625253f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24877885f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25870514f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.3089438f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[34 /* X35 */] <-0.61252576f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44594464f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.24675037f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24090126f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06579829f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
            0.0f : 
             (data[24 /* X25 */] <0.046910025f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16885702f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[34 /* X35 */] <-0.31667098f ? 
            0.0f : 
             (data[22 /* X23 */] <0.11695749f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26951095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.47736493f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39186043f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4837817f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1687668f ? 
                 (data[15 /* X16 */] <0.04480889f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[0 /* X1 */] <-0.2331216f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.093333595f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18434419f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22438124f ? 
             (data[23 /* X24 */] <0.026069002f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14127667f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.1397309f ? 
                        0.0f : 
                        1.0f))) : 
             (data[18 /* X19 */] <0.12559938f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.47700518f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <1.014596f ? 
             (data[25 /* X26 */] <-0.58132374f ? 
                 (data[31 /* X32 */] <0.14950897f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15936096f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.13517305f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (data[0 /* X1 */] <-0.20925376f ? 
             (data[25 /* X26 */] <-0.29890049f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.18167116f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.1996931f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (data[34 /* X35 */] <-0.15824556f ? 
             (data[33 /* X34 */] <-0.6141835f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.2083142f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.26171875f ? 
                 (data[14 /* X15 */] <0.09661671f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55084544f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.383161f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.11257657f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[27 /* X28 */] <0.38540983f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103386655f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.034762353f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04029954f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09254279f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
        0.024390243f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.51261705f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22633778f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.07988987f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.07084345f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.69850904f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10385804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.082610406f ? 
            0.0f : 
             (data[35 /* X36 */] <0.12109375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4356983f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.109940544f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (data[28 /* X29 */] <0.12539683f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.056701247f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084634714f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.4523998f ? 
             (data[4 /* X5 */] <0.14368318f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.272602f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39831105f ? 
                 (data[31 /* X32 */] <0.033495855f ? 
                     (data[10 /* X11 */] <-0.6942715f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.8888889f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[33 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08539627f ? 
                 (data[12 /* X13 */] <0.10158148f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6875f ? 
             (data[30 /* X31 */] <0.06090127f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[33 /* X34 */] <0.02583921f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.038019624f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.12241717f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12085644f ? 
            0.0f : 
             (data[31 /* X32 */] <0.0719818f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[33 /* X34 */] <-0.9477165f ? 
             (data[23 /* X24 */] <0.055114295f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09612642f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.09531508f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07453175f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16934441f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.017870503f ? 
         (data[33 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <5.596184E-4f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
             (data[28 /* X29 */] <0.07189006f ? 
                 (data[34 /* X35 */] <0.2292287f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.06801644f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27615288f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5291929f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09201558f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.45410028f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.30769375f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.15090531f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[12 /* X13 */] <0.14701952f ? 
             (data[1 /* X2 */] <-0.4370101f ? 
                 (data[26 /* X27 */] <0.077822804f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34776577f ? 
         (data[19 /* X20 */] <-0.3994587f ? 
             (data[34 /* X35 */] <-0.9770951f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07195281f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.12697211f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28797746f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.056293976f ? 
            0.0f : 
            1.0f) : 
         (data[24 /* X25 */] <-0.046138313f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[31 /* X32 */] <0.045621566f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.041177914f ? 
                 (data[26 /* X27 */] <0.011323564f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.32281357f ? 
                 (data[5 /* X6 */] <0.124564245f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24556942f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51172227f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.11609311f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.5602012f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[14 /* X15 */] <0.090368725f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27299905f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18810338f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5782592f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[15 /* X16 */] <0.07019259f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.18967819f ? 
                 (data[27 /* X28 */] <-0.2661022f ? 
                     (data[25 /* X26 */] <-0.07243475f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18786287f ? 
                    1.0f : 
                    0.0f))) : 
         (data[35 /* X36 */] <0.024030685f ? 
             (data[10 /* X11 */] <-0.34186044f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33398438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10956986f ? 
             (data[18 /* X19 */] <0.022162676f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.034963965f ? 
                 (data[28 /* X29 */] <0.112206794f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <0.024263382f ? 
             (data[18 /* X19 */] <-0.09255929f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.002165727f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.40527344f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37890625f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43577176f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19927041f ? 
                     (data[25 /* X26 */] <-0.2216357f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.10238768f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3547623f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.33413184f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27944657f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.02813064f ? 
        1.0f : 
         (data[26 /* X27 */] <-0.32560593f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06625687f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.61057776f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17454557f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13315372f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.059484124f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.4381391f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16790526f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2351987f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <0.14624922f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <0.28515625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29696858f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
                 (data[19 /* X20 */] <-0.39484078f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08380469f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16644764f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31265917f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5546875f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.41500932f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.08070838f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22990693f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6164564f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <0.24414062f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.6977045f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5574669f ? 
        0.044444446f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13476562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[31 /* X32 */] <0.056429263f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.109375f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09218001f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
             (data[18 /* X19 */] <-0.057108507f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.086423576f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17513996f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[20 /* X21 */] <0.070857115f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16286711f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.038504772f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10566468f ? 
             (data[21 /* X22 */] <0.06777658f ? 
                 (data[6 /* X7 */] <0.17932013f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.35998407f ? 
                 (data[34 /* X35 */] <-0.90553993f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16819222f ? 
             (data[27 /* X28 */] <-0.06613317f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.1184964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30704492f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.48481333f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21392347f ? 
             (data[32 /* X33 */] <-0.17578125f ? 
                 (data[16 /* X17 */] <0.024577208f ? 
                     (data[16 /* X17 */] <-0.022801036f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04932063f ? 
         (data[15 /* X16 */] <0.07312148f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.03461732f ? 
                 (data[0 /* X1 */] <-0.0017870695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21854423f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13169925f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2620406f ? 
                 (data[13 /* X14 */] <0.08856869f ? 
                     (data[19 /* X20 */] <-0.21879712f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.16318822f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2846271f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1669517f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.090485275f ? 
         (data[7 /* X8 */] <0.05272486f ? 
             (data[21 /* X22 */] <0.08483657f ? 
                 (data[12 /* X13 */] <0.24812514f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.18905789f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.05131753f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.079240665f ? 
                         (data[16 /* X17 */] <-0.33711603f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18425028f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13202468f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12093464f ? 
                     (data[9 /* X10 */] <-0.87085265f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <0.062472526f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2629002f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.52558434f ? 
                 (data[27 /* X28 */] <-0.4338182f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13005455f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3322749f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29084757f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24440026f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08564277f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25469235f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.106626876f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17173618f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.046781328f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16587152f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.38669977f ? 
         (data[30 /* X31 */] <0.10247959f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23689142f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06954172f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.034395065f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.081908144f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[14 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (data[21 /* X22 */] <0.09251356f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08257779f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18896249f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08545963f ? 
                 (data[18 /* X19 */] <0.031492878f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.018210437f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1622148f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.21996802f ? 
             (data[23 /* X24 */] <0.027494377f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11060097f ? 
             (data[25 /* X26 */] <-0.23495722f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16606246f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1424995f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5145025f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09696482f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.20215806f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35439467f ? 
             (data[18 /* X19 */] <-0.085026115f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (data[10 /* X11 */] <-0.25473315f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013085698f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4310215f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.13718598f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.11785984f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.8118673f ? 
             (data[28 /* X29 */] <0.08881313f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1990145f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[21 /* X22 */] <0.13004555f ? 
             (data[3 /* X4 */] <0.09784337f ? 
                 (data[24 /* X25 */] <-0.29109254f ? 
                     (data[15 /* X16 */] <0.12551604f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[29 /* X30 */] <0.16452454f ? 
                 (data[30 /* X31 */] <0.097911924f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05483139f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15384375f ? 
         (data[9 /* X10 */] <-0.8830316f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1839731f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26794556f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30881307f ? 
                 (data[27 /* X28 */] <-0.3250603f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (data[19 /* X20 */] <-0.54778767f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.30560416f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15487008f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.13239129f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30731985f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.6674099f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08776592f ? 
                     (data[11 /* X12 */] <-0.07473f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (data[19 /* X20 */] <0.020407937f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13093755f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15071045f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11548531f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12326321f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (data[19 /* X20 */] <-0.027440112f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.19863737f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04768503f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16242875f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.019776063f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5356648f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10403752f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0425256f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17889765f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.19308816f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5332031f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22542001f ? 
             (data[23 /* X24 */] <0.026069002f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.088369735f ? 
                     (data[6 /* X7 */] <0.1157133f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.35998407f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.25660795f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1505743f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.022715675f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30704492f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.016666668f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.022460938f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6586953f ? 
             (data[30 /* X31 */] <0.11412152f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.20075475f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.42437953f ? 
                     (data[25 /* X26 */] <-0.3921511f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[14 /* X15 */] <0.11785984f ? 
             (data[5 /* X6 */] <0.10509476f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.33520356f ? 
         (data[3 /* X4 */] <-0.42990962f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15957913f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.09249686f ? 
                    0.0f : 
                    1.0f))) : 
        0.8888889f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26167727f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <0.025390625f ? 
             (data[29 /* X30 */] <0.10923521f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14188299f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.40514132f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.10857774f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
        0.024390243f : 
         (data[35 /* X36 */] <-0.4765625f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.289192f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15351869f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.35280687f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08854794f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09444482f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.124702275f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.69110227f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.12578054f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5102117f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09612642f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11259727f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07304079f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.24272895f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1640155f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.050280716f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.041177914f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22265625f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.013085698f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25791106f ? 
            0.0f : 
             (data[7 /* X8 */] <0.09916364f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2830063f ? 
         (data[28 /* X29 */] <0.072138935f ? 
             (data[9 /* X10 */] <-0.3106211f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08474694f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
             (data[11 /* X12 */] <-0.32358217f ? 
                 (data[2 /* X3 */] <0.1245374f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.18890923f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.094886385f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21274956f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.16727169f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.0048197224f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.6880461f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7109375f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18341872f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.35280687f ? 
                     (data[8 /* X9 */] <0.034664158f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[33 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.066778705f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.058682468f ? 
        0.0f : 
         (data[32 /* X33 */] <0.0f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22096495f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05701527f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30260992f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11571742f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.042205434f ? 
                     (data[32 /* X33 */] <-0.125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.12554106f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.02878451f ? 
             (data[32 /* X33 */] <-0.17578125f ? 
                 (data[8 /* X9 */] <-0.071972415f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23878361f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06983388f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0f ? 
             (data[26 /* X27 */] <0.011323564f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5253334f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.094766155f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[30 /* X31 */] <0.08834296f ? 
             (data[8 /* X9 */] <-0.041729085f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.15669659f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.1093974f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[10 /* X11 */] <-0.8215063f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2854253f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.045989648f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14281765f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.029928865f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.48797703f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.090983815f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.0703125f ? 
             (data[15 /* X16 */] <0.06889086f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.10503787f ? 
                     (data[21 /* X22 */] <0.14497302f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26022398f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08607943f ? 
         (data[19 /* X20 */] <-0.3982625f ? 
             (data[26 /* X27 */] <0.2256334f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2304609f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14829628f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.17798923f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.18167116f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <1.0152777f ? 
         (data[19 /* X20 */] <-0.71645206f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.40234375f ? 
                 (data[15 /* X16 */] <0.06954172f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0084914835f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24050897f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09816102f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16568743f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.16401017f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35562992f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23931076f ? 
         (data[13 /* X14 */] <0.11562093f ? 
            1.0f : 
             (data[15 /* X16 */] <0.055222716f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14070803f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.13369738f ? 
             (data[15 /* X16 */] <0.06042963f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21468611f ? 
         (data[12 /* X13 */] <0.14963637f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17361537f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.38149387f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <0.025390625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.059679415f ? 
         (data[1 /* X2 */] <-0.7742883f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1652457f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.013453659f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16439079f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.4519242f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16776058f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29575074f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (data[29 /* X30 */] <0.08327327f ? 
                 (data[12 /* X13 */] <0.14948617f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.05078125f ? 
                 (data[29 /* X30 */] <0.12558162f ? 
                     (data[0 /* X1 */] <0.23321944f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25217462f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.1328125f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.14456497f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41586062f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.29779825f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.048078906f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.053151127f ? 
         (data[1 /* X2 */] <-0.13425648f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.06093375f ? 
                0.0f : 
                1.0f)) : 
        0.03846154f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.06612469f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33203125f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06811096f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06387954f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.043468248f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14817613f ? 
         (data[32 /* X33 */] <-0.8222656f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1874094f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.32932833f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1823891f ? 
            1.0f : 
             (data[1 /* X2 */] <0.0032759989f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12816207f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12109375f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08926063f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.50372756f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.10324752f ? 
                 (data[30 /* X31 */] <0.09807277f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.08182064f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13258108f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[4 /* X5 */] <0.052361302f ? 
            1.0f : 
             (data[6 /* X7 */] <0.10451743f ? 
                 (data[26 /* X27 */] <0.28618708f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.0753179f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16801086f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.260272f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34193155f ? 
                 (data[23 /* X24 */] <0.027494377f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.107727155f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24414062f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.12535404f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.1417432f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22725908f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15004604f ? 
            0.0f : 
             (data[20 /* X21 */] <0.18398267f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14512701f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.10914364f ? 
         (data[25 /* X26 */] <-0.5373556f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.002885128f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12519681f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.22080904f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.2554102f ? 
             (data[15 /* X16 */] <0.068239994f ? 
                 (data[0 /* X1 */] <-0.07701014f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[26 /* X27 */] <0.08447273f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1719581f ? 
                 (data[18 /* X19 */] <-0.16124518f ? 
                     (data[28 /* X29 */] <0.18089455f ? 
                        0.0f : 
                        1.0f) : 
                     (data[15 /* X16 */] <0.04480889f ? 
                         (data[2 /* X3 */] <-0.06004432f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044921875f ? 
        0.017857144f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13836229f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10403752f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.40652928f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106315546f ? 
             (data[9 /* X10 */] <-0.8830316f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.211507f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21616326f ? 
                        0.0f : 
                        1.0f))) : 
             (data[24 /* X25 */] <-0.05871241f ? 
                 (data[32 /* X33 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <0.062472526f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.069697574f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19461589f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.091705516f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1431606f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15248828f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.35347095f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.02205174f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.77106047f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1065078f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.046003457f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.001123685f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07312148f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0060535227f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.578125f ? 
         (data[15 /* X16 */] <0.06889086f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09737359f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23922947f ? 
            0.0f : 
             (data[21 /* X22 */] <0.2679224f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.17268692f ? 
         (data[33 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.013820089f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11257657f ? 
                     (data[23 /* X24 */] <0.04983667f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.06672842f ? 
            1.0f : 
             (data[29 /* X30 */] <0.09961968f ? 
                 (data[1 /* X2 */] <-0.11189874f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14341804f ? 
         (data[19 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1906814f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X9 */] <0.14162111f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7616094f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.28581792f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.11564201f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.10238768f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[30 /* X31 */] <0.11633903f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.045753367f ? 
         (data[21 /* X22 */] <0.10083031f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X6 */] <0.11540213f ? 
             (data[12 /* X13 */] <0.20435235f ? 
                 (data[34 /* X35 */] <-0.38920313f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11630375f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.085470594f ? 
                        1.0f : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.09578364f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2728064f ? 
             (data[25 /* X26 */] <-0.56533074f ? 
                 (data[12 /* X13 */] <0.09777515f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.119140625f ? 
         (data[3 /* X4 */] <0.04877543f ? 
             (data[12 /* X13 */] <0.114427835f ? 
                 (data[22 /* X23 */] <0.13204548f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.06610442f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11510221f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.036022227f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (data[3 /* X4 */] <-0.10278999f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5755516f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14797084f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.043961544f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0241706f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.19232838f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.15372269f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15550235f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16699219f ? 
         (data[13 /* X14 */] <0.11714501f ? 
             (data[33 /* X34 */] <-0.30769375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.055548146f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21747799f ? 
             (data[14 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.43056414f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16035675f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17989908f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19403267f ? 
         (data[21 /* X22 */] <0.1289793f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11506359f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.038604677f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42788163f ? 
                        1.0f : 
                        0.0f))) : 
             (data[35 /* X36 */] <0.02734375f ? 
                 (data[24 /* X25 */] <-0.05619759f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.08000474f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.42373145f ? 
                 (data[22 /* X23 */] <0.13595249f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29467234f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.3175506f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27458614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07005029f ? 
         (data[18 /* X19 */] <-0.16482435f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.15249112f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.3362007f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.112181194f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.164148f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09641347f ? 
                 (data[26 /* X27 */] <0.029056694f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.14673111f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19140625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24466187f ? 
             (data[1 /* X2 */] <-0.46356744f ? 
                 (data[23 /* X24 */] <0.05030038f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.9711539f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13135093f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740976f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.10251286f ? 
                 (data[9 /* X10 */] <-0.12793691f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}



