/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:30.208+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_11 > h2o_rf_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_11", algorithm="drf")
public class h2o_rf_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};

  public h2o_rf_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(2824285270214979088L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_11_Forest_0.score0(data,preds);
    h2o_rf_11_Forest_1.score0(data,preds);
    h2o_rf_11_Forest_2.score0(data,preds);
    h2o_rf_11_Forest_3.score0(data,preds);
    h2o_rf_11_Forest_4.score0(data,preds);
    h2o_rf_11_Forest_5.score0(data,preds);
    h2o_rf_11_Forest_6.score0(data,preds);
    h2o_rf_11_Forest_7.score0(data,preds);
    h2o_rf_11_Forest_8.score0(data,preds);
    h2o_rf_11_Forest_9.score0(data,preds);
    h2o_rf_11_Forest_10.score0(data,preds);
    h2o_rf_11_Forest_11.score0(data,preds);
    h2o_rf_11_Forest_12.score0(data,preds);
    h2o_rf_11_Forest_13.score0(data,preds);
    h2o_rf_11_Forest_14.score0(data,preds);
    h2o_rf_11_Forest_15.score0(data,preds);
    h2o_rf_11_Forest_16.score0(data,preds);
    h2o_rf_11_Forest_17.score0(data,preds);
    h2o_rf_11_Forest_18.score0(data,preds);
    h2o_rf_11_Forest_19.score0(data,preds);
    h2o_rf_11_Forest_20.score0(data,preds);
    h2o_rf_11_Forest_21.score0(data,preds);
    h2o_rf_11_Forest_22.score0(data,preds);
    h2o_rf_11_Forest_23.score0(data,preds);
    h2o_rf_11_Forest_24.score0(data,preds);
    h2o_rf_11_Forest_25.score0(data,preds);
    h2o_rf_11_Forest_26.score0(data,preds);
    h2o_rf_11_Forest_27.score0(data,preds);
    h2o_rf_11_Forest_28.score0(data,preds);
    h2o_rf_11_Forest_29.score0(data,preds);
    h2o_rf_11_Forest_30.score0(data,preds);
    h2o_rf_11_Forest_31.score0(data,preds);
    h2o_rf_11_Forest_32.score0(data,preds);
    h2o_rf_11_Forest_33.score0(data,preds);
    h2o_rf_11_Forest_34.score0(data,preds);
    h2o_rf_11_Forest_35.score0(data,preds);
    h2o_rf_11_Forest_36.score0(data,preds);
    h2o_rf_11_Forest_37.score0(data,preds);
    h2o_rf_11_Forest_38.score0(data,preds);
    h2o_rf_11_Forest_39.score0(data,preds);
    h2o_rf_11_Forest_40.score0(data,preds);
    h2o_rf_11_Forest_41.score0(data,preds);
    h2o_rf_11_Forest_42.score0(data,preds);
    h2o_rf_11_Forest_43.score0(data,preds);
    h2o_rf_11_Forest_44.score0(data,preds);
    h2o_rf_11_Forest_45.score0(data,preds);
    h2o_rf_11_Forest_46.score0(data,preds);
    h2o_rf_11_Forest_47.score0(data,preds);
    h2o_rf_11_Forest_48.score0(data,preds);
    h2o_rf_11_Forest_49.score0(data,preds);
    h2o_rf_11_Forest_50.score0(data,preds);
    h2o_rf_11_Forest_51.score0(data,preds);
    h2o_rf_11_Forest_52.score0(data,preds);
    h2o_rf_11_Forest_53.score0(data,preds);
    h2o_rf_11_Forest_54.score0(data,preds);
    h2o_rf_11_Forest_55.score0(data,preds);
    h2o_rf_11_Forest_56.score0(data,preds);
    h2o_rf_11_Forest_57.score0(data,preds);
    h2o_rf_11_Forest_58.score0(data,preds);
    h2o_rf_11_Forest_59.score0(data,preds);
    h2o_rf_11_Forest_60.score0(data,preds);
    h2o_rf_11_Forest_61.score0(data,preds);
    h2o_rf_11_Forest_62.score0(data,preds);
    h2o_rf_11_Forest_63.score0(data,preds);
    h2o_rf_11_Forest_64.score0(data,preds);
    h2o_rf_11_Forest_65.score0(data,preds);
    h2o_rf_11_Forest_66.score0(data,preds);
    h2o_rf_11_Forest_67.score0(data,preds);
    h2o_rf_11_Forest_68.score0(data,preds);
    h2o_rf_11_Forest_69.score0(data,preds);
    h2o_rf_11_Forest_70.score0(data,preds);
    h2o_rf_11_Forest_71.score0(data,preds);
    h2o_rf_11_Forest_72.score0(data,preds);
    h2o_rf_11_Forest_73.score0(data,preds);
    h2o_rf_11_Forest_74.score0(data,preds);
    h2o_rf_11_Forest_75.score0(data,preds);
    h2o_rf_11_Forest_76.score0(data,preds);
    h2o_rf_11_Forest_77.score0(data,preds);
    h2o_rf_11_Forest_78.score0(data,preds);
    h2o_rf_11_Forest_79.score0(data,preds);
    h2o_rf_11_Forest_80.score0(data,preds);
    h2o_rf_11_Forest_81.score0(data,preds);
    h2o_rf_11_Forest_82.score0(data,preds);
    h2o_rf_11_Forest_83.score0(data,preds);
    h2o_rf_11_Forest_84.score0(data,preds);
    h2o_rf_11_Forest_85.score0(data,preds);
    h2o_rf_11_Forest_86.score0(data,preds);
    h2o_rf_11_Forest_87.score0(data,preds);
    h2o_rf_11_Forest_88.score0(data,preds);
    h2o_rf_11_Forest_89.score0(data,preds);
    h2o_rf_11_Forest_90.score0(data,preds);
    h2o_rf_11_Forest_91.score0(data,preds);
    h2o_rf_11_Forest_92.score0(data,preds);
    h2o_rf_11_Forest_93.score0(data,preds);
    h2o_rf_11_Forest_94.score0(data,preds);
    h2o_rf_11_Forest_95.score0(data,preds);
    h2o_rf_11_Forest_96.score0(data,preds);
    h2o_rf_11_Forest_97.score0(data,preds);
    h2o_rf_11_Forest_98.score0(data,preds);
    h2o_rf_11_Forest_99.score0(data,preds);
    h2o_rf_11_Forest_100.score0(data,preds);
    h2o_rf_11_Forest_101.score0(data,preds);
    h2o_rf_11_Forest_102.score0(data,preds);
    h2o_rf_11_Forest_103.score0(data,preds);
    h2o_rf_11_Forest_104.score0(data,preds);
    h2o_rf_11_Forest_105.score0(data,preds);
    h2o_rf_11_Forest_106.score0(data,preds);
    h2o_rf_11_Forest_107.score0(data,preds);
    h2o_rf_11_Forest_108.score0(data,preds);
    h2o_rf_11_Forest_109.score0(data,preds);
    h2o_rf_11_Forest_110.score0(data,preds);
    h2o_rf_11_Forest_111.score0(data,preds);
    h2o_rf_11_Forest_112.score0(data,preds);
    h2o_rf_11_Forest_113.score0(data,preds);
    h2o_rf_11_Forest_114.score0(data,preds);
    h2o_rf_11_Forest_115.score0(data,preds);
    h2o_rf_11_Forest_116.score0(data,preds);
    h2o_rf_11_Forest_117.score0(data,preds);
    h2o_rf_11_Forest_118.score0(data,preds);
    h2o_rf_11_Forest_119.score0(data,preds);
    h2o_rf_11_Forest_120.score0(data,preds);
    h2o_rf_11_Forest_121.score0(data,preds);
    h2o_rf_11_Forest_122.score0(data,preds);
    h2o_rf_11_Forest_123.score0(data,preds);
    h2o_rf_11_Forest_124.score0(data,preds);
    h2o_rf_11_Forest_125.score0(data,preds);
    h2o_rf_11_Forest_126.score0(data,preds);
    h2o_rf_11_Forest_127.score0(data,preds);
    h2o_rf_11_Forest_128.score0(data,preds);
    h2o_rf_11_Forest_129.score0(data,preds);
    h2o_rf_11_Forest_130.score0(data,preds);
    h2o_rf_11_Forest_131.score0(data,preds);
    h2o_rf_11_Forest_132.score0(data,preds);
    h2o_rf_11_Forest_133.score0(data,preds);
    h2o_rf_11_Forest_134.score0(data,preds);
    h2o_rf_11_Forest_135.score0(data,preds);
    h2o_rf_11_Forest_136.score0(data,preds);
    h2o_rf_11_Forest_137.score0(data,preds);
    h2o_rf_11_Forest_138.score0(data,preds);
    h2o_rf_11_Forest_139.score0(data,preds);
    h2o_rf_11_Forest_140.score0(data,preds);
    h2o_rf_11_Forest_141.score0(data,preds);
    h2o_rf_11_Forest_142.score0(data,preds);
    h2o_rf_11_Forest_143.score0(data,preds);
    h2o_rf_11_Forest_144.score0(data,preds);
    h2o_rf_11_Forest_145.score0(data,preds);
    h2o_rf_11_Forest_146.score0(data,preds);
    h2o_rf_11_Forest_147.score0(data,preds);
    h2o_rf_11_Forest_148.score0(data,preds);
    h2o_rf_11_Forest_149.score0(data,preds);
    h2o_rf_11_Forest_150.score0(data,preds);
    h2o_rf_11_Forest_151.score0(data,preds);
    h2o_rf_11_Forest_152.score0(data,preds);
    h2o_rf_11_Forest_153.score0(data,preds);
    h2o_rf_11_Forest_154.score0(data,preds);
    h2o_rf_11_Forest_155.score0(data,preds);
    h2o_rf_11_Forest_156.score0(data,preds);
    h2o_rf_11_Forest_157.score0(data,preds);
    h2o_rf_11_Forest_158.score0(data,preds);
    h2o_rf_11_Forest_159.score0(data,preds);
    h2o_rf_11_Forest_160.score0(data,preds);
    h2o_rf_11_Forest_161.score0(data,preds);
    h2o_rf_11_Forest_162.score0(data,preds);
    h2o_rf_11_Forest_163.score0(data,preds);
    h2o_rf_11_Forest_164.score0(data,preds);
    h2o_rf_11_Forest_165.score0(data,preds);
    h2o_rf_11_Forest_166.score0(data,preds);
    h2o_rf_11_Forest_167.score0(data,preds);
    h2o_rf_11_Forest_168.score0(data,preds);
    h2o_rf_11_Forest_169.score0(data,preds);
    h2o_rf_11_Forest_170.score0(data,preds);
    h2o_rf_11_Forest_171.score0(data,preds);
    h2o_rf_11_Forest_172.score0(data,preds);
    h2o_rf_11_Forest_173.score0(data,preds);
    h2o_rf_11_Forest_174.score0(data,preds);
    h2o_rf_11_Forest_175.score0(data,preds);
    h2o_rf_11_Forest_176.score0(data,preds);
    h2o_rf_11_Forest_177.score0(data,preds);
    h2o_rf_11_Forest_178.score0(data,preds);
    h2o_rf_11_Forest_179.score0(data,preds);
    h2o_rf_11_Forest_180.score0(data,preds);
    h2o_rf_11_Forest_181.score0(data,preds);
    h2o_rf_11_Forest_182.score0(data,preds);
    h2o_rf_11_Forest_183.score0(data,preds);
    h2o_rf_11_Forest_184.score0(data,preds);
    h2o_rf_11_Forest_185.score0(data,preds);
    h2o_rf_11_Forest_186.score0(data,preds);
    h2o_rf_11_Forest_187.score0(data,preds);
    h2o_rf_11_Forest_188.score0(data,preds);
    h2o_rf_11_Forest_189.score0(data,preds);
    h2o_rf_11_Forest_190.score0(data,preds);
    h2o_rf_11_Forest_191.score0(data,preds);
    h2o_rf_11_Forest_192.score0(data,preds);
    h2o_rf_11_Forest_193.score0(data,preds);
    h2o_rf_11_Forest_194.score0(data,preds);
    h2o_rf_11_Forest_195.score0(data,preds);
    h2o_rf_11_Forest_196.score0(data,preds);
    h2o_rf_11_Forest_197.score0(data,preds);
    h2o_rf_11_Forest_198.score0(data,preds);
    h2o_rf_11_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_11_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[27 /* X28 */] <-0.14599001f ? 
             (data[31 /* X32 */] <0.07531762f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26686844f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.15168908f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.077336945f ? 
             (data[30 /* X31 */] <0.036771934f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3178925f ? 
                 (data[5 /* X6 */] <0.10624725f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.6586496f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11319013f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25169152f ? 
                                0.0f : 
                                 (data[19 /* X20 */] <-0.2826488f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[14 /* X15 */] <0.16595067f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[34 /* X35 */] <-0.9190262f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.13596304f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5774326f ? 
         (data[5 /* X6 */] <0.09479708f ? 
            1.0f : 
             (data[31 /* X32 */] <0.066275574f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.167267f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36517742f ? 
                         (data[16 /* X17 */] <-0.39696616f ? 
                            0.0f : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.012416766f ? 
                             (data[19 /* X20 */] <-0.30394888f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29076886f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17888907f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.41690272f ? 
                         (data[34 /* X35 */] <-0.687056f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14420414f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.35347632f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[34 /* X35 */] <-0.4867181f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X7 */] <0.25050443f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32796398f ? 
             (data[2 /* X3 */] <-0.6700273f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09598517f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1464009f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0066188187f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.34908503f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17558652f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1794359f ? 
             (data[29 /* X30 */] <0.11635247f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.08457469f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5276114f ? 
             (data[10 /* X11 */] <-0.8782821f ? 
                 (data[0 /* X1 */] <0.009941682f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.33507428f ? 
                     (data[25 /* X26 */] <0.07654278f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63987106f ? 
                         (data[32 /* X33 */] <-0.37357983f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13805951f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.059177812f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[14 /* X15 */] <0.1445578f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.104492754f ? 
             (data[29 /* X30 */] <0.08447442f ? 
                 (data[5 /* X6 */] <0.23677924f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36553055f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3112695f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17817608f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.17223752f ? 
                                 (data[10 /* X11 */] <-0.61679095f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09260857f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06650672f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29935074f ? 
                 (data[0 /* X1 */] <0.05398627f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06021007f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.32406312f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.2188315f ? 
                     (data[1 /* X2 */] <-0.10464484f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
        0.021582734f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15336184f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4792365f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.67855066f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50602806f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.16349812f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10856171f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[30 /* X31 */] <0.108218916f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.051066868f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.082652085f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.0957884f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18300481f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14243948f ? 
                     (data[15 /* X16 */] <0.03839965f ? 
                         (data[31 /* X32 */] <0.056428224f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.65899384f ? 
                     (data[28 /* X29 */] <0.1948011f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.4903423f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.52055913f ? 
                             (data[6 /* X7 */] <0.1529986f ? 
                                0.0f : 
                                1.0f) : 
                             (data[7 /* X8 */] <0.07666869f ? 
                                 (data[3 /* X4 */] <0.2263817f ? 
                                     (data[17 /* X18 */] <-0.2252674f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20642735f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09415086f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1543049f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.16367458f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1807336f ? 
                         (data[25 /* X26 */] <-0.105998665f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[24 /* X25 */] <-0.1267958f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.1282548f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38460895f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.13538267f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[31 /* X32 */] <0.10179791f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3066543f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.2311007f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.061000817f ? 
            0.0f : 
             (data[15 /* X16 */] <0.08012139f ? 
                 (data[4 /* X5 */] <0.14967795f ? 
                    0.0f : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.35126156f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.11884552f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.2768736f ? 
            0.0f : 
             (data[31 /* X32 */] <0.10844666f ? 
                 (data[26 /* X27 */] <0.024520544f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16640776f ? 
                         (data[27 /* X28 */] <-0.14380595f ? 
                             (data[31 /* X32 */] <0.08812587f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51645446f ? 
                         (data[8 /* X9 */] <0.07802813f ? 
                             (data[25 /* X26 */] <-0.04346911f ? 
                                1.0f : 
                                0.0f) : 
                             (data[6 /* X7 */] <0.12587309f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33371854f ? 
                     (data[23 /* X24 */] <0.12800598f ? 
                         (data[30 /* X31 */] <0.23248298f ? 
                             (data[6 /* X7 */] <0.13270447f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[25 /* X26 */] <-0.39948887f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5051929f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
             (data[9 /* X10 */] <-0.50201446f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1282548f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.040535226f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37634605f ? 
                         (data[13 /* X14 */] <0.0947776f ? 
                             (data[3 /* X4 */] <-0.037829902f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26212037f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[17 /* X18 */] <-0.052688092f ? 
                 (data[27 /* X28 */] <-0.1766392f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.46306843f ? 
                     (data[33 /* X34 */] <-0.7049273f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07919279f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1333768f ? 
                 (data[19 /* X20 */] <-0.14722803f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15638982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.103524506f ? 
         (data[31 /* X32 */] <0.1612171f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X12 */] <-0.5120515f ? 
             (data[32 /* X33 */] <-0.50408405f ? 
                 (data[23 /* X24 */] <0.18560867f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30659625f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.17406401f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[19 /* X20 */] <-0.40533596f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.56244195f ? 
                 (data[5 /* X6 */] <0.14746788f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.13435361f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2957845f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.119930185f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07815323f ? 
                         (data[9 /* X10 */] <-0.3071148f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-1.1271437f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.27896807f ? 
                 (data[6 /* X7 */] <0.16728677f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.19087437f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28196838f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07811276f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97708935f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42643592f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.02753945f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.34704146f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18157977f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.033629898f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.003060204f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105398595f ? 
            1.0f : 
             (data[15 /* X16 */] <0.20576228f ? 
                 (data[14 /* X15 */] <0.14172989f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.13625507f ? 
         (data[19 /* X20 */] <-0.3563075f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.043475673f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20323576f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12371709f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31074995f ? 
            0.0f : 
             (data[5 /* X6 */] <0.23105414f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
             (data[17 /* X18 */] <-0.8203896f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4959009f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.12371709f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31091306f ? 
                 (data[9 /* X10 */] <-0.34169078f ? 
                    1.0f : 
                     (data[19 /* X20 */] <0.08276071f ? 
                         (data[6 /* X7 */] <0.13052447f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.10379177f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[21 /* X22 */] <0.11836323f ? 
             (data[18 /* X19 */] <0.038307678f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33487153f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.7349436f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05019323f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14411847f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09971305f ? 
                             (data[11 /* X12 */] <-0.3054855f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04037551f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.115964316f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (data[19 /* X20 */] <-0.3613546f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[17 /* X18 */] <-0.16630793f ? 
                             (data[8 /* X9 */] <0.26772943f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <0.19539511f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[1 /* X2 */] <-0.091180466f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24719702f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.40243062f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (data[15 /* X16 */] <0.0395917f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10968231f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[7 /* X8 */] <0.076475866f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20390463f ? 
                     (data[9 /* X10 */] <-0.24452493f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.57240546f ? 
                         (data[24 /* X25 */] <0.02736892f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.24711995f ? 
            0.0f : 
             (data[15 /* X16 */] <0.19379511f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.29632014f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[12 /* X13 */] <0.1333768f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0743617f ? 
                     (data[29 /* X30 */] <0.08572455f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.09331938f ? 
                     (data[25 /* X26 */] <-0.23039243f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15585268f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26461318f ? 
                             (data[2 /* X3 */] <-0.3648281f ? 
                                1.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41620722f ? 
                                    0.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.49325657f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24593937f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3025258f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.09708733f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10803693f ? 
             (data[35 /* X36 */] <-0.59558356f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18819265f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.079101115f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15970905f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.32543993f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[28 /* X29 */] <0.3502442f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.50066906f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.8004051f ? 
             (data[12 /* X13 */] <0.14913872f ? 
                 (data[35 /* X36 */] <-0.57588536f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31074995f ? 
                 (data[19 /* X20 */] <-0.5279071f ? 
                     (data[29 /* X30 */] <0.12072789f ? 
                         (data[35 /* X36 */] <-0.21808687f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <0.22500561f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[3 /* X4 */] <-0.25835028f ? 
             (data[7 /* X8 */] <0.07743996f ? 
                 (data[18 /* X19 */] <0.1786238f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.17020969f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.40341485f ? 
                 (data[33 /* X34 */] <-0.98118657f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-1.0170845f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.32574746f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X9 */] <0.32125112f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.3437137f ? 
         (data[34 /* X35 */] <-0.4656299f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07679723f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.2753381f ? 
                    0.0f : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.093748644f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12181959f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.14657466f ? 
                 (data[15 /* X16 */] <0.0440294f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.124938965f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[35 /* X36 */] <0.043583054f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.005657226f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.18255636f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-6.3013536E-4f ? 
                         (data[33 /* X34 */] <-0.74303204f ? 
                             (data[19 /* X20 */] <0.031562064f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[27 /* X28 */] <0.06586444f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.030087555f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (data[3 /* X4 */] <-0.3288755f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14413922f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12698647f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.09182041f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4676742f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.017150557f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4012382f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18698421f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.16768125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[13 /* X14 */] <0.092104144f ? 
             (data[13 /* X14 */] <0.082917325f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.3114792f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31496838f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.1831768f ? 
             (data[3 /* X4 */] <-0.2772717f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1881139f ? 
                     (data[25 /* X26 */] <-0.48702067f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.506147f ? 
                        0.0f : 
                        1.0f))) : 
             (data[30 /* X31 */] <0.12088041f ? 
                 (data[24 /* X25 */] <-0.18027103f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29590806f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7410439f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9294523f ? 
                         (data[32 /* X33 */] <-0.13212927f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15266053f ? 
                                0.0f : 
                                1.0f) : 
                             (data[27 /* X28 */] <-1.1642019f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38290977f ? 
             (data[19 /* X20 */] <-0.31545046f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.56804496f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.12848037f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2723254f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38403618f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2731692f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[3 /* X4 */] <0.311012f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33638102f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09662922f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.1925955f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[34 /* X35 */] <-1.009604f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.22610764f ? 
                         (data[8 /* X9 */] <0.5012787f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[35 /* X36 */] <-0.3438972f ? 
             (data[20 /* X21 */] <0.22753362f ? 
                 (data[18 /* X19 */] <0.23875928f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13720948f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07305391f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[35 /* X36 */] <0.16087437f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5394367f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42643592f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05190536f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4023653f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.5068727f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09543632f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20109347f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2972369f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45489326f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.52626735f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[33 /* X34 */] <-0.26519412f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[31 /* X32 */] <0.06498385f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[31 /* X32 */] <0.083713815f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07132959f ? 
                 (data[35 /* X36 */] <-0.41159844f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2531658f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1288892f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33522007f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17143852f ? 
                     (data[24 /* X25 */] <-0.4417055f ? 
                         (data[10 /* X11 */] <-0.14620657f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19302984f ? 
                         (data[18 /* X19 */] <-0.13541704f ? 
                             (data[8 /* X9 */] <0.76596785f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.35228083f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.36598223f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[17 /* X18 */] <-0.055758897f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14058036f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30045313f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36144516f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2680688f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[7 /* X8 */] <0.05976496f ? 
             (data[3 /* X4 */] <-0.17406401f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.07467015f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265292f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.23034267f ? 
                    0.0f : 
                     (data[33 /* X34 */] <0.15242891f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24284904f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X6 */] <0.10219959f ? 
                             (data[15 /* X16 */] <0.17754616f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09240596f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <0.42686602f ? 
                                    1.0f : 
                                    0.0f))))))) : 
         (data[0 /* X1 */] <-0.4341746f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45835876f ? 
                0.0f : 
                 (data[33 /* X34 */] <0.20958598f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[27 /* X28 */] <-0.2966906f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1448893f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.036078785f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (data[20 /* X21 */] <0.2161444f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18613373f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.124429345f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.8346734f ? 
                 (data[33 /* X34 */] <0.04764092f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[30 /* X31 */] <0.13715947f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16730988f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18586174f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6530259f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.19031195f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[7 /* X8 */] <0.042732686f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54214716f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22704646f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2550995f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3532501f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4959009f ? 
                             (data[15 /* X16 */] <0.0898962f ? 
                                 (data[8 /* X9 */] <-0.16822916f ? 
                                     (data[9 /* X10 */] <0.035689775f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18085767f ? 
                                        0.0f : 
                                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19541968f ? 
                                            0.0f : 
                                            1.0f))) : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.2119621f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[28 /* X29 */] <0.31991476f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[33 /* X34 */] <-0.5525084f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38689837f ? 
                     (data[33 /* X34 */] <-0.5906132f ? 
                         (data[15 /* X16 */] <0.16237283f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2375128f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07023257f ? 
             (data[20 /* X21 */] <0.095507935f ? 
                 (data[1 /* X2 */] <-0.16024067f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.20615011f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.88592476f ? 
                     (data[3 /* X4 */] <-0.08270705f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.09832918f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12703092f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.14461333f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14504519f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24780686f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.6268554f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.062338963f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34070495f ? 
                 (data[11 /* X12 */] <-0.46592134f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17823337f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.27736703f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.037670407f ? 
                 (data[12 /* X13 */] <0.21287672f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3697895f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.34410423f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13357049f ? 
            0.0f : 
             (data[12 /* X13 */] <0.19800067f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.15204795f ? 
                     (data[20 /* X21 */] <0.2765803f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.13521335f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28887218f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22412586f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.26672304f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[16 /* X17 */] <-0.39696616f ? 
             (data[4 /* X5 */] <0.098262414f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7189267f ? 
                 (data[23 /* X24 */] <0.07253672f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.04793605f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.57786286f ? 
                         (data[34 /* X35 */] <-1.0561407f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36107463f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30662593f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08192293f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.21164812f ? 
                     (data[26 /* X27 */] <-0.1477289f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.11337467f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.045000583f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.28004968f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8270588f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.047591988f ? 
                         (data[25 /* X26 */] <-0.34444943f ? 
                            1.0f : 
                            0.0f) : 
                         (data[29 /* X30 */] <0.1536022f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.2857297f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21845149f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (data[20 /* X21 */] <0.043540385f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.053400777f ? 
                     (data[12 /* X13 */] <0.12391965f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.14216706f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[9 /* X10 */] <-0.1643631f ? 
             (data[4 /* X5 */] <0.1159365f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.30169165f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.10550574f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07416114f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[9 /* X10 */] <-0.511731f ? 
             (data[33 /* X34 */] <-0.14764577f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.8197177f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.79406106f ? 
                     (data[32 /* X33 */] <-0.17116734f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.46720803f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.15464652f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28792834f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41393894f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.13614774f ? 
                 (data[8 /* X9 */] <0.12176116f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19677f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.17811494f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[9 /* X10 */] <-0.7983703f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0024956784f ? 
                 (data[15 /* X16 */] <0.076545246f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2138074f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.11697753f ? 
                     (data[6 /* X7 */] <0.17653194f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
             (data[24 /* X25 */] <-0.10897072f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3371214f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4408693f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.12633342f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37239367f ? 
                         (data[1 /* X2 */] <-0.28143188f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.39194766f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15567642f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25281513f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.27815464f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19374402f ? 
             (data[33 /* X34 */] <-0.88592476f ? 
                 (data[11 /* X12 */] <-0.52742827f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.4710469f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.68494195f ? 
            0.0f : 
             (data[20 /* X21 */] <0.2415789f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.11715987f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16409774f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[20 /* X21 */] <0.13202567f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35229507f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14091593f ? 
                     (data[4 /* X5 */] <0.14967795f ? 
                         (data[33 /* X34 */] <-0.476299f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X9 */] <-0.16044419f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49376267f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3324268f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.08057438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[16 /* X17 */] <-0.56866544f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33509377f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.16679224f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.59214896f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <0.34923515f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28579542f ? 
                         (data[4 /* X5 */] <0.12397018f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[19 /* X20 */] <-0.48705006f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1267717f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27982348f ? 
                 (data[28 /* X29 */] <0.059633207f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.50900507f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18117598f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[20 /* X21 */] <0.18610002f ? 
            1.0f : 
             (data[23 /* X24 */] <0.11947224f ? 
                 (data[1 /* X2 */] <-0.17223752f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.19560312f ? 
             (data[15 /* X16 */] <0.08012139f ? 
                 (data[4 /* X5 */] <0.14110869f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.07619942f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.35140738f ? 
         (data[17 /* X18 */] <-0.4442159f ? 
            0.0f : 
             (data[14 /* X15 */] <0.2786926f ? 
                 (data[13 /* X14 */] <0.14259613f ? 
                    0.0f : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.26672304f ? 
                     (data[10 /* X11 */] <-0.30169165f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
             (data[10 /* X11 */] <-0.82645375f ? 
                 (data[3 /* X4 */] <-0.1971168f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27548403f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.17493357f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.07892934f ? 
                 (data[13 /* X14 */] <0.15583612f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.2498633f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (data[29 /* X30 */] <0.10572645f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.039894056f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23590268f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.79331f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27553147f ? 
                     (data[27 /* X28 */] <-0.0957053f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.46825743f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10780823f ? 
                                 (data[1 /* X2 */] <-0.22278689f ? 
                                    1.0f : 
                                     (data[10 /* X11 */] <-0.37972742f ? 
                                        0.0f : 
                                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2144295f ? 
                                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09649088f ? 
                                                 (data[11 /* X12 */] <-0.44940498f ? 
                                                    0.0f : 
                                                     (data[19 /* X20 */] <-0.13038267f ? 
                                                         (data[0 /* X1 */] <0.06719965f ? 
                                                            0.0f : 
                                                            1.0f) : 
                                                        1.0f)) : 
                                                0.0f) : 
                                            1.0f))) : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1302688f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.098776154f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32173893f ? 
             (data[10 /* X11 */] <-0.023114229f ? 
                 (data[1 /* X2 */] <-0.040966075f ? 
                     (data[33 /* X34 */] <-0.476299f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17752802f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (data[31 /* X32 */] <0.080028236f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.113229014f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20809758f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9683772f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3250468f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27393213f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7410439f ? 
                     (data[23 /* X24 */] <0.12365427f ? 
                         (data[6 /* X7 */] <0.14712083f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25793573f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09839733f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18094741f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21073388f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.35598144f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.09929268f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.4224031f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07851194f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.16679224f ? 
                 (data[10 /* X11 */] <-0.0036785947f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.10459925f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.8004051f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14187329f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10849274f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19930671f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23322818f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[18 /* X19 */] <-0.1053493f ? 
                 (data[20 /* X21 */] <0.1376438f ? 
                     (data[32 /* X33 */] <-0.22443219f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[7 /* X8 */] <0.07808269f ? 
             (data[31 /* X32 */] <0.075166f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.113889016f ? 
                     (data[25 /* X26 */] <-0.4394969f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15858322f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X3 */] <-0.18738082f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.38037f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[33 /* X34 */] <-1.219341f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8674868f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[31 /* X32 */] <0.049483195f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.19015436f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13463108f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54581755f ? 
                         (data[24 /* X25 */] <-0.7269067f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4044818f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.85552686f ? 
                         (data[29 /* X30 */] <0.14573027f ? 
                             (data[12 /* X13 */] <0.13326529f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.21573557f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.45561105f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.4392073f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.39011204f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19774728f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.083336964f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15035895f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26434147f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3209578f ? 
                 (data[9 /* X10 */] <-0.16679224f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6923567f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.07375956f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
        0.011560693f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[15 /* X16 */] <0.046744f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.10641769f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.1831768f ? 
                 (data[25 /* X26 */] <-0.25450194f ? 
                     (data[24 /* X25 */] <-0.063736685f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.474879f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.0142040625f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.09507306f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[16 /* X17 */] <-0.26978147f ? 
                     (data[15 /* X16 */] <0.14899562f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.030436765f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21263716f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2580232f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.09318225f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.68434936f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[12 /* X13 */] <0.33489087f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6257987f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.51779157f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29281366f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13935351f ? 
                 (data[25 /* X26 */] <-0.26365906f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31576872f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.1818184f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22323766f ? 
                     (data[28 /* X29 */] <0.12811467f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06425481f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09814353f ? 
                    0.0f : 
                    1.0f))) : 
         (data[13 /* X14 */] <0.04368717f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5378412f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4272822f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20327395f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22573791f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.38490438f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23171048f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[23 /* X24 */] <0.12053896f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2615664f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.08671751f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24213403f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.27992776f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13322908f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.13973822f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.22680047f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1626546f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.374997f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24449928f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.12590043f ? 
                         (data[24 /* X25 */] <0.007317016f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17535783f ? 
                 (data[7 /* X8 */] <0.044018142f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5334561f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08128668f ? 
                             (data[2 /* X3 */] <-0.106311336f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (data[31 /* X32 */] <0.083713815f ? 
             (data[35 /* X36 */] <-0.04019646f ? 
                 (data[16 /* X17 */] <-0.2952184f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.32131964f ? 
                         (data[13 /* X14 */] <0.13408877f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.72f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.22222759f ? 
                     (data[1 /* X2 */] <-0.08472323f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.324096f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45866627f ? 
                     (data[3 /* X4 */] <-0.85523456f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3057144f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01132689f ? 
                         (data[4 /* X5 */] <0.1111163f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11690242f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37275365f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1302688f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35342342f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31413054f ? 
             (data[25 /* X26 */] <-0.0640593f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30911928f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.050002426f ? 
             (data[34 /* X35 */] <-0.7292324f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.06885902f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.058525246f ? 
             (data[32 /* X33 */] <-0.022081675f ? 
                 (data[3 /* X4 */] <-0.0983784f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[6 /* X7 */] <0.12541893f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26628867f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.42744946f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.56426007f ? 
                         (data[13 /* X14 */] <0.120462656f ? 
                             (data[10 /* X11 */] <-0.041568626f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[35 /* X36 */] <-0.6266531f ? 
                     (data[20 /* X21 */] <0.29495955f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26283377f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.18111818f ? 
                         (data[28 /* X29 */] <0.118205965f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.024123192f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (data[31 /* X32 */] <0.09017242f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29730514f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18879035f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.03923182f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.121022254f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-1.0771877f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.13941966f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22894354f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24053901f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3353625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9883512f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35724366f ? 
                 (data[35 /* X36 */] <-0.7607003f ? 
                     (data[32 /* X33 */] <0.16638127f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5512515f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.18371472f ? 
                         (data[3 /* X4 */] <0.09427591f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.70254576f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11471814f ? 
                 (data[26 /* X27 */] <0.24780686f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.31893992f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                 (data[32 /* X33 */] <-0.29717082f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0020512454f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24513769f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.41046464f ? 
                                0.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08312309f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <0.020532968f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.119859956f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[30 /* X31 */] <0.09058327f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.10562575f ? 
                 (data[6 /* X7 */] <0.120313406f ? 
                     (data[3 /* X4 */] <-0.2772717f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2291081f ? 
                     (data[17 /* X18 */] <-0.043475673f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21959123f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.22348246f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.172361f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.6709444f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.9525546f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47240987f ? 
                         (data[11 /* X12 */] <-0.38391212f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.5846054f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.043070138f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <5.107116E-4f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.0020512454f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26434147f ? 
             (data[13 /* X14 */] <0.087262444f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6814615f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15992537f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39818597f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <0.12188835f ? 
         (data[23 /* X24 */] <0.07093664f ? 
             (data[14 /* X15 */] <0.11001221f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.03601555f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1315147f ? 
                        0.0f : 
                        1.0f))) : 
             (data[34 /* X35 */] <-1.10882f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.04732443f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5281027f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.4411451f ? 
             (data[12 /* X13 */] <0.09081962f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.5265921f ? 
                     (data[17 /* X18 */] <-0.66156524f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15254222f ? 
                 (data[2 /* X3 */] <-0.0028476885f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.026827151f ? 
                         (data[2 /* X3 */] <-0.2839425f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0548114f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.74581134f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2834476f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.45418966f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.12422724f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.097029924f ? 
         (data[27 /* X28 */] <-0.25956148f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22246581f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20272924f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13934724f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16854341f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.093083754f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.14464034f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.45927373f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[5 /* X6 */] <0.098232135f ? 
             (data[2 /* X3 */] <-0.09737891f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.3601889f ? 
                 (data[31 /* X32 */] <0.088234834f ? 
                     (data[10 /* X11 */] <-0.17385861f ? 
                         (data[17 /* X18 */] <0.041553225f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.150324f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[27 /* X28 */] <-0.17438288f ? 
             (data[17 /* X18 */] <-0.26150292f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24659006f ? 
                     (data[6 /* X7 */] <0.12712078f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.083224304f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.39445424f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17711546f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21042351f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5986854f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11214723f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25090227f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18347523f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17026298f ? 
                     (data[26 /* X27 */] <0.0692f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038643956f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.1689942f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6204124f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.059867263f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.089404956f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4134932f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[29 /* X30 */] <0.19385986f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.14749674f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5096643f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (data[13 /* X14 */] <0.11008759f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09869685f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.321944f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.024670755f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.3145849f ? 
                     (data[26 /* X27 */] <-0.058414374f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.6258986f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.1111163f ? 
                             (data[17 /* X18 */] <-0.114441976f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22573882f ? 
                                0.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24577147f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (data[2 /* X3 */] <0.08177367f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3888623f ? 
                     (data[10 /* X11 */] <-0.43126255f ? 
                         (data[20 /* X21 */] <0.3146144f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.33668867f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12948625f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3416788f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.10853729f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.011001776f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5162598f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0036785947f ? 
             (data[12 /* X13 */] <0.15701967f ? 
                 (data[17 /* X18 */] <-0.13554662f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <0.11737063f ? 
                     (data[10 /* X11 */] <-0.1648013f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.27116668f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15189692f ? 
             (data[3 /* X4 */] <0.31445226f ? 
                 (data[28 /* X29 */] <0.23535149f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-1.1162955f ? 
                     (data[35 /* X36 */] <-0.7439444f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09920463f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09457028f ? 
                     (data[19 /* X20 */] <-0.29659945f ? 
                         (data[11 /* X12 */] <0.026133977f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.15931836f ? 
                     (data[0 /* X1 */] <-0.041443672f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.6080729f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.1070314E-4f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.25524294f ? 
                     (data[14 /* X15 */] <0.19363156f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18946336f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4038989f ? 
                 (data[31 /* X32 */] <0.01589844f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <0.04654822f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.35790333f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <-0.48432624f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.256193f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14373955f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.8030411f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.50936174f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[31 /* X32 */] <0.13667439f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[20 /* X21 */] <0.17135248f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0761545f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.089604184f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05508835f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.805735f ? 
             (data[31 /* X32 */] <0.15739945f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[18 /* X19 */] <-0.21058638f ? 
             (data[20 /* X21 */] <0.34832308f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21005483f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13670087f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31797007f ? 
                     (data[16 /* X17 */] <-0.60046166f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.63670087f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[32 /* X33 */] <-0.3884946f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <-0.014200929f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11520538f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <0.2444669f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1745491f ? 
             (data[31 /* X32 */] <0.050934114f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7799786f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1985982f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.32287163f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30069396f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.3211273f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.22534503f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1752874f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12312323f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13554044f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15823147f ? 
                         (data[35 /* X36 */] <0.043583054f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27083153f ? 
                                0.0f : 
                                1.0f) : 
                             (data[20 /* X21 */] <0.14382371f ? 
                                 (data[2 /* X3 */] <-0.06411892f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[18 /* X19 */] <-0.08196328f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15567642f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (data[25 /* X26 */] <-0.55236584f ? 
             (data[7 /* X8 */] <0.06499716f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.41997638f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.067584366f ? 
             (data[32 /* X33 */] <-0.18341658f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.6572964f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.10612181f ? 
                 (data[5 /* X6 */] <0.13143763f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.05019323f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.4779832f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2180366f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[24 /* X25 */] <-0.085203946f ? 
             (data[12 /* X13 */] <0.14125776f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34339523f ? 
                     (data[33 /* X34 */] <-0.13335651f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.02753945f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.32951793f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[16 /* X17 */] <-0.64091355f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.046744f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.17062198f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.6538922f ? 
                         (data[11 /* X12 */] <-0.09687985f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16172029f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9528072f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2611692f ? 
                                    0.0f : 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27496627f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f))))) : 
         (data[7 /* X8 */] <0.051409505f ? 
             (data[35 /* X36 */] <0.14526798f ? 
                 (data[30 /* X31 */] <0.049433425f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[35 /* X36 */] <-0.62246406f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15535109f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.054471564f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.07315f ? 
                     (data[30 /* X31 */] <0.13082872f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40055203f ? 
             (data[21 /* X22 */] <0.19640833f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.25843212f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.20956595f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12556101f ? 
                             (data[35 /* X36 */] <-0.5196456f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19660875f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.078339286f ? 
                                    0.0f : 
                                     (data[20 /* X21 */] <0.36427045f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[19 /* X20 */] <-0.6325011f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20020239f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29740575f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[29 /* X30 */] <0.086974666f ? 
            1.0f : 
             (data[28 /* X29 */] <0.20493871f ? 
                 (data[27 /* X28 */] <-0.29232246f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.51091594f ? 
                         (data[15 /* X16 */] <0.08319294f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (data[32 /* X33 */] <-0.35680073f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.115039505f ? 
             (data[32 /* X33 */] <-0.88441056f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1291476f ? 
                     (data[10 /* X11 */] <-0.79406106f ? 
                         (data[31 /* X32 */] <0.106318936f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.1212219f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.3535837f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.23413056f ? 
                                0.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20300163f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <0.0197971f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.096441366f ? 
                 (data[31 /* X32 */] <0.041732866f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16787297f ? 
                         (data[5 /* X6 */] <0.09937715f ? 
                             (data[32 /* X33 */] <-0.27475178f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.25843325f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25601196f ? 
                        0.0f : 
                        1.0f))) : 
             (data[26 /* X27 */] <-0.26256186f ? 
                 (data[5 /* X6 */] <0.19784865f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4531074f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21206746f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2415789f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40008956f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.25337815f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.7501777f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07132959f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3548127f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.62061733f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18670359f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.45266202f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[25 /* X26 */] <0.07269317f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.445419f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3251224f ? 
                 (data[10 /* X11 */] <-0.06846404f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[2 /* X3 */] <-0.11497425f ? 
             (data[0 /* X1 */] <0.0062712994f ? 
                 (data[15 /* X16 */] <0.07892934f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.12154592f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-1.0246178f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.078125f ? 
                     (data[5 /* X6 */] <0.09021701f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.07680359f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29454562f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.25238326f ? 
                                 (data[32 /* X33 */] <-0.07796255f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f))))) : 
         (data[14 /* X15 */] <0.093432516f ? 
             (data[9 /* X10 */] <-0.040476646f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.21909213f ? 
             (data[20 /* X21 */] <0.08708077f ? 
                 (data[34 /* X35 */] <0.0046679513f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18987435f ? 
                 (data[31 /* X32 */] <0.021065325f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.087623864f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25437605f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.50001216f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09427591f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.2548808f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[32 /* X33 */] <0.13911523f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14535774f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30662593f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21133937f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105719954f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44532925f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.1753857f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.1660373f ? 
                     (data[15 /* X16 */] <0.10992264f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.07531762f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20814234f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.121873505f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
        0.010869565f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5439823f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21222402f ? 
                 (data[10 /* X11 */] <-0.7681469f ? 
                     (data[15 /* X16 */] <0.10038624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2897794f ? 
                         (data[17 /* X18 */] <-0.26457372f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06479246f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[21 /* X22 */] <0.29093054f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[9 /* X10 */] <-0.05019323f ? 
                     (data[4 /* X5 */] <0.08755085f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.330797f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
             (data[3 /* X4 */] <-0.33231577f ? 
                 (data[31 /* X32 */] <0.12698647f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.44815367f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.09823929f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.43285325f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.31358206f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[10 /* X11 */] <-0.424784f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26686844f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.010024797f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3215278f ? 
                            1.0f : 
                            0.0f) : 
                         (data[0 /* X1 */] <0.025836304f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.5223027f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26073748f ? 
                 (data[22 /* X23 */] <0.17505632f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.15760463f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.84711057f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.393268f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6987134f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19374402f ? 
             (data[3 /* X4 */] <-0.24630937f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.315268f ? 
                     (data[33 /* X34 */] <-0.89155704f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.25634184f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.22394869f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.5223027f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25891846f ? 
                 (data[25 /* X26 */] <-0.04029743f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <0.18283226f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30069122f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16628088f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                     (data[33 /* X34 */] <-0.72397965f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.16477312f ? 
                             (data[26 /* X27 */] <0.40204903f ? 
                                1.0f : 
                                0.0f) : 
                             (data[25 /* X26 */] <-0.22278863f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.16085985f ? 
                                     (data[27 /* X28 */] <-0.30501503f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.13143763f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.39102325f ? 
                         (data[15 /* X16 */] <0.10515444f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.029592773f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.38127708f ? 
                     (data[21 /* X22 */] <0.18412058f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49334553f ? 
             (data[28 /* X29 */] <0.08216119f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5923058f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20002231f ? 
                 (data[11 /* X12 */] <-0.117382154f ? 
                     (data[35 /* X36 */] <-0.46745056f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* X3 */] <0.0721762f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.687056f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2723254f ? 
                 (data[34 /* X35 */] <-0.9717467f ? 
                     (data[16 /* X17 */] <-0.09172294f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[21 /* X22 */] <0.12951437f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21739353f ? 
             (data[29 /* X30 */] <0.118852705f ? 
                 (data[10 /* X11 */] <-0.69040436f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.16776752f ? 
                     (data[5 /* X6 */] <0.13929169f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2428912f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.16676788f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[3 /* X4 */] <-0.25663015f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26679856f ? 
                 (data[30 /* X31 */] <0.107233986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4326051f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14248714f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041614182f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.093120016f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09598517f ? 
                     (data[34 /* X35 */] <-0.34964478f ? 
                         (data[33 /* X34 */] <-0.2857754f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29434943f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2527061f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.0036785947f ? 
                     (data[15 /* X16 */] <0.14330004f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26454568f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14689144f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3409861f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3545002f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X4 */] <-0.7348256f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.52105176f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17752802f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.20929882f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19546731f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.7387901f ? 
            1.0f : 
             (data[5 /* X6 */] <0.13029262f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1626929f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.060338955f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2644915f ? 
                             (data[23 /* X24 */] <0.08192382f ? 
                                1.0f : 
                                 (data[29 /* X30 */] <0.17373295f ? 
                                    0.0f : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.28863576f ? 
                                        1.0f : 
                                         (data[19 /* X20 */] <-0.34774768f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.121977314f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.16803375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.41720426f ? 
                     (data[30 /* X31 */] <0.10188817f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.21543118f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.17375396f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.37048438f ? 
             (data[19 /* X20 */] <-0.30818367f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3389802f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.70478624f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (data[35 /* X36 */] <-0.7942121f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8270588f ? 
                     (data[34 /* X35 */] <-0.9822908f ? 
                         (data[15 /* X16 */] <0.20602839f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[19 /* X20 */] <-0.19560312f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18410844f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16714104f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09598517f ? 
                         (data[19 /* X20 */] <-0.4624507f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05733189f ? 
                                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10136022f ? 
                                    0.0f : 
                                     (data[18 /* X19 */] <0.22806853f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.15695916f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0049039223f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[10 /* X11 */] <-0.74547195f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25853458f ? 
                 (data[3 /* X4 */] <-0.31855473f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.16314344f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15594536f ? 
                             (data[3 /* X4 */] <-0.2699533f ? 
                                1.0f : 
                                 (data[22 /* X23 */] <0.13011226f ? 
                                     (data[18 /* X19 */] <0.015136931f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f))) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.04819587f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12899543f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (data[19 /* X20 */] <-0.14929846f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1405424f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0020512454f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.28249994f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.046774566f ? 
             (data[35 /* X36 */] <-0.14073187f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22954902f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.11229422f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.5218291f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25601196f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.08772966f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15821028f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[2 /* X3 */] <-0.24453996f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.004025693f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.13497421f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2791485f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[24 /* X25 */] <0.09007598f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23792425f ? 
                 (data[6 /* X7 */] <0.121919066f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33522007f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.45561105f ? 
                    0.0f : 
                    1.0f))) : 
        0.011560693f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[14 /* X15 */] <0.13307962f ? 
            1.0f : 
             (data[3 /* X4 */] <0.05299284f ? 
                 (data[3 /* X4 */] <-0.102326736f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.25975183f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2907155f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.19237342f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14539331f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27618086f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25382605f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7941665f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.7413757f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f))) : 
         (data[5 /* X6 */] <0.074759275f ? 
             (data[21 /* X22 */] <0.3107035f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.09749053f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[2 /* X3 */] <-0.012601352f ? 
             (data[11 /* X12 */] <-0.08323208f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.09818944f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.16685927f ? 
                0.0f : 
                 (data[35 /* X36 */] <-1.0455506f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2834476f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7377744f ? 
                            1.0f : 
                             (data[12 /* X13 */] <0.5261638f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[19 /* X20 */] <-0.8765539f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[19 /* X20 */] <-0.49249765f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13721359f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.6480965f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13022442f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.036771934f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.051671118f ? 
                         (data[34 /* X35 */] <-0.2151524f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20814021f ? 
             (data[2 /* X3 */] <-0.6713145f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.16679224f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24463157f ? 
                         (data[6 /* X7 */] <0.14413922f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17179108f ? 
                1.0f : 
                0.0f)) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[17 /* X18 */] <-0.6054332f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.2669509f ? 
                 (data[23 /* X24 */] <0.11947224f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <0.28801027f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19562812f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.3258749f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30110905f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[14 /* X15 */] <0.08982824f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05748067f ? 
             (data[34 /* X35 */] <-0.08203125f ? 
                 (data[16 /* X17 */] <-0.2952184f ? 
                     (data[35 /* X36 */] <-0.10239531f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.8806819f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19732131f ? 
                         (data[18 /* X19 */] <0.13185176f ? 
                             (data[5 /* X6 */] <0.15433799f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[0 /* X1 */] <-0.34241503f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28708154f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26454568f ? 
                         (data[24 /* X25 */] <-0.39417195f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.42528751f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[19 /* X20 */] <0.6694675f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.3513872f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2958484f ? 
             (data[3 /* X4 */] <-0.33231577f ? 
                 (data[6 /* X7 */] <0.12712078f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.20138189f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.016185183f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17963359f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25707868f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.11900238f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.049724124f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26138547f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.33721516f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4418019f ? 
                         (data[1 /* X2 */] <-0.22997153f ? 
                             (data[21 /* X22 */] <0.18669753f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.66344f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[19 /* X20 */] <-0.9201347f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[19 /* X20 */] <-0.63685924f ? 
                        1.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2835862f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[29 /* X30 */] <0.19573504f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.664342f ? 
             (data[24 /* X25 */] <-0.67343146f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.0218278f ? 
                     (data[2 /* X3 */] <-0.12872072f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24438795f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.54885f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19594584f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.11131012f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13609076f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12885813f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32342097f ? 
                         (data[7 /* X8 */] <0.06261537f ? 
                             (data[19 /* X20 */] <-0.4150881f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.15253414f ? 
                     (data[2 /* X3 */] <-0.10811892f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (data[21 /* X22 */] <0.09123832f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.10240478f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11274088f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.108213514f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41735414f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29632014f ? 
            0.0f : 
             (data[26 /* X27 */] <0.51575047f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-1.219341f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23792425f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26732454f ? 
                     (data[33 /* X34 */] <-0.67902803f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.08900905f ? 
                         (data[22 /* X23 */] <0.08666473f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.2003473f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42584744f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[7 /* X8 */] <0.03855496f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.36930692f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19937754f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.113227166f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27962837f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21348833f ? 
                            0.0f : 
                             (data[35 /* X36 */] <0.17279486f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18128432f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2531658f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.19074813f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                        0.0f : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.15781765f ? 
                         (data[27 /* X28 */] <0.40657684f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.026981777f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.66691774f ? 
             (data[3 /* X4 */] <-0.61097646f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32374382f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22412586f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.36463562f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[27 /* X28 */] <-0.11104495f ? 
             (data[31 /* X32 */] <0.062400408f ? 
                 (data[4 /* X5 */] <0.14265127f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.1216511f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.27115294f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07406394f ? 
                     (data[16 /* X17 */] <-0.42637762f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.35448074f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8136355f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57912844f ? 
                             (data[25 /* X26 */] <-0.41612107f ? 
                                1.0f : 
                                 (data[12 /* X13 */] <0.08230819f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4072785f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17831181f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26283377f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5630179f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (data[0 /* X1 */] <-0.69844216f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.08441399f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (data[27 /* X28 */] <-0.25956148f ? 
             (data[17 /* X18 */] <-0.23386566f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.148446f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43618006f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.14619063f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[13 /* X14 */] <0.042995498f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97374845f ? 
                    0.0f : 
                    1.0f))) : 
         (data[31 /* X32 */] <0.17348845f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.06846404f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.531482f ? 
                     (data[32 /* X33 */] <0.47656178f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.35703468f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[35 /* X36 */] <-0.4842279f ? 
             (data[20 /* X21 */] <0.22896649f ? 
                 (data[30 /* X31 */] <0.0982706f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.117382154f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.114639126f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0767772f ? 
             (data[17 /* X18 */] <-0.58086675f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.059576903f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.078461036f ? 
                        1.0f : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.21237001f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45530117f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33304286f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16735204f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.059558533f ? 
         (data[35 /* X36 */] <-0.1700547f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.21762203f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.1480772f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20138817f ? 
             (data[11 /* X12 */] <-1.1681253f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.45358887f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.25499454f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.070856355f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.09138835f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.09699209f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37029064f ? 
                         (data[11 /* X12 */] <-0.3429075f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.06719965f ? 
                                 (data[32 /* X33 */] <-0.47862393f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.43414733f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[14 /* X15 */] <0.23976636f ? 
                                 (data[33 /* X34 */] <-0.12010269f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38905907f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
             (data[0 /* X1 */] <0.031963978f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21906698f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.13809043f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[17 /* X18 */] <0.011798838f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.25002086f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.14259681f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.042549863f ? 
                             (data[32 /* X33 */] <-0.76136374f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (data[4 /* X5 */] <0.12986155f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[5 /* X6 */] <0.076476805f ? 
            1.0f : 
             (data[5 /* X6 */] <0.091278344f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1481295f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.23625019f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2863802f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.102217294f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17977965f ? 
                         (data[19 /* X20 */] <-0.266422f ? 
                             (data[16 /* X17 */] <-0.16256444f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34370583f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14259681f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34641522f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7390368f ? 
                 (data[14 /* X15 */] <0.13596304f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.36198482f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13493963f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10893359f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.18194312f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.343501f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1532636f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[3 /* X4 */] <0.29725096f ? 
                 (data[12 /* X13 */] <0.18696733f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.23386566f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (data[29 /* X30 */] <0.11135199f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.042672075f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.8926659f ? 
                 (data[13 /* X14 */] <0.120462656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2114486f ? 
             (data[23 /* X24 */] <0.10240478f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5344715f ? 
                     (data[30 /* X31 */] <0.12359358f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[27 /* X28 */] <-0.16346255f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.015150031f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07528453f ? 
                     (data[34 /* X35 */] <-0.2863802f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <0.38729075f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24091688f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11060666f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.054409996f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07528453f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.065852225f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.1778915f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15479364f ? 
             (data[5 /* X6 */] <0.13202281f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23006654f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.055399578f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.049483195f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.15650426f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18996836f ? 
                            1.0f : 
                            0.0f) : 
                         (data[4 /* X5 */] <0.111172356f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.061244305f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37389213f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2091925f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.03546173f ? 
                     (data[34 /* X35 */] <0.43006384f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.11412038f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3506095f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X4 */] <-0.33059564f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13357049f ? 
            0.0f : 
             (data[5 /* X6 */] <0.13897802f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.14654197f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4300423f ? 
                 (data[26 /* X27 */] <-0.02013672f ? 
                     (data[17 /* X18 */] <0.030223675f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.100195475f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1564668f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.44586575f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[5 /* X6 */] <0.076476805f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.40463734f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.16352746f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.24964525f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31136388f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.11144757f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2311007f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3066543f ? 
                 (data[24 /* X25 */] <-0.7369093f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.067008846f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.21599467f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.36112395f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3439651f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                     (data[19 /* X20 */] <-1.0072964f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.8713435f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44546276f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.30746838f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.4585064f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.288305f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21394736f ? 
                 (data[34 /* X35 */] <-0.9717467f ? 
                     (data[8 /* X9 */] <-0.004744685f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0723008f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <0.10716433f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46143174f ? 
             (data[17 /* X18 */] <-0.24307808f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40681693f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[0 /* X1 */] <-0.09282903f ? 
             (data[35 /* X36 */] <-0.7439444f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.4842279f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5430023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.14187329f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16604689f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15425074f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09427591f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1818184f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18509226f ? 
                 (data[8 /* X9 */] <-0.24802515f ? 
                     (data[23 /* X24 */] <0.10497198f ? 
                         (data[20 /* X21 */] <0.14860389f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.5997047f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.058445062f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3550897f ? 
                             (data[32 /* X33 */] <-0.34766546f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.47818258f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (data[12 /* X13 */] <0.08937664f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[11 /* X12 */] <-0.35828424f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16613632f ? 
                     (data[2 /* X3 */] <-0.1933535f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2951608f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.054409996f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31160295f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14475662f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.28903177f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23596078f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.18024527f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26151338f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14830744f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.22299011f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <0.28719187f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
             (data[33 /* X34 */] <-0.88592476f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21761015f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26966947f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30934778f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.36198482f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21447206f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.28933287f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[1 /* X2 */] <-0.1831768f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9403872f ? 
                     (data[32 /* X33 */] <-0.28409126f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.5900485f ? 
                             (data[7 /* X8 */] <0.084895596f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16534443f ? 
                     (data[29 /* X30 */] <0.18327287f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.052156392f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.0419758f ? 
                1.0f : 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.70313996f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.4965254f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.5477638f ? 
                                1.0f : 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32574746f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9528072f ? 
                                        0.0f : 
                                         (data[31 /* X32 */] <0.11694168f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f))))))) : 
         (data[20 /* X21 */] <0.0863785f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[1 /* X2 */] <-0.17223752f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.27614072f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.21716082f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.27139625f ? 
                 (data[12 /* X13 */] <0.16268677f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.13732025f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.385198f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32699758f ? 
                     (data[32 /* X33 */] <0.0142040625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.5189475f ? 
             (data[19 /* X20 */] <-0.48977384f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1802823f ? 
                 (data[0 /* X1 */] <-0.23230356f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11643973f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <0.46567205f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[12 /* X13 */] <0.25631976f ? 
             (data[29 /* X30 */] <0.16323194f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2634609f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.20960419f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.8030411f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5843313f ? 
             (data[27 /* X28 */] <-0.17739877f ? 
                 (data[17 /* X18 */] <-0.25843212f ? 
                     (data[11 /* X12 */] <-0.15838677f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.39171693f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
        0.75f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4432567f ? 
             (data[33 /* X34 */] <-1.219341f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.081313446f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14759608f ? 
                         (data[0 /* X1 */] <-0.23230356f ? 
                             (data[24 /* X25 */] <-0.18790574f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08573341f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33000922f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.16679224f ? 
                         (data[32 /* X33 */] <-0.37357983f ? 
                             (data[27 /* X28 */] <0.17768864f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[17 /* X18 */] <-0.520986f ? 
             (data[16 /* X17 */] <-0.25706303f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05748067f ? 
             (data[16 /* X17 */] <-0.2952184f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12181959f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.34911662f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17774826f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <0.072119206f ? 
                     (data[20 /* X21 */] <0.104207166f ? 
                         (data[22 /* X23 */] <0.12836424f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18498346f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3822485f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.10218543f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29753044f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                 (data[0 /* X1 */] <-0.32773352f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.5060237f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08461738f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[14 /* X15 */] <0.060273122f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20243798f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <-0.21294603f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20707321f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4938832f ? 
                         (data[12 /* X13 */] <0.16780055f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[34 /* X35 */] <-0.7292324f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.047340024f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27259505f ? 
                 (data[2 /* X3 */] <-0.3853027f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16613632f ? 
                         (data[16 /* X17 */] <-1.0723197f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.45228326f ? 
                                 (data[35 /* X36 */] <-0.3353382f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[14 /* X15 */] <0.26283377f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[16 /* X17 */] <-0.47327697f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.51124835f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.05587524f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31299436f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.025135363f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (data[23 /* X24 */] <0.09600448f ? 
             (data[0 /* X1 */] <-0.12586246f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.03546173f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.30793688f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1609945f ? 
                     (data[16 /* X17 */] <-0.9803246f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.3758589f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24841663f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1792603f ? 
                         (data[26 /* X27 */] <-0.122210465f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3367699f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-1.2905719f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[34 /* X35 */] <-0.581615f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25390813f ? 
                 (data[29 /* X30 */] <0.13697943f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09929268f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.057300244f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.07758117f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15095651f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.37152922f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.4023653f ? 
            0.0f : 
             (data[26 /* X27 */] <0.07874722f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                     (data[23 /* X24 */] <0.12365427f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.5839376f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.7292756f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2525147f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.057705324f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[31 /* X32 */] <0.05335836f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12885366f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.21894673f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12296099f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3650416f ? 
                        1.0f : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.16541511f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.65112996f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10392302f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18347523f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5128018f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.16681275f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26414543f ? 
                             (data[5 /* X6 */] <0.18365043f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42058796f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))) : 
         (data[26 /* X27 */] <-0.26256186f ? 
             (data[16 /* X17 */] <-0.20618914f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.30174363f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[31 /* X32 */] <0.13667439f ? 
             (data[30 /* X31 */] <0.115549415f ? 
                 (data[23 /* X24 */] <0.22827733f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[22 /* X23 */] <0.2189451f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4478192f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13575456f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.39687204f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11536099f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[24 /* X25 */] <-0.29316318f ? 
             (data[27 /* X28 */] <-0.13943781f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.042672075f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.06458541f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.058525246f ? 
            1.0f : 
             (data[20 /* X21 */] <0.14466643f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.643723f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-1.0455554f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.1215296f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.210579f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33447462f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[25 /* X26 */] <-0.13154303f ? 
                                    0.0f : 
                                    1.0f))))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[35 /* X36 */] <-0.9345428f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.37968513f ? 
                 (data[4 /* X5 */] <0.14646447f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.20565858f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[28 /* X29 */] <0.2195819f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15006813f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07768129f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[18 /* X19 */] <-0.12539446f ? 
             (data[28 /* X29 */] <0.19930671f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1098718f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.081569724f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17319755f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.1736233f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05666376f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.3438972f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.35140738f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21834059f ? 
                     (data[21 /* X22 */] <0.09822566f ? 
                        1.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1685694f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5652534f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35124177f ? 
                     (data[12 /* X13 */] <0.105005346f ? 
                         (data[32 /* X33 */] <-0.3252234f ? 
                             (data[15 /* X16 */] <0.059379727f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[0 /* X1 */] <-0.37911886f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.21801847f ? 
                                 (data[32 /* X33 */] <-0.2578972f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57912844f ? 
                                    0.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4136767f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37573454f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25892887f ? 
                 (data[24 /* X25 */] <-0.27002093f ? 
                     (data[19 /* X20 */] <-0.2865837f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.43648914f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[28 /* X29 */] <0.08724493f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.45766714f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[33 /* X34 */] <-0.72397965f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23254418f ? 
                 (data[34 /* X35 */] <-0.2231156f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14380595f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4077259f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22189401f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36613506f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.052688092f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1376425f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15544349f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06955814f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.283671f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-1.1758137f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.108290866f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22623874f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.16409774f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[14 /* X15 */] <0.14100903f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.1831768f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20448588f ? 
                     (data[27 /* X28 */] <-0.6198591f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.052590765f ? 
                             (data[3 /* X4 */] <-0.2806644f ? 
                                0.0f : 
                                 (data[26 /* X27 */] <0.2503587f ? 
                                    1.0f : 
                                     (data[2 /* X3 */] <-0.62843835f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                     (data[35 /* X36 */] <-1.0455506f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-1.077579f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7751806f ? 
                                 (data[15 /* X16 */] <0.060735166f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    1.0f))) : 
         (data[16 /* X17 */] <-1.1759723f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5822487f ? 
                 (data[30 /* X31 */] <0.17243077f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.63484687f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4038989f ? 
             (data[1 /* X2 */] <-0.7465501f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10392302f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17641996f ? 
             (data[33 /* X34 */] <-0.16193505f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.5605393f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.10068087f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26393983f ? 
                             (data[7 /* X8 */] <0.057304215f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.49621457f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[21 /* X22 */] <0.288934f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
             (data[1 /* X2 */] <-0.3964929f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.068269856f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1282286f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0024739434f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31074995f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30780292f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.04402377f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1850753f ? 
             (data[30 /* X31 */] <0.12088041f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                     (data[30 /* X31 */] <0.16637056f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.22451138f ? 
                            0.0f : 
                             (data[2 /* X3 */] <-0.122562505f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48586088f ? 
                        1.0f : 
                        0.0f))) : 
             (data[25 /* X26 */] <-0.39836195f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.34522608f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.17763028f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0062097595f ? 
             (data[31 /* X32 */] <0.03656598f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.08138315f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.08320388f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.07101268f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13670087f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.39959076f ? 
                 (data[2 /* X3 */] <-0.2893281f ? 
                     (data[35 /* X36 */] <0.060338955f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.18169717f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.43835008f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37745887f ? 
                                 (data[27 /* X28 */] <0.10690939f ? 
                                    0.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31091982f ? 
                                         (data[5 /* X6 */] <0.11774746f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58348817f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26995212f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.14058036f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12320575f ? 
             (data[25 /* X26 */] <-0.48412228f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3334063f ? 
                 (data[30 /* X31 */] <0.15072535f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14573312f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4479023f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30234408f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.16300042f ? 
         (data[32 /* X33 */] <-0.069691494f ? 
             (data[34 /* X35 */] <-0.35491684f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.030026788f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.13072884f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.15486333f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33370218f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.43359774f ? 
             (data[16 /* X17 */] <-0.4414808f ? 
                 (data[29 /* X30 */] <0.17073266f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.266422f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5277481f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22488551f ? 
                        1.0f : 
                        0.0f))) : 
             (data[20 /* X21 */] <0.515462f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.065387376f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
             (data[34 /* X35 */] <-0.687056f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.111198485f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[21 /* X22 */] <0.17754485f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34070495f ? 
                     (data[1 /* X2 */] <-0.762959f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.16679224f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18413268f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43218878f ? 
                            1.0f : 
                             (data[16 /* X17 */] <-0.8141319f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.13092609f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20761321f ? 
             (data[32 /* X33 */] <0.08132051f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23701419f ? 
         (data[27 /* X28 */] <-0.29887468f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20565858f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.79776907f ? 
                 (data[32 /* X33 */] <0.4318175f ? 
                     (data[9 /* X10 */] <-0.0696264f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.14951284f ? 
         (data[18 /* X19 */] <0.07672757f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.156472f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.20662831f ? 
             (data[32 /* X33 */] <-0.7427203f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.2139556f ? 
                     (data[17 /* X18 */] <-0.2665691f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16323194f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.6643824f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[9 /* X10 */] <-0.55059737f ? 
                 (data[21 /* X22 */] <0.110143565f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04589794f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27177748f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3258506f ? 
                     (data[29 /* X30 */] <0.085199594f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.39553797f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22559665f ? 
             (data[32 /* X33 */] <-0.064098455f ? 
                 (data[24 /* X25 */] <-0.085203946f ? 
                     (data[24 /* X25 */] <-0.74684715f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.22880456f ? 
                            1.0f : 
                             (data[3 /* X4 */] <-0.12590043f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.17033906f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[7 /* X8 */] <0.06844178f ? 
                         (data[35 /* X36 */] <-0.19099958f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5221301f ? 
                 (data[21 /* X22 */] <0.16932517f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.476299f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13682406f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3652706f ? 
                         (data[26 /* X27 */] <-0.056022014f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20846014f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048849583f ? 
         (data[22 /* X23 */] <0.048603993f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.578236f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.28415218f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12603569f ? 
             (data[14 /* X15 */] <0.14749674f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.23814449f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.63003963f ? 
                     (data[3 /* X4 */] <-0.20846657f ? 
                         (data[2 /* X3 */] <0.3057144f ? 
                             (data[29 /* X30 */] <0.2661553f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.43512157f ? 
                 (data[29 /* X30 */] <0.1344792f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[23 /* X24 */] <0.07893702f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.62589794f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18621384f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27949303f ? 
                     (data[16 /* X17 */] <-0.4224031f ? 
                         (data[26 /* X27 */] <0.005381718f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27033046f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.41870248f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39372215f ? 
             (data[14 /* X15 */] <0.09126995f ? 
                 (data[33 /* X34 */] <-0.35245866f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10182099f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.033629898f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.15449813f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30608514f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1609945f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.24864113f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13495569f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[29 /* X30 */] <0.054471564f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[23 /* X24 */] <0.0778703f ? 
            0.0f : 
             (data[28 /* X29 */] <0.12834355f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7146551f ? 
                     (data[29 /* X30 */] <0.13572931f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2997552f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.05578992f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[17 /* X18 */] <-0.6054332f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22398111f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16285948f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.081296325f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[23 /* X24 */] <0.12373911f ? 
             (data[14 /* X15 */] <0.08694481f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                 (data[9 /* X10 */] <-0.15707567f ? 
                     (data[3 /* X4 */] <-0.38735986f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32677522f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.26081395f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17573313f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.34295252f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33564422f ? 
             (data[2 /* X3 */] <-0.31492132f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24864678f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.64193875f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.04793605f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.291535f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16183838f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[11 /* X12 */] <-0.57868403f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.022743264f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.026827151f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.052773695f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.62498546f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08497282f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.46592134f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25494522f ? 
             (data[15 /* X16 */] <0.08012139f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.16889393f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2612222f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[14 /* X15 */] <0.17777272f ? 
             (data[25 /* X26 */] <-0.4228636f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19000588f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.26574174f ? 
                        0.0f : 
                        1.0f))) : 
             (data[13 /* X14 */] <0.15089618f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10531307f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.19121978f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23666106f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.117382154f ? 
                        0.0f : 
                         (data[0 /* X1 */] <0.10762294f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.13461205f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06223411f ? 
            0.0f : 
             (data[14 /* X15 */] <0.10136194f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.42999217f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5774326f ? 
         (data[22 /* X23 */] <0.16625291f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.625964f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.43009084f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28579432f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.20008679f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.115931004f ? 
                     (data[32 /* X33 */] <0.14371783f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0026034568f ? 
                            0.0f : 
                             (data[10 /* X11 */] <0.05804469f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2786926f ? 
             (data[23 /* X24 */] <0.103471495f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.021746514f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.108857654f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.41350737f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.51093954f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.88627493f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16971758f ? 
                 (data[17 /* X18 */] <-0.7129114f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5207411f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.21276562f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X12 */] <-0.45567018f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.10897072f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.20212531f ? 
                            0.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24247858f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.311852f ? 
             (data[30 /* X31 */] <0.07656519f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.54526037f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22172014f ? 
                             (data[13 /* X14 */] <0.080622405f ? 
                                1.0f : 
                                0.0f) : 
                             (data[11 /* X12 */] <-0.080478005f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[13 /* X14 */] <0.2629469f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.10369266f ? 
                     (data[11 /* X12 */] <-0.99898124f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18418786f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19117694f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.026040306f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1924261f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30088112f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (data[14 /* X15 */] <0.104245365f ? 
             (data[30 /* X31 */] <0.119976014f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.01794045f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.39416325f ? 
                     (data[21 /* X22 */] <0.14341636f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016635684f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23688294f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[1 /* X2 */] <-0.21599467f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20220385f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15717605f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.053896297f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21326704f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14942542f ? 
                     (data[32 /* X33 */] <-0.045455f ? 
                         (data[33 /* X34 */] <-0.16126041f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.664342f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23698898f ? 
                 (data[13 /* X14 */] <0.11492929f ? 
                     (data[26 /* X27 */] <-0.0048109456f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.13273749f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20528662f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42697665f ? 
             (data[21 /* X22 */] <0.03271974f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2675052f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.108143196f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.53030664f ? 
             (data[34 /* X35 */] <-1.0483738f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03023449f ? 
                     (data[35 /* X36 */] <-0.7277575f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.205736f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.028568521f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.037514843f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <0.017282447f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.26455775f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[3 /* X4 */] <-0.22566785f ? 
            1.0f : 
             (data[21 /* X22 */] <0.10274586f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19705391f ? 
                     (data[22 /* X23 */] <0.17079534f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.40198797f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.18357518f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[20 /* X21 */] <0.21278606f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <0.07715232f ? 
             (data[15 /* X16 */] <0.08846574f ? 
                 (data[22 /* X23 */] <0.119920135f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.35866508f ? 
                     (data[27 /* X28 */] <0.1779041f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.17599228f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5898621f ? 
                 (data[3 /* X4 */] <-0.13966146f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35873556f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.22443219f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.13677529f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.311852f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.030919371f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.05069905f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.03892364f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.29530156f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.1507489f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.40954f ? 
             (data[10 /* X11 */] <-0.016635684f ? 
                 (data[0 /* X1 */] <0.002600917f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08579541f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.085203946f ? 
                     (data[1 /* X2 */] <-0.39102325f ? 
                        0.0f : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.12721115f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22187115f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.34370992f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16086963f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1732329f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (data[3 /* X4 */] <-0.48884737f ? 
             (data[4 /* X5 */] <0.11647208f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.30243787f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24932602f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26533395f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.051668007f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.119859956f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-1.1240792f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06177896f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.084180705f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16467413f ? 
                 (data[31 /* X32 */] <0.07015074f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.25378004f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.23224975f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.51896274f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3801151f ? 
                                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30135712f ? 
                                        1.0f : 
                                         (data[4 /* X5 */] <0.1401671f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[21 /* X22 */] <0.13809043f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.06808713f ? 
                         (data[29 /* X30 */] <0.18258873f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.082195066f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.4822683f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.77634144f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38936967f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.12391965f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.16154455f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16681646f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (data[1 /* X2 */] <-0.6480965f ? 
            1.0f : 
             (data[30 /* X31 */] <0.036771934f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.16679224f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.18412058f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.045455f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.291326f ? 
                                1.0f : 
                                 (data[8 /* X9 */] <0.33000922f ? 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.121619165f ? 
                                         (data[28 /* X29 */] <0.12748334f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25367656f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[11 /* X12 */] <-0.05376061f ? 
                                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16286638f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)))))))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22390752f ? 
             (data[3 /* X4 */] <0.2628484f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5506711f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.4842279f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19254832f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0072722253f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.13733184f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26386192f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X5 */] <0.10040473f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39243883f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.46267962f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[17 /* X18 */] <-0.5962208f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.2976497f ? 
                 (data[4 /* X5 */] <0.119035974f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.16679224f ? 
                     (data[11 /* X12 */] <-0.38391212f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5320626f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.8718036f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54998016f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46445715f ? 
                                    0.0f : 
                                     (data[7 /* X8 */] <0.03678107f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[28 /* X29 */] <0.14084925f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3550897f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.42697665f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5091137f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (data[1 /* X2 */] <-0.2214643f ? 
            1.0f : 
             (data[26 /* X27 */] <0.08193703f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.1805569f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.045868807f ? 
             (data[4 /* X5 */] <0.13950196f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.022743264f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.47772297f ? 
                 (data[18 /* X19 */] <-0.24518664f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.3224052f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0048860325f ? 
                         (data[2 /* X3 */] <-0.30000773f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28714353f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28574362f ? 
                                     (data[32 /* X33 */] <-0.7136365f ? 
                                         (data[13 /* X14 */] <0.11603596f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08722737f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2109103f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.054409996f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08840649f ? 
                             (data[13 /* X14 */] <0.15144952f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6907798f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22521389f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2077885f ? 
                     (data[13 /* X14 */] <0.14259613f ? 
                         (data[12 /* X13 */] <0.19423011f ? 
                            1.0f : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.22472456f ? 
                             (data[4 /* X5 */] <0.19611536f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (data[28 /* X29 */] <0.10750517f ? 
            0.0f : 
             (data[7 /* X8 */] <0.12821542f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.3275586f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44546276f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11384275f ? 
             (data[33 /* X34 */] <-0.17622432f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                     (data[11 /* X12 */] <-0.34397554f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17110108f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1289961f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[7 /* X8 */] <0.06686553f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.5892041f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29673004f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46104327f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.3104507f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.16127847f ? 
             (data[25 /* X26 */] <-0.46801117f ? 
                 (data[28 /* X29 */] <0.31194663f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.50563025f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                     (data[11 /* X12 */] <-0.10085809f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14740029f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.13622835f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[18 /* X19 */] <-0.43609443f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.5863012f ? 
                         (data[15 /* X16 */] <0.24445696f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.14421438f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24659006f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5763567f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37953058f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[20 /* X21 */] <0.22823589f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06613642f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.023531336f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24553321f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17250526f ? 
             (data[15 /* X16 */] <0.05876191f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10683068f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.09186776f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.47271362f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.2359856f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19117694f ? 
                     (data[32 /* X33 */] <-0.3884946f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32856956f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.48781198f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[13 /* X14 */] <0.09279581f ? 
             (data[7 /* X8 */] <0.05880087f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.5120515f ? 
             (data[6 /* X7 */] <0.20285282f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.6651978f ? 
                     (data[19 /* X20 */] <0.20126247f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4738376f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47930118f ? 
                     (data[15 /* X16 */] <0.041054435f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18412058f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46563804f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2440446f ? 
                                     (data[35 /* X36 */] <-0.4097805f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13494521f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.040515322f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19451378f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[34 /* X35 */] <-0.765625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.5309364f ? 
             (data[3 /* X4 */] <-0.33231577f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5120515f ? 
             (data[6 /* X7 */] <0.20285282f ? 
                1.0f : 
                 (data[2 /* X3 */] <0.030587215f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3421041f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19655716f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33447462f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[23 /* X24 */] <0.0778703f ? 
             (data[20 /* X21 */] <0.095507935f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14174147f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14975792f ? 
                     (data[32 /* X33 */] <-0.37357983f ? 
                        0.0f : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.14172989f ? 
                        1.0f : 
                        0.0f))) : 
             (data[28 /* X29 */] <0.21281157f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45038757f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.40968463f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18498346f ? 
                         (data[15 /* X16 */] <0.16237283f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1986037f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.5818307f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[12 /* X13 */] <0.08057438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31094784f ? 
             (data[20 /* X21 */] <0.16011626f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.0866287f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.20516525f ? 
                         (data[16 /* X17 */] <-0.14259681f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2869302f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.27299505f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[2 /* X3 */] <0.020989755f ? 
                 (data[9 /* X10 */] <-0.0016103054f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.46788964f ? 
             (data[24 /* X25 */] <-0.8873324f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.054471564f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43486795f ? 
                         (data[35 /* X36 */] <-0.55962944f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14035925f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27700284f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.13003317f ? 
            1.0f : 
             (data[12 /* X13 */] <0.14441015f ? 
                 (data[16 /* X17 */] <-0.19347069f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33488068f ? 
             (data[2 /* X3 */] <-0.33222517f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07637755f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.21297365f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[20 /* X21 */] <0.172757f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.22680047f ? 
        0.0f : 
         (data[18 /* X19 */] <0.13185176f ? 
             (data[12 /* X13 */] <0.17751017f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.32651788f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.25843212f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.7487112f ? 
                 (data[10 /* X11 */] <-1.0051659f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59113324f ? 
                     (data[33 /* X34 */] <-0.9716604f ? 
                         (data[6 /* X7 */] <0.18498346f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[13 /* X14 */] <0.09279581f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10373549f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.33251667f ? 
             (data[27 /* X28 */] <-0.10800347f ? 
                 (data[24 /* X25 */] <-0.2753381f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.052688092f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.030115051f ? 
                     (data[29 /* X30 */] <0.11072693f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.13130103f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21784444f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35903025f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26657474f ? 
                             (data[33 /* X34 */] <-0.86496717f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3982124f ? 
                     (data[24 /* X25 */] <-0.008339293f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5047529f ? 
                             (data[16 /* X17 */] <-0.217666f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33699852f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20501328f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                     (data[11 /* X12 */] <-0.4249167f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34248906f ? 
             (data[22 /* X23 */] <0.217554f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.372077f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18930836f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18900962f ? 
            0.0f : 
             (data[15 /* X16 */] <0.040783748f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32592058f ? 
             (data[23 /* X24 */] <0.09387105f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.23162608f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.053642627f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.22009146f ? 
                     (data[3 /* X4 */] <0.025470797f ? 
                         (data[19 /* X20 */] <-0.2800795f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.118607424f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.14375918f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25986457f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[4 /* X5 */] <0.08273064f ? 
                 (data[13 /* X14 */] <0.2864637f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09839733f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07660934f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20430695f ? 
                     (data[33 /* X34 */] <-0.057147063f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18301815f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19256894f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31170717f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32574746f ? 
                         (data[3 /* X4 */] <0.011709776f ? 
                             (data[23 /* X24 */] <0.08192382f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21133937f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3334777f ? 
                 (data[31 /* X32 */] <0.067672744f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17096911f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.15396257f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[32 /* X33 */] <-0.29541752f ? 
             (data[34 /* X35 */] <-0.049137946f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016635684f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3498806f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.022692777f ? 
                     (data[27 /* X28 */] <-0.07391582f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14908935f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.13541152f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42894796f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22488551f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.26351064f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[2 /* X3 */] <-0.16776028f ? 
             (data[19 /* X20 */] <-0.22828875f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066753864f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30896857f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.11589733f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.10444141f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32519728f ? 
                     (data[5 /* X6 */] <0.08105687f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66638935f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.030927835f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10790105f ? 
             (data[14 /* X15 */] <0.085503094f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.10844141f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2334386f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[5 /* X6 */] <0.10052217f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13307501f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.2969231f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.049724124f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2999667f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13239072f ? 
                         (data[9 /* X10 */] <-0.30184326f ? 
                             (data[8 /* X9 */] <0.17167585f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33667764f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[8 /* X9 */] <0.23570068f ? 
                             (data[34 /* X35 */] <-1.0911347f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[22 /* X23 */] <0.19910747f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2835594f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20090818f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13211872f ? 
            0.0f : 
             (data[4 /* X5 */] <0.13789521f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08667767f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15775396f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30447203f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13011703f ? 
                         (data[3 /* X4 */] <0.25940818f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.025079956f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[31 /* X32 */] <0.21267436f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.13273749f ? 
                     (data[28 /* X29 */] <0.118205965f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.21989368f ? 
                         (data[8 /* X9 */] <-0.25903672f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (data[9 /* X10 */] <-0.12306762f ? 
                 (data[34 /* X35 */] <-0.8030411f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14931999f ? 
                         (data[5 /* X6 */] <0.08784948f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.38008398f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.57148796f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[3 /* X4 */] <-0.22050746f ? 
             (data[17 /* X18 */] <-0.1079626f ? 
                 (data[2 /* X3 */] <-0.11657383f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23866402f ? 
                         (data[12 /* X13 */] <0.15544349f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.54635906f ? 
                 (data[22 /* X23 */] <0.09771149f ? 
                     (data[9 /* X10 */] <-0.5165893f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.3019029f ? 
                         (data[33 /* X34 */] <-0.6668226f ? 
                             (data[10 /* X11 */] <-0.1810178f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[25 /* X26 */] <0.24009268f ? 
                    0.0f : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.058664497f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[18 /* X19 */] <0.20869154f ? 
             (data[3 /* X4 */] <-0.70019764f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32519728f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                         (data[24 /* X25 */] <-0.13091716f ? 
                             (data[5 /* X6 */] <0.14229631f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21431032f ? 
                                     (data[10 /* X11 */] <-0.25916246f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f) : 
                     (data[2 /* X3 */] <-0.103777215f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4095304f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1185745f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.43559542f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09195461f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1282548f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <-0.06883918f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36761993f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.769956f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.11294252f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <0.104596674f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
         (data[3 /* X4 */] <-0.2531899f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08646696f ? 
                 (data[22 /* X23 */] <0.1339582f ? 
                     (data[3 /* X4 */] <-0.33869106f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16227995f ? 
                     (data[2 /* X3 */] <-0.11657383f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13575456f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.10515444f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.0016103054f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.048517745f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33293533f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
             (data[31 /* X32 */] <0.05206664f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.6727816f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17641996f ? 
                         (data[1 /* X2 */] <-0.17223752f ? 
                             (data[14 /* X15 */] <0.16595067f ? 
                                1.0f : 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16843453f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.703688f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.39551523f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f))) : 
             (data[1 /* X2 */] <-0.1831768f ? 
                 (data[20 /* X21 */] <0.14326191f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6103142f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.29187006f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.093432516f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16702984f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (data[27 /* X28 */] <-0.2901384f ? 
             (data[17 /* X18 */] <-0.24307808f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16285948f ? 
                     (data[19 /* X20 */] <-0.6150688f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21100469f ? 
                             (data[18 /* X19 */] <-0.0768942f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4101522f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.18197423f ? 
                        0.0f : 
                         (data[10 /* X11 */] <0.12856922f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2573292f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.28715992f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24564715f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1971772f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.211366f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.75453824f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[3 /* X4 */] <0.3368139f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[28 /* X29 */] <0.19198512f ? 
             (data[19 /* X20 */] <-0.3535837f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.033525396f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_11_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
        0.010869565f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21222402f ? 
                 (data[26 /* X27 */] <-0.24342304f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.35025874f ? 
                         (data[17 /* X18 */] <-0.21046518f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.47735563f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18539776f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.18823433f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39320603f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[15 /* X16 */] <0.16475694f ? 
                     (data[10 /* X11 */] <-0.6126618f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.060811423f ? 
             (data[2 /* X3 */] <-0.59324765f ? 
                 (data[20 /* X21 */] <0.12640756f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.30479372f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.41270187f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.2413408f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07637755f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43007246f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[19 /* X20 */] <5.107116E-4f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12052787f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.19217408f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30731764f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16840996f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10573225f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17110108f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.15942979f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X12 */] <-0.2814006f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.9716604f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.21076871f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.36027333f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3816715f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
                         (data[14 /* X15 */] <0.17115352f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[31 /* X32 */] <0.05206664f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18753622f ? 
                 (data[16 /* X17 */] <-0.3333738f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.53273207f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.09084984f ? 
                         (data[8 /* X9 */] <0.23555928f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2676413f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[34 /* X35 */] <-0.687056f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.47631904f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.13268186f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.51234025f ? 
             (data[14 /* X15 */] <0.09271166f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[32 /* X33 */] <0.1465726f ? 
            0.0f : 
             (data[3 /* X4 */] <0.31445226f ? 
                 (data[0 /* X1 */] <-0.036733326f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19555861f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                    1.0f : 
                     (data[1 /* X2 */] <0.04654822f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.04366956f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (data[21 /* X22 */] <0.037810475f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.079004474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7256663f ? 
             (data[3 /* X4 */] <-0.26351064f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5275621f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30896857f ? 
                         (data[4 /* X5 */] <0.09865887f ? 
                             (data[34 /* X35 */] <-0.75453824f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[0 /* X1 */] <-0.3699429f ? 
             (data[3 /* X4 */] <-0.07429661f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4635315f ? 
                 (data[3 /* X4 */] <-0.2910327f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4702239f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.07971583f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30540746f ? 
             (data[35 /* X36 */] <-0.2035665f ? 
                1.0f : 
                 (data[19 /* X20 */] <0.23216166f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15069562f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <0.0197971f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10181865f ? 
                 (data[27 /* X28 */] <-0.09138835f ? 
                     (data[21 /* X22 */] <0.10849963f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2802569f ? 
                         (data[10 /* X11 */] <-0.7384815f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3516402f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[2 /* X3 */] <-0.20615011f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X3 */] <-0.53886205f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2629469f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14302224f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.013334242f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07144246f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13306199f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13382868f ? 
                        1.0f : 
                         (data[19 /* X20 */] <0.038643956f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[11 /* X12 */] <-0.52742827f ? 
             (data[10 /* X11 */] <-0.45717672f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <0.013334242f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3411803f ? 
                1.0f : 
                 (data[16 /* X17 */] <0.18808334f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[30 /* X31 */] <0.097366214f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27449256f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32133275f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23740546f ? 
                         (data[31 /* X32 */] <0.06498385f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.48278496f ? 
                                1.0f : 
                                 (data[22 /* X23 */] <0.13954343f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.103985935f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19732131f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11385954f ? 
            0.0f : 
             (data[34 /* X35 */] <0.05123179f ? 
                 (data[24 /* X25 */] <-0.1208541f ? 
                     (data[0 /* X1 */] <0.12005316f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (data[35 /* X36 */] <-0.53030664f ? 
             (data[15 /* X16 */] <0.08608165f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.5893555f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5605268f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-1.0877318f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.122901f ? 
                             (data[31 /* X32 */] <0.06911736f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467958f ? 
                 (data[22 /* X23 */] <0.04179035f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.17069963f ? 
                             (data[29 /* X30 */] <0.15773141f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[33 /* X34 */] <-0.39447245f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <0.3299334f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2060651f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19823529f ? 
                 (data[9 /* X10 */] <-0.28339127f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1751816f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.026133977f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.1570641f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[18 /* X19 */] <0.27969128f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[17 /* X18 */] <-0.6054332f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15589434f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.7734744f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.8274599f ? 
                     (data[33 /* X34 */] <-0.16333614f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24871323f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.20294051f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.051987957f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4871273f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))) : 
         (data[7 /* X8 */] <0.11761041f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.18681061f ? 
             (data[32 /* X33 */] <-0.01935416f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14975792f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31273308f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.68309367f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32338572f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.09625012f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <-0.12953286f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.07004859f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39748156f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.38823026f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.10040386f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2053781f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15702173f ? 
                             (data[25 /* X26 */] <-0.3748646f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.21296288f ? 
                                     (data[28 /* X29 */] <0.24796715f ? 
                                        0.0f : 
                                         (data[22 /* X23 */] <0.25626862f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.66564596f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36087024f ? 
                 (data[33 /* X34 */] <-0.3056561f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081163436f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.05793012f ? 
                            0.0f : 
                             (data[22 /* X23 */] <0.11495125f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30899626f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.12353167f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[22 /* X23 */] <0.16307321f ? 
             (data[3 /* X4 */] <-0.12590043f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.041544065f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[1 /* X2 */] <-0.1831768f ? 
                 (data[12 /* X13 */] <0.22771618f ? 
                     (data[22 /* X23 */] <0.16736649f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.13046135f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28471592f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <-0.07528453f ? 
                         (data[0 /* X1 */] <-0.114851326f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.664342f ? 
             (data[5 /* X6 */] <0.0646181f ? 
                 (data[26 /* X27 */] <0.15211272f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25185233f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.052590765f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (data[1 /* X2 */] <-0.16403306f ? 
             (data[11 /* X12 */] <-0.33778194f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8860224f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.51023823f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4200563f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4090812f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1809392f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.61089444f ? 
             (data[3 /* X4 */] <-0.24630937f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.13925284f ? 
                     (data[10 /* X11 */] <-0.35352f ? 
                         (data[4 /* X5 */] <0.08568486f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.123170145f ? 
                             (data[19 /* X20 */] <-0.1319908f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.47395164f ? 
             (data[29 /* X30 */] <0.16573218f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40847713f ? 
                 (data[17 /* X18 */] <-0.81907934f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-1.1827737f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.10240478f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06479246f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08578485f ? 
                                    0.0f : 
                                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.02753945f ? 
                                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27701893f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32677522f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.29190895f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.100271344f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22390628f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41483814f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.08548826f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[29 /* X30 */] <0.11603994f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27281737f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45453173f ? 
                    1.0f : 
                     (data[24 /* X25 */] <0.23479176f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20516525f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6487759f ? 
                     (data[7 /* X8 */] <0.047874503f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.09466996f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.12392003f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6657265f ? 
                         (data[5 /* X6 */] <0.1087873f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20965664f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (data[11 /* X12 */] <-0.5120515f ? 
             (data[3 /* X4 */] <-0.5903349f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.26027882f ? 
                    1.0f : 
                     (data[9 /* X10 */] <0.29960382f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26533395f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.14759608f ? 
                    0.0f : 
                    1.0f))) : 
         (data[29 /* X30 */] <0.11510235f ? 
            0.0f : 
             (data[10 /* X11 */] <0.0027999498f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27816367f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.24231441f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[15 /* X16 */] <0.04793605f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.39060694f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20540558f ? 
                     (data[0 /* X1 */] <0.12005316f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2549217f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.07905012f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.049553793f ? 
                     (data[12 /* X13 */] <0.12391965f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24339157f ? 
                            0.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17563282f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.21739353f ? 
             (data[27 /* X28 */] <-0.16127847f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.066090554f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07143633f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.028686343f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.07310506f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.03393834f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08326431f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22144544f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.10042218f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10513422f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[20 /* X21 */] <0.10112605f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14941016f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61627644f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[33 /* X34 */] <-0.36198482f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15503372f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.52252144f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.79166716f ? 
                         (data[18 /* X19 */] <-0.0552364f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.35288414f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.09863026f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17104518f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.22222759f ? 
                 (data[6 /* X7 */] <0.13563f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.062978595f ? 
             (data[1 /* X2 */] <0.030139292f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2608246f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.17343436f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[33 /* X34 */] <-0.023805432f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.053655077f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28719187f ? 
                     (data[25 /* X26 */] <-0.23039243f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0942694f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3295425f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09077518f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.080478005f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.09704314f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.030139292f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06217519f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5474777f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20005539f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.16357164f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3441844f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[33 /* X34 */] <-0.36198482f ? 
             (data[3 /* X4 */] <-0.23942886f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.111919664f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13953216f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24336788f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.4779832f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[22 /* X23 */] <0.11855741f ? 
             (data[16 /* X17 */] <-0.43512157f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.100983776f ? 
                 (data[27 /* X28 */] <-0.14777051f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[22 /* X23 */] <0.16261896f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12976097f ? 
                 (data[13 /* X14 */] <0.1048098f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40327087f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14574583f ? 
                 (data[35 /* X36 */] <-1.0455506f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.23001103f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19573504f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.19773266f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3185899f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[32 /* X33 */] <0.17826648f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.060193773f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.6064834f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.17573313f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5638911f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.36198482f ? 
        0.0f : 
         (data[2 /* X3 */] <-0.09737891f ? 
             (data[8 /* X9 */] <-0.09719126f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21606244f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.17175922f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13561696f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.4615304f ? 
                 (data[28 /* X29 */] <0.075402796f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.41856658f ? 
                         (data[32 /* X33 */] <-0.045455f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.26584938f ? 
                                 (data[19 /* X20 */] <-0.649555f ? 
                                    0.0f : 
                                     (data[1 /* X2 */] <-0.17223752f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.050240636f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (data[10 /* X11 */] <-0.460519f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[2 /* X3 */] <-0.62843835f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.1400973f ? 
                 (data[27 /* X28 */] <-0.30105874f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
                         (data[30 /* X31 */] <0.13082872f ? 
                            1.0f : 
                             (data[32 /* X33 */] <0.4318175f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.792497f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12262175f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.15875633f ? 
                     (data[27 /* X28 */] <-0.37094885f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3548127f ? 
             (data[10 /* X11 */] <-1.221645f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01685353f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.038970757f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[13 /* X14 */] <0.1287627f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04562409f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[2 /* X3 */] <-0.22694461f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11293521f ? 
                 (data[19 /* X20 */] <-0.2773172f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.05064088f ? 
                 (data[34 /* X35 */] <-0.4129094f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.334028f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.34370992f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.31703606f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.39011204f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13935417f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[18 /* X19 */] <-0.42941272f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.28792524f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[23 /* X24 */] <0.17645289f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[9 /* X10 */] <-0.5093019f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2513689f ? 
                 (data[32 /* X33 */] <-0.19460265f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24714196f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30932042f ? 
                 (data[13 /* X14 */] <0.13222584f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.15253414f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.049724124f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.47327697f ? 
                 (data[10 /* X11 */] <-0.18507785f ? 
                     (data[27 /* X28 */] <-0.35347632f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.41361237f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-1.1162486f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6847396f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.45456883f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.15019368f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[5 /* X6 */] <0.06640065f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[19 /* X20 */] <-0.22011735f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20444988f ? 
                 (data[30 /* X31 */] <0.15072535f ? 
                     (data[28 /* X29 */] <0.23985708f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[35 /* X36 */] <-0.978527f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.03276161f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21167721f ? 
                 (data[32 /* X33 */] <0.11160885f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.15106836f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845895f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.57741034f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.14573027f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[17 /* X18 */] <-0.19701599f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19646944f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24795657f ? 
             (data[22 /* X23 */] <0.17261231f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10166718f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.91249794f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.29217678f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28568357f ? 
            0.0f : 
             (data[17 /* X18 */] <0.21754286f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18237908f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23668972f ? 
                     (data[10 /* X11 */] <-0.8199752f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11850486f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.1177276f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.08604229f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5496551f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24058975f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0045901663f ? 
             (data[7 /* X8 */] <0.03759087f ? 
                 (data[13 /* X14 */] <0.2172966f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <-0.16861156f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.19622354f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.30840787f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14759608f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5138487f ? 
                 (data[0 /* X1 */] <-0.070806734f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.56255907f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23041075f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25250822f ? 
                                1.0f : 
                                 (data[23 /* X24 */] <0.1258799f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30254954f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.24886827f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.24980265f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[24 /* X25 */] <0.09007598f ? 
             (data[22 /* X23 */] <0.17806323f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3232151f ? 
                1.0f : 
                0.0f)) : 
        0.011560693f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_11_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[23 /* X24 */] <0.06613642f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.22607203f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.09737891f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38764986f ? 
                     (data[12 /* X13 */] <0.13022442f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26103643f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13105336f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17260896f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.33634028f ? 
                     (data[19 /* X20 */] <-1.138039f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13709058f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15585268f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5461191f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4038989f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14797524f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13039713f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16773705f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
                 (data[30 /* X31 */] <0.116722226f ? 
                     (data[10 /* X11 */] <-0.19803494f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46610942f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.15317567f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <0.30069122f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15071087f ? 
                    1.0f : 
                     (data[25 /* X26 */] <0.06425481f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[18 /* X19 */] <-0.09699715f ? 
             (data[21 /* X22 */] <0.22275302f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7256663f ? 
                 (data[32 /* X33 */] <0.40944535f ? 
                     (data[20 /* X21 */] <0.22472456f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.09024665f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.080478005f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.093122505f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16264641f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (data[3 /* X4 */] <-0.30135345f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.34628624f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.04697287f ? 
             (data[18 /* X19 */] <0.14187434f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05190536f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26439413f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.321995f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4612247f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23322818f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15094659f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24940929f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06479246f ? 
                                    0.0f : 
                                     (data[11 /* X12 */] <-0.36488673f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[3 /* X4 */] <-0.11213942f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.311852f ? 
                 (data[30 /* X31 */] <0.10912331f ? 
                     (data[11 /* X12 */] <-0.25853258f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16472961f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[31 /* X32 */] <0.0856514f ? 
                         (data[19 /* X20 */] <-0.14281097f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08124822f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.71664274f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.99898124f ? 
                        0.0f : 
                        1.0f))) : 
             (data[31 /* X32 */] <0.03656598f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.055758897f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20408449f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12114541f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.1621409f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21073388f ? 
                 (data[10 /* X11 */] <-0.2369062f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (data[33 /* X34 */] <-0.8263861f ? 
             (data[35 /* X36 */] <-0.022794213f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37230143f ? 
                 (data[11 /* X12 */] <-0.4249167f ? 
                     (data[6 /* X7 */] <0.18157977f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17294165f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[25 /* X26 */] <-0.55355394f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.30793688f ? 
                    1.0f : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.055758897f ? 
             (data[3 /* X4 */] <-0.321995f ? 
                 (data[7 /* X8 */] <0.12500177f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21394736f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10667682f ? 
             (data[1 /* X2 */] <-0.2214643f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15426876f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                             (data[18 /* X19 */] <-0.15679854f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.062014505f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.082264505f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13893265f ? 
                         (data[23 /* X24 */] <0.13653971f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16877079f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.1884726f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.19708303f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[22 /* X23 */] <0.10356739f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (data[27 /* X28 */] <-0.3163472f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.17223752f ? 
             (data[0 /* X1 */] <-0.16862431f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.15023747f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0902945f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26283377f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18027632f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[27 /* X28 */] <-0.309795f ? 
             (data[1 /* X2 */] <-0.3582054f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.09598517f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13846879f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.4298502f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25112107f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16805302f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.14013131f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14973065f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19432406f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.07872541f ? 
                         (data[5 /* X6 */] <0.10349726f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2546496f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32833785f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[12 /* X13 */] <0.089243434f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1800312f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.8458894f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04589794f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06588199f ? 
                 (data[0 /* X1 */] <-0.106969945f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12440304f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10012462f ? 
            0.0f : 
             (data[31 /* X32 */] <0.09598517f ? 
                 (data[12 /* X13 */] <0.120548084f ? 
                     (data[5 /* X6 */] <0.12974113f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23752336f ? 
                        1.0f : 
                         (data[24 /* X25 */] <0.062340997f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.31225818f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2863842f ? 
                        0.0f : 
                         (data[17 /* X18 */] <0.34344745f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[29 /* X30 */] <0.16121027f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23942886f ? 
             (data[25 /* X26 */] <-0.0070308065f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.00953819f ? 
                     (data[7 /* X8 */] <0.09751222f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2461902f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.24338475f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[1 /* X2 */] <-0.18591163f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.008193144f ? 
                 (data[32 /* X33 */] <-0.43181407f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25974154f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.49260584f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20787022f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3098815f ? 
                 (data[16 /* X17 */] <-0.24434455f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05739667f ? 
                         (data[24 /* X25 */] <-0.5028644f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.46753758f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.18781656f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16299179f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <0.0499995f ? 
                                     (data[29 /* X30 */] <0.18535317f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[32 /* X33 */] <-0.5227275f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.45722285f ? 
             (data[12 /* X13 */] <0.08136247f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[19 /* X20 */] <-0.29638383f ? 
             (data[28 /* X29 */] <0.23796532f ? 
                 (data[27 /* X28 */] <-0.3884214f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17977965f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.17713386f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14967795f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.23549108f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.13003317f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20973979f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.46956646f ? 
             (data[9 /* X10 */] <-0.118209325f ? 
                 (data[19 /* X20 */] <-0.1792603f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
             (data[10 /* X11 */] <-0.78110397f ? 
                 (data[31 /* X32 */] <0.09340172f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24553321f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.2540555f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11060666f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.1396045f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16374324f ? 
                 (data[29 /* X30 */] <0.13795342f ? 
                     (data[6 /* X7 */] <0.16115765f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[8 /* X9 */] <-0.03880395f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.1389679f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[22 /* X23 */] <0.12400832f ? 
             (data[32 /* X33 */] <-0.250533f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.05985655f ? 
             (data[34 /* X35 */] <-0.265292f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.3309171f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.08196328f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1579471f ? 
                         (data[2 /* X3 */] <0.16154087f ? 
                             (data[15 /* X16 */] <0.08882336f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[29 /* X30 */] <0.1407298f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28709406f ? 
                             (data[2 /* X3 */] <-0.18427338f ? 
                                1.0f : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6110975f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3382623f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2225364f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16573812f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[21 /* X22 */] <0.13233666f ? 
             (data[4 /* X5 */] <0.06827003f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17143852f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20707321f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.20019084f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.1760373f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[23 /* X24 */] <0.0778703f ? 
             (data[31 /* X32 */] <0.03656598f ? 
                 (data[34 /* X35 */] <-0.5523407f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2684786f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16742177f ? 
                     (data[16 /* X17 */] <-0.26978147f ? 
                         (data[24 /* X25 */] <0.081163436f ? 
                             (data[27 /* X28 */] <-0.32552028f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31572902f ? 
             (data[25 /* X26 */] <-0.5202873f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.056689207f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.542148f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[35 /* X36 */] <-0.82981837f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09839733f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29730514f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.153231f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                         (data[11 /* X12 */] <-0.12649861f ? 
                             (data[27 /* X28 */] <-0.32552028f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[4 /* X5 */] <0.17002992f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.09442599f ? 
                 (data[26 /* X27 */] <0.024520544f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15713814f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41701576f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[3 /* X4 */] <-0.335756f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7256663f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.094504364f ? 
                     (data[17 /* X18 */] <-0.24000727f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18636526f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08010012f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.65023404f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.049537823f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                1.0f)) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[21 /* X22 */] <0.11137651f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4432567f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35470685f ? 
                     (data[4 /* X5 */] <0.11968555f ? 
                         (data[7 /* X8 */] <0.06844178f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06479246f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12949005f ? 
                                    0.0f : 
                                     (data[14 /* X15 */] <0.23976636f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31170717f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.33000922f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1353838f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8678936f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[21 /* X22 */] <0.11630832f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.10972054f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32453462f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.3964558f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06190051f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19234025f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21041523f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.2022521f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[27 /* X28 */] <-0.05644329f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[21 /* X22 */] <0.1512419f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3773365f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.82771254f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.20775549f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21765037f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (data[3 /* X4 */] <-0.5026084f ? 
             (data[25 /* X26 */] <-0.011783181f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28440055f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[11 /* X12 */] <-0.58893514f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19708031f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.476299f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.6295919f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.45441055f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01132689f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[0 /* X1 */] <0.048480697f ? 
             (data[29 /* X30 */] <0.17573313f ? 
                 (data[25 /* X26 */] <-0.21138293f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.013903638f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14796719f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.19864841f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16253182f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15120307f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18318446f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.081313446f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.105005346f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[14 /* X15 */] <0.13596304f ? 
                    1.0f : 
                    0.0f))) : 
         (data[20 /* X21 */] <0.0863785f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43203565f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[35 /* X36 */] <-0.9156924f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4831578f ? 
             (data[8 /* X9 */] <0.082836285f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37637684f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.05930693f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.39665642f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20168453f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11767847f ? 
                             (data[7 /* X8 */] <0.10134941f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[33 /* X34 */] <-0.11430414f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.2060651f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.223575f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.32089806f ? 
             (data[29 /* X30 */] <0.13572931f ? 
                 (data[0 /* X1 */] <-0.17357744f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[35 /* X36 */] <-0.23288934f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31120536f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33988118f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32579094f ? 
                         (data[35 /* X36 */] <-0.15750295f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
                                 (data[7 /* X8 */] <0.054224193f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13760617f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.027689125f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24655102f ? 
                                        0.0f : 
                                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44546276f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[17 /* X18 */] <-0.028735803f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[18 /* X19 */] <0.31893992f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.010384501f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0767772f ? 
             (data[34 /* X35 */] <-0.043865893f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26748484f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.055587232f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23655161f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[3 /* X4 */] <-0.31855473f ? 
                     (data[4 /* X5 */] <0.11568884f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.6350582f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.50504154f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15240887f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20935318f ? 
                            0.0f : 
                             (data[17 /* X18 */] <0.24640843f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[0 /* X1 */] <-0.15889591f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28386846f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.18094452f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08583896f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.155483f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.39013144f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.24738857f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <0.16175249f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.116467066f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[16 /* X17 */] <-0.21254838f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1831768f ? 
                 (data[25 /* X26 */] <-0.22232717f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09387105f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2580976f ? 
                     (data[13 /* X14 */] <0.09832918f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1768194f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.23960792f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.3535837f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.24048725f ? 
                             (data[0 /* X1 */] <-0.026762143f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (data[6 /* X7 */] <0.11520787f ? 
             (data[34 /* X35 */] <-0.11056019f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0026936699f ? 
             (data[1 /* X2 */] <-0.6316876f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.09719126f ? 
                     (data[21 /* X22 */] <0.1413783f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.38909906f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17146122f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20278677f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15595524f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.028735803f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.14569217f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19151694f ? 
                 (data[33 /* X34 */] <-0.19051358f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13653971f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2532635f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23984027f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.46742707f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.34037194f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[9 /* X10 */] <-0.11092189f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.15746987f ? 
                 (data[34 /* X35 */] <-1.0069822f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.31968322f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25605446f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33461273f ? 
                     (data[34 /* X35 */] <-0.85130304f ? 
                         (data[4 /* X5 */] <0.23537049f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.4394969f ? 
             (data[1 /* X2 */] <-0.1941161f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.4111251f ? 
                 (data[25 /* X26 */] <0.0775337f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                         (data[10 /* X11 */] <-0.76505715f ? 
                             (data[14 /* X15 */] <0.46121344f ? 
                                1.0f : 
                                0.0f) : 
                             (data[33 /* X34 */] <-0.86496717f ? 
                                 (data[27 /* X28 */] <-0.15778397f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.10240478f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[34 /* X35 */] <-0.06759012f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[9 /* X10 */] <-0.7983703f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16836508f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.012761959f ? 
                     (data[28 /* X29 */] <0.07315f ? 
                         (data[5 /* X6 */] <0.23751847f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2460078f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.08579541f ? 
             (data[27 /* X28 */] <-0.16472149f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21221295f ? 
                 (data[25 /* X26 */] <-0.08737833f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15798779f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.12818114f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.070806734f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.6590909f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17977965f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.22311722f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56601566f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.5293581f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.67855066f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.57299024f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1807336f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.0022784316f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[16 /* X17 */] <-0.24434455f ? 
             (data[7 /* X8 */] <0.08066421f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31798255f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.16633327f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32133275f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24927981f ? 
                         (data[28 /* X29 */] <0.2173291f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.4133309f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19827634f ? 
                 (data[7 /* X8 */] <0.061906245f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13853183f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30808958f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26772943f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24063297f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.24198705f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                1.0f)) : 
        0.02f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.37771723f ? 
             (data[34 /* X35 */] <-0.6554237f ? 
                 (data[0 /* X1 */] <-0.02325373f ? 
                     (data[29 /* X30 */] <0.123228125f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07818565f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.1643733f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16975038f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27949303f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.6334553f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34841827f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[23 /* X24 */] <0.14133993f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08694311f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.0218278f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.4298502f ? 
             (data[33 /* X34 */] <-0.25719684f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.46444687f ? 
             (data[12 /* X13 */] <0.33355317f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.50544333f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45104894f ? 
                     (data[3 /* X4 */] <-0.23598862f ? 
                         (data[10 /* X11 */] <-0.7681469f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29221302f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (data[2 /* X3 */] <-0.27013317f ? 
             (data[34 /* X35 */] <-0.4656299f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15360717f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.15669379f ? 
                 (data[31 /* X32 */] <0.046899755f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.09479708f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.018590286f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6749801f ? 
                         (data[10 /* X11 */] <-0.7606523f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39868847f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.39522684f ? 
                                     (data[13 /* X14 */] <0.14571247f ? 
                                         (data[13 /* X14 */] <0.12162869f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1848556f ? 
                                            1.0f : 
                                             (data[21 /* X22 */] <0.16833882f ? 
                                                0.0f : 
                                                1.0f))) : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[25 /* X26 */] <-0.6153348f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3989863f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12160568f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.16490063f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.6668226f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.061327036f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.42182422f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5664333f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[20 /* X21 */] <0.13062115f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.13307962f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12721115f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.32271415f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25250822f ? 
                                0.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14666152f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30234408f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11521396f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4632575f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f))) : 
             (data[24 /* X25 */] <-0.6377813f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.10395722f ? 
                     (data[7 /* X8 */] <0.055587232f ? 
                         (data[25 /* X26 */] <-0.36345893f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (data[34 /* X35 */] <-0.8900299f ? 
             (data[33 /* X34 */] <0.3953465f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27286097f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                     (data[35 /* X36 */] <-0.5917586f ? 
                         (data[26 /* X27 */] <-0.22428422f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.12427784f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.16351233f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                 (data[3 /* X4 */] <0.31445226f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.19803494f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.581615f ? 
             (data[17 /* X18 */] <-0.12945825f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18869045f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19677f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.54993474f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.098371856f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[10 /* X11 */] <-0.7487112f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06381573f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.25520942f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18560867f ? 
                     (data[12 /* X13 */] <0.11131012f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.061869554f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05465008f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11060666f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30514804f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.051987957f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
             (data[15 /* X16 */] <0.05270425f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19857515f ? 
             (data[33 /* X34 */] <-0.16193505f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3615082f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31906056f ? 
                 (data[15 /* X16 */] <0.05270425f ? 
                     (data[14 /* X15 */] <0.13296965f ? 
                         (data[3 /* X4 */] <-0.15342247f ? 
                            1.0f : 
                            0.0f) : 
                         (data[35 /* X36 */] <0.17763028f ? 
                             (data[14 /* X15 */] <0.1597524f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[3 /* X4 */] <-0.1671835f ? 
                         (data[19 /* X20 */] <-0.004936895f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.15144952f ? 
                                0.0f : 
                                 (data[28 /* X29 */] <0.15650354f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18509226f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.812618f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30977324f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.4095304f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42268535f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20157714f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.5120515f ? 
             (data[8 /* X9 */] <-0.2188315f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24534479f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.64881927f ? 
                        0.0f : 
                         (data[10 /* X11 */] <0.26842028f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[5 /* X6 */] <0.107392274f ? 
                 (data[14 /* X15 */] <0.14749674f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[22 /* X23 */] <0.16625291f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22006328f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44972795f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.30694774f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X1 */] <0.042975124f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.17826648f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07306047f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.34930462f ? 
                         (data[23 /* X24 */] <0.17852432f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X3 */] <-0.140099f ? 
                             (data[4 /* X5 */] <0.16900356f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26467332f ? 
             (data[13 /* X14 */] <0.112162605f ? 
                 (data[34 /* X35 */] <-0.068012305f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.11794443f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31730178f ? 
             (data[0 /* X1 */] <-0.13320324f ? 
                 (data[5 /* X6 */] <0.14746788f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01685353f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.35347632f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.476174f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07375956f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[18 /* X19 */] <0.61627644f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.13173948f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1402224f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.10159313f ? 
                    1.0f : 
                     (data[3 /* X4 */] <0.17684203f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2302827f ? 
             (data[17 /* X18 */] <-0.23693646f ? 
                 (data[6 /* X7 */] <0.15191787f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20565858f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1585349f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06713858f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23987351f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
         (data[0 /* X1 */] <-0.21578684f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.6054332f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37697992f ? 
                 (data[10 /* X11 */] <-0.7551898f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10849274f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.2608983f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.054194406f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.051773973f ? 
                                 (data[13 /* X14 */] <0.23739555f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10865237f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.11131012f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[7 /* X8 */] <0.039197687f ? 
             (data[17 /* X18 */] <-0.040404867f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.3405629f ? 
                 (data[2 /* X3 */] <-0.35970947f ? 
                     (data[34 /* X35 */] <-0.4189228f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.06650672f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24738754f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19694318f ? 
                     (data[18 /* X19 */] <0.105124876f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16426216f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20083733f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14632286f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.021746514f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4013294f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17781967f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (data[8 /* X9 */] <-0.56428975f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.0561252f ? 
                 (data[33 /* X34 */] <-0.3810372f ? 
                     (data[24 /* X25 */] <0.24753082f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.12373911f ? 
            0.0f : 
             (data[10 /* X11 */] <0.022235584f ? 
                 (data[22 /* X23 */] <0.1783105f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.76136374f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6092019f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5171771f ? 
                    1.0f : 
                     (data[34 /* X35 */] <0.27891332f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17717968f ? 
             (data[31 /* X32 */] <0.0559418f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.32273185f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2507799f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16140388f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[6 /* X7 */] <0.10320163f ? 
                         (data[32 /* X33 */] <0.46164703f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.0954596f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.62232953f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.38274732f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22398177f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5402036f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.16237283f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21864319f ? 
                    1.0f : 
                    0.0f))) : 
         (data[25 /* X26 */] <-0.45731834f ? 
            1.0f : 
             (data[14 /* X15 */] <0.082619675f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[32 /* X33 */] <0.1465726f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25354692f ? 
                 (data[35 /* X36 */] <-0.95306253f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.854831f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.1161686f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1890373f ? 
                                 (data[28 /* X29 */] <0.14670335f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07617424f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)))) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.01589844f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.192599f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.10149277f ? 
                     (data[12 /* X13 */] <0.33828172f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38760197f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6704537f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[20 /* X21 */] <0.23736532f ? 
             (data[1 /* X2 */] <-0.24334289f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07934298f ? 
                     (data[30 /* X31 */] <0.09465303f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                 (data[7 /* X8 */] <0.033734504f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15452977f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44249886f ? 
                         (data[10 /* X11 */] <-0.7681469f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.088944286f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.0898962f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5360596f ? 
                             (data[0 /* X1 */] <-0.22076117f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.021746514f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.41563666f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.14620657f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <0.0197971f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.049539167f ? 
                 (data[34 /* X35 */] <-0.4339976f ? 
                     (data[32 /* X33 */] <-0.17938203f ? 
                         (data[20 /* X21 */] <0.25843325f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.10742317f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.12673321f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.50338304f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.14620657f ? 
                            0.0f : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14973065f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3141787f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.38433754f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.055758897f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20408449f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2325844f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.3884946f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25281513f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.050038982f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.114851326f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.21005483f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52740973f ? 
             (data[11 /* X12 */] <-0.5120515f ? 
                 (data[19 /* X20 */] <0.08828569f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084359676f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19040602f ? 
             (data[18 /* X19 */] <0.05501198f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.37886035f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2585007f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.040498514f ? 
                 (data[31 /* X32 */] <0.049483195f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.124938965f ? 
                         (data[14 /* X15 */] <0.17056414f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[20 /* X21 */] <0.25281513f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.3066543f ? 
                         (data[3 /* X4 */] <0.25940818f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19451378f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[29 /* X30 */] <0.1807336f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3200567f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (data[25 /* X26 */] <-0.5202873f ? 
            1.0f : 
             (data[14 /* X15 */] <0.073969394f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (data[27 /* X28 */] <-0.35784447f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16472961f ? 
                 (data[2 /* X3 */] <-0.014200929f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07019412f ? 
                 (data[34 /* X35 */] <-0.9717467f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.1878647f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26636678f ? 
             (data[31 /* X32 */] <0.1644464f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24564715f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[10 /* X11 */] <-0.3211273f ? 
             (data[18 /* X19 */] <0.20535068f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5012787f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4467172f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1753857f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13637175f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24987793f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24651189f ? 
            0.0f : 
             (data[17 /* X18 */] <0.02715287f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
             (data[15 /* X16 */] <0.061048597f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22894354f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.051031005f ? 
                     (data[32 /* X33 */] <-0.19460265f ? 
                         (data[13 /* X14 */] <0.19114713f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.25535694f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07896883f ? 
             (data[30 /* X31 */] <0.1109321f ? 
                 (data[32 /* X33 */] <-0.12002883f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.09524516f ? 
                         (data[0 /* X1 */] <-0.16181995f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[24 /* X25 */] <0.10493021f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4222643f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2502085f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[18 /* X19 */] <0.20869154f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22507717f ? 
                 (data[25 /* X26 */] <-0.24745405f ? 
                     (data[15 /* X16 */] <0.05747245f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.543055f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18237908f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.06093174f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19008899f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[9 /* X10 */] <0.012964572f ? 
             (data[22 /* X23 */] <0.17079534f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.7348256f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.61771095f ? 
            1.0f : 
             (data[4 /* X5 */] <0.09933358f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[35 /* X36 */] <-0.38788143f ? 
             (data[3 /* X4 */] <-0.23598862f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
             (data[23 /* X24 */] <0.07467015f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18103735f ? 
                     (data[23 /* X24 */] <0.03876941f ? 
                         (data[26 /* X27 */] <0.79645324f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-1.0771877f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32581648f ? 
                         (data[16 /* X17 */] <-0.5495878f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.8141319f ? 
                                1.0f : 
                                 (data[27 /* X28 */] <-0.21369608f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.6384406f ? 
                                 (data[11 /* X12 */] <-0.21169275f ? 
                                     (data[6 /* X7 */] <0.19620544f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49443218f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[35 /* X36 */] <-0.81515694f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05356754f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2696475f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11293521f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                            0.0f : 
                             (data[9 /* X10 */] <0.16713618f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3843207f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.14535774f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[35 /* X36 */] <-0.3438972f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.00499399f ? 
                 (data[3 /* X4 */] <-0.33217502f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.10240478f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.15820464f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[10 /* X11 */] <-0.8005396f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19939137f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4469542f ? 
                 (data[0 /* X1 */] <-0.46885327f ? 
                     (data[0 /* X1 */] <-0.73316437f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7047652f ? 
                         (data[9 /* X10 */] <-0.59432197f ? 
                             (data[22 /* X23 */] <0.13069883f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26156566f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.47342697f ? 
                                     (data[20 /* X21 */] <0.33052045f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17687356f ? 
                                        0.0f : 
                                         (data[6 /* X7 */] <0.28164816f ? 
                                            1.0f : 
                                            0.0f))))) : 
                         (data[18 /* X19 */] <0.29221302f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (data[19 /* X20 */] <5.107116E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29433447f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.015150031f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.106318936f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22923139f ? 
                         (data[26 /* X27 */] <-0.1477289f ? 
                            0.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.028014058f ? 
                                 (data[27 /* X28 */] <-0.10187187f ? 
                                     (data[13 /* X14 */] <0.10201301f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[13 /* X14 */] <0.24132136f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[26 /* X27 */] <0.10745546f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.14848825f ? 
                                 (data[14 /* X15 */] <0.18791883f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.20011917f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3234138f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1523628f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21204452f ? 
                                    0.0f : 
                                     (data[3 /* X4 */] <-0.46210843f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[24 /* X25 */] <0.17113672f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.15858287f ? 
             (data[29 /* X30 */] <0.119477764f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13473469f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21288942f ? 
             (data[32 /* X33 */] <-0.63458824f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.017790603f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39273837f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[16 /* X17 */] <-0.21254838f ? 
             (data[22 /* X23 */] <0.17530341f ? 
                1.0f : 
                 (data[33 /* X34 */] <0.07621946f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.443831f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X11 */] <-0.19803494f ? 
                         (data[17 /* X18 */] <-0.11717502f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2063394f ? 
                 (data[13 /* X14 */] <0.10939592f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17817608f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                     (data[12 /* X13 */] <0.13652918f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[16 /* X17 */] <0.03685282f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[24 /* X25 */] <-0.6080729f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.14879863f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12371709f ? 
                         (data[3 /* X4 */] <-0.10431265f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5774326f ? 
         (data[16 /* X17 */] <-0.31111652f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.44981375f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.1048918f ? 
                 (data[15 /* X16 */] <0.08846574f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6237914f ? 
                         (data[15 /* X16 */] <0.1847473f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2670969f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25596792f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0981462f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09929268f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09929268f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7256663f ? 
             (data[28 /* X29 */] <0.19254832f ? 
                 (data[12 /* X13 */] <0.13022442f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.10745546f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.13152939f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (data[21 /* X22 */] <0.08671751f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27521247f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[35 /* X36 */] <-0.23288934f ? 
            0.0f : 
             (data[34 /* X35 */] <0.008854605f ? 
                 (data[3 /* X4 */] <-0.2291081f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.318511f ? 
                         (data[6 /* X7 */] <0.123096175f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.099266306f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.68587494f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[26 /* X27 */] <0.05641859f ? 
                     (data[35 /* X36 */] <0.08095657f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16735204f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.0901993f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0062097595f ? 
             (data[28 /* X29 */] <0.075402796f ? 
                 (data[2 /* X3 */] <-0.44288746f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.14077704f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.13392815f ? 
                     (data[28 /* X29 */] <0.28941864f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.14696579f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16823243f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.048213884f ? 
                    1.0f : 
                     (data[8 /* X9 */] <0.4623538f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[7 /* X8 */] <0.05044541f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.18128432f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38241512f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.192718f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39751062f ? 
                                 (data[29 /* X30 */] <0.12572837f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14413922f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32050228f ? 
                             (data[35 /* X36 */] <0.0033688876f ? 
                                0.0f : 
                                 (data[7 /* X8 */] <0.09835709f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3607134f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19094224f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12932597f ? 
             (data[33 /* X34 */] <-0.93355566f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.71536547f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15775396f ? 
                        0.0f : 
                        1.0f))) : 
             (data[34 /* X35 */] <-0.41818145f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38873833f ? 
                     (data[7 /* X8 */] <0.0761545f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20982946f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[24 /* X25 */] <-0.7803819f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.57634395f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.0987752f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1771024f ? 
                 (data[10 /* X11 */] <-0.36627567f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13350217f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                             (data[1 /* X2 */] <-0.3122604f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18353459f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04782865f ? 
                                 (data[29 /* X30 */] <0.10972684f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.9190262f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.810968f ? 
                         (data[30 /* X31 */] <0.21765037f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25706142f ? 
             (data[30 /* X31 */] <0.036771934f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (data[19 /* X20 */] <-0.48432624f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26263556f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X1 */] <-0.08548826f ? 
                             (data[34 /* X35 */] <-0.75453824f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17790513f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.751403f ? 
             (data[27 /* X28 */] <-1.1703172f ? 
                 (data[9 /* X10 */] <-0.2634702f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[13 /* X14 */] <0.10386255f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <5.0609646E-4f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.98596966f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5534763f ? 
                     (data[10 /* X11 */] <-0.30898f ? 
                         (data[19 /* X20 */] <-0.6150688f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21781765f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.10653073f ? 
                                     (data[30 /* X31 */] <0.16161539f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2768964f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[23 /* X24 */] <0.14435722f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.11884552f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.35140738f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.10024779f ? 
                 (data[28 /* X29 */] <0.124964364f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.7970798f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.38818616f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.12480582f ? 
                 (data[32 /* X33 */] <-0.40340936f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17664143f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.21762203f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.019845331f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.10954105f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.0561252f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19155766f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04770702f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.031963978f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22637212f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.8629267f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
                     (data[30 /* X31 */] <0.17785712f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15083836f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[9 /* X10 */] <-0.11335103f ? 
             (data[33 /* X34 */] <-0.88592476f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.73579323f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.30105874f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.8067721f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032174926f ? 
         (data[33 /* X34 */] <-0.16193505f ? 
             (data[15 /* X16 */] <0.040783748f ? 
                 (data[34 /* X35 */] <0.2091925f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.022137603f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.004025693f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.352497f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18965f ? 
                             (data[19 /* X20 */] <-0.24667442f ? 
                                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42269567f ? 
                                    0.0f : 
                                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2409085f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f) : 
                         (data[17 /* X18 */] <-0.22618613f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.96374846f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.9401144f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.49048993f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[17 /* X18 */] <-0.49641958f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0931752f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4280888f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088171974f ? 
                     (data[4 /* X5 */] <0.11597654f ? 
                         (data[10 /* X11 */] <-0.19803494f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.3794342f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <-1.0771877f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1869762f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.66601825f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.05603421f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.24864113f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9883512f ? 
             (data[29 /* X30 */] <0.153231f ? 
                 (data[27 /* X28 */] <-0.29232246f ? 
                     (data[28 /* X29 */] <0.15875633f ? 
                        1.0f : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.81358516f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[8 /* X9 */] <-0.19207065f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22836334f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40958115f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.12320575f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.511731f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.14329953f ? 
                     (data[11 /* X12 */] <-0.21582158f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15610488f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.064098455f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.07200336f ? 
             (data[29 /* X30 */] <0.10225134f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07391582f ? 
                     (data[17 /* X18 */] <-0.21945243f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.08048451f ? 
                 (data[11 /* X12 */] <-0.38391212f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.12656124f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1923274f ? 
                         (data[14 /* X15 */] <0.23976636f ? 
                             (data[24 /* X25 */] <-0.43219876f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.32248637f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.11202994f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.050948165f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.96735126f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10764814f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.12792592f ? 
                     (data[11 /* X12 */] <-0.52742827f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.21387665f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.51076806f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.39258793f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.81781054f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[19 /* X20 */] <-0.42712638f ? 
            1.0f : 
             (data[20 /* X21 */] <0.098317f ? 
                 (data[15 /* X16 */] <0.03839965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.050774917f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14910983f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.4414808f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3180125f ? 
                     (data[4 /* X5 */] <0.10468936f ? 
                         (data[3 /* X4 */] <0.03923182f ? 
                            1.0f : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.3460768f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.14172989f ? 
                     (data[0 /* X1 */] <0.3843207f ? 
                        1.0f : 
                         (data[18 /* X19 */] <0.29221302f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-1.0455554f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30744103f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25250822f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.1805f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33512935f ? 
             (data[9 /* X10 */] <-0.091834925f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.09084984f ? 
                     (data[20 /* X21 */] <0.09960944f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4001096f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30192977f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26074123f ? 
                    1.0f : 
                    0.0f) : 
                 (data[26 /* X27 */] <0.2605661f ? 
                     (data[4 /* X5 */] <0.13513342f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[19 /* X20 */] <-0.625964f ? 
             (data[2 /* X3 */] <-0.16456112f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <0.3798789f ? 
             (data[35 /* X36 */] <-0.57219636f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.59314126f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.4918134f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28439814f ? 
                         (data[20 /* X21 */] <0.2022521f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35438392f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
             (data[0 /* X1 */] <-0.25432587f ? 
                 (data[4 /* X5 */] <0.26490563f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.4623868f ? 
                     (data[19 /* X20 */] <-0.2690181f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.4286429f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[9 /* X10 */] <-0.15707567f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24104813f ? 
                     (data[4 /* X5 */] <0.09821684f ? 
                         (data[13 /* X14 */] <0.22167853f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
                     (data[35 /* X36 */] <-0.3250468f ? 
                         (data[33 /* X34 */] <-0.057147063f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[19 /* X20 */] <0.0032345147f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.18375604f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22850308f ? 
                    1.0f : 
                     (data[33 /* X34 */] <0.4001096f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.054409996f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.14283395f ? 
                        0.0f : 
                        1.0f))) : 
             (data[35 /* X36 */] <0.16087437f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.10992264f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.091452785f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.030223675f ? 
                             (data[13 /* X14 */] <0.15144952f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.6210969f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.5567407f ? 
                                    1.0f : 
                                    0.0f))))))) : 
         (data[9 /* X10 */] <-0.5846054f ? 
             (data[16 /* X17 */] <-0.13623758f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.48534766f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.17095943f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.082741916f ? 
             (data[4 /* X5 */] <0.11379419f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.011798838f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.25843325f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.07872541f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24265464f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37032315f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[15 /* X16 */] <0.0395917f ? 
             (data[11 /* X12 */] <-0.22754464f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.036189362f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.5202873f ? 
                    1.0f : 
                    0.0f))) : 
         (data[22 /* X23 */] <0.16625291f ? 
             (data[32 /* X33 */] <-0.18341658f ? 
                 (data[15 /* X16 */] <0.15760463f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22573791f ? 
                 (data[18 /* X19 */] <-0.30246004f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38575643f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.045303594f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1111163f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24598972f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.077074625f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21782123f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.29632014f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.20334148f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (data[3 /* X4 */] <-0.5306684f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.32854298f ? 
                 (data[15 /* X16 */] <0.076545246f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.3826897f ? 
                         (data[12 /* X13 */] <0.18825142f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.34366757f ? 
            0.0f : 
             (data[32 /* X33 */] <0.09996396f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8564773f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.032380782f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.24086182f ? 
                     (data[25 /* X26 */] <-0.18286867f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
             (data[23 /* X24 */] <0.1098718f ? 
                 (data[11 /* X12 */] <-0.072846666f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.09561804f ? 
                         (data[2 /* X3 */] <-0.30852303f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.108699165f ? 
             (data[7 /* X8 */] <0.085152686f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17026298f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.11635247f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19583972f ? 
                     (data[5 /* X6 */] <0.09021701f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.5894637f ? 
             (data[33 /* X34 */] <-0.133617f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18299733f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[15 /* X16 */] <0.05926052f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14788309f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                     (data[35 /* X36 */] <-0.291535f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.107601635f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16880706f ? 
                     (data[27 /* X28 */] <0.1008095f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.68504393f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.27971184f ? 
                     (data[29 /* X30 */] <0.13179393f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.22793818f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.2571921f ? 
                             (data[24 /* X25 */] <0.024123192f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.027689125f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.11890784f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[2 /* X3 */] <-0.11913315f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11520495f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))) : 
         (data[9 /* X10 */] <-0.31982845f ? 
             (data[20 /* X21 */] <0.22472456f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (data[11 /* X12 */] <-0.50692594f ? 
             (data[24 /* X25 */] <0.003921438f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.2772188f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-1.0287417f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22110909f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.16477312f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.25706303f ? 
                 (data[4 /* X5 */] <0.10897399f ? 
                     (data[16 /* X17 */] <-0.59777886f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.025284458f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.103985935f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18202487f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31727922f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31419942f ? 
             (data[13 /* X14 */] <0.112162605f ? 
                 (data[16 /* X17 */] <-0.3842477f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.13273749f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9420103f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                 (data[34 /* X35 */] <-0.66596776f ? 
                     (data[0 /* X1 */] <0.017282447f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2180366f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.12216171f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06911736f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.3886299f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.17425698f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.17014128f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19673944f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.39047676f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <1.0288374f ? 
                     (data[27 /* X28 */] <-0.5980918f ? 
                         (data[9 /* X10 */] <-0.12792592f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28232625f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.10386255f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.10815773f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.10040473f ? 
                     (data[3 /* X4 */] <0.23188612f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
        0.010869565f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[8 /* X9 */] <-0.18963784f ? 
                 (data[24 /* X25 */] <0.12869698f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.43819427f ? 
                         (data[3 /* X4 */] <-0.45162618f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-0.7681469f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.21059708f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.2120324f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31006035f ? 
                             (data[9 /* X10 */] <-0.13496323f ? 
                                 (data[5 /* X6 */] <0.14735551f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10789591f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28111267f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13506968f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.27577746f ? 
                     (data[12 /* X13 */] <0.105005346f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[15 /* X16 */] <0.060452573f ? 
             (data[0 /* X1 */] <-0.12882072f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.22840884f ? 
                 (data[17 /* X18 */] <-0.40582615f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.110913806f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18530552f ? 
                         (data[13 /* X14 */] <0.27539697f ? 
                             (data[5 /* X6 */] <0.1618515f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18301599f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3615911f ? 
             (data[3 /* X4 */] <-0.49400777f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.55701643f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.09608907f ? 
                         (data[22 /* X23 */] <0.07267887f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.17579634f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20480956f ? 
                 (data[21 /* X22 */] <0.08712849f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.42866808f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.12320575f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.55255705f ? 
                 (data[12 /* X13 */] <0.17549425f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20264395f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16574529f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20775549f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04594207f ? 
                         (data[26 /* X27 */] <-0.11352938f ? 
                             (data[28 /* X29 */] <0.31097105f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.07467015f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.18740845f ? 
                         (data[1 /* X2 */] <-0.17223752f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0197971f ? 
            0.0f : 
             (data[15 /* X16 */] <0.10634649f ? 
                 (data[8 /* X9 */] <0.04391141f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2060842f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (data[10 /* X11 */] <-0.65153307f ? 
                     (data[1 /* X2 */] <-0.08472323f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.11717502f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.256193f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <0.0645414f ? 
             (data[35 /* X36 */] <-0.9156924f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <0.17684203f ? 
                 (data[30 /* X31 */] <0.1344463f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14974515f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6163656f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.11490415f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[3 /* X4 */] <-0.24630937f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17774826f ? 
                 (data[17 /* X18 */] <-0.52252144f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39912057f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.45717672f ? 
                         (data[17 /* X18 */] <-0.12929648f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.6745341f ? 
             (data[22 /* X23 */] <0.18076414f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.11213942f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18931074f ? 
                 (data[7 /* X8 */] <0.053016324f ? 
                     (data[1 /* X2 */] <0.04654822f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.04801124f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.25799042f ? 
             (data[35 /* X36 */] <0.223709f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3367929f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19746539f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17966591f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.16214392f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.2669509f ? 
                 (data[15 /* X16 */] <0.06462475f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2629469f ? 
             (data[31 /* X32 */] <0.03656598f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.22954902f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.17423955f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2605661f ? 
             (data[15 /* X16 */] <0.10038624f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14598633f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.1941161f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <-0.014200929f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.029022923f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22124273f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14882101f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13013941f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17772065f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33522007f ? 
             (data[2 /* X3 */] <0.017790603f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13357049f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14756308f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[13 /* X14 */] <0.14674616f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.064954095f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.143251f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3723136f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14931999f ? 
                             (data[21 /* X22 */] <0.15781765f ? 
                                 (data[28 /* X29 */] <0.078211635f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6966376f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.34295252f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.5187635f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.44944912f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42584744f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[24 /* X25 */] <4.3610734E-4f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2300823f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.32085782f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16237283f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2573292f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3498806f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.049782135f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.015812267f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <0.29725096f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.73871905f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10969379f ? 
            0.0f : 
             (data[15 /* X16 */] <0.082505494f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.43396017f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.12447824f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.011709776f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
        0.75f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
             (data[0 /* X1 */] <-0.25623092f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17429332f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.099933445f ? 
                     (data[22 /* X23 */] <0.07103324f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.032449048f ? 
                         (data[3 /* X4 */] <-0.23171498f ? 
                            1.0f : 
                            0.0f) : 
                         (data[18 /* X19 */] <0.024944238f ? 
                             (data[31 /* X32 */] <0.06911736f ? 
                                 (data[28 /* X29 */] <0.16714244f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16253182f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.122885734f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)))) : 
             (data[30 /* X31 */] <0.11364527f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.39056337f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.3437137f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1888126f ? 
             (data[35 /* X36 */] <0.0016932973f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.35228083f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11572741f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.371511f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17230469f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.31984824f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26289546f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.05815814f ? 
                         (data[20 /* X21 */] <0.17977965f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.09833094f ? 
                                 (data[9 /* X10 */] <-0.1362453f ? 
                                     (data[30 /* X31 */] <0.2346851f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24719702f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.3056388f ? 
                                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27307943f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13153863f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[6 /* X7 */] <0.1517975f ? 
            1.0f : 
             (data[9 /* X10 */] <0.29474553f ? 
                 (data[3 /* X4 */] <-0.69010234f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3088852f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.63458824f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24879645f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6277845f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17717557f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[34 /* X35 */] <-0.17830317f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13333376f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.045245316f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-1.0508274f ? 
            1.0f : 
             (data[23 /* X24 */] <0.075736865f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.29769033f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27746066f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.34885857f ? 
                         (data[22 /* X23 */] <0.20756383f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.024123192f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24911441f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[3 /* X4 */] <0.2744923f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3037595f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15071087f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[34 /* X35 */] <-1.0508274f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2185915f ? 
                 (data[34 /* X35 */] <-0.9773506f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09427591f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.14333618f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4801307f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[35 /* X36 */] <-0.7607003f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.38255945f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.11293521f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26322055f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25596792f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6832145f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15312435f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[29 /* X30 */] <0.11166452f ? 
             (data[23 /* X24 */] <0.07467015f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.10753854f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44289136f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.8900299f ? 
             (data[25 /* X26 */] <-0.04029743f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[26 /* X27 */] <-0.26575166f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                 (data[0 /* X1 */] <-0.25432587f ? 
                     (data[22 /* X23 */] <0.13808985f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.2910327f ? 
                         (data[25 /* X26 */] <-0.3290187f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.04376105f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.105673075f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22294374f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3554391f ? 
                 (data[35 /* X36 */] <-0.3250468f ? 
                     (data[31 /* X32 */] <0.17905119f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[23 /* X24 */] <0.037335075f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.38053098f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X5 */] <0.12450576f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18870983f ? 
                 (data[34 /* X35 */] <-0.4590311f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08886175f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.29910487f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[23 /* X24 */] <0.046935525f ? 
                 (data[35 /* X36 */] <-0.023440557f ? 
                     (data[2 /* X3 */] <-0.37250608f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[2 /* X3 */] <-0.24453996f ? 
                     (data[34 /* X35 */] <-0.08472469f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.49567553f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X11 */] <-0.042549863f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23212065f ? 
                             (data[23 /* X24 */] <0.10994897f ? 
                                 (data[16 /* X17 */] <-0.44130266f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21315949f ? 
                                    0.0f : 
                                     (data[7 /* X8 */] <0.26686853f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.052773695f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5676919f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.20615506f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X4 */] <-0.48024675f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.46592134f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2166999f ? 
             (data[28 /* X29 */] <0.16889393f ? 
                 (data[2 /* X3 */] <0.088171974f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.1971563f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.011001776f ? 
                 (data[16 /* X17 */] <-0.24434455f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.026762143f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.18498346f ? 
                            1.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.12798414f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.121263966f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.17348845f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[24 /* X25 */] <-0.67046064f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.5202873f ? 
                 (data[11 /* X12 */] <-0.3019029f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.080514885f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14110869f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (data[15 /* X16 */] <0.08667767f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.52645594f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2790393f ? 
                 (data[35 /* X36 */] <-0.7135966f ? 
                     (data[25 /* X26 */] <-0.1902636f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.48923904f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <0.09427591f ? 
                         (data[30 /* X31 */] <0.1341717f ? 
                            1.0f : 
                            0.0f) : 
                         (data[18 /* X19 */] <-0.4848729f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[27 /* X28 */] <-0.05644329f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.39639494f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[14 /* X15 */] <0.12154592f ? 
             (data[2 /* X3 */] <0.02418891f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.32584605f ? 
                 (data[11 /* X12 */] <0.14914781f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18796991f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.25901335f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[35 /* X36 */] <-0.23288934f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21765037f ? 
                 (data[25 /* X26 */] <-0.42999217f ? 
                     (data[23 /* X24 */] <0.118730456f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X1 */] <-0.3693479f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35978836f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19680884f ? 
                                 (data[18 /* X19 */] <-0.03961678f ? 
                                     (data[22 /* X23 */] <0.20931515f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[23 /* X24 */] <0.12088919f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07361714f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3635008f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.13534492f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.14028819f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.41349274f ? 
             (data[9 /* X10 */] <-0.7983703f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.03973833f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.05092008f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.071046054f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.048761062f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16049041f ? 
             (data[18 /* X19 */] <0.2120324f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22526234f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.35949633f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24135931f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40177038f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.54207116f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21215457f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19840926f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10790105f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3672656f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.91697204f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.12932597f ? 
                 (data[30 /* X31 */] <0.1326375f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25288954f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.18981071f ? 
             (data[13 /* X14 */] <0.09832918f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14326327f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.24562964f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.13452134f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09137113f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.3398959f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.7744402f ? 
                 (data[25 /* X26 */] <-0.2541543f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.581107f ? 
                     (data[13 /* X14 */] <0.14569408f ? 
                         (data[29 /* X30 */] <0.12572837f ? 
                             (data[32 /* X33 */] <0.10877713f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.76962095f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16116144f ? 
                                0.0f : 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3200567f ? 
                                    0.0f : 
                                     (data[18 /* X19 */] <0.24695785f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.16639249f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.45206246f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11520538f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.37729177f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[18 /* X19 */] <-0.0719407f ? 
                 (data[24 /* X25 */] <-0.41694096f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6722388f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[19 /* X20 */] <-0.19560312f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14895605f ? 
                 (data[31 /* X32 */] <0.08965444f ? 
                     (data[24 /* X25 */] <-0.25157133f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.10950435f ? 
                             (data[20 /* X21 */] <0.1492732f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.48896223f ? 
                         (data[30 /* X31 */] <0.14007868f ? 
                             (data[34 /* X35 */] <-1.1318218f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[5 /* X6 */] <0.12113248f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.6131801f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31317997f ? 
                     (data[26 /* X27 */] <0.058220625f ? 
                         (data[23 /* X24 */] <0.1266183f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.06594417f ? 
                                 (data[33 /* X34 */] <-0.6210969f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[33 /* X34 */] <-1.1698049f ? 
                                1.0f : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.64713806f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[4 /* X5 */] <0.13682406f ? 
                             (data[25 /* X26 */] <-0.28361902f ? 
                                 (data[5 /* X6 */] <0.13175526f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[32 /* X33 */] <-0.5625025f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23679061f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16266333f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[31 /* X32 */] <0.0675673f ? 
             (data[13 /* X14 */] <0.10109586f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.21534708f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2532791f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.22186287f ? 
                 (data[18 /* X19 */] <0.02940876f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.71770006f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[34 /* X35 */] <0.082663305f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.172361f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.46592134f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.30660647f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[23 /* X24 */] <0.17920837f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.14620349f ? 
                                 (data[33 /* X34 */] <-0.6820645f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
             (data[26 /* X27 */] <-0.2288571f ? 
                 (data[20 /* X21 */] <0.22472456f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11681359f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[32 /* X33 */] <-0.63272387f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.39715767f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.82771254f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.009863131f ? 
                         (data[3 /* X4 */] <-0.3090962f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2857754f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.87488055f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12638745f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.64340895f ? 
                 (data[8 /* X9 */] <0.27130935f ? 
                     (data[0 /* X1 */] <-0.114851326f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.029305253f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.4224031f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.011392296f ? 
                        1.0f : 
                        0.0f) : 
                     (data[22 /* X23 */] <0.14535774f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4064938f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.027762517f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.07372465f ? 
                                    1.0f : 
                                    0.0f))))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2585086f ? 
             (data[25 /* X26 */] <-0.58206815f ? 
                 (data[20 /* X21 */] <0.17977965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2969231f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.10159313f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67808235f ? 
             (data[35 /* X36 */] <-0.59314126f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9294523f ? 
                     (data[10 /* X11 */] <-0.69040436f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.16333945f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.24014547f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.68529874f ? 
                     (data[26 /* X27 */] <-0.211525f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[13 /* X14 */] <0.10455422f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16776752f ? 
                 (data[8 /* X9 */] <0.17254618f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[21 /* X22 */] <0.13726847f ? 
                 (data[16 /* X17 */] <-0.23162608f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.0983784f ? 
                     (data[26 /* X27 */] <0.120214686f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.08507357f ? 
             (data[27 /* X28 */] <-0.3884214f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.050575968f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[17 /* X18 */] <-0.6054332f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.42927814f ? 
                     (data[9 /* X10 */] <-0.5554556f ? 
                         (data[35 /* X36 */] <-0.07438472f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31327426f ? 
                             (data[0 /* X1 */] <-0.46881384f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21169275f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (data[19 /* X20 */] <0.005958318f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42646816f ? 
             (data[28 /* X29 */] <0.075402796f ? 
                 (data[8 /* X9 */] <0.062435195f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.39157882f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.38924524f ? 
                        0.0f : 
                         (data[33 /* X34 */] <0.13337654f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <-0.16776028f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4408813f ? 
             (data[2 /* X3 */] <-0.22534503f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05709533f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.30207807f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.11968555f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3116775f ? 
                             (data[9 /* X10 */] <-0.28339127f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[2 /* X3 */] <-0.013012979f ? 
                             (data[3 /* X4 */] <-0.18911834f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5681997f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (data[14 /* X15 */] <0.071806826f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.009278495f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.022638176f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.05712817f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19575022f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.3633991f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.37163374f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40535226f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.053994253f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.08941348f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
        0.033333335f : 
         (data[22 /* X23 */] <0.16171049f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15875633f ? 
                 (data[20 /* X21 */] <0.014045285f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-1.0350113f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.4224031f ? 
                 (data[24 /* X25 */] <-0.5843061f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.12537205f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.26772943f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <1.0331829f ? 
                         (data[27 /* X28 */] <-1.006083f ? 
                            1.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7201893f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26783127f ? 
                                    0.0f : 
                                     (data[10 /* X11 */] <-0.45717672f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.4930424f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17276555f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.29681718f ? 
            0.0f : 
             (data[21 /* X22 */] <0.19151828f ? 
                 (data[25 /* X26 */] <-0.0830688f ? 
                     (data[24 /* X25 */] <0.033629898f ? 
                         (data[4 /* X5 */] <0.11611547f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-1.1420183f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.120462656f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.45717672f ? 
                                 (data[7 /* X8 */] <0.105297215f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.45508578f ? 
             (data[29 /* X30 */] <0.103226215f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.25552678f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.13702677f ? 
                     (data[23 /* X24 */] <0.07680359f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23852326f ? 
                             (data[24 /* X25 */] <-0.28009146f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.43827057f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.07601674f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24593937f ? 
                 (data[25 /* X26 */] <-0.4394969f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11806107f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.022010185f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.09356807f ? 
                             (data[8 /* X9 */] <-0.023218319f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[27 /* X28 */] <0.38910627f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.15909441f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18098673f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[7 /* X8 */] <0.07101268f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.004936895f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.4067247f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <0.1794359f ? 
                 (data[2 /* X3 */] <-0.22534503f ? 
                     (data[13 /* X14 */] <0.13706276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.06881168f ? 
                     (data[30 /* X31 */] <0.120120496f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.50692594f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4077259f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.17990662f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[3 /* X4 */] <-0.79331f ? 
            0.0f : 
             (data[7 /* X8 */] <0.07572428f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5207411f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.27296326f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.09992023f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18328346f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[20 /* X21 */] <0.10674416f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7335259f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.27663386f ? 
            0.0f : 
             (data[0 /* X1 */] <0.1083401f ? 
                 (data[7 /* X8 */] <0.0471076f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.10939592f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.07294762f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28365454f ? 
                                0.0f : 
                                 (data[20 /* X21 */] <0.379738f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[11 /* X12 */] <-0.3429075f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04084907f ? 
                         (data[29 /* X30 */] <0.11729442f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.116358444f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[20 /* X21 */] <0.33564362f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.39596516f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[0 /* X1 */] <-0.13320324f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08306795f ? 
                 (data[13 /* X14 */] <0.12322934f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.05147988f ? 
                 (data[19 /* X20 */] <-0.33179328f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.23079485f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.59214896f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.6695449f ? 
                 (data[30 /* X31 */] <0.16519563f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29824483f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[28 /* X29 */] <0.12552756f ? 
             (data[23 /* X24 */] <0.08107045f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3472346f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23215702f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.3621749f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[20 /* X21 */] <0.21278606f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5513231f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                 (data[7 /* X8 */] <0.033734504f ? 
                     (data[11 /* X12 */] <-0.24039598f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4469314f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31170717f ? 
                             (data[20 /* X21 */] <0.16964526f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32833785f ? 
                                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19747408f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[32 /* X33 */] <-0.236364f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[31 /* X32 */] <0.17104869f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[24 /* X25 */] <0.009863131f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21073647f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29433447f ? 
             (data[4 /* X5 */] <0.12504134f ? 
                 (data[24 /* X25 */] <-0.78632367f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.12633342f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09931905f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18581577f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24755982f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[27 /* X28 */] <-0.07391582f ? 
                     (data[20 /* X21 */] <0.091462545f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.51575047f ? 
                             (data[32 /* X33 */] <-0.5227275f ? 
                                 (data[19 /* X20 */] <0.020136405f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[20 /* X21 */] <0.1309557f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[31 /* X32 */] <0.120764464f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20252383f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3259153f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <0.2478311f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[25 /* X26 */] <0.041433133f ? 
                                 (data[20 /* X21 */] <0.26802424f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))))) : 
            0.0f) : 
         (data[20 /* X21 */] <0.09480567f ? 
             (data[29 /* X30 */] <0.11072693f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0069178673f ? 
             (data[6 /* X7 */] <0.081171006f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.4249167f ? 
                     (data[19 /* X20 */] <0.43341163f ? 
                         (data[29 /* X30 */] <0.13572931f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.1376425f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.99898124f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33572912f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.24419975f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.381831f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.06333836f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[16 /* X17 */] <-0.41604385f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1985982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.12921663f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4869658f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.03839965f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.06329996f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.220302f ? 
                             (data[11 /* X12 */] <-0.21169275f ? 
                                0.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19256787f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6412031f ? 
                             (data[14 /* X15 */] <0.13385324f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23176152f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <1.1049242f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <4.8594706E-4f ? 
             (data[11 /* X12 */] <-0.10200542f ? 
                 (data[21 /* X22 */] <0.16318054f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.018605705f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21482353f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23639703f ? 
                        0.0f : 
                        1.0f))) : 
             (data[34 /* X35 */] <-0.65015167f ? 
                 (data[10 /* X11 */] <-0.21569514f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[29 /* X30 */] <0.054784093f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41895455f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.19060305f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10527213f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.7292324f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.16644463f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[35 /* X36 */] <-0.2580232f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[21 /* X22 */] <0.16398239f ? 
             (data[14 /* X15 */] <0.20949039f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.18680228f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.2731638f ? 
             (data[28 /* X29 */] <0.12946996f ? 
                 (data[19 /* X20 */] <-0.266422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[10 /* X11 */] <-0.78434324f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.46323183f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.88441056f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13670087f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25130007f ? 
                         (data[3 /* X4 */] <-0.2910327f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23943394f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19252421f ? 
                             (data[16 /* X17 */] <-0.5699373f ? 
                                 (data[1 /* X2 */] <-0.38227183f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.073583595f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.13622835f ? 
                            1.0f : 
                             (data[33 /* X34 */] <-1.2197304f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12331664f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[33 /* X34 */] <-0.26434147f ? 
             (data[3 /* X4 */] <-0.30823398f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.055495486f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.1070314E-4f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07818399f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15563722f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25401986f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17485447f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.011798838f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19198723f ? 
                     (data[3 /* X4 */] <-0.40112087f ? 
                         (data[23 /* X24 */] <0.1997745f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.3429075f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.111206144f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2225364f ? 
             (data[14 /* X15 */] <0.09992023f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.027647372f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.735847f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.016874485f ? 
            0.0f : 
             (data[17 /* X18 */] <0.011798838f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6521839f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.3438972f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2788496f ? 
                 (data[17 /* X18 */] <-0.5716543f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1868485f ? 
                         (data[9 /* X10 */] <-0.3222576f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X6 */] <0.09937715f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.15094659f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.48460928f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2772509f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16776752f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.057481524f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.39624444f ? 
                 (data[17 /* X18 */] <-0.2952818f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.685895f ? 
                     (data[15 /* X16 */] <0.03839965f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20592552f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.71040726f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5138487f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20490673f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <0.13911523f ? 
             (data[21 /* X22 */] <0.19958864f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16679224f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.13941966f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44647712f ? 
                     (data[10 /* X11 */] <-0.19064507f ? 
                         (data[15 /* X16 */] <0.08511578f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.09323394f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20200188f ? 
                         (data[35 /* X36 */] <-0.7231752f ? 
                             (data[32 /* X33 */] <0.62034947f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[2 /* X3 */] <-0.6460337f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35724366f ? 
                 (data[18 /* X19 */] <-0.24313773f ? 
                     (data[35 /* X36 */] <-0.7213259f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15610488f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.17737237f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19627583f ? 
                             (data[28 /* X29 */] <0.103788055f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.15342247f ? 
                            1.0f : 
                            0.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[2 /* X3 */] <-0.12617129f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.018089822f ? 
                 (data[5 /* X6 */] <0.1143002f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06640579f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.14330004f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                     (data[27 /* X28 */] <0.20564468f ? 
                         (data[10 /* X11 */] <-0.7163185f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08154817f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.11414176f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1800312f ? 
            0.0f : 
             (data[20 /* X21 */] <0.5098438f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11836323f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.067819096f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (data[33 /* X34 */] <-0.88758147f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.36545324f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.01935416f ? 
             (data[31 /* X32 */] <0.08306795f ? 
                 (data[27 /* X28 */] <-0.11759715f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.14347136f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.43819427f ? 
                             (data[5 /* X6 */] <0.11911982f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17667744f ? 
                     (data[2 /* X3 */] <-0.026997542f ? 
                         (data[16 /* X17 */] <-0.44452745f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.08833762f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2804158f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[32 /* X33 */] <-0.47117314f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.1111163f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.25374874f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[29 /* X30 */] <0.11510235f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15204795f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.12949245f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36761993f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.008854605f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52740973f ? 
             (data[32 /* X33 */] <-0.47425452f ? 
                 (data[1 /* X2 */] <-0.1831768f ? 
                     (data[20 /* X21 */] <0.2883857f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2063635f ? 
                    1.0f : 
                     (data[9 /* X10 */] <0.3773365f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        0.011560693f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[22 /* X23 */] <0.16625291f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.22870037f ? 
                 (data[4 /* X5 */] <0.09504895f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.016959336f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.3985664f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[21 /* X22 */] <0.10421375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.25702873f ? 
                 (data[12 /* X13 */] <0.1144625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34080753f ? 
                     (data[33 /* X34 */] <-0.41914192f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14539331f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[19 /* X20 */] <-0.33724087f ? 
             (data[31 /* X32 */] <0.14089915f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.39417195f ? 
                 (data[10 /* X11 */] <-0.17212075f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4038989f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.078663945f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15289141f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.06143718f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20588163f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[20 /* X21 */] <0.29354647f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1802823f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97708935f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.1857645f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16761564f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21124549f ? 
                 (data[21 /* X22 */] <0.091224134f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[20 /* X21 */] <0.24298343f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30147272f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.121519305f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08805763f ? 
             (data[35 /* X36 */] <0.123173594f ? 
                 (data[25 /* X26 */] <-0.20187818f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08882097f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7153093f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.09600794f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1629253f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20109347f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24078679f ? 
             (data[9 /* X10 */] <-0.5846054f ? 
                 (data[23 /* X24 */] <0.15360717f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.4417294f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19519451f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.4332389f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.18519326f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.117382154f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.022692777f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22255011f ? 
                 (data[23 /* X24 */] <0.16427433f ? 
                     (data[24 /* X25 */] <-0.20403779f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.113258615f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4001629f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9411452f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[29 /* X30 */] <0.16280155f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.15094659f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.076594375f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19721985f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15544349f ? 
                         (data[1 /* X2 */] <-0.17223752f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[22 /* X23 */] <0.048603993f ? 
            1.0f : 
             (data[14 /* X15 */] <0.0970368f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.22171535f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.4249167f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.11082733f ? 
            1.0f : 
             (data[14 /* X15 */] <0.13452134f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.033629898f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.17817608f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[34 /* X35 */] <-0.9784269f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.002020254f ? 
                 (data[0 /* X1 */] <0.002600917f ? 
                     (data[9 /* X10 */] <-0.109546475f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21699926f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29833588f ? 
                     (data[31 /* X32 */] <0.060455773f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28579542f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.375071f ? 
                                 (data[33 /* X34 */] <0.33959115f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
             (data[5 /* X6 */] <0.10166718f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29798338f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07030817f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.16478248f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[28 /* X29 */] <0.31456715f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43609345f ? 
             (data[27 /* X28 */] <-0.26174554f ? 
                 (data[11 /* X12 */] <-0.09687985f ? 
                     (data[20 /* X21 */] <0.14804015f ? 
                        0.0f : 
                        1.0f) : 
                     (data[17 /* X18 */] <-0.09607102f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.21042351f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.43618998f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34155306f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12517996f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24288844f ? 
             (data[23 /* X24 */] <0.2197436f ? 
                 (data[22 /* X23 */] <0.1871481f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.73556644f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[9 /* X10 */] <-0.17165054f ? 
             (data[24 /* X25 */] <-0.002020254f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29023573f ? 
                    1.0f : 
                    0.0f)) : 
             (data[33 /* X34 */] <-0.26672304f ? 
                 (data[22 /* X23 */] <0.19441597f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.37153926f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
        0.011904762f : 
         (data[33 /* X34 */] <-0.6668226f ? 
             (data[27 /* X28 */] <-0.008393826f ? 
                 (data[17 /* X18 */] <-0.38126436f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25679362f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15319297f ? 
                 (data[4 /* X5 */] <0.105760515f ? 
                     (data[34 /* X35 */] <-0.05785092f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18870983f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14411847f ? 
                     (data[11 /* X12 */] <-0.2608983f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.20261969f ? 
                             (data[28 /* X29 */] <0.18727413f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[7 /* X8 */] <0.03855496f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.100271344f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.26940176f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22893845f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.14914781f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.084881306f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.033189207f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47608027f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18988812f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19073457f ? 
                         (data[17 /* X18 */] <-0.2318941f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5177172f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23204291f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45767903f ? 
                     (data[16 /* X17 */] <-0.54237694f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.156472f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1994854f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.30007714f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06287121f ? 
             (data[33 /* X34 */] <-0.35612088f ? 
                 (data[29 /* X30 */] <0.16948254f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21431012f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[12 /* X13 */] <0.1333768f ? 
             (data[27 /* X28 */] <-0.30105874f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <0.015150031f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                     (data[14 /* X15 */] <0.12914851f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.26841143f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22718917f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13785632f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.21910645f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[5 /* X6 */] <0.064454116f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.20105071f ? 
                 (data[31 /* X32 */] <0.12956992f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.31676105f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.36198482f ? 
        0.0f : 
         (data[21 /* X22 */] <0.17754485f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2977895f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.500226f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.35790333f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16434713f ? 
                 (data[0 /* X1 */] <0.105371624f ? 
                     (data[9 /* X10 */] <-0.119983524f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23113002f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.078490764f ? 
                         (data[35 /* X36 */] <-0.50565255f ? 
                             (data[30 /* X31 */] <0.13951088f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.012233595f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26699185f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2060651f ? 
             (data[27 /* X28 */] <-0.29232246f ? 
                 (data[23 /* X24 */] <0.10240478f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.10912331f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[19 /* X20 */] <-0.1792603f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1099246f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.7551396f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24625407f ? 
             (data[24 /* X25 */] <-0.31098825f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.1217848f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22189401f ? 
             (data[3 /* X4 */] <-0.30135345f ? 
                 (data[7 /* X8 */] <0.047874503f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.037670407f ? 
                         (data[13 /* X14 */] <0.13152939f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.15707567f ? 
                 (data[34 /* X35 */] <-0.265292f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30896857f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.008393826f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30932042f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15535419f ? 
                 (data[34 /* X35 */] <-0.7099153f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18697594f ? 
             (data[0 /* X1 */] <0.009941682f ? 
                 (data[14 /* X15 */] <0.24553321f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5691014f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.39424035f ? 
                     (data[24 /* X25 */] <0.39134485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23992933f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.59088236f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27436274f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30506083f ? 
             (data[14 /* X15 */] <0.08697329f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.17406401f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4736097f ? 
             (data[19 /* X20 */] <0.3546051f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49863762f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.578236f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39818597f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[5 /* X6 */] <0.074759275f ? 
            1.0f : 
             (data[23 /* X24 */] <0.07147f ? 
                 (data[27 /* X28 */] <-0.11759715f ? 
                     (data[17 /* X18 */] <-0.47338855f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088171974f ? 
             (data[23 /* X24 */] <0.06613642f ? 
                1.0f : 
                 (data[34 /* X35 */] <-1.0478096f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.7269067f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.4981471f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29459292f ? 
                                 (data[22 /* X23 */] <0.16280067f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.24224895f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[25 /* X26 */] <-0.21203822f ? 
                                         (data[32 /* X33 */] <-0.10463964f ? 
                                            1.0f : 
                                             (data[14 /* X15 */] <0.13110901f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)) : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31675532f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.50966066f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09943629f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16788761f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2691458f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4038989f ? 
                 (data[8 /* X9 */] <-0.1478075f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.25890666f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10194059f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.17223752f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[28 /* X29 */] <0.2195819f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2628484f ? 
                 (data[23 /* X24 */] <0.023467762f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.15889591f ? 
                         (data[26 /* X27 */] <0.08193703f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.42454043f ? 
            0.0f : 
             (data[23 /* X24 */] <0.16000746f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.14030533f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19918402f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.23875928f ? 
                 (data[9 /* X10 */] <-0.10849274f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13227284f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1807336f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15650354f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14029281f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23620673f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038643956f ? 
                 (data[17 /* X18 */] <-0.72519463f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4959009f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.13653971f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16189952f ? 
                     (data[17 /* X18 */] <-0.35055628f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.02375827f ? 
                             (data[24 /* X25 */] <0.7846598f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13732025f ? 
                        1.0f : 
                        0.0f))) : 
             (data[23 /* X24 */] <0.10453821f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.76661515f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[15 /* X16 */] <0.05926052f ? 
             (data[0 /* X1 */] <-0.09282903f ? 
                 (data[3 /* X4 */] <-0.31699592f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.3601889f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32501784f ? 
                 (data[12 /* X13 */] <0.20903401f ? 
                     (data[13 /* X14 */] <0.09511259f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28017065f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15094659f ? 
                             (data[16 /* X17 */] <0.18574686f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <-0.46064478f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14198275f ? 
                                         (data[31 /* X32 */] <0.11871946f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f))) : 
                             (data[5 /* X6 */] <0.15773618f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3578783f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[6 /* X7 */] <0.13733184f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36636466f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11172983f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.48106208f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (data[3 /* X4 */] <-0.564533f ? 
             (data[23 /* X24 */] <0.26347896f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29738382f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.28467137f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <0.096441366f ? 
             (data[33 /* X34 */] <-0.2857754f ? 
                 (data[17 /* X18 */] <-0.14174147f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.22509176f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.0070308065f ? 
                     (data[15 /* X16 */] <0.26250502f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[25 /* X26 */] <-0.39553744f ? 
             (data[16 /* X17 */] <-0.39696616f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.09674763f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.026133977f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22126794f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14517784f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.10518423f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.21066156f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-1.003379f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28388658f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.29641697f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.205645f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (data[21 /* X22 */] <0.037810475f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.6316876f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.9717467f ? 
                     (data[21 /* X22 */] <0.17950456f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11947224f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.109430715f ? 
                             (data[25 /* X26 */] <-0.41107908f ? 
                                1.0f : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3434858f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.15939896f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.8346734f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.47452167f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12946108f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (data[35 /* X36 */] <-0.34599167f ? 
                 (data[1 /* X2 */] <-0.17223752f ? 
                     (data[11 /* X12 */] <-0.113618046f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.018909223f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2850851f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47424507f ? 
             (data[25 /* X26 */] <-0.15739197f ? 
                 (data[28 /* X29 */] <0.2098935f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.38127708f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.033734504f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.7616683f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.45025644f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.43969244f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30085444f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09209859f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.2555442f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25358352f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[7 /* X8 */] <0.071404874f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[31 /* X32 */] <0.066921435f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16405469f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.119859956f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21369813f ? 
                 (data[2 /* X3 */] <-0.23174334f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13966146f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18952174f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26211503f ? 
                             (data[19 /* X20 */] <-0.2752955f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.020532968f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[8 /* X9 */] <0.38900977f ? 
                                 (data[22 /* X23 */] <0.12791482f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[15 /* X16 */] <0.059379727f ? 
                                    1.0f : 
                                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12050096f ? 
                                        0.0f : 
                                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3606452f ? 
                                            1.0f : 
                                            0.0f))))) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.021498224f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[21 /* X22 */] <0.18083271f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.030139292f ? 
                 (data[22 /* X23 */] <0.24710816f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.0302637f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13357049f ? 
            0.0f : 
             (data[12 /* X13 */] <0.20588163f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[27 /* X28 */] <-0.104492754f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.75994235f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1248397f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12800598f ? 
                         (data[27 /* X28 */] <-0.2962811f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35567316f ? 
                                0.0f : 
                                1.0f) : 
                             (data[34 /* X35 */] <-0.83282816f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <-0.38402018f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1918454f ? 
                             (data[13 /* X14 */] <0.11807342f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.60926753f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[12 /* X13 */] <0.2287011f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6018752f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.14967795f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39941573f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42697665f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3479914f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28157783f ? 
                         (data[31 /* X32 */] <0.16878888f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17826648f ? 
             (data[34 /* X35 */] <-0.8294013f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.08846574f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18300481f ? 
                     (data[13 /* X14 */] <0.11492929f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5102819f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.62083066f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[27 /* X28 */] <-0.3032428f ? 
             (data[30 /* X31 */] <0.15343852f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23596078f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2026107f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.7397765f ? 
                     (data[23 /* X24 */] <0.13227284f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[3 /* X4 */] <-0.48024675f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20808867f ? 
                 (data[33 /* X34 */] <-0.48582518f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5207411f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.19680884f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24371022f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[12 /* X13 */] <0.20588163f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.12718803f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.44375405f ? 
                         (data[31 /* X32 */] <0.12698647f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17852868f ? 
                                 (data[3 /* X4 */] <-0.26458666f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.3437137f ? 
         (data[27 /* X28 */] <-0.104492754f ? 
             (data[20 /* X21 */] <0.102530584f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.046935525f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.025535045f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2091925f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.012761959f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.1111163f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.19349587f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22291143f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20384778f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0070308065f ? 
                 (data[26 /* X27 */] <0.120214686f ? 
                     (data[11 /* X12 */] <-0.58893514f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.12966597f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3102697f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14573027f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.10197769f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13732025f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.71661943f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[25 /* X26 */] <-0.0082189f ? 
             (data[30 /* X31 */] <0.15253414f ? 
                 (data[23 /* X24 */] <0.19627583f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.98118657f ? 
                 (data[23 /* X24 */] <0.17707492f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21538939f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.48464447f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[30 /* X31 */] <0.10007939f ? 
             (data[10 /* X11 */] <-0.4377411f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21902032f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2781657f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.10395722f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14207545f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13682406f ? 
                         (data[27 /* X28 */] <-0.5980918f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.24293776f ? 
                                 (data[22 /* X23 */] <0.20931515f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5394386f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-1.0455506f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.16039298f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39502832f ? 
                             (data[20 /* X21 */] <0.088893354f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26406643f ? 
                                    0.0f : 
                                     (data[32 /* X33 */] <0.025002f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.025470797f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17624435f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.11178809f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.18412058f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.14967795f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.63685924f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[15 /* X16 */] <0.16237283f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.11632909f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.16973312f ? 
                     (data[18 /* X19 */] <0.024944238f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.41895497f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.06143718f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06223411f ? 
            0.0f : 
             (data[13 /* X14 */] <0.10386255f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10395722f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.08877242f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.17080383f ? 
                         (data[18 /* X19 */] <-0.13541704f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15178753f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16938722f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <0.42613506f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[30 /* X31 */] <0.116358444f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.44421962f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22823267f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17687164f ? 
                         (data[31 /* X32 */] <0.11018348f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.004936895f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36603585f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27539697f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[25 /* X26 */] <-0.4620707f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.082741916f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20660697f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13471746f ? 
                     (data[24 /* X25 */] <-0.13273749f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32453462f ? 
                 (data[33 /* X34 */] <-0.41914192f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22559665f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.023440557f ? 
                 (data[2 /* X3 */] <-0.1805569f ? 
                     (data[32 /* X33 */] <-7.1070314E-4f ? 
                         (data[12 /* X13 */] <0.1318849f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13185176f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2863842f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12698647f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21658656f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15675698f ? 
                 (data[31 /* X32 */] <0.09340172f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24747822f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25643823f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[3 /* X4 */] <-0.82771254f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.1202924f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.575005f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21371138f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23798575f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.24319334f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[31 /* X32 */] <0.062400408f ? 
             (data[3 /* X4 */] <-0.30135345f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.07315f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.25702873f ? 
                 (data[32 /* X33 */] <-0.18714528f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.075737625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29221302f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.22011735f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16335559f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.11520787f ? 
                 (data[16 /* X17 */] <-0.39696616f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07818399f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19627327f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07019412f ? 
                 (data[10 /* X11 */] <-0.7026544f ? 
                     (data[2 /* X3 */] <-0.16776028f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13406251f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17623052f ? 
                         (data[21 /* X22 */] <0.046030145f ? 
                            1.0f : 
                             (data[3 /* X4 */] <0.11363167f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.04617788f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2507403f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15977453f ? 
                 (data[15 /* X16 */] <0.08846574f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.5306309f ? 
             (data[20 /* X21 */] <0.3258506f ? 
                 (data[11 /* X12 */] <0.40033442f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22827733f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.33509377f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24072628f ? 
             (data[3 /* X4 */] <-0.30135345f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.11866249f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26667196f ? 
                         (data[10 /* X11 */] <-0.46380502f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15092915f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[12 /* X13 */] <0.16991681f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.805735f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6394123f ? 
             (data[10 /* X11 */] <-0.78377795f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4617901f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.773502f ? 
                     (data[7 /* X8 */] <0.073583595f ? 
                         (data[22 /* X23 */] <0.10175042f ? 
                            1.0f : 
                             (data[33 /* X34 */] <-0.6210969f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08124822f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.21537517f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <0.12265303f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11923615f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2894198f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.012761959f ? 
                     (data[31 /* X32 */] <0.03567792f ? 
                         (data[24 /* X25 */] <-0.013903638f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3258506f ? 
                     (data[16 /* X17 */] <-0.60663223f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <5.107116E-4f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14377886f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0020512454f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09175427f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14806823f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.50781274f ? 
                         (data[35 /* X36 */] <0.2765925f ? 
                            0.0f : 
                            1.0f) : 
                         (data[13 /* X14 */] <0.23113002f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12787022f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38399053f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.37531626f ? 
             (data[3 /* X4 */] <-0.32543525f ? 
                 (data[14 /* X15 */] <0.1993984f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19441631f ? 
                         (data[27 /* X28 */] <-0.004025693f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.3396871f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X7 */] <0.060748883f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30698702f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.17442928f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14241205f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <0.3328147f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05987335f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05190536f ? 
                     (data[28 /* X29 */] <0.07315f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.34512606f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.14753562f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[18 /* X19 */] <0.078398f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.017364271f ? 
                        0.0f : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.0491281f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17127813f ? 
                     (data[32 /* X33 */] <0.11098825f ? 
                         (data[35 /* X36 */] <-0.27278385f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.6293437f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.091990806f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3025258f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.14226298f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.36198482f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.1643631f ? 
             (data[18 /* X19 */] <-0.16214392f ? 
                 (data[22 /* X23 */] <0.2507421f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.63298076f ? 
                     (data[34 /* X35 */] <-0.7634911f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.43738595f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.010306747f ? 
                                 (data[25 /* X26 */] <-0.31403422f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[9 /* X10 */] <0.02050528f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.45870835f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.04770702f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19078203f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14086674f ? 
                         (data[18 /* X19 */] <-0.13751778f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0641336f ? 
                                0.0f : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37604076f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[29 /* X30 */] <0.106976576f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28568357f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[9 /* X10 */] <-0.34411994f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18502177f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.17001474f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.57902175f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6764406f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.12397018f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[29 /* X30 */] <0.2661963f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.46964407f ? 
             (data[11 /* X12 */] <-0.69028336f ? 
                 (data[34 /* X35 */] <0.3357217f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.033742107f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.11370037f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[9 /* X10 */] <-0.7837954f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.030919371f ? 
                 (data[29 /* X30 */] <0.08572455f ? 
                     (data[9 /* X10 */] <-0.023325516f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.17223752f ? 
                     (data[33 /* X34 */] <-0.3400332f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.047874503f ? 
            1.0f : 
             (data[29 /* X30 */] <0.11510235f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.47327697f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33658364f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15240867f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5133873f ? 
                                0.0f : 
                                 (data[0 /* X1 */] <0.13308285f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.008161402f ? 
             (data[11 /* X12 */] <-0.5223027f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <0.3541612f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_11_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[15 /* X16 */] <0.0395917f ? 
             (data[27 /* X28 */] <-0.11759715f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.06613642f ? 
             (data[19 /* X20 */] <-0.1792603f ? 
                 (data[31 /* X32 */] <0.03656598f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[24 /* X25 */] <-0.62589794f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09113102f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2936193f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19732131f ? 
                         (data[16 /* X17 */] <-0.44784003f ? 
                             (data[33 /* X34 */] <0.135727f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.10487132f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[7 /* X8 */] <0.060442172f ? 
                                 (data[24 /* X25 */] <-0.4391116f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[33 /* X34 */] <0.0040604193f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[17 /* X18 */] <-0.18933897f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.21790586f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.2531674f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18612005f ? 
                 (data[28 /* X29 */] <0.2195819f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21797521f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17899087f ? 
                         (data[5 /* X6 */] <0.05923444f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.1561517f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.081296325f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.374997f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467958f ? 
             (data[23 /* X24 */] <0.010119073f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.32726753f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.9282593f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.045608032f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[29 /* X30 */] <0.087599725f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13440627f ? 
                 (data[27 /* X28 */] <-0.30105874f ? 
                     (data[4 /* X5 */] <0.096120104f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17114423f ? 
                         (data[10 /* X11 */] <-0.35352f ? 
                             (data[17 /* X18 */] <-0.18681893f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[17 /* X18 */] <-0.6054332f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.33265635f ? 
                 (data[4 /* X5 */] <0.13253944f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15798779f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X1 */] <-0.24321994f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.02953624f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4959009f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.03759087f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.18286867f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[23 /* X24 */] <0.12320575f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28719187f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21001282f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12781224f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11657383f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15f ? 
                             (data[19 /* X20 */] <-0.2307281f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.33847016f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X13 */] <0.1442904f ? 
                             (data[8 /* X9 */] <0.09672868f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.12160568f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08767241f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <0.011798838f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5408276f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.248234f ? 
                     (data[25 /* X26 */] <-0.030792682f ? 
                         (data[33 /* X34 */] <-0.5483666f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.44288686f ? 
             (data[11 /* X12 */] <-0.52742827f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.42205283f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26974657f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.351746f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.13867067f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[34 /* X35 */] <-0.7292324f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.67343146f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.41604385f ? 
             (data[29 /* X30 */] <0.16885749f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20107965f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04753054f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.245441f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.15903045f ? 
                        1.0f : 
                        0.0f))) : 
             (data[20 /* X21 */] <0.14326191f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09457028f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46143174f ? 
                     (data[7 /* X8 */] <0.05815814f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24786139f ? 
                             (data[21 /* X22 */] <0.25250822f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[35 /* X36 */] <-1.0287948f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.07702388f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.41800225f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[16 /* X17 */] <0.08740983f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[19 /* X20 */] <-0.48160243f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17623052f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13668483f ? 
             (data[11 /* X12 */] <-0.37366095f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17039509f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.40200788f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1792603f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29802743f ? 
                     (data[27 /* X28 */] <-0.98248744f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34874916f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[19 /* X20 */] <-0.7240209f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.57923377f ? 
                 (data[28 /* X29 */] <0.25562668f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.17244953f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19627583f ? 
                 (data[15 /* X16 */] <0.04833395f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.086974666f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5986854f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3425979f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.47878054f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12035805f ? 
             (data[17 /* X18 */] <-0.8203896f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19099958f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.56080186f ? 
                         (data[29 /* X30 */] <0.11572741f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.26166663f ? 
                             (data[31 /* X32 */] <0.052583326f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15125698f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.21397097f ? 
                                     (data[19 /* X20 */] <-0.071829036f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)))))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4249167f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17067464f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[18 /* X19 */] <0.14187434f ? 
             (data[3 /* X4 */] <-0.6866621f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.3620744f ? 
                     (data[14 /* X15 */] <0.25130007f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22269632f ? 
                        0.0f : 
                         (data[35 /* X36 */] <0.24465388f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[35 /* X36 */] <-0.14073187f ? 
                 (data[17 /* X18 */] <-0.52252144f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.21352027f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.07391582f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14507058f ? 
                     (data[11 /* X12 */] <-0.57528806f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.769956f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42286387f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.2547479f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.11335103f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.105114065f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12841187f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2712976f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.20808358f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5233509f ? 
                        1.0f : 
                        0.0f))) : 
             (data[35 /* X36 */] <0.24884287f ? 
                 (data[29 /* X30 */] <0.15643373f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.7549398f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[31 /* X32 */] <0.05206664f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.28155f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.4224031f ? 
                 (data[4 /* X5 */] <0.098262414f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.11048785f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13884939f ? 
                     (data[17 /* X18 */] <-0.66769403f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.07818399f ? 
                             (data[1 /* X2 */] <-0.24224895f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37753725f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.19454773f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (data[11 /* X12 */] <0.27334964f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[20 /* X21 */] <0.0863785f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[27 /* X28 */] <-0.18748727f ? 
             (data[10 /* X11 */] <-0.4377411f ? 
                 (data[4 /* X5 */] <0.18181264f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10513422f ? 
                     (data[0 /* X1 */] <-0.1211447f ? 
                         (data[2 /* X3 */] <-0.052590765f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.10395722f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.56876534f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (data[14 /* X15 */] <0.13452134f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2506805f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21371138f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[28 /* X29 */] <0.19198512f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07326966f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04814976f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_11_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.033103436f ? 
            0.0f : 
             (data[27 /* X28 */] <0.096428476f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.15871172f ? 
             (data[15 /* X16 */] <0.05747245f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.005958318f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31091306f ? 
                 (data[25 /* X26 */] <-0.23989718f ? 
                     (data[10 /* X11 */] <-0.7163185f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.18473276f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[11 /* X12 */] <-0.39416325f ? 
             (data[10 /* X11 */] <-0.023114229f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.16403306f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13559987f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.099256404f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17261304f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.12397018f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.07935657f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3057144f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.08019847f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.19930671f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X6 */] <0.15046464f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.35055628f ? 
                        1.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5166647f ? 
                             (data[20 /* X21 */] <0.13840804f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.16833882f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[11 /* X12 */] <-0.50180036f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13342245f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.13998303f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.40441442f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4817119f ? 
                 (data[23 /* X24 */] <0.19120142f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2827566f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[24 /* X25 */] <-0.7803819f ? 
            1.0f : 
             (data[15 /* X16 */] <0.040783748f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31323776f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14226352f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19054487f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1142956f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.12685756f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.018112767f ? 
                            1.0f : 
                             (data[10 /* X11 */] <0.20622626f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[30 /* X31 */] <0.10517977f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1678061f ? 
                                1.0f : 
                                 (data[34 /* X35 */] <-0.52f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (data[8 /* X9 */] <-0.16098765f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31356493f ? 
                 (data[17 /* X18 */] <-0.3935476f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33517113f ? 
             (data[27 /* X28 */] <-0.26174554f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.26978147f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.09687985f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.052701995f ? 
                             (data[1 /* X2 */] <-0.11456781f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.23816748f ? 
             (data[3 /* X4 */] <0.37168682f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[34 /* X35 */] <-0.66596776f ? 
             (data[28 /* X29 */] <0.18691632f ? 
                 (data[7 /* X8 */] <0.07486905f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.07305391f ? 
                         (data[1 /* X2 */] <-0.027015414f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.3228994f ? 
                 (data[1 /* X2 */] <-0.39102325f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[10 /* X11 */] <-0.78434324f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.114910446f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23215702f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4469314f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23650503f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27941445f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.32543525f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2881714f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.31574807f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1046143f ? 
            0.0f : 
             (data[20 /* X21 */] <0.37500912f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[21 /* X22 */] <0.11836323f ? 
             (data[22 /* X23 */] <0.11628619f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13146828f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X8 */] <0.04478938f ? 
                 (data[3 /* X4 */] <-0.23868695f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22559665f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.09441828f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.09937715f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14446744f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25452793f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08918315f ? 
                                 (data[10 /* X11 */] <-0.5573514f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[10 /* X11 */] <-0.26605967f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6378806f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2329128f ? 
                    1.0f : 
                     (data[1 /* X2 */] <0.10470397f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22850308f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2680688f ? 
            0.0f : 
             (data[21 /* X22 */] <0.1438442f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[13 /* X14 */] <0.13014606f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17698325f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.1322263f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.20436408f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.21599467f ? 
                         (data[20 /* X21 */] <0.2121029f ? 
                             (data[33 /* X34 */] <0.29341638f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <-1.3777337f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.99528295f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.15472628f ? 
             (data[7 /* X8 */] <0.061371777f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24809551f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20880926f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.116358444f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <-0.18622541f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.5558259f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[0 /* X1 */] <-0.0561252f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44680914f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X12 */] <-0.1276333f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.30069122f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[20 /* X21 */] <0.2394721f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08150312f ? 
                 (data[27 /* X28 */] <-0.5456742f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.11810316f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8564773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.35140738f ? 
         (data[13 /* X14 */] <0.15988791f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09771616f ? 
                 (data[16 /* X17 */] <-0.3333738f ? 
                     (data[1 /* X2 */] <-0.5222947f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.13788445f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2845413f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30684978f ? 
                         (data[35 /* X36 */] <-0.12397598f ? 
                             (data[8 /* X9 */] <-0.14128926f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[33 /* X34 */] <-0.5284195f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14759608f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X1 */] <0.52379525f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[32 /* X33 */] <0.0197971f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30406183f ? 
                 (data[28 /* X29 */] <0.078110516f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31251913f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.058634978f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.17255901f ? 
             (data[21 /* X22 */] <0.10192389f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18471281f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X8 */] <0.05044541f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39912057f ? 
                         (data[8 /* X9 */] <-0.32524747f ? 
                            1.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2433239f ? 
                                0.0f : 
                                 (data[27 /* X28 */] <0.5415188f ? 
                                    0.0f : 
                                     (data[31 /* X32 */] <0.15691218f ? 
                                        0.0f : 
                                         (data[11 /* X12 */] <-1.101804f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17623052f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[20 /* X21 */] <0.33146873f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.51008666f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.29447296f ? 
                 (data[22 /* X23 */] <0.19986689f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4274795f ? 
             (data[6 /* X7 */] <0.15264843f ? 
                1.0f : 
                 (data[2 /* X3 */] <0.08632257f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.69010234f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22494671f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21554334f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[33 /* X34 */] <-0.123830326f ? 
             (data[16 /* X17 */] <-0.56866544f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <0.12739392f ? 
                 (data[15 /* X16 */] <0.071777046f ? 
                     (data[26 /* X27 */] <0.120214686f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18719278f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.35410452f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.099079594f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[32 /* X33 */] <0.13352218f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3943282f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1492889f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.27299505f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14304855f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1678231f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40296513f ? 
                            1.0f : 
                             (data[29 /* X30 */] <0.18867987f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.091990806f ? 
             (data[4 /* X5 */] <0.14646447f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28111267f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.39672554f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5774326f ? 
         (data[22 /* X23 */] <0.16489018f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.25070378f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.10447633f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.13596304f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-1.0361745f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.101350054f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23743726f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))))) : 
         (data[34 /* X35 */] <-0.7371405f ? 
             (data[13 /* X14 */] <0.121846f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.19975181f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1802823f ? 
                 (data[31 /* X32 */] <0.021065325f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30662593f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (data[11 /* X12 */] <0.17990126f ? 
                 (data[6 /* X7 */] <0.12712078f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.10386255f ? 
                 (data[34 /* X35 */] <-0.7503206f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.3332808f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.3481857f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.16805302f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3076374f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.14259681f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10335639f ? 
             (data[13 /* X14 */] <0.16887963f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27124906f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <-0.13576874f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24947564f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4815537f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4170913f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[33 /* X34 */] <-0.21909213f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.049539167f ? 
                 (data[2 /* X3 */] <-0.22086488f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.06846404f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09625199f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34318075f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.43285325f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.43516788f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27414614f ? 
                 (data[25 /* X26 */] <-0.07356405f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.094696246f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07273418f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10260255f ? 
                     (data[5 /* X6 */] <0.10853729f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39650425f ? 
         (data[33 /* X34 */] <-0.30959085f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13575456f ? 
                 (data[8 /* X9 */] <-0.121519305f ? 
                     (data[12 /* X13 */] <0.17435779f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29684645f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17831181f ? 
                        1.0f : 
                         (data[24 /* X25 */] <0.12869698f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.445419f ? 
             (data[0 /* X1 */] <-0.30204082f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38484082f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27653003f ? 
         (data[33 /* X34 */] <-0.16193505f ? 
             (data[14 /* X15 */] <0.0936958f ? 
                 (data[4 /* X5 */] <0.13052723f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.7608647f ? 
                     (data[32 /* X33 */] <0.08158419f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.13622835f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23849359f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.23034267f ? 
                     (data[22 /* X23 */] <0.13901693f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <0.05894836f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21132423f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19783962f ? 
                             (data[1 /* X2 */] <-0.17223752f ? 
                                1.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3035473f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.097029924f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24801664f ? 
             (data[4 /* X5 */] <0.09290663f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1413783f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.3884214f ? 
                     (data[11 /* X12 */] <-0.117382154f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37502497f ? 
                 (data[22 /* X23 */] <0.25554693f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.1573072f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0633136f ? 
             (data[34 /* X35 */] <-0.8926659f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1792603f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.13809043f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <0.03657621f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[29 /* X30 */] <0.11135199f ? 
             (data[29 /* X30 */] <0.07409126f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.7819529f ? 
                 (data[21 /* X22 */] <0.21042351f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24795657f ? 
             (data[34 /* X35 */] <-0.79776907f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.48432624f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.43373236f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2161381f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.6445196f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.14113903f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.13519262f ? 
         (data[31 /* X32 */] <0.12763233f ? 
             (data[26 /* X27 */] <-0.16048811f ? 
                 (data[21 /* X22 */] <0.14302224f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.3139208f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.048517745f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.13913107f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25411573f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18875895f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.40921035f ? 
                 (data[22 /* X23 */] <0.10175042f ? 
                     (data[1 /* X2 */] <-0.27687946f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.7681469f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3843207f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07143633f ? 
             (data[26 /* X27 */] <0.08193703f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14746788f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22193106f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.15858287f ? 
             (data[31 /* X32 */] <0.057233524f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.12244069f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.34616283f ? 
                         (data[14 /* X15 */] <0.23976636f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2503587f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.40411654f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7198431f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18687358f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.11603596f ? 
                                    1.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.32914808f ? 
                                        0.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.021696739f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            1.0f) : 
                         (data[3 /* X4 */] <-0.8608519f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3911462f ? 
                 (data[28 /* X29 */] <0.07315f ? 
                     (data[18 /* X19 */] <0.45904547f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X13 */] <0.111254714f ? 
                         (data[19 /* X20 */] <-0.1792603f ? 
                             (data[11 /* X12 */] <-0.21953328f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33699852f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.21534708f ? 
             (data[25 /* X26 */] <-0.014159368f ? 
                 (data[26 /* X27 */] <-0.0017100816f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11434984f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21371138f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17579634f ? 
                        1.0f : 
                        0.0f))) : 
             (data[33 /* X34 */] <-0.8525831f ? 
                 (data[21 /* X22 */] <0.08548456f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[31 /* X32 */] <0.058525246f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1680645f ? 
                 (data[16 /* X17 */] <-0.63861704f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.51076806f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2689293f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.09427591f ? 
                                 (data[3 /* X4 */] <-0.27307475f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
            0.0f : 
             (data[9 /* X10 */] <0.012964572f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[29 /* X30 */] <0.054159034f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34070495f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26425967f ? 
                         (data[27 /* X28 */] <-0.2835862f ? 
                             (data[31 /* X32 */] <0.2557588f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.21909213f ? 
            0.0f : 
             (data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34557918f ? 
                     (data[9 /* X10 */] <-0.10277088f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30744103f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1399037f ? 
             (data[7 /* X8 */] <0.061371777f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.10849274f ? 
                     (data[15 /* X16 */] <0.04793605f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.032525573f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.17932892f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.4394969f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.5413978f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.56517226f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.7067698f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21134171f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.095436096f ? 
                             (data[34 /* X35 */] <-0.07971583f ? 
                                 (data[31 /* X32 */] <0.06911736f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19260764f ? 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.083828874f ? 
                                        0.0f : 
                                         (data[9 /* X10 */] <-0.2457982f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26434147f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32266486f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21659192f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09856861f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08420128f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4832914f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.05926052f ? 
            1.0f : 
             (data[13 /* X14 */] <0.19931315f ? 
                 (data[13 /* X14 */] <0.093991034f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1559411f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30045462f ? 
                         (data[25 /* X26 */] <-0.11633543f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
             (data[32 /* X33 */] <-0.4817119f ? 
                 (data[15 /* X16 */] <0.19336613f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11681359f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25986433f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21224009f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.011001776f ? 
             (data[0 /* X1 */] <0.042975124f ? 
                 (data[21 /* X22 */] <0.13480256f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.37168315f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.84782004f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19239645f ? 
                         (data[26 /* X27 */] <-0.09239072f ? 
                             (data[12 /* X13 */] <0.22353497f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[8 /* X9 */] <0.22880456f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.19053362f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.931765f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.9190262f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13567944f ? 
                         (data[3 /* X4 */] <0.031255413f ? 
                             (data[28 /* X29 */] <0.26238507f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06223411f ? 
            0.0f : 
             (data[15 /* X16 */] <0.040783748f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
             (data[0 /* X1 */] <-0.13687362f ? 
                 (data[32 /* X33 */] <0.021661445f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.145299f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28084227f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[35 /* X36 */] <-0.5763854f ? 
                     (data[15 /* X16 */] <0.19575022f ? 
                         (data[21 /* X22 */] <0.17461342f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <0.13911523f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.21627253f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[20 /* X21 */] <0.24087663f ? 
             (data[26 /* X27 */] <0.1305534f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.95557314f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24651189f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.117382154f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <0.13352218f ? 
             (data[1 /* X2 */] <-0.2188317f ? 
                 (data[0 /* X1 */] <0.17877927f ? 
                     (data[20 /* X21 */] <0.23034267f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.0734643f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0425069f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.20105071f ? 
                         (data[20 /* X21 */] <0.34909645f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16475694f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.19653496f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16385917f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[2 /* X3 */] <-0.36770734f ? 
             (data[27 /* X28 */] <-0.14380595f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.03951905f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6266161f ? 
                     (data[32 /* X33 */] <-0.7017047f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17573313f ? 
                            1.0f : 
                            0.0f) : 
                         (data[3 /* X4 */] <-0.3460768f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2699019f ? 
                                0.0f : 
                                1.0f) : 
                             (data[26 /* X27 */] <-0.20576136f ? 
                                 (data[15 /* X16 */] <0.12041268f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[11 /* X12 */] <-0.13788445f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[18 /* X19 */] <0.18697594f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.6811119f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18619789f ? 
                     (data[19 /* X20 */] <-0.07030817f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07294086f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.13853183f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3122908f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07494766f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3628975f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.13680793f ? 
             (data[25 /* X26 */] <-0.009406994f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21864319f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.26360494f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[33 /* X34 */] <-1.2185127f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53537136f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.18412058f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[33 /* X34 */] <-0.7096904f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.038995676f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.119414955f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.5051703f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.055506952f ? 
                 (data[28 /* X29 */] <0.08891959f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.05815814f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0851518f ? 
                            1.0f : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.6382808f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[33 /* X34 */] <-0.123830326f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13249668f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.29801103f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16869971f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
             (data[24 /* X25 */] <-0.6377813f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0020512454f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.3999903f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.4585064f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14713556f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.102226086f ? 
                                    0.0f : 
                                    1.0f))))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (data[27 /* X28 */] <-0.33600378f ? 
                 (data[11 /* X12 */] <-0.107131004f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.17227313f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14077704f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.083336964f ? 
             (data[34 /* X35 */] <-1.011128f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.30069122f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2984829f ? 
         (data[19 /* X20 */] <-0.30455524f ? 
             (data[21 /* X22 */] <0.20960155f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.07528156f ? 
                    1.0f : 
                     (data[3 /* X4 */] <0.011709776f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.118205965f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.21369608f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22465743f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07132959f ? 
             (data[10 /* X11 */] <-0.7551898f ? 
                 (data[5 /* X6 */] <0.0706648f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.46720803f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.59432197f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2877314f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.11430414f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13278095f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22933662f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.21537517f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1435391f ? 
                    1.0f : 
                     (data[8 /* X9 */] <1.5479928f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.5318506f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.55948186f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.34650618f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06517956f ? 
             (data[30 /* X31 */] <0.12721115f ? 
                 (data[32 /* X33 */] <-0.23188958f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06897705f ? 
                 (data[35 /* X36 */] <0.043583054f ? 
                     (data[25 /* X26 */] <0.07375956f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31160295f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[26 /* X27 */] <0.043659374f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21180503f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38815826f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <0.19117694f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30012906f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.4249167f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.11012919f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.44928443f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
            0.0f : 
             (data[2 /* X3 */] <0.017790603f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.038995676f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13083772f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1985982f ? 
                 (data[0 /* X1 */] <0.11271239f ? 
                     (data[15 /* X16 */] <0.16091071f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09929268f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2766742f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[22 /* X23 */] <0.159412f ? 
                             (data[25 /* X26 */] <0.09635212f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36506015f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31299436f ? 
                             (data[24 /* X25 */] <-0.43219876f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.11613102f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[18 /* X19 */] <-0.047777563f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.14172989f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19932288f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20642735f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48774788f ? 
                 (data[0 /* X1 */] <0.024623211f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17004459f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44289136f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13200386f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2439674f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.18572399f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.82675064f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38409913f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16315468f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2733593f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[15 /* X16 */] <0.067008846f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[20 /* X21 */] <0.23736532f ? 
             (data[19 /* X20 */] <-0.51400083f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.061327036f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.18749966f ? 
                        1.0f : 
                         (data[15 /* X16 */] <0.088784136f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.007874016f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
             (data[32 /* X33 */] <-0.27663386f ? 
                 (data[19 /* X20 */] <-0.18720025f ? 
                     (data[22 /* X23 */] <0.192599f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17062198f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.205736f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X1 */] <-0.40848193f ? 
                     (data[20 /* X21 */] <0.12359851f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28072214f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.1650321f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                 (data[8 /* X9 */] <-0.39399344f ? 
                     (data[25 /* X26 */] <-0.09732593f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39931792f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[2 /* X3 */] <-0.46848068f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.652912f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21297449f ? 
             (data[4 /* X5 */] <0.10147589f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.45358887f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.04266866f ? 
                         (data[18 /* X19 */] <0.37922582f ? 
                            0.0f : 
                            1.0f) : 
                         (data[24 /* X25 */] <-0.19024846f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.27646863f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <0.0033688876f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4487467f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
                     (data[7 /* X8 */] <0.03501996f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.25566453f ? 
                            0.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16869971f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.034646694f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[31 /* X32 */] <0.09598517f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[11 /* X12 */] <-0.5940607f ? 
             (data[19 /* X20 */] <0.08035218f ? 
                 (data[15 /* X16 */] <0.16436653f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.056682408f ? 
             (data[22 /* X23 */] <0.2443827f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22686286f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.40103385f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10776672f ? 
         (data[15 /* X16 */] <0.0395917f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46679285f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <0.08319279f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.16669813f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.105371624f ? 
                 (data[20 /* X21 */] <0.10112605f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.12792592f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17650884f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.21786962f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-0.47327697f ? 
                     (data[25 /* X26 */] <-0.24175352f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8126777f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42697665f ? 
                             (data[9 /* X10 */] <-0.40776357f ? 
                                1.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14665477f ? 
                                    0.0f : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21042351f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.1643631f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36382926f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.36198482f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.17223752f ? 
                 (data[10 /* X11 */] <-0.41437358f ? 
                     (data[26 /* X27 */] <0.16589138f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25879687f ? 
                     (data[3 /* X4 */] <0.080514885f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.57958376f ? 
                            0.0f : 
                            1.0f) : 
                         (data[30 /* X31 */] <0.14058878f ? 
                             (data[11 /* X12 */] <0.5494099f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[21 /* X22 */] <0.15699567f ? 
             (data[11 /* X12 */] <-0.6043119f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.094693445f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.17102982f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[18 /* X19 */] <0.23181166f ? 
            0.0f : 
             (data[13 /* X14 */] <0.10386255f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06072905f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.13822955f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.8675495f ? 
                     (data[5 /* X6 */] <0.09937715f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.29414836f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.083095975f ? 
                             (data[32 /* X33 */] <0.071593f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.295537f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.7477951f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.30702847f ? 
                 (data[33 /* X34 */] <-1.2180201f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.20403779f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                 (data[0 /* X1 */] <-0.21567214f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04697262f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29390144f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25051945f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.047540188f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37100568f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46563804f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[32 /* X33 */] <-0.105114065f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[13 /* X14 */] <0.12322934f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5051929f ? 
         (data[21 /* X22 */] <0.15083092f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.047762286f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.015812267f ? 
                     (data[6 /* X7 */] <0.09989128f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24593937f ? 
                             (data[11 /* X12 */] <-0.91940236f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16420582f ? 
                                    1.0f : 
                                     (data[8 /* X9 */] <0.06593138f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.35828424f ? 
                 (data[13 /* X14 */] <0.10386255f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14820078f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.64235526f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X4 */] <-0.14654197f ? 
                     (data[24 /* X25 */] <-0.32838142f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22054979f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17622432f ? 
             (data[13 /* X14 */] <0.11077926f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.13506968f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.116300136f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104434505f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.30959085f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10124466f ? 
                     (data[0 /* X1 */] <0.046645507f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.13733184f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.23365682f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-0.20294051f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[15 /* X16 */] <0.0395917f ? 
             (data[5 /* X6 */] <0.10624725f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.58138394f ? 
                 (data[22 /* X23 */] <0.11843688f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2969243f ? 
             (data[7 /* X8 */] <0.071001016f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25601196f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.15989351f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.049782135f ? 
                        1.0f : 
                         (data[32 /* X33 */] <0.6406242f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6370804f ? 
                         (data[27 /* X28 */] <-1.0174326f ? 
                            1.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18599579f ? 
                                 (data[32 /* X33 */] <-0.045455f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[22 /* X23 */] <0.17339426f ? 
                                    0.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2179555f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f))) : 
             (data[24 /* X25 */] <-0.6377813f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08193905f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.4445417f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4477405f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14697513f ? 
                         (data[23 /* X24 */] <0.10228727f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26322055f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105398595f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.61961734f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31074995f ? 
             (data[34 /* X35 */] <-0.687056f ? 
                 (data[8 /* X9 */] <-0.24802515f ? 
                     (data[15 /* X16 */] <0.16752587f ? 
                        1.0f : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.35692406f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12832901f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[18 /* X19 */] <-0.12539446f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.27992776f ? 
             (data[33 /* X34 */] <0.36604235f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16253182f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31883112f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.1660373f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2426498f ? 
             (data[15 /* X16 */] <0.059060585f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.54793054f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3690415f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.82645375f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33564422f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.43018255f ? 
                 (data[8 /* X9 */] <-0.23128003f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2433022f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26732454f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30729133f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10187187f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[15 /* X16 */] <0.09076982f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[7 /* X8 */] <0.05044541f ? 
             (data[5 /* X6 */] <0.06388161f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.085203946f ? 
                    1.0f : 
                     (data[24 /* X25 */] <0.0019208748f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23111609f ? 
                 (data[23 /* X24 */] <0.04266866f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.043583054f ? 
                         (data[11 /* X12 */] <-0.36572856f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.41798258f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[7 /* X8 */] <0.06604271f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.08941237f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[24 /* X25 */] <0.09304682f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.72399974f ? 
                        1.0f : 
                        0.0f) : 
                     (data[32 /* X33 */] <-0.46306843f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.078157395f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13525349f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.42028543f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68894905f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.80018914f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[17 /* X18 */] <-0.08186075f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26987925f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23527041f ? 
                 (data[24 /* X25 */] <-0.002020254f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33382723f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.24556233f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30506083f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.25157133f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[1 /* X2 */] <-0.5168251f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.38369247f ? 
                 (data[22 /* X23 */] <0.14717472f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.092041895f ? 
             (data[15 /* X16 */] <0.049582414f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.045081884f ? 
                     (data[13 /* X14 */] <0.09176808f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21837717f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16938722f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29344216f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16613632f ? 
                     (data[18 /* X19 */] <-0.42941272f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7734981f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7334431f ? 
                                0.0f : 
                                 (data[28 /* X29 */] <0.31455502f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.44075814f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.0964876f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.019847555f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.9156924f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.11627209f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09136901f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.18896507f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.034874685f ? 
                        1.0f : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.6559759f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.8346734f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.11968555f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.0552364f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.47992736f ? 
                            1.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.45884115f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.34046456f ? 
             (data[0 /* X1 */] <-0.123490274f ? 
                 (data[35 /* X36 */] <-0.6015192f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.79776907f ? 
                 (data[20 /* X21 */] <0.17697059f ? 
                     (data[26 /* X27 */] <0.15849234f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.068269856f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.266422f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22126794f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34285268f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.12822683f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2109321f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2067252f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[35 /* X36 */] <-0.023440557f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[7 /* X8 */] <0.05108814f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.050205644f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.18962976f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.08120338f ? 
                 (data[35 /* X36 */] <-0.16722117f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11981023f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23688294f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15221538f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34548786f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.44895616f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.30829582f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21348934f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29108825f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25801f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1996975f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13138643f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18001075f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[22 /* X23 */] <0.16352746f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.04019646f ? 
                     (data[0 /* X1 */] <0.031963978f ? 
                         (data[26 /* X27 */] <0.23504765f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.4075235f ? 
                     (data[22 /* X23 */] <0.23530288f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.12792592f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1836185f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[7 /* X8 */] <0.045303594f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1265618f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.14403096f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18581577f ? 
                                    0.0f : 
                                     (data[3 /* X4 */] <0.43806854f ? 
                                        1.0f : 
                                        0.0f))))))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
                 (data[15 /* X16 */] <0.04316785f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.30350897f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4623538f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.0884296f ? 
                             (data[30 /* X31 */] <0.16266333f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[16 /* X17 */] <0.1392464f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[35 /* X36 */] <-0.62246406f ? 
             (data[33 /* X34 */] <-0.009516161f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.068644404f ? 
                 (data[16 /* X17 */] <-0.09172294f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (data[31 /* X32 */] <0.09856861f ? 
                 (data[15 /* X16 */] <0.08608165f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.16492362f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.06512853f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3336158f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.68442f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25390813f ? 
                 (data[8 /* X9 */] <-0.22856271f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.10364634f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1709381f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3019194f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.13808985f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25090227f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31351924f ? 
                 (data[22 /* X23 */] <0.09811647f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13519308f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.29692566f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19597192f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28615347f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1612353f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[7 /* X8 */] <0.03759087f ? 
                             (data[18 /* X19 */] <0.27083153f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[28 /* X29 */] <0.14523955f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20767072f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.3081702f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.059558533f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06759012f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0014949219f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.22284114f ? 
                    0.0f : 
                    1.0f)) : 
             (data[25 /* X26 */] <-0.48464447f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.021498224f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2857754f ? 
                 (data[13 /* X14 */] <0.17302966f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24618448f ? 
                         (data[22 /* X23 */] <0.21920003f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.6592017f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27553147f ? 
                     (data[7 /* X8 */] <0.03501996f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09824568f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.57409734f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10954576f ? 
             (data[20 /* X21 */] <0.1376438f ? 
                 (data[22 /* X23 */] <0.07359032f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27414614f ? 
                 (data[7 /* X8 */] <0.092865415f ? 
                    0.0f : 
                     (data[8 /* X9 */] <-0.22108153f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06177896f ? 
         (data[32 /* X33 */] <-0.17036617f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32887188f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.012080613f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13669711f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X13 */] <0.13652918f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44289136f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.7269067f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-1.2775255f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28764743f ? 
                                 (data[28 /* X29 */] <0.103788055f ? 
                                     (data[6 /* X7 */] <0.22859836f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[20 /* X21 */] <0.386819f ? 
                                    1.0f : 
                                     (data[18 /* X19 */] <0.22806853f ? 
                                        1.0f : 
                                        0.0f)))))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32377383f ? 
            0.0f : 
             (data[2 /* X3 */] <0.11356213f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.26488912f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
             (data[35 /* X36 */] <-0.978527f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.012080613f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16129823f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066753864f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.19179083f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <-0.23119128f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.266422f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[33 /* X34 */] <1.00195575E-5f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06223411f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.12792592f ? 
                 (data[8 /* X9 */] <-0.08259443f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.21599467f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.16805302f ? 
                             (data[6 /* X7 */] <0.129163f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[4 /* X5 */] <0.10147589f ? 
                     (data[25 /* X26 */] <-0.20884262f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13520454f ? 
         (data[15 /* X16 */] <0.08310152f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48181623f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14759608f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.5408808f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.21375911f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.71598226f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                     (data[6 /* X7 */] <0.14055604f ? 
                         (data[24 /* X25 */] <-0.21893317f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.22739647f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[33 /* X34 */] <-1.216856f ? 
                            1.0f : 
                             (data[8 /* X9 */] <-0.16822916f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19830665f ? 
                                    0.0f : 
                                     (data[15 /* X16 */] <0.15622093f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (data[19 /* X20 */] <-0.004936895f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13680793f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2189451f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.093572415f ? 
             (data[17 /* X18 */] <-0.51945066f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08680464f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.052688092f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49443218f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18846978f ? 
                         (data[10 /* X11 */] <-0.9754603f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X3 */] <-0.12101483f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.46306843f ? 
                     (data[12 /* X13 */] <0.16174826f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.17265826f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40505973f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16350794f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30988324f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4622509f ? 
                 (data[3 /* X4 */] <-0.22222759f ? 
                     (data[24 /* X25 */] <-0.013903638f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.083514825f ? 
                    0.0f : 
                    1.0f))) : 
         (data[27 /* X28 */] <0.5092299f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.1202924f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <0.014869644f ? 
                 (data[15 /* X16 */] <0.17667744f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.11043296f ? 
                     (data[22 /* X23 */] <0.24710816f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3032428f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.32854298f ? 
                 (data[9 /* X10 */] <-0.22509176f ? 
                     (data[32 /* X33 */] <0.61079466f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.26243567f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X8 */] <0.06329996f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.92026573f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22807048f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.022743264f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18621384f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.37360457f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1446001f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39372215f ? 
             (data[19 /* X20 */] <-0.3753741f ? 
                 (data[32 /* X33 */] <0.3945306f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.58206815f ? 
                     (data[15 /* X16 */] <0.06843528f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (data[27 /* X28 */] <-0.3032428f ? 
             (data[11 /* X12 */] <-0.09687985f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.08105687f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.610853f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.1273483f ? 
                             (data[7 /* X8 */] <0.06128845f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17223752f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.15375637f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33474568f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21224009f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2564111f ? 
                         (data[25 /* X26 */] <-0.4208916f ? 
                             (data[19 /* X20 */] <-0.14439562f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3434858f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.10345411f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30979368f ? 
             (data[33 /* X34 */] <-0.36198482f ? 
                 (data[31 /* X32 */] <0.088234834f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.75994235f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.20565858f ? 
                        1.0f : 
                        0.0f))) : 
             (data[16 /* X17 */] <-0.56866544f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.08671751f ? 
             (data[6 /* X7 */] <0.35942242f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
        0.011904762f : 
         (data[18 /* X19 */] <0.13519262f ? 
             (data[17 /* X18 */] <-0.10182099f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14720687f ? 
                     (data[15 /* X16 */] <0.04446633f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.40858173f ? 
                     (data[4 /* X5 */] <0.10871629f ? 
                         (data[25 /* X26 */] <-0.19237342f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.016384032f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.10886088f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27582452f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0062097595f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.2147681f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12181959f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.0761545f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.016384032f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16507697f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.41279715f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.34169078f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.11060666f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X7 */] <0.14584106f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.22823267f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3083382f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22971483f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.19364579f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.58348817f ? 
             (data[11 /* X12 */] <-0.58893514f ? 
                 (data[31 /* X32 */] <0.16057123f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09961405f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7095405f ? 
                 (data[6 /* X7 */] <0.060180802f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[22 /* X23 */] <0.2189451f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30934653f ? 
                     (data[30 /* X31 */] <0.116358444f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[14 /* X15 */] <0.18281871f ? 
             (data[28 /* X29 */] <0.13510196f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.31228542f ? 
                     (data[29 /* X30 */] <0.13072884f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.060061477f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.315268f ? 
                        1.0f : 
                        0.0f))) : 
             (data[29 /* X30 */] <0.09635056f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.7387901f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29590806f ? 
                         (data[35 /* X36 */] <-1.0367665f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.08712239f ? 
                                 (data[23 /* X24 */] <0.1692902f ? 
                                     (data[21 /* X22 */] <0.15637733f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[0 /* X1 */] <-0.4341746f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45928082f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.1674963f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[35 /* X36 */] <-0.51145625f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22859308f ? 
                 (data[7 /* X8 */] <0.08001087f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.18740845f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[29 /* X30 */] <0.055096623f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.068644404f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.6316876f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <1.1103939f ? 
             (data[27 /* X28 */] <-1.1703172f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2670969f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16525254f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.1901524f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[3 /* X4 */] <-0.40112087f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7183255f ? 
                 (data[28 /* X29 */] <0.2060651f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2121864f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.81153685f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24651189f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14888002f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
             (data[25 /* X26 */] <-0.41098267f ? 
                 (data[15 /* X16 */] <0.11469084f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16069631f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                             (data[0 /* X1 */] <0.046195846f ? 
                                 (data[11 /* X12 */] <-0.78143364f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25582963f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.10521176f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5840407f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[3 /* X4 */] <-0.15170236f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.25310513f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.045049805f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21387888f ? 
                         (data[21 /* X22 */] <0.15230086f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.1224268f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12548262f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                 (data[8 /* X9 */] <0.17485376f ? 
                     (data[11 /* X12 */] <-0.21989368f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.086974666f ? 
                 (data[21 /* X22 */] <0.04767408f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12585805f ? 
             (data[2 /* X3 */] <-0.07818399f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13788445f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19986689f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22583556f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21819723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.59233886f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08032535f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17401579f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.31516507f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.5687867f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.23582926f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <0.12188835f ? 
         (data[12 /* X13 */] <0.12943631f ? 
             (data[9 /* X10 */] <-0.17165054f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.55338424f ? 
                 (data[35 /* X36 */] <-1.0455506f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.3996892f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.26351064f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[23 /* X24 */] <0.32597488f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13487269f ? 
             (data[32 /* X33 */] <-0.25426173f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25130007f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.010071249f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                             (data[17 /* X18 */] <-0.2775559f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.103305876f ? 
                                    1.0f : 
                                     (data[33 /* X34 */] <0.33023056f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4084465f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17865534f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X13 */] <0.08249428f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.120313406f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[22 /* X23 */] <0.15807654f ? 
        0.016949153f : 
         (data[33 /* X34 */] <-0.36198482f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.16679224f ? 
                 (data[6 /* X7 */] <0.11801638f ? 
                     (data[11 /* X12 */] <0.09409861f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[32 /* X33 */] <0.08132051f ? 
                     (data[35 /* X36 */] <-0.77745616f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.09916134f ? 
                        0.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36531833f ? 
                             (data[16 /* X17 */] <-1.195077f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.11481865f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[12 /* X13 */] <0.31372714f ? 
                                0.0f : 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.081363365f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[31 /* X32 */] <0.09598517f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.01906238f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04663628f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.20011032f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[18 /* X19 */] <-0.04855468f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.3250468f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[22 /* X23 */] <0.11265225f ? 
             (data[7 /* X8 */] <0.04851723f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.13422368f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36450115f ? 
                 (data[3 /* X4 */] <-0.22222759f ? 
                     (data[10 /* X11 */] <-0.7681469f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.12435821f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23236686f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.42152345f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.316898f ? 
         (data[23 /* X24 */] <0.045868807f ? 
             (data[6 /* X7 */] <0.07266179f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33708683f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5145993f ? 
                         (data[6 /* X7 */] <0.08567696f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.055587232f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.050944258f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19098203f ? 
                             (data[13 /* X14 */] <0.09431591f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21584873f ? 
                                     (data[31 /* X32 */] <0.093058735f ? 
                                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06995495f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.4036337f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f))) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4938832f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.5310745f ? 
             (data[23 /* X24 */] <0.12160568f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.110871896f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29738382f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.25000608f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0056316727f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.4300423f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44353163f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22921012f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[30 /* X31 */] <0.10007939f ? 
             (data[19 /* X20 */] <-0.39716455f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2969231f ? 
                 (data[31 /* X32 */] <0.06498385f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-1.3407902f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.3853027f ? 
                             (data[31 /* X32 */] <0.10242429f ? 
                                0.0f : 
                                1.0f) : 
                             (data[22 /* X23 */] <0.11628619f ? 
                                 (data[35 /* X36 */] <-0.42861924f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[24 /* X25 */] <-0.085203946f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20965664f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.09021701f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35221264f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31211463f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <0.21409789f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31419942f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16042736f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.051087372f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[32 /* X33 */] <0.09809962f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17623052f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.146084f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <0.015150031f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.042549863f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10957632f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20035453f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.13502844f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1802823f ? 
             (data[35 /* X36 */] <-0.85285777f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.04212628f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17785712f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (data[28 /* X29 */] <0.2229611f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.79776907f ? 
                 (data[3 /* X4 */] <-0.119019926f ? 
                    1.0f : 
                     (data[32 /* X33 */] <0.42009962f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0461889f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.36914152f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.11516821f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[26 /* X27 */] <-0.26415676f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.25772643f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                     (data[26 /* X27 */] <0.1094491f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.24974498f ? 
                             (data[22 /* X23 */] <0.20931515f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.11446922f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19029552f ? 
                        0.0f : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.1315147f ? 
                         (data[3 /* X4 */] <-0.20846657f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18266465f ? 
             (data[17 /* X18 */] <-0.17859115f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23014483f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.19555861f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X2 */] <-0.5387036f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <0.0197971f ? 
             (data[24 /* X25 */] <-0.36446348f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28761643f ? 
                     (data[21 /* X22 */] <0.16439338f ? 
                         (data[31 /* X32 */] <0.09558462f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.538382f ? 
                     (data[21 /* X22 */] <0.09863602f ? 
                         (data[18 /* X19 */] <0.19233878f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39502463f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.021800375f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.2119621f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
            0.0f) : 
         (data[18 /* X19 */] <0.18697594f ? 
             (data[8 /* X9 */] <-0.2723532f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17772065f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.07537536f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.24052498f ? 
                 (data[34 /* X35 */] <0.008854605f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[32 /* X33 */] <-0.17036617f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2772393f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6384176f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.2687519f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X5 */] <0.12858205f ? 
                     (data[5 /* X6 */] <0.101102926f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.68494195f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.10229872f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.033629898f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.051097848f ? 
         (data[21 /* X22 */] <0.11877421f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16476357f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <0.53275496f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3918212f ? 
                    1.0f : 
                    0.0f))) : 
         (data[16 /* X17 */] <-0.43194196f ? 
             (data[3 /* X4 */] <-0.12246019f ? 
                 (data[27 /* X28 */] <-0.18748727f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.2617191f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1809392f ? 
                         (data[28 /* X29 */] <0.17083564f ? 
                             (data[18 /* X19 */] <0.13023266f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3049497f ? 
                 (data[15 /* X16 */] <0.04793605f ? 
                     (data[17 /* X18 */] <-0.71905303f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-1.0455506f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3342858f ? 
                             (data[24 /* X25 */] <-0.8124671f ? 
                                1.0f : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.76671904f ? 
                                     (data[25 /* X26 */] <-0.48516902f ? 
                                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.081780486f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (data[12 /* X13 */] <0.11496628f ? 
                                             (data[1 /* X2 */] <-0.17223752f ? 
                                                 (data[8 /* X9 */] <0.040741492f ? 
                                                    0.0f : 
                                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6309704f ? 
                                                        1.0f : 
                                                        0.0f)) : 
                                                0.0f) : 
                                            0.0f)) : 
                                     (data[26 /* X27 */] <-0.02027558f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4032188f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_11_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
             (data[27 /* X28 */] <-0.28795433f ? 
                 (data[9 /* X10 */] <-0.16679224f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.26651868f ? 
                         (data[13 /* X14 */] <0.12369711f ? 
                             (data[1 /* X2 */] <-0.3122604f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28035906f ? 
                     (data[8 /* X9 */] <-0.41030896f ? 
                         (data[35 /* X36 */] <-0.15748778f ? 
                            1.0f : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.29944462f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-1.4997632E-4f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.20567909f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[16 /* X17 */] <-0.37788847f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1690433f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <0.2490874f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5506711f ? 
                     (data[26 /* X27 */] <-0.119405575f ? 
                         (data[8 /* X9 */] <0.15711491f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20155951f ? 
         (data[19 /* X20 */] <-0.32089806f ? 
             (data[17 /* X18 */] <-0.23386566f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.30542687f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_11_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07132959f ? 
             (data[10 /* X11 */] <-0.7422327f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.21537517f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.2188315f ? 
                     (data[8 /* X9 */] <-0.37045136f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27787593f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.2910327f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[7 /* X8 */] <0.07294086f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.111485824f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.106318936f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7472932f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3083671f ? 
             (data[13 /* X14 */] <0.18025398f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (data[19 /* X20 */] <-0.14112705f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.10012462f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.5360225f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2698636f ? 
             (data[2 /* X3 */] <-0.33411625f ? 
                 (data[34 /* X35 */] <-0.4656299f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18623398f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32050228f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.054409996f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.12072789f ? 
                            1.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20418693f ? 
                                 (data[2 /* X3 */] <-0.22122402f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.024123192f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19523849f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)))) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24698953f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18864638f ? 
                 (data[31 /* X32 */] <0.106318936f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11060666f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.17069963f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4227002f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.01794045f ? 
             (data[11 /* X12 */] <-0.5171771f ? 
                 (data[3 /* X4 */] <-0.64881927f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <0.0657779f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.48421896f ? 
                     (data[14 /* X15 */] <0.1532636f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25639582f ? 
                     (data[31 /* X32 */] <0.106318936f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[13 /* X14 */] <0.075504035f ? 
            1.0f : 
             (data[7 /* X8 */] <0.053016324f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                     (data[32 /* X33 */] <-0.25426173f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.010577892f ? 
             (data[23 /* X24 */] <0.07893702f ? 
                 (data[8 /* X9 */] <-0.28695002f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.24438795f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05019323f ? 
                         (data[34 /* X35 */] <-0.5913061f ? 
                            1.0f : 
                             (data[3 /* X4 */] <0.3284352f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.509336f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5774326f ? 
         (data[1 /* X2 */] <-0.17223752f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15713814f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06425481f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.14765361f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07191425f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0144516155f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.019421378f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.110871896f ? 
                 (data[15 /* X16 */] <0.10753854f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.36940658f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14133993f ? 
             (data[27 /* X28 */] <-0.29232246f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1185745f ? 
                     (data[16 /* X17 */] <-0.2952184f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54026026f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07269537f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.14283395f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16237283f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[23 /* X24 */] <0.088004105f ? 
             (data[5 /* X6 */] <0.13601771f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.119019926f ? 
                 (data[29 /* X30 */] <0.13081242f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19727205f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16237283f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.25835028f ? 
             (data[24 /* X25 */] <0.003921438f ? 
                 (data[18 /* X19 */] <-0.08196328f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.15360717f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13185176f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.016731068f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.14461333f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25741354f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2895041f ? 
                 (data[2 /* X3 */] <-0.33411625f ? 
                     (data[32 /* X33 */] <0.14843695f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.24822268f ? 
                         (data[4 /* X5 */] <0.10254704f ? 
                             (data[25 /* X26 */] <-0.16572967f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19727205f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0062053674f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.049137946f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24104813f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.1008095f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <-0.42328373f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X11 */] <-0.023114229f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                 (data[33 /* X34 */] <-0.8240046f ? 
                     (data[27 /* X28 */] <-0.17566155f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.07660934f ? 
                 (data[31 /* X32 */] <0.063875005f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38786975f ? 
                     (data[11 /* X12 */] <-0.99898124f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.051671118f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.11491877f ? 
            0.0f : 
             (data[7 /* X8 */] <0.09993541f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.20294051f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26434147f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23540439f ? 
                 (data[25 /* X26 */] <-0.030792682f ? 
                     (data[14 /* X15 */] <0.19363156f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10527213f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5295072f ? 
             (data[13 /* X14 */] <0.09832918f ? 
                 (data[34 /* X35 */] <0.06628465f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.35055628f ? 
             (data[12 /* X13 */] <0.09081962f ? 
                 (data[20 /* X21 */] <0.12803079f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2761605f ? 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.15625957f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17317997f ? 
                            1.0f : 
                             (data[23 /* X24 */] <0.05461588f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25786784f ? 
                             (data[28 /* X29 */] <0.07495224f ? 
                                1.0f : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27845064f ? 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2514133f ? 
                                         (data[19 /* X20 */] <-0.3535837f ? 
                                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.42546263f ? 
                                                0.0f : 
                                                 (data[29 /* X30 */] <0.18711387f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            0.0f) : 
                                        1.0f) : 
                                    1.0f)) : 
                             (data[4 /* X5 */] <0.122597404f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <0.050240636f ? 
                                    1.0f : 
                                    0.0f))))) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[27 /* X28 */] <-0.35784447f ? 
             (data[13 /* X14 */] <0.14121279f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3535837f ? 
                    0.0f : 
                    1.0f)) : 
             (data[30 /* X31 */] <0.10279256f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2225364f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.27809665f ? 
            0.0f : 
             (data[12 /* X13 */] <0.24371022f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[27 /* X28 */] <-0.37968513f ? 
             (data[29 /* X30 */] <0.14135486f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2026107f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.10386255f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31936744f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.78434324f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.5151335f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.29165176f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27124906f ? 
                     (data[26 /* X27 */] <0.05641859f ? 
                         (data[13 /* X14 */] <0.18892588f ? 
                             (data[8 /* X9 */] <0.20544964f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30628082f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11915473f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X10 */] <0.35790333f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[24 /* X25 */] <-0.18027103f ? 
             (data[27 /* X28 */] <-0.14095934f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3328147f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.63861704f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.045392316f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1985982f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.20899655f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.30240065f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <0.33357432f ? 
                                    0.0f : 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.51712686f ? 
                                        1.0f : 
                                        0.0f)))))))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2421093f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2140328f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[27 /* X28 */] <0.28208703f ? 
             (data[22 /* X23 */] <0.0772213f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2026107f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4314211f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.38119766f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30506083f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2377165f ? 
                 (data[20 /* X21 */] <0.15110987f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[15 /* X16 */] <0.0395917f ? 
             (data[7 /* X8 */] <0.04851723f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15970905f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
                     (data[16 /* X17 */] <-0.24434455f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043783274f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22416301f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.17624263f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.6433697f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9528072f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20931515f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <-0.16195823f ? 
                                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.291326f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f))) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.12540238f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30929187f ? 
             (data[11 /* X12 */] <-0.117382154f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.7292324f ? 
                        1.0f : 
                        0.0f))) : 
             (data[32 /* X33 */] <0.07386313f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58678806f ? 
                     (data[14 /* X15 */] <0.13414165f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467958f ? 
             (data[27 /* X28 */] <-0.24864113f ? 
                 (data[20 /* X21 */] <0.20787022f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.04212628f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4699473f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21076871f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2082112f ? 
                     (data[21 /* X22 */] <0.08548456f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.25126874f ? 
                             (data[28 /* X29 */] <0.24796715f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12499107f ? 
                                     (data[2 /* X3 */] <-0.1536558f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.28821242f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[3 /* X4 */] <-0.25835028f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08579541f ? 
                 (data[21 /* X22 */] <0.10192389f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.14216706f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.10700541f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20511094f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3541612f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3298734f ? 
             (data[32 /* X33 */] <-0.19460265f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.060369767f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.049802687f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20949039f ? 
                 (data[9 /* X10 */] <-0.39027372f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17001209f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.12633342f ? 
                 (data[3 /* X4 */] <-0.2910327f ? 
                     (data[33 /* X34 */] <-0.26672304f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.15402469f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08409298f ? 
                         (data[25 /* X26 */] <-0.25960523f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.117382154f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.53254604f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.73007107f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.49682593f ? 
                                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0986754f ? 
                                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48228446f ? 
                                             (data[5 /* X6 */] <0.10443493f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                             (data[33 /* X34 */] <-0.6820645f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[6 /* X7 */] <0.14456467f ? 
            1.0f : 
             (data[24 /* X25 */] <0.09304682f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33550698f ? 
                     (data[25 /* X26 */] <-0.07831643f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25986433f ? 
            0.0f : 
             (data[32 /* X33 */] <0.2155534f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.4442159f ? 
         (data[16 /* X17 */] <-0.23798531f ? 
            1.0f : 
             (data[15 /* X16 */] <0.0443599f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21194446f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09117963f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04734702f ? 
                         (data[8 /* X9 */] <-0.10690611f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.22278863f ? 
                                 (data[27 /* X28 */] <-0.29151377f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11177254f ? 
                             (data[4 /* X5 */] <0.12199283f ? 
                                 (data[20 /* X21 */] <0.17977965f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.586368f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.75202054f ? 
                        0.0f : 
                         (data[11 /* X12 */] <0.8335214f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.4121523f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.23990487f ? 
                     (data[32 /* X33 */] <0.23792554f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4852646f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.581615f ? 
                 (data[0 /* X1 */] <0.009941682f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.38124713f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18498346f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05019323f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.35438392f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.11718739f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.15180647f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.15496367f ? 
            0.0f : 
             (data[3 /* X4 */] <0.2490874f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23701419f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3180924f ? 
             (data[18 /* X19 */] <-0.42607185f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.52559227f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10091588f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.10602208f ? 
                         (data[29 /* X30 */] <0.1393231f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124539144f ? 
         (data[32 /* X33 */] <-0.3791729f ? 
             (data[29 /* X30 */] <0.123228125f ? 
                 (data[18 /* X19 */] <0.105124876f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.21878733f ? 
                 (data[10 /* X11 */] <0.04814976f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.5962208f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36450115f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17890234f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.5165893f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.43607205f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.8197799f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.082741916f ? 
             (data[29 /* X30 */] <0.07252901f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.8832666f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10961501f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.108699165f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.041488566f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25741354f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.14029786f ? 
                     (data[1 /* X2 */] <-0.21599467f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016635684f ? 
                 (data[32 /* X33 */] <-0.63458824f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.24463157f ? 
                         (data[35 /* X36 */] <0.10106375f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15838677f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27307943f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.22251661f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048849583f ? 
         (data[14 /* X15 */] <0.07757368f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.56241983f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14891694f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.6420456f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5483546f ? 
             (data[3 /* X4 */] <-0.17406401f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.035192672f ? 
                     (data[5 /* X6 */] <0.13601771f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <0.26073748f ? 
                         (data[0 /* X1 */] <0.03594937f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[15 /* X16 */] <0.0491281f ? 
            1.0f : 
             (data[28 /* X29 */] <0.08891959f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.643723f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25281513f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.31701458f ? 
                             (data[8 /* X9 */] <0.28022668f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17755038f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06223411f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.13070154f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19198468f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.077074625f ? 
             (data[34 /* X35 */] <-0.97447914f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.88817525f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10351184f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[24 /* X25 */] <0.10493021f ? 
                 (data[3 /* X4 */] <0.1039795f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13521732f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.23622161f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12207524f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[26 /* X27 */] <-0.25937206f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[26 /* X27 */] <0.12180959f ? 
             (data[20 /* X21 */] <0.18680228f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.36198482f ? 
                 (data[4 /* X5 */] <0.11004514f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31883112f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
        0.010869565f : 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.7616683f ? 
                 (data[24 /* X25 */] <0.14058036f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                     (data[17 /* X18 */] <-0.7067698f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.07843754f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17017819f ? 
                                 (data[18 /* X19 */] <0.014253487f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[35 /* X36 */] <-0.108660035f ? 
                                    1.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.061925687f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13527541f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.114190534f ? 
                             (data[28 /* X29 */] <0.17081194f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2499885f ? 
             (data[28 /* X29 */] <0.0720236f ? 
                 (data[13 /* X14 */] <0.07896239f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.11427213f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12161968f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.13387232f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27219978f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.10012462f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.99898124f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.06715632f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07926226f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.07877766f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.06804212f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16428766f ? 
                     (data[21 /* X22 */] <0.1315147f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.037670407f ? 
                     (data[5 /* X6 */] <0.1680782f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4227002f ? 
             (data[14 /* X15 */] <0.06099398f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.2905385f ? 
             (data[24 /* X25 */] <0.033629898f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.028321885f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32222435f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.20899655f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[19 /* X20 */] <-0.42712638f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.50041616f ? 
                 (data[22 /* X23 */] <0.11202806f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14391065f ? 
             (data[34 /* X35 */] <-1.008651f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.04316785f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.07294762f ? 
                         (data[19 /* X20 */] <-0.13567944f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.28339127f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15741481f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[11 /* X12 */] <-0.33778194f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23688294f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.110548876f ? 
                         (data[29 /* X30 */] <0.17407832f ? 
                            1.0f : 
                             (data[30 /* X31 */] <0.13951088f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10780823f ? 
                                    1.0f : 
                                     (data[4 /* X5 */] <0.1297876f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[20 /* X21 */] <0.16204192f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.17684203f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09566251f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.15838677f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21188162f ? 
                        1.0f : 
                        0.0f))) : 
             (data[34 /* X35 */] <-0.8346734f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8564773f ? 
                     (data[14 /* X15 */] <0.13596304f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.4380216f ? 
             (data[28 /* X29 */] <0.18691632f ? 
                 (data[23 /* X24 */] <0.05760269f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.7819529f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07637755f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.192792f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                     (data[22 /* X23 */] <0.10175042f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07583211f ? 
                            0.0f : 
                            1.0f) : 
                         (data[25 /* X26 */] <-0.4394969f ? 
                             (data[19 /* X20 */] <-0.20031485f ? 
                                1.0f : 
                                0.0f) : 
                             (data[15 /* X16 */] <0.073336124f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1361756f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3292598f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[14 /* X15 */] <0.15903045f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14872031f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.14330004f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
             (data[34 /* X35 */] <-0.3285566f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.08226894f ? 
                     (data[11 /* X12 */] <-0.28835222f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.024708252f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.1298974f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2763049f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09422691f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3224306f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27815464f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.10152242f ? 
                         (data[19 /* X20 */] <-0.24559893f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.045677543f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.2814006f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22113876f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14749674f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <0.19648066f ? 
             (data[32 /* X33 */] <-0.76420283f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.0640593f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[20 /* X21 */] <0.0863785f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.27663386f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.1831768f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08313773f ? 
                     (data[27 /* X28 */] <-0.49325657f ? 
                         (data[20 /* X21 */] <0.2187063f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.7503206f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.643723f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2835862f ? 
                         (data[19 /* X20 */] <-1.2252007f ? 
                             (data[0 /* X1 */] <0.14684486f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26616412f ? 
                             (data[2 /* X3 */] <-0.50563586f ? 
                                1.0f : 
                                 (data[12 /* X13 */] <0.08230819f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.13398308f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.09455259f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26322055f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1737635f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.08836345f ? 
                     (data[27 /* X28 */] <-0.19622354f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10775782f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19916679f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (data[28 /* X29 */] <0.19254832f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58753604f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23736532f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31995675f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23317641f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16495165f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.117382154f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.089081705f ? 
                            1.0f : 
                             (data[32 /* X33 */] <0.40832675f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[3 /* X4 */] <-0.3151145f ? 
             (data[7 /* X8 */] <0.07743996f ? 
                 (data[17 /* X18 */] <-0.48567176f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <0.004710573f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.33130762f ? 
                 (data[11 /* X12 */] <-1.1014928f ? 
                     (data[8 /* X9 */] <0.5207411f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1693865f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.12202163f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[13 /* X14 */] <0.18762237f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[4 /* X5 */] <0.1159365f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3368745f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23976636f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2532635f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.030196695f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07391582f ? 
                     (data[9 /* X10 */] <-0.24452493f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15086025f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12850337f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.1689942f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43981543f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2443641f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.39793533f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.073610626f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.21544082f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[31 /* X32 */] <0.105673075f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12859288f ? 
                 (data[12 /* X13 */] <0.16490063f ? 
                     (data[4 /* X5 */] <0.13451086f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.01132689f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28690815f ? 
                             (data[8 /* X9 */] <-0.44764325f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28474873f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
             (data[25 /* X26 */] <-0.19474961f ? 
                 (data[11 /* X12 */] <-0.39416325f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2390385f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[22 /* X23 */] <0.16534443f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.047301527f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.72293735f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.50635386f ? 
                         (data[32 /* X33 */] <-0.3139208f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1066018f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23336674f ? 
                     (data[32 /* X33 */] <-0.030540233f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.13809043f ? 
                             (data[3 /* X4 */] <-0.037829902f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.20105071f ? 
                     (data[34 /* X35 */] <-1.0561407f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.67046064f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.3753741f ? 
                 (data[31 /* X32 */] <0.1399037f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (data[27 /* X28 */] <-0.2508252f ? 
             (data[20 /* X21 */] <0.1530936f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3648874f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09566251f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17036822f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1792603f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.47631904f ? 
                             (data[32 /* X33 */] <0.00227225f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12950087f ? 
                 (data[2 /* X3 */] <-0.17445853f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32578772f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2088811f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.12250773f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18284723f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07375956f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.6745341f ? 
             (data[15 /* X16 */] <0.3769418f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[9 /* X10 */] <-0.5433099f ? 
             (data[20 /* X21 */] <0.23596078f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35188448f ? 
                 (data[9 /* X10 */] <-0.36433175f ? 
                     (data[5 /* X6 */] <0.14975792f ? 
                         (data[2 /* X3 */] <-0.13890862f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.16783068f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.0062097595f ? 
             (data[30 /* X31 */] <0.08922668f ? 
                 (data[2 /* X3 */] <-0.5132688f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.123035185f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.09209859f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.018909223f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39745012f ? 
             (data[7 /* X8 */] <0.0761545f ? 
                 (data[24 /* X25 */] <-0.1165132f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123960786f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.22182229f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.1512419f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.40112087f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                                1.0f : 
                                0.0f) : 
                             (data[22 /* X23 */] <0.25076857f ? 
                                 (data[17 /* X18 */] <-0.028735803f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23754843f ? 
                 (data[32 /* X33 */] <-0.9254262f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[22 /* X23 */] <0.2212163f ? 
            1.0f : 
             (data[13 /* X14 */] <0.2435801f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <0.14504519f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13357049f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21063752f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265292f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.049782135f ? 
                 (data[7 /* X8 */] <0.07872541f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17067464f ? 
                             (data[12 /* X13 */] <0.12712345f ? 
                                1.0f : 
                                 (data[23 /* X24 */] <0.09463291f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.057233524f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27071726f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21293652f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.0055753677f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <0.046041105f ? 
                                    1.0f : 
                                     (data[0 /* X1 */] <-0.026762143f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f))) : 
             (data[4 /* X5 */] <0.08969316f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.09737891f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30952933f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.3438972f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3704671f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[26 /* X27 */] <-0.12859008f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.15496367f ? 
                 (data[0 /* X1 */] <-0.041443672f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31816125f ? 
                     (data[3 /* X4 */] <0.066753864f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.07415478f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.30388004f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2735853f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4369327f ? 
                                        1.0f : 
                                         (data[1 /* X2 */] <-0.032214645f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)))) : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.5248892f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16237283f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X2 */] <-0.6480965f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7088077f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[12 /* X13 */] <0.25237927f ? 
             (data[21 /* X22 */] <0.223575f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.10109586f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.45925602f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.46740606f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[8 /* X9 */] <-0.19207065f ? 
             (data[8 /* X9 */] <-0.35807037f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.092865415f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.023472622f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09919419f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17865534f ? 
                    0.0f : 
                    1.0f)) : 
             (data[20 /* X21 */] <0.1573072f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28827325f ? 
            0.0f : 
             (data[28 /* X29 */] <0.23197229f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3389851f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30357227f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16573218f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2712912f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16949823f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[22 /* X23 */] <0.18169717f ? 
                            0.0f : 
                             (data[3 /* X4 */] <-0.78642946f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3834224f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.086666785f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.0389221f ? 
                         (data[32 /* X33 */] <-0.4332389f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30745488f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.35417387f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27896905f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09385076f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.1376425f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15906632f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.32039273f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.11072693f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[25 /* X26 */] <-0.5202873f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.085498184f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.14380595f ? 
                 (data[31 /* X32 */] <0.058215342f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.047340024f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.113229014f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3107035f ? 
                     (data[24 /* X25 */] <-0.013903638f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2870116f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.118900135f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07666869f ? 
                                    1.0f : 
                                     (data[7 /* X8 */] <0.08504181f ? 
                                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5421092f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26074123f ? 
                             (data[32 /* X33 */] <-0.10419578f ? 
                                1.0f : 
                                 (data[35 /* X36 */] <-1.01539f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07191425f ? 
             (data[34 /* X35 */] <-0.8926659f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06968396f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97374845f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.09607905f ? 
                 (data[31 /* X32 */] <0.032307427f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.8277239f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1507491f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27824292f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (data[13 /* X14 */] <0.10386255f ? 
             (data[34 /* X35 */] <-0.84521747f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.21699965f ? 
             (data[27 /* X28 */] <-0.2966906f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.61079466f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[25 /* X26 */] <-0.13178064f ? 
             (data[30 /* X31 */] <0.13082872f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35188448f ? 
                 (data[12 /* X13 */] <0.11823411f ? 
                     (data[29 /* X30 */] <0.11572741f ? 
                        0.0f : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.14073187f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24422185f ? 
             (data[32 /* X33 */] <-0.27663386f ? 
                 (data[18 /* X19 */] <-0.16214392f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.44631532f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.07831643f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3617f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
             (data[13 /* X14 */] <0.20761321f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[31 /* X32 */] <0.048191473f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11103341f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.06517956f ? 
                 (data[21 /* X22 */] <0.117257915f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.110466816f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3040894f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.2760801f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[24 /* X25 */] <-0.20403779f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2382391f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14503616f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2229862f ? 
                             (data[33 /* X34 */] <-0.6806653f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27842367f ? 
                                     (data[28 /* X29 */] <0.13526882f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (data[27 /* X28 */] <0.15496358f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[3 /* X4 */] <-0.2669509f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.18199518f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13935842f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.051961005f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1264059f ? 
             (data[11 /* X12 */] <-0.46079576f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <0.014869644f ? 
                 (data[20 /* X21 */] <0.17918195f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.326283f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <0.12188835f ? 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[31 /* X32 */] <0.06885902f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.2706911f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.57366544f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.287194f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[5 /* X6 */] <0.065026626f ? 
                 (data[34 /* X35 */] <-0.20161553f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.11769251f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19689636f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2863802f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19347069f ? 
                        1.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.71022654f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.73933744f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25002664f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.85347754f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16226834f ? 
                 (data[25 /* X26 */] <-0.54880154f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (data[34 /* X35 */] <-0.9770187f ? 
            1.0f : 
             (data[5 /* X6 */] <0.031821124f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34155306f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24001433f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.20752539f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.032214645f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[33 /* X34 */] <-0.5906132f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01855591f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12571254f ? 
                 (data[32 /* X33 */] <0.45418966f ? 
                     (data[27 /* X28 */] <-0.5806192f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[19 /* X20 */] <-0.5033929f ? 
             (data[26 /* X27 */] <-0.08393281f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20860645f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.062400408f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.0955482f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.11103341f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5276114f ? 
             (data[10 /* X11 */] <-0.78110397f ? 
                 (data[30 /* X31 */] <0.08741789f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24624982f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.043583054f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23040205f ? 
                             (data[27 /* X28 */] <0.18229944f ? 
                                 (data[31 /* X32 */] <0.07358456f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.29341638f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                         (data[7 /* X8 */] <0.08900905f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.05641859f ? 
                            1.0f : 
                             (data[1 /* X2 */] <0.1067143f ? 
                                1.0f : 
                                0.0f))))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.010384501f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.067244366f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
             (data[31 /* X32 */] <0.03523831f ? 
                 (data[31 /* X32 */] <0.018983765f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20077537f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.09477255f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.17381269f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3235843f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.697976f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.038970757f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.009863131f ? 
                         (data[20 /* X21 */] <0.1573072f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23819564f ? 
                                1.0f : 
                                 (data[18 /* X19 */] <0.0059122997f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.7178498f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2511006f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78503174f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3641619f ? 
                     (data[11 /* X12 */] <-0.52742827f ? 
                        1.0f : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.17348845f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.021043476f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3411803f ? 
                     (data[24 /* X25 */] <0.009863131f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5138725f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06177896f ? 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[20 /* X21 */] <0.13202567f ? 
                 (data[31 /* X32 */] <0.039149426f ? 
                     (data[18 /* X19 */] <0.6527253f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[0 /* X1 */] <0.03930474f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.30359453f ? 
                         (data[35 /* X36 */] <-0.6266531f ? 
                             (data[23 /* X24 */] <0.18957625f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17110108f ? 
                             (data[21 /* X22 */] <0.11573294f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.2731638f ? 
                    1.0f : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.66069573f ? 
             (data[14 /* X15 */] <0.15758874f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.18568604f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3930338f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24438795f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.2835862f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.008854605f ? 
             (data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.79851043f ? 
                     (data[0 /* X1 */] <-0.0042181676f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.5918799f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[3 /* X4 */] <0.066753864f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32574746f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.54197854f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32133275f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.581615f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23736532f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44417885f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17424369f ? 
                         (data[25 /* X26 */] <-0.30643043f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28581768f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54214716f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17073266f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22747478f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44372204f ? 
                            0.0f : 
                            1.0f) : 
                         (data[31 /* X32 */] <0.062001973f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13215336f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33447462f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13653971f ? 
                                1.0f : 
                                0.0f) : 
                             (data[0 /* X1 */] <0.041843913f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06667324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.3437137f ? 
         (data[34 /* X35 */] <-0.4656299f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.86203843f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.04777203f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.062400408f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.096523196f ? 
                         (data[0 /* X1 */] <0.0027988723f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.052688092f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13406251f ? 
                         (data[10 /* X11 */] <-0.9754603f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47683892f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[0 /* X1 */] <0.058290146f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.4039665f ? 
                         (data[8 /* X9 */] <0.1022644f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (data[8 /* X9 */] <-0.065564804f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.009278495f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.21257149f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.513239f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17148076f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20715258f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22474372f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17143852f ? 
             (data[25 /* X26 */] <-0.0640593f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30293542f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <0.23185349f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06187863f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[34 /* X35 */] <-0.7292324f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25995034f ? 
             (data[31 /* X32 */] <0.06369213f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15919623f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16338684f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22513065f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15130244f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22216384f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.11599911f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[6 /* X7 */] <0.14336108f ? 
                             (data[3 /* X4 */] <-0.034788847f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[35 /* X36 */] <-0.72718847f ? 
                         (data[32 /* X33 */] <0.63922596f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22623874f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07019412f ? 
                 (data[8 /* X9 */] <-0.03393834f ? 
                     (data[30 /* X31 */] <0.145299f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.19398418f ? 
                     (data[30 /* X31 */] <0.06933005f ? 
                        1.0f : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.7439444f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21765037f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25574076f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[34 /* X35 */] <-0.581615f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23944245f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22753362f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15366286f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18498138f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0772778f ? 
                                 (data[30 /* X31 */] <0.11114893f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[33 /* X34 */] <-1.219341f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.22222759f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33559474f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.14411847f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104434505f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.5554556f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[32 /* X33 */] <-0.746449f ? 
                     (data[35 /* X36 */] <0.14411847f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10401523f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.12371709f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21431392f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18132971f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[10 /* X11 */] <-0.23042765f ? 
             (data[18 /* X19 */] <0.1786238f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21041523f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.34180272f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32519728f ? 
                 (data[19 /* X20 */] <0.093120016f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.37539905f ? 
                         (data[24 /* X25 */] <-0.25157133f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12590043f ? 
                                 (data[27 /* X28 */] <-0.2025448f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[32 /* X33 */] <-0.6626883f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[11 /* X12 */] <-0.36736587f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X4 */] <-0.64881927f ? 
                         (data[2 /* X3 */] <0.100968584f ? 
                             (data[18 /* X19 */] <0.0997795f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26454568f ? 
                            0.0f : 
                             (data[9 /* X10 */] <0.21409789f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5942998f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
             (data[3 /* X4 */] <-0.15686274f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36761993f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[30 /* X31 */] <0.06028613f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
             (data[3 /* X4 */] <-0.4905675f ? 
                 (data[30 /* X31 */] <0.2520173f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0058427127f ? 
             (data[33 /* X34 */] <-0.74303204f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1814623f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.14299814f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23942886f ? 
                 (data[35 /* X36 */] <-0.03181851f ? 
                     (data[11 /* X12 */] <-0.48642364f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.103849344f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[10 /* X11 */] <-0.1785993f ? 
             (data[13 /* X14 */] <0.0858791f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.80131745f ? 
                     (data[13 /* X14 */] <0.11529608f ? 
                         (data[2 /* X3 */] <-0.10213025f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[22 /* X23 */] <0.16352746f ? 
             (data[10 /* X11 */] <-0.73124576f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.008193144f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08208622f ? 
                     (data[12 /* X13 */] <0.2689293f ? 
                         (data[28 /* X29 */] <0.118205965f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20965664f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.16609621f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32906163f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2825148f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.9282593f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (data[19 /* X20 */] <-0.29638383f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28579542f ? 
                 (data[20 /* X21 */] <0.1629253f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.12123218f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.26130673f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31772724f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21699926f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1599929f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.17336392f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X3 */] <0.44007882f ? 
                    0.0f : 
                    1.0f))) : 
         (data[22 /* X23 */] <0.20758902f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3047977f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.45791835f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03698552f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32351157f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.19560312f ? 
             (data[20 /* X21 */] <0.23736532f ? 
                 (data[22 /* X23 */] <0.16397591f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4129094f ? 
                         (data[1 /* X2 */] <-0.17223752f ? 
                            1.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17550065f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[10 /* X11 */] <-0.6871651f ? 
            1.0f : 
             (data[22 /* X23 */] <0.099933445f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.09173761f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15094659f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13155027f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40531176f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                 (data[32 /* X33 */] <-0.27663386f ? 
                     (data[10 /* X11 */] <-0.7909387f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.28742093f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27057028f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.034663394f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[29 /* X30 */] <0.11072693f ? 
             (data[11 /* X12 */] <-0.9220976f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.043865893f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27816367f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5728453f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.40441442f ? 
                     (data[3 /* X4 */] <-0.85523456f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27307943f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08047578f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.35350487f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2857054f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.97324276f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3098815f ? 
                 (data[8 /* X9 */] <-0.18215923f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2128235f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.19252421f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.049617287f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.014202448f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2814006f ? 
                 (data[23 /* X24 */] <0.10240478f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20891096f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.8394477f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[3 /* X4 */] <0.058153223f ? 
             (data[8 /* X9 */] <-0.12638491f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.5470879f ? 
                     (data[13 /* X14 */] <0.09832918f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.32760584f ? 
                         (data[34 /* X35 */] <-0.77284735f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[14 /* X15 */] <0.13425995f ? 
                1.0f : 
                 (data[35 /* X36 */] <-1.0455506f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-1.2937703f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.357626f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30969384f ? 
                 (data[24 /* X25 */] <-0.39417195f ? 
                     (data[25 /* X26 */] <-0.4204874f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27981365f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14609288f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[1 /* X2 */] <-0.6316876f ? 
            1.0f : 
             (data[30 /* X31 */] <0.036771934f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.09084984f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.35347632f ? 
                         (data[16 /* X17 */] <-0.34609228f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.043741547f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15144952f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[35 /* X36 */] <-0.7544168f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1780636f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.11701234f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[23 /* X24 */] <0.103471495f ? 
             (data[30 /* X31 */] <0.1217848f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.15080865f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.026133977f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.805735f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13253944f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (data[3 /* X4 */] <-0.2772717f ? 
             (data[8 /* X9 */] <0.21907334f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36747444f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23429933f ? 
                 (data[17 /* X18 */] <-0.5962208f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3425979f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.13809043f ? 
                             (data[5 /* X6 */] <0.12524247f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2433022f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.13848116f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5564988f ? 
                     (data[23 /* X24 */] <0.078601785f ? 
                         (data[18 /* X19 */] <0.31893992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2591022f ? 
                 (data[32 /* X33 */] <-0.1931786f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48863298f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.14207545f ? 
                     (data[18 /* X19 */] <-0.2012829f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.102530584f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15031989f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2318699f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27919272f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20323576f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.08905957f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X5 */] <0.11151161f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17548539f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.2532635f ? 
                    1.0f : 
                     (data[19 /* X20 */] <0.41335106f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[3 /* X4 */] <-0.331113f ? 
             (data[25 /* X26 */] <-0.0070308065f ? 
                 (data[22 /* X23 */] <0.18896507f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.445419f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20013867f ? 
                0.0f : 
                 (data[19 /* X20 */] <0.3328147f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39273837f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15154721f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17039509f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12397598f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14536463f ? 
                                1.0f : 
                                 (data[25 /* X26 */] <0.2152645f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28764743f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                             (data[7 /* X8 */] <0.059177812f ? 
                                 (data[27 /* X28 */] <-0.84163564f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[8 /* X9 */] <-0.16822916f ? 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.102461636f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (data[15 /* X16 */] <0.07952537f ? 
             (data[20 /* X21 */] <0.012640757f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-1.0508274f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.12792592f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.27655867f ? 
                        0.0f : 
                        1.0f) : 
                     (data[18 /* X19 */] <-0.09532672f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4831578f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.25975183f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17020847f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2834139f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.37569883f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15734193f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.096089944f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17424369f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15240887f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13275889f ? 
             (data[30 /* X31 */] <0.119976014f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12561548f ? 
                     (data[25 /* X26 */] <-0.34444943f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.24434455f ? 
                             (data[32 /* X33 */] <-0.427273f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2070567f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[30 /* X31 */] <0.10686233f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18351415f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16510712f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24812964f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14174147f ? 
                         (data[27 /* X28 */] <-0.1257673f ? 
                             (data[13 /* X14 */] <0.16919868f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[8 /* X9 */] <0.03418019f ? 
                             (data[12 /* X13 */] <0.25916868f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43761548f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29682702f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2858811f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.31367064f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[29 /* X30 */] <0.11385223f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.005882273f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.156472f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.14746788f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (data[11 /* X12 */] <-0.4274795f ? 
             (data[29 /* X30 */] <0.119477764f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30294746f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26533395f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.44888425f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6685894f ? 
             (data[27 /* X28 */] <-0.15691034f ? 
                 (data[29 /* X30 */] <0.18448398f ? 
                     (data[20 /* X21 */] <0.15720291f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.06613642f ? 
             (data[13 /* X14 */] <0.036078785f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17438288f ? 
                 (data[32 /* X33 */] <0.1554587f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14073552f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.7371933f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[34 /* X35 */] <-1.0877318f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26658216f ? 
                             (data[1 /* X2 */] <-0.45228326f ? 
                                 (data[26 /* X27 */] <0.2911882f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13968176f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[20 /* X21 */] <0.011938492f ? 
            1.0f : 
             (data[20 /* X21 */] <0.08539515f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.14535774f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3502442f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.094553605f ? 
                         (data[30 /* X31 */] <0.23935579f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[32 /* X33 */] <0.079456165f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.03871809f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.27809665f ? 
                     (data[21 /* X22 */] <0.21185553f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18734632f ? 
                 (data[17 /* X18 */] <-0.51023823f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30513874f ? 
                         (data[15 /* X16 */] <0.08608165f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30147272f ? 
             (data[35 /* X36 */] <-0.806779f ? 
                 (data[29 /* X30 */] <0.1407298f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.20886278f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.21537517f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.067585394f ? 
                 (data[4 /* X5 */] <0.16253182f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[5 /* X6 */] <0.13029262f ? 
            0.0f : 
             (data[27 /* X28 */] <0.1794359f ? 
                 (data[15 /* X16 */] <0.04793605f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25698042f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.37730855f ? 
             (data[32 /* X33 */] <-0.487493f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.17367505f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.11072693f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22307673f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.1781163f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30969852f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01015714f ? 
                 (data[29 /* X30 */] <0.11072693f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11633543f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.31648687f ? 
                             (data[5 /* X6 */] <0.09921739f ? 
                                 (data[15 /* X16 */] <0.03735947f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5898621f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30293542f ? 
                     (data[20 /* X21 */] <0.1967664f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.50692594f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.209089f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.3239189f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.19833134f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21438095f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (data[20 /* X21 */] <0.17135248f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.5120515f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26631728f ? 
                     (data[10 /* X11 */] <-0.03532213f ? 
                         (data[8 /* X9 */] <-0.121519305f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.37886035f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[19 /* X20 */] <-0.39171693f ? 
             (data[35 /* X36 */] <-0.34599167f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.104492754f ? 
             (data[16 /* X17 */] <-0.4224031f ? 
                 (data[10 /* X11 */] <-0.22394912f ? 
                     (data[16 /* X17 */] <-0.6273479f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.1998584f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.06072905f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.9539892f ? 
                         (data[24 /* X25 */] <-0.10897072f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X2 */] <-0.36433265f ? 
                             (data[29 /* X30 */] <0.093710534f ? 
                                1.0f : 
                                0.0f) : 
                             (data[7 /* X8 */] <0.07772076f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23767996f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.61079466f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44059232f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[23 /* X24 */] <0.017600821f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.50936174f ? 
                 (data[0 /* X1 */] <-0.0027502552f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.8051351f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13486354f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22506468f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f)) : 
         (data[28 /* X29 */] <0.2195819f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15095481f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18091905f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (data[19 /* X20 */] <-0.1901555f ? 
             (data[28 /* X29 */] <0.2060651f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21613345f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.009814203f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5383544f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.13955826f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24020994f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[0 /* X1 */] <-0.4103207f ? 
             (data[35 /* X36 */] <-0.27059013f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.54371905f ? 
                 (data[24 /* X25 */] <0.19999729f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36094254f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.03493852f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30447203f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23808098f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.01842868f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[32 /* X33 */] <0.19318125f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23596078f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.029942805f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2151119f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[19 /* X20 */] <-0.1792603f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1566854f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07796131f ? 
                 (data[34 /* X35 */] <-0.4656299f ? 
                     (data[7 /* X8 */] <0.042732686f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3425979f ? 
                         (data[14 /* X15 */] <0.10991886f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24198705f ? 
                                1.0f : 
                                 (data[28 /* X29 */] <0.23354925f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2911142f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.08193703f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20965664f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16253182f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.026235817f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[22 /* X23 */] <0.112198f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12869698f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41377372f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6384176f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07743996f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.55064785f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <0.06425481f ? 
             (data[29 /* X30 */] <0.14089395f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23232675f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.24773014f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03885514f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[31 /* X32 */] <0.058525246f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20417081f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12474655f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.10018358f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.31444824f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.40968463f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15246375f ? 
                     (data[28 /* X29 */] <0.13172276f ? 
                        0.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.24868111f ? 
                            1.0f : 
                             (data[29 /* X30 */] <0.19562396f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[22 /* X23 */] <0.23257238f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X3 */] <-0.11564175f ? 
                     (data[2 /* X3 */] <-0.20629139f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.11968555f ? 
                             (data[12 /* X13 */] <0.25486675f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17831181f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58678806f ? 
                             (data[27 /* X28 */] <-1.1479851f ? 
                                 (data[32 /* X33 */] <0.6227265f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7201893f ? 
                                    0.0f : 
                                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.32338372f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                        1.0f)))) : 
         (data[23 /* X24 */] <0.025601195f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67808235f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27286097f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05739667f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.1266183f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18412058f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.32552028f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.06804212f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.7041491f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1780636f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.98596966f ? 
                 (data[17 /* X18 */] <-0.53480464f ? 
                     (data[5 /* X6 */] <0.1222775f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.23277855f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2921418f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
        0.010869565f : 
         (data[24 /* X25 */] <-0.1267958f ? 
             (data[22 /* X23 */] <0.12173711f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.14735909f ? 
                 (data[16 /* X17 */] <-0.39831212f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.09117238f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20097801f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.37954575f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[2 /* X3 */] <-0.001404316f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2339995f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[6 /* X7 */] <0.07776732f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.069251455f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.1669308f ? 
             (data[9 /* X10 */] <-0.7983703f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1965367f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.19327208f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19069631f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.47862765f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[29 /* X30 */] <0.11010187f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.32065535f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16253182f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17817608f ? 
                             (data[23 /* X24 */] <0.042214047f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43147114f ? 
                                     (data[21 /* X22 */] <0.12078617f ? 
                                         (data[35 /* X36 */] <0.0148925f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.30390605f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24340416f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21127221f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23467761f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11681359f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22646418f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17781967f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[30 /* X31 */] <0.10686233f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11407541f ? 
                 (data[30 /* X31 */] <0.0889784f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06317482f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2926202f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17127813f ? 
                     (data[7 /* X8 */] <0.07601066f ? 
                         (data[1 /* X2 */] <-0.25975183f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.82422173f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.37153104f ? 
             (data[6 /* X7 */] <0.09308391f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <0.010154299f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[30 /* X31 */] <0.036319736f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.6811097f ? 
                 (data[12 /* X13 */] <0.2119552f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10240478f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04337088f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31249937f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1692232f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5506711f ? 
                 (data[17 /* X18 */] <-0.62692887f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.00499399f ? 
             (data[18 /* X19 */] <-0.14209875f ? 
                 (data[18 /* X19 */] <-0.31714582f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.13809043f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.04333431f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2997552f ? 
            0.0f : 
             (data[4 /* X5 */] <0.15289141f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
         (data[11 /* X12 */] <-0.36340982f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
             (data[18 /* X19 */] <0.13853347f ? 
                 (data[9 /* X10 */] <-0.11211538f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13227284f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.37357983f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                         (data[7 /* X8 */] <0.06844178f ? 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.16607536f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.7681469f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.124429345f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21765037f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-4.0119054E-4f ? 
             (data[7 /* X8 */] <0.03887632f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.24974963f ? 
                     (data[29 /* X30 */] <0.10406238f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.057233524f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19363156f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.15035895f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09391786f ? 
             (data[4 /* X5 */] <0.115400925f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.16803375f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062240645f ? 
                        1.0f : 
                        0.0f) : 
                     (data[20 /* X21 */] <0.0786536f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-1.0296458f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[23 /* X24 */] <0.106671646f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21873437f ? 
                     (data[31 /* X32 */] <0.06879635f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.2663217f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[2 /* X3 */] <-0.017400082f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.46295586f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.12792592f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42268535f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04814976f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3156353f ? 
             (data[34 /* X35 */] <-0.581615f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[15 /* X16 */] <0.0491281f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.10954105f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15289141f ? 
                     (data[10 /* X11 */] <-0.23413038f ? 
                         (data[29 /* X30 */] <0.096531786f ? 
                            1.0f : 
                            0.0f) : 
                         (data[15 /* X16 */] <0.18863332f ? 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.15351461f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.0964876f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[33 /* X34 */] <0.2112427f ? 
                                0.0f : 
                                 (data[25 /* X26 */] <-0.12652045f ? 
                                    0.0f : 
                                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.34964478f ? 
                                        1.0f : 
                                        0.0f))))) : 
                     (data[27 /* X28 */] <-0.6155643f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.17720068f ? 
                             (data[28 /* X29 */] <0.13868062f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16788761f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.4445417f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21076871f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24132642f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.19252421f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2521194f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24463157f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1971563f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2670969f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[18 /* X19 */] <-0.44110572f ? 
             (data[34 /* X35 */] <-0.2863802f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.98596966f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <0.3798789f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.46925518f ? 
                 (data[14 /* X15 */] <0.115779065f ? 
                     (data[27 /* X28 */] <-0.2311686f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20334148f ? 
                         (data[26 /* X27 */] <-0.111938074f ? 
                             (data[9 /* X10 */] <-0.22120513f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[19 /* X20 */] <-0.1792603f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
             (data[32 /* X33 */] <-0.38132855f ? 
                 (data[25 /* X26 */] <-0.42999217f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.05641859f ? 
                         (data[15 /* X16 */] <0.17474207f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2653629f ? 
                     (data[33 /* X34 */] <-0.5906132f ? 
                         (data[22 /* X23 */] <0.1090183f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30949032f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21573696f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08339615f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[31 /* X32 */] <0.048191473f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.35491684f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.062240645f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.204372f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40008956f ? 
                         (data[25 /* X26 */] <-0.033612408f ? 
                             (data[25 /* X26 */] <-0.13498664f ? 
                                0.0f : 
                                 (data[27 /* X28 */] <0.09174997f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[26 /* X27 */] <-0.1274699f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.284832f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32244074f ? 
                                    1.0f : 
                                     (data[0 /* X1 */] <0.11418054f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)))))) : 
         (data[3 /* X4 */] <-0.15858287f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25801f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.105114065f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12569475f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.31887946f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20363483f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.11274088f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.009406994f ? 
                 (data[27 /* X28 */] <-0.16127847f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3694183f ? 
                     (data[9 /* X10 */] <-0.20565858f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.17406401f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1463623f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[31 /* X32 */] <0.0559418f ? 
                 (data[28 /* X29 */] <0.0776556f ? 
                     (data[27 /* X28 */] <-0.07391582f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27574268f ? 
                     (data[1 /* X2 */] <-0.21599467f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2263403f ? 
                             (data[16 /* X17 */] <-0.42637762f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.116358444f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                             (data[4 /* X5 */] <0.08790273f ? 
                                 (data[23 /* X24 */] <0.17750162f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[20 /* X21 */] <0.34158134f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10182099f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                 (data[1 /* X2 */] <-0.37068936f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17416154f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.22222759f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42342892f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24114428f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.22454269f ? 
                     (data[32 /* X33 */] <0.20809601f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.64962333f ? 
             (data[27 /* X28 */] <-0.24864113f ? 
                 (data[34 /* X35 */] <-0.7569484f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.581615f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23084588f ? 
                 (data[34 /* X35 */] <-0.97454745f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.13572931f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11947224f ? 
                             (data[12 /* X13 */] <0.08230819f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
                0.0f : 
                1.0f)) : 
        0.007874016f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[17 /* X18 */] <-0.5962208f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.5277643f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07892934f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66638935f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.2910327f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.008854605f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10075723f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16202313f ? 
             (data[8 /* X9 */] <-0.38912782f ? 
                 (data[6 /* X7 */] <0.20540558f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.79971075f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.14856394f ? 
            0.0f : 
             (data[28 /* X29 */] <0.17790513f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.15656324f ? 
             (data[8 /* X9 */] <-0.07286321f ? 
                 (data[7 /* X8 */] <0.059443593f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.23046817f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.73544306f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                     (data[16 /* X17 */] <-0.65247184f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37079552f ? 
                            1.0f : 
                            0.0f) : 
                         (data[32 /* X33 */] <-0.49289796f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20931515f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31628796f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.21138293f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[0 /* X1 */] <-0.15706073f ? 
             (data[4 /* X5 */] <0.18609728f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42591944f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.121415034f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5525084f ? 
                         (data[34 /* X35 */] <0.4938832f ? 
                             (data[20 /* X21 */] <0.28764743f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.20158605f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X4 */] <-0.63677835f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.4605585f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.30169165f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[34 /* X35 */] <-0.35228083f ? 
             (data[29 /* X30 */] <0.16823243f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.63307047f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.35976872f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.07925358f ? 
                 (data[17 /* X18 */] <-0.5255123f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11808914f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-1.1397402f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29151273f ? 
                 (data[12 /* X13 */] <0.1185236f ? 
                     (data[26 /* X27 */] <-0.096692026f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.10536383f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13012274f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04872651f ? 
                                1.0f : 
                                 (data[11 /* X12 */] <-0.0148706315f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[35 /* X36 */] <-1.0084473f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6412031f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7572272f ? 
                                 (data[30 /* X31 */] <0.09750324f ? 
                                     (data[32 /* X33 */] <-0.18863675f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.032054946f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05417834f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                 (data[19 /* X20 */] <-1.5084763f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2573292f ? 
             (data[21 /* X22 */] <0.037810475f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.7608647f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10240478f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.21012409f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.2695009f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16464314f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33371854f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10140455f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23701419f ? 
         (data[34 /* X35 */] <-0.55525476f ? 
             (data[15 /* X16 */] <0.051512197f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.18247664f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.08905957f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[10 /* X11 */] <-1.059172f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24536687f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37697992f ? 
                 (data[0 /* X1 */] <-0.40267074f ? 
                     (data[27 /* X28 */] <-0.178751f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16472961f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.08608165f ? 
                             (data[20 /* X21 */] <0.12584576f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.09219228f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36331043f ? 
                                0.0f : 
                                 (data[32 /* X33 */] <-0.37954575f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[34 /* X35 */] <-0.17039509f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
                 (data[8 /* X9 */] <0.02444897f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24001433f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[34 /* X35 */] <-0.05177397f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23534031f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.43600562f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.29199708f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.26966947f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17148076f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15692613f ? 
                 (data[27 /* X28 */] <-0.11759715f ? 
                     (data[19 /* X20 */] <-0.004936895f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081163436f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4792365f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15662444f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.03601555f ? 
             (data[21 /* X22 */] <0.10027996f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0069178673f ? 
             (data[25 /* X26 */] <-0.54642534f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1247053f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.14556904f ? 
                         (data[17 /* X18 */] <0.21866974f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[9 /* X10 */] <-0.19108371f ? 
                0.0f : 
                1.0f)) : 
        0.013422819f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[34 /* X35 */] <-0.7292324f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.09737891f ? 
             (data[5 /* X6 */] <0.10624725f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.08608165f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20682366f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.010570516f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (data[27 /* X28 */] <-0.6199324f ? 
                 (data[4 /* X5 */] <0.10683167f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16335207f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.07872541f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20397407f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.117697425f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[34 /* X35 */] <-0.68442f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.23798531f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.21440266f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34179622f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33474568f ? 
                 (data[23 /* X24 */] <0.100271344f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.63545084f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27618086f ? 
                             (data[30 /* X31 */] <0.10927341f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f) : 
             (data[35 /* X36 */] <-0.6559759f ? 
                 (data[0 /* X1 */] <0.024623211f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12885813f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9883512f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.52645594f ? 
                 (data[35 /* X36 */] <-0.7607003f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20115387f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2380233f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
             (data[3 /* X4 */] <-0.23598862f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1595535f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.114910446f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3777278f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23322818f ? 
                         (data[7 /* X8 */] <0.03759087f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.14304225f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.32039273f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19126529f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1669308f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15540434f ? 
                 (data[10 /* X11 */] <-0.31464875f ? 
                     (data[1 /* X2 */] <-0.17223752f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.1475429f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.12633342f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.5232403f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0032345147f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17506775f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35067555f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (data[11 /* X12 */] <-0.4300423f ? 
             (data[2 /* X3 */] <-0.011001776f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21902032f ? 
                     (data[4 /* X5 */] <0.113258615f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28953996f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.39157882f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.083336964f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[2 /* X3 */] <-0.052590765f ? 
             (data[27 /* X28 */] <-0.14817408f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.092041895f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1878647f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.476174f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.26013225f ? 
                 (data[28 /* X29 */] <0.085639335f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17831181f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.4758556f ? 
                     (data[4 /* X5 */] <0.10254704f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19573504f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.08969316f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2848937f ? 
                            1.0f : 
                            0.0f) : 
                         (data[13 /* X14 */] <0.11146464f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.1292925f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.36198482f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.5251833f ? 
             (data[12 /* X13 */] <0.26262453f ? 
                 (data[16 /* X17 */] <-0.18144302f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.34339443f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.32592237f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.5019928f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11848832f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.04980218f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.07315f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31249377f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25679362f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31432354f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22238912f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38364333f ? 
                                     (data[0 /* X1 */] <-0.21468572f ? 
                                         (data[10 /* X11 */] <-0.34224245f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                     (data[3 /* X4 */] <0.13831118f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[32 /* X33 */] <0.6659014f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15544349f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (data[19 /* X20 */] <-0.3563075f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27148405f ? 
                 (data[28 /* X29 */] <0.11370037f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24420379f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X13 */] <0.2287364f ? 
             (data[9 /* X10 */] <-0.28339127f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19705391f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[19 /* X20 */] <-0.21194594f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.18311915f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5091137f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5085104f ? 
                 (data[0 /* X1 */] <-0.3670754f ? 
                     (data[28 /* X29 */] <0.14073396f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.28409126f ? 
                         (data[25 /* X26 */] <-0.4394969f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[2 /* X3 */] <-0.3645082f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.09138835f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2724571f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.12584017f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.062240645f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17687356f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26263905f ? 
                         (data[15 /* X16 */] <0.1523894f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.23884481f ? 
                                 (data[34 /* X35 */] <0.19021313f ? 
                                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28919652f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[9 /* X10 */] <-0.28339127f ? 
                                     (data[33 /* X34 */] <-0.4276375f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (data[24 /* X25 */] <-0.6793732f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.29512814f ? 
                                 (data[3 /* X4 */] <-0.25166842f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))))) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3635008f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20912714f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.06782715f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.3014234f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24565299f ? 
            0.0f : 
             (data[14 /* X15 */] <0.14749674f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.022235584f ? 
             (data[14 /* X15 */] <0.11289564f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4095304f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.68678993f ? 
                        1.0f : 
                        0.0f))) : 
             (data[17 /* X18 */] <-0.049617287f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07664282f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[25 /* X26 */] <-0.39553744f ? 
             (data[35 /* X36 */] <-0.16586573f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65926766f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.11840298f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.62589794f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                    1.0f : 
                     (data[3 /* X4 */] <0.19060305f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.16352746f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24659093f ? 
                         (data[25 /* X26 */] <-0.23039243f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-1.0747308f ? 
                                1.0f : 
                                 (data[25 /* X26 */] <-0.09378789f ? 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2998374f ? 
                                         (data[12 /* X13 */] <0.14180416f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (data[13 /* X14 */] <0.15144952f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (data[34 /* X35 */] <-1.2560962f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[34 /* X35 */] <-0.68442f ? 
             (data[35 /* X36 */] <-0.9156924f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.1857645f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.012444422f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.056887433f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.08608165f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31978703f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2949739f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.64965224f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13872269f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.45508578f ? 
             (data[21 /* X22 */] <0.09123832f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14259681f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.13614327f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5513231f ? 
             (data[10 /* X11 */] <-0.79406106f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16925232f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.6666971f ? 
                     (data[23 /* X24 */] <0.09387105f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1614597f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[7 /* X8 */] <0.0690845f ? 
             (data[5 /* X6 */] <0.07189673f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.07253672f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.020231834f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13867314f ? 
                     (data[15 /* X16 */] <0.05270425f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1047663f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.13018116f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1756994f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.64245796f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.15541115f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.8247117f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06425481f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21782123f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22228843f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.079976365f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31761885f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27653003f ? 
         (data[24 /* X25 */] <-0.7328484f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.13966146f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.24434455f ? 
                     (data[30 /* X31 */] <0.11986785f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.22451138f ? 
                            1.0f : 
                             (data[26 /* X27 */] <0.2911882f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[19 /* X20 */] <-0.31000283f ? 
                             (data[8 /* X9 */] <0.26772943f ? 
                                0.0f : 
                                1.0f) : 
                             (data[8 /* X9 */] <0.20544964f ? 
                                 (data[8 /* X9 */] <0.095191486f ? 
                                    0.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20302416f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (data[22 /* X23 */] <0.11628619f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.071534455f ? 
                            1.0f : 
                            0.0f) : 
                         (data[17 /* X18 */] <-0.68220335f ? 
                            1.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2212043f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57912844f ? 
                                     (data[2 /* X3 */] <-0.5564779f ? 
                                         (data[33 /* X34 */] <-0.059517078f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06260717f ? 
                                        0.0f : 
                                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14685759f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13335723f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26972893f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10371142f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.112874925f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.12987077f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07019412f ? 
                 (data[7 /* X8 */] <0.15513715f ? 
                     (data[12 /* X13 */] <0.28996634f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.43618006f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-1.0349051f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[3 /* X4 */] <0.26456854f ? 
            0.0f : 
             (data[14 /* X15 */] <0.13452134f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6332128f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10395722f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.20155951f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.106362686f ? 
             (data[34 /* X35 */] <-0.8926659f ? 
                 (data[0 /* X1 */] <0.2962315f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17774826f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.1702125f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X3 */] <0.05618044f ? 
                 (data[2 /* X3 */] <-0.25671172f ? 
                     (data[3 /* X4 */] <-0.29584742f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.117382154f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[21 /* X22 */] <0.09041636f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13520454f ? 
         (data[9 /* X10 */] <-0.3635531f ? 
             (data[10 /* X11 */] <-0.016635684f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37697992f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.10603052f ? 
                    1.0f : 
                    0.0f))) : 
         (data[32 /* X33 */] <-0.37730855f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.30896857f ? 
                 (data[31 /* X32 */] <0.054839637f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.445419f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2827566f ? 
                            0.0f : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.6513355f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36636466f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2344892f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.004591021f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.022336831f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17893799f ? 
             (data[10 /* X11 */] <-0.40534836f ? 
                 (data[21 /* X22 */] <0.1216511f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.40705106f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.5318506f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42059088f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.01935416f ? 
             (data[2 /* X3 */] <-0.18375604f ? 
                 (data[19 /* X20 */] <-0.24463157f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.16048811f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.10088559f ? 
                             (data[34 /* X35 */] <-0.21468031f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.626299f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6219962f ? 
                         (data[35 /* X36 */] <0.148935f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21409789f ? 
                                 (data[16 /* X17 */] <-0.40714094f ? 
                                    1.0f : 
                                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.56404316f ? 
                                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15071087f ? 
                                            0.0f : 
                                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.8500335f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f)) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.103524506f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08386723f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
             (data[3 /* X4 */] <-0.18162677f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-4.843866E-4f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6196772f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.74303204f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.14556904f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.46306843f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.2576965f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (data[12 /* X13 */] <0.3256722f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.05618044f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.685065f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08460626f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1487417f ? 
                 (data[16 /* X17 */] <-0.94386023f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.05976496f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.104492754f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.42668387f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X2 */] <-0.21599467f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22232267f ? 
                     (data[33 /* X34 */] <-0.19051358f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12540218f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.05512761f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-1.0074526f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.5980918f ? 
                             (data[15 /* X16 */] <0.34266046f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43208092f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27286097f ? 
                 (data[19 /* X20 */] <-0.31000283f ? 
                     (data[12 /* X13 */] <0.21849115f ? 
                         (data[26 /* X27 */] <0.020183364f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.118205965f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31047988f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.26262453f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.53192484f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2532699f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10969379f ? 
            0.0f : 
             (data[31 /* X32 */] <0.08306795f ? 
                 (data[2 /* X3 */] <-0.14606073f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08702103f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5986854f ? 
                     (data[10 /* X11 */] <-0.45717672f ? 
                         (data[28 /* X29 */] <0.2173291f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.23374626f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.20059167f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.36969745f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124272466f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06624362f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                     (data[3 /* X4 */] <-0.23598862f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[33 /* X34 */] <-1.1907625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[2 /* X3 */] <-0.2413408f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12104612f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08273969f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34913003f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.09138835f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.21067049f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3066543f ? 
                         (data[4 /* X5 */] <0.1282548f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26267892f ? 
                                 (data[33 /* X34 */] <-0.58266085f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23182845f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <0.5276243f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[13 /* X14 */] <0.26433024f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.03544778f ? 
                                 (data[8 /* X9 */] <0.9138823f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[31 /* X32 */] <0.042378727f ? 
             (data[15 /* X16 */] <0.03601555f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[11 /* X12 */] <-0.5120515f ? 
             (data[4 /* X5 */] <0.11647208f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.36034846f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.3057112f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5725679f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.24390632f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.117653586f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.021661445f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19101587f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.99433964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[28 /* X29 */] <0.08272439f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.20478973f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3905834f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.33980846f ? 
             (data[3 /* X4 */] <-0.1248388f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.09239581f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.0372076f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19055995f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1621409f ? 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28667715f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.19388235f ? 
                                     (data[4 /* X5 */] <0.08070071f ? 
                                        1.0f : 
                                         (data[12 /* X13 */] <0.13008758f ? 
                                            1.0f : 
                                             (data[3 /* X4 */] <-0.094121076f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2697421f ? 
                                0.0f : 
                                 (data[1 /* X2 */] <-0.102226086f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.46159035f ? 
                            0.0f : 
                             (data[26 /* X27 */] <0.6586537f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04079741f ? 
             (data[35 /* X36 */] <-0.9383322f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28232625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19349267f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14967795f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.23324975f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.20008679f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19684935f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[35 /* X36 */] <-0.8046845f ? 
             (data[31 /* X32 */] <0.16186295f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.86697596f ? 
             (data[25 /* X26 */] <-0.24464954f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.27620828f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.07394828f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33523712f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.35074365f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.35140738f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24999468f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45038757f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.35789776f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40819782f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23151173f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (data[17 /* X18 */] <-0.8197177f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25893593f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36726618f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.45406008f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20456986f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.29512814f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[17 /* X18 */] <-0.21413659f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06667324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[35 /* X36 */] <-0.4130153f ? 
            0.0f : 
             (data[31 /* X32 */] <0.08048451f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.21894673f ? 
                     (data[33 /* X34 */] <-0.93355566f ? 
                         (data[7 /* X8 */] <0.104434505f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.13596304f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.025279695f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.042959794f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2529686f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17641996f ? 
                         (data[13 /* X14 */] <0.10909282f ? 
                            1.0f : 
                             (data[12 /* X13 */] <0.24371022f ? 
                                0.0f : 
                                 (data[12 /* X13 */] <0.3125598f ? 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4394319f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[12 /* X13 */] <0.3332147f ? 
                                         (data[4 /* X5 */] <0.1419422f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)))) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6487759f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16349812f ? 
                        1.0f : 
                         (data[26 /* X27 */] <-0.04377234f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.012233595f ? 
                                0.0f : 
                                1.0f)))))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[11 /* X12 */] <-0.50692594f ? 
             (data[0 /* X1 */] <-0.27634814f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19051358f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17752802f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.20929882f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[25 /* X26 */] <-0.6319681f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.00810628f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.29738382f ? 
            0.0f : 
             (data[17 /* X18 */] <0.3390429f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[20 /* X21 */] <0.13202567f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2605635f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08048141f ? 
                     (data[11 /* X12 */] <-0.23144758f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2106624f ? 
                            1.0f : 
                            0.0f) : 
                         (data[34 /* X35 */] <-1.3287127f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8282476f ? 
                                 (data[16 /* X17 */] <-1.0112498f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.15838677f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-1.1759723f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3025258f ? 
                 (data[14 /* X15 */] <0.09195575f ? 
                     (data[33 /* X34 */] <-0.41872773f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.31475857f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[10 /* X11 */] <-0.5284407f ? 
             (data[27 /* X28 */] <-0.19185542f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21782123f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38177866f ? 
                     (data[12 /* X13 */] <0.16805302f ? 
                         (data[27 /* X28 */] <-0.3111812f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[12 /* X13 */] <0.2531674f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23736532f ? 
             (data[27 /* X28 */] <-0.29232246f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09598517f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1335132f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.4023653f ? 
        0.011904762f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35128725f ? 
             (data[34 /* X35 */] <0.008483911f ? 
                 (data[25 /* X26 */] <-0.31593516f ? 
                     (data[6 /* X7 */] <0.120313406f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13191432f ? 
                         (data[3 /* X4 */] <-0.20846657f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16267134f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23058793f ? 
                     (data[21 /* X22 */] <0.12603785f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18158428f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4286429f ? 
                        0.0f : 
                        1.0f))) : 
             (data[19 /* X20 */] <0.09856763f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.311852f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.035287503f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17818996f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.06713635f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22752954f ? 
                     (data[11 /* X12 */] <-0.36340982f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47424507f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16643088f ? 
                 (data[27 /* X28 */] <-0.15423362f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.10136194f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17573313f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43475798f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <-0.15901898f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[14 /* X15 */] <0.14426188f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.6370015f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0069178673f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.019421378f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24767067f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.23750539f ? 
                 (data[27 /* X28 */] <0.2755348f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3620089f ? 
                        1.0f : 
                         (data[34 /* X35 */] <0.3251776f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.89545095f ? 
             (data[11 /* X12 */] <-1.1732508f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.39928883f ? 
                 (data[25 /* X26 */] <-0.29841852f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032174926f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4023653f ? 
             (data[31 /* X32 */] <0.05465008f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.22693396f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20907642f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5207411f ? 
                         (data[20 /* X21 */] <0.09992537f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14296728f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X8 */] <0.104434505f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2580976f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.13051547f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.49641958f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22305913f ? 
             (data[25 /* X26 */] <-0.26128286f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11759715f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10115641f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24940112f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10957632f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18183415f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.24864113f ? 
             (data[22 /* X23 */] <0.17442928f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26322055f ? 
                 (data[5 /* X6 */] <0.03296614f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.45508578f ? 
             (data[26 /* X27 */] <-0.08393281f ? 
                 (data[31 /* X32 */] <0.106318936f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27933788f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[13 /* X14 */] <0.10386255f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25660354f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5484963f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[17 /* X18 */] <-0.5962208f ? 
             (data[33 /* X34 */] <-0.319117f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.25432587f ? 
                 (data[26 /* X27 */] <0.2417613f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3737154f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[17 /* X18 */] <-0.10028559f ? 
             (data[13 /* X14 */] <0.112162605f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.29266393f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.106671646f ? 
                 (data[22 /* X23 */] <0.104243636f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.9100481f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.001404316f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5713531f ? 
             (data[31 /* X32 */] <0.06369213f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.030919371f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.034699563f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                 (data[34 /* X35 */] <-0.4656299f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.607458f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07297877f ? 
                         (data[7 /* X8 */] <0.03759087f ? 
                            0.0f : 
                            1.0f) : 
                         (data[35 /* X36 */] <0.11060666f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.13729183f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[4 /* X5 */] <0.12557691f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34557918f ? 
                     (data[31 /* X32 */] <0.023648769f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.2772188f ? 
                     (data[2 /* X3 */] <0.36969745f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.47327697f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09898852f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.25228345f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <0.09788605f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.36198482f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18987969f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.37140337f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26434147f ? 
             (data[3 /* X4 */] <-0.6384985f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21999042f ? 
                        1.0f : 
                         (data[20 /* X21 */] <0.30668667f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
             (data[32 /* X33 */] <-0.27663386f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.05465008f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2289347f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15585268f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[8 /* X9 */] <-0.16530979f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.13596304f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4583401f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47240987f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.20063864f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
            0.0f : 
             (data[15 /* X16 */] <0.13376364f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.10240478f ? 
             (data[31 /* X32 */] <0.021065325f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3518655f ? 
                 (data[16 /* X17 */] <-0.5750247f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25288016f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.08569055f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.04037551f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3796286f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.13003317f ? 
            1.0f : 
             (data[23 /* X24 */] <0.101338066f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.08877242f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11794443f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24029337f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.14759608f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.43018255f ? 
                 (data[0 /* X1 */] <-0.25432587f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.007445252f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29166803f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3434858f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31825382f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[6 /* X7 */] <0.07776732f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05985655f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.37109816f ? 
             (data[8 /* X9 */] <-0.2820844f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.18036613f ? 
                     (data[32 /* X33 */] <-0.71661943f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.21241269f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.63293225f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.14421438f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09856861f ? 
                     (data[28 /* X29 */] <0.12271156f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4938832f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14668272f ? 
                                0.0f : 
                                 (data[26 /* X27 */] <0.16869971f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27633116f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.11645543f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[23 /* X24 */] <0.13962664f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.04333431f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.42336285f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[6 /* X7 */] <0.050112363f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1302688f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13215336f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5120515f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22257386f ? 
                 (data[21 /* X22 */] <0.13570528f ? 
                     (data[10 /* X11 */] <0.39799118f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.8513807f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.64238137f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.16688038f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[16 /* X17 */] <-1.0042729f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.45490506f ? 
                 (data[2 /* X3 */] <-0.058989074f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
             (data[33 /* X34 */] <0.11908727f ? 
                 (data[5 /* X6 */] <0.09362668f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.5750247f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26278105f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6406242f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09457028f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.22378415f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31883112f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X3 */] <-0.5708536f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.089031614f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.71989846f ? 
                         (data[5 /* X6 */] <0.08105687f ? 
                             (data[30 /* X31 */] <0.17653745f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14830601f ? 
                                0.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2575328f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9537033f ? 
             (data[35 /* X36 */] <-0.50936174f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19555861f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21027827f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.09092285f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.27129358f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2532699f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (data[35 /* X36 */] <-0.7313774f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.14153238f ? 
                     (data[8 /* X9 */] <0.26772943f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05176186f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3909575f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.023224842f ? 
                        1.0f : 
                        0.0f)))) : 
        0.18181819f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[3 /* X4 */] <-0.53529084f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.1008047f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0675673f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3156371f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06043438f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2788496f ? 
                     (data[19 /* X20 */] <-0.048517745f ? 
                         (data[23 /* X24 */] <0.05394652f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.86451834f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[33 /* X34 */] <-1.219341f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.016384032f ? 
             (data[35 /* X36 */] <-0.119787f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.029592773f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.13686465f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.08969738f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[29 /* X30 */] <0.118227646f ? 
                     (data[18 /* X19 */] <-0.31409332f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2712976f ? 
                         (data[22 /* X23 */] <0.13082196f ? 
                             (data[30 /* X31 */] <0.1510871f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3298452f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07637755f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30508092f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17829478f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.07117359f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1727327f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.037335075f ? 
             (data[2 /* X3 */] <-0.065387376f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[25 /* X26 */] <-0.0640593f ? 
             (data[35 /* X36 */] <-0.2747791f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3377059f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24892698f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5120515f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19398418f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.34752887f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22623874f ? 
            0.0f : 
             (data[15 /* X16 */] <0.10515444f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[16 /* X17 */] <-0.24434455f ? 
             (data[33 /* X34 */] <-0.07143633f ? 
                 (data[7 /* X8 */] <0.06715632f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.24940193f ? 
                     (data[33 /* X34 */] <9.0310065E-4f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.07113671f ? 
                 (data[28 /* X29 */] <0.0754166f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31170717f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36318877f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.13732025f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.71447355f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0075365924f ? 
         (data[23 /* X24 */] <0.103471495f ? 
             (data[28 /* X29 */] <0.063012406f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <0.06640574f ? 
                 (data[22 /* X23 */] <0.16824692f ? 
                     (data[31 /* X32 */] <0.13215336f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.15035895f ? 
                     (data[25 /* X26 */] <-0.25450194f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16613632f ? 
                         (data[23 /* X24 */] <0.11798135f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27777344f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))) : 
        0.025f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24795657f ? 
             (data[9 /* X10 */] <-0.16679224f ? 
                 (data[23 /* X24 */] <0.0725122f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26626307f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2997552f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2793594f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37697992f ? 
                 (data[10 /* X11 */] <-0.7292756f ? 
                     (data[30 /* X31 */] <0.12483296f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.034082983f ? 
                         (data[3 /* X4 */] <-0.23598862f ? 
                            1.0f : 
                            0.0f) : 
                         (data[26 /* X27 */] <0.005381718f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3722568f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <-0.3460768f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                 (data[21 /* X22 */] <0.16439338f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.18869321f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.10897072f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[9 /* X10 */] <-0.28339127f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17090501f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.23828402f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13367859f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[23 /* X24 */] <0.09920463f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28231022f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17069963f ? 
                     (data[28 /* X29 */] <0.072555736f ? 
                         (data[24 /* X25 */] <-0.013903638f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.07004859f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19151828f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.176331f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.28012115f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[22 /* X23 */] <0.18260565f ? 
                 (data[30 /* X31 */] <0.12868589f ? 
                     (data[3 /* X4 */] <0.042837776f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.12699847f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26786485f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21042351f ? 
                            1.0f : 
                             (data[33 /* X34 */] <-0.6939929f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[35 /* X36 */] <0.23388089f ? 
                             (data[25 /* X26 */] <-0.027281696f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.74966776f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22867648f ? 
                 (data[8 /* X9 */] <-0.06297886f ? 
                     (data[25 /* X26 */] <-0.53498995f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.021277335f ? 
                            0.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21784444f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.010976235f ? 
                     (data[14 /* X15 */] <0.14749674f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.040888797f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22161452f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31273213f ? 
             (data[24 /* X25 */] <-0.23968795f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.21599467f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17967033f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.6043713f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.05478658f ? 
                             (data[24 /* X25 */] <-0.14635612f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.53031486f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.30991027f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.6377813f ? 
             (data[24 /* X25 */] <-0.7043089f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.040951945f ? 
             (data[10 /* X11 */] <-0.6839258f ? 
                 (data[27 /* X28 */] <-0.29232246f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.28035906f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19532447f ? 
                 (data[35 /* X36 */] <-0.7855711f ? 
                     (data[18 /* X19 */] <0.28418162f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05356754f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.8768498f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[12 /* X13 */] <0.31542695f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                 (data[24 /* X25 */] <-0.47800946f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.31102428f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2031496f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[3 /* X4 */] <-0.10353878f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15787403f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.30768272f ? 
                 (data[23 /* X24 */] <0.06613642f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.09600448f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05270425f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.08712849f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34281376f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[25 /* X26 */] <-0.46444687f ? 
             (data[23 /* X24 */] <0.13120613f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.35140738f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14640854f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19956253f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09530533f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.910261f ? 
                     (data[15 /* X16 */] <0.067008846f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.262425f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08102799f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30960706f ? 
                            0.0f : 
                             (data[18 /* X19 */] <-0.02850952f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.058664497f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[3 /* X4 */] <-0.15170236f ? 
             (data[9 /* X10 */] <-0.50201446f ? 
                 (data[23 /* X24 */] <0.14086369f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18851964f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0024956784f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.33179328f ? 
                    0.0f : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.05926052f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.97334826f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.15796049f ? 
                 (data[21 /* X22 */] <0.099665366f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.1254962f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1329739f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.36660117f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[14 /* X15 */] <0.24249284f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2537661f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.11029732f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19062002f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (data[3 /* X4 */] <-0.21878733f ? 
             (data[14 /* X15 */] <0.17777272f ? 
                 (data[24 /* X25 */] <-0.0012899181f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17781967f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20480956f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4628593f ? 
                            0.0f : 
                            1.0f) : 
                         (data[19 /* X20 */] <0.3277382f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[23 /* X24 */] <0.11093851f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <1.033206f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.038995676f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.11769597f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.11769251f ? 
             (data[16 /* X17 */] <-0.40968463f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16434713f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1809392f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1352604f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.05465008f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                         (data[17 /* X18 */] <-0.7067698f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.101912454f ? 
                                1.0f : 
                                 (data[6 /* X7 */] <0.13237645f ? 
                                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23202792f ? 
                                         (data[9 /* X10 */] <-0.042068273f ? 
                                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12108297f ? 
                                                0.0f : 
                                                 (data[26 /* X27 */] <-0.08670717f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            0.0f) : 
                                         (data[23 /* X24 */] <0.19091065f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f))) : 
                        1.0f))) : 
             (data[27 /* X28 */] <-0.17001474f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11920258f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[6 /* X7 */] <0.101167664f ? 
             (data[15 /* X16 */] <0.16952513f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.22509176f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.046645507f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.85585195f ? 
                         (data[32 /* X33 */] <0.10369266f ? 
                             (data[25 /* X26 */] <-0.19237342f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.81358516f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42558223f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2342934f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.363761f ? 
             (data[35 /* X36 */] <-0.84774256f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90024954f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22421332f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (data[21 /* X22 */] <0.088820055f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.20773256f ? 
                     (data[18 /* X19 */] <-0.16214392f ? 
                         (data[0 /* X1 */] <-0.08548826f ? 
                            1.0f : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.18753445f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.553346f ? 
             (data[27 /* X28 */] <-0.29232246f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
        0.75f : 
         (data[26 /* X27 */] <0.058013495f ? 
             (data[15 /* X16 */] <0.082505494f ? 
                1.0f : 
                 (data[33 /* X34 */] <-1.219341f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.578236f ? 
                         (data[15 /* X16 */] <0.13469492f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17273018f ? 
                                0.0f : 
                                 (data[16 /* X17 */] <-0.16111253f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f))) : 
             (data[9 /* X10 */] <-0.5360225f ? 
                 (data[13 /* X14 */] <0.44416472f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X1 */] <-0.25432587f ? 
                     (data[3 /* X4 */] <-0.6350582f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.9254262f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24465388f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.05575889f ? 
                                 (data[23 /* X24 */] <0.11454779f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3235843f ? 
             (data[15 /* X16 */] <0.05747245f ? 
                 (data[13 /* X14 */] <0.12413376f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.025535045f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29599315f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23523934f ? 
                     (data[14 /* X15 */] <0.08980662f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.1117875f ? 
                             (data[18 /* X19 */] <0.18530552f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07153982f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2336597f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.073691644f ? 
                 (data[3 /* X4 */] <-0.4768065f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.0036785947f ? 
                     (data[25 /* X26 */] <-0.13534492f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1254823f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.13864785f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24290396f ? 
                            1.0f : 
                             (data[12 /* X13 */] <0.304236f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04663628f ? 
                         (data[24 /* X25 */] <0.011197102f ? 
                             (data[29 /* X30 */] <0.27774286f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24714196f ? 
             (data[15 /* X16 */] <0.05032015f ? 
                 (data[6 /* X7 */] <0.061556257f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.20516525f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.14939559f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33320573f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17182423f ? 
                 (data[34 /* X35 */] <0.1142956f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.11684231f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[19 /* X20 */] <-0.3399647f ? 
             (data[26 /* X27 */] <0.16487195f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.10007939f ? 
             (data[32 /* X33 */] <-0.27290517f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23433691f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.062007103f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25152186f ? 
                 (data[35 /* X36 */] <-0.6601649f ? 
                     (data[0 /* X1 */] <0.027455833f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1420022f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13567944f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.050776795f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5306512f ? 
                                 (data[3 /* X4 */] <-0.07178092f ? 
                                     (data[31 /* X32 */] <0.042595666f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37083346f ? 
                     (data[11 /* X12 */] <-0.05587524f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67681617f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.39197317f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.15775396f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1553861f ? 
                             (data[35 /* X36 */] <-0.80091447f ? 
                                 (data[32 /* X33 */] <0.164775f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105398595f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[29 /* X30 */] <0.11166452f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.016946914f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.2351448f ? 
                 (data[15 /* X16 */] <0.11945904f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.14216706f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.13337654f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.007874016f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.21537517f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.33870858f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18875895f ? 
                 (data[32 /* X33 */] <-0.8806819f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3075162f ? 
                         (data[32 /* X33 */] <-0.39009136f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                 (data[16 /* X17 */] <-0.5728893f ? 
                                     (data[11 /* X12 */] <-0.21169275f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04084907f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13315864f ? 
                     (data[35 /* X36 */] <-0.2412673f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[27 /* X28 */] <-0.14599001f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21120371f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.10662924f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.009602506f ? 
                 (data[35 /* X36 */] <-0.45909402f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22850308f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44492635f ? 
                             (data[11 /* X12 */] <-0.3955779f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17085648f ? 
                                     (data[19 /* X20 */] <-0.26406476f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[16 /* X17 */] <-0.5881427f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21190569f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[27 /* X28 */] <0.15357688f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43919513f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <0.011190438f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.047874503f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39134806f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5092299f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3532501f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.347765f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5965279f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.37534317f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.01132689f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32574746f ? 
                 (data[2 /* X3 */] <0.017790603f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.11261545f ? 
                         (data[26 /* X27 */] <-0.17324734f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[16 /* X17 */] <-0.7530832f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65926766f ? 
                 (data[7 /* X8 */] <0.053319257f ? 
                     (data[17 /* X18 */] <-0.44882208f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.05618044f ? 
             (data[1 /* X2 */] <-0.21599467f ? 
                 (data[2 /* X3 */] <-0.6017704f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20722099f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.16630793f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[22 /* X23 */] <0.16352746f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.7530832f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.08540854f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2188779f ? 
                                0.0f : 
                                 (data[3 /* X4 */] <0.27041698f ? 
                                     (data[2 /* X3 */] <-0.11225497f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7410439f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.35342342f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.07948099f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90024954f ? 
             (data[28 /* X29 */] <0.05850681f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67485505f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.06395866f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07515515f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22938576f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.10734844f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13029173f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[25 /* X26 */] <-0.15435442f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[0 /* X1 */] <-0.08181788f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (data[28 /* X29 */] <0.12609076f ? 
                 (data[3 /* X4 */] <-0.008931756f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22753362f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48598292f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24659006f ? 
                     (data[23 /* X24 */] <0.055469256f ? 
                        0.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3250468f ? 
                             (data[16 /* X17 */] <-0.48853913f ? 
                                 (data[21 /* X22 */] <0.13468987f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.37818f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.63757706f ? 
                 (data[32 /* X33 */] <-0.25509194f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42643592f ? 
                         (data[10 /* X11 */] <-0.7163185f ? 
                             (data[31 /* X32 */] <0.09945229f ? 
                                0.0f : 
                                1.0f) : 
                             (data[17 /* X18 */] <-0.6969432f ? 
                                1.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.9064947f ? 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
                                         (data[17 /* X18 */] <-0.2370593f ? 
                                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33415997f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                         (data[4 /* X5 */] <0.14196561f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[5 /* X6 */] <0.14825213f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[30 /* X31 */] <0.1480899f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.35690084f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.005381718f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29388347f ? 
             (data[25 /* X26 */] <-0.0640593f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30357227f ? 
                     (data[27 /* X28 */] <-0.21865605f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2433095f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.1213994f ? 
                                1.0f : 
                                 (data[3 /* X4 */] <-0.77366453f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20789221f ? 
                    0.0f : 
                     (data[17 /* X18 */] <0.25132173f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X2 */] <-0.15377824f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0571671f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.12652273f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09385076f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6489312f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1753857f ? 
                            0.0f : 
                             (data[8 /* X9 */] <-0.077856265f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f))) : 
        0.030927835f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.117653586f ? 
             (data[27 /* X28 */] <0.21438095f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.06720234f ? 
                     (data[13 /* X14 */] <0.15919623f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04659154f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2058012f ? 
                            1.0f : 
                            0.0f) : 
                         (data[30 /* X31 */] <0.15092851f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23613712f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.44772047f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39001456f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.062860444f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.7402755f ? 
         (data[10 /* X11 */] <-0.24014547f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.13202567f ? 
             (data[35 /* X36 */] <-0.34180272f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34958753f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.20775549f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                     (data[25 /* X26 */] <-0.22088768f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18686308f ? 
                             (data[23 /* X24 */] <0.07293253f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[16 /* X17 */] <-0.3829667f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06844178f ? 
                                 (data[7 /* X8 */] <0.04189955f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15071087f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4911221f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.07680359f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.097029924f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25480974f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.21065472f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.1084005f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <0.02160338f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.19318125f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28582156f ? 
             (data[27 /* X28 */] <-0.32726753f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.14283395f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X4 */] <0.2490874f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.11769597f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.13625507f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17261231f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27124906f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29049775f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.52866304f ? 
             (data[15 /* X16 */] <0.10038624f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5513231f ? 
             (data[33 /* X34 */] <-0.5334561f ? 
                 (data[27 /* X28 */] <-0.17001474f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.6652128f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24393974f ? 
                             (data[34 /* X35 */] <-0.34964478f ? 
                                 (data[22 /* X23 */] <0.14821562f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[17 /* X18 */] <-0.81731886f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.48702067f ? 
                         (data[11 /* X12 */] <-0.012087287f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49488753f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.13067819f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[15 /* X16 */] <0.058664497f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06650672f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11400849f ? 
         (data[21 /* X22 */] <0.11877421f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.07143633f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.111409046f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2263403f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17324339f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7916716f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06517956f ? 
                 (data[20 /* X21 */] <0.13186453f ? 
                     (data[4 /* X5 */] <0.12720068f ? 
                         (data[23 /* X24 */] <0.050040834f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.23174334f ? 
                     (data[13 /* X14 */] <0.19239645f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.061327036f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[32 /* X33 */] <-0.48509967f ? 
                         (data[5 /* X6 */] <0.17265826f ? 
                            0.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51217496f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[15 /* X16 */] <0.08608165f ? 
                             (data[26 /* X27 */] <0.046211217f ? 
                                0.0f : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3846531f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (data[0 /* X1 */] <-0.05061963f ? 
             (data[11 /* X12 */] <-0.5325538f ? 
                 (data[32 /* X33 */] <-0.55255705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0058427127f ? 
             (data[15 /* X16 */] <0.17786948f ? 
                 (data[17 /* X18 */] <-0.09598229f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.093207404f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[27 /* X28 */] <0.009078706f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32592058f ? 
             (data[1 /* X2 */] <-0.21599467f ? 
                 (data[8 /* X9 */] <0.18987969f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19069631f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.12005316f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.33827308f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19732131f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7301128f ? 
                             (data[32 /* X33 */] <-0.039918024f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6278185f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19490358f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.33068886f ? 
                 (data[35 /* X36 */] <-0.14073187f ? 
                     (data[12 /* X13 */] <0.29414836f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26966947f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (data[34 /* X35 */] <-0.9770187f ? 
             (data[15 /* X16 */] <0.07071809f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17717627f ? 
                 (data[1 /* X2 */] <-0.762959f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.016854342f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.69311625f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.18412058f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.3406698f ? 
             (data[17 /* X18 */] <-0.08339615f ? 
                 (data[12 /* X13 */] <0.22164354f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.07901322f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14171268f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[34 /* X35 */] <-0.7107802f ? 
             (data[28 /* X29 */] <0.0995304f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19039038f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.1071393f ? 
                     (data[18 /* X19 */] <0.30557647f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.098137915f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.101676196f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[15 /* X16 */] <0.060452573f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.50544333f ? 
                 (data[11 /* X12 */] <-0.43064797f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.09359506f ? 
                         (data[32 /* X33 */] <-0.3437503f ? 
                            1.0f : 
                             (data[8 /* X9 */] <0.17758496f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.329335f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.04376105f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)) : 
        0.012048192f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046402168f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20003976f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20484653f ? 
             (data[15 /* X16 */] <0.061048597f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1809392f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.46283403f ? 
                     (data[7 /* X8 */] <0.05815814f ? 
                         (data[9 /* X10 */] <0.02753945f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15959042f ? 
                 (data[11 /* X12 */] <-0.94876957f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.26373008f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.004025693f ? 
                            0.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.21353027f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22488551f ? 
                     (data[32 /* X33 */] <-0.4779832f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2181939f ? 
                             (data[9 /* X10 */] <-0.28339127f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.45961487f ? 
             (data[22 /* X23 */] <0.18078868f ? 
                1.0f : 
                 (data[17 /* X18 */] <0.024082063f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.14765403f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25165984f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.052809414f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.7402755f ? 
        0.875f : 
         (data[32 /* X33 */] <-0.08460626f ? 
             (data[15 /* X16 */] <0.03839965f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13968945f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.06369213f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1929704f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.066289306f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <-0.4071563f ? 
                     (data[19 /* X20 */] <-0.41895497f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.11152214f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[34 /* X35 */] <-1.0455554f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14906974f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.3056388f ? 
                                0.0f : 
                                 (data[31 /* X32 */] <0.13160539f ? 
                                    1.0f : 
                                     (data[13 /* X14 */] <0.12908667f ? 
                                        1.0f : 
                                        0.0f)))))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.097029924f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.61123353f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1732329f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21532474f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066753864f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.6209233f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15713814f ? 
                 (data[15 /* X16 */] <0.08608165f ? 
                     (data[18 /* X19 */] <0.050552715f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2984829f ? 
         (data[19 /* X20 */] <-0.1928793f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14895605f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12800598f ? 
                     (data[11 /* X12 */] <-0.11829205f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.10373138f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10415239f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.11884552f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.25799042f ? 
             (data[11 /* X12 */] <-0.47617248f ? 
                 (data[2 /* X3 */] <-0.060504112f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.5328151f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                     (data[18 /* X19 */] <0.13617861f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.34964478f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5223134f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.06939295f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16174826f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.0822331f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1669823f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066753864f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.34609228f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.11981015f ? 
                        0.0f : 
                         (data[28 /* X29 */] <0.27139625f ? 
                             (data[31 /* X32 */] <0.14254221f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22061366f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16702697f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.48357624f ? 
             (data[29 /* X30 */] <0.12760355f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.4095304f ? 
                     (data[29 /* X30 */] <0.15232877f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.16374324f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.318701f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31160295f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26773986f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <0.098880775f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17624263f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.43904302f ? 
            0.0f : 
             (data[23 /* X24 */] <0.25067836f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4326051f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20836493f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.59377515f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39273837f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[24 /* X25 */] <-0.34069672f ? 
             (data[14 /* X15 */] <0.14461333f ? 
                 (data[5 /* X6 */] <0.09479708f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.80468667f ? 
                 (data[27 /* X28 */] <-0.178751f ? 
                     (data[5 /* X6 */] <0.08105687f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.06613642f ? 
            1.0f : 
             (data[4 /* X5 */] <0.11700766f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3113788f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4430468f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26733133f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.82360804f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.22039002f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[18 /* X19 */] <-0.49890262f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.2128235f ? 
                     (data[22 /* X23 */] <0.15989351f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.11761488f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5024547f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14577253f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42303282f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48596686f ? 
             (data[9 /* X10 */] <-0.16679224f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.84521747f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.116235286f ? 
                         (data[9 /* X10 */] <-0.09957723f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[32 /* X33 */] <0.19690993f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.080980666f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.4842279f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.23208718f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[28 /* X29 */] <0.2060651f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.1700547f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16312651f ? 
                     (data[31 /* X32 */] <0.05465008f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.11311736f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.007874016f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[10 /* X11 */] <-1.1892523f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40472937f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23677924f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21230888f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2253045f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.030919371f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.12373911f ? 
             (data[22 /* X23 */] <0.071770385f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.15221737f ? 
                 (data[35 /* X36 */] <-0.03181851f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.63076997f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23072797f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.3565103f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.19318125f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.12504134f ? 
                 (data[5 /* X6 */] <0.10853729f ? 
                     (data[27 /* X28 */] <-0.09138835f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1607317f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3660138f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.05044541f ? 
                     (data[5 /* X6 */] <0.117697425f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.09937715f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06588661f ? 
                             (data[12 /* X13 */] <0.1226587f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4358393f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22200455f ? 
                                 (data[21 /* X22 */] <0.12625411f ? 
                                     (data[13 /* X14 */] <0.10838692f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[18 /* X19 */] <-0.11403554f ? 
                                     (data[14 /* X15 */] <0.31004348f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3548127f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78503174f ? 
                 (data[33 /* X34 */] <-0.40008956f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.25806227f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15342247f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[6 /* X7 */] <0.14116098f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3088852f ? 
                 (data[5 /* X6 */] <0.11082733f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.78223825f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3259201f ? 
             (data[15 /* X16 */] <0.040783748f ? 
                 (data[21 /* X22 */] <0.114519134f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.08627654f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16409774f ? 
                     (data[5 /* X6 */] <0.06891051f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27307943f ? 
                            1.0f : 
                            0.0f) : 
                         (data[16 /* X17 */] <-1.1092004f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.59230614f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[32 /* X33 */] <-0.16477312f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.030277181f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26939222f ? 
                                 (data[32 /* X33 */] <0.21107897f ? 
                                    1.0f : 
                                     (data[21 /* X22 */] <0.18902162f ? 
                                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095752865f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[11 /* X12 */] <-0.116925724f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[25 /* X26 */] <0.06425481f ? 
                 (data[22 /* X23 */] <0.17435835f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.11746063f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[9 /* X10 */] <-0.1643631f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.24227336f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.09081828f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.1629805f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16476357f ? 
                             (data[32 /* X33 */] <0.2409085f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15893777f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.47824195f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9436807f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.2369062f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10969379f ? 
             (data[29 /* X30 */] <0.08884984f ? 
                 (data[18 /* X19 */] <-0.3960041f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.11631263f ? 
                 (data[5 /* X6 */] <0.10166718f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.12317354f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.19101587f ? 
                         (data[6 /* X7 */] <0.22697043f ? 
                            1.0f : 
                            0.0f) : 
                         (data[23 /* X24 */] <0.12357144f ? 
                             (data[9 /* X10 */] <-0.09962407f ? 
                                 (data[22 /* X23 */] <0.25112438f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25090227f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2509064f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.26917648f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3482895f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-1.1827737f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.55614096f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.081313446f ? 
             (data[0 /* X1 */] <-0.030432526f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.106318936f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[9 /* X10 */] <-0.35626566f ? 
             (data[35 /* X36 */] <-0.59314126f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.40605533f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.092865415f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01015714f ? 
                 (data[23 /* X24 */] <0.046935525f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.073708266f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.45838767f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.01989203f ? 
                                 (data[34 /* X35 */] <0.055248644f ? 
                                     (data[31 /* X32 */] <0.102191806f ? 
                                        1.0f : 
                                         (data[0 /* X1 */] <-0.015177343f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3251776f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20804869f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.1582472f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2792347f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15092915f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2100646f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5138022f ? 
             (data[25 /* X26 */] <-0.033168867f ? 
                 (data[0 /* X1 */] <-0.26900738f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3830734f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27307943f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24820042f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.96390986f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.104492754f ? 
             (data[16 /* X17 */] <-0.23798531f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22037429f ? 
                     (data[8 /* X9 */] <-0.2625211f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.09567223f ? 
                             (data[35 /* X36 */] <-0.4792011f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30583945f ? 
                                1.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.040783547f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2020737f ? 
                     (data[31 /* X32 */] <0.04431631f ? 
                         (data[20 /* X21 */] <0.11236228f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15071087f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.91921747f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <1.1257443f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5921906f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.10175042f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.156472f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (data[27 /* X28 */] <-0.37750107f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.05644329f ? 
             (data[11 /* X12 */] <-0.13250862f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.086312175f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.06284465f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2031801f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[32 /* X33 */] <0.05894836f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.04382077f ? 
                             (data[10 /* X11 */] <-0.56837595f ? 
                                 (data[13 /* X14 */] <0.15721829f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[19 /* X20 */] <-0.7022305f ? 
                                0.0f : 
                                 (data[35 /* X36 */] <-0.69367665f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[27 /* X28 */] <-0.21369608f ? 
             (data[10 /* X11 */] <-0.14620657f ? 
                 (data[11 /* X12 */] <-0.113618046f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.01132689f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <-0.52509093f ? 
                     (data[34 /* X35 */] <-0.792497f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[9 /* X10 */] <-0.5433099f ? 
             (data[22 /* X23 */] <0.18169717f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.8203896f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.7389916f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.65798765f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61922514f ? 
                             (data[10 /* X11 */] <-0.78341216f ? 
                                 (data[20 /* X21 */] <0.32360336f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24132136f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.033880193f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.054597918f ? 
                                            1.0f : 
                                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35274345f ? 
                                                0.0f : 
                                                 (data[23 /* X24 */] <0.13827696f ? 
                                                    1.0f : 
                                                    0.0f)))) : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17508559f ? 
                                        0.0f : 
                                         (data[17 /* X18 */] <-0.042100158f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            1.0f) : 
                        1.0f)))) : 
         (data[2 /* X3 */] <0.12336266f ? 
             (data[34 /* X35 */] <-0.265292f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.17407969f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.104492754f ? 
             (data[29 /* X30 */] <0.08572455f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.27039117f ? 
                     (data[13 /* X14 */] <0.10920443f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.0993235f ? 
                 (data[29 /* X30 */] <0.10572645f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.07890882f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.3082909f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27226728f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
            0.0f : 
             (data[25 /* X26 */] <0.009602506f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13867314f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15775396f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12067275f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40961573f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26454568f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.20264271f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[17 /* X18 */] <0.093719006f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25494522f ? 
             (data[29 /* X30 */] <0.119477764f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4144856f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
             (data[25 /* X26 */] <-0.6319681f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.2020274f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.038995676f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1353838f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28111267f ? 
             (data[34 /* X35 */] <-0.3285566f ? 
                 (data[1 /* X2 */] <-0.19930917f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06713858f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25337386f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[28 /* X29 */] <0.059633207f ? 
                        1.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7805392f ? 
                             (data[35 /* X36 */] <-1.01539f ? 
                                1.0f : 
                                0.0f) : 
                             (data[35 /* X36 */] <-0.53282f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[19 /* X20 */] <-0.3753741f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <0.33584797f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[1 /* X2 */] <-0.12574555f ? 
             (data[0 /* X1 */] <-0.0010694655f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.1701754f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <0.09771616f ? 
                0.0f : 
                 (data[34 /* X35 */] <-1.0535886f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.064048104f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30639893f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25727564f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.4357638f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[34 /* X35 */] <-0.8004051f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.91627693f ? 
                 (data[12 /* X13 */] <0.12391965f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X9 */] <-0.26262197f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.32993612f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.007874016f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[25 /* X26 */] <-0.5725634f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.2469851f ? 
                 (data[12 /* X13 */] <0.09239581f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44771206f ? 
                     (data[16 /* X17 */] <-0.70220935f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44546276f ? 
                            0.0f : 
                             (data[35 /* X36 */] <-0.05025f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.12320575f ? 
            1.0f : 
             (data[7 /* X8 */] <0.08900905f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2513689f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40524513f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05177397f ? 
            0.0f : 
             (data[29 /* X30 */] <0.14163037f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.2413408f ? 
             (data[8 /* X9 */] <-0.07286321f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18239464f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12397018f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.019281875f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2121864f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7574857f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17667744f ? 
                         (data[4 /* X5 */] <0.10254704f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.53213584f ? 
                                 (data[5 /* X6 */] <0.20279083f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[5 /* X6 */] <0.08137344f ? 
                                     (data[4 /* X5 */] <0.12293071f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.17324734f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.043583054f ? 
                         (data[11 /* X12 */] <-0.13788445f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.04376105f ? 
                                1.0f : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.24244472f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23989059f ? 
                             (data[16 /* X17 */] <-0.24434455f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.27628404f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_11_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[33 /* X34 */] <-0.40961573f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.081313446f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12792592f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                        0.0f : 
                         (data[33 /* X34 */] <-0.8100065f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25494522f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5110099f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.3462658f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.14507058f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
             (data[24 /* X25 */] <-0.7803819f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05177397f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.23162608f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2035074f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17390995f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30800176f ? 
                         (data[12 /* X13 */] <0.28016275f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28604448f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46471357f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20201518f ? 
                             (data[15 /* X16 */] <0.059379727f ? 
                                 (data[16 /* X17 */] <-0.13193426f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[24 /* X25 */] <0.002093903f ? 
                            1.0f : 
                             (data[19 /* X20 */] <-0.8943061f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.324096f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.27169347f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[28 /* X29 */] <0.05850681f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2573292f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16546285f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.1681249f ? 
                         (data[24 /* X25 */] <-0.18679827f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.14133993f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.68163985f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.13463329f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.17754485f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3774242f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[0 /* X1 */] <-0.08181788f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.073708266f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.7819529f ? 
             (data[12 /* X13 */] <0.0955482f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.22753362f ? 
                     (data[23 /* X24 */] <0.0612554f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.58399403f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.32538754f ? 
                     (data[15 /* X16 */] <0.082553364f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.11884552f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.51278406f ? 
             (data[23 /* X24 */] <0.092804335f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.079004474f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22431141f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.11536028f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1594558f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27590185f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.25683117f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16295384f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.117653586f ? 
             (data[35 /* X36 */] <-0.14073187f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2686006f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34958753f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12698647f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[28 /* X29 */] <0.27680442f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.118227646f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.62498546f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.40634292f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[24 /* X25 */] <0.09488822f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1528951f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.42547616f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[26 /* X27 */] <-0.02013672f ? 
                            1.0f : 
                             (data[15 /* X16 */] <0.059379727f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[30 /* X31 */] <0.09284425f ? 
                1.0f : 
                0.0f)) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12585805f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.55044913f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33921584f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.293803f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.42805162f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X13 */] <0.20115305f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.40954f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[7 /* X8 */] <0.06072905f ? 
             (data[32 /* X33 */] <-0.1312149f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28634602f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-1.0771877f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.24434455f ? 
                     (data[9 /* X10 */] <-0.22509176f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.099742785f ? 
                             (data[28 /* X29 */] <0.14704178f ? 
                                1.0f : 
                                 (data[24 /* X25 */] <0.024123192f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (data[19 /* X20 */] <-1.0508773f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14941622f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[28 /* X29 */] <0.08441399f ? 
             (data[29 /* X30 */] <0.11385223f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9420103f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (data[0 /* X1 */] <-0.14421438f ? 
                     (data[2 /* X3 */] <-0.20615011f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.5279071f ? 
                         (data[7 /* X8 */] <0.11471814f ? 
                             (data[0 /* X1 */] <0.035853762f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12285001f ? 
             (data[35 /* X36 */] <-0.75651133f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.22282997f ? 
                0.0f : 
                 (data[16 /* X17 */] <0.34070495f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[23 /* X24 */] <0.118938886f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2671589f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2720414f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13899922f ? 
             (data[34 /* X35 */] <-0.8926659f ? 
                 (data[16 /* X17 */] <-0.35881075f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3099805f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[18 /* X19 */] <0.033296388f ? 
             (data[14 /* X15 */] <0.22534923f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15522054f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019516867f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.011743883f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.88441056f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.08900905f ? 
                         (data[15 /* X16 */] <0.04793605f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37772834f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (data[3 /* X4 */] <-0.30823398f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.27053884f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026133033f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016635684f ? 
                 (data[34 /* X35 */] <-0.5078063f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.010024797f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13644907f ? 
                            1.0f : 
                             (data[28 /* X29 */] <0.24607521f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10957632f ? 
                             (data[24 /* X25 */] <-0.3042352f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6242038f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06557149f ? 
                         (data[12 /* X13 */] <0.21849115f ? 
                            0.0f : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.34101415f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68894905f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25494522f ? 
             (data[10 /* X11 */] <-0.2498633f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.32543525f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15411262f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[14 /* X15 */] <0.094153374f ? 
             (data[24 /* X25 */] <0.8941258f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16107918f ? 
                 (data[20 /* X21 */] <0.10674416f ? 
                     (data[4 /* X5 */] <0.1347646f ? 
                         (data[20 /* X21 */] <0.09354978f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43540382f ? 
                    0.0f : 
                    1.0f))) : 
         (data[15 /* X16 */] <0.047340024f ? 
            1.0f : 
             (data[0 /* X1 */] <0.05031589f ? 
                 (data[14 /* X15 */] <0.16453707f ? 
                     (data[22 /* X23 */] <0.20713478f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.6601649f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.44944912f ? 
                         (data[27 /* X28 */] <-0.8962309f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.20103148f ? 
                                 (data[20 /* X21 */] <0.11986451f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[25 /* X26 */] <-0.2413814f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27848455f ? 
             (data[29 /* X30 */] <0.054471564f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.18100744f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.119859956f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.44074538f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21019383f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.26985195f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.764878f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18091905f ? 
                 (data[20 /* X21 */] <0.4831578f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[14 /* X15 */] <0.12298763f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15503372f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5986854f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40963578f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.13018197f ? 
                         (data[4 /* X5 */] <0.101408936f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.018215379f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.30105874f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18539776f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.20817335f ? 
                     (data[15 /* X16 */] <0.067008846f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10764814f ? 
             (data[30 /* X31 */] <0.1217848f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1855147f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05709533f ? 
                        1.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15831248f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3515255f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.3134954f ? 
                 (data[7 /* X8 */] <0.033734504f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <0.23875928f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.16016631f ? 
                 (data[2 /* X3 */] <-0.11657383f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <0.045513283f ? 
                     (data[20 /* X21 */] <0.25582892f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[29 /* X30 */] <0.10447633f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.55946344f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.9272232f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.29991296f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19001836f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.1066018f ? 
                     (data[15 /* X16 */] <0.08608165f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.25452793f ? 
                             (data[7 /* X8 */] <0.07086584f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31143868f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2876153f ? 
                         (data[24 /* X25 */] <-0.08602834f ? 
                             (data[21 /* X22 */] <0.18827471f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27075636f ? 
                                0.0f : 
                                 (data[18 /* X19 */] <-0.15055628f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[3 /* X4 */] <-0.54741234f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[24 /* X25 */] <0.033629898f ? 
             (data[24 /* X25 */] <-0.24632476f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1857505f ? 
                 (data[0 /* X1 */] <-0.32773352f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.011560693f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[1 /* X2 */] <-0.5168251f ? 
             (data[16 /* X17 */] <-0.35881075f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30662593f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.42876232f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22823411f ? 
                 (data[13 /* X14 */] <0.1287627f ? 
                     (data[27 /* X28 */] <-0.40589392f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.04793605f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.14607096f ? 
                     (data[18 /* X19 */] <0.1452152f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5145029f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.7941665f ? 
                             (data[25 /* X26 */] <-0.16195823f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.17546827f ? 
                                    0.0f : 
                                     (data[0 /* X1 */] <0.34908503f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[11 /* X12 */] <0.050736744f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.02296906f ? 
            0.0f : 
             (data[8 /* X9 */] <0.02931458f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0058732866f ? 
             (data[20 /* X21 */] <0.18680228f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13941966f ? 
                     (data[14 /* X15 */] <0.17056414f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23620632f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.02850952f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5183781f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1301436f ? 
            0.0f : 
             (data[31 /* X32 */] <0.084359676f ? 
                 (data[26 /* X27 */] <-0.122210465f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1555693f ? 
            0.0f : 
             (data[4 /* X5 */] <0.17781165f ? 
                 (data[13 /* X14 */] <0.120462656f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.2031576f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25840035f ? 
             (data[33 /* X34 */] <-0.5048775f ? 
                 (data[35 /* X36 */] <0.21114208f ? 
                     (data[2 /* X3 */] <-0.22710237f ? 
                        0.0f : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24058975f ? 
                             (data[31 /* X32 */] <0.05349843f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[27 /* X28 */] <-0.16127847f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[25 /* X26 */] <-0.4775159f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1749415f ? 
                        0.0f : 
                        1.0f) : 
                     (data[32 /* X33 */] <-0.36505967f ? 
                         (data[35 /* X36 */] <-0.15748778f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[2 /* X3 */] <-0.19015436f ? 
             (data[16 /* X17 */] <-0.5623062f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45038757f ? 
                     (data[35 /* X36 */] <-0.4916878f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.6131801f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5725679f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.39424035f ? 
                     (data[13 /* X14 */] <0.17026298f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.28634602f ? 
                             (data[1 /* X2 */] <0.058425967f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[10 /* X11 */] <-0.32760584f ? 
                         (data[26 /* X27 */] <0.23504765f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3843207f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.47412226f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09847946f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7799786f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.18262163f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <0.44289136f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.048849583f ? 
         (data[14 /* X15 */] <0.071806826f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6384176f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.21642427f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.26434147f ? 
             (data[25 /* X26 */] <-0.094949745f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.20564468f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[22 /* X23 */] <0.1576223f ? 
             (data[33 /* X34 */] <-0.15717195f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17856318f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24438347f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21042351f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27746066f ? 
                 (data[16 /* X17 */] <-0.9947341f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.06498385f ? 
                         (data[14 /* X15 */] <0.13173495f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[22 /* X23 */] <0.18758285f ? 
                     (data[22 /* X23 */] <0.163566f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5394386f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.10158056f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[34 /* X35 */] <-0.6027032f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[29 /* X30 */] <0.13635437f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                 (data[12 /* X13 */] <0.21023737f ? 
                     (data[12 /* X13 */] <0.15108386f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20540558f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6100361f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (data[19 /* X20 */] <-0.48977384f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3840941f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.28286406f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.12685756f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.14107828f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.17452593f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15006813f ? 
                1.0f : 
                 (data[9 /* X10 */] <0.12783873f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23918396f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.7819529f ? 
             (data[17 /* X18 */] <-0.24614888f ? 
                 (data[21 /* X22 */] <0.1660373f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.22680047f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.14492993f ? 
             (data[2 /* X3 */] <-0.22214589f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.23934695f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22789799f ? 
                         (data[16 /* X17 */] <-0.34609228f ? 
                             (data[28 /* X29 */] <0.2583111f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22745544f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23708576f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X13 */] <0.105005346f ? 
                 (data[7 /* X8 */] <0.06501747f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[11 /* X12 */] <-0.37622374f ? 
             (data[24 /* X25 */] <-0.37040517f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.3309171f ? 
            1.0f : 
             (data[8 /* X9 */] <0.082836285f ? 
                 (data[7 /* X8 */] <0.054940164f ? 
                     (data[3 /* X4 */] <-0.23598862f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33847326f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26250187f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.26738358f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.39416325f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39753652f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.2258277f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019178124f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16832156f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08186517f ? 
                                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17104541f ? 
                                    1.0f : 
                                     (data[10 /* X11 */] <0.15815842f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4139726f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22562346f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3548127f ? 
             (data[3 /* X4 */] <-0.33231577f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09233827f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.17953959f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07528453f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.15094659f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-0.029592773f ? 
             (data[32 /* X33 */] <-0.53391355f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0863356f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39912057f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.18209322f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[27 /* X28 */] <-0.26174554f ? 
                 (data[26 /* X27 */] <-0.14500079f ? 
                     (data[31 /* X32 */] <0.16707051f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31316623f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4202437f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09457028f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.04019646f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.048301246f ? 
                             (data[8 /* X9 */] <-0.10833617f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8946082f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.11810316f ? 
                 (data[26 /* X27 */] <0.12659429f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.038869463f ? 
             (data[35 /* X36 */] <-0.978527f ? 
                 (data[28 /* X29 */] <0.19710036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.025390137f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.6894909f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07896883f ? 
             (data[1 /* X2 */] <-0.13395001f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1254927f ? 
                     (data[14 /* X15 */] <0.13596304f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22675528f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.581615f ? 
             (data[26 /* X27 */] <-0.06798379f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22183469f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.17223752f ? 
                         (data[28 /* X29 */] <0.17227313f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22465743f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
             (data[26 /* X27 */] <-0.16367793f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.40763417f ? 
                     (data[26 /* X27 */] <0.0759063f ? 
                         (data[1 /* X2 */] <-0.08472323f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11029679f ? 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0997795f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[8 /* X9 */] <-0.23927794f ? 
                             (data[14 /* X15 */] <0.23976636f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.045722224f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.514031f ? 
                                    0.0f : 
                                     (data[26 /* X27 */] <0.40185568f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (data[15 /* X16 */] <0.14052711f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.059558533f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06759012f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14830744f ? 
                 (data[31 /* X32 */] <0.035297204f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.14449082f ? 
             (data[24 /* X25 */] <-0.41199702f ? 
                 (data[16 /* X17 */] <-0.4224031f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.20818692f ? 
                         (data[1 /* X2 */] <0.0027910734f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.017400082f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23752336f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.0070308065f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0823206f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42350224f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12956992f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.0044393945f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.2770566f ? 
                     (data[16 /* X17 */] <-0.24434455f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.24747813f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <0.34542495f ? 
            0.0f : 
             (data[26 /* X27 */] <0.022054916f ? 
                 (data[1 /* X2 */] <-0.030026788f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14058036f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17566714f ? 
                 (data[7 /* X8 */] <0.07743996f ? 
                     (data[32 /* X33 */] <-0.3884946f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-1.0446081f ? 
                        1.0f : 
                         (data[32 /* X33 */] <0.19499896f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.15743677f ? 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18581577f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[15 /* X16 */] <0.0702311f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29798338f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15970905f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2172966f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.19949469f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X1 */] <-0.73698115f ? 
            1.0f : 
             (data[28 /* X29 */] <0.08216119f ? 
                 (data[14 /* X15 */] <0.20228183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[11 /* X12 */] <-0.11481936f ? 
             (data[29 /* X30 */] <0.0957255f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.09209257f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5266982f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17223752f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23103458f ? 
                         (data[3 /* X4 */] <0.09427591f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.41330466f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.6480965f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22774075f ? 
                 (data[0 /* X1 */] <-0.14169396f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.10625836f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.16333692f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[21 /* X22 */] <0.16398239f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16948254f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.17416154f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45956352f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04663628f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12035805f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18498127f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19099958f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.15290329f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.27455136f ? 
                            1.0f : 
                             (data[27 /* X28 */] <0.17768864f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[20 /* X21 */] <0.17837512f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.25975183f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.11300201f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12816139f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10200542f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[6 /* X7 */] <0.07819278f ? 
             (data[29 /* X30 */] <0.29136917f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.17095943f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.025390137f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08008708f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.0055187093f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38241625f ? 
                 (data[13 /* X14 */] <0.17549093f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0652469f ? 
                         (data[4 /* X5 */] <0.1111163f ? 
                             (data[24 /* X25 */] <0.15780868f ? 
                                0.0f : 
                                1.0f) : 
                             (data[3 /* X4 */] <-0.7595453f ? 
                                1.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20744538f ? 
                                    0.0f : 
                                     (data[2 /* X3 */] <0.023494117f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f)) : 
                 (data[0 /* X1 */] <-0.12771624f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.11210286f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3409861f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3545002f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <0.09304682f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.1202924f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[31 /* X32 */] <0.050774917f ? 
             (data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.04266866f ? 
                     (data[17 /* X18 */] <-0.17859115f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[34 /* X35 */] <-1.0771877f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30905953f ? 
                     (data[20 /* X21 */] <0.0786536f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.42135412f ? 
                             (data[35 /* X36 */] <-0.74729556f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                0.0f : 
                                 (data[14 /* X15 */] <0.12904282f ? 
                                     (data[19 /* X20 */] <-0.074666254f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35438392f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08583896f ? 
                         (data[8 /* X9 */] <0.4623538f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.015412137f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09019287f ? 
                 (data[8 /* X9 */] <0.16068603f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17807284f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19225642f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.1971258f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.28241488f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58678806f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04589794f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.401689f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                     (data[35 /* X36 */] <-0.9282593f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6943795f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30147272f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.35724366f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5168585f ? 
                     (data[8 /* X9 */] <-0.2772188f ? 
                         (data[34 /* X35 */] <-0.476174f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14211713f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.66682816f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2396551f ? 
                         (data[20 /* X21 */] <0.23159829f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.057383753f ? 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17417519f ? 
                                    0.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3381557f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[14 /* X15 */] <0.16595067f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f))) : 
             (data[27 /* X28 */] <-0.3884214f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23792425f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                 (data[25 /* X26 */] <-0.46801117f ? 
                     (data[20 /* X21 */] <0.23596078f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.5554556f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16240677f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3595593f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.15517077f ? 
                                 (data[0 /* X1 */] <0.026713764f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (data[28 /* X29 */] <0.16664113f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.0073775006f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0901993f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[22 /* X23 */] <0.119465895f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
             (data[4 /* X5 */] <0.12718365f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14174147f ? 
                     (data[17 /* X18 */] <-0.43089768f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.08548826f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[34 /* X35 */] <0.06944328f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.22823267f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14329797f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[17 /* X18 */] <-0.31984824f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.27715462f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-0.11280376f ? 
                         (data[19 /* X20 */] <-0.15236928f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56926835f ? 
                            0.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20138963f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21871084f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[26 /* X27 */] <-0.12540027f ? 
                 (data[20 /* X21 */] <0.22437336f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10195936f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <1.5290447f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.13534492f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06425481f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.019125048f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.15707567f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <0.017790603f ? 
                 (data[34 /* X35 */] <0.3884422f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.026207015f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27139625f ? 
                 (data[12 /* X13 */] <0.117333554f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.20618914f ? 
             (data[0 /* X1 */] <0.11271239f ? 
                 (data[14 /* X15 */] <0.19363156f ? 
                     (data[22 /* X23 */] <0.14060493f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.25426173f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.43921086f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[24 /* X25 */] <-0.23374626f ? 
                 (data[25 /* X26 */] <-0.2161353f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038643956f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.07379362f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21076871f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.19318125f ? 
                             (data[1 /* X2 */] <-0.032214645f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (data[27 /* X28 */] <-0.35784447f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.15748778f ? 
                     (data[25 /* X26 */] <-0.32543993f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.13253342f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12656526f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04337088f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.9190262f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.34169078f ? 
            0.0f : 
             (data[12 /* X13 */] <0.24213403f ? 
                 (data[32 /* X33 */] <0.3870732f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9883512f ? 
             (data[35 /* X36 */] <-0.4842279f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2083179f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2075131f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081163436f ? 
                             (data[19 /* X20 */] <-0.3535837f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16595067f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15797932f ? 
                                    0.0f : 
                                     (data[20 /* X21 */] <0.17211902f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.13519262f ? 
         (data[9 /* X10 */] <-0.17407969f ? 
             (data[27 /* X28 */] <-0.2180642f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.33838728f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19377978f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
                 (data[3 /* X4 */] <-0.24974963f ? 
                     (data[22 /* X23 */] <0.28539395f ? 
                        1.0f : 
                         (data[8 /* X9 */] <-0.35800883f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[2 /* X3 */] <-0.36610776f ? 
             (data[27 /* X28 */] <-0.12633342f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.34180272f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X13 */] <0.19800067f ? 
                 (data[24 /* X25 */] <-0.4179387f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17817608f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.083479844f ? 
                            1.0f : 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.21784444f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[5 /* X6 */] <0.09021701f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.23989718f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4757337f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.071834125f ? 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33410564f ? 
                                     (data[7 /* X8 */] <0.06182534f ? 
                                         (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.007843626f ? 
                                            1.0f : 
                                            0.0f) : 
                                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f))))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.033189207f ? 
             (data[11 /* X12 */] <-0.50692594f ? 
                 (data[12 /* X13 */] <0.31569433f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4013294f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20200188f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.08193703f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <1.1036513f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.09207323f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23573314f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[33 /* X34 */] <-0.123830326f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.022030542f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09856861f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.071777046f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18823433f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3066543f ? 
                     (data[16 /* X17 */] <-0.4224031f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12792592f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3570214f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16880706f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.17273018f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16495165f ? 
                         (data[10 /* X11 */] <-0.14620657f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.3508089f ? 
                                 (data[17 /* X18 */] <0.24640843f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[25 /* X26 */] <-0.5262278f ? 
            1.0f : 
             (data[14 /* X15 */] <0.073969394f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.42622447f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06229894f ? 
                     (data[9 /* X10 */] <-0.28339127f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[0 /* X1 */] <0.11271239f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.6966765f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43208092f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.97324276f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37502497f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <0.1527843f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10472804f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15204795f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09366764f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <0.38174742f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23792425f ? 
             (data[3 /* X4 */] <-0.24974963f ? 
                 (data[10 /* X11 */] <-0.7163185f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.298138f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.04793605f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[31 /* X32 */] <0.07273418f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.105673075f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.38912782f ? 
                 (data[25 /* X26 */] <-0.10364872f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24432276f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.015412137f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <-0.01935416f ? 
             (data[1 /* X2 */] <-0.1066018f ? 
                 (data[10 /* X11 */] <-0.7292756f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.11236228f ? 
                         (data[28 /* X29 */] <0.10018358f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[24 /* X25 */] <-0.36798126f ? 
                     (data[16 /* X17 */] <-0.04084907f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.8144605f ? 
                         (data[6 /* X7 */] <0.21221295f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21438095f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.031796273f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.40605798f ? 
                 (data[32 /* X33 */] <-0.64527106f ? 
                     (data[4 /* X5 */] <0.13896638f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5398237f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5525436f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.41832215f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.0010903378f ? 
             (data[15 /* X16 */] <0.14264375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21143164f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.023805432f ? 
            0.0f : 
            1.0f) : 
         (data[30 /* X31 */] <0.108671114f ? 
             (data[23 /* X24 */] <0.046935525f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17579634f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.068426795f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.24860154f ? 
                 (data[9 /* X10 */] <-0.56958467f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.17223752f ? 
                     (data[32 /* X33 */] <-0.105114065f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.17067464f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11257601f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24198705f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[3 /* X4 */] <0.30800176f ? 
                            1.0f : 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39888203f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.23146588f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6832145f ? 
             (data[0 /* X1 */] <-0.13687362f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.06998669f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10513422f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.3794342f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.105237246f ? 
                            0.0f : 
                             (data[32 /* X33 */] <0.19318125f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12628506f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.518227f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2984829f ? 
         (data[19 /* X20 */] <-0.32089806f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16260688f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12659429f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.08987767f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08764089f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40052378f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.1417356f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.35140738f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.063158184f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18509226f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.019524248f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038643956f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.50220567f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11082733f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                     (data[4 /* X5 */] <0.10683167f ? 
                         (data[21 /* X22 */] <0.20885833f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (data[7 /* X8 */] <0.08900905f ? 
                     (data[23 /* X24 */] <0.07680359f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23620673f ? 
             (data[23 /* X24 */] <0.046935525f ? 
                 (data[9 /* X10 */] <-0.5748888f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25881237f ? 
                     (data[30 /* X31 */] <0.09072491f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.045709472f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1282548f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0142040625f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30831194f ? 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36493003f ? 
                                     (data[24 /* X25 */] <-0.37374428f ? 
                                        1.0f : 
                                         (data[16 /* X17 */] <-0.40714094f ? 
                                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.26786238f ? 
                                                1.0f : 
                                                0.0f) : 
                                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30262443f ? 
                                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.35634306f ? 
                                                    0.0f : 
                                                     (data[17 /* X18 */] <0.029677933f ? 
                                                        1.0f : 
                                                        0.0f)) : 
                                                1.0f))) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34973097f ? 
                         (data[33 /* X34 */] <-1.034616f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.055758897f ? 
             (data[11 /* X12 */] <-0.5223027f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.09812554f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7929591f ? 
                 (data[10 /* X11 */] <-0.66449016f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.1413783f ? 
                         (data[5 /* X6 */] <0.18749945f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.35059604f ? 
             (data[33 /* X34 */] <-0.36198482f ? 
                 (data[11 /* X12 */] <-0.4249167f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.046582982f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1705655f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22187115f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22006328f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.17579634f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.04479753f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14059778f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13399996f ? 
                     (data[7 /* X8 */] <0.060450587f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13697213f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.11104495f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18123877f ? 
                 (data[21 /* X22 */] <0.23015073f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1352854f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0793995f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67975277f ? 
                     (data[10 /* X11 */] <-0.7163185f ? 
                         (data[31 /* X32 */] <0.08502211f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08583896f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.097163126f ? 
                     (data[13 /* X14 */] <0.11492929f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.10115205f ? 
                         (data[13 /* X14 */] <0.09832918f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[32 /* X33 */] <-0.17223051f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19784865f ? 
             (data[35 /* X36 */] <-0.7062436f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06425481f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[17 /* X18 */] <-0.23540106f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13487269f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31160295f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.040866464f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.05538082f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.155483f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.08608165f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.30147272f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13086164f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[10 /* X11 */] <-0.79730034f ? 
             (data[10 /* X11 */] <-1.0590268f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.42205283f ? 
                 (data[26 /* X27 */] <0.10107586f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20209984f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19940913f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <-0.24802515f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13548106f ? 
                        0.0f : 
                        1.0f) : 
                     (data[22 /* X23 */] <0.09934453f ? 
                         (data[7 /* X8 */] <0.05815814f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.060365107f ? 
             (data[31 /* X32 */] <0.050774917f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.422608f ? 
             (data[3 /* X4 */] <-0.14998223f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.018149853f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.10240478f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13372767f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.26488912f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.18865457f ? 
             (data[9 /* X10 */] <-0.35660726f ? 
                 (data[24 /* X25 */] <-0.085203946f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.77666396f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.39243844f ? 
                 (data[25 /* X26 */] <-0.0070308065f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36517742f ? 
                         (data[20 /* X21 */] <0.13272826f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32519728f ? 
                         (data[2 /* X3 */] <-0.026997542f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23976636f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[11 /* X12 */] <-0.50180036f ? 
             (data[3 /* X4 */] <-0.73579323f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26465213f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15760463f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.00810628f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56164753f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.032174926f ? 
         (data[32 /* X33 */] <-0.18900962f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5295072f ? 
                 (data[13 /* X14 */] <0.09832918f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15324953f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.07680359f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16196293f ? 
                     (data[26 /* X27 */] <0.10686155f ? 
                         (data[30 /* X31 */] <0.13806386f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.046645507f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.39517546f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21463823f ? 
                             (data[2 /* X3 */] <-0.1145708f ? 
                                 (data[10 /* X11 */] <-0.291326f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[6 /* X7 */] <0.09738535f ? 
                                0.0f : 
                                 (data[11 /* X12 */] <-0.07532479f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)))) : 
        0.033333335f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[31 /* X32 */] <0.09598517f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4831578f ? 
                 (data[16 /* X17 */] <-0.26978147f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18018551f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.5564988f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.12432914f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.042900685f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.12536624f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27982348f ? 
             (data[35 /* X36 */] <-0.85285777f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.1176746f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2181251f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[28 /* X29 */] <0.20099631f ? 
             (data[20 /* X21 */] <0.12781209f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.29991296f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23875928f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.27807036f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.007874016f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[25 /* X26 */] <-0.6034539f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.33140388f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.032449048f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.39502463f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.44197074f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[23 /* X24 */] <0.12373911f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[4 /* X5 */] <0.07309023f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X5 */] <0.12450576f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29256114f ? 
                 (data[2 /* X3 */] <-0.065387376f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04029743f ? 
                         (data[27 /* X28 */] <-0.15243067f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[23 /* X24 */] <0.04357363f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.2969243f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.013903638f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17096911f ? 
                             (data[26 /* X27 */] <0.17407407f ? 
                                0.0f : 
                                 (data[33 /* X34 */] <-0.98690224f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.160345f ? 
                                1.0f : 
                                 (data[5 /* X6 */] <0.15433799f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.30177104f ? 
                             (data[26 /* X27 */] <-0.24094108f ? 
                                 (data[7 /* X8 */] <0.21605572f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[10 /* X11 */] <-0.2084006f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.032176286f ? 
            0.0f : 
             (data[8 /* X9 */] <0.111183584f ? 
                 (data[7 /* X8 */] <0.07229814f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14411847f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.48357624f ? 
             (data[35 /* X36 */] <0.2739767f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.16679224f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.033629898f ? 
                     (data[9 /* X10 */] <0.39405975f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[19 /* X20 */] <-0.3399647f ? 
             (data[31 /* X32 */] <0.07273418f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.2784982f ? 
            0.0f : 
             (data[7 /* X8 */] <0.06573929f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.4786537f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.14607096f ? 
                         (data[24 /* X25 */] <-0.247009f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2210912f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0058710347f ? 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7599507f ? 
                                     (data[10 /* X11 */] <-0.25383192f ? 
                                         (data[3 /* X4 */] <0.0016716433f ? 
                                             (data[27 /* X28 */] <-0.41336304f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        0.0f) : 
                                     (data[12 /* X13 */] <0.31298608f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[34 /* X35 */] <-0.7608647f ? 
             (data[0 /* X1 */] <-0.041443672f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22521892f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23044752f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7088077f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18091905f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[34 /* X35 */] <-0.581615f ? 
             (data[26 /* X27 */] <-0.02013672f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.106318936f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32052898f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4623538f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.09598517f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[10 /* X11 */] <-0.78434324f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35124177f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4254353f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19625524f ? 
                             (data[18 /* X19 */] <-0.07127253f ? 
                                1.0f : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.23099583f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14878269f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17576872f ? 
                                    0.0f : 
                                     (data[19 /* X20 */] <-0.23804826f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.012048192f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2091925f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.311852f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12633342f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.14216706f ? 
                         (data[14 /* X15 */] <0.15948099f ? 
                             (data[33 /* X34 */] <-0.18889f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[11 /* X12 */] <-0.24039598f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.36517742f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.39835626f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.40954f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15045233f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[10 /* X11 */] <-0.016635684f ? 
             (data[12 /* X13 */] <0.16490063f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35188448f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23598862f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.011560693f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[31 /* X32 */] <0.058525246f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17566714f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17127813f ? 
                 (data[32 /* X33 */] <0.17826648f ? 
                     (data[20 /* X21 */] <0.30337816f ? 
                         (data[22 /* X23 */] <0.08721464f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.09000767f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.17886f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[11 /* X12 */] <-0.18402433f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2632415f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17762238f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.28662807f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33493143f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.22794831f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49334553f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[31 /* X32 */] <0.12569475f ? 
             (data[25 /* X26 */] <-0.26128286f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10115641f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.030540233f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11086178f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.48774788f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.0561252f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.21592118f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1725708f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.13059635f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.3211273f ? 
                 (data[12 /* X13 */] <0.1712054f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.18539776f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.33488068f ? 
             (data[30 /* X31 */] <0.12630676f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20323576f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.19821201f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[17 /* X18 */] <-0.43653888f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.015882825f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.21090953f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[9 /* X10 */] <-0.34411994f ? 
             (data[5 /* X6 */] <0.13060708f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.10572645f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.32810357f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43570605f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.25663015f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07934298f ? 
                 (data[24 /* X25 */] <-0.18027103f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.046812795f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19126587f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.022692777f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14507058f ? 
                     (data[0 /* X1 */] <-0.27634814f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.48443148f ? 
                             (data[11 /* X12 */] <-0.605337f ? 
                                0.0f : 
                                 (data[17 /* X18 */] <-0.3824927f ? 
                                     (data[0 /* X1 */] <-0.0030941728f ? 
                                        1.0f : 
                                         (data[21 /* X22 */] <0.13677529f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36331043f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (data[3 /* X4 */] <-0.39934698f ? 
                         (data[22 /* X23 */] <0.15477066f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[9 /* X10 */] <-0.1376425f ? 
            0.0f : 
             (data[34 /* X35 */] <0.4622509f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17125155f ? 
                     (data[11 /* X12 */] <-1.3190395f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.011560693f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12275528f ? 
             (data[7 /* X8 */] <0.065870866f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19438618f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <0.018262519f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.2613153f ? 
                         (data[20 /* X21 */] <0.11075556f ? 
                            1.0f : 
                            0.0f) : 
                         (data[22 /* X23 */] <0.20350084f ? 
                             (data[32 /* X33 */] <-0.3318185f ? 
                                0.0f : 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19990234f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[20 /* X21 */] <0.21860334f ? 
                                0.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17232461f ? 
                                     (data[18 /* X19 */] <0.15176383f ? 
                                        0.0f : 
                                         (data[4 /* X5 */] <0.13898951f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f)))))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32385495f ? 
                 (data[7 /* X8 */] <0.05815814f ? 
                     (data[26 /* X27 */] <-0.014674646f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.08530295f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27144906f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09607905f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16196293f ? 
                     (data[15 /* X16 */] <0.10246861f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32385495f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18413268f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.64962333f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.58235586f ? 
                 (data[19 /* X20 */] <-0.49522147f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43259478f ? 
                         (data[0 /* X1 */] <-0.20294051f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14473331f ? 
                                0.0f : 
                                 (data[21 /* X22 */] <0.25250822f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26842028f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[3 /* X4 */] <0.09771616f ? 
             (data[23 /* X24 */] <0.13547298f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.17497234f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18650708f ? 
                 (data[35 /* X36 */] <-0.96177113f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[11 /* X12 */] <-0.4505446f ? 
            0.0f : 
             (data[15 /* X16 */] <0.061048597f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26156354f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.5894637f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.19087437f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06043438f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24780278f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24364933f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.062336285f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19594496f ? 
                            0.0f : 
                             (data[29 /* X30 */] <0.20423102f ? 
                                 (data[5 /* X6 */] <0.17730863f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (data[26 /* X27 */] <0.07555742f ? 
                     (data[22 /* X23 */] <0.119920135f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[3 /* X4 */] <-0.30823398f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.117653586f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23563422f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.14411847f ? 
                     (data[2 /* X3 */] <-0.27531275f ? 
                         (data[35 /* X36 */] <-0.42794076f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.59432197f ? 
                            1.0f : 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30076694f ? 
                                 (data[32 /* X33 */] <-0.7136365f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (data[11 /* X12 */] <-0.7734559f ? 
                         (data[24 /* X25 */] <0.12869698f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22144544f ? 
                    0.0f : 
                     (data[26 /* X27 */] <-0.23704343f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25974154f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.5309364f ? 
             (data[25 /* X26 */] <-0.6319681f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.23895721f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30012906f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.016185183f ? 
            0.0f : 
             (data[34 /* X35 */] <0.2091925f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3771657f ? 
                     (data[11 /* X12 */] <-0.87596744f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18641567f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[35 /* X36 */] <-0.51145625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.07549819f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31323776f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23819987f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07576008f ? 
                         (data[29 /* X30 */] <0.08572455f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21573557f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[12 /* X13 */] <0.11888958f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-1.1397402f ? 
                     (data[16 /* X17 */] <0.62051123f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.16335171f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.093587235f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[35 /* X36 */] <-0.53030664f ? 
             (data[8 /* X9 */] <-0.11924937f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04338383f ? 
                     (data[25 /* X26 */] <-0.24789813f ? 
                         (data[22 /* X23 */] <0.23257238f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.34609228f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.401689f ? 
                    0.0f : 
                    1.0f))) : 
         (data[26 /* X27 */] <-0.13656458f ? 
             (data[1 /* X2 */] <-0.09566251f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[35 /* X36 */] <-0.3438972f ? 
             (data[28 /* X29 */] <0.19254832f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08059922f ? 
                     (data[26 /* X27 */] <-0.081765905f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X2 */] <-0.5235514f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29911056f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17333515f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0054066014f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6339067f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10498192f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12792592f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.25737742f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22394462f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[26 /* X27 */] <-0.17803204f ? 
             (data[32 /* X33 */] <0.13725089f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[35 /* X36 */] <-0.40254286f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.21832371f ? 
                 (data[21 /* X22 */] <0.120007165f ? 
                     (data[23 /* X24 */] <0.055469256f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
                         (data[34 /* X35 */] <-0.09658639f ? 
                            0.0f : 
                             (data[25 /* X26 */] <-0.2877662f ? 
                                0.0f : 
                                 (data[2 /* X3 */] <-0.03723483f ? 
                                    1.0f : 
                                     (data[5 /* X6 */] <0.10760436f ? 
                                        0.0f : 
                                         (data[16 /* X17 */] <-0.17763296f ? 
                                            0.0f : 
                                            1.0f))))) : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.12633342f ? 
                     (data[30 /* X31 */] <0.12740916f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06043438f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68894905f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.7725498f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[25 /* X26 */] <-0.0010903378f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.04026492f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23979348f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.07674726f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[32 /* X33 */] <-0.649503f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40431136f ? 
            0.0f : 
             (data[28 /* X29 */] <0.4147351f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[35 /* X36 */] <-0.40463734f ? 
            1.0f : 
            0.0f) : 
         (data[22 /* X23 */] <0.16352746f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26732454f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1878647f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.15663335f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.011392296f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17110108f ? 
                         (data[8 /* X9 */] <-0.04366956f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.4930424f ? 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.9447129f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[34 /* X35 */] <-1.0067999f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.44007882f ? 
             (data[35 /* X36 */] <-0.85166013f ? 
                 (data[25 /* X26 */] <-0.0640593f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.6237914f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31047988f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.1861755f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18753622f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.52805555f ? 
             (data[35 /* X36 */] <-0.4695151f ? 
                 (data[18 /* X19 */] <-0.06191812f ? 
                     (data[0 /* X1 */] <0.22282387f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.37968513f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.14187329f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12088041f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19408448f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.54998267f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.2580232f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17506775f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1291476f ? 
                     (data[27 /* X28 */] <-0.18084377f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1142956f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50602806f ? 
                         (data[21 /* X22 */] <0.103141814f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.14120127f ? 
                                 (data[0 /* X1 */] <0.25512323f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[29 /* X30 */] <0.11478982f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1623531f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.1591068f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6599305f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.10181865f ? 
                 (data[4 /* X5 */] <0.11968555f ? 
                     (data[0 /* X1 */] <-0.070806734f ? 
                        0.0f : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.083334684f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.21659192f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X3 */] <-0.30568492f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22718917f ? 
                                 (data[19 /* X20 */] <0.041089617f ? 
                                     (data[27 /* X28 */] <0.08687803f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[35 /* X36 */] <0.35106f ? 
                                     (data[7 /* X8 */] <0.19542137f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))))) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17725183f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.684369f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.59233886f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.014869644f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.45025644f ? 
                    1.0f : 
                     (data[17 /* X18 */] <0.12595193f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.56164753f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13316664f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.1400973f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.050002426f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06933657f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.28232625f ? 
             (data[15 /* X16 */] <0.04793605f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.0845823f ? 
                     (data[35 /* X36 */] <-0.51674587f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23984027f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3353625f ? 
                             (data[22 /* X23 */] <0.19768652f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18744688f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26138547f ? 
                 (data[3 /* X4 */] <0.24564715f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.11690972f ? 
                        1.0f : 
                         (data[26 /* X27 */] <0.23504765f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2862048f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2095292f ? 
                    1.0f : 
                     (data[32 /* X33 */] <0.31876242f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.16433664f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.8277239f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.2582506f ? 
             (data[3 /* X4 */] <0.31445226f ? 
                 (data[11 /* X12 */] <-0.10659471f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.047163986f ? 
                        0.0f : 
                         (data[27 /* X28 */] <-0.5631467f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12629624f ? 
                     (data[17 /* X18 */] <-0.61956614f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.19051358f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9537033f ? 
                 (data[20 /* X21 */] <0.044944912f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9923579f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
             (data[13 /* X14 */] <0.10386255f ? 
                 (data[34 /* X35 */] <-0.7714088f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.10240478f ? 
                 (data[23 /* X24 */] <0.08018559f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.23598862f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.78434324f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.46323183f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.2580232f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13601771f ? 
                     (data[18 /* X19 */] <0.105124876f ? 
                         (data[23 /* X24 */] <0.1316868f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0068303584f ? 
                         (data[27 /* X28 */] <-0.14380595f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.6183306f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23402943f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.34162784f ? 
                                        0.0f : 
                                         (data[23 /* X24 */] <0.08278981f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16833882f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[24 /* X25 */] <0.081163436f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.09683284f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20869154f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24120808f ? 
                 (data[23 /* X24 */] <0.044230863f ? 
                    1.0f : 
                     (data[8 /* X9 */] <-0.35506856f ? 
                        1.0f : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.16175611f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12426203f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.024520544f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.372077f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16895877f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04654648f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05739667f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.3429075f ? 
                         (data[33 /* X34 */] <-0.89296585f ? 
                            1.0f : 
                            0.0f) : 
                         (data[35 /* X36 */] <-0.2619664f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[34 /* X35 */] <-0.17931241f ? 
                     (data[28 /* X29 */] <0.16776752f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21001282f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.5334561f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.053655077f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26194173f ? 
             (data[14 /* X15 */] <0.14605503f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4657172f ? 
                     (data[22 /* X23 */] <0.18169717f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4281478f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[19 /* X20 */] <-0.42712638f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.05238397f ? 
                 (data[35 /* X36 */] <-0.38369247f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.18353713f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X2 */] <-0.18591163f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0078026224f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20319213f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09522063f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.59871405f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.1301962f ? 
                        1.0f : 
                        0.0f))) : 
             (data[22 /* X23 */] <0.14354077f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.056349553f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.854831f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2750147f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6412031f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.1636329f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.100176856f ? 
                                 (data[32 /* X33 */] <0.13789724f ? 
                                    1.0f : 
                                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.022316711f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[19 /* X20 */] <-0.48160243f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09304682f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.10293814f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3792949f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <0.311012f ? 
                 (data[7 /* X8 */] <0.17127813f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06713858f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58678806f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33230335f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.45831153f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[19 /* X20 */] <-0.5388023f ? 
             (data[31 /* X32 */] <0.123111315f ? 
                 (data[22 /* X23 */] <0.13082196f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.12160568f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.119976014f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.14882977f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (data[17 /* X18 */] <-0.6054332f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                     (data[3 /* X4 */] <-0.23598862f ? 
                         (data[9 /* X10 */] <-0.5387788f ? 
                             (data[9 /* X10 */] <-0.79531056f ? 
                                0.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4243056f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[23 /* X24 */] <0.124675885f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16213796f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46471357f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06479246f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[35 /* X36 */] <-0.17424369f ? 
                        0.0f : 
                        1.0f))) : 
             (data[33 /* X34 */] <-0.41914192f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37573454f ? 
             (data[2 /* X3 */] <-0.23814166f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22850308f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3342125f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29684308f ? 
                         (data[19 /* X20 */] <-0.10174259f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14902021f ? 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7975533f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.1573072f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25132173f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.666849f ? 
                             (data[13 /* X14 */] <0.18179163f ? 
                                0.0f : 
                                1.0f) : 
                             (data[32 /* X33 */] <-0.4956019f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.2747791f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.58893514f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08263075f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.11166879f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[9 /* X10 */] <-0.5894637f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2180366f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
         (data[14 /* X15 */] <0.071806826f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.74966776f ? 
                 (data[3 /* X4 */] <-0.33231577f ? 
                     (data[5 /* X6 */] <0.10853729f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.15342355f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X12 */] <-0.4249167f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10392302f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.23102367f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.011001776f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23598862f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[27 /* X28 */] <-0.11104495f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18720058f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2707422f ? 
                     (data[22 /* X23 */] <0.15262562f ? 
                         (data[0 /* X1 */] <0.44476494f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23976636f ? 
                            0.0f : 
                             (data[32 /* X33 */] <-0.1409095f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18066995f ? 
                     (data[33 /* X34 */] <-0.20956595f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17377123f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28579542f ? 
                         (data[3 /* X4 */] <-0.015812267f ? 
                            0.0f : 
                             (data[3 /* X4 */] <0.2731692f ? 
                                1.0f : 
                                 (data[27 /* X28 */] <-0.54163265f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.49334553f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (data[27 /* X28 */] <-0.39060545f ? 
             (data[9 /* X10 */] <-0.16679224f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467958f ? 
                 (data[20 /* X21 */] <0.013268832f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.05894836f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20752539f ? 
                            0.0f : 
                             (data[16 /* X17 */] <-0.08154817f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[8 /* X9 */] <0.13149238f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22161452f ? 
             (data[17 /* X18 */] <-0.48567176f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.36198482f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.37467316f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.34964478f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (data[1 /* X2 */] <-0.13941966f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.091036744f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.10243638f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.4842279f ? 
             (data[17 /* X18 */] <-0.5440171f ? 
                 (data[3 /* X4 */] <-0.18782504f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17324339f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3884214f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.042549863f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.13519262f ? 
         (data[32 /* X33 */] <-0.25799042f ? 
             (data[3 /* X4 */] <-0.3908001f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.02444897f ? 
                     (data[6 /* X7 */] <0.31432354f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1289024f ? 
                 (data[33 /* X34 */] <-0.5334561f ? 
                     (data[19 /* X20 */] <0.38729075f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.26351064f ? 
                         (data[25 /* X26 */] <-0.2244601f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21810257f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24985835f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.20294051f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X4 */] <-0.26007038f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.059558533f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08460626f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1669823f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.09072502f ? 
                 (data[8 /* X9 */] <-0.24802515f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.40254286f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24841663f ? 
                 (data[13 /* X14 */] <0.09279581f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-1.1629996f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41620284f ? 
                             (data[2 /* X3 */] <-0.23715377f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16938722f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[27 /* X28 */] <0.21834616f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.19368723f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.54073715f ? 
                                0.0f : 
                                1.0f) : 
                             (data[13 /* X14 */] <0.20456986f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12667258f ? 
         (data[27 /* X28 */] <-0.28140214f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9367671f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.52740973f ? 
             (data[21 /* X22 */] <0.21288942f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.021483444f ? 
                     (data[33 /* X34 */] <-0.36198482f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24624982f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <0.081163436f ? 
                         (data[19 /* X20 */] <0.38729075f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.46992597f ? 
                     (data[0 /* X1 */] <-0.14727075f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.16669813f ? 
             (data[1 /* X2 */] <-0.6480965f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.12599602f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14749674f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3285566f ? 
                     (data[26 /* X27 */] <-0.1268263f ? 
                         (data[19 /* X20 */] <-0.9496201f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16751097f ? 
                                1.0f : 
                                0.0f) : 
                             (data[21 /* X22 */] <0.19415028f ? 
                                1.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.28764743f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10948314f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2531805f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.372077f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (data[19 /* X20 */] <-0.32906947f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25252765f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (data[28 /* X29 */] <0.18466352f ? 
                 (data[35 /* X36 */] <-0.8947475f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09204163f ? 
                        0.0f : 
                         (data[26 /* X27 */] <-0.033233684f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[29 /* X30 */] <0.12635343f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[12 /* X13 */] <0.093972005f ? 
             (data[3 /* X4 */] <-0.0983784f ? 
                 (data[28 /* X29 */] <0.086666785f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.34474006f ? 
                 (data[29 /* X30 */] <0.13572931f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.10240478f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[35 /* X36 */] <-0.467472f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5095795f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14967795f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.35140738f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18870983f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.054539435f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.23288934f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36450115f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06878421f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.1441926f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.347822f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2630294f ? 
                         (data[14 /* X15 */] <0.17056414f ? 
                             (data[11 /* X12 */] <-0.21169275f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[11 /* X12 */] <-0.7529536f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.01877377f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.3437137f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.20003976f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.053655077f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.13106082f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19262259f ? 
                 (data[19 /* X20 */] <-0.14779013f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.028777162f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2608983f ? 
                             (data[3 /* X4 */] <-0.7217117f ? 
                                1.0f : 
                                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35635754f ? 
                                    0.0f : 
                                     (data[25 /* X26 */] <0.03545368f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18581577f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12373911f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10102714f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68894905f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5881499f ? 
                    0.0f : 
                    1.0f) : 
                 (data[18 /* X19 */] <0.24882925f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[5 /* X6 */] <0.155483f ? 
            1.0f : 
             (data[9 /* X10 */] <0.29474553f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.66893744f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4227002f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_11_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[31 /* X32 */] <0.05206664f ? 
            1.0f : 
             (data[34 /* X35 */] <-1.008651f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.07432792f ? 
                     (data[35 /* X36 */] <-0.5591795f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.076567605f ? 
                         (data[13 /* X14 */] <0.17579634f ? 
                            1.0f : 
                            0.0f) : 
                         (data[16 /* X17 */] <-0.44784003f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19964671f ? 
                                 (data[29 /* X30 */] <0.15397528f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32604328f ? 
                                0.0f : 
                                 (data[30 /* X31 */] <0.29126093f ? 
                                    1.0f : 
                                    0.0f))))))) : 
         (data[13 /* X14 */] <0.112162605f ? 
             (data[24 /* X25 */] <-0.2693964f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
        0.008130081f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.30688947f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.08420128f ? 
                 (data[11 /* X12 */] <-0.3429075f ? 
                     (data[13 /* X14 */] <0.29287526f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.18533112f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.91697204f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.07831643f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.38010368f ? 
                     (data[4 /* X5 */] <0.11754324f ? 
                         (data[25 /* X26 */] <-0.04555175f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[2 /* X3 */] <-0.6380358f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3099805f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21457288f ? 
                     (data[10 /* X11 */] <-0.45717672f ? 
                         (data[20 /* X21 */] <0.16649592f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16268304f ? 
                            0.0f : 
                             (data[18 /* X19 */] <0.0652804f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[20 /* X21 */] <0.1716246f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.16193505f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18817216f ? 
                 (data[10 /* X11 */] <-0.7292756f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.05747245f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.106626205f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.1006486f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13788445f ? 
                             (data[5 /* X6 */] <0.103251845f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15178753f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14326191f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[31 /* X32 */] <0.06950488f ? 
             (data[34 /* X35 */] <-0.30746838f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.089889824f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13406251f ? 
                        1.0f : 
                        0.0f))) : 
             (data[24 /* X25 */] <-0.13273749f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.19172734f ? 
                     (data[26 /* X27 */] <0.06917781f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.7531015f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22559665f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.11367545f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.0785073f ? 
                            1.0f : 
                             (data[32 /* X33 */] <-0.64091724f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21656501f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (data[14 /* X15 */] <0.104966216f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.081313446f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49393553f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3711351f ? 
                     (data[11 /* X12 */] <-0.58893514f ? 
                         (data[25 /* X26 */] <-0.28053385f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15215236f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.12114541f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <0.1210791f ? 
             (data[11 /* X12 */] <-0.4710469f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4466656f ? 
                 (data[14 /* X15 */] <0.29743487f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[15 /* X16 */] <0.037803624f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.008193144f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                     (data[16 /* X17 */] <-0.24434455f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3451893f ? 
                             (data[11 /* X12 */] <-0.3882664f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.18314135f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.47631904f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15258738f ? 
                                    0.0f : 
                                     (data[16 /* X17 */] <0.20154452f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23382825f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.810968f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2608398f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.08969316f ? 
                         (data[31 /* X32 */] <0.13732025f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.31383273f ? 
             (data[22 /* X23 */] <0.10356739f ? 
                 (data[1 /* X2 */] <-0.1941161f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32793832f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1652417f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.50936174f ? 
                     (data[10 /* X11 */] <-0.17212075f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09597589f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.06267896f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.16253182f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.33886522f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14941016f ? 
            1.0f : 
             (data[3 /* X4 */] <0.39508995f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[15 /* X16 */] <0.13614774f ? 
             (data[2 /* X3 */] <0.04338383f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.0902945f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.4830909f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.8004051f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.070856355f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1941161f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.002600917f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.20572628f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[11 /* X12 */] <-0.29421452f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18547973f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.030026788f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.22894354f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.037256036f ? 
                     (data[35 /* X36 */] <-0.20775549f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.52108353f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <0.27645537f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22948827f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.111778565f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.18686308f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35188448f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[11 /* X12 */] <-0.37622374f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.46464932f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.043865893f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5260732f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.15731575f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.030760061f ? 
                 (data[35 /* X36 */] <0.16087437f ? 
                     (data[0 /* X1 */] <-0.012080613f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-0.08358691f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16688967f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19959797f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14765403f ? 
                            1.0f : 
                             (data[13 /* X14 */] <0.18686308f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32687572f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2863842f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                             (data[34 /* X35 */] <0.27482167f ? 
                                 (data[16 /* X17 */] <0.136006f ? 
                                     (data[1 /* X2 */] <-0.24224895f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3548127f ? 
             (data[11 /* X12 */] <-0.42772144f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07528453f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26533395f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.14059778f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[4 /* X5 */] <0.11620429f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3456668f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.42514062f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3032453f ? 
                 (data[24 /* X25 */] <0.09304682f ? 
                     (data[26 /* X27 */] <0.043659374f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[7 /* X8 */] <0.061371777f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13972388f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.6229526f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32024863f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.05465008f ? 
                     (data[18 /* X19 */] <0.47930118f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-1.0462247f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17500603f ? 
                             (data[22 /* X23 */] <0.09653861f ? 
                                 (data[16 /* X17 */] <-0.3205603f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3554121f ? 
                                    0.0f : 
                                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15092915f ? 
                                         (data[19 /* X20 */] <-0.2517671f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.4463174f ? 
             (data[22 /* X23 */] <0.10175042f ? 
                 (data[24 /* X25 */] <0.009863131f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[3 /* X4 */] <0.102876544f ? 
             (data[0 /* X1 */] <-0.13320324f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.38127708f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.26246563f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.63028544f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3769418f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.49249765f ? 
             (data[34 /* X35 */] <-1.0402833f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.032878675f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.6426269f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5660504f ? 
                        1.0f : 
                        0.0f) : 
                     (data[34 /* X35 */] <-0.96120256f ? 
                         (data[16 /* X17 */] <0.0035257596f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26385456f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.38395208f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[3 /* X4 */] <-0.23426849f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11947224f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12661134f ? 
                     (data[27 /* X28 */] <-0.2835862f ? 
                         (data[0 /* X1 */] <0.0906901f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09687985f ? 
                            0.0f : 
                             (data[34 /* X35 */] <-0.75453824f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (data[3 /* X4 */] <-0.30135345f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.19555861f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.15886489f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.099425286f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.7681469f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40097207f ? 
                         (data[4 /* X5 */] <0.110963866f ? 
                             (data[15 /* X16 */] <0.2119621f ? 
                                 (data[16 /* X17 */] <-0.32574275f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
        0.010752688f : 
         (data[4 /* X5 */] <0.12450576f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.42973423f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3228948f ? 
                     (data[19 /* X20 */] <-0.17975765f ? 
                         (data[12 /* X13 */] <0.21287672f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3423289f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.68620795f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.65243345f ? 
                 (data[11 /* X12 */] <-0.87596744f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2712976f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.062240645f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.09658639f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X8 */] <0.05815814f ? 
                            1.0f : 
                             (data[2 /* X3 */] <-0.3648281f ? 
                                 (data[4 /* X5 */] <0.15591744f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[3 /* X4 */] <-0.18094452f ? 
             (data[25 /* X26 */] <-0.54642534f ? 
                 (data[12 /* X13 */] <0.23605981f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3328147f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X5 */] <0.12745143f ? 
             (data[33 /* X34 */] <-0.3762741f ? 
                 (data[25 /* X26 */] <-0.026040306f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2549245f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.2453812f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.44784003f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24134469f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.08096252f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.07549819f ? 
             (data[12 /* X13 */] <0.14913872f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.087632075f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.27746066f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19932288f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[27 /* X28 */] <-0.9980267f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5153448f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.22766833f ? 
                                1.0f : 
                                 (data[20 /* X21 */] <0.32360336f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[2 /* X3 */] <-0.03723483f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.32882458f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.010253215f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[0 /* X1 */] <-0.13687362f ? 
             (data[33 /* X34 */] <-0.35245866f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.04793605f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2528403f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10240478f ? 
                    0.0f : 
                     (data[11 /* X12 */] <0.06713858f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12628506f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3020293f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.10151684f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20414624f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3467243f ? 
                 (data[35 /* X36 */] <-0.78583413f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.6686511f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.75994235f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.3896741f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[15 /* X16 */] <0.12184314f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.51509726f ? 
                1.0f : 
                0.0f)) : 
        0.007874016f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[3 /* X4 */] <-0.25835028f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11754108f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27816367f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.31047988f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.14091593f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10700541f ? 
                 (data[19 /* X20 */] <0.1281677f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16796502f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.106318936f ? 
                 (data[19 /* X20 */] <0.09350305f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[21 /* X22 */] <0.11836323f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44931304f ? 
                 (data[35 /* X36 */] <-0.12397598f ? 
                     (data[6 /* X7 */] <0.1395158f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.10012462f ? 
                 (data[13 /* X14 */] <0.093263894f ? 
                     (data[4 /* X5 */] <0.13253944f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.11947224f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06371265f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.013903638f ? 
                            1.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26966947f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[17 /* X18 */] <0.017157244f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18362199f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <-0.46920496f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[31 /* X32 */] <0.11507859f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3626372f ? 
                             (data[3 /* X4 */] <-0.8363895f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[3 /* X4 */] <-0.60409594f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.66612965f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.53727514f ? 
                         (data[11 /* X12 */] <-0.46592134f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2905182f ? 
             (data[13 /* X14 */] <0.2532635f ? 
                 (data[6 /* X7 */] <0.15264843f ? 
                     (data[6 /* X7 */] <0.14617707f ? 
                        1.0f : 
                         (data[8 /* X9 */] <0.34557918f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.038995676f ? 
         (data[23 /* X24 */] <0.047468882f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.32592058f ? 
             (data[1 /* X2 */] <-0.18917863f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21629739f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17773029f ? 
                         (data[21 /* X22 */] <0.11905928f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17831181f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26028055f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17774826f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.1322263f ? 
                 (data[10 /* X11 */] <-0.52196217f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.070806734f ? 
                         (data[5 /* X6 */] <0.104982376f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[25 /* X26 */] <-0.24583764f ? 
             (data[29 /* X30 */] <0.13697943f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12243087f ? 
                 (data[26 /* X27 */] <-0.0073775006f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1247053f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22832587f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.21867794f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.30746838f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25596792f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.079004474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25348264f ? 
             (data[21 /* X22 */] <0.19316222f ? 
                 (data[30 /* X31 */] <0.13806386f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14852688f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2820995f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.8900299f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06844178f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[25 /* X26 */] <-0.6034539f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.18963784f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18740065f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X11 */] <-0.7551898f ? 
                     (data[30 /* X31 */] <0.1561517f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09385076f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34903464f ? 
                            0.0f : 
                             (data[33 /* X34 */] <-0.08034124f ? 
                                0.0f : 
                                 (data[22 /* X23 */] <0.22094376f ? 
                                    0.0f : 
                                    1.0f))))))) : 
         (data[22 /* X23 */] <0.20804326f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16057123f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.075511776f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10849274f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.15707567f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[4 /* X5 */] <0.07603592f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.749069f ? 
                 (data[11 /* X12 */] <-0.21994877f ? 
                     (data[28 /* X29 */] <0.11370037f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.05177397f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1985982f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07160914f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24371022f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[7 /* X8 */] <0.07101268f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062240645f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.21894673f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.23111609f ? 
                     (data[5 /* X6 */] <0.100766495f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.41914192f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3121438f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21425547f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (data[6 /* X7 */] <0.059897963f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.5223027f ? 
                 (data[7 /* X8 */] <0.09543632f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13953216f ? 
             (data[4 /* X5 */] <0.14967795f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.1821238f ? 
                     (data[7 /* X8 */] <0.20777832f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.054324646f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23851249f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.07549819f ? 
             (data[31 /* X32 */] <0.0559418f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.40968463f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.38871986f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18498346f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[24 /* X25 */] <-0.608407f ? 
                        1.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.55026746f ? 
                             (data[14 /* X15 */] <0.13464954f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5945157f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9528072f ? 
                                    0.0f : 
                                     (data[14 /* X15 */] <0.2261289f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19680884f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16628088f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14259613f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X2 */] <-0.3472661f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.16620724f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3947519f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58678806f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14171268f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.23790137f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15516762f ? 
         (data[35 /* X36 */] <-0.8046845f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28372496f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.55525476f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.23386566f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2858889f ? 
                     (data[33 /* X34 */] <0.0571671f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29662064f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.88627493f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24479435f ? 
                 (data[17 /* X18 */] <-0.81731886f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.476299f ? 
                         (data[27 /* X28 */] <-0.14380595f ? 
                             (data[13 /* X14 */] <0.15144952f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34908503f ? 
                                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20302416f ? 
                                    0.0f : 
                                     (data[13 /* X14 */] <0.15144952f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31402504f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[7 /* X8 */] <0.03759087f ? 
                             (data[16 /* X17 */] <-0.8955301f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[28 /* X29 */] <0.16551474f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[35 /* X36 */] <-0.14282636f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21215457f ? 
                 (data[14 /* X15 */] <0.08982824f ? 
                     (data[31 /* X32 */] <0.1889891f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.021746514f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.07015074f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1573072f ? 
                    1.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16542701f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <-0.0561252f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.28742093f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2605661f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.68089753f ? 
                                 (data[34 /* X35 */] <-0.07971583f ? 
                                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30814162f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (data[25 /* X26 */] <0.009951074f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[17 /* X18 */] <-0.42131105f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.68894905f ? 
            0.0f : 
             (data[28 /* X29 */] <0.15087155f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[11 /* X12 */] <-0.4736097f ? 
             (data[4 /* X5 */] <0.11600582f ? 
                 (data[33 /* X34 */] <-0.80018914f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.002020254f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25986433f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.18265793f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.124491006f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[15 /* X16 */] <0.046744f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25102893f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.192599f ? 
                     (data[1 /* X2 */] <-0.22684033f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2712976f ? 
                            1.0f : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.2829298f ? 
                             (data[19 /* X20 */] <-0.074666254f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.11361412f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5536229f ? 
                         (data[28 /* X29 */] <0.26238507f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2830213f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
             (data[24 /* X25 */] <-0.67343146f ? 
                 (data[4 /* X5 */] <0.09933358f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.10414589f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[34 /* X35 */] <-0.68442f ? 
             (data[1 /* X2 */] <-0.1941161f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.21440266f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34179622f ? 
             (data[10 /* X11 */] <-0.4377411f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.11160885f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <1.0092055f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <-1.552057f ? 
                        1.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14667997f ? 
                            0.0f : 
                             (data[28 /* X29 */] <0.16107884f ? 
                                1.0f : 
                                 (data[14 /* X15 */] <0.17469367f ? 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10267883f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))))) : 
             (data[29 /* X30 */] <0.23948921f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.26628867f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[20 /* X21 */] <0.22753362f ? 
             (data[20 /* X21 */] <0.13202223f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4001096f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07637755f ? 
                         (data[32 /* X33 */] <-0.045455f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.36946425f ? 
            0.0f : 
             (data[24 /* X25 */] <0.110871896f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[17 /* X18 */] <-0.6054332f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23677924f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.62779915f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21179865f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36022514f ? 
                                0.0f : 
                                 (data[23 /* X24 */] <0.07913873f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2766742f ? 
                                 (data[17 /* X18 */] <-0.21290994f ? 
                                     (data[8 /* X9 */] <0.22883075f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09030537f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2507421f ? 
                         (data[26 /* X27 */] <0.005381718f ? 
                            0.0f : 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08192382f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.081163436f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.08677649f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.43347245f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16141073f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.27521247f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.20964253f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.04857441f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.004025693f ? 
                        0.0f : 
                         (data[8 /* X9 */] <0.22224768f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26616278f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[30 /* X31 */] <0.11319307f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18027508f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1753857f ? 
                 (data[7 /* X8 */] <0.05815814f ? 
                     (data[23 /* X24 */] <0.05973612f ? 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7555436f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.04266866f ? 
                        1.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33063406f ? 
                             (data[34 /* X35 */] <0.3777138f ? 
                                0.0f : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23976636f ? 
                                     (data[17 /* X18 */] <-0.3824927f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                             (data[4 /* X5 */] <0.08927256f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6487759f ? 
                     (data[25 /* X26 */] <-0.46468842f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09431155f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.109023556f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25986433f ? 
                 (data[6 /* X7 */] <0.060748883f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.30959085f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4249167f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22573008f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19932288f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.20073552f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17781967f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2989711f ? 
             (data[5 /* X6 */] <0.13162161f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05739667f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42558223f ? 
                         (data[17 /* X18 */] <-0.41197243f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[6 /* X7 */] <0.13903368f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.07253672f ? 
                         (data[32 /* X33 */] <0.4318175f ? 
                             (data[3 /* X4 */] <-0.16078085f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[9 /* X10 */] <-0.22509176f ? 
                 (data[10 /* X11 */] <-0.016635684f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.07449296f ? 
             (data[24 /* X25 */] <-0.6080729f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.43474454f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16147879f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42248347f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21782123f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.59314126f ? 
                     (data[6 /* X7 */] <0.15094659f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.54601526f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10954576f ? 
             (data[1 /* X2 */] <-0.17223752f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.38391212f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3282477f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[3 /* X4 */] <-0.24630937f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7256663f ? 
                 (data[9 /* X10 */] <-0.12792592f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.55962944f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.19783661f ? 
                            1.0f : 
                             (data[6 /* X7 */] <0.17273018f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f)) : 
        0.0068965517f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (data[33 /* X34 */] <-0.55727154f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.42623514f ? 
                     (data[35 /* X36 */] <0.09385076f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3970125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.47513974f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12825055f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.42578152f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0078097093f ? 
                         (data[17 /* X18 */] <-0.608504f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[0 /* X1 */] <-0.06530116f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.34599167f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32502106f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
         (data[3 /* X4 */] <-0.15170236f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14657466f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12181959f ? 
                     (data[28 /* X29 */] <0.19029552f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.59324765f ? 
                 (data[6 /* X7 */] <0.19689636f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[11 /* X12 */] <-0.39416325f ? 
                 (data[3 /* X4 */] <-0.70763785f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19852255f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.49671367f ? 
                            1.0f : 
                             (data[24 /* X25 */] <0.0014498873f ? 
                                 (data[16 /* X17 */] <-0.08154817f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40032214f ? 
                     (data[18 /* X19 */] <0.2120324f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26439413f ? 
                             (data[14 /* X15 */] <0.12904282f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
         (data[3 /* X4 */] <-0.4957279f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17444137f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.56301606f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1559411f ? 
                        0.0f : 
                         (data[25 /* X26 */] <0.07375956f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41926774f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <1.5309364f ? 
                     (data[3 /* X4 */] <-0.24617422f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4122129f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2622042f ? 
                                0.0f : 
                                 (data[8 /* X9 */] <0.17940189f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <0.17725183f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_11_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[23 /* X24 */] <0.0778703f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.009052903f ? 
                 (data[21 /* X22 */] <0.11897381f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14770845f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.04562409f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                     (data[20 /* X21 */] <0.2675962f ? 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.26238507f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32616323f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1713687f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (data[0 /* X1 */] <-0.73698115f ? 
            1.0f : 
             (data[12 /* X13 */] <0.08136247f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[23 /* X24 */] <0.13333955f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13185176f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.05299284f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.05587524f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.35089126f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.4166234f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38450405f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[24 /* X25 */] <-0.72260207f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.2869302f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.095251784f ? 
             (data[12 /* X13 */] <0.10815773f ? 
                 (data[30 /* X31 */] <0.08741789f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18740845f ? 
                 (data[23 /* X24 */] <0.010667165f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <0.032351308f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5842838f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[23 /* X24 */] <0.118938886f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.24583764f ? 
             (data[12 /* X13 */] <0.14913872f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14344124f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31249937f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.097892046f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.10447633f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.51784426f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.37956583f ? 
                 (data[3 /* X4 */] <-0.26351064f ? 
                     (data[31 /* X32 */] <0.09598517f ? 
                         (data[6 /* X7 */] <0.18498346f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.11929554f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.2557727f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32742977f ? 
             (data[23 /* X24 */] <0.106671646f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.90111697f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.094260946f ? 
                     (data[27 /* X28 */] <0.13575456f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18382972f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[14 /* X15 */] <0.0970368f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.0879726f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05748067f ? 
             (data[5 /* X6 */] <0.13029262f ? 
                 (data[15 /* X16 */] <0.03839965f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.15650426f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.09947586f ? 
                    1.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019178124f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27436748f ? 
                             (data[31 /* X32 */] <0.06911736f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21320353f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.18498127f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.009863131f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10803693f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.59377515f ? 
                         (data[14 /* X15 */] <0.4321449f ? 
                             (data[3 /* X4 */] <-0.81051123f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25494522f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.389098f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3697895f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.20929882f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[30 /* X31 */] <0.145299f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.6153348f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[5 /* X6 */] <0.07132422f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.56244195f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.055506952f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (data[16 /* X17 */] <-0.39696616f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19054487f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32450828f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10863436f ? 
                     (data[26 /* X27 */] <0.22228843f ? 
                         (data[35 /* X36 */] <-0.45686615f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.14144202f ? 
                                 (data[27 /* X28 */] <-0.3195275f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f) : 
                     (data[34 /* X35 */] <-0.476174f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23152488f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.12298763f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (data[8 /* X9 */] <-0.05583358f ? 
             (data[27 /* X28 */] <-0.41899833f ? 
                 (data[10 /* X11 */] <-0.3794342f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (data[8 /* X9 */] <-0.03161204f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.18100744f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.17424369f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.14307456f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3600402f ? 
         (data[8 /* X9 */] <-0.09232565f ? 
             (data[27 /* X28 */] <-0.3491082f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29545543f ? 
             (data[16 /* X17 */] <-0.8675495f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.32760584f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.36918527f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.52303934f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15433799f ? 
             (data[25 /* X26 */] <-0.4394969f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14573027f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27481326f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3057144f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12799217f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[27 /* X28 */] <-0.07417786f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13010378f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16237283f ? 
                     (data[33 /* X34 */] <-0.3810372f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09415086f ? 
                             (data[35 /* X36 */] <-0.6400578f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[21 /* X22 */] <0.14836502f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11072693f ? 
                 (data[0 /* X1 */] <-0.0781475f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19944304f ? 
                     (data[23 /* X24 */] <0.04291371f ? 
                         (data[13 /* X14 */] <0.0938184f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.08066336f ? 
                 (data[2 /* X3 */] <-0.052590765f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18696733f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.71270144f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.028014058f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.23174334f ? 
                         (data[13 /* X14 */] <0.13152939f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5481848f ? 
                            0.0f : 
                             (data[27 /* X28 */] <0.61187637f ? 
                                1.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.33008978f ? 
                                    0.0f : 
                                     (data[23 /* X24 */] <0.27384427f ? 
                                        0.0f : 
                                        1.0f)))))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.30829582f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15930231f ? 
         (data[14 /* X15 */] <0.071806826f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39818597f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25773683f ? 
                     (data[33 /* X34 */] <-0.9716604f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.015804823f ? 
            0.0f : 
             (data[23 /* X24 */] <0.092804335f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.806551f ? 
             (data[7 /* X8 */] <0.052373596f ? 
                 (data[27 /* X28 */] <-0.11784682f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3705194f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088171974f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                 (data[3 /* X4 */] <-0.25791153f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.22085117f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21925202f ? 
                             (data[0 /* X1 */] <-0.04603345f ? 
                                 (data[3 /* X4 */] <0.023605632f ? 
                                    1.0f : 
                                     (data[17 /* X18 */] <-0.3586581f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.027264843f ? 
                             (data[34 /* X35 */] <-0.75453824f ? 
                                 (data[7 /* X8 */] <0.06844178f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10057814f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.1663556f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32385495f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.010651884f ? 
             (data[8 /* X9 */] <-0.12638491f ? 
                 (data[31 /* X32 */] <0.072888084f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16788761f ? 
                 (data[7 /* X8 */] <0.040161777f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.11821372f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12500177f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.20350084f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.3361642f ? 
             (data[2 /* X3 */] <-0.29597542f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2738675f ? 
                 (data[3 /* X4 */] <0.2181251f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.20187818f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (data[27 /* X28 */] <-0.3032428f ? 
             (data[30 /* X31 */] <0.12811555f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.10947681f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13899922f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.24043818f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.2167659f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17170383f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.021746514f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0916398f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[25 /* X26 */] <-0.13059255f ? 
             (data[14 /* X15 */] <0.14749674f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18570213f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.22566785f ? 
                 (data[14 /* X15 */] <0.323277f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13215336f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <0.22311722f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06517956f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.13402237f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[32 /* X33 */] <-0.444425f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1688132f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1344792f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06043438f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.7926922f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16476357f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X10 */] <-0.21881633f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15262562f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3933627f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.08048451f ? 
                     (data[17 /* X18 */] <-0.124699436f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.25733656f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24769579f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26752287f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.070856355f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13138643f ? 
             (data[14 /* X15 */] <0.072527684f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.0761545f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.7926922f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5207411f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.031267866f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.6288688f ? 
             (data[8 /* X9 */] <-0.024207123f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
                 (data[31 /* X32 */] <0.054307986f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2689293f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15548502f ? 
                                 (data[21 /* X22 */] <0.12768713f ? 
                                     (data[3 /* X4 */] <-0.2535885f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.31420368f ? 
                                        0.0f : 
                                         (data[33 /* X34 */] <-0.4666685f ? 
                                            0.0f : 
                                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19399208f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.66299635f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8467958f ? 
             (data[27 /* X28 */] <-0.31853127f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18027632f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.10135104f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (data[0 /* X1 */] <-0.04878444f ? 
                 (data[16 /* X17 */] <-0.30793688f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.17110933f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20995785f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.2351448f ? 
                 (data[21 /* X22 */] <0.24494612f ? 
                     (data[31 /* X32 */] <0.055114374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.17452593f ? 
                     (data[19 /* X20 */] <-0.46253583f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.2835862f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[10 /* X11 */] <-0.7616683f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18817216f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16823243f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1176645f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[35 /* X36 */] <-0.2412673f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07386313f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.012048192f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.316898f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2070211f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21874909f ? 
                 (data[7 /* X8 */] <0.045303594f ? 
                     (data[11 /* X12 */] <-0.064694725f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <0.35662612f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34557918f ? 
                         (data[0 /* X1 */] <-0.2910297f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.064098455f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07101268f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.52870333f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.06143718f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13173214f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15573803f ? 
             (data[21 /* X22 */] <0.08384062f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24455611f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20480956f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2095292f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[10 /* X11 */] <-0.016635684f ? 
             (data[21 /* X22 */] <0.20384778f ? 
                 (data[21 /* X22 */] <0.11851468f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4095304f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.44753078f ? 
                        0.0f : 
                        1.0f))) : 
             (data[32 /* X33 */] <-0.6718752f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2680688f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.44532418f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2961664f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.3830808f ? 
                    1.0f : 
                    0.0f))) : 
         (data[22 /* X23 */] <0.16352746f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20549172f ? 
                 (data[30 /* X31 */] <0.042198285f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17078233f ? 
                 (data[17 /* X18 */] <-0.51023823f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.15678321f ? 
                         (data[14 /* X15 */] <0.18425523f ? 
                            0.0f : 
                             (data[9 /* X10 */] <-0.2162798f ? 
                                 (data[4 /* X5 */] <0.11681938f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[27 /* X28 */] <-1.0793941f ? 
                            1.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23343936f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.025922881f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.29232246f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09427591f ? 
                     (data[27 /* X28 */] <-0.49870855f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06640579f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27618086f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33371854f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5502197f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.380657f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2573292f ? 
                 (data[10 /* X11 */] <-1.1309453f ? 
                     (data[4 /* X5 */] <0.12843898f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <0.2225364f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.32562163f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.19560312f ? 
         (data[13 /* X14 */] <0.115620956f ? 
             (data[8 /* X9 */] <-0.051643938f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17429332f ? 
                    1.0f : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.13635437f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05587524f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.2901384f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[18 /* X19 */] <-0.39767456f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.8203896f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.2608983f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2031801f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3146144f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.16930488f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f))) : 
         (data[27 /* X28 */] <0.28208703f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20217946f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.36340982f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28577203f ? 
             (data[31 /* X32 */] <0.05465008f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.15472628f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11447729f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01132689f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18870983f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0866287f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05019323f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.47240987f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1298221f ? 
                                 (data[10 /* X11 */] <-0.27998832f ? 
                                    1.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20089673f ? 
                                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47496378f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21009414f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24987793f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[14 /* X15 */] <0.19363156f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.17830317f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.52742827f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27815464f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7985698f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[34 /* X35 */] <-0.32592058f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2888985f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11104495f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14058036f ? 
                 (data[7 /* X8 */] <0.06329996f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.39696616f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7134084f ? 
                             (data[1 /* X2 */] <-0.38227183f ? 
                                1.0f : 
                                 (data[7 /* X8 */] <0.078817494f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2249711f ? 
                                        0.0f : 
                                         (data[5 /* X6 */] <0.11093518f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f)) : 
                            1.0f))) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.49376267f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[34 /* X35 */] <-0.4656299f ? 
             (data[25 /* X26 */] <-0.4965254f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.006625999f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.10527213f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19138084f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5223327f ? 
                 (data[21 /* X22 */] <0.110143565f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14027321f ? 
         (data[34 /* X35 */] <-0.8004051f ? 
             (data[23 /* X24 */] <0.06602704f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08899196f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.16214392f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15998873f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20973979f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13653499f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.11884552f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49993774f ? 
             (data[25 /* X26 */] <-0.44900167f ? 
                 (data[31 /* X32 */] <0.09917618f ? 
                    0.0f : 
                    1.0f) : 
                 (data[17 /* X18 */] <-0.72519463f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.5554556f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.048517745f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7647657f ? 
                             (data[7 /* X8 */] <0.06993538f ? 
                                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29310375f ? 
                                     (data[20 /* X21 */] <0.26668227f ? 
                                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15117204f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30068532f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[12 /* X13 */] <0.09081962f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[34 /* X35 */] <-0.05177397f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29985788f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42142218f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41620284f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.3110421f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[19 /* X20 */] <0.011405924f ? 
                 (data[25 /* X26 */] <-0.4965254f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.33312207f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.15399437f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.17476554f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28257993f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5216492f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45037585f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))))) : 
         (data[23 /* X24 */] <0.037335075f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[24 /* X25 */] <0.003921438f ? 
             (data[18 /* X19 */] <0.01492166f ? 
                 (data[6 /* X7 */] <0.23656793f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5001814f ? 
                 (data[30 /* X31 */] <0.14786266f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28953996f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.80189484f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30659625f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.1731502f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11933663f ? 
             (data[33 /* X34 */] <-0.16193505f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.116652705f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.088402174f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.54002535f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.18995343f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[21 /* X22 */] <0.223575f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[27 /* X28 */] <-0.6679819f ? 
                         (data[33 /* X34 */] <0.28653967f ? 
                             (data[14 /* X15 */] <0.17010126f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[35 /* X36 */] <-1.0958183f ? 
                            1.0f : 
                             (data[9 /* X10 */] <-0.28339127f ? 
                                 (data[18 /* X19 */] <0.31359455f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
             (data[35 /* X36 */] <-0.48841685f ? 
                 (data[4 /* X5 */] <0.15717605f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.049483195f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.09465303f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34911782f ? 
             (data[27 /* X28 */] <-0.18748727f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18181264f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12970261f ? 
                        0.0f : 
                         (data[19 /* X20 */] <-0.555397f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[18 /* X19 */] <0.626299f ? 
                         (data[6 /* X7 */] <0.20540558f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.089889824f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.05973612f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.1558286f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.1548769f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30577168f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[34 /* X35 */] <-0.5315305f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2984829f ? 
         (data[19 /* X20 */] <-0.4298502f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31638554f ? 
                 (data[14 /* X15 */] <0.18209785f ? 
                     (data[31 /* X32 */] <0.09081828f ? 
                         (data[4 /* X5 */] <0.12397018f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
        0.75f : 
         (data[33 /* X34 */] <-0.6668226f ? 
             (data[19 /* X20 */] <0.09856763f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13013941f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19869626f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X12 */] <-0.14604631f ? 
                 (data[31 /* X32 */] <0.06835844f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.15246375f ? 
                         (data[18 /* X19 */] <0.13185176f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16384764f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18365043f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.059558533f ? 
         (data[22 /* X23 */] <0.097207986f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.1700547f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.30479372f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.043865893f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17781967f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.043583054f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.17336392f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[20 /* X21 */] <0.22863281f ? 
                    0.0f : 
                    1.0f)) : 
             (data[17 /* X18 */] <-0.3137066f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23113002f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41620284f ? 
                         (data[14 /* X15 */] <0.20322886f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25582963f ? 
                                1.0f : 
                                 (data[4 /* X5 */] <0.11918072f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2511006f ? 
             (data[11 /* X12 */] <-0.5223027f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <-0.036085743f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1559411f ? 
                    0.0f : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.089604184f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.023805432f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.68536854f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                     (data[21 /* X22 */] <0.223575f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.4045042f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.024123192f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.075736865f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13968156f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12215608f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23212065f ? 
                     (data[34 /* X35 */] <-1.2986138f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-1.0583265f ? 
                            1.0f : 
                             (data[2 /* X3 */] <0.027961703f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.040549107f ? 
                                     (data[32 /* X33 */] <-0.06522697f ? 
                                        1.0f : 
                                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26240778f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21921024f ? 
             (data[23 /* X24 */] <0.103361115f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.26233423f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5605268f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X10 */] <-0.16679224f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23257238f ? 
                             (data[5 /* X6 */] <0.13192898f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10760736f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
             (data[1 /* X2 */] <-0.16676788f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07019412f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4072971f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1409787f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.9545091f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9883512f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.33860022f ? 
                 (data[18 /* X19 */] <-0.44277614f ? 
                     (data[13 /* X14 */] <0.26013514f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.10683167f ? 
                         (data[1 /* X2 */] <-0.17223752f ? 
                             (data[26 /* X27 */] <-0.07627728f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13215336f ? 
                     (data[27 /* X28 */] <-0.2814081f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24191992f ? 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23257238f ? 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21573557f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.12792592f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05348169f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18309803f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (data[11 /* X12 */] <-0.27114943f ? 
             (data[8 /* X9 */] <-0.18963784f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.79406106f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3777278f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21273275f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13733184f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.16974823f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (data[23 /* X24 */] <0.12320575f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.90111697f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.092371054f ? 
                 (data[26 /* X27 */] <-0.04059378f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (data[23 /* X24 */] <0.037335075f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.74657f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.46493277f ? 
             (data[34 /* X35 */] <-0.08077025f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16880706f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.61053455f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.36636466f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.34158134f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.049553793f ? 
                 (data[27 /* X28 */] <-0.12633342f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.1747724f ? 
                         (data[24 /* X25 */] <-0.56695616f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.26746306f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13294043f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08112649f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[11 /* X12 */] <-0.30604732f ? 
                             (data[15 /* X16 */] <0.059379727f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[9 /* X10 */] <-0.7789371f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30205816f ? 
                         (data[4 /* X5 */] <0.1282548f ? 
                             (data[17 /* X18 */] <-0.2252674f ? 
                                 (data[25 /* X26 */] <0.050948165f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_11_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[25 /* X26 */] <0.013166787f ? 
             (data[18 /* X19 */] <0.07171628f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.013903638f ? 
                     (data[21 /* X22 */] <0.21699926f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.6331562f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.23798575f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.21608967f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.7387901f ? 
             (data[22 /* X23 */] <0.18351415f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.370733f ? 
                 (data[8 /* X9 */] <-0.024207123f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                         (data[25 /* X26 */] <-0.23039243f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2705283f ? 
                                 (data[20 /* X21 */] <0.14422348f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[3 /* X4 */] <-0.32004663f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15285203f ? 
                                    1.0f : 
                                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05435701f ? 
                                         (data[13 /* X14 */] <0.11603596f ? 
                                             (data[5 /* X6 */] <0.1689942f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f)))) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1492257f ? 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0997795f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[25 /* X26 */] <-0.54880154f ? 
                     (data[5 /* X6 */] <0.117697425f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (data[19 /* X20 */] <-0.30183142f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088171974f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5776424f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0058732866f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17223752f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.50639135f ? 
                     (data[1 /* X2 */] <-0.16169645f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.16833882f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[28 /* X29 */] <0.28491306f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34071356f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31299436f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-1.3777337f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[31 /* X32 */] <0.09598517f ? 
             (data[34 /* X35 */] <-0.581615f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03698552f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.1716059f ? 
                         (data[26 /* X27 */] <0.15849234f ? 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8136355f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X2 */] <-0.456659f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.910261f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20973979f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25572246f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43919513f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17227313f ? 
                            0.0f : 
                             (data[20 /* X21 */] <0.20039612f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.23989718f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.08321069f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.35491684f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17120071f ? 
         (data[29 /* X30 */] <0.11385223f ? 
             (data[34 /* X35 */] <-0.48144606f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.63861704f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18690103f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.50912315f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <-0.55255705f ? 
                     (data[22 /* X23 */] <0.13381174f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28549272f ? 
                             (data[30 /* X31 */] <0.16929764f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.17522784f ? 
                                    0.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.29454875f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (data[28 /* X29 */] <0.09567798f ? 
                         (data[23 /* X24 */] <0.09387105f ? 
                            0.0f : 
                            1.0f) : 
                         (data[11 /* X12 */] <-0.91312784f ? 
                             (data[5 /* X6 */] <0.22165962f ? 
                                1.0f : 
                                0.0f) : 
                             (data[26 /* X27 */] <0.087040715f ? 
                                 (data[30 /* X31 */] <0.10391018f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32328454f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.16129823f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.1528209f ? 
                     (data[10 /* X11 */] <-0.8458894f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[24 /* X25 */] <0.09304682f ? 
             (data[6 /* X7 */] <0.14073552f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.115400925f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
             (data[25 /* X26 */] <-0.6319681f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17062198f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (data[23 /* X24 */] <0.07520351f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21265832f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.12005316f ? 
                 (data[34 /* X35 */] <-1.0455554f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.250015f ? 
                     (data[25 /* X26 */] <-0.3363578f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.072119206f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3419743f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.091990806f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16702984f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
             (data[30 /* X31 */] <0.08108715f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.007226318f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.17223752f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8799596f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.22261259f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.27784747f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13372767f ? 
             (data[23 /* X24 */] <0.1941424f ? 
                 (data[34 /* X35 */] <-0.7081442f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45176753f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[18 /* X19 */] <-0.11203102f ? 
             (data[20 /* X21 */] <0.2809057f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.009863131f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.100910276f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_11_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.25488147f ? 
         (data[32 /* X33 */] <-0.35680073f ? 
             (data[24 /* X25 */] <0.12275528f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.460416f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                 (data[25 /* X26 */] <-0.18286867f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13393588f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.13781896f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[19 /* X20 */] <0.093120016f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[32 /* X33 */] <-0.09765668f ? 
             (data[24 /* X25 */] <-0.38228858f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21157844f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.46848068f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.13480256f ? 
                         (data[29 /* X30 */] <0.11293195f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[23 /* X24 */] <0.039157186f ? 
                 (data[12 /* X13 */] <0.15859587f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.160303f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01685353f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.16300602f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.013396412f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33293533f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.44557476f ? 
                    1.0f : 
                     (data[16 /* X17 */] <0.16264641f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.23151173f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18827546f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2912422f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.18353713f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.40485263f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14924474f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3050146f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.013396412f ? 
             (data[14 /* X15 */] <0.16018283f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45998308f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.66672504f ? 
                 (data[16 /* X17 */] <-0.4224031f ? 
                     (data[25 /* X26 */] <-0.48702067f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.35395417f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.15660493f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265292f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.643723f ? 
                 (data[22 /* X23 */] <0.20992419f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32699758f ? 
                     (data[34 /* X35 */] <-1.3202912f ? 
                        1.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1365289f ? 
                             (data[5 /* X6 */] <0.095713094f ? 
                                1.0f : 
                                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16266333f ? 
                                    0.0f : 
                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37877762f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[20 /* X21 */] <0.08567624f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13173312f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2934983f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.38127708f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0645414f ? 
             (data[34 /* X35 */] <-0.687056f ? 
                 (data[1 /* X2 */] <-0.22693396f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.2983526f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2595585f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.47757903f ? 
                         (data[34 /* X35 */] <-0.96655995f ? 
                             (data[3 /* X4 */] <-0.08186517f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (data[13 /* X14 */] <0.10109586f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22673947f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.625964f ? 
                 (data[23 /* X24 */] <0.14426331f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.20716795f ? 
             (data[21 /* X22 */] <0.1660373f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.665625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[20 /* X21 */] <0.1530936f ? 
             (data[30 /* X31 */] <0.1217848f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.20649832f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07303197f ? 
             (data[9 /* X10 */] <-0.27853298f ? 
                 (data[18 /* X19 */] <0.17194209f ? 
                     (data[11 /* X12 */] <-0.15838677f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.14788309f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.037939142f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2053781f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[23 /* X24 */] <0.11627209f ? 
             (data[18 /* X19 */] <0.15189692f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1927214f ? 
                    0.0f : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.4656299f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1559411f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13788445f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.14502336f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36144516f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.37096098f ? 
                     (data[15 /* X16 */] <0.07696819f ? 
                         (data[10 /* X11 */] <-0.042549863f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17543922f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.372077f ? 
                                 (data[20 /* X21 */] <0.32823554f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.17782354f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1264059f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.20105071f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22263019f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66193056f ? 
                         (data[24 /* X25 */] <0.081163436f ? 
                             (data[1 /* X2 */] <0.10780823f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21394736f ? 
                         (data[16 /* X17 */] <0.010024797f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[15 /* X16 */] <0.03839965f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.3535837f ? 
                 (data[31 /* X32 */] <0.0856514f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10230868f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20200188f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24434455f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3504819f ? 
                         (data[22 /* X23 */] <0.17442928f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.26966947f ? 
                                 (data[1 /* X2 */] <-0.2122257f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[11 /* X12 */] <0.04051087f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.085580595f ? 
                             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.15748778f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.378866f ? 
                                0.0f : 
                                 (data[9 /* X10 */] <-0.2497764f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[34 /* X35 */] <-1.0244672f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X9 */] <-0.19936906f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.04793605f ? 
                         (data[3 /* X4 */] <-0.012014625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.04287783f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5923058f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[29 /* X30 */] <0.054784093f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.35784447f ? 
                 (data[33 /* X34 */] <0.32390016f ? 
                     (data[26 /* X27 */] <-0.058414374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9537033f ? 
                     (data[19 /* X20 */] <-0.2906428f ? 
                         (data[30 /* X31 */] <0.12027003f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[21 /* X22 */] <0.14425519f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27949303f ? 
                 (data[28 /* X29 */] <0.2195819f ? 
                     (data[0 /* X1 */] <0.16754827f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09479708f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23701419f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13078351f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.04663628f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.24624982f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.38082173f ? 
                 (data[34 /* X35 */] <-1.2686586f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13520454f ? 
         (data[15 /* X16 */] <0.06760487f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04654822f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.25835028f ? 
             (data[27 /* X28 */] <0.34067208f ? 
                 (data[28 /* X29 */] <0.12045877f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32611674f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13670087f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.27799985f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (data[29 /* X30 */] <0.11385223f ? 
             (data[34 /* X35 */] <-0.4656299f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06490161f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24135931f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.10745546f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.1070314E-4f ? 
                 (data[24 /* X25 */] <-0.39417195f ? 
                     (data[24 /* X25 */] <-0.7784605f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.052018207f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23866402f ? 
                             (data[34 /* X35 */] <0.055248644f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.080622405f ? 
                                    1.0f : 
                                     (data[35 /* X36 */] <0.16422555f ? 
                                        0.0f : 
                                         (data[3 /* X4 */] <-0.292756f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.09480567f ? 
             (data[16 /* X17 */] <-0.33973306f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[15 /* X16 */] <0.076545246f ? 
            0.0f : 
             (data[27 /* X28 */] <0.27116668f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.39289373f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.09598517f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.078630544f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5012787f ? 
                         (data[9 /* X10 */] <-0.5165893f ? 
                            0.0f : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.67869836f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.026762143f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))) : 
         (data[11 /* X12 */] <-0.4274795f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2258277f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_11_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3272386f ? 
         (data[22 /* X23 */] <0.16352746f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5476485f ? 
                 (data[29 /* X30 */] <0.0894749f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.085725605f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X9 */] <0.15095481f ? 
                 (data[34 /* X35 */] <-1.0507811f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.118168294f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.17865534f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11968555f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26467332f ? 
             (data[15 /* X16 */] <0.04054209f ? 
                 (data[18 /* X19 */] <0.1786238f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.09417976f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.0761545f ? 
                     (data[0 /* X1 */] <0.15216126f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17641996f ? 
             (data[17 /* X18 */] <-0.48874256f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.08608165f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24484506f ? 
                         (data[7 /* X8 */] <0.07910221f ? 
                             (data[13 /* X14 */] <0.15537441f ? 
                                1.0f : 
                                 (data[0 /* X1 */] <0.07687174f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[21 /* X22 */] <0.032467693f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.4426495f ? 
                 (data[10 /* X11 */] <0.28137738f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.5011224f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15760463f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <-0.31000283f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14042723f ? 
                             (data[9 /* X10 */] <-0.15901898f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.580297f ? 
         (data[14 /* X15 */] <0.12154592f ? 
             (data[26 /* X27 */] <0.2637559f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.12429195f ? 
                 (data[10 /* X11 */] <-0.09437822f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.18820682f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17518029f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.3691301f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[21 /* X22 */] <0.08712849f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3129519f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.5620346f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24565312f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35188448f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                 (data[9 /* X10 */] <-0.54573905f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                         (data[25 /* X26 */] <-0.4394969f ? 
                             (data[32 /* X33 */] <-0.236364f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18530552f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23108585f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33879378f ? 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2576902f ? 
                                            0.0f : 
                                             (data[23 /* X24 */] <0.13653971f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[2 /* X3 */] <-0.07818399f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[31 /* X32 */] <0.13525349f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[34 /* X35 */] <0.5360596f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19866896f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20826675f ? 
             (data[12 /* X13 */] <0.09870058f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[14 /* X15 */] <0.08982824f ? 
             (data[30 /* X31 */] <0.15189892f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.084359676f ? 
             (data[0 /* X1 */] <-0.09328305f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.0115808f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.038643956f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9489147f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.22376405f ? 
                     (data[16 /* X17 */] <-0.30738056f ? 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.10604935f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.18833868f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.042549863f ? 
                             (data[31 /* X32 */] <0.15403423f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.2011725f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2149372f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.11010234f ? 
                     (data[33 /* X34 */] <-0.20956595f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.06643549f ? 
             (data[12 /* X13 */] <0.16490063f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.31739932f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3294978f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[6 /* X7 */] <0.13307723f ? 
             (data[20 /* X21 */] <0.108148694f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28440055f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X1 */] <0.1108772f ? 
             (data[31 /* X32 */] <0.050774917f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4272822f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.04915996f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.371529f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22337615f ? 
                             (data[16 /* X17 */] <-0.5699373f ? 
                                 (data[30 /* X31 */] <0.23684868f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[12 /* X13 */] <0.23945732f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2731692f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.27968574f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.074879855f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20335972f ? 
                                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11249728f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[18 /* X19 */] <0.09970281f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.20233077f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.15074378f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
            0.0f : 
             (data[23 /* X24 */] <0.11307194f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.1312152f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.81672806f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24165826f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.5589467f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13468175f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.272893f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.09957341f ? 
                             (data[23 /* X24 */] <0.17750162f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.17624626f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15582666f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (data[18 /* X19 */] <-0.44945788f ? 
                 (data[0 /* X1 */] <-0.023450622f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5986854f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                         (data[35 /* X36 */] <-0.8277239f ? 
                             (data[25 /* X26 */] <-0.24081494f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14983101f ? 
                                0.0f : 
                                 (data[34 /* X35 */] <-0.75453824f ? 
                                     (data[9 /* X10 */] <-0.15929075f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[34 /* X35 */] <-0.7292324f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[21 /* X22 */] <0.08877242f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[10 /* X11 */] <-0.78434324f ? 
             (data[28 /* X29 */] <0.18466352f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.24691187f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.08507972f ? 
                     (data[10 /* X11 */] <-0.17219108f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.44416472f ? 
                     (data[32 /* X33 */] <-0.63380176f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12590043f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.20544964f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[22 /* X23 */] <0.10175042f ? 
                             (data[5 /* X6 */] <0.15400228f ? 
                                1.0f : 
                                0.0f) : 
                             (data[23 /* X24 */] <0.08278981f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08606723f ? 
                                    0.0f : 
                                     (data[18 /* X19 */] <0.0997795f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (data[22 /* X23 */] <0.18169717f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.019252522f ? 
             (data[31 /* X32 */] <0.07015074f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14196187f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.48967475f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.054303788f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19594496f ? 
                         (data[29 /* X30 */] <0.1153055f ? 
                            1.0f : 
                             (data[7 /* X8 */] <0.059871703f ? 
                                1.0f : 
                                 (data[18 /* X19 */] <-0.11403554f ? 
                                    1.0f : 
                                     (data[1 /* X2 */] <-0.12359216f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1398271f ? 
                                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.21672317f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f)))) : 
                         (data[8 /* X9 */] <-0.35506856f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[22 /* X23 */] <0.15262562f ? 
                         (data[5 /* X6 */] <0.117697425f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1918454f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
            0.0f : 
             (data[18 /* X19 */] <0.03496682f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[3 /* X4 */] <-0.7348256f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26134554f ? 
                 (data[25 /* X26 */] <-0.3301923f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.09183548f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25165984f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[34 /* X35 */] <-0.6027032f ? 
             (data[1 /* X2 */] <-0.09566251f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2155534f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.10324476f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09304682f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.26013225f ? 
                 (data[22 /* X23 */] <0.1417238f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29355073f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.15013972f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1357529f ? 
                     (data[31 /* X32 */] <0.12698647f ? 
                        1.0f : 
                         (data[19 /* X20 */] <-1.3630595f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-0.5913061f ? 
                                 (data[32 /* X33 */] <0.527272f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3437674f ? 
         (data[19 /* X20 */] <-0.31000283f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13941966f ? 
                 (data[33 /* X34 */] <0.21911217f ? 
                     (data[27 /* X28 */] <-0.3884214f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3003183f ? 
                     (data[8 /* X9 */] <-0.19936906f ? 
                         (data[24 /* X25 */] <-0.4683946f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.88298917f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21699926f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.7607003f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24116457f ? 
             (data[22 /* X23 */] <0.22167055f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.1399037f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.024373852f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.07818399f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[25 /* X26 */] <-0.18989655f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.24054608f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.550237f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20323576f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.12721115f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.119332366f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.15524732f ? 
             (data[27 /* X28 */] <-0.2966906f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22613013f ? 
                    1.0f : 
                    0.0f) : 
                 (data[26 /* X27 */] <0.16487195f ? 
                     (data[10 /* X11 */] <-0.29776743f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (data[34 /* X35 */] <-0.1493069f ? 
             (data[3 /* X4 */] <-0.47336623f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                 (data[22 /* X23 */] <0.10175042f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.82645375f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37163374f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.43081015f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                     (data[32 /* X33 */] <-0.35866508f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19268593f ? 
                            0.0f : 
                             (data[5 /* X6 */] <0.19830665f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09415086f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.072627105f ? 
         (data[34 /* X35 */] <-0.08077025f ? 
             (data[29 /* X30 */] <0.10572645f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42250657f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0046194796f ? 
                     (data[19 /* X20 */] <-0.01946889f ? 
                         (data[10 /* X11 */] <-0.50900507f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17117313f ? 
                                1.0f : 
                                 (data[34 /* X35 */] <0.58243793f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17127813f ? 
                            0.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.66358477f ? 
                                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.257293f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.133072f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13376364f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07999173f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.052075155f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09898852f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17772065f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1994854f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.11945904f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[24 /* X25 */] <-0.20197134f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.07743996f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.056887433f ? 
                     (data[26 /* X27 */] <-0.3008395f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17036617f ? 
         (data[1 /* X2 */] <-0.5168251f ? 
             (data[11 /* X12 */] <-0.276275f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.42876232f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.39013144f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37611035f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.181485f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2613255f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[14 /* X15 */] <0.14112571f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18807435f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.08196328f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24874966f ? 
                     (data[24 /* X25 */] <-0.9645744f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.69976085f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6666322f ? 
                                 (data[23 /* X24 */] <0.08192382f ? 
                                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6984616f ? 
                                        0.0f : 
                                         (data[20 /* X21 */] <0.10774108f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                 (data[0 /* X1 */] <0.10486465f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.7812512f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[11 /* X12 */] <-0.15838677f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13555896f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.6866296f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.16912244f ? 
             (data[5 /* X6 */] <0.095942095f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15741411f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24862015f ? 
                     (data[16 /* X17 */] <-0.9587227f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.095507935f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.32287163f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41368374f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.6716269f ? 
        1.0f : 
         (data[34 /* X35 */] <-0.8004051f ? 
             (data[16 /* X17 */] <-0.40332538f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.6173693f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.0031355696f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17546912f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.8564773f ? 
                 (data[26 /* X27 */] <-0.08393281f ? 
                     (data[29 /* X30 */] <0.12072789f ? 
                         (data[24 /* X25 */] <0.081163436f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[8 /* X9 */] <-0.19207065f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16863792f ? 
                 (data[26 /* X27 */] <-0.039275546f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07132959f ? 
                 (data[10 /* X11 */] <-0.7551898f ? 
                     (data[13 /* X14 */] <0.34179738f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X5 */] <0.104587115f ? 
                         (data[7 /* X8 */] <0.03731583f ? 
                             (data[18 /* X19 */] <0.12814856f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.072345935f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.111485824f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.11866249f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.117653586f ? 
             (data[29 /* X30 */] <0.11572741f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1698978f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.16472961f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.07391582f ? 
                     (data[2 /* X3 */] <-0.23174334f ? 
                         (data[15 /* X16 */] <0.10515444f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.14283395f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47930118f ? 
                            0.0f : 
                            1.0f) : 
                         (data[11 /* X12 */] <-0.35622415f ? 
                             (data[21 /* X22 */] <0.202569f ? 
                                0.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30802017f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[26 /* X27 */] <0.087040715f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[24 /* X25 */] <-0.4179387f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42214304f ? 
            0.0f : 
             (data[6 /* X7 */] <0.33596313f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.18494636f ? 
         (data[3 /* X4 */] <-0.49400777f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.4249167f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24780686f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23666339f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25838766f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.1921578f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.19867755f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.97847897f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28849462f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.105584785f ? 
         (data[0 /* X1 */] <0.12005316f ? 
             (data[24 /* X25 */] <-0.70908165f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14110869f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5591939f ? 
                         (data[31 /* X32 */] <0.04431631f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.065870866f ? 
                 (data[22 /* X23 */] <0.11265225f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09240596f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.08472323f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[16 /* X17 */] <-0.47327697f ? 
                     (data[31 /* X32 */] <0.10115205f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.34444943f ? 
                         (data[29 /* X30 */] <0.15885055f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[12 /* X13 */] <0.08057438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[0 /* X1 */] <0.11454758f ? 
             (data[21 /* X22 */] <0.13809043f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.19078034f ? 
                     (data[4 /* X5 */] <0.15182026f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[12 /* X13 */] <0.21691497f ? 
                 (data[9 /* X10 */] <-0.20565858f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.11711331f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12869698f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.18914022f ? 
                    1.0f : 
                    0.0f))) : 
         (data[22 /* X23 */] <0.047695506f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26322055f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49147657f ? 
                        0.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13792878f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30761093f ? 
         (data[28 /* X29 */] <0.12383796f ? 
            1.0f : 
             (data[13 /* X14 */] <0.11492929f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22284114f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.978527f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.01906238f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.119976014f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.7081442f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.55727154f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[9 /* X10 */] <-0.34654906f ? 
                 (data[21 /* X22 */] <0.11853536f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.22893792f ? 
                     (data[29 /* X30 */] <0.26476735f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <-1.2248843f ? 
            1.0f : 
             (data[7 /* X8 */] <0.033734504f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.31464043f ? 
                         (data[18 /* X19 */] <-0.08196328f ? 
                             (data[33 /* X34 */] <-0.39140454f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[4 /* X5 */] <0.15307283f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14489798f ? 
         (data[17 /* X18 */] <-0.520986f ? 
             (data[24 /* X25 */] <-0.38228858f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10308963f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.04287783f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3650416f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044033594f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07537536f ? 
                            1.0f : 
                             (data[25 /* X26 */] <0.020532968f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16358604f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[21 /* X22 */] <0.14243393f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.032195013f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.11379419f ? 
                 (data[9 /* X10 */] <-0.24452493f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14489788f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X4 */] <-0.82771254f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.013903638f ? 
                         (data[3 /* X4 */] <-0.28424585f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.36799905f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
         (data[0 /* X1 */] <-0.15889591f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2676169f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.18831712f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24740121f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9294523f ? 
                         (data[35 /* X36 */] <0.24651599f ? 
                             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18421686f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_11_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.7402755f ? 
         (data[10 /* X11 */] <-0.24014547f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.08451486f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.10012462f ? 
                 (data[30 /* X31 */] <0.099985614f ? 
                     (data[32 /* X33 */] <-0.3139208f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17265826f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.39706504f ? 
                         (data[10 /* X11 */] <-0.21376863f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3004242f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46854094f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.3009675f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.20750177f ? 
                                     (data[23 /* X24 */] <0.10923176f ? 
                                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26745823f ? 
                                             (data[17 /* X18 */] <-0.539718f ? 
                                                 (data[22 /* X23 */] <0.12972642f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12373964f ? 
                                                    0.0f : 
                                                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26966947f ? 
                                                        0.0f : 
                                                        1.0f))) : 
                                            1.0f) : 
                                        0.0f) : 
                                     (data[26 /* X27 */] <0.018694863f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.103471495f ? 
         (data[10 /* X11 */] <-0.9981352f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.108143196f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3434858f ? 
             (data[35 /* X36 */] <-0.43814915f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16356541f ? 
                     (data[14 /* X15 */] <0.15903045f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.2272467f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.5113554f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <0.021661445f ? 
                0.0f : 
                 (data[19 /* X20 */] <-1.2905719f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.7728171f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14027321f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31995675f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5168585f ? 
                 (data[19 /* X20 */] <-0.48432624f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18541813f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09175427f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19347069f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.088171974f ? 
                         (data[32 /* X33 */] <0.41200882f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124539144f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20137131f ? 
             (data[33 /* X34 */] <-0.5334561f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05747245f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.18345754f ? 
                         (data[13 /* X14 */] <0.120462656f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.2035665f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24593937f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[28 /* X29 */] <0.26407465f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.39968067f ? 
                 (data[8 /* X9 */] <0.07310506f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.53064615f ? 
                     (data[2 /* X3 */] <0.017044568f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (data[10 /* X11 */] <-0.829693f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.14380595f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13376364f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.36770734f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.044385437f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                     (data[11 /* X12 */] <-0.21989368f ? 
                         (data[1 /* X2 */] <-0.5115442f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.3285566f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.25546318f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1713687f ? 
                         (data[24 /* X25 */] <-0.48923904f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.037829902f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.27083153f ? 
                                0.0f : 
                                 (data[15 /* X16 */] <0.074637964f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[25 /* X26 */] <-0.11633543f ? 
                             (data[9 /* X10 */] <-0.7396599f ? 
                                1.0f : 
                                0.0f) : 
                             (data[11 /* X12 */] <-0.99898124f ? 
                                 (data[9 /* X10 */] <0.2320497f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10493021f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2741749f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35852933f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13830774f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.2413408f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.4326051f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16420814f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09997812f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24185316f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.39529806f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2602977f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_11_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[12 /* X13 */] <0.08215057f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.37112555f ? 
                 (data[15 /* X16 */] <0.05508835f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42342892f ? 
                         (data[23 /* X24 */] <0.068269856f ? 
                            1.0f : 
                             (data[34 /* X35 */] <-1.0244672f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2869302f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[25 /* X26 */] <-0.51078254f ? 
                     (data[12 /* X13 */] <0.3226142f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10803693f ? 
                         (data[24 /* X25 */] <-0.7269067f ? 
                            1.0f : 
                            0.0f) : 
                         (data[31 /* X32 */] <0.13732025f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18823041f ? 
         (data[29 /* X30 */] <0.054159034f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3160189f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.4202437f ? 
                    1.0f : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.51145625f ? 
             (data[16 /* X17 */] <-0.51143235f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.23598862f ? 
                    0.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20412433f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7318361f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.14665477f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[21 /* X22 */] <0.19459102f ? 
                 (data[9 /* X10 */] <-0.10849274f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11286624f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.06638888f ? 
             (data[20 /* X21 */] <0.16152078f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1539769f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[13 /* X14 */] <0.10455422f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15662801f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36175635f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.12371709f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[21 /* X22 */] <0.08877242f ? 
                 (data[9 /* X10 */] <-0.41942346f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
         (data[29 /* X30 */] <0.07978648f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.5276114f ? 
             (data[26 /* X27 */] <0.07874722f ? 
                 (data[15 /* X16 */] <0.08127359f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.06800871f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                             (data[3 /* X4 */] <-0.1699357f ? 
                                 (data[6 /* X7 */] <0.16183838f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13706551f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.21373126f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_11_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11836323f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4458926f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18539776f ? 
                 (data[12 /* X13 */] <0.1144625f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0972493f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3650416f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06662242f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.07837695f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.1493403f ? 
                     (data[28 /* X29 */] <0.13086781f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0148706315f ? 
                            1.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2552731f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39912057f ? 
                 (data[3 /* X4 */] <-0.7382659f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.018909223f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16573218f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20919988f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12502554f ? 
                                    1.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0110032605f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26454568f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.2949176f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_11_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7510719f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2511006f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5546381f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.011471204f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28992218f ? 
                 (data[14 /* X15 */] <0.14749674f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2781231f ? 
                         (data[30 /* X31 */] <0.116358444f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1388014f ? 
         (data[15 /* X16 */] <0.03839965f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.39171693f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.25044513f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31061974f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.155483f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1670161f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15396257f ? 
                         (data[10 /* X11 */] <-0.30077586f ? 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15144952f ? 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.021240849f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.10885169f ? 
                             (data[19 /* X20 */] <-0.4930424f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.13307962f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.24434455f ? 
                         (data[12 /* X13 */] <0.11991774f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[34 /* X35 */] <-1.013923f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.112162605f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
         (data[21 /* X22 */] <0.037810475f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27124366f ? 
                 (data[0 /* X1 */] <-0.23230356f ? 
                     (data[10 /* X11 */] <-0.32760584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.27129358f ? 
             (data[0 /* X1 */] <0.31825382f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-1.0402833f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_11_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23701419f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
            0.0f : 
             (data[26 /* X27 */] <0.13935351f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.35018066f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17227313f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.37239367f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_11_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13520454f ? 
         (data[32 /* X33 */] <-0.14985836f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08767241f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.6001393f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2235502f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5972029f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27284923f ? 
                     (data[10 /* X11 */] <-1.2086879f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.068269856f ? 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08124822f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15158242f ? 
                         (data[9 /* X10 */] <-0.5165893f ? 
                            1.0f : 
                            0.0f) : 
                         (data[7 /* X8 */] <0.0477291f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026993096f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.0197971f ? 
             (data[19 /* X20 */] <-0.08120338f ? 
                 (data[34 /* X35 */] <-0.054409996f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.38282195f ? 
                         (data[33 /* X34 */] <-0.1858175f ? 
                             (data[11 /* X12 */] <-0.27730012f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.04394022f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13732025f ? 
                         (data[7 /* X8 */] <0.03759087f ? 
                            1.0f : 
                            0.0f) : 
                         (data[20 /* X21 */] <0.24719702f ? 
                             (data[11 /* X12 */] <-0.73655176f ? 
                                 (data[19 /* X20 */] <0.20968369f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[13 /* X14 */] <0.15156703f ? 
                                0.0f : 
                                 (data[27 /* X28 */] <-0.04595977f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.18524437f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.0856514f ? 
                    1.0f : 
                    0.0f))) : 
        0.0121951215f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21878733f ? 
         (data[21 /* X22 */] <0.15452977f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.6607465f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.08579541f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.0036785947f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24773014f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21859473f ? 
                            0.0f : 
                             (data[12 /* X13 */] <0.1222509f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.8573462f ? 
                         (data[11 /* X12 */] <-1.0809904f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[1 /* X2 */] <-0.5687867f ? 
             (data[33 /* X34 */] <-0.38580027f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0016932973f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.116652705f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.19987248f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_11_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-1.0297099f ? 
        1.0f : 
         (data[15 /* X16 */] <0.0348235f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
                 (data[35 /* X36 */] <-0.50936174f ? 
                     (data[1 /* X2 */] <-0.43478042f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32362857f ? 
                     (data[23 /* X24 */] <0.07253672f ? 
                        1.0f : 
                         (data[30 /* X31 */] <0.16388576f ? 
                            0.0f : 
                             (data[19 /* X20 */] <-0.6462191f ? 
                                 (data[35 /* X36 */] <-0.69367665f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26984957f ? 
                                    0.0f : 
                                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07615975f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1301436f ? 
                         (data[31 /* X32 */] <0.12710601f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5556245f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14557283f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22090986f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1046143f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.15762994f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <4.8594706E-4f ? 
             (data[1 /* X2 */] <-0.60433936f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.11625337f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15843649f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19073457f ? 
                            0.0f : 
                             (data[1 /* X2 */] <-0.21334532f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[14 /* X15 */] <0.19363156f ? 
                             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12311592f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.23361334f ? 
                        0.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21363087f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.28009146f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[3 /* X4 */] <0.032351308f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31170717f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13785632f ? 
                         (data[3 /* X4 */] <0.24682973f ? 
                             (data[14 /* X15 */] <0.20121433f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_11_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[17 /* X18 */] <-0.52405685f ? 
             (data[8 /* X9 */] <0.06337384f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28491306f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.806779f ? 
                 (data[21 /* X22 */] <0.16439338f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.62843835f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.9401144f ? 
                         (data[30 /* X31 */] <0.108006634f ? 
                             (data[26 /* X27 */] <0.31091526f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20540558f ? 
                            0.0f : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.84212434f ? 
                                0.0f : 
                                1.0f)))))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11097518f ? 
         (data[30 /* X31 */] <0.11816723f ? 
            0.0f : 
             (data[20 /* X21 */] <0.16994795f ? 
                 (data[8 /* X9 */] <0.2539186f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16174826f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27124906f ? 
                     (data[7 /* X8 */] <0.073583595f ? 
                         (data[5 /* X6 */] <0.09697602f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5665143f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f))) : 
        0.012048192f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17120071f ? 
         (data[15 /* X16 */] <0.05747245f ? 
             (data[35 /* X36 */] <-0.08208622f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.11871161f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.15288584f ? 
                     (data[20 /* X21 */] <0.18539776f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.65497965f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1384303f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[10 /* X11 */] <-0.19803494f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4045042f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23976636f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <0.024123192f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[8 /* X9 */] <0.41948426f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[32 /* X33 */] <-0.01935416f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.06499742f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2266943f ? 
                     (data[5 /* X6 */] <0.10004628f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13215336f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11391389f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_11_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[25 /* X26 */] <-0.0010903378f ? 
             (data[8 /* X9 */] <0.0049865334f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.119987465f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.35562116f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21371138f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24371022f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
             (data[25 /* X26 */] <-0.58682054f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <0.08177367f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_11_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.12263955f ? 
         (data[15 /* X16 */] <0.0395917f ? 
             (data[28 /* X29 */] <0.11370037f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.9401144f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2804541f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.12633342f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[16 /* X17 */] <-1.0297099f ? 
            1.0f : 
             (data[14 /* X15 */] <0.16912244f ? 
                 (data[21 /* X22 */] <0.19069631f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.63561445f ? 
                        1.0f : 
                         (data[32 /* X33 */] <0.19957453f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15724804f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.55829823f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2863842f ? 
                         (data[27 /* X28 */] <-0.6510883f ? 
                             (data[4 /* X5 */] <0.123273246f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24227531f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7536202f ? 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.44320753f ? 
                                    0.0f : 
                                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21249291f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[23 /* X24 */] <0.08192382f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.04532145f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06547357f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16788761f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.78583413f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.12504134f ? 
             (data[7 /* X8 */] <0.03501996f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.32760584f ? 
                     (data[14 /* X15 */] <0.2109321f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.4118269f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21699926f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39941573f ? 
                        0.0f : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.13495395f ? 
                        0.0f : 
                         (data[8 /* X9 */] <-0.19936906f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.32995552f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_11_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.871854f ? 
             (data[26 /* X27 */] <-0.08393281f ? 
                 (data[28 /* X29 */] <0.15875633f ? 
                     (data[17 /* X18 */] <-0.24000727f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12869698f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39912057f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.044033594f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.0964876f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3076374f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19252421f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.04857441f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.7681469f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.34542495f ? 
                            1.0f : 
                            0.0f) : 
                         (data[27 /* X28 */] <-0.14380595f ? 
                             (data[17 /* X18 */] <-0.2252674f ? 
                                1.0f : 
                                 (data[32 /* X33 */] <-0.427273f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
                                0.0f : 
                                 (data[4 /* X5 */] <0.106188975f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.10231147f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))))) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16722418f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23034267f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X7 */] <0.21221295f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.07394828f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
         (data[19 /* X20 */] <0.011405924f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.01935416f ? 
         (data[2 /* X3 */] <-0.18215647f ? 
             (data[35 /* X36 */] <-0.2035665f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17772065f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.93104833f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.34964478f ? 
                         (data[21 /* X22 */] <0.2257379f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[35 /* X36 */] <-0.044385437f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32915255f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.11759715f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.0856514f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <1.1495024f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X11 */] <-0.042549863f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16869971f ? 
                                 (data[11 /* X12 */] <-0.5582645f ? 
                                    1.0f : 
                                     (data[32 /* X33 */] <-0.452273f ? 
                                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.34484667f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[24 /* X25 */] <0.122694634f ? 
                                 (data[5 /* X6 */] <0.18365043f ? 
                                    0.0f : 
                                     (data[28 /* X29 */] <0.18428266f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)))))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0032345147f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.14620657f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_11_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.26434147f ? 
         (data[11 /* X12 */] <-0.4326051f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6760139f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17127813f ? 
                    1.0f : 
                     (data[10 /* X11 */] <0.26842028f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3725011f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_11_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.16193505f ? 
             (data[25 /* X26 */] <-0.48702067f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.41720426f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29532954f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.35055628f ? 
                 (data[34 /* X35 */] <-0.8873939f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.16171049f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5104602f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-1.0074526f ? 
                        1.0f : 
                         (data[7 /* X8 */] <0.07872541f ? 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10218543f ? 
                                 (data[1 /* X2 */] <-0.13407601f ? 
                                     (data[22 /* X23 */] <0.17710902f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19244659f ? 
                                 (data[14 /* X15 */] <0.141736f ? 
                                    1.0f : 
                                     (data[24 /* X25 */] <-0.74596137f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15088333f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15481044f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27982348f ? 
                 (data[22 /* X23 */] <0.049058236f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20823623f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.066753864f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.47661236f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.37968513f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.081396036f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.21146855f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1597793f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1309327f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5501675f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30912593f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.31194663f ? 
                     (data[27 /* X28 */] <-0.47482267f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.57634395f ? 
             (data[25 /* X26 */] <-0.2351448f ? 
                 (data[35 /* X36 */] <-0.40882632f ? 
                     (data[22 /* X23 */] <0.1671614f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25645366f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.8030411f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06752841f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15342699f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7827236f ? 
        0.75f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24822436f ? 
                 (data[9 /* X10 */] <-0.16679224f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.1805569f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.06844178f ? 
                             (data[31 /* X32 */] <0.06997113f ? 
                                0.0f : 
                                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.52769303f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.3582054f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3269868f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X2 */] <-0.46212864f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.2602673f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_11_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.05012405f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13896638f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06517956f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42477983f ? 
                 (data[14 /* X15 */] <0.094012775f ? 
                     (data[35 /* X36 */] <-0.1957122f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01015714f ? 
                 (data[8 /* X9 */] <-0.41345587f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.1090183f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.57990813f ? 
                             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.2470283f ? 
                                1.0f : 
                                 (data[11 /* X12 */] <-1.0835898f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8807962f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                         (data[27 /* X28 */] <0.63181067f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.48414865f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_11_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17836681f ? 
             (data[4 /* X5 */] <0.1234346f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1450018f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26194173f ? 
                 (data[6 /* X7 */] <0.120313406f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37818593f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.00810628f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_11_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08522795f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1871628f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16467413f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22200455f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23084588f ? 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.121386506f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09306465f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.22840409f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.41290185f ? 
                     (data[0 /* X1 */] <0.1934608f ? 
                        0.0f : 
                        1.0f) : 
                     (data[31 /* X32 */] <0.06630595f ? 
                         (data[6 /* X7 */] <0.18498346f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[14 /* X15 */] <0.13452134f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.14899169f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9145233f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[14 /* X15 */] <0.091990806f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3025258f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.32543993f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[3 /* X4 */] <0.03751169f ? 
             (data[25 /* X26 */] <-0.33732086f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.13622835f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25425294f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2958854f ? 
                         (data[34 /* X35 */] <-1.319702f ? 
                            0.0f : 
                             (data[7 /* X8 */] <0.07666869f ? 
                                 (data[32 /* X33 */] <0.145454f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[0 /* X1 */] <0.14941622f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67681617f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.380657f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.714371f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.7354086f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <0.004829265f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_11_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.34494445f ? 
         (data[20 /* X21 */] <0.18610002f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.02418891f ? 
                 (data[18 /* X19 */] <0.22539584f ? 
                     (data[22 /* X23 */] <0.17806323f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16823243f ? 
                    1.0f : 
                     (data[35 /* X36 */] <-0.63530916f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_11_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43586466f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19466653f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.09385076f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25130007f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.18466352f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.08608165f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.15221737f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.29266393f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35124177f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16087437f ? 
         (data[3 /* X4 */] <-0.15170236f ? 
             (data[25 /* X26 */] <-0.09970211f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23627992f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11715987f ? 
                     (data[20 /* X21 */] <0.15343513f ? 
                         (data[13 /* X14 */] <0.29021943f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[21 /* X22 */] <0.14272517f ? 
                        1.0f : 
                        0.0f))) : 
             (data[28 /* X29 */] <0.0720236f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25180852f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3264826f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.20809601f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[19 /* X20 */] <-0.053965352f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.03138037f ? 
                 (data[18 /* X19 */] <0.046777654f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X9 */] <-0.2772188f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.55372083f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.106318936f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (data[9 /* X10 */] <-0.064768106f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22257386f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.45025644f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.14411847f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[22 /* X23 */] <0.21258569f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3409861f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_11_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_11_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_11_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_11_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_11_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_11_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_11_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_11_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33265635f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29714102f ? 
             (data[12 /* X13 */] <0.14035024f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21613345f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16854341f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.16573218f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.36345893f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[19 /* X20 */] <-0.6586496f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3114812f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-1.0074526f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.745673f ? 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5529707f ? 
                                 (data[6 /* X7 */] <0.095067814f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9659441f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[27 /* X28 */] <-0.28925332f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06640579f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_11_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.26097438f ? 
         (data[2 /* X3 */] <-0.15496367f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.04697262f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.7188105f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11086178f ? 
                     (data[23 /* X24 */] <0.13227284f ? 
                         (data[15 /* X16 */] <0.12242264f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[33 /* X34 */] <0.47631904f ? 
                         (data[17 /* X18 */] <-0.38740596f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31730178f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21782123f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08604229f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22823815f ? 
                         (data[32 /* X33 */] <0.048275553f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_11_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.94104934f ? 
         (data[12 /* X13 */] <0.09003153f ? 
             (data[6 /* X7 */] <0.19944912f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.24940193f ? 
                 (data[35 /* X36 */] <-0.76907825f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.13725662f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31883112f ? 
                             (data[23 /* X24 */] <0.08192382f ? 
                                 (data[33 /* X34 */] <-0.19432406f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9907328f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_11_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.054986775f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46831757f ? 
             (data[25 /* X26 */] <-0.6034539f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.81731886f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.099965245f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.16924569f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.41914192f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.31589177f ? 
                 (data[23 /* X24 */] <0.106671646f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_11_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.21058403f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6864345f ? 
            0.0f : 
            1.0f) : 
         (data[17 /* X18 */] <-0.11871043f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17355944f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.02858856f ? 
                     (data[22 /* X23 */] <0.11281673f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.20846978f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044033594f ? 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22142057f ? 
                                1.0f : 
                                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16963212f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.021498224f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2189451f ? 
                 (data[7 /* X8 */] <0.045303594f ? 
                     (data[29 /* X30 */] <0.13572931f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.054409996f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.41914192f ? 
                         (data[6 /* X7 */] <0.19880892f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.54272574f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_11_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42619812f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24340416f ? 
             (data[9 /* X10 */] <-0.12792592f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2138115f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.20643617f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.51245093f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.09719126f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}



