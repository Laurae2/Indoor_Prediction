/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:10.155+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_06

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_06 > h2o_nn_32x6_ReLU_06.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_06.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_06", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_06 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_06_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_06_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_06_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_06_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_06_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_06_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_06_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_06_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_06_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_06.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_06_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_06() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-2022465633304685592L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_06_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_06_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_06_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_06_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_06_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_06_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_06_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_06_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_06_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3857313561917121;
      sa[1] = 0.5892470183453353;
      sa[2] = 0.4995443997316655;
      sa[3] = 0.33533502325781;
      sa[4] = 0.495782003025709;
      sa[5] = 0.6390265585181084;
      sa[6] = 0.36958533824052153;
      sa[7] = 0.4336071338825893;
      sa[8] = 0.4896770650590522;
      sa[9] = 0.6373126756159795;
      sa[10] = 0.25639450063425323;
      sa[11] = 0.6028210496872843;
      sa[12] = 0.6068587865582119;
      sa[13] = 0.4571920174695218;
      sa[14] = 0.6084587953980793;
      sa[15] = 0.5809695376598336;
      sa[16] = 0.5658921915233167;
      sa[17] = 0.5569831804809144;
      sa[18] = 0.48765923962781976;
      sa[19] = 0.6923732428014795;
      sa[20] = 0.44706446384633913;
      sa[21] = 0.5691746624311427;
      sa[22] = 0.4392902119755932;
      sa[23] = 0.5521416363853114;
      sa[24] = 0.4858443621608894;
      sa[25] = 0.6025051483731148;
      sa[26] = 0.46451222557716443;
      sa[27] = 0.524307835612228;
      sa[28] = 0.40104535908600664;
      sa[29] = 0.49680929862960715;
      sa[30] = 0.7598244516109638;
      sa[31] = 0.42233611145394323;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_06_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_06_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.04935937269411307;
      sa[1] = -0.0497638332712617;
      sa[2] = -0.100770891039152;
      sa[3] = -0.01600439917320902;
      sa[4] = -0.03908880710454879;
      sa[5] = 0.005728108000550543;
    }
  }
}
class h2o_nn_32x6_ReLU_06_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_06_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_06_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.081681505f;
      sa[1] = 0.23188932f;
      sa[2] = 0.07447534f;
      sa[3] = -0.02794966f;
      sa[4] = -0.24994221f;
      sa[5] = -0.23522875f;
      sa[6] = -0.19338201f;
      sa[7] = 0.18503825f;
      sa[8] = 0.06892795f;
      sa[9] = -0.12972337f;
      sa[10] = -0.17465052f;
      sa[11] = -0.2924398f;
      sa[12] = 0.065261304f;
      sa[13] = -0.29722634f;
      sa[14] = -0.27585897f;
      sa[15] = -0.011404308f;
      sa[16] = -0.012351165f;
      sa[17] = 0.17704923f;
      sa[18] = -0.16055854f;
      sa[19] = 0.1619217f;
      sa[20] = 0.20287332f;
      sa[21] = -0.35378656f;
      sa[22] = 0.1261833f;
      sa[23] = -0.16202736f;
      sa[24] = 0.24660213f;
      sa[25] = -0.07079536f;
      sa[26] = -0.06951905f;
      sa[27] = 0.46522993f;
      sa[28] = 0.24841855f;
      sa[29] = -0.26295924f;
      sa[30] = -0.17078808f;
      sa[31] = 0.2422464f;
      sa[32] = 0.22777544f;
      sa[33] = -0.18049803f;
      sa[34] = 0.021946235f;
      sa[35] = -0.1105837f;
      sa[36] = 0.27352858f;
      sa[37] = 0.18427703f;
      sa[38] = -0.31341287f;
      sa[39] = 0.20058265f;
      sa[40] = -0.06578721f;
      sa[41] = -0.0847551f;
      sa[42] = -0.18936184f;
      sa[43] = -0.12890704f;
      sa[44] = 0.35918957f;
      sa[45] = -0.45178968f;
      sa[46] = 0.07345563f;
      sa[47] = 0.042400222f;
      sa[48] = 0.14787431f;
      sa[49] = 0.23866454f;
      sa[50] = 0.14579199f;
      sa[51] = -0.4318393f;
      sa[52] = -0.21034397f;
      sa[53] = 0.026267065f;
      sa[54] = 0.20273393f;
      sa[55] = 0.06122241f;
      sa[56] = -0.2833173f;
      sa[57] = -0.41374305f;
      sa[58] = 0.16800807f;
      sa[59] = -0.4014741f;
      sa[60] = -0.44147575f;
      sa[61] = 0.25311476f;
      sa[62] = 0.15109491f;
      sa[63] = -0.017622547f;
      sa[64] = 0.018923985f;
      sa[65] = -0.036755238f;
      sa[66] = -0.053668186f;
      sa[67] = -0.023661062f;
      sa[68] = -0.19780837f;
      sa[69] = 0.044246227f;
      sa[70] = 0.025576424f;
      sa[71] = 0.34980562f;
      sa[72] = -0.3325955f;
      sa[73] = 0.2631989f;
      sa[74] = -0.08664709f;
      sa[75] = -0.106513105f;
      sa[76] = -0.12911564f;
      sa[77] = -0.036906183f;
      sa[78] = -0.054931637f;
      sa[79] = 0.3819159f;
      sa[80] = -0.39860287f;
      sa[81] = 0.11718309f;
      sa[82] = -0.06756584f;
      sa[83] = 0.08336596f;
      sa[84] = 0.09316121f;
      sa[85] = -0.06994059f;
      sa[86] = 0.20920344f;
      sa[87] = 0.45119563f;
      sa[88] = 0.31170362f;
      sa[89] = 0.1778892f;
      sa[90] = -0.21094458f;
      sa[91] = 0.109003685f;
      sa[92] = 0.18764453f;
      sa[93] = -0.10350483f;
      sa[94] = -0.10826303f;
      sa[95] = -0.05539981f;
      sa[96] = 0.22316454f;
      sa[97] = -0.07514791f;
      sa[98] = 0.22374497f;
      sa[99] = 0.09520504f;
      sa[100] = 0.102023326f;
      sa[101] = -0.018963592f;
      sa[102] = -0.08752842f;
      sa[103] = 0.15285529f;
      sa[104] = -0.08706068f;
      sa[105] = -0.13994777f;
      sa[106] = -0.19526157f;
      sa[107] = 0.1432046f;
      sa[108] = 0.12559414f;
      sa[109] = -0.062666774f;
      sa[110] = -0.1034597f;
      sa[111] = 0.16112997f;
      sa[112] = 0.13469219f;
      sa[113] = 0.023254812f;
      sa[114] = -0.017808644f;
      sa[115] = 0.012448826f;
      sa[116] = -0.21668944f;
      sa[117] = -0.07733006f;
      sa[118] = -0.36318272f;
      sa[119] = 0.164305f;
      sa[120] = 0.29478672f;
      sa[121] = 0.320658f;
      sa[122] = 0.46648836f;
      sa[123] = 0.44967335f;
      sa[124] = 0.3263941f;
      sa[125] = 0.15730457f;
      sa[126] = -0.29937604f;
      sa[127] = -0.43061844f;
      sa[128] = 0.13670777f;
      sa[129] = 0.20432973f;
      sa[130] = 0.03128469f;
      sa[131] = 0.37394124f;
      sa[132] = 0.18396544f;
      sa[133] = -0.23965617f;
      sa[134] = -0.06542943f;
      sa[135] = -0.42835155f;
      sa[136] = -0.3115334f;
      sa[137] = -0.11539293f;
      sa[138] = 0.0140298875f;
      sa[139] = -0.18828629f;
      sa[140] = -0.09232224f;
      sa[141] = -0.14129722f;
      sa[142] = 0.18279096f;
      sa[143] = -0.25200012f;
      sa[144] = 0.070202366f;
      sa[145] = -0.23622064f;
      sa[146] = -0.42468438f;
      sa[147] = -0.0743313f;
      sa[148] = 0.15408443f;
      sa[149] = 0.13643576f;
      sa[150] = 0.2340989f;
      sa[151] = -0.21438438f;
      sa[152] = -0.09556937f;
      sa[153] = 0.2899765f;
      sa[154] = 0.12415584f;
      sa[155] = -0.09230761f;
      sa[156] = 0.12943856f;
      sa[157] = -0.20872113f;
      sa[158] = 0.06277112f;
      sa[159] = 0.14343597f;
      sa[160] = -0.06971481f;
      sa[161] = 0.15960972f;
      sa[162] = 0.044482645f;
      sa[163] = -0.3364264f;
      sa[164] = 0.21030518f;
      sa[165] = -0.04431177f;
      sa[166] = -0.08681543f;
      sa[167] = -0.032132693f;
      sa[168] = 0.138233f;
      sa[169] = 0.15755019f;
      sa[170] = 0.24935643f;
      sa[171] = 0.07102819f;
      sa[172] = -0.07983055f;
      sa[173] = -0.15192546f;
      sa[174] = -0.06382725f;
      sa[175] = -0.16286202f;
      sa[176] = 0.026937377f;
      sa[177] = 0.08224446f;
      sa[178] = -0.1187422f;
      sa[179] = 0.106730126f;
      sa[180] = -0.12031039f;
      sa[181] = -0.42008457f;
      sa[182] = -0.2315091f;
      sa[183] = 0.2047356f;
      sa[184] = 0.31873623f;
      sa[185] = 0.12807786f;
      sa[186] = -0.29806107f;
      sa[187] = -0.010432648f;
      sa[188] = -0.14107724f;
      sa[189] = 0.17425893f;
      sa[190] = 0.023487767f;
      sa[191] = -0.28279462f;
      sa[192] = -0.18283384f;
      sa[193] = 0.08414605f;
      sa[194] = 0.015232031f;
      sa[195] = 0.08993726f;
      sa[196] = 0.15085201f;
      sa[197] = -0.03261875f;
      sa[198] = 0.35647264f;
      sa[199] = -0.106086425f;
      sa[200] = -0.010195507f;
      sa[201] = -0.27276286f;
      sa[202] = 0.09185662f;
      sa[203] = -0.092028484f;
      sa[204] = -0.34279385f;
      sa[205] = 0.24350525f;
      sa[206] = 0.42841136f;
      sa[207] = 0.097159274f;
      sa[208] = -0.33078685f;
      sa[209] = -0.10735926f;
      sa[210] = -0.3646764f;
      sa[211] = -0.3960814f;
      sa[212] = 0.2916868f;
      sa[213] = -0.23580912f;
      sa[214] = -0.048277847f;
      sa[215] = 0.09606028f;
      sa[216] = 0.07736703f;
      sa[217] = 0.07822497f;
      sa[218] = -0.18209887f;
      sa[219] = 0.2928204f;
      sa[220] = -0.26420498f;
      sa[221] = -0.04420796f;
      sa[222] = 0.11910449f;
      sa[223] = -0.009338178f;
      sa[224] = 0.046942007f;
      sa[225] = 0.3683417f;
      sa[226] = -0.12707435f;
      sa[227] = 0.079523146f;
      sa[228] = 0.0060307593f;
      sa[229] = -0.024046158f;
      sa[230] = 0.11972611f;
      sa[231] = -0.36142984f;
      sa[232] = -0.23656487f;
      sa[233] = 0.22200705f;
      sa[234] = 0.25604308f;
      sa[235] = -0.16194548f;
      sa[236] = -0.13110247f;
      sa[237] = -0.29018348f;
      sa[238] = -0.31012765f;
      sa[239] = 0.05335092f;
      sa[240] = -0.06055724f;
      sa[241] = -0.08083453f;
      sa[242] = 0.007676266f;
      sa[243] = -0.16174182f;
      sa[244] = -0.26265872f;
      sa[245] = -0.1570763f;
      sa[246] = -0.31245157f;
      sa[247] = -0.12460605f;
      sa[248] = 0.28113446f;
      sa[249] = 0.2097059f;
      sa[250] = -0.11644531f;
      sa[251] = -0.05396018f;
      sa[252] = -0.090514936f;
      sa[253] = -0.22230203f;
      sa[254] = -0.08216571f;
      sa[255] = 0.33725405f;
      sa[256] = -0.18640529f;
      sa[257] = 0.3052726f;
      sa[258] = -0.17250104f;
      sa[259] = -0.15025748f;
      sa[260] = -0.07375784f;
      sa[261] = -0.13168654f;
      sa[262] = -0.11192012f;
      sa[263] = 0.35500163f;
      sa[264] = -0.1605926f;
      sa[265] = 0.088979945f;
      sa[266] = -0.20722237f;
      sa[267] = -0.23672079f;
      sa[268] = 0.20812103f;
      sa[269] = -0.16789562f;
      sa[270] = -0.13659573f;
      sa[271] = 0.39173734f;
      sa[272] = -0.12617281f;
      sa[273] = -0.16782816f;
      sa[274] = 0.11291989f;
      sa[275] = -0.086245485f;
      sa[276] = 0.070425555f;
      sa[277] = -0.10007039f;
      sa[278] = -0.27194178f;
      sa[279] = 0.11675068f;
      sa[280] = -0.22892334f;
      sa[281] = 0.18470648f;
      sa[282] = -0.13984634f;
      sa[283] = -0.17752893f;
      sa[284] = 0.01569307f;
      sa[285] = -0.17447752f;
      sa[286] = 0.25853667f;
      sa[287] = 0.083183266f;
      sa[288] = -0.2885947f;
      sa[289] = -0.18927075f;
      sa[290] = -0.17785779f;
      sa[291] = -0.14124595f;
      sa[292] = 0.13632429f;
      sa[293] = -0.14019214f;
      sa[294] = 0.0016327371f;
      sa[295] = 0.11167016f;
      sa[296] = 0.059486326f;
      sa[297] = 0.23883466f;
      sa[298] = -0.06000865f;
      sa[299] = -0.27206993f;
      sa[300] = -0.025702523f;
      sa[301] = -0.119835526f;
      sa[302] = 0.07404173f;
      sa[303] = -0.03271873f;
      sa[304] = -0.18401706f;
      sa[305] = 0.03244831f;
      sa[306] = 0.37496975f;
      sa[307] = -0.11592786f;
      sa[308] = 0.09349935f;
      sa[309] = 0.17255494f;
      sa[310] = 0.23742701f;
      sa[311] = 0.36103785f;
      sa[312] = -0.15003797f;
      sa[313] = -0.19163896f;
      sa[314] = -0.019558528f;
      sa[315] = 0.18543231f;
      sa[316] = 0.012341568f;
      sa[317] = -0.02247329f;
      sa[318] = 0.11933836f;
      sa[319] = 0.362188f;
      sa[320] = -0.17749971f;
      sa[321] = 0.0353645f;
      sa[322] = 0.38051233f;
      sa[323] = 0.024821235f;
      sa[324] = 0.114402846f;
      sa[325] = 0.17480421f;
      sa[326] = -0.42607203f;
      sa[327] = 0.022264918f;
      sa[328] = -0.17219728f;
      sa[329] = 0.29237548f;
      sa[330] = -0.18162419f;
      sa[331] = -0.006736261f;
      sa[332] = -0.06504312f;
      sa[333] = 0.011830998f;
      sa[334] = -0.040803112f;
      sa[335] = 0.45064265f;
      sa[336] = -0.15888837f;
      sa[337] = -0.08809406f;
      sa[338] = 0.29096678f;
      sa[339] = -0.15738072f;
      sa[340] = -0.45723596f;
      sa[341] = -0.40885806f;
      sa[342] = 0.023512915f;
      sa[343] = -0.21069452f;
      sa[344] = -0.2320156f;
      sa[345] = 0.08598077f;
      sa[346] = 0.17032024f;
      sa[347] = -0.28234553f;
      sa[348] = 0.13021366f;
      sa[349] = -0.22917525f;
      sa[350] = -0.31210572f;
      sa[351] = 0.064167164f;
      sa[352] = 0.09010114f;
      sa[353] = -0.17929533f;
      sa[354] = 0.001946395f;
      sa[355] = 0.0032314016f;
      sa[356] = -0.08083835f;
      sa[357] = 0.37328026f;
      sa[358] = -0.40492f;
      sa[359] = -0.06488278f;
      sa[360] = 0.055667225f;
      sa[361] = 0.054427486f;
      sa[362] = -0.20069368f;
      sa[363] = 0.13983153f;
      sa[364] = -0.23164372f;
      sa[365] = -0.25112975f;
      sa[366] = -0.08758333f;
      sa[367] = -0.30082884f;
      sa[368] = -0.19201197f;
      sa[369] = 0.26337332f;
      sa[370] = -0.14399257f;
      sa[371] = 0.29568976f;
      sa[372] = -0.03594966f;
      sa[373] = 0.28324834f;
      sa[374] = -0.15972973f;
      sa[375] = -0.227746f;
      sa[376] = -0.2475746f;
      sa[377] = -0.27132553f;
      sa[378] = 0.17257416f;
      sa[379] = 0.051411834f;
      sa[380] = -0.15760097f;
      sa[381] = -0.18128046f;
      sa[382] = -0.08396336f;
      sa[383] = -0.1610709f;
      sa[384] = -0.1137859f;
      sa[385] = 0.11682405f;
      sa[386] = -0.37111223f;
      sa[387] = -0.15586121f;
      sa[388] = 0.037265997f;
      sa[389] = -0.07922999f;
      sa[390] = -0.036128722f;
      sa[391] = -0.11614165f;
      sa[392] = 0.18966621f;
      sa[393] = 0.30132788f;
      sa[394] = -0.03486001f;
      sa[395] = 0.2389453f;
      sa[396] = 0.46990106f;
      sa[397] = -0.29651755f;
      sa[398] = -0.124533184f;
      sa[399] = -0.20947558f;
      sa[400] = 0.120391205f;
      sa[401] = 0.26007628f;
      sa[402] = -0.19911946f;
      sa[403] = -0.019885018f;
      sa[404] = 0.4251711f;
      sa[405] = -0.45878336f;
      sa[406] = -0.057019763f;
      sa[407] = -0.10098373f;
      sa[408] = -0.24680488f;
      sa[409] = -0.2055786f;
      sa[410] = -0.17888565f;
      sa[411] = 0.05162016f;
      sa[412] = -0.15901126f;
      sa[413] = -0.028547648f;
      sa[414] = 0.17948227f;
      sa[415] = 0.48220947f;
      sa[416] = -0.2359004f;
      sa[417] = -0.048025627f;
      sa[418] = -0.07402057f;
      sa[419] = 0.1592157f;
      sa[420] = 0.15148216f;
      sa[421] = 0.19626193f;
      sa[422] = 0.369892f;
      sa[423] = 0.1491635f;
      sa[424] = 0.08564404f;
      sa[425] = -0.07851918f;
      sa[426] = -0.23052059f;
      sa[427] = 0.18780023f;
      sa[428] = -0.1524502f;
      sa[429] = -0.4037631f;
      sa[430] = 0.2991677f;
      sa[431] = 0.032550514f;
      sa[432] = 0.05659754f;
      sa[433] = 0.17043564f;
      sa[434] = 0.37215763f;
      sa[435] = -0.100424156f;
      sa[436] = -0.21551849f;
      sa[437] = -0.124883905f;
      sa[438] = 0.026152741f;
      sa[439] = 0.17161198f;
      sa[440] = 0.37331325f;
      sa[441] = -0.2316107f;
      sa[442] = 0.093720555f;
      sa[443] = 0.07970442f;
      sa[444] = -0.11947316f;
      sa[445] = 0.23415005f;
      sa[446] = 0.28259996f;
      sa[447] = 0.2668653f;
      sa[448] = 0.25965342f;
      sa[449] = 0.2905525f;
      sa[450] = -0.30739915f;
      sa[451] = 0.23078938f;
      sa[452] = 0.23263873f;
      sa[453] = -0.0025157856f;
      sa[454] = -0.11305481f;
      sa[455] = 0.063069634f;
      sa[456] = 0.06953577f;
      sa[457] = 0.0055771335f;
      sa[458] = -0.24848153f;
      sa[459] = 0.3605658f;
      sa[460] = 0.33643818f;
      sa[461] = 0.41182646f;
      sa[462] = 0.24054442f;
      sa[463] = 0.4150522f;
      sa[464] = -0.308381f;
      sa[465] = 0.19876617f;
      sa[466] = -0.056377392f;
      sa[467] = 0.06854657f;
      sa[468] = -0.052922867f;
      sa[469] = 0.31267542f;
      sa[470] = 0.1599634f;
      sa[471] = -0.059167854f;
      sa[472] = -0.011751715f;
      sa[473] = -0.060342982f;
      sa[474] = -0.0625803f;
      sa[475] = 0.18172652f;
      sa[476] = 0.07381808f;
      sa[477] = -0.09147478f;
      sa[478] = 0.0804059f;
      sa[479] = -0.20764981f;
      sa[480] = -0.2919909f;
      sa[481] = -0.15514793f;
      sa[482] = -0.2856868f;
      sa[483] = 0.2585595f;
      sa[484] = 0.28075936f;
      sa[485] = 0.21308601f;
      sa[486] = -0.08848006f;
      sa[487] = -0.1344078f;
      sa[488] = -0.200871f;
      sa[489] = 0.056839053f;
      sa[490] = -0.042375755f;
      sa[491] = -0.15500192f;
      sa[492] = 0.24676573f;
      sa[493] = 0.1370173f;
      sa[494] = -0.17184071f;
      sa[495] = 0.2753646f;
      sa[496] = 0.03109689f;
      sa[497] = 0.110770516f;
      sa[498] = 0.2396741f;
      sa[499] = 0.29093385f;
      sa[500] = -0.11159077f;
      sa[501] = 0.10269008f;
      sa[502] = 0.2949085f;
      sa[503] = 0.059292845f;
      sa[504] = -0.15665255f;
      sa[505] = -0.08910139f;
      sa[506] = 0.31665447f;
      sa[507] = 0.027036315f;
      sa[508] = 0.25559568f;
      sa[509] = 0.25943264f;
      sa[510] = 0.2909691f;
      sa[511] = 0.05781124f;
      sa[512] = 0.047630984f;
      sa[513] = -0.075761534f;
      sa[514] = 0.13081683f;
      sa[515] = -0.4132412f;
      sa[516] = 0.10374233f;
      sa[517] = 0.11791196f;
      sa[518] = 0.22399016f;
      sa[519] = -0.08164242f;
      sa[520] = 0.3671526f;
      sa[521] = 0.20319763f;
      sa[522] = 0.12655936f;
      sa[523] = 0.28033516f;
      sa[524] = 0.29714596f;
      sa[525] = 0.29009154f;
      sa[526] = 0.12055208f;
      sa[527] = 0.05288864f;
      sa[528] = 0.12321931f;
      sa[529] = 0.14586961f;
      sa[530] = -0.21350601f;
      sa[531] = 0.008497223f;
      sa[532] = 0.2562568f;
      sa[533] = 0.26779142f;
      sa[534] = 0.23020792f;
      sa[535] = -0.025549397f;
      sa[536] = 0.0047066477f;
      sa[537] = -0.42693084f;
      sa[538] = 0.31495738f;
      sa[539] = 0.33463544f;
      sa[540] = -0.38503778f;
      sa[541] = -0.19048285f;
      sa[542] = -0.001953554f;
      sa[543] = -0.12482585f;
      sa[544] = 0.2223561f;
      sa[545] = 0.10142339f;
      sa[546] = 0.10177241f;
      sa[547] = 0.21956573f;
      sa[548] = -0.046689186f;
      sa[549] = 0.28944367f;
      sa[550] = -0.047590237f;
      sa[551] = -0.1257521f;
      sa[552] = 0.038311668f;
      sa[553] = -0.1317436f;
      sa[554] = -0.16677181f;
      sa[555] = -0.17799288f;
      sa[556] = -0.2454307f;
      sa[557] = -0.12714353f;
      sa[558] = -0.10588982f;
      sa[559] = -0.0321812f;
      sa[560] = -0.23993368f;
      sa[561] = -0.011108332f;
      sa[562] = 0.19660805f;
      sa[563] = -0.00384306f;
      sa[564] = 0.20610107f;
      sa[565] = -0.011570262f;
      sa[566] = 0.29774982f;
      sa[567] = -0.1169493f;
      sa[568] = -0.04802844f;
      sa[569] = 0.067905106f;
      sa[570] = -0.059798792f;
      sa[571] = -0.06133918f;
      sa[572] = 0.13972719f;
      sa[573] = 0.33585906f;
      sa[574] = -0.07311725f;
      sa[575] = -0.41422063f;
      sa[576] = -0.16440114f;
      sa[577] = -0.09871013f;
      sa[578] = -0.104652725f;
      sa[579] = -0.0047051907f;
      sa[580] = 0.029422568f;
      sa[581] = -0.17510647f;
      sa[582] = -0.024973117f;
      sa[583] = -0.1908103f;
      sa[584] = 0.02680967f;
      sa[585] = 0.12194063f;
      sa[586] = -0.17107628f;
      sa[587] = -0.19605775f;
      sa[588] = -0.037292667f;
      sa[589] = 0.003906377f;
      sa[590] = -0.13693464f;
      sa[591] = -0.26021314f;
      sa[592] = -0.4613288f;
      sa[593] = -0.21639664f;
      sa[594] = 0.051581442f;
      sa[595] = -0.1131508f;
      sa[596] = 0.14170657f;
      sa[597] = -0.12244063f;
      sa[598] = 0.103118144f;
      sa[599] = -0.14632174f;
      sa[600] = -0.51525486f;
      sa[601] = 0.22562906f;
      sa[602] = 0.09393479f;
      sa[603] = 0.30186158f;
      sa[604] = 0.07632528f;
      sa[605] = 0.047290612f;
      sa[606] = 0.07863849f;
      sa[607] = -0.11846599f;
      sa[608] = 4.2573508E-4f;
      sa[609] = 0.14893202f;
      sa[610] = 0.11483525f;
      sa[611] = -0.01738842f;
      sa[612] = 0.12514554f;
      sa[613] = 0.12702787f;
      sa[614] = 0.10607884f;
      sa[615] = -0.13265009f;
      sa[616] = 0.021445572f;
      sa[617] = -0.23440385f;
      sa[618] = -0.16645585f;
      sa[619] = -0.0985142f;
      sa[620] = 0.13985819f;
      sa[621] = -0.2944749f;
      sa[622] = -0.3002506f;
      sa[623] = -0.17700782f;
      sa[624] = -0.0040459544f;
      sa[625] = 0.33580083f;
      sa[626] = 0.009004275f;
      sa[627] = 0.33400613f;
      sa[628] = -0.22928047f;
      sa[629] = -0.08079224f;
      sa[630] = -0.36665067f;
      sa[631] = 0.30680928f;
      sa[632] = 0.1072076f;
      sa[633] = -0.15993421f;
      sa[634] = -0.19267274f;
      sa[635] = 0.17676814f;
      sa[636] = -0.0826975f;
      sa[637] = -0.0705002f;
      sa[638] = -0.24100739f;
      sa[639] = 0.025994444f;
      sa[640] = -0.068520226f;
      sa[641] = -0.23463854f;
      sa[642] = 0.29167947f;
      sa[643] = -0.18552908f;
      sa[644] = -0.12424237f;
      sa[645] = -0.27181056f;
      sa[646] = 0.27098018f;
      sa[647] = -0.24802509f;
      sa[648] = 0.113483146f;
      sa[649] = -0.061721683f;
      sa[650] = 0.10953482f;
      sa[651] = -0.05557884f;
      sa[652] = 0.078515455f;
      sa[653] = -0.071852125f;
      sa[654] = 0.040533736f;
      sa[655] = -0.101995684f;
      sa[656] = 0.27225628f;
      sa[657] = -0.024222428f;
      sa[658] = -0.32102436f;
      sa[659] = 0.020732332f;
      sa[660] = -0.18343462f;
      sa[661] = 0.026896376f;
      sa[662] = -0.12269115f;
      sa[663] = 0.26409376f;
      sa[664] = -0.23984148f;
      sa[665] = 0.031606946f;
      sa[666] = -0.25499627f;
      sa[667] = -0.42649704f;
      sa[668] = 0.26848534f;
      sa[669] = -0.11562325f;
      sa[670] = 0.22156803f;
      sa[671] = 0.04285987f;
      sa[672] = -0.27500314f;
      sa[673] = 0.17495812f;
      sa[674] = 0.07001909f;
      sa[675] = -0.41138783f;
      sa[676] = -0.14723276f;
      sa[677] = -0.27840847f;
      sa[678] = 0.13478227f;
      sa[679] = -0.15023088f;
      sa[680] = 0.04647564f;
      sa[681] = 0.14430256f;
      sa[682] = -0.14718671f;
      sa[683] = -0.21178769f;
      sa[684] = -0.1392173f;
      sa[685] = -0.10615986f;
      sa[686] = -0.106405824f;
      sa[687] = -0.15027897f;
      sa[688] = -0.12616885f;
      sa[689] = -0.22575362f;
      sa[690] = -0.036270034f;
      sa[691] = 0.11940854f;
      sa[692] = -0.30352297f;
      sa[693] = -0.08044505f;
      sa[694] = 0.20526388f;
      sa[695] = -0.38523138f;
      sa[696] = -0.11633885f;
      sa[697] = -0.22770454f;
      sa[698] = -0.27060512f;
      sa[699] = 0.22154474f;
      sa[700] = 0.18828498f;
      sa[701] = 0.28079823f;
      sa[702] = 0.4480245f;
      sa[703] = 0.047443964f;
      sa[704] = -0.19812626f;
      sa[705] = 0.07592258f;
      sa[706] = -0.14836946f;
      sa[707] = 0.17268741f;
      sa[708] = 0.052332103f;
      sa[709] = -0.34207755f;
      sa[710] = 0.409338f;
      sa[711] = -0.061310295f;
      sa[712] = 0.17175607f;
      sa[713] = 0.33935127f;
      sa[714] = 0.26577803f;
      sa[715] = 0.21536581f;
      sa[716] = 0.007070675f;
      sa[717] = 0.096306875f;
      sa[718] = 0.0689708f;
      sa[719] = 0.17704864f;
      sa[720] = -0.27114087f;
      sa[721] = 0.38933852f;
      sa[722] = -0.039554257f;
      sa[723] = 0.054085013f;
      sa[724] = 0.014113315f;
      sa[725] = -0.36223748f;
      sa[726] = -0.27606168f;
      sa[727] = -0.40238217f;
      sa[728] = -0.11427037f;
      sa[729] = -0.004211231f;
      sa[730] = 0.20429672f;
      sa[731] = -0.24546032f;
      sa[732] = 0.13942906f;
      sa[733] = 0.14155638f;
      sa[734] = -0.20525289f;
      sa[735] = 0.16910803f;
      sa[736] = 0.055449348f;
      sa[737] = 0.2505125f;
      sa[738] = -0.15908165f;
      sa[739] = -0.2054702f;
      sa[740] = -0.27691594f;
      sa[741] = -0.29775557f;
      sa[742] = 0.038947944f;
      sa[743] = -0.04092141f;
      sa[744] = 0.05809404f;
      sa[745] = -0.07950898f;
      sa[746] = 0.08322786f;
      sa[747] = -0.16379608f;
      sa[748] = -0.13157254f;
      sa[749] = -0.19010003f;
      sa[750] = 0.14914742f;
      sa[751] = 0.13695149f;
      sa[752] = -0.004409066f;
      sa[753] = 0.13393454f;
      sa[754] = 0.0060129846f;
      sa[755] = 0.19013108f;
      sa[756] = -0.22088556f;
      sa[757] = 0.19012316f;
      sa[758] = -0.19896781f;
      sa[759] = 0.044975948f;
      sa[760] = -0.043448597f;
      sa[761] = 0.046179257f;
      sa[762] = -0.043438468f;
      sa[763] = 0.100880094f;
      sa[764] = 0.02045909f;
      sa[765] = -0.049135953f;
      sa[766] = -0.19340804f;
      sa[767] = -0.0013360414f;
      sa[768] = -0.19677988f;
      sa[769] = -0.31771702f;
      sa[770] = -0.0040790434f;
      sa[771] = -0.07733186f;
      sa[772] = 0.022532893f;
      sa[773] = -0.23936547f;
      sa[774] = 0.17492528f;
      sa[775] = 0.24292561f;
      sa[776] = -0.05878262f;
      sa[777] = 0.087142125f;
      sa[778] = 0.17787182f;
      sa[779] = -0.19048701f;
      sa[780] = -0.102442585f;
      sa[781] = 0.037453644f;
      sa[782] = 0.19773883f;
      sa[783] = -0.3005599f;
      sa[784] = -0.18566519f;
      sa[785] = -0.14285532f;
      sa[786] = -0.18537143f;
      sa[787] = -0.35275334f;
      sa[788] = -0.23200624f;
      sa[789] = 0.11620301f;
      sa[790] = -0.046808917f;
      sa[791] = -0.039091107f;
      sa[792] = 0.05818786f;
      sa[793] = 0.02569713f;
      sa[794] = -0.11095925f;
      sa[795] = -0.137124f;
      sa[796] = 0.24641941f;
      sa[797] = -0.20770615f;
      sa[798] = -0.22556451f;
      sa[799] = -0.10944923f;
      sa[800] = 0.103639156f;
      sa[801] = 0.109995134f;
      sa[802] = 0.11632493f;
      sa[803] = 0.35923666f;
      sa[804] = 0.36512202f;
      sa[805] = 0.36696997f;
      sa[806] = 0.39686787f;
      sa[807] = 0.36557463f;
      sa[808] = 0.009533312f;
      sa[809] = -0.23400125f;
      sa[810] = 0.0672856f;
      sa[811] = 0.088394664f;
      sa[812] = 0.3564953f;
      sa[813] = -0.18147126f;
      sa[814] = 0.17710043f;
      sa[815] = -0.008527484f;
      sa[816] = 0.11018086f;
      sa[817] = -0.46600196f;
      sa[818] = 0.047093835f;
      sa[819] = -0.14401473f;
      sa[820] = -0.092915945f;
      sa[821] = -0.07193616f;
      sa[822] = -0.2046077f;
      sa[823] = 0.2253535f;
      sa[824] = 0.25902086f;
      sa[825] = 0.44147214f;
      sa[826] = -0.41694066f;
      sa[827] = -0.4287449f;
      sa[828] = 0.08781766f;
      sa[829] = -0.047394726f;
      sa[830] = 0.28903437f;
      sa[831] = 0.26948494f;
      sa[832] = 0.1862232f;
      sa[833] = 0.09316742f;
      sa[834] = 0.24163723f;
      sa[835] = -0.027459292f;
      sa[836] = 0.22683583f;
      sa[837] = -0.092886604f;
      sa[838] = 0.14851065f;
      sa[839] = -0.13392343f;
      sa[840] = 0.2304679f;
      sa[841] = 0.1204398f;
      sa[842] = 0.21280351f;
      sa[843] = 0.12141479f;
      sa[844] = 0.040893532f;
      sa[845] = 0.17292689f;
      sa[846] = -0.2950344f;
      sa[847] = -0.08580947f;
      sa[848] = 0.26455453f;
      sa[849] = 0.30680728f;
      sa[850] = 0.053924683f;
      sa[851] = 0.15779884f;
      sa[852] = 0.24839833f;
      sa[853] = 0.15715247f;
      sa[854] = 0.15007247f;
      sa[855] = -0.056244154f;
      sa[856] = 0.11285972f;
      sa[857] = -0.1353353f;
      sa[858] = 0.13027802f;
      sa[859] = 0.05232468f;
      sa[860] = 0.4736232f;
      sa[861] = -0.08797957f;
      sa[862] = -0.3904642f;
      sa[863] = -0.1856799f;
      sa[864] = -0.29160786f;
      sa[865] = 0.16394298f;
      sa[866] = -0.29778963f;
      sa[867] = -0.10684524f;
      sa[868] = -0.1844514f;
      sa[869] = 0.16467117f;
      sa[870] = -0.07283879f;
      sa[871] = 0.14963314f;
      sa[872] = 0.095772564f;
      sa[873] = -0.07858983f;
      sa[874] = -0.08962925f;
      sa[875] = -0.33465844f;
      sa[876] = -0.23158999f;
      sa[877] = -0.23707719f;
      sa[878] = 0.0023879998f;
      sa[879] = 0.17268275f;
      sa[880] = -0.14934956f;
      sa[881] = -0.12665932f;
      sa[882] = 0.33314967f;
      sa[883] = 0.041114084f;
      sa[884] = -0.13481338f;
      sa[885] = -0.13123932f;
      sa[886] = 0.06915592f;
      sa[887] = -0.010414625f;
      sa[888] = -0.09776842f;
      sa[889] = -0.01049548f;
      sa[890] = -0.16090104f;
      sa[891] = 0.49352613f;
      sa[892] = 0.16661273f;
      sa[893] = 0.27011052f;
      sa[894] = 0.03448036f;
      sa[895] = 0.27114263f;
      sa[896] = -0.26046595f;
      sa[897] = 0.2042504f;
      sa[898] = 0.048998207f;
      sa[899] = 0.33059803f;
      sa[900] = -0.0036715653f;
      sa[901] = 0.13258952f;
      sa[902] = -0.2381255f;
      sa[903] = -0.17780899f;
      sa[904] = 0.14021301f;
      sa[905] = 0.21670155f;
      sa[906] = -0.33043844f;
      sa[907] = -0.23077135f;
      sa[908] = -0.16892292f;
      sa[909] = 0.10279913f;
      sa[910] = 0.14059667f;
      sa[911] = -0.3064267f;
      sa[912] = -0.062442806f;
      sa[913] = 0.068814635f;
      sa[914] = -0.28949204f;
      sa[915] = -0.009662046f;
      sa[916] = 0.24901912f;
      sa[917] = 0.11943767f;
      sa[918] = 0.032758884f;
      sa[919] = 0.28126115f;
      sa[920] = 0.08490616f;
      sa[921] = -0.13604538f;
      sa[922] = -0.22964655f;
      sa[923] = -0.15748656f;
      sa[924] = -0.086166196f;
      sa[925] = -0.18413535f;
      sa[926] = 0.09317454f;
      sa[927] = 0.14084582f;
      sa[928] = 0.29235277f;
      sa[929] = 0.19207622f;
      sa[930] = 0.2556083f;
      sa[931] = 0.10205226f;
      sa[932] = 0.15997833f;
      sa[933] = -0.05458741f;
      sa[934] = 0.27242085f;
      sa[935] = -0.17026833f;
      sa[936] = 0.0549755f;
      sa[937] = 0.119433515f;
      sa[938] = -0.23472548f;
      sa[939] = 0.0012893598f;
      sa[940] = -0.08144663f;
      sa[941] = -0.3354206f;
      sa[942] = -0.22889946f;
      sa[943] = -0.29033756f;
      sa[944] = -0.24320921f;
      sa[945] = -0.04927313f;
      sa[946] = -0.021649295f;
      sa[947] = 0.22686364f;
      sa[948] = 0.035426337f;
      sa[949] = -0.2303006f;
      sa[950] = 0.08051975f;
      sa[951] = -0.19530636f;
      sa[952] = -0.2600748f;
      sa[953] = -0.2860474f;
      sa[954] = -0.04534158f;
      sa[955] = -0.002974573f;
      sa[956] = -0.08705204f;
      sa[957] = -0.026674507f;
      sa[958] = 0.054763384f;
      sa[959] = -0.28224543f;
      sa[960] = 0.21305436f;
      sa[961] = -0.11033361f;
      sa[962] = 0.11106501f;
      sa[963] = -0.0113005135f;
      sa[964] = -0.27448514f;
      sa[965] = 0.14375958f;
      sa[966] = -0.2189635f;
      sa[967] = -0.41574427f;
      sa[968] = 0.035227936f;
      sa[969] = -0.03091887f;
      sa[970] = 0.4179563f;
      sa[971] = 0.12540983f;
      sa[972] = -0.044986337f;
      sa[973] = -0.1891306f;
      sa[974] = -0.27535275f;
      sa[975] = -0.21793309f;
      sa[976] = -0.12979047f;
      sa[977] = 0.069297746f;
      sa[978] = -0.10403776f;
      sa[979] = 0.13188413f;
      sa[980] = 0.230312f;
      sa[981] = -0.18216254f;
      sa[982] = 0.25461188f;
      sa[983] = 0.04726528f;
      sa[984] = -0.29634628f;
      sa[985] = 0.08151412f;
      sa[986] = -0.2716523f;
      sa[987] = 0.08057497f;
      sa[988] = 0.13721026f;
      sa[989] = 0.23783678f;
      sa[990] = 0.115264095f;
      sa[991] = -0.11074337f;
      sa[992] = -0.2515019f;
      sa[993] = -0.102804914f;
      sa[994] = -0.20081896f;
      sa[995] = -0.35157308f;
      sa[996] = 0.122317486f;
      sa[997] = 0.22262771f;
      sa[998] = -0.015508666f;
      sa[999] = 0.19726796f;
      sa[1000] = -0.005421805f;
      sa[1001] = 0.16434418f;
      sa[1002] = 0.2522879f;
      sa[1003] = -0.13144876f;
      sa[1004] = 0.20824999f;
      sa[1005] = -0.20663461f;
      sa[1006] = -0.13808313f;
      sa[1007] = -0.012991954f;
      sa[1008] = 0.102052756f;
      sa[1009] = 0.14851514f;
      sa[1010] = 0.19300827f;
      sa[1011] = 0.349674f;
      sa[1012] = 0.012491903f;
      sa[1013] = 0.13369884f;
      sa[1014] = 0.35842884f;
      sa[1015] = -0.20914987f;
      sa[1016] = 0.21800151f;
      sa[1017] = 0.21392997f;
      sa[1018] = -0.082783826f;
      sa[1019] = 0.054535385f;
      sa[1020] = -0.16686007f;
      sa[1021] = 0.06613484f;
      sa[1022] = 0.3119277f;
      sa[1023] = 0.13402829f;
      sa[1024] = 0.093862236f;
      sa[1025] = 0.20340951f;
      sa[1026] = 0.16003841f;
      sa[1027] = 0.27535024f;
      sa[1028] = 0.41495743f;
      sa[1029] = 0.11282798f;
      sa[1030] = -0.040766515f;
      sa[1031] = 0.12903611f;
      sa[1032] = -0.0723928f;
      sa[1033] = 0.021921534f;
      sa[1034] = -0.16979624f;
      sa[1035] = -0.3429585f;
      sa[1036] = 0.32777643f;
      sa[1037] = 0.097759195f;
      sa[1038] = -0.1987611f;
      sa[1039] = 0.27604577f;
      sa[1040] = 0.039663106f;
      sa[1041] = 0.13638899f;
      sa[1042] = -0.31743947f;
      sa[1043] = -0.1017663f;
      sa[1044] = 0.41830748f;
      sa[1045] = 0.3351772f;
      sa[1046] = -0.06107623f;
      sa[1047] = -0.14445011f;
      sa[1048] = 0.11790758f;
      sa[1049] = -0.029230116f;
      sa[1050] = 0.0835383f;
      sa[1051] = -0.12945895f;
      sa[1052] = 0.34386373f;
      sa[1053] = 0.23114434f;
      sa[1054] = 0.3326644f;
      sa[1055] = 0.1520969f;
      sa[1056] = 0.30279765f;
      sa[1057] = -0.07969395f;
      sa[1058] = 0.29767573f;
      sa[1059] = -0.052671522f;
      sa[1060] = -0.17138062f;
      sa[1061] = 0.015014902f;
      sa[1062] = -0.08144337f;
      sa[1063] = 0.2505138f;
      sa[1064] = 0.101338625f;
      sa[1065] = -0.050881002f;
      sa[1066] = 0.2005266f;
      sa[1067] = -0.33477023f;
      sa[1068] = -0.1833114f;
      sa[1069] = 0.2841847f;
      sa[1070] = -0.1012163f;
      sa[1071] = 0.13865593f;
      sa[1072] = -0.20140694f;
      sa[1073] = 0.12394639f;
      sa[1074] = 0.20240124f;
      sa[1075] = -0.15430644f;
      sa[1076] = -0.18598485f;
      sa[1077] = 0.06632013f;
      sa[1078] = -0.012691686f;
      sa[1079] = -0.02058602f;
      sa[1080] = 0.15555193f;
      sa[1081] = 0.07110885f;
      sa[1082] = -0.3822872f;
      sa[1083] = -0.031839553f;
      sa[1084] = 0.31853738f;
      sa[1085] = -0.14766611f;
      sa[1086] = -0.23448281f;
      sa[1087] = -0.30854172f;
      sa[1088] = -0.25834203f;
      sa[1089] = 0.082591824f;
      sa[1090] = -0.20453678f;
      sa[1091] = -0.06327334f;
      sa[1092] = -0.2716272f;
      sa[1093] = -0.3038197f;
      sa[1094] = -0.03308367f;
      sa[1095] = -0.35957098f;
      sa[1096] = -0.034283843f;
      sa[1097] = -0.10287951f;
      sa[1098] = 0.15398562f;
      sa[1099] = -0.11635278f;
      sa[1100] = -0.14585137f;
      sa[1101] = 0.13560969f;
      sa[1102] = -0.17038381f;
      sa[1103] = 0.16188142f;
      sa[1104] = -0.37913862f;
      sa[1105] = -0.098944806f;
      sa[1106] = 0.051150676f;
      sa[1107] = 0.034247693f;
      sa[1108] = -0.20881969f;
      sa[1109] = 0.2461247f;
      sa[1110] = 0.16147396f;
      sa[1111] = -0.29863566f;
      sa[1112] = 0.2308545f;
      sa[1113] = 0.22320366f;
      sa[1114] = 0.059283372f;
      sa[1115] = 0.20294398f;
      sa[1116] = 0.110051975f;
      sa[1117] = -0.032821935f;
      sa[1118] = 0.021020537f;
      sa[1119] = 0.13171588f;
      sa[1120] = 0.23921902f;
      sa[1121] = 0.116277434f;
      sa[1122] = 0.34341362f;
      sa[1123] = 0.29122937f;
      sa[1124] = 0.15206929f;
      sa[1125] = -0.09014369f;
      sa[1126] = 0.25202766f;
      sa[1127] = 0.20235232f;
      sa[1128] = 0.050275736f;
      sa[1129] = -0.056162864f;
      sa[1130] = 0.29028425f;
      sa[1131] = 0.31969017f;
      sa[1132] = -0.007510124f;
      sa[1133] = -0.12765096f;
      sa[1134] = 0.119831234f;
      sa[1135] = -0.1310506f;
      sa[1136] = 0.02450053f;
      sa[1137] = 0.27478763f;
      sa[1138] = 0.0058132354f;
      sa[1139] = 0.19321923f;
      sa[1140] = 0.28353587f;
      sa[1141] = -0.13941978f;
      sa[1142] = -0.096421145f;
      sa[1143] = -0.27368617f;
      sa[1144] = -0.23488213f;
      sa[1145] = 0.17614564f;
      sa[1146] = 0.22960731f;
      sa[1147] = -0.14929491f;
      sa[1148] = 0.011567502f;
      sa[1149] = -0.077454306f;
      sa[1150] = -0.270862f;
      sa[1151] = -0.29777223f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_06_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_06_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2895615f;
      sa[1] = -0.04135214f;
      sa[2] = -0.58411026f;
      sa[3] = -1.0031694f;
      sa[4] = 0.17430921f;
      sa[5] = 0.33234867f;
      sa[6] = 1.245529f;
      sa[7] = -0.73306274f;
      sa[8] = -0.89177155f;
      sa[9] = 0.7221618f;
      sa[10] = -0.102709055f;
      sa[11] = 0.46640402f;
      sa[12] = 0.13635686f;
      sa[13] = 0.0048047714f;
      sa[14] = -1.2993834f;
      sa[15] = 1.1703461f;
      sa[16] = 1.6233612f;
      sa[17] = -0.4270751f;
      sa[18] = 0.10907401f;
      sa[19] = -0.39594397f;
      sa[20] = 1.1805252f;
      sa[21] = 0.04598402f;
      sa[22] = -0.9562566f;
      sa[23] = 0.7833383f;
      sa[24] = -1.263849f;
      sa[25] = 0.5267888f;
      sa[26] = -0.28910336f;
      sa[27] = 1.5579771f;
      sa[28] = -1.3454072f;
      sa[29] = -0.39249554f;
      sa[30] = 0.47649574f;
      sa[31] = -0.6264245f;
      sa[32] = -1.2120651f;
      sa[33] = -1.6594156f;
      sa[34] = 0.08273017f;
      sa[35] = 1.3481882f;
      sa[36] = -0.35656732f;
      sa[37] = -0.058368757f;
      sa[38] = 0.19124748f;
      sa[39] = 0.7897083f;
      sa[40] = -0.7551262f;
      sa[41] = -1.391861f;
      sa[42] = -1.071258f;
      sa[43] = -1.635037f;
      sa[44] = -0.040233724f;
      sa[45] = -1.4223962f;
      sa[46] = 1.2474083f;
      sa[47] = 1.2487893f;
      sa[48] = -1.369921f;
      sa[49] = -1.1551456f;
      sa[50] = 0.41141462f;
      sa[51] = -0.3199807f;
      sa[52] = 0.6984863f;
      sa[53] = 0.8078138f;
      sa[54] = -0.24986215f;
      sa[55] = 1.147036f;
      sa[56] = -1.2254944f;
      sa[57] = -1.0927477f;
      sa[58] = -0.030619672f;
      sa[59] = -0.28459856f;
      sa[60] = 1.4010471f;
      sa[61] = -0.6852711f;
      sa[62] = -0.47709092f;
      sa[63] = 0.6600436f;
      sa[64] = 1.2987974f;
      sa[65] = -0.6977034f;
      sa[66] = 0.54512554f;
      sa[67] = 1.5929846f;
      sa[68] = 0.60113174f;
      sa[69] = -1.2170022f;
      sa[70] = -1.4621557f;
      sa[71] = -0.5852202f;
      sa[72] = -1.3434327f;
      sa[73] = 1.2860385f;
      sa[74] = 1.3636831f;
      sa[75] = -0.30269757f;
      sa[76] = 0.9065512f;
      sa[77] = 0.38745415f;
      sa[78] = -1.6006864f;
      sa[79] = 0.8756688f;
      sa[80] = -0.8465313f;
      sa[81] = 0.1858672f;
      sa[82] = 0.8522481f;
      sa[83] = -1.0096766f;
      sa[84] = -1.5964572f;
      sa[85] = -1.2851863f;
      sa[86] = 0.4354171f;
      sa[87] = 1.1249721f;
      sa[88] = -1.6136405f;
      sa[89] = -0.8421388f;
      sa[90] = -1.1332515f;
      sa[91] = 1.3640201f;
      sa[92] = -0.34177724f;
      sa[93] = 0.2244977f;
      sa[94] = -1.5662085f;
      sa[95] = -0.167431f;
      sa[96] = -0.9953202f;
      sa[97] = 0.17740718f;
      sa[98] = -0.09334176f;
      sa[99] = 0.37295058f;
      sa[100] = -1.3205969f;
      sa[101] = -0.54028946f;
      sa[102] = 1.0753537f;
      sa[103] = 0.09479281f;
      sa[104] = -0.23754111f;
      sa[105] = -0.83370054f;
      sa[106] = 1.3388169f;
      sa[107] = 1.2319787f;
      sa[108] = 0.8847995f;
      sa[109] = 0.2555482f;
      sa[110] = 0.7494741f;
      sa[111] = -0.9565918f;
      sa[112] = -1.1978548f;
      sa[113] = 0.2468307f;
      sa[114] = 0.05667875f;
      sa[115] = -0.4410339f;
      sa[116] = 1.127785f;
      sa[117] = 0.010251537f;
      sa[118] = -1.5053118f;
      sa[119] = -0.72647774f;
      sa[120] = -0.38643196f;
      sa[121] = 1.0156864f;
      sa[122] = -0.070655786f;
      sa[123] = 0.26100945f;
      sa[124] = -0.67873555f;
      sa[125] = 0.8009624f;
      sa[126] = -1.12039f;
      sa[127] = 0.3977357f;
      sa[128] = -1.054517f;
      sa[129] = 0.80733734f;
      sa[130] = -0.4481982f;
      sa[131] = 0.85015935f;
      sa[132] = 0.44477615f;
      sa[133] = 0.6793023f;
      sa[134] = 0.5932038f;
      sa[135] = -1.068194f;
      sa[136] = 0.5741473f;
      sa[137] = -0.5946614f;
      sa[138] = -0.1506844f;
      sa[139] = 1.1608739f;
      sa[140] = -0.6907001f;
      sa[141] = -0.13732673f;
      sa[142] = 0.24212922f;
      sa[143] = -0.80267537f;
      sa[144] = 1.0042708f;
      sa[145] = -0.79558265f;
      sa[146] = 0.0676343f;
      sa[147] = -0.25079983f;
      sa[148] = -0.88322145f;
      sa[149] = 1.1279085f;
      sa[150] = -1.2287465f;
      sa[151] = -1.6913896f;
      sa[152] = 1.5861621f;
      sa[153] = -0.5820222f;
      sa[154] = 1.3995212f;
      sa[155] = -1.4989959f;
      sa[156] = -1.5390079f;
      sa[157] = -1.1218394f;
      sa[158] = -0.12873349f;
      sa[159] = -0.65694577f;
      sa[160] = 1.3695847f;
      sa[161] = -1.1987555f;
      sa[162] = 1.6199574f;
      sa[163] = -0.75732195f;
      sa[164] = 0.7454888f;
      sa[165] = -0.5460838f;
      sa[166] = 1.0838687f;
      sa[167] = -1.4420947f;
      sa[168] = 1.0672815f;
      sa[169] = -1.667129f;
      sa[170] = 1.0089786f;
      sa[171] = 0.8866657f;
      sa[172] = 1.5038618f;
      sa[173] = 1.5124273f;
      sa[174] = -0.081634395f;
      sa[175] = 0.036150873f;
      sa[176] = -0.7981692f;
      sa[177] = 0.066900715f;
      sa[178] = -1.3830744f;
      sa[179] = -0.098349735f;
      sa[180] = -1.3544686f;
      sa[181] = -1.0072389f;
      sa[182] = 0.26233944f;
      sa[183] = -0.9739325f;
      sa[184] = 1.5035948f;
      sa[185] = 1.3057495f;
      sa[186] = -0.5103744f;
      sa[187] = -0.9412134f;
      sa[188] = -0.7506363f;
      sa[189] = -0.7880737f;
      sa[190] = -1.4576017f;
      sa[191] = -1.0597954f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_06 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_06_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_06_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_06_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_06_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_06_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


