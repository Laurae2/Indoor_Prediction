/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:26.606+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_07

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_07 > h2o_nn_32x6_Tanh_07.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_07.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_07", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_07 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_07_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_07_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_07_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_07.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_07_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_07() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4229267350818826376L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_07_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_07_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_07_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_07_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_07_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_07_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_07_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_07_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_07_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0515798996415063;
      sa[1] = 0.017360138181453776;
      sa[2] = -0.035406153373803845;
      sa[3] = -0.07517767792371584;
      sa[4] = -0.06488819477721977;
      sa[5] = 0.00879976534941846;
      sa[6] = 0.026346508716245443;
      sa[7] = 0.09027766637206529;
      sa[8] = 0.017013455240443096;
      sa[9] = -0.024756648908872546;
      sa[10] = 0.009353023496694682;
      sa[11] = 0.04488220245809517;
      sa[12] = 0.01796955617358629;
      sa[13] = -0.007488929329836085;
      sa[14] = 0.012700582373324264;
      sa[15] = -0.034313346651920915;
      sa[16] = -0.031971492770976245;
      sa[17] = 0.020101807958966184;
      sa[18] = -0.04187292182906259;
      sa[19] = 0.04093910726147527;
      sa[20] = 0.10754068096078485;
      sa[21] = -0.04946762703154954;
      sa[22] = -0.04063485676676808;
      sa[23] = 0.05844674107536199;
      sa[24] = -0.028523801386523953;
      sa[25] = 0.09040779024795734;
      sa[26] = -0.01816034706394179;
      sa[27] = 0.026982272988519494;
      sa[28] = -0.027186681542252376;
      sa[29] = 0.053472798620460484;
      sa[30] = 0.006390125124000177;
      sa[31] = 0.11415856388211779;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_07_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_07_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.02706999411012852;
      sa[1] = -0.017815182908758165;
      sa[2] = -0.06266074456927324;
      sa[3] = 0.04295196136204431;
      sa[4] = -0.05867880891086265;
    }
  }
}
class h2o_nn_32x6_Tanh_07_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_07_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_07_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.05223419f;
      sa[1] = 0.20960473f;
      sa[2] = 0.12793857f;
      sa[3] = 0.14968665f;
      sa[4] = -0.15836811f;
      sa[5] = -0.18060157f;
      sa[6] = -0.04948717f;
      sa[7] = 0.22152813f;
      sa[8] = 0.12579507f;
      sa[9] = -0.20289133f;
      sa[10] = -0.18388146f;
      sa[11] = -0.1603811f;
      sa[12] = 0.061922893f;
      sa[13] = -0.26613158f;
      sa[14] = -0.18457612f;
      sa[15] = -0.043307f;
      sa[16] = 0.06004631f;
      sa[17] = 0.058520652f;
      sa[18] = -0.2142379f;
      sa[19] = 0.09971733f;
      sa[20] = 0.22369489f;
      sa[21] = -0.27005264f;
      sa[22] = 0.22920445f;
      sa[23] = -0.20779723f;
      sa[24] = 0.20377938f;
      sa[25] = 0.14015262f;
      sa[26] = -0.26341623f;
      sa[27] = 0.20881954f;
      sa[28] = 0.21669933f;
      sa[29] = -0.2582597f;
      sa[30] = -0.17126091f;
      sa[31] = 0.11784495f;
      sa[32] = 0.1687796f;
      sa[33] = -0.18768425f;
      sa[34] = 0.028603846f;
      sa[35] = -0.14416583f;
      sa[36] = 0.05841278f;
      sa[37] = 0.23755226f;
      sa[38] = -0.051433936f;
      sa[39] = 0.065549046f;
      sa[40] = 0.036448337f;
      sa[41] = -0.04271173f;
      sa[42] = -0.090309724f;
      sa[43] = 0.072838135f;
      sa[44] = 0.2032174f;
      sa[45] = -0.20201597f;
      sa[46] = 0.086869545f;
      sa[47] = -0.04190429f;
      sa[48] = 0.22970152f;
      sa[49] = 0.27310887f;
      sa[50] = 0.22297622f;
      sa[51] = -0.26358792f;
      sa[52] = -0.0738968f;
      sa[53] = 0.23289174f;
      sa[54] = 0.19511636f;
      sa[55] = 0.10211206f;
      sa[56] = -0.17786616f;
      sa[57] = -0.29538628f;
      sa[58] = 0.27161506f;
      sa[59] = -0.19836356f;
      sa[60] = -0.23082721f;
      sa[61] = 0.22692877f;
      sa[62] = 0.10430807f;
      sa[63] = 0.055066843f;
      sa[64] = 0.10370372f;
      sa[65] = 0.08740258f;
      sa[66] = 0.01591431f;
      sa[67] = 0.09093567f;
      sa[68] = -0.1589575f;
      sa[69] = 0.035650894f;
      sa[70] = -0.10964564f;
      sa[71] = 0.33039263f;
      sa[72] = -0.18405749f;
      sa[73] = 0.19363444f;
      sa[74] = -0.19312675f;
      sa[75] = 0.061465647f;
      sa[76] = -0.17433052f;
      sa[77] = -0.051876135f;
      sa[78] = -0.05972067f;
      sa[79] = 0.100171566f;
      sa[80] = -0.2595823f;
      sa[81] = -0.14244834f;
      sa[82] = -0.062212106f;
      sa[83] = 0.094990246f;
      sa[84] = -0.042777188f;
      sa[85] = -0.1742258f;
      sa[86] = 0.12263502f;
      sa[87] = 0.20885237f;
      sa[88] = 0.24537973f;
      sa[89] = 0.049199708f;
      sa[90] = -0.09393951f;
      sa[91] = 0.14837272f;
      sa[92] = 0.06941732f;
      sa[93] = -0.20969857f;
      sa[94] = -0.18857315f;
      sa[95] = -0.24160743f;
      sa[96] = 0.11835736f;
      sa[97] = 8.5246214E-4f;
      sa[98] = 0.22016844f;
      sa[99] = -0.07788742f;
      sa[100] = -0.06366112f;
      sa[101] = -0.17670567f;
      sa[102] = -0.2389286f;
      sa[103] = -0.07727978f;
      sa[104] = -0.02470395f;
      sa[105] = -0.15164573f;
      sa[106] = -0.16464074f;
      sa[107] = 0.15453514f;
      sa[108] = 0.09319064f;
      sa[109] = -0.18853419f;
      sa[110] = -0.15224025f;
      sa[111] = 0.17376977f;
      sa[112] = 0.097982876f;
      sa[113] = 0.023942875f;
      sa[114] = -0.17052822f;
      sa[115] = -0.105450474f;
      sa[116] = -0.28932074f;
      sa[117] = 0.016142525f;
      sa[118] = -0.28115368f;
      sa[119] = -0.22327726f;
      sa[120] = 0.17483437f;
      sa[121] = 0.19702138f;
      sa[122] = 0.253621f;
      sa[123] = 0.20682631f;
      sa[124] = 0.27656743f;
      sa[125] = 0.29728413f;
      sa[126] = -0.25359476f;
      sa[127] = -0.14259031f;
      sa[128] = 0.035142884f;
      sa[129] = 0.12089422f;
      sa[130] = -0.15475461f;
      sa[131] = 0.26581886f;
      sa[132] = 0.18274395f;
      sa[133] = -0.3143194f;
      sa[134] = 0.090961955f;
      sa[135] = -0.18378003f;
      sa[136] = -0.28430367f;
      sa[137] = -0.050187957f;
      sa[138] = 0.09426674f;
      sa[139] = -0.103424765f;
      sa[140] = -0.07929781f;
      sa[141] = -0.21341978f;
      sa[142] = 0.21542418f;
      sa[143] = -0.19458784f;
      sa[144] = 0.2377673f;
      sa[145] = -0.1331166f;
      sa[146] = -0.25712433f;
      sa[147] = 0.2032791f;
      sa[148] = 0.15566842f;
      sa[149] = 0.16404922f;
      sa[150] = 0.26088783f;
      sa[151] = -0.25564024f;
      sa[152] = 0.01293413f;
      sa[153] = 0.2739407f;
      sa[154] = 0.22531365f;
      sa[155] = -0.16332851f;
      sa[156] = 0.110335134f;
      sa[157] = -0.19885164f;
      sa[158] = 0.061825406f;
      sa[159] = 0.06391693f;
      sa[160] = 0.069371164f;
      sa[161] = 0.18140548f;
      sa[162] = -0.15460841f;
      sa[163] = -0.10567083f;
      sa[164] = 0.21632089f;
      sa[165] = -0.032069407f;
      sa[166] = -0.079718314f;
      sa[167] = -0.10478135f;
      sa[168] = 0.15190646f;
      sa[169] = 0.27331093f;
      sa[170] = 0.021044396f;
      sa[171] = -0.07246939f;
      sa[172] = -0.06967975f;
      sa[173] = -0.1484398f;
      sa[174] = -0.031820826f;
      sa[175] = -0.2490368f;
      sa[176] = -0.022409722f;
      sa[177] = -0.020713322f;
      sa[178] = -0.07202909f;
      sa[179] = 0.07081385f;
      sa[180] = -0.0061424407f;
      sa[181] = -0.2481472f;
      sa[182] = -0.08197951f;
      sa[183] = 0.115410246f;
      sa[184] = 0.24617805f;
      sa[185] = 0.14292307f;
      sa[186] = -0.3034174f;
      sa[187] = 0.10746058f;
      sa[188] = 0.0013139435f;
      sa[189] = 0.26271453f;
      sa[190] = 0.09269286f;
      sa[191] = -0.05095277f;
      sa[192] = -0.10881337f;
      sa[193] = 0.21697348f;
      sa[194] = 0.083821476f;
      sa[195] = 0.28490677f;
      sa[196] = 0.25805786f;
      sa[197] = 0.0011443748f;
      sa[198] = 0.090925954f;
      sa[199] = -0.090562575f;
      sa[200] = 0.044508174f;
      sa[201] = -0.26052737f;
      sa[202] = 0.1354231f;
      sa[203] = 0.0017789128f;
      sa[204] = -0.13697082f;
      sa[205] = 0.25927454f;
      sa[206] = 0.19958869f;
      sa[207] = 0.13667509f;
      sa[208] = -0.23874621f;
      sa[209] = -0.07917297f;
      sa[210] = -0.2793541f;
      sa[211] = -0.2349603f;
      sa[212] = 0.31615883f;
      sa[213] = -0.2597365f;
      sa[214] = -0.13534869f;
      sa[215] = 0.02414668f;
      sa[216] = 0.18370819f;
      sa[217] = 0.16854896f;
      sa[218] = -0.16968083f;
      sa[219] = 0.21892188f;
      sa[220] = -0.22931527f;
      sa[221] = 0.031023499f;
      sa[222] = 0.21260838f;
      sa[223] = 0.094207674f;
      sa[224] = 0.16682087f;
      sa[225] = 0.30911708f;
      sa[226] = -0.1743992f;
      sa[227] = 0.29919603f;
      sa[228] = 0.12557012f;
      sa[229] = 0.086951084f;
      sa[230] = 0.2621846f;
      sa[231] = -0.21085009f;
      sa[232] = -0.23973162f;
      sa[233] = 0.109056465f;
      sa[234] = 0.14660847f;
      sa[235] = -0.26664445f;
      sa[236] = -0.019976657f;
      sa[237] = -0.21192074f;
      sa[238] = -0.19842343f;
      sa[239] = 0.15208848f;
      sa[240] = 0.0020928686f;
      sa[241] = -0.16957794f;
      sa[242] = -0.07324142f;
      sa[243] = -0.20479524f;
      sa[244] = -0.19112217f;
      sa[245] = -0.122818574f;
      sa[246] = -0.26058853f;
      sa[247] = -0.05271711f;
      sa[248] = 0.2617739f;
      sa[249] = 0.2674424f;
      sa[250] = -0.20715259f;
      sa[251] = -0.12420696f;
      sa[252] = -0.22939129f;
      sa[253] = -0.2614649f;
      sa[254] = -0.26948917f;
      sa[255] = 0.24685442f;
      sa[256] = -0.16632149f;
      sa[257] = 0.2649299f;
      sa[258] = -0.24206875f;
      sa[259] = -0.114802726f;
      sa[260] = -0.17677028f;
      sa[261] = -0.12351232f;
      sa[262] = -0.18518569f;
      sa[263] = 0.29788083f;
      sa[264] = -0.12810239f;
      sa[265] = 0.065088674f;
      sa[266] = -0.25452906f;
      sa[267] = -0.19027098f;
      sa[268] = 0.118989155f;
      sa[269] = -0.13249265f;
      sa[270] = -0.016765004f;
      sa[271] = 0.1484408f;
      sa[272] = -0.05436627f;
      sa[273] = -0.09324739f;
      sa[274] = 0.12036251f;
      sa[275] = 0.054768894f;
      sa[276] = 0.061378602f;
      sa[277] = -0.23939319f;
      sa[278] = -0.107246384f;
      sa[279] = 0.19091861f;
      sa[280] = -0.12976517f;
      sa[281] = 0.3031219f;
      sa[282] = -0.076285146f;
      sa[283] = 0.021629654f;
      sa[284] = 0.110496394f;
      sa[285] = -0.065158114f;
      sa[286] = 0.26046696f;
      sa[287] = 0.12151511f;
      sa[288] = -0.20124944f;
      sa[289] = -0.13209069f;
      sa[290] = -0.046049997f;
      sa[291] = -0.019904414f;
      sa[292] = 0.11472943f;
      sa[293] = -0.073789895f;
      sa[294] = 0.10478186f;
      sa[295] = 0.13348018f;
      sa[296] = 0.19431071f;
      sa[297] = 0.23730075f;
      sa[298] = 0.012212486f;
      sa[299] = -0.07995254f;
      sa[300] = 0.010584506f;
      sa[301] = -0.035548724f;
      sa[302] = 0.18997937f;
      sa[303] = 0.052029334f;
      sa[304] = -0.16266365f;
      sa[305] = 0.0720388f;
      sa[306] = 0.18797602f;
      sa[307] = -0.060517985f;
      sa[308] = 0.06886779f;
      sa[309] = 0.10940299f;
      sa[310] = 0.28355813f;
      sa[311] = 0.2933124f;
      sa[312] = -0.11778238f;
      sa[313] = -0.08813435f;
      sa[314] = -0.16484174f;
      sa[315] = 0.044009577f;
      sa[316] = -0.038109392f;
      sa[317] = -0.117266536f;
      sa[318] = 0.08298769f;
      sa[319] = 0.2532767f;
      sa[320] = -0.085613914f;
      sa[321] = 0.0355263f;
      sa[322] = 0.25555903f;
      sa[323] = -0.0876658f;
      sa[324] = -0.01437722f;
      sa[325] = 0.2582806f;
      sa[326] = -0.28678542f;
      sa[327] = -0.014063183f;
      sa[328] = -0.04344845f;
      sa[329] = 0.23254102f;
      sa[330] = -0.17366795f;
      sa[331] = -0.010383813f;
      sa[332] = -0.2551065f;
      sa[333] = 0.078459814f;
      sa[334] = -0.1149512f;
      sa[335] = 0.24494006f;
      sa[336] = -0.16571993f;
      sa[337] = -0.15992634f;
      sa[338] = 0.24422063f;
      sa[339] = -0.22962937f;
      sa[340] = -0.32425174f;
      sa[341] = -0.349304f;
      sa[342] = 0.16524285f;
      sa[343] = -0.13546357f;
      sa[344] = -0.17036334f;
      sa[345] = 0.20406252f;
      sa[346] = 0.19701429f;
      sa[347] = -0.20133859f;
      sa[348] = 0.22778873f;
      sa[349] = -0.29352796f;
      sa[350] = -0.23216344f;
      sa[351] = 0.068908215f;
      sa[352] = 0.17694955f;
      sa[353] = -0.031000847f;
      sa[354] = 0.0823676f;
      sa[355] = 0.0843288f;
      sa[356] = -0.17716742f;
      sa[357] = 0.24952988f;
      sa[358] = -0.30555958f;
      sa[359] = 0.004254517f;
      sa[360] = 0.042357337f;
      sa[361] = -0.06522924f;
      sa[362] = -0.14129846f;
      sa[363] = 0.06051331f;
      sa[364] = -0.07921816f;
      sa[365] = -0.16219439f;
      sa[366] = 0.052368205f;
      sa[367] = -0.25417075f;
      sa[368] = -0.21005285f;
      sa[369] = 0.22325568f;
      sa[370] = -0.2441162f;
      sa[371] = 0.06940173f;
      sa[372] = -0.0077275317f;
      sa[373] = 0.30300027f;
      sa[374] = -0.09663533f;
      sa[375] = -0.27477986f;
      sa[376] = -0.28047618f;
      sa[377] = -0.23452462f;
      sa[378] = 0.2995164f;
      sa[379] = 0.16384746f;
      sa[380] = -0.12831457f;
      sa[381] = -0.10060513f;
      sa[382] = -0.020174945f;
      sa[383] = -0.12695207f;
      sa[384] = -0.12579419f;
      sa[385] = 0.0930074f;
      sa[386] = -0.22442134f;
      sa[387] = -0.08888628f;
      sa[388] = 0.065365806f;
      sa[389] = -0.010543513f;
      sa[390] = 0.009413863f;
      sa[391] = -0.119923495f;
      sa[392] = 0.12421466f;
      sa[393] = 0.1397152f;
      sa[394] = -0.008907483f;
      sa[395] = 0.3257974f;
      sa[396] = 0.26089182f;
      sa[397] = -0.28188244f;
      sa[398] = 0.14991403f;
      sa[399] = 0.004528983f;
      sa[400] = 0.2062069f;
      sa[401] = 0.2817058f;
      sa[402] = -0.071310155f;
      sa[403] = 0.12007408f;
      sa[404] = 0.20860808f;
      sa[405] = -0.21177302f;
      sa[406] = -0.023132337f;
      sa[407] = 0.107743315f;
      sa[408] = -0.18415993f;
      sa[409] = -0.2015501f;
      sa[410] = -0.066710144f;
      sa[411] = 0.18491685f;
      sa[412] = -0.12908259f;
      sa[413] = 0.10933233f;
      sa[414] = 0.1433376f;
      sa[415] = 0.32794282f;
      sa[416] = -0.17465152f;
      sa[417] = 0.026439557f;
      sa[418] = 0.032266818f;
      sa[419] = 0.26404843f;
      sa[420] = 0.22877553f;
      sa[421] = 0.30097926f;
      sa[422] = 0.23037131f;
      sa[423] = 0.017486302f;
      sa[424] = 0.09281446f;
      sa[425] = -0.06747062f;
      sa[426] = -0.2557988f;
      sa[427] = 0.17460525f;
      sa[428] = -0.10026189f;
      sa[429] = -0.19095708f;
      sa[430] = 0.13869798f;
      sa[431] = -0.011976338f;
      sa[432] = -0.06600596f;
      sa[433] = 0.09844668f;
      sa[434] = 0.21626614f;
      sa[435] = -0.042570114f;
      sa[436] = -0.21258813f;
      sa[437] = -0.21275815f;
      sa[438] = 0.028727341f;
      sa[439] = -0.02002221f;
      sa[440] = 0.26951215f;
      sa[441] = -0.3477382f;
      sa[442] = 0.0484391f;
      sa[443] = 0.056965884f;
      sa[444] = -0.21886814f;
      sa[445] = 0.0690907f;
      sa[446] = 0.22134988f;
      sa[447] = 0.043450963f;
      sa[448] = 0.17569055f;
      sa[449] = 0.19087805f;
      sa[450] = -0.08024661f;
      sa[451] = 0.11566338f;
      sa[452] = 0.1560602f;
      sa[453] = -0.04425283f;
      sa[454] = -0.15347794f;
      sa[455] = -0.072883524f;
      sa[456] = -0.059685823f;
      sa[457] = 0.07484999f;
      sa[458] = -0.19079058f;
      sa[459] = 0.29364353f;
      sa[460] = 0.19897455f;
      sa[461] = 0.27879834f;
      sa[462] = 0.063240185f;
      sa[463] = 0.18991208f;
      sa[464] = -0.39895308f;
      sa[465] = 0.24157372f;
      sa[466] = 0.012087123f;
      sa[467] = 0.13393854f;
      sa[468] = 0.083219856f;
      sa[469] = 0.2645498f;
      sa[470] = 0.18582125f;
      sa[471] = -0.015955385f;
      sa[472] = 0.035483476f;
      sa[473] = -0.07845151f;
      sa[474] = 0.029469028f;
      sa[475] = 0.11198661f;
      sa[476] = 0.23791716f;
      sa[477] = -0.19590896f;
      sa[478] = 0.07209184f;
      sa[479] = -0.16179259f;
      sa[480] = -0.2887182f;
      sa[481] = -0.18451138f;
      sa[482] = -0.22499582f;
      sa[483] = 0.18279177f;
      sa[484] = 0.19307731f;
      sa[485] = 0.077283956f;
      sa[486] = -0.016943904f;
      sa[487] = -0.15668759f;
      sa[488] = -0.20416373f;
      sa[489] = 0.071597606f;
      sa[490] = 0.0050023547f;
      sa[491] = -0.26684695f;
      sa[492] = 0.1984716f;
      sa[493] = 0.24072848f;
      sa[494] = -0.21770956f;
      sa[495] = 0.18881951f;
      sa[496] = -0.019910594f;
      sa[497] = 0.052536584f;
      sa[498] = 0.16528791f;
      sa[499] = 0.13419397f;
      sa[500] = -0.12342593f;
      sa[501] = 0.057886876f;
      sa[502] = 0.21814369f;
      sa[503] = 0.03858413f;
      sa[504] = -0.16094191f;
      sa[505] = -0.20905851f;
      sa[506] = 0.19467531f;
      sa[507] = -0.015069f;
      sa[508] = 0.047153115f;
      sa[509] = 0.19938482f;
      sa[510] = 0.14655243f;
      sa[511] = -0.00898031f;
      sa[512] = 0.05689694f;
      sa[513] = -0.06094844f;
      sa[514] = 0.2757401f;
      sa[515] = -0.23459737f;
      sa[516] = 0.0209805f;
      sa[517] = 0.086054526f;
      sa[518] = 0.13773654f;
      sa[519] = -0.08062711f;
      sa[520] = 0.2209135f;
      sa[521] = 0.217228f;
      sa[522] = 0.09714691f;
      sa[523] = 0.24455261f;
      sa[524] = 0.16260293f;
      sa[525] = 0.11564315f;
      sa[526] = -0.031875767f;
      sa[527] = -0.08502928f;
      sa[528] = 0.028276289f;
      sa[529] = 0.13465701f;
      sa[530] = -0.15999702f;
      sa[531] = 0.10088305f;
      sa[532] = 0.1244874f;
      sa[533] = 0.089585826f;
      sa[534] = 0.109838985f;
      sa[535] = -0.08439633f;
      sa[536] = 0.14553963f;
      sa[537] = -0.21149117f;
      sa[538] = 0.23857325f;
      sa[539] = 0.3061515f;
      sa[540] = -0.21085969f;
      sa[541] = -0.15062259f;
      sa[542] = -0.099926785f;
      sa[543] = -0.20619363f;
      sa[544] = 0.12762684f;
      sa[545] = 0.061287414f;
      sa[546] = 0.026211163f;
      sa[547] = 0.14757477f;
      sa[548] = 0.08864945f;
      sa[549] = 0.12049794f;
      sa[550] = -0.041323766f;
      sa[551] = -0.061935097f;
      sa[552] = 0.022093588f;
      sa[553] = -0.09032575f;
      sa[554] = -0.18545683f;
      sa[555] = -0.16559647f;
      sa[556] = -0.18214498f;
      sa[557] = -0.28763682f;
      sa[558] = -0.20726158f;
      sa[559] = 0.02591491f;
      sa[560] = -0.27870408f;
      sa[561] = -0.076887466f;
      sa[562] = 0.16793852f;
      sa[563] = -0.07822882f;
      sa[564] = 0.22980213f;
      sa[565] = -0.059139114f;
      sa[566] = 0.24905668f;
      sa[567] = -0.06634802f;
      sa[568] = -0.05816032f;
      sa[569] = 0.04309355f;
      sa[570] = -0.034407876f;
      sa[571] = -0.046116035f;
      sa[572] = -0.09965928f;
      sa[573] = 0.1705056f;
      sa[574] = 0.2176118f;
      sa[575] = -0.28193977f;
      sa[576] = -0.041380182f;
      sa[577] = 0.029337263f;
      sa[578] = 0.11947025f;
      sa[579] = -0.063415416f;
      sa[580] = 0.10099573f;
      sa[581] = -0.14389639f;
      sa[582] = 0.09030012f;
      sa[583] = 0.053219598f;
      sa[584] = 0.1599147f;
      sa[585] = 0.23968054f;
      sa[586] = -0.066972025f;
      sa[587] = -0.09094493f;
      sa[588] = 0.08451057f;
      sa[589] = 0.114199646f;
      sa[590] = -0.016982783f;
      sa[591] = 0.0452778f;
      sa[592] = -0.309172f;
      sa[593] = -0.1892411f;
      sa[594] = -0.09252421f;
      sa[595] = -0.0694207f;
      sa[596] = 0.27851063f;
      sa[597] = 0.010142476f;
      sa[598] = 0.24069588f;
      sa[599] = 0.03564143f;
      sa[600] = -0.2852548f;
      sa[601] = 0.3112393f;
      sa[602] = -0.0933795f;
      sa[603] = 0.22549284f;
      sa[604] = 0.23434436f;
      sa[605] = 0.18311703f;
      sa[606] = 0.19687794f;
      sa[607] = 0.059233703f;
      sa[608] = -0.032486595f;
      sa[609] = 0.09465151f;
      sa[610] = 0.05865692f;
      sa[611] = -0.114520766f;
      sa[612] = -0.12412377f;
      sa[613] = 0.06336074f;
      sa[614] = 0.056516994f;
      sa[615] = -0.09782688f;
      sa[616] = 0.07977996f;
      sa[617] = -0.25829f;
      sa[618] = -0.11634439f;
      sa[619] = -0.15952872f;
      sa[620] = -0.0751504f;
      sa[621] = -0.26593244f;
      sa[622] = -0.33537337f;
      sa[623] = -0.30108145f;
      sa[624] = -0.05852681f;
      sa[625] = 0.2413887f;
      sa[626] = 0.004557185f;
      sa[627] = 0.22574575f;
      sa[628] = -0.2709235f;
      sa[629] = -0.09991004f;
      sa[630] = -0.11489343f;
      sa[631] = 0.24249332f;
      sa[632] = 0.07509445f;
      sa[633] = -0.15996432f;
      sa[634] = -0.201459f;
      sa[635] = 0.13299555f;
      sa[636] = -0.17959528f;
      sa[637] = -0.047727555f;
      sa[638] = -0.07936679f;
      sa[639] = -0.009643286f;
      sa[640] = -0.15353514f;
      sa[641] = -0.28204197f;
      sa[642] = 0.18388955f;
      sa[643] = -0.32218537f;
      sa[644] = -0.15940543f;
      sa[645] = -0.19969837f;
      sa[646] = 0.29865247f;
      sa[647] = -0.2119896f;
      sa[648] = -0.098225206f;
      sa[649] = -0.05521099f;
      sa[650] = 0.042323742f;
      sa[651] = -0.11984905f;
      sa[652] = 0.083410494f;
      sa[653] = -0.1519303f;
      sa[654] = -0.16327153f;
      sa[655] = -0.19238496f;
      sa[656] = 0.037878968f;
      sa[657] = 0.09490274f;
      sa[658] = -0.26999506f;
      sa[659] = -0.24539576f;
      sa[660] = -0.25607878f;
      sa[661] = -0.12452041f;
      sa[662] = -0.30069992f;
      sa[663] = 0.121135205f;
      sa[664] = -0.16498555f;
      sa[665] = 0.24638158f;
      sa[666] = 0.0073426394f;
      sa[667] = -0.24018335f;
      sa[668] = 0.2362631f;
      sa[669] = -0.13320124f;
      sa[670] = 0.108388364f;
      sa[671] = 0.034285963f;
      sa[672] = -0.2787186f;
      sa[673] = 0.11794111f;
      sa[674] = 0.259498f;
      sa[675] = -0.24505751f;
      sa[676] = -0.10654882f;
      sa[677] = -0.19933464f;
      sa[678] = 0.18284334f;
      sa[679] = -0.073080145f;
      sa[680] = 0.057005752f;
      sa[681] = 0.08108119f;
      sa[682] = 0.080384575f;
      sa[683] = -0.08378857f;
      sa[684] = -0.029247127f;
      sa[685] = 0.04142002f;
      sa[686] = -0.13380569f;
      sa[687] = -0.18862997f;
      sa[688] = -0.29843932f;
      sa[689] = -0.22867915f;
      sa[690] = -0.021827193f;
      sa[691] = 0.09868525f;
      sa[692] = -0.14890136f;
      sa[693] = -0.13965896f;
      sa[694] = 0.30450422f;
      sa[695] = -0.039707735f;
      sa[696] = -0.06800177f;
      sa[697] = -0.11769468f;
      sa[698] = -0.13998689f;
      sa[699] = 0.31115347f;
      sa[700] = 0.18880235f;
      sa[701] = 0.1966133f;
      sa[702] = 0.17759383f;
      sa[703] = 0.027051508f;
      sa[704] = -0.26798725f;
      sa[705] = -0.07770704f;
      sa[706] = -0.1384581f;
      sa[707] = 0.02770756f;
      sa[708] = 0.046336375f;
      sa[709] = -0.23995149f;
      sa[710] = 0.25067493f;
      sa[711] = -0.0631855f;
      sa[712] = 0.031727273f;
      sa[713] = 0.11002719f;
      sa[714] = 0.17560463f;
      sa[715] = 0.076830864f;
      sa[716] = 0.07773975f;
      sa[717] = 0.11825661f;
      sa[718] = -0.027284382f;
      sa[719] = 0.12074464f;
      sa[720] = -0.18454438f;
      sa[721] = 0.24233414f;
      sa[722] = -0.12553349f;
      sa[723] = -6.3704053E-4f;
      sa[724] = 0.061926115f;
      sa[725] = -0.27973104f;
      sa[726] = -0.21018161f;
      sa[727] = -0.23870893f;
      sa[728] = -0.06401879f;
      sa[729] = -0.024870703f;
      sa[730] = 0.1308863f;
      sa[731] = -0.23869905f;
      sa[732] = 0.1854746f;
      sa[733] = 0.21878996f;
      sa[734] = -0.12197861f;
      sa[735] = 0.32248223f;
      sa[736] = 0.0016761706f;
      sa[737] = 0.18316834f;
      sa[738] = -0.21587887f;
      sa[739] = -0.3026664f;
      sa[740] = -0.22761998f;
      sa[741] = -0.24741647f;
      sa[742] = 0.10846838f;
      sa[743] = 0.09706538f;
      sa[744] = 0.044841018f;
      sa[745] = -0.19829805f;
      sa[746] = 0.08488086f;
      sa[747] = -0.119601004f;
      sa[748] = -0.10959282f;
      sa[749] = -0.1370094f;
      sa[750] = 0.20267078f;
      sa[751] = 0.29297012f;
      sa[752] = -0.032780364f;
      sa[753] = 0.24384792f;
      sa[754] = 2.0983901E-4f;
      sa[755] = 0.14621758f;
      sa[756] = -0.16454057f;
      sa[757] = 0.25883007f;
      sa[758] = -0.13041134f;
      sa[759] = -0.07652832f;
      sa[760] = -0.1447396f;
      sa[761] = 0.0139341615f;
      sa[762] = -0.13848689f;
      sa[763] = 0.14374115f;
      sa[764] = 0.07969492f;
      sa[765] = 1.4151334E-4f;
      sa[766] = -0.16827917f;
      sa[767] = 0.10156648f;
      sa[768] = -0.17072904f;
      sa[769] = -0.28110808f;
      sa[770] = -0.016257735f;
      sa[771] = 0.026943214f;
      sa[772] = 0.058842804f;
      sa[773] = -0.18318467f;
      sa[774] = -0.03826024f;
      sa[775] = 0.3145559f;
      sa[776] = -0.06854453f;
      sa[777] = 0.028476115f;
      sa[778] = 0.13990407f;
      sa[779] = -0.13584359f;
      sa[780] = 0.02819847f;
      sa[781] = -0.031327747f;
      sa[782] = 0.11548729f;
      sa[783] = -0.14167821f;
      sa[784] = -0.14417417f;
      sa[785] = -0.13883266f;
      sa[786] = -0.10769336f;
      sa[787] = -0.22655477f;
      sa[788] = -0.1753027f;
      sa[789] = 0.14352617f;
      sa[790] = -0.09082729f;
      sa[791] = -0.06165678f;
      sa[792] = 0.14778294f;
      sa[793] = -0.14948544f;
      sa[794] = -0.23478465f;
      sa[795] = 0.013976789f;
      sa[796] = 0.22267996f;
      sa[797] = -0.21529f;
      sa[798] = -0.28329024f;
      sa[799] = -0.22221342f;
      sa[800] = 0.16596434f;
      sa[801] = 0.010157202f;
      sa[802] = 0.21322314f;
      sa[803] = 0.06083488f;
      sa[804] = 0.20590048f;
      sa[805] = 0.26529416f;
      sa[806] = 0.2578687f;
      sa[807] = 0.17618379f;
      sa[808] = -0.05877171f;
      sa[809] = -0.27176127f;
      sa[810] = 0.10366094f;
      sa[811] = 0.1724625f;
      sa[812] = 0.1543528f;
      sa[813] = -0.27895874f;
      sa[814] = 0.065359525f;
      sa[815] = -0.17528597f;
      sa[816] = -0.12878333f;
      sa[817] = -0.21077956f;
      sa[818] = 0.013474454f;
      sa[819] = -0.09550037f;
      sa[820] = -0.2792046f;
      sa[821] = -0.18892291f;
      sa[822] = -0.27464175f;
      sa[823] = 0.07004841f;
      sa[824] = 0.13089879f;
      sa[825] = 0.3214076f;
      sa[826] = -0.25557685f;
      sa[827] = -0.2894246f;
      sa[828] = 0.1353616f;
      sa[829] = -0.092356466f;
      sa[830] = 0.14298514f;
      sa[831] = 0.17367919f;
      sa[832] = 0.15275174f;
      sa[833] = 0.056938153f;
      sa[834] = 0.16315971f;
      sa[835] = -0.09263229f;
      sa[836] = 0.217356f;
      sa[837] = -0.20637858f;
      sa[838] = 0.10231781f;
      sa[839] = -0.22539017f;
      sa[840] = 0.1938748f;
      sa[841] = 0.09136062f;
      sa[842] = 0.13557476f;
      sa[843] = 0.031892676f;
      sa[844] = 0.026515067f;
      sa[845] = 0.0694613f;
      sa[846] = -0.25424162f;
      sa[847] = -0.115167215f;
      sa[848] = 0.23611f;
      sa[849] = 0.2718565f;
      sa[850] = -6.8345945E-4f;
      sa[851] = 0.14205821f;
      sa[852] = 0.2434758f;
      sa[853] = 0.09348351f;
      sa[854] = 0.23308958f;
      sa[855] = 0.10851919f;
      sa[856] = 0.12747721f;
      sa[857] = -0.103538826f;
      sa[858] = 0.1604123f;
      sa[859] = 0.1266183f;
      sa[860] = 0.283205f;
      sa[861] = -0.19657005f;
      sa[862] = -0.08525764f;
      sa[863] = 0.027271545f;
      sa[864] = -0.20015693f;
      sa[865] = 0.22746193f;
      sa[866] = -0.12676881f;
      sa[867] = -0.0061571733f;
      sa[868] = -0.19993226f;
      sa[869] = 0.21772161f;
      sa[870] = -0.0070642647f;
      sa[871] = 0.14892767f;
      sa[872] = 0.23119313f;
      sa[873] = -0.020704666f;
      sa[874] = 0.011852593f;
      sa[875] = -0.24576972f;
      sa[876] = -0.22046947f;
      sa[877] = -0.18770657f;
      sa[878] = 0.065054335f;
      sa[879] = 0.19019714f;
      sa[880] = -0.10645821f;
      sa[881] = -0.06853404f;
      sa[882] = 0.17476347f;
      sa[883] = 0.26178005f;
      sa[884] = -0.15376042f;
      sa[885] = -0.16283119f;
      sa[886] = 0.09300087f;
      sa[887] = -0.07823281f;
      sa[888] = -0.06572645f;
      sa[889] = 0.0969963f;
      sa[890] = -0.3059065f;
      sa[891] = 0.36684495f;
      sa[892] = 0.13427863f;
      sa[893] = 0.20640394f;
      sa[894] = 0.01883552f;
      sa[895] = 0.17006053f;
      sa[896] = -0.1929957f;
      sa[897] = 0.16822179f;
      sa[898] = -0.059026256f;
      sa[899] = 0.22450465f;
      sa[900] = -0.10631631f;
      sa[901] = 0.12774035f;
      sa[902] = -0.24016765f;
      sa[903] = -0.14745188f;
      sa[904] = 0.20309854f;
      sa[905] = 0.2090997f;
      sa[906] = -0.20642474f;
      sa[907] = -0.2018722f;
      sa[908] = -0.20961933f;
      sa[909] = 0.026755325f;
      sa[910] = 0.008740448f;
      sa[911] = -0.11035103f;
      sa[912] = 0.004105949f;
      sa[913] = 0.07088284f;
      sa[914] = -0.15518846f;
      sa[915] = 0.08411743f;
      sa[916] = 0.20386702f;
      sa[917] = -0.015905097f;
      sa[918] = 0.17762162f;
      sa[919] = -0.054658253f;
      sa[920] = 0.1545208f;
      sa[921] = -0.051140912f;
      sa[922] = -0.093784876f;
      sa[923] = -0.0970132f;
      sa[924] = -0.11537851f;
      sa[925] = -0.15706128f;
      sa[926] = 0.09598315f;
      sa[927] = -0.057811514f;
      sa[928] = 0.24558564f;
      sa[929] = 0.14962862f;
      sa[930] = 0.17003372f;
      sa[931] = 0.007674039f;
      sa[932] = 0.22000584f;
      sa[933] = 0.04401696f;
      sa[934] = 0.17849004f;
      sa[935] = -0.2247896f;
      sa[936] = 0.07500486f;
      sa[937] = 0.19872421f;
      sa[938] = -0.08313888f;
      sa[939] = 0.0031412581f;
      sa[940] = -0.07638495f;
      sa[941] = -0.29841483f;
      sa[942] = -0.23055859f;
      sa[943] = -0.15959825f;
      sa[944] = -0.22012524f;
      sa[945] = 0.118260525f;
      sa[946] = 0.09125457f;
      sa[947] = 0.23752894f;
      sa[948] = 0.0979235f;
      sa[949] = -0.16710357f;
      sa[950] = 0.10205638f;
      sa[951] = -0.07148248f;
      sa[952] = -0.20022598f;
      sa[953] = -0.13105372f;
      sa[954] = -0.2536634f;
      sa[955] = 0.09961485f;
      sa[956] = -0.021528538f;
      sa[957] = 0.014986859f;
      sa[958] = 0.09228538f;
      sa[959] = -0.15726647f;
      sa[960] = 0.34230867f;
      sa[961] = -0.08631281f;
      sa[962] = -0.045600846f;
      sa[963] = -0.038482167f;
      sa[964] = -0.17618036f;
      sa[965] = 0.22358106f;
      sa[966] = -0.0986028f;
      sa[967] = -0.27061218f;
      sa[968] = 0.14870301f;
      sa[969] = 0.0061602085f;
      sa[970] = 0.29936567f;
      sa[971] = 0.03452532f;
      sa[972] = -0.16341503f;
      sa[973] = -0.22019292f;
      sa[974] = -0.36941585f;
      sa[975] = -0.2992079f;
      sa[976] = -0.04927103f;
      sa[977] = 0.031173946f;
      sa[978] = -0.0989072f;
      sa[979] = 0.15393646f;
      sa[980] = 0.090727694f;
      sa[981] = -0.27166364f;
      sa[982] = 0.09744313f;
      sa[983] = -0.07593278f;
      sa[984] = -0.28205678f;
      sa[985] = 0.034027524f;
      sa[986] = -0.2844554f;
      sa[987] = 0.068543464f;
      sa[988] = 0.14084674f;
      sa[989] = 0.1585459f;
      sa[990] = 0.28993845f;
      sa[991] = -0.30508605f;
      sa[992] = -0.17792441f;
      sa[993] = -0.0019922527f;
      sa[994] = -0.14456302f;
      sa[995] = -0.25280017f;
      sa[996] = 0.12751982f;
      sa[997] = 0.12957273f;
      sa[998] = 0.12928589f;
      sa[999] = 0.20190589f;
      sa[1000] = 0.040974963f;
      sa[1001] = 0.27284768f;
      sa[1002] = 0.26798216f;
      sa[1003] = -0.04889274f;
      sa[1004] = 0.13808471f;
      sa[1005] = -0.17256336f;
      sa[1006] = -0.1039266f;
      sa[1007] = 0.009100117f;
      sa[1008] = 0.18593377f;
      sa[1009] = 0.043237988f;
      sa[1010] = -0.03672979f;
      sa[1011] = 0.35526884f;
      sa[1012] = -0.10219947f;
      sa[1013] = 0.111928366f;
      sa[1014] = 0.20997067f;
      sa[1015] = -0.3400622f;
      sa[1016] = 0.24896398f;
      sa[1017] = 0.027276628f;
      sa[1018] = -0.06701861f;
      sa[1019] = 0.10519734f;
      sa[1020] = -0.25394014f;
      sa[1021] = 0.045410063f;
      sa[1022] = 0.19125912f;
      sa[1023] = 0.055728663f;
      sa[1024] = -0.04123106f;
      sa[1025] = 0.09677977f;
      sa[1026] = 0.16565317f;
      sa[1027] = 0.25149748f;
      sa[1028] = 0.27892703f;
      sa[1029] = -0.04653105f;
      sa[1030] = -0.19745068f;
      sa[1031] = 0.004834907f;
      sa[1032] = -0.228074f;
      sa[1033] = 0.018208059f;
      sa[1034] = -0.02060686f;
      sa[1035] = -0.27962384f;
      sa[1036] = 0.24956076f;
      sa[1037] = 0.014397977f;
      sa[1038] = -0.22383474f;
      sa[1039] = 0.24954458f;
      sa[1040] = 0.045186065f;
      sa[1041] = 0.13165231f;
      sa[1042] = -0.21366882f;
      sa[1043] = -0.04659597f;
      sa[1044] = 0.17641833f;
      sa[1045] = 0.19102705f;
      sa[1046] = -0.19554591f;
      sa[1047] = -0.25393453f;
      sa[1048] = 0.19492455f;
      sa[1049] = -0.06336191f;
      sa[1050] = 0.08555608f;
      sa[1051] = -0.15056771f;
      sa[1052] = 0.1332552f;
      sa[1053] = 0.20764716f;
      sa[1054] = 0.18845995f;
      sa[1055] = -0.052424647f;
      sa[1056] = 0.27243036f;
      sa[1057] = -0.16994034f;
      sa[1058] = 0.2466545f;
      sa[1059] = -0.14088781f;
      sa[1060] = -0.29318622f;
      sa[1061] = -0.02721802f;
      sa[1062] = 0.25616315f;
      sa[1063] = -0.0035217889f;
      sa[1064] = 0.09910899f;
      sa[1065] = -0.010926516f;
      sa[1066] = 0.20502147f;
      sa[1067] = -0.27297994f;
      sa[1068] = -0.2748095f;
      sa[1069] = 0.19404432f;
      sa[1070] = 0.15613581f;
      sa[1071] = 0.26735666f;
      sa[1072] = -0.23988073f;
      sa[1073] = 0.13267191f;
      sa[1074] = 0.13583966f;
      sa[1075] = -0.15608974f;
      sa[1076] = -0.16947158f;
      sa[1077] = 0.12599286f;
      sa[1078] = 3.6584068E-4f;
      sa[1079] = 0.08394867f;
      sa[1080] = 0.25449127f;
      sa[1081] = 0.2506326f;
      sa[1082] = -0.32305896f;
      sa[1083] = -0.14402921f;
      sa[1084] = 0.21823524f;
      sa[1085] = -0.24575837f;
      sa[1086] = -0.2972926f;
      sa[1087] = -0.20718563f;
      sa[1088] = -0.1480039f;
      sa[1089] = 0.123096175f;
      sa[1090] = -0.1980895f;
      sa[1091] = 0.18870544f;
      sa[1092] = -0.2245104f;
      sa[1093] = -0.27762756f;
      sa[1094] = -0.019332558f;
      sa[1095] = -0.18191648f;
      sa[1096] = 0.08446022f;
      sa[1097] = -0.11828916f;
      sa[1098] = -0.04498167f;
      sa[1099] = -0.11550322f;
      sa[1100] = -0.0790343f;
      sa[1101] = 0.16582644f;
      sa[1102] = -0.122438066f;
      sa[1103] = 0.2564725f;
      sa[1104] = -0.29483697f;
      sa[1105] = -0.10141188f;
      sa[1106] = -0.13825929f;
      sa[1107] = 0.1427905f;
      sa[1108] = -0.15357684f;
      sa[1109] = 0.2610436f;
      sa[1110] = 0.16546078f;
      sa[1111] = -0.2127681f;
      sa[1112] = 0.24627963f;
      sa[1113] = 0.24268585f;
      sa[1114] = 0.018708512f;
      sa[1115] = 0.15281445f;
      sa[1116] = -0.06935816f;
      sa[1117] = -0.2099734f;
      sa[1118] = -0.19349635f;
      sa[1119] = -0.08268209f;
      sa[1120] = 0.21162395f;
      sa[1121] = 0.098027244f;
      sa[1122] = 0.26118973f;
      sa[1123] = 0.28057596f;
      sa[1124] = 0.02385319f;
      sa[1125] = -0.10191995f;
      sa[1126] = 0.20389843f;
      sa[1127] = 0.13913164f;
      sa[1128] = 0.02835487f;
      sa[1129] = -0.089981474f;
      sa[1130] = 0.22194399f;
      sa[1131] = 0.30028346f;
      sa[1132] = -0.17557436f;
      sa[1133] = -0.1307409f;
      sa[1134] = 0.26494032f;
      sa[1135] = -0.29866496f;
      sa[1136] = -0.005602378f;
      sa[1137] = 0.21756248f;
      sa[1138] = -0.06310004f;
      sa[1139] = 0.20423026f;
      sa[1140] = 0.25493333f;
      sa[1141] = -0.2672925f;
      sa[1142] = 0.12868309f;
      sa[1143] = 0.010998201f;
      sa[1144] = -0.2246659f;
      sa[1145] = 0.2090708f;
      sa[1146] = 0.25146118f;
      sa[1147] = -0.0054632425f;
      sa[1148] = 0.05221967f;
      sa[1149] = 0.02913316f;
      sa[1150] = -0.26231578f;
      sa[1151] = -0.24617165f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_07_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_07_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2297359f;
      sa[1] = -0.11313886f;
      sa[2] = -0.57454586f;
      sa[3] = -0.97794217f;
      sa[4] = 0.06649679f;
      sa[5] = 0.17864771f;
      sa[6] = 1.2802659f;
      sa[7] = -0.71038914f;
      sa[8] = -0.9073999f;
      sa[9] = 0.75236857f;
      sa[10] = -0.13574831f;
      sa[11] = 0.34606826f;
      sa[12] = 0.14796036f;
      sa[13] = 0.04050129f;
      sa[14] = -1.320833f;
      sa[15] = 1.1058536f;
      sa[16] = 1.5996768f;
      sa[17] = -0.51279366f;
      sa[18] = 0.08318032f;
      sa[19] = -0.48522562f;
      sa[20] = 1.1449786f;
      sa[21] = 0.030992152f;
      sa[22] = -0.94534016f;
      sa[23] = 0.75763375f;
      sa[24] = -1.388173f;
      sa[25] = 0.43269843f;
      sa[26] = -0.24148542f;
      sa[27] = 1.4804739f;
      sa[28] = -1.3288841f;
      sa[29] = -0.443853f;
      sa[30] = 0.42515832f;
      sa[31] = -0.61975145f;
      sa[32] = -1.1263353f;
      sa[33] = -1.4717972f;
      sa[34] = 0.046779897f;
      sa[35] = 1.4034455f;
      sa[36] = -0.29328945f;
      sa[37] = -0.047426164f;
      sa[38] = 0.22209926f;
      sa[39] = 0.8464419f;
      sa[40] = -0.76423585f;
      sa[41] = -1.3714304f;
      sa[42] = -0.992202f;
      sa[43] = -1.4000652f;
      sa[44] = 0.01751155f;
      sa[45] = -1.3245742f;
      sa[46] = 1.1834469f;
      sa[47] = 1.2840419f;
      sa[48] = -1.3613832f;
      sa[49] = -1.0639255f;
      sa[50] = 0.45500857f;
      sa[51] = -0.31507698f;
      sa[52] = 0.8154363f;
      sa[53] = 0.8788577f;
      sa[54] = -0.22508216f;
      sa[55] = 1.1385342f;
      sa[56] = -1.0642083f;
      sa[57] = -1.0874208f;
      sa[58] = 0.18720947f;
      sa[59] = -0.20515998f;
      sa[60] = 1.407039f;
      sa[61] = -0.6363023f;
      sa[62] = -0.3463766f;
      sa[63] = 0.6819908f;
      sa[64] = 1.4226669f;
      sa[65] = -0.6544762f;
      sa[66] = 0.6373197f;
      sa[67] = 1.6030662f;
      sa[68] = 0.67183375f;
      sa[69] = -1.059977f;
      sa[70] = -1.5395051f;
      sa[71] = -0.3736654f;
      sa[72] = -1.30818f;
      sa[73] = 1.2143675f;
      sa[74] = 1.3655406f;
      sa[75] = -0.11739931f;
      sa[76] = 0.8618803f;
      sa[77] = 0.49798545f;
      sa[78] = -1.2863399f;
      sa[79] = 1.0146888f;
      sa[80] = -0.79795706f;
      sa[81] = 0.31735587f;
      sa[82] = 0.83969396f;
      sa[83] = -0.60311997f;
      sa[84] = -1.599622f;
      sa[85] = -1.2555513f;
      sa[86] = 0.21161391f;
      sa[87] = 1.2125807f;
      sa[88] = -1.5514933f;
      sa[89] = -0.4880384f;
      sa[90] = -1.0290519f;
      sa[91] = 1.5487709f;
      sa[92] = -0.3562902f;
      sa[93] = 0.24286602f;
      sa[94] = -1.5069975f;
      sa[95] = -0.23085499f;
      sa[96] = -1.0934491f;
      sa[97] = 0.18254799f;
      sa[98] = -0.06658418f;
      sa[99] = 0.32242107f;
      sa[100] = -1.2664164f;
      sa[101] = -0.38648722f;
      sa[102] = 1.2844702f;
      sa[103] = 0.036857203f;
      sa[104] = -0.1577019f;
      sa[105] = -0.6545049f;
      sa[106] = 1.4152702f;
      sa[107] = 1.2275145f;
      sa[108] = 0.7903178f;
      sa[109] = 0.1410854f;
      sa[110] = 0.72928f;
      sa[111] = -0.7470318f;
      sa[112] = -1.1082377f;
      sa[113] = 0.19411018f;
      sa[114] = 0.149103f;
      sa[115] = -0.29605162f;
      sa[116] = 1.162225f;
      sa[117] = 0.06478962f;
      sa[118] = -1.3231239f;
      sa[119] = -0.770314f;
      sa[120] = -0.2507983f;
      sa[121] = 1.0648327f;
      sa[122] = -0.081795484f;
      sa[123] = 0.40790373f;
      sa[124] = -0.7629128f;
      sa[125] = 0.8001699f;
      sa[126] = -0.9775227f;
      sa[127] = 0.4383025f;
      sa[128] = -0.85190195f;
      sa[129] = 0.74670273f;
      sa[130] = -0.34343034f;
      sa[131] = 0.9097978f;
      sa[132] = 0.5159734f;
      sa[133] = 0.6642996f;
      sa[134] = 0.6330621f;
      sa[135] = -1.083018f;
      sa[136] = 0.52408206f;
      sa[137] = -0.6437445f;
      sa[138] = -0.13359728f;
      sa[139] = 1.1771225f;
      sa[140] = -0.4601897f;
      sa[141] = -0.0046113143f;
      sa[142] = 0.32715103f;
      sa[143] = -0.77347744f;
      sa[144] = 0.9564834f;
      sa[145] = -0.7631682f;
      sa[146] = 0.05304299f;
      sa[147] = -0.28093407f;
      sa[148] = -0.80935025f;
      sa[149] = 1.09086f;
      sa[150] = -1.11492f;
      sa[151] = -1.5483669f;
      sa[152] = 1.5826906f;
      sa[153] = -0.5800149f;
      sa[154] = 1.3480101f;
      sa[155] = -1.5087954f;
      sa[156] = -1.4496573f;
      sa[157] = -1.1119115f;
      sa[158] = -0.2233927f;
      sa[159] = -0.6549577f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_07 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_07_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_07_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_07_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_07_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_07_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


