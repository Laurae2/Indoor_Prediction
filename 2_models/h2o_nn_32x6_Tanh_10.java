/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:18.837+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_10 > h2o_nn_32x6_Tanh_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_10", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_10_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6096781963186229344L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.004691898232175995;
      sa[1] = -0.02851019623978504;
      sa[2] = 0.08604603194509833;
      sa[3] = -0.10826172374458572;
      sa[4] = 0.0630049608164814;
      sa[5] = 0.001053886781118236;
      sa[6] = 0.07336673580255651;
      sa[7] = 0.036287166505959985;
      sa[8] = -0.08843422123160727;
      sa[9] = -0.16364971772532083;
      sa[10] = 0.16114221171103651;
      sa[11] = 0.1292866956479649;
      sa[12] = 0.2777064041278481;
      sa[13] = -0.02480647565889348;
      sa[14] = 0.12231051341915528;
      sa[15] = -0.04084479086371855;
      sa[16] = -0.032157974753990494;
      sa[17] = 0.10514030631369464;
      sa[18] = -0.023259013776434398;
      sa[19] = 0.07528184822603419;
      sa[20] = 0.05177886920047034;
      sa[21] = -0.08754297235360406;
      sa[22] = 0.030284967943040423;
      sa[23] = -0.049412731843746886;
      sa[24] = -0.020406039894419734;
      sa[25] = 0.11152384456476559;
      sa[26] = -0.02918808369685441;
      sa[27] = -0.045546841149995104;
      sa[28] = -0.18189503241498325;
      sa[29] = -0.05482600896693965;
      sa[30] = 0.014747507225921249;
      sa[31] = -0.12170083504182852;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0016007328146397449;
      sa[1] = -0.1294925017154444;
      sa[2] = -0.1149565146723609;
      sa[3] = -0.022173657284913252;
      sa[4] = -0.06636881183837885;
      sa[5] = -0.011304205470013404;
    }
  }
}
class h2o_nn_32x6_Tanh_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.02565631f;
      sa[1] = 0.10331532f;
      sa[2] = 0.13563535f;
      sa[3] = 0.09684167f;
      sa[4] = -0.2447509f;
      sa[5] = -0.38363397f;
      sa[6] = -0.10460757f;
      sa[7] = 0.34186557f;
      sa[8] = 0.10453206f;
      sa[9] = -0.1350805f;
      sa[10] = -0.08393289f;
      sa[11] = -0.05684949f;
      sa[12] = 0.01775279f;
      sa[13] = -0.42371088f;
      sa[14] = -0.22350484f;
      sa[15] = -0.1599536f;
      sa[16] = 0.0757842f;
      sa[17] = 0.02173523f;
      sa[18] = 0.007305926f;
      sa[19] = -0.027886193f;
      sa[20] = 0.2427186f;
      sa[21] = -0.283912f;
      sa[22] = 0.26581445f;
      sa[23] = -0.27557665f;
      sa[24] = 0.16377836f;
      sa[25] = 0.11866833f;
      sa[26] = -0.15293628f;
      sa[27] = 0.109918125f;
      sa[28] = 0.12519537f;
      sa[29] = -0.36462718f;
      sa[30] = -0.45448363f;
      sa[31] = -0.03585515f;
      sa[32] = 0.23076975f;
      sa[33] = -0.10064125f;
      sa[34] = -0.04545632f;
      sa[35] = -0.07930319f;
      sa[36] = -0.18003997f;
      sa[37] = 0.18863192f;
      sa[38] = -0.007896074f;
      sa[39] = -0.100528635f;
      sa[40] = -0.018594077f;
      sa[41] = -0.077658035f;
      sa[42] = -0.15664977f;
      sa[43] = -0.021631598f;
      sa[44] = 0.24209239f;
      sa[45] = -0.30525607f;
      sa[46] = 0.019344999f;
      sa[47] = 0.12419931f;
      sa[48] = 0.27758962f;
      sa[49] = 0.3213446f;
      sa[50] = 0.26196855f;
      sa[51] = -0.2773759f;
      sa[52] = -0.05241831f;
      sa[53] = 0.1165099f;
      sa[54] = 0.19784747f;
      sa[55] = 0.20117734f;
      sa[56] = -0.14159562f;
      sa[57] = -0.28015164f;
      sa[58] = 0.25562948f;
      sa[59] = -0.21907933f;
      sa[60] = -0.19718921f;
      sa[61] = 0.22796458f;
      sa[62] = 0.08168478f;
      sa[63] = -0.24363856f;
      sa[64] = 0.1672267f;
      sa[65] = 0.14489658f;
      sa[66] = 0.053760663f;
      sa[67] = 0.12072433f;
      sa[68] = -0.22681423f;
      sa[69] = 0.008607427f;
      sa[70] = -0.17740966f;
      sa[71] = 0.352243f;
      sa[72] = -0.07092022f;
      sa[73] = 0.25222486f;
      sa[74] = -0.21244624f;
      sa[75] = 0.029183475f;
      sa[76] = -0.12989907f;
      sa[77] = -0.015500326f;
      sa[78] = -0.009549846f;
      sa[79] = 0.22248885f;
      sa[80] = -0.3598f;
      sa[81] = 0.08907769f;
      sa[82] = 0.04935808f;
      sa[83] = 0.08187247f;
      sa[84] = -0.101278275f;
      sa[85] = -0.23199773f;
      sa[86] = 0.07163054f;
      sa[87] = 0.20137388f;
      sa[88] = 0.2425024f;
      sa[89] = 0.118925855f;
      sa[90] = -0.06429841f;
      sa[91] = -7.516078E-4f;
      sa[92] = -0.029912582f;
      sa[93] = -0.23389326f;
      sa[94] = -0.19579794f;
      sa[95] = -0.27352783f;
      sa[96] = 0.07643961f;
      sa[97] = 0.05615102f;
      sa[98] = 0.19931152f;
      sa[99] = 0.20756444f;
      sa[100] = -0.16559432f;
      sa[101] = -0.2780905f;
      sa[102] = -0.2881332f;
      sa[103] = -0.1726143f;
      sa[104] = -0.028661171f;
      sa[105] = -0.061790027f;
      sa[106] = -0.126653f;
      sa[107] = 0.24573164f;
      sa[108] = 0.28632763f;
      sa[109] = -0.13111888f;
      sa[110] = -0.25851297f;
      sa[111] = 0.021084769f;
      sa[112] = 0.18942499f;
      sa[113] = 0.18089406f;
      sa[114] = -0.11214698f;
      sa[115] = -0.10322257f;
      sa[116] = -0.24947567f;
      sa[117] = 0.023563052f;
      sa[118] = -0.31628105f;
      sa[119] = -0.078515f;
      sa[120] = 0.12943593f;
      sa[121] = 0.3321288f;
      sa[122] = 0.2774618f;
      sa[123] = 0.33436564f;
      sa[124] = 0.2790664f;
      sa[125] = 0.32234743f;
      sa[126] = -0.2533557f;
      sa[127] = -0.11872624f;
      sa[128] = -0.063913636f;
      sa[129] = 0.04049876f;
      sa[130] = -0.297006f;
      sa[131] = 0.3102997f;
      sa[132] = 0.14164275f;
      sa[133] = -0.2866791f;
      sa[134] = 0.11859361f;
      sa[135] = 0.008431345f;
      sa[136] = -0.29966676f;
      sa[137] = 0.014289136f;
      sa[138] = 0.21625559f;
      sa[139] = 0.009767735f;
      sa[140] = -0.13863361f;
      sa[141] = -0.026558775f;
      sa[142] = 0.21281174f;
      sa[143] = -0.14197792f;
      sa[144] = 0.29389536f;
      sa[145] = -0.29123458f;
      sa[146] = -0.37414485f;
      sa[147] = -0.029754208f;
      sa[148] = 0.17479634f;
      sa[149] = 0.07778624f;
      sa[150] = 0.2715814f;
      sa[151] = -0.16958888f;
      sa[152] = -0.03007536f;
      sa[153] = 0.3028459f;
      sa[154] = 0.28582296f;
      sa[155] = -0.044898573f;
      sa[156] = 0.12735245f;
      sa[157] = -0.26218525f;
      sa[158] = 0.118708104f;
      sa[159] = 0.17844312f;
      sa[160] = 0.023114083f;
      sa[161] = 0.12612323f;
      sa[162] = 0.28930578f;
      sa[163] = -0.2111429f;
      sa[164] = 0.21202165f;
      sa[165] = -0.033455033f;
      sa[166] = -0.039641075f;
      sa[167] = -0.07772976f;
      sa[168] = -0.02172142f;
      sa[169] = 0.12389843f;
      sa[170] = 0.13223447f;
      sa[171] = 0.08483538f;
      sa[172] = -0.13622226f;
      sa[173] = -0.19067036f;
      sa[174] = -0.1816565f;
      sa[175] = -0.2777281f;
      sa[176] = 0.042284593f;
      sa[177] = 0.1127034f;
      sa[178] = 0.023322375f;
      sa[179] = 0.2090457f;
      sa[180] = -0.14865902f;
      sa[181] = -0.32386753f;
      sa[182] = -0.15702085f;
      sa[183] = 0.08864714f;
      sa[184] = 0.23254807f;
      sa[185] = 0.09562291f;
      sa[186] = -0.3156461f;
      sa[187] = 0.023332829f;
      sa[188] = 0.012830813f;
      sa[189] = 0.16312046f;
      sa[190] = 0.11304806f;
      sa[191] = -0.19733052f;
      sa[192] = -0.03497754f;
      sa[193] = 0.22352207f;
      sa[194] = 0.16808541f;
      sa[195] = 0.36272097f;
      sa[196] = 0.23683679f;
      sa[197] = -0.04779537f;
      sa[198] = 0.091905184f;
      sa[199] = -0.063367985f;
      sa[200] = 0.14696817f;
      sa[201] = -0.24129382f;
      sa[202] = 0.17751026f;
      sa[203] = 0.038121477f;
      sa[204] = -0.20870192f;
      sa[205] = 0.20516984f;
      sa[206] = 0.21665461f;
      sa[207] = 0.15862484f;
      sa[208] = -0.16920581f;
      sa[209] = -0.036973346f;
      sa[210] = -0.3013241f;
      sa[211] = -0.18716791f;
      sa[212] = 0.37961075f;
      sa[213] = -0.4311057f;
      sa[214] = 0.03386666f;
      sa[215] = 0.009258567f;
      sa[216] = -0.05914613f;
      sa[217] = 0.17706223f;
      sa[218] = -0.075719036f;
      sa[219] = 0.5493917f;
      sa[220] = -0.22206084f;
      sa[221] = 0.013663313f;
      sa[222] = 0.21549056f;
      sa[223] = 0.02562042f;
      sa[224] = 0.0953429f;
      sa[225] = 0.2611718f;
      sa[226] = -0.25093457f;
      sa[227] = -0.15914874f;
      sa[228] = 0.26842624f;
      sa[229] = 0.10584185f;
      sa[230] = 0.28029376f;
      sa[231] = -0.31162634f;
      sa[232] = -0.21341135f;
      sa[233] = 0.11971645f;
      sa[234] = 0.030817285f;
      sa[235] = -0.11299376f;
      sa[236] = 0.17909732f;
      sa[237] = -0.06832708f;
      sa[238] = -0.07675992f;
      sa[239] = 0.12979484f;
      sa[240] = 0.06506456f;
      sa[241] = -0.24963571f;
      sa[242] = -0.15620267f;
      sa[243] = -0.21795213f;
      sa[244] = -0.05758406f;
      sa[245] = -0.08741686f;
      sa[246] = -0.21921232f;
      sa[247] = -0.13440304f;
      sa[248] = 0.18379493f;
      sa[249] = -0.08456619f;
      sa[250] = -0.016028699f;
      sa[251] = -0.09895982f;
      sa[252] = -0.15955593f;
      sa[253] = -0.1543451f;
      sa[254] = -0.21092783f;
      sa[255] = 0.4890077f;
      sa[256] = -0.11099886f;
      sa[257] = 0.3950659f;
      sa[258] = -0.20241109f;
      sa[259] = -0.13081697f;
      sa[260] = -0.0951621f;
      sa[261] = -0.100976035f;
      sa[262] = -0.24614723f;
      sa[263] = 0.25808966f;
      sa[264] = -0.1385487f;
      sa[265] = 0.17590687f;
      sa[266] = -0.29561415f;
      sa[267] = -0.16121218f;
      sa[268] = 0.11809143f;
      sa[269] = 0.00766532f;
      sa[270] = -0.2598014f;
      sa[271] = 0.1503546f;
      sa[272] = -0.06209433f;
      sa[273] = -0.07304678f;
      sa[274] = 0.113491334f;
      sa[275] = 0.07506669f;
      sa[276] = 0.12817684f;
      sa[277] = -0.11142021f;
      sa[278] = -0.2156593f;
      sa[279] = 0.1489779f;
      sa[280] = -0.0876734f;
      sa[281] = 0.37444264f;
      sa[282] = 0.08274166f;
      sa[283] = 0.09502106f;
      sa[284] = 0.08742899f;
      sa[285] = -0.14262463f;
      sa[286] = 0.14599669f;
      sa[287] = 0.0066098426f;
      sa[288] = -0.19352521f;
      sa[289] = -0.09111259f;
      sa[290] = -0.118314475f;
      sa[291] = -0.107012086f;
      sa[292] = 0.12843694f;
      sa[293] = -0.15287387f;
      sa[294] = 0.059377804f;
      sa[295] = 0.094621636f;
      sa[296] = 0.04236395f;
      sa[297] = 0.30138466f;
      sa[298] = 0.09351173f;
      sa[299] = -0.1976201f;
      sa[300] = 0.01694679f;
      sa[301] = -0.094169036f;
      sa[302] = 0.17632394f;
      sa[303] = 0.0551446f;
      sa[304] = -0.15299237f;
      sa[305] = 0.078011125f;
      sa[306] = 0.18724768f;
      sa[307] = -0.03208985f;
      sa[308] = 0.03276425f;
      sa[309] = 0.11296037f;
      sa[310] = 0.26249668f;
      sa[311] = 0.30035388f;
      sa[312] = -0.18484196f;
      sa[313] = -0.14007811f;
      sa[314] = -0.15602796f;
      sa[315] = 0.44521376f;
      sa[316] = -0.061895832f;
      sa[317] = -0.10459867f;
      sa[318] = 0.042801756f;
      sa[319] = 0.18016525f;
      sa[320] = -0.08047612f;
      sa[321] = -0.019792965f;
      sa[322] = 0.54943913f;
      sa[323] = 0.004864943f;
      sa[324] = -0.092578635f;
      sa[325] = 0.19267355f;
      sa[326] = -0.2069353f;
      sa[327] = -0.2042362f;
      sa[328] = -0.16389103f;
      sa[329] = 0.124764904f;
      sa[330] = -0.24378276f;
      sa[331] = -0.02568754f;
      sa[332] = -0.18914685f;
      sa[333] = 0.05634613f;
      sa[334] = -0.06769991f;
      sa[335] = 0.49136934f;
      sa[336] = -0.2556884f;
      sa[337] = -0.23661956f;
      sa[338] = 0.2251486f;
      sa[339] = -0.3759787f;
      sa[340] = -0.28935596f;
      sa[341] = -0.45977274f;
      sa[342] = 0.3255932f;
      sa[343] = -0.084823824f;
      sa[344] = -0.19336125f;
      sa[345] = 0.12707561f;
      sa[346] = 0.13796976f;
      sa[347] = -0.33713222f;
      sa[348] = 0.25483617f;
      sa[349] = -0.2550711f;
      sa[350] = -0.17772932f;
      sa[351] = -0.22586945f;
      sa[352] = 0.0789256f;
      sa[353] = -0.15272802f;
      sa[354] = -0.04797111f;
      sa[355] = -0.0582467f;
      sa[356] = -0.13848184f;
      sa[357] = 0.35492542f;
      sa[358] = -0.44291472f;
      sa[359] = -0.0056334306f;
      sa[360] = 0.111157514f;
      sa[361] = -0.02125274f;
      sa[362] = -0.00557439f;
      sa[363] = -0.18736781f;
      sa[364] = -0.01808725f;
      sa[365] = 0.061603058f;
      sa[366] = 0.19248691f;
      sa[367] = -0.16216247f;
      sa[368] = -0.17973794f;
      sa[369] = 0.3299753f;
      sa[370] = -0.19515964f;
      sa[371] = 0.24847463f;
      sa[372] = -0.055903926f;
      sa[373] = 0.42010435f;
      sa[374] = -0.15335414f;
      sa[375] = -0.42686442f;
      sa[376] = -0.19184735f;
      sa[377] = -0.19797067f;
      sa[378] = 0.34336925f;
      sa[379] = 0.23747452f;
      sa[380] = -0.17266974f;
      sa[381] = -0.07097073f;
      sa[382] = -0.026295068f;
      sa[383] = -0.20412159f;
      sa[384] = -0.02119092f;
      sa[385] = 0.13820082f;
      sa[386] = -0.21171656f;
      sa[387] = -0.17478387f;
      sa[388] = 0.059730794f;
      sa[389] = -0.010337055f;
      sa[390] = 0.108771294f;
      sa[391] = -0.19330895f;
      sa[392] = -0.12408495f;
      sa[393] = 0.03954187f;
      sa[394] = -0.07336649f;
      sa[395] = 0.40398386f;
      sa[396] = 0.12915683f;
      sa[397] = -0.282454f;
      sa[398] = 0.18531339f;
      sa[399] = -0.3078571f;
      sa[400] = 0.21413475f;
      sa[401] = 0.2956759f;
      sa[402] = -0.058015216f;
      sa[403] = 0.048157528f;
      sa[404] = 0.18234533f;
      sa[405] = -0.24565847f;
      sa[406] = -0.022000575f;
      sa[407] = 0.07629348f;
      sa[408] = -0.12515533f;
      sa[409] = -0.12735417f;
      sa[410] = -0.0036050496f;
      sa[411] = 0.08230133f;
      sa[412] = -0.06802486f;
      sa[413] = 0.02138612f;
      sa[414] = 0.19042669f;
      sa[415] = 0.38923302f;
      sa[416] = -0.13567625f;
      sa[417] = 0.07434919f;
      sa[418] = 0.062097706f;
      sa[419] = 0.18340094f;
      sa[420] = 0.22904253f;
      sa[421] = 0.3216143f;
      sa[422] = 0.23877126f;
      sa[423] = -0.08524595f;
      sa[424] = 0.12769616f;
      sa[425] = -0.044415303f;
      sa[426] = -0.22245069f;
      sa[427] = 0.10097777f;
      sa[428] = -0.23555121f;
      sa[429] = -0.33053544f;
      sa[430] = 0.15311424f;
      sa[431] = 0.027537068f;
      sa[432] = -0.09125869f;
      sa[433] = 0.27365574f;
      sa[434] = 0.39926097f;
      sa[435] = -0.11727532f;
      sa[436] = -0.15637493f;
      sa[437] = -0.13083638f;
      sa[438] = 0.0907573f;
      sa[439] = 0.10353971f;
      sa[440] = 0.15456277f;
      sa[441] = -0.20626307f;
      sa[442] = 0.041249923f;
      sa[443] = -0.06186281f;
      sa[444] = -0.2198546f;
      sa[445] = 0.109372266f;
      sa[446] = 0.19292858f;
      sa[447] = 0.063814335f;
      sa[448] = 0.2539582f;
      sa[449] = 0.28963536f;
      sa[450] = -0.16192955f;
      sa[451] = 0.27407357f;
      sa[452] = 0.16775635f;
      sa[453] = 0.004407533f;
      sa[454] = -0.092646785f;
      sa[455] = 0.007114661f;
      sa[456] = 0.1171681f;
      sa[457] = 0.072656326f;
      sa[458] = -0.25412095f;
      sa[459] = 0.39101246f;
      sa[460] = 0.21705021f;
      sa[461] = 0.28303516f;
      sa[462] = 0.13429967f;
      sa[463] = 0.23819016f;
      sa[464] = -0.44130948f;
      sa[465] = 0.1960338f;
      sa[466] = -0.043137226f;
      sa[467] = 0.1583916f;
      sa[468] = 0.085760504f;
      sa[469] = 0.26511902f;
      sa[470] = 0.24394616f;
      sa[471] = -0.108204216f;
      sa[472] = -0.007833132f;
      sa[473] = -0.17982973f;
      sa[474] = -0.011415372f;
      sa[475] = 0.14321873f;
      sa[476] = 0.20414157f;
      sa[477] = -0.06780335f;
      sa[478] = 0.19316079f;
      sa[479] = -0.09848604f;
      sa[480] = -0.30034676f;
      sa[481] = -0.25067762f;
      sa[482] = -0.27301577f;
      sa[483] = 0.096886106f;
      sa[484] = 0.24717024f;
      sa[485] = 0.10595768f;
      sa[486] = 0.06875027f;
      sa[487] = -0.15975748f;
      sa[488] = -0.21389444f;
      sa[489] = 0.057978995f;
      sa[490] = 0.0085550165f;
      sa[491] = -0.3377491f;
      sa[492] = 0.21811259f;
      sa[493] = 0.2517033f;
      sa[494] = -0.1876082f;
      sa[495] = 0.21374175f;
      sa[496] = -0.05764614f;
      sa[497] = -0.025589833f;
      sa[498] = 0.086246274f;
      sa[499] = 0.0031470957f;
      sa[500] = -0.14362802f;
      sa[501] = 0.024464684f;
      sa[502] = 0.26317948f;
      sa[503] = 0.10491293f;
      sa[504] = -0.12509993f;
      sa[505] = -0.09161313f;
      sa[506] = 0.2400137f;
      sa[507] = 0.1312985f;
      sa[508] = 0.1878828f;
      sa[509] = 0.3830911f;
      sa[510] = 0.24402283f;
      sa[511] = -0.016635373f;
      sa[512] = 0.038606003f;
      sa[513] = -0.008623622f;
      sa[514] = 0.2646213f;
      sa[515] = -0.52287203f;
      sa[516] = 0.11935137f;
      sa[517] = 0.31082827f;
      sa[518] = 0.23792729f;
      sa[519] = 0.070758104f;
      sa[520] = 0.21495844f;
      sa[521] = 0.283443f;
      sa[522] = -0.048820816f;
      sa[523] = 0.20512614f;
      sa[524] = 0.18656306f;
      sa[525] = 0.16256085f;
      sa[526] = 0.01941379f;
      sa[527] = 0.052236605f;
      sa[528] = 0.090913124f;
      sa[529] = 0.16730434f;
      sa[530] = -0.21394506f;
      sa[531] = 0.32090828f;
      sa[532] = 0.21624695f;
      sa[533] = 0.24331473f;
      sa[534] = 0.3330058f;
      sa[535] = 0.04517122f;
      sa[536] = 0.09576267f;
      sa[537] = -0.32721657f;
      sa[538] = 0.3099123f;
      sa[539] = 0.24888375f;
      sa[540] = -0.15939881f;
      sa[541] = -0.20688361f;
      sa[542] = -0.21553564f;
      sa[543] = 0.23196068f;
      sa[544] = 0.073166825f;
      sa[545] = -0.045559872f;
      sa[546] = -0.018224075f;
      sa[547] = 0.26841596f;
      sa[548] = 0.17018093f;
      sa[549] = 0.10312155f;
      sa[550] = -0.10336842f;
      sa[551] = -0.017408792f;
      sa[552] = -0.063105546f;
      sa[553] = -0.24646692f;
      sa[554] = -0.27648887f;
      sa[555] = -0.16176607f;
      sa[556] = -0.2144116f;
      sa[557] = -0.29269525f;
      sa[558] = -0.1929216f;
      sa[559] = -0.19672403f;
      sa[560] = -0.25233716f;
      sa[561] = -0.07401995f;
      sa[562] = 0.18180765f;
      sa[563] = -0.029376797f;
      sa[564] = 0.11976329f;
      sa[565] = -0.11068695f;
      sa[566] = 0.24663587f;
      sa[567] = -0.27518308f;
      sa[568] = -0.12142309f;
      sa[569] = -0.024058862f;
      sa[570] = -0.14956534f;
      sa[571] = -0.048549116f;
      sa[572] = 0.14332801f;
      sa[573] = 0.4137525f;
      sa[574] = 0.018554743f;
      sa[575] = -0.4900693f;
      sa[576] = -0.2661134f;
      sa[577] = -0.06943948f;
      sa[578] = 0.11725135f;
      sa[579] = -0.11011034f;
      sa[580] = -0.039058324f;
      sa[581] = -0.3487196f;
      sa[582] = 0.0051729283f;
      sa[583] = 0.0057329345f;
      sa[584] = 0.14019085f;
      sa[585] = 0.08141178f;
      sa[586] = -0.18485354f;
      sa[587] = -0.047491975f;
      sa[588] = 0.17394142f;
      sa[589] = 0.014801714f;
      sa[590] = 0.086176f;
      sa[591] = 0.07600844f;
      sa[592] = -0.29491776f;
      sa[593] = -0.301054f;
      sa[594] = 0.12508556f;
      sa[595] = -0.06513187f;
      sa[596] = 0.38162062f;
      sa[597] = 0.014284909f;
      sa[598] = 0.28447646f;
      sa[599] = 0.05850863f;
      sa[600] = -0.302859f;
      sa[601] = 0.17215692f;
      sa[602] = 0.10642584f;
      sa[603] = 0.020648869f;
      sa[604] = 0.2515275f;
      sa[605] = 0.15516087f;
      sa[606] = 5.0627533E-4f;
      sa[607] = 0.03253656f;
      sa[608] = 0.08104233f;
      sa[609] = 0.10596381f;
      sa[610] = 0.071021564f;
      sa[611] = -0.105853446f;
      sa[612] = -0.18794994f;
      sa[613] = 0.20612337f;
      sa[614] = 0.25520027f;
      sa[615] = -0.3380385f;
      sa[616] = 0.13363574f;
      sa[617] = -0.18562654f;
      sa[618] = -0.06427754f;
      sa[619] = -0.062101852f;
      sa[620] = -0.09890508f;
      sa[621] = -0.17274313f;
      sa[622] = -0.25141555f;
      sa[623] = -0.52325016f;
      sa[624] = -0.105495915f;
      sa[625] = 0.25884244f;
      sa[626] = -0.053820875f;
      sa[627] = 0.09527359f;
      sa[628] = -0.12100676f;
      sa[629] = -0.033313148f;
      sa[630] = -0.1814965f;
      sa[631] = 0.49593404f;
      sa[632] = 0.071392976f;
      sa[633] = -0.08851582f;
      sa[634] = -0.17677933f;
      sa[635] = 0.111391224f;
      sa[636] = -0.026417093f;
      sa[637] = 0.05341543f;
      sa[638] = -0.17463343f;
      sa[639] = -0.08691589f;
      sa[640] = -0.16275835f;
      sa[641] = -0.2833226f;
      sa[642] = 0.24104436f;
      sa[643] = -0.42211482f;
      sa[644] = -0.38938805f;
      sa[645] = -0.40788856f;
      sa[646] = 0.286373f;
      sa[647] = -0.1180626f;
      sa[648] = 0.0137716355f;
      sa[649] = -0.05390151f;
      sa[650] = 0.052102104f;
      sa[651] = -0.108929545f;
      sa[652] = 0.087888904f;
      sa[653] = -0.06525626f;
      sa[654] = -0.12891388f;
      sa[655] = -0.14595617f;
      sa[656] = 0.21662034f;
      sa[657] = 0.07224004f;
      sa[658] = -0.2965416f;
      sa[659] = -0.10270043f;
      sa[660] = -0.2309924f;
      sa[661] = -0.030745978f;
      sa[662] = -0.24135025f;
      sa[663] = 0.238984f;
      sa[664] = -0.17004617f;
      sa[665] = 0.19056004f;
      sa[666] = -0.0025655166f;
      sa[667] = -0.2960979f;
      sa[668] = 0.25775078f;
      sa[669] = -0.1296031f;
      sa[670] = 0.0978363f;
      sa[671] = 0.060826458f;
      sa[672] = -0.2373773f;
      sa[673] = 0.1785941f;
      sa[674] = 0.25329515f;
      sa[675] = -0.44595158f;
      sa[676] = -0.059371922f;
      sa[677] = -0.14538921f;
      sa[678] = 0.24032846f;
      sa[679] = 0.06562408f;
      sa[680] = 0.13674915f;
      sa[681] = 0.28458208f;
      sa[682] = -0.36940846f;
      sa[683] = -0.18947147f;
      sa[684] = 0.099045545f;
      sa[685] = 0.11290236f;
      sa[686] = -0.19148847f;
      sa[687] = -0.27374524f;
      sa[688] = -0.20623542f;
      sa[689] = -0.1665048f;
      sa[690] = 0.019074967f;
      sa[691] = 0.070780076f;
      sa[692] = -0.24057676f;
      sa[693] = -0.08977249f;
      sa[694] = 0.34222254f;
      sa[695] = -0.1404698f;
      sa[696] = -0.042430792f;
      sa[697] = -0.08919448f;
      sa[698] = -0.110955276f;
      sa[699] = 0.39394954f;
      sa[700] = 0.17700987f;
      sa[701] = 0.21180691f;
      sa[702] = 0.08703324f;
      sa[703] = 0.020331586f;
      sa[704] = -0.30115372f;
      sa[705] = -0.08293384f;
      sa[706] = -0.16184066f;
      sa[707] = 0.05516082f;
      sa[708] = 0.015651617f;
      sa[709] = -0.25573725f;
      sa[710] = 0.23680437f;
      sa[711] = 0.41194892f;
      sa[712] = 0.03597026f;
      sa[713] = 0.17872097f;
      sa[714] = 0.24492711f;
      sa[715] = 0.117378406f;
      sa[716] = 0.022713358f;
      sa[717] = 0.085151725f;
      sa[718] = 0.16426602f;
      sa[719] = 0.22036907f;
      sa[720] = -0.31879434f;
      sa[721] = 0.26566428f;
      sa[722] = -0.025992924f;
      sa[723] = 0.5219117f;
      sa[724] = 0.038009215f;
      sa[725] = -0.2138208f;
      sa[726] = -0.2079608f;
      sa[727] = -0.3205014f;
      sa[728] = 0.021375211f;
      sa[729] = -0.17176983f;
      sa[730] = 0.010967571f;
      sa[731] = -0.37561533f;
      sa[732] = 0.23181014f;
      sa[733] = 0.28574014f;
      sa[734] = -0.14814617f;
      sa[735] = 0.21585144f;
      sa[736] = -0.058923915f;
      sa[737] = 0.19823606f;
      sa[738] = -0.5217492f;
      sa[739] = -0.26422003f;
      sa[740] = -0.10957765f;
      sa[741] = -0.21052372f;
      sa[742] = 0.15451828f;
      sa[743] = 0.089199975f;
      sa[744] = 0.13904898f;
      sa[745] = -0.19968864f;
      sa[746] = -0.05021589f;
      sa[747] = -0.39173496f;
      sa[748] = 0.01350808f;
      sa[749] = -0.09811728f;
      sa[750] = 0.3116057f;
      sa[751] = 0.33345416f;
      sa[752] = -0.013946018f;
      sa[753] = -0.028604237f;
      sa[754] = -0.05257222f;
      sa[755] = -0.009469909f;
      sa[756] = -0.22924553f;
      sa[757] = 0.2820312f;
      sa[758] = -0.20010753f;
      sa[759] = -0.06275057f;
      sa[760] = -0.14616539f;
      sa[761] = 0.03169181f;
      sa[762] = -0.13543828f;
      sa[763] = 0.05826245f;
      sa[764] = 0.12157173f;
      sa[765] = -0.13995737f;
      sa[766] = -0.2926124f;
      sa[767] = -0.06600611f;
      sa[768] = -0.11374596f;
      sa[769] = -0.22661163f;
      sa[770] = 0.049998812f;
      sa[771] = 0.07992633f;
      sa[772] = 0.050593507f;
      sa[773] = -0.22687556f;
      sa[774] = -0.12492665f;
      sa[775] = 0.37487638f;
      sa[776] = -0.03108965f;
      sa[777] = 0.027725538f;
      sa[778] = 0.15113938f;
      sa[779] = -0.07601026f;
      sa[780] = -0.02456549f;
      sa[781] = -0.071781196f;
      sa[782] = 0.10143302f;
      sa[783] = -0.09186336f;
      sa[784] = -0.087988034f;
      sa[785] = -0.065058365f;
      sa[786] = -0.04787923f;
      sa[787] = -0.10865228f;
      sa[788] = -0.24680567f;
      sa[789] = -0.059728384f;
      sa[790] = 0.10302247f;
      sa[791] = -0.08507778f;
      sa[792] = 0.2963764f;
      sa[793] = -0.13980027f;
      sa[794] = -0.3145665f;
      sa[795] = 0.069046654f;
      sa[796] = 0.26604715f;
      sa[797] = -0.2730622f;
      sa[798] = -0.28448448f;
      sa[799] = -0.011537985f;
      sa[800] = 0.09449189f;
      sa[801] = 0.15433413f;
      sa[802] = 0.23721509f;
      sa[803] = 0.1351937f;
      sa[804] = 0.13902228f;
      sa[805] = 0.16726518f;
      sa[806] = 0.215236f;
      sa[807] = 0.2513926f;
      sa[808] = -0.07284045f;
      sa[809] = -0.18415025f;
      sa[810] = 0.22344665f;
      sa[811] = -0.041502506f;
      sa[812] = 0.06662507f;
      sa[813] = -0.31790656f;
      sa[814] = 0.04744797f;
      sa[815] = -0.06315091f;
      sa[816] = -0.2277904f;
      sa[817] = -0.26103988f;
      sa[818] = 0.0019319486f;
      sa[819] = 0.427372f;
      sa[820] = -0.4150792f;
      sa[821] = -0.2901982f;
      sa[822] = -0.3919625f;
      sa[823] = 0.090189144f;
      sa[824] = 0.19077654f;
      sa[825] = 0.46498933f;
      sa[826] = -0.15550295f;
      sa[827] = -0.090072885f;
      sa[828] = 0.14789835f;
      sa[829] = -0.15559462f;
      sa[830] = 0.12725228f;
      sa[831] = 0.52239066f;
      sa[832] = 0.12175307f;
      sa[833] = 0.023576938f;
      sa[834] = 0.13489458f;
      sa[835] = 0.034395106f;
      sa[836] = 0.268634f;
      sa[837] = -0.20104614f;
      sa[838] = 0.06471755f;
      sa[839] = -0.13473463f;
      sa[840] = 0.106401265f;
      sa[841] = 0.0016221495f;
      sa[842] = 0.029135138f;
      sa[843] = 0.0023918424f;
      sa[844] = -0.014582364f;
      sa[845] = 0.11346354f;
      sa[846] = -0.27478743f;
      sa[847] = -0.22216502f;
      sa[848] = 0.19829169f;
      sa[849] = 0.24997918f;
      sa[850] = -0.03194571f;
      sa[851] = 0.14899336f;
      sa[852] = 0.23246926f;
      sa[853] = 0.10555448f;
      sa[854] = 0.21670572f;
      sa[855] = -0.13539939f;
      sa[856] = 0.07029976f;
      sa[857] = -0.16242062f;
      sa[858] = 0.10505492f;
      sa[859] = 0.17417575f;
      sa[860] = 0.41884696f;
      sa[861] = -0.004479629f;
      sa[862] = -0.3219553f;
      sa[863] = -0.123826906f;
      sa[864] = -0.08794072f;
      sa[865] = 0.2072986f;
      sa[866] = -0.2413875f;
      sa[867] = -0.15472199f;
      sa[868] = -0.1565444f;
      sa[869] = 0.18410182f;
      sa[870] = -0.013143004f;
      sa[871] = 0.1396643f;
      sa[872] = 0.15208422f;
      sa[873] = 0.020911627f;
      sa[874] = 0.099826224f;
      sa[875] = -0.29156765f;
      sa[876] = -0.20144422f;
      sa[877] = -0.20286608f;
      sa[878] = 0.094089516f;
      sa[879] = 0.24300793f;
      sa[880] = -0.12349845f;
      sa[881] = -0.049615536f;
      sa[882] = 0.2607979f;
      sa[883] = 0.23809756f;
      sa[884] = -0.18033129f;
      sa[885] = -0.16759735f;
      sa[886] = 0.07901743f;
      sa[887] = -0.061210487f;
      sa[888] = -0.12881722f;
      sa[889] = 0.06572914f;
      sa[890] = -0.24932612f;
      sa[891] = 0.8178778f;
      sa[892] = 0.129083f;
      sa[893] = 0.24171247f;
      sa[894] = 0.0037576947f;
      sa[895] = 0.14299831f;
      sa[896] = -0.214458f;
      sa[897] = 0.16422851f;
      sa[898] = 0.23206061f;
      sa[899] = 0.35182586f;
      sa[900] = -0.25715944f;
      sa[901] = 0.18766631f;
      sa[902] = 0.054521043f;
      sa[903] = -0.17891712f;
      sa[904] = 0.20141856f;
      sa[905] = 0.20189294f;
      sa[906] = -0.21884182f;
      sa[907] = -0.11759082f;
      sa[908] = -0.24442491f;
      sa[909] = 0.06169667f;
      sa[910] = 0.07805444f;
      sa[911] = -0.37799698f;
      sa[912] = -0.0035804396f;
      sa[913] = 0.06897f;
      sa[914] = -0.22292826f;
      sa[915] = -0.111113764f;
      sa[916] = 0.2871602f;
      sa[917] = 0.044435f;
      sa[918] = -0.07215293f;
      sa[919] = 0.08859597f;
      sa[920] = 0.1845995f;
      sa[921] = 0.007081298f;
      sa[922] = -0.040525377f;
      sa[923] = -0.16618514f;
      sa[924] = 0.063340925f;
      sa[925] = -0.1348224f;
      sa[926] = -0.01658365f;
      sa[927] = -0.17551556f;
      sa[928] = 0.26543295f;
      sa[929] = 0.13515502f;
      sa[930] = 0.20387948f;
      sa[931] = -0.06683265f;
      sa[932] = 0.045847528f;
      sa[933] = -0.24084225f;
      sa[934] = 0.22196743f;
      sa[935] = -0.1536107f;
      sa[936] = 0.031792607f;
      sa[937] = 0.1759858f;
      sa[938] = -0.16274057f;
      sa[939] = -0.07967158f;
      sa[940] = -0.08013085f;
      sa[941] = -0.29675528f;
      sa[942] = -0.2378386f;
      sa[943] = -0.25770503f;
      sa[944] = -0.23208335f;
      sa[945] = -0.018661054f;
      sa[946] = 0.06643548f;
      sa[947] = 0.22706063f;
      sa[948] = 0.15675773f;
      sa[949] = -0.12558213f;
      sa[950] = 0.1773825f;
      sa[951] = -0.010408613f;
      sa[952] = -0.1895142f;
      sa[953] = -0.20885892f;
      sa[954] = -0.21864457f;
      sa[955] = 0.14511053f;
      sa[956] = -0.0020289738f;
      sa[957] = -2.7633674E-4f;
      sa[958] = 0.08879138f;
      sa[959] = -0.12139096f;
      sa[960] = 0.29418188f;
      sa[961] = -0.09722049f;
      sa[962] = 0.0017588661f;
      sa[963] = 0.052970853f;
      sa[964] = -0.13583586f;
      sa[965] = 0.2814898f;
      sa[966] = -0.06803313f;
      sa[967] = -0.20097654f;
      sa[968] = 0.114572406f;
      sa[969] = -0.027756628f;
      sa[970] = 0.47845617f;
      sa[971] = 0.06065503f;
      sa[972] = -0.24561137f;
      sa[973] = -0.25615528f;
      sa[974] = -0.20254718f;
      sa[975] = -0.22984989f;
      sa[976] = -0.13424912f;
      sa[977] = -0.0020575365f;
      sa[978] = -0.14070141f;
      sa[979] = 0.17050472f;
      sa[980] = 0.18887024f;
      sa[981] = -0.25100183f;
      sa[982] = 0.073035896f;
      sa[983] = 0.03349258f;
      sa[984] = -0.3240134f;
      sa[985] = 0.011589261f;
      sa[986] = -0.3471343f;
      sa[987] = -0.039822653f;
      sa[988] = 0.1435266f;
      sa[989] = 0.14445685f;
      sa[990] = 0.23575355f;
      sa[991] = -0.25507239f;
      sa[992] = -0.17695402f;
      sa[993] = -0.013385196f;
      sa[994] = -0.1534697f;
      sa[995] = -0.349326f;
      sa[996] = 0.19743526f;
      sa[997] = 0.161844f;
      sa[998] = 0.05018804f;
      sa[999] = -0.18461761f;
      sa[1000] = 0.022713598f;
      sa[1001] = 0.21248385f;
      sa[1002] = 0.24211967f;
      sa[1003] = -0.10668972f;
      sa[1004] = 0.16087572f;
      sa[1005] = -0.16905072f;
      sa[1006] = -0.34431016f;
      sa[1007] = -0.03899246f;
      sa[1008] = 0.29671055f;
      sa[1009] = 0.14559902f;
      sa[1010] = -0.03255483f;
      sa[1011] = 0.58360595f;
      sa[1012] = -0.03389588f;
      sa[1013] = 0.19120045f;
      sa[1014] = 0.24605855f;
      sa[1015] = -0.22246155f;
      sa[1016] = 0.20518586f;
      sa[1017] = 0.119189344f;
      sa[1018] = -0.027349317f;
      sa[1019] = -0.025325296f;
      sa[1020] = -0.34331182f;
      sa[1021] = 0.020239115f;
      sa[1022] = 0.112269655f;
      sa[1023] = 0.11767086f;
      sa[1024] = -0.0142030325f;
      sa[1025] = 0.24553216f;
      sa[1026] = 0.0029316118f;
      sa[1027] = 0.19351143f;
      sa[1028] = 0.18508904f;
      sa[1029] = -0.1109546f;
      sa[1030] = -0.24519348f;
      sa[1031] = 0.06051593f;
      sa[1032] = -0.20279674f;
      sa[1033] = 0.05404371f;
      sa[1034] = -0.08334474f;
      sa[1035] = -0.019688971f;
      sa[1036] = 0.20203824f;
      sa[1037] = 0.011987739f;
      sa[1038] = -0.17957908f;
      sa[1039] = 0.32050288f;
      sa[1040] = 0.05573713f;
      sa[1041] = 0.18710423f;
      sa[1042] = -0.17188199f;
      sa[1043] = -0.08698029f;
      sa[1044] = 0.18633862f;
      sa[1045] = 0.335858f;
      sa[1046] = 0.025560293f;
      sa[1047] = -0.23533592f;
      sa[1048] = 0.20326336f;
      sa[1049] = 0.026483774f;
      sa[1050] = 0.08316125f;
      sa[1051] = -0.18252744f;
      sa[1052] = 0.18441248f;
      sa[1053] = 0.26567945f;
      sa[1054] = 0.13885297f;
      sa[1055] = 0.0602483f;
      sa[1056] = 0.21018474f;
      sa[1057] = -0.1274917f;
      sa[1058] = 0.1531308f;
      sa[1059] = -0.29552877f;
      sa[1060] = -0.22939429f;
      sa[1061] = 0.07451742f;
      sa[1062] = -0.07938581f;
      sa[1063] = 0.1358265f;
      sa[1064] = 0.037989907f;
      sa[1065] = -0.02490892f;
      sa[1066] = 0.14289366f;
      sa[1067] = -0.33182916f;
      sa[1068] = -0.11902785f;
      sa[1069] = 0.3062715f;
      sa[1070] = 0.012888199f;
      sa[1071] = 0.060240876f;
      sa[1072] = -0.22065665f;
      sa[1073] = 0.14001366f;
      sa[1074] = 0.25179112f;
      sa[1075] = -0.16006203f;
      sa[1076] = -0.33588797f;
      sa[1077] = 0.1018237f;
      sa[1078] = -0.30279803f;
      sa[1079] = 0.019602109f;
      sa[1080] = 0.13260335f;
      sa[1081] = 0.17751287f;
      sa[1082] = -0.3736089f;
      sa[1083] = -0.025213128f;
      sa[1084] = 0.1596628f;
      sa[1085] = -0.33390582f;
      sa[1086] = -0.3191301f;
      sa[1087] = -0.27396217f;
      sa[1088] = -0.09114899f;
      sa[1089] = -0.036392506f;
      sa[1090] = -0.2348691f;
      sa[1091] = 0.067181006f;
      sa[1092] = -0.07237506f;
      sa[1093] = -0.2772227f;
      sa[1094] = 0.13066326f;
      sa[1095] = -0.05462765f;
      sa[1096] = 0.02936866f;
      sa[1097] = -0.16777025f;
      sa[1098] = -0.050774224f;
      sa[1099] = -0.12954782f;
      sa[1100] = 0.025971213f;
      sa[1101] = 0.19635458f;
      sa[1102] = -0.040979903f;
      sa[1103] = 0.3399757f;
      sa[1104] = -0.3782587f;
      sa[1105] = -0.14885524f;
      sa[1106] = -0.14029732f;
      sa[1107] = -0.015147302f;
      sa[1108] = -0.07412952f;
      sa[1109] = 0.2712895f;
      sa[1110] = 0.114936195f;
      sa[1111] = -0.17863919f;
      sa[1112] = 0.28070837f;
      sa[1113] = 0.13008691f;
      sa[1114] = 0.08271912f;
      sa[1115] = 0.06829425f;
      sa[1116] = -0.051756207f;
      sa[1117] = -0.03742484f;
      sa[1118] = -0.031465437f;
      sa[1119] = 0.22615263f;
      sa[1120] = 0.19224988f;
      sa[1121] = 0.23431243f;
      sa[1122] = 0.24034327f;
      sa[1123] = 0.24256445f;
      sa[1124] = 0.06881768f;
      sa[1125] = -0.1281744f;
      sa[1126] = 0.15723358f;
      sa[1127] = 0.20331453f;
      sa[1128] = -0.03330259f;
      sa[1129] = -0.004922941f;
      sa[1130] = 0.14685975f;
      sa[1131] = 0.3660723f;
      sa[1132] = -0.16183425f;
      sa[1133] = -0.07604059f;
      sa[1134] = 0.03499845f;
      sa[1135] = -0.32021317f;
      sa[1136] = -0.07258358f;
      sa[1137] = 0.15190354f;
      sa[1138] = -0.15900902f;
      sa[1139] = 0.20426108f;
      sa[1140] = 0.41262272f;
      sa[1141] = -0.11258386f;
      sa[1142] = 0.043641273f;
      sa[1143] = -0.18851715f;
      sa[1144] = -0.21088284f;
      sa[1145] = 0.2131684f;
      sa[1146] = 0.35584584f;
      sa[1147] = 0.12103762f;
      sa[1148] = 0.02101407f;
      sa[1149] = -6.255372E-4f;
      sa[1150] = -0.518507f;
      sa[1151] = -0.38216022f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.3058914f;
      sa[1] = -0.12338934f;
      sa[2] = -0.59446406f;
      sa[3] = -1.0067601f;
      sa[4] = 0.02303533f;
      sa[5] = 0.1958721f;
      sa[6] = 1.3126886f;
      sa[7] = -0.7012119f;
      sa[8] = -0.9505792f;
      sa[9] = 0.75147253f;
      sa[10] = -0.18120754f;
      sa[11] = 0.11963891f;
      sa[12] = -0.039430358f;
      sa[13] = -0.038704276f;
      sa[14] = -1.3751836f;
      sa[15] = 1.2310249f;
      sa[16] = 1.5723857f;
      sa[17] = -0.35664865f;
      sa[18] = 0.3050291f;
      sa[19] = -0.65314764f;
      sa[20] = 1.227544f;
      sa[21] = 0.2071043f;
      sa[22] = -0.9008932f;
      sa[23] = 0.80880713f;
      sa[24] = -1.5165542f;
      sa[25] = 0.39250252f;
      sa[26] = -0.25752875f;
      sa[27] = 1.4788544f;
      sa[28] = -1.2831156f;
      sa[29] = -0.6171663f;
      sa[30] = 0.3365184f;
      sa[31] = -0.638909f;
      sa[32] = -0.97297686f;
      sa[33] = -1.5752785f;
      sa[34] = 0.014858358f;
      sa[35] = 1.4700562f;
      sa[36] = -0.29852405f;
      sa[37] = 0.040832616f;
      sa[38] = 0.2682351f;
      sa[39] = 0.92863125f;
      sa[40] = -0.69904226f;
      sa[41] = -1.5102054f;
      sa[42] = -1.1130596f;
      sa[43] = -1.4265909f;
      sa[44] = 0.09019998f;
      sa[45] = -1.2546599f;
      sa[46] = 1.1769415f;
      sa[47] = 1.2972306f;
      sa[48] = -1.3246368f;
      sa[49] = -1.0698162f;
      sa[50] = 0.47076452f;
      sa[51] = -0.33208156f;
      sa[52] = 0.9542203f;
      sa[53] = 0.7733166f;
      sa[54] = -0.2533352f;
      sa[55] = 1.2202276f;
      sa[56] = -0.95671797f;
      sa[57] = -1.026877f;
      sa[58] = 0.17902353f;
      sa[59] = -0.25928438f;
      sa[60] = 1.4290117f;
      sa[61] = -0.6653213f;
      sa[62] = -0.26424372f;
      sa[63] = 0.7234874f;
      sa[64] = 1.280415f;
      sa[65] = -0.52170074f;
      sa[66] = 0.69086605f;
      sa[67] = 1.4229715f;
      sa[68] = 0.6911236f;
      sa[69] = -1.231823f;
      sa[70] = -1.4463123f;
      sa[71] = -0.41927427f;
      sa[72] = -1.3598156f;
      sa[73] = 1.459657f;
      sa[74] = 1.6305991f;
      sa[75] = -0.090600826f;
      sa[76] = 0.914795f;
      sa[77] = 0.4812782f;
      sa[78] = -1.5387999f;
      sa[79] = 1.0275068f;
      sa[80] = -0.84198606f;
      sa[81] = 0.046768848f;
      sa[82] = 0.88407004f;
      sa[83] = -0.5061289f;
      sa[84] = -1.7774712f;
      sa[85] = -1.1856333f;
      sa[86] = 0.42819425f;
      sa[87] = 1.0529877f;
      sa[88] = -1.5358889f;
      sa[89] = -0.66311926f;
      sa[90] = -1.0406593f;
      sa[91] = 1.5794826f;
      sa[92] = -0.29509783f;
      sa[93] = 0.40671694f;
      sa[94] = -1.369225f;
      sa[95] = -0.1521379f;
      sa[96] = -0.94800293f;
      sa[97] = 0.21911527f;
      sa[98] = -0.06395169f;
      sa[99] = 0.3534021f;
      sa[100] = -1.3818527f;
      sa[101] = -0.49576882f;
      sa[102] = 1.1711775f;
      sa[103] = 0.081415646f;
      sa[104] = -0.29672605f;
      sa[105] = -0.68012863f;
      sa[106] = 1.4093685f;
      sa[107] = 1.2723668f;
      sa[108] = 0.88206244f;
      sa[109] = 0.3072307f;
      sa[110] = 0.8516614f;
      sa[111] = -0.7731492f;
      sa[112] = -1.1684284f;
      sa[113] = 0.38980427f;
      sa[114] = 0.064355366f;
      sa[115] = -0.41834313f;
      sa[116] = 1.341458f;
      sa[117] = 0.14508298f;
      sa[118] = -1.7701404f;
      sa[119] = -0.6873103f;
      sa[120] = -0.37156424f;
      sa[121] = 1.1107697f;
      sa[122] = -0.09954465f;
      sa[123] = 0.36682066f;
      sa[124] = -0.78021216f;
      sa[125] = 0.70419085f;
      sa[126] = -1.1820657f;
      sa[127] = 0.28939697f;
      sa[128] = -0.9385276f;
      sa[129] = 0.78160274f;
      sa[130] = -0.30873352f;
      sa[131] = 0.8654775f;
      sa[132] = 0.45568788f;
      sa[133] = 0.6313251f;
      sa[134] = 0.4639347f;
      sa[135] = -1.0911804f;
      sa[136] = 0.5896091f;
      sa[137] = -0.66557974f;
      sa[138] = -0.03793105f;
      sa[139] = 1.1901665f;
      sa[140] = -0.45427367f;
      sa[141] = -0.042134617f;
      sa[142] = 0.44861758f;
      sa[143] = -0.803692f;
      sa[144] = 0.9957092f;
      sa[145] = -0.8002709f;
      sa[146] = -0.052364334f;
      sa[147] = -0.14482307f;
      sa[148] = -1.0306292f;
      sa[149] = 1.0951293f;
      sa[150] = -0.91368306f;
      sa[151] = -1.6509596f;
      sa[152] = 1.6395481f;
      sa[153] = -0.55962473f;
      sa[154] = 1.3977042f;
      sa[155] = -1.4486574f;
      sa[156] = -1.504888f;
      sa[157] = -1.0337325f;
      sa[158] = -0.17918798f;
      sa[159] = -0.6762586f;
      sa[160] = 1.3694468f;
      sa[161] = -1.249746f;
      sa[162] = 1.5798477f;
      sa[163] = -0.713275f;
      sa[164] = 0.89741635f;
      sa[165] = -0.40052596f;
      sa[166] = 1.3312278f;
      sa[167] = -1.3346307f;
      sa[168] = 1.0701928f;
      sa[169] = -1.5446622f;
      sa[170] = 1.1140773f;
      sa[171] = 0.84340787f;
      sa[172] = 1.471439f;
      sa[173] = 1.5752589f;
      sa[174] = -0.10059071f;
      sa[175] = 0.0033511615f;
      sa[176] = -0.8178007f;
      sa[177] = 0.1411173f;
      sa[178] = -1.1082135f;
      sa[179] = -0.12333775f;
      sa[180] = -1.3957815f;
      sa[181] = -1.0202f;
      sa[182] = 0.2888232f;
      sa[183] = -1.0424933f;
      sa[184] = 1.5478877f;
      sa[185] = 1.2200949f;
      sa[186] = -0.38241914f;
      sa[187] = -1.0188557f;
      sa[188] = -0.6329919f;
      sa[189] = -0.72022015f;
      sa[190] = -1.3502271f;
      sa[191] = -1.1662302f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


