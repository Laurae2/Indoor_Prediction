/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:55.414+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_05 > h2o_nn_32x6_ReLU_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_05", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_05_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_05_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_05_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(2229341958721724448L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_05_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_05_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_05_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_05_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_05_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_05_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_05_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_05_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_05_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.46718972214763554;
      sa[1] = 0.45290366244101155;
      sa[2] = 0.4920608915314428;
      sa[3] = 0.5230140113655594;
      sa[4] = 0.6140984682143992;
      sa[5] = 0.6150709768870971;
      sa[6] = 0.6697385324059746;
      sa[7] = 0.3590541320048751;
      sa[8] = 0.4940392047352362;
      sa[9] = 0.43654274515023533;
      sa[10] = 0.4256577450485009;
      sa[11] = 0.49145080930632423;
      sa[12] = 0.5419115921930685;
      sa[13] = 0.5605837300523387;
      sa[14] = 0.45432243528049276;
      sa[15] = 0.5547331912663246;
      sa[16] = 0.5667668918800689;
      sa[17] = 0.512688001708716;
      sa[18] = 0.4590838349284931;
      sa[19] = 0.533697151146442;
      sa[20] = 0.5001534237199913;
      sa[21] = 0.5576118152275236;
      sa[22] = 0.5720728114414966;
      sa[23] = 0.5312410766762918;
      sa[24] = 0.509648975198998;
      sa[25] = 0.43116557322446986;
      sa[26] = 0.5458636594385067;
      sa[27] = 0.46230224899726724;
      sa[28] = 0.5203353322959755;
      sa[29] = 0.41760026419093216;
      sa[30] = 0.577962499853907;
      sa[31] = 0.392663917247745;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_05_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_05_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.009183310612953657;
      sa[1] = -1.2108544477897359E-4;
      sa[2] = -0.016002455642728185;
      sa[3] = -0.06327513243989173;
      sa[4] = 0.02373923465938076;
    }
  }
}
class h2o_nn_32x6_ReLU_05_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_05_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_05_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.108246274f;
      sa[1] = 0.24986485f;
      sa[2] = 0.12128516f;
      sa[3] = 0.201208f;
      sa[4] = -0.20724799f;
      sa[5] = -0.16109987f;
      sa[6] = -0.064032786f;
      sa[7] = 0.15996617f;
      sa[8] = 0.24180731f;
      sa[9] = -0.20041932f;
      sa[10] = -0.12814455f;
      sa[11] = -0.15997387f;
      sa[12] = 0.05603724f;
      sa[13] = -0.23738194f;
      sa[14] = -0.1856991f;
      sa[15] = -0.07952692f;
      sa[16] = 0.09327032f;
      sa[17] = 0.10793759f;
      sa[18] = -0.23841065f;
      sa[19] = 0.27859703f;
      sa[20] = 0.17739147f;
      sa[21] = -0.36384428f;
      sa[22] = 0.175012f;
      sa[23] = -0.2626753f;
      sa[24] = 0.18331045f;
      sa[25] = 0.14212602f;
      sa[26] = -0.25649855f;
      sa[27] = 0.23569918f;
      sa[28] = 0.20306852f;
      sa[29] = -0.3077879f;
      sa[30] = -0.16334876f;
      sa[31] = 0.07622687f;
      sa[32] = 0.19189447f;
      sa[33] = -0.29138714f;
      sa[34] = 0.067817f;
      sa[35] = -0.112605885f;
      sa[36] = 0.11167389f;
      sa[37] = 0.24601011f;
      sa[38] = -0.17339748f;
      sa[39] = 0.037831206f;
      sa[40] = -0.013663259f;
      sa[41] = -0.117397614f;
      sa[42] = -0.21011226f;
      sa[43] = -0.006814511f;
      sa[44] = 0.23236808f;
      sa[45] = -0.26037678f;
      sa[46] = 0.06108364f;
      sa[47] = -0.038482472f;
      sa[48] = 0.17479311f;
      sa[49] = 0.20333429f;
      sa[50] = 0.123335555f;
      sa[51] = -0.32174948f;
      sa[52] = -0.102520816f;
      sa[53] = 0.17348272f;
      sa[54] = 0.1854158f;
      sa[55] = 0.07115133f;
      sa[56] = -0.19667627f;
      sa[57] = -0.3110506f;
      sa[58] = 0.20782496f;
      sa[59] = -0.19800971f;
      sa[60] = -0.28308052f;
      sa[61] = 0.17943689f;
      sa[62] = 0.13997021f;
      sa[63] = 0.11107608f;
      sa[64] = 0.11329184f;
      sa[65] = 0.10160979f;
      sa[66] = 3.4988893E-4f;
      sa[67] = 0.14485149f;
      sa[68] = -0.16440128f;
      sa[69] = 0.107064806f;
      sa[70] = -0.05879622f;
      sa[71] = 0.34895772f;
      sa[72] = -0.08727741f;
      sa[73] = 0.24968007f;
      sa[74] = -0.14641611f;
      sa[75] = 0.116660886f;
      sa[76] = -0.18669172f;
      sa[77] = -0.040617526f;
      sa[78] = -0.012976192f;
      sa[79] = 0.15944235f;
      sa[80] = -0.11892407f;
      sa[81] = -0.1479675f;
      sa[82] = -0.043171473f;
      sa[83] = 0.121712536f;
      sa[84] = 0.04174075f;
      sa[85] = -0.109760165f;
      sa[86] = 0.22164465f;
      sa[87] = 0.31567332f;
      sa[88] = 0.32995644f;
      sa[89] = 0.0437433f;
      sa[90] = -0.14577343f;
      sa[91] = 0.20530704f;
      sa[92] = 0.15136205f;
      sa[93] = -0.18043654f;
      sa[94] = -0.105351746f;
      sa[95] = -0.20984167f;
      sa[96] = 0.10472276f;
      sa[97] = 0.09264311f;
      sa[98] = 0.14769645f;
      sa[99] = -0.14541215f;
      sa[100] = -0.035053924f;
      sa[101] = -0.19852939f;
      sa[102] = -0.23698254f;
      sa[103] = -0.11438555f;
      sa[104] = -0.081136055f;
      sa[105] = -0.22979495f;
      sa[106] = -0.12543355f;
      sa[107] = 0.21689793f;
      sa[108] = 0.12330889f;
      sa[109] = -0.077186674f;
      sa[110] = -0.0037789443f;
      sa[111] = 0.11475111f;
      sa[112] = 0.18161239f;
      sa[113] = 0.10189529f;
      sa[114] = -0.07005348f;
      sa[115] = 0.0706081f;
      sa[116] = -0.25330544f;
      sa[117] = 0.049520757f;
      sa[118] = -0.2791173f;
      sa[119] = -0.23325762f;
      sa[120] = 0.29109693f;
      sa[121] = 0.29069737f;
      sa[122] = 0.38010067f;
      sa[123] = 0.3899349f;
      sa[124] = 0.44050774f;
      sa[125] = 0.33261046f;
      sa[126] = -0.31687176f;
      sa[127] = -0.15486172f;
      sa[128] = 0.16276924f;
      sa[129] = 0.23655073f;
      sa[130] = -0.02831838f;
      sa[131] = 0.39745477f;
      sa[132] = 0.32455066f;
      sa[133] = -0.25988063f;
      sa[134] = 0.0031039305f;
      sa[135] = -0.19568592f;
      sa[136] = -0.1846146f;
      sa[137] = 0.043168336f;
      sa[138] = 0.1743671f;
      sa[139] = 0.014969367f;
      sa[140] = -0.14541039f;
      sa[141] = -0.31927985f;
      sa[142] = 0.28364274f;
      sa[143] = -0.18745871f;
      sa[144] = 0.26513574f;
      sa[145] = -0.09593354f;
      sa[146] = -0.17365853f;
      sa[147] = 0.14256977f;
      sa[148] = 0.2020599f;
      sa[149] = 0.22846152f;
      sa[150] = 0.2950994f;
      sa[151] = -0.17018321f;
      sa[152] = 0.044219833f;
      sa[153] = 0.28780213f;
      sa[154] = 0.28816792f;
      sa[155] = -0.23643695f;
      sa[156] = 0.16523506f;
      sa[157] = -0.12742387f;
      sa[158] = 0.09913885f;
      sa[159] = 0.16132545f;
      sa[160] = 0.15108573f;
      sa[161] = 0.29036817f;
      sa[162] = -0.20550056f;
      sa[163] = 0.10555577f;
      sa[164] = 0.29073402f;
      sa[165] = 0.025567198f;
      sa[166] = -0.053139716f;
      sa[167] = -0.00928047f;
      sa[168] = 0.2508877f;
      sa[169] = 0.2904191f;
      sa[170] = 0.04172312f;
      sa[171] = -0.0105741415f;
      sa[172] = 0.03479644f;
      sa[173] = -0.012768485f;
      sa[174] = 0.075466745f;
      sa[175] = -0.06311797f;
      sa[176] = 0.012981811f;
      sa[177] = -0.02076275f;
      sa[178] = -0.098050795f;
      sa[179] = 0.025157398f;
      sa[180] = -0.12098104f;
      sa[181] = -0.2880661f;
      sa[182] = -0.06551882f;
      sa[183] = -0.03506694f;
      sa[184] = 0.33026576f;
      sa[185] = 0.17668828f;
      sa[186] = -0.30069417f;
      sa[187] = 0.14757739f;
      sa[188] = -0.17060159f;
      sa[189] = 0.3028904f;
      sa[190] = 0.08542855f;
      sa[191] = -0.14582123f;
      sa[192] = -0.115078375f;
      sa[193] = 0.21380657f;
      sa[194] = 0.043403495f;
      sa[195] = 0.2887771f;
      sa[196] = 0.22110921f;
      sa[197] = 0.10583419f;
      sa[198] = 0.17397447f;
      sa[199] = -0.06676979f;
      sa[200] = 0.055567108f;
      sa[201] = -0.20494385f;
      sa[202] = 0.12520152f;
      sa[203] = 0.080918424f;
      sa[204] = -0.073430546f;
      sa[205] = 0.1826522f;
      sa[206] = 0.29524562f;
      sa[207] = 0.24862829f;
      sa[208] = -0.19595739f;
      sa[209] = 0.010948842f;
      sa[210] = -0.22011138f;
      sa[211] = -0.12842265f;
      sa[212] = 0.3438446f;
      sa[213] = -0.13407727f;
      sa[214] = -0.23446667f;
      sa[215] = -0.031460196f;
      sa[216] = 0.0988636f;
      sa[217] = 0.037622217f;
      sa[218] = -0.2888947f;
      sa[219] = 0.053480174f;
      sa[220] = -0.19500239f;
      sa[221] = 0.028245136f;
      sa[222] = 0.19900435f;
      sa[223] = 0.02972368f;
      sa[224] = 0.08718868f;
      sa[225] = 0.24367091f;
      sa[226] = -0.20165469f;
      sa[227] = 0.2542242f;
      sa[228] = 0.10664704f;
      sa[229] = 0.067719296f;
      sa[230] = 0.22388655f;
      sa[231] = -0.28998375f;
      sa[232] = -0.43228477f;
      sa[233] = -0.033866335f;
      sa[234] = 0.28697914f;
      sa[235] = -0.39459f;
      sa[236] = -0.04344459f;
      sa[237] = -0.2097383f;
      sa[238] = -0.2178409f;
      sa[239] = 0.113969155f;
      sa[240] = -0.03528013f;
      sa[241] = -0.22063316f;
      sa[242] = 0.026554916f;
      sa[243] = -0.14821796f;
      sa[244] = -0.20025788f;
      sa[245] = -0.10976209f;
      sa[246] = -0.2578273f;
      sa[247] = -0.050937917f;
      sa[248] = 0.28278646f;
      sa[249] = 0.26555654f;
      sa[250] = -0.21696459f;
      sa[251] = -0.11942594f;
      sa[252] = -0.22915795f;
      sa[253] = -0.28080222f;
      sa[254] = -0.27439842f;
      sa[255] = 0.26208767f;
      sa[256] = -0.21045007f;
      sa[257] = 0.23089439f;
      sa[258] = -0.21343465f;
      sa[259] = -0.18027517f;
      sa[260] = -0.15539715f;
      sa[261] = -0.14684044f;
      sa[262] = -0.17716624f;
      sa[263] = 0.31771863f;
      sa[264] = -0.19314337f;
      sa[265] = 0.0032724338f;
      sa[266] = -0.24658085f;
      sa[267] = -0.2816481f;
      sa[268] = 0.073078945f;
      sa[269] = -0.25383943f;
      sa[270] = 0.03772422f;
      sa[271] = 0.11833053f;
      sa[272] = -0.15758783f;
      sa[273] = -0.18184592f;
      sa[274] = 0.10157797f;
      sa[275] = -0.06447583f;
      sa[276] = -9.164029E-4f;
      sa[277] = -0.1985169f;
      sa[278] = -0.13899785f;
      sa[279] = 0.16318728f;
      sa[280] = -0.28049985f;
      sa[281] = 0.13785613f;
      sa[282] = -0.19361043f;
      sa[283] = -0.18429993f;
      sa[284] = -0.002487859f;
      sa[285] = -0.18198667f;
      sa[286] = 0.29191068f;
      sa[287] = 0.16922429f;
      sa[288] = -0.25941452f;
      sa[289] = -0.15452163f;
      sa[290] = -0.059921436f;
      sa[291] = -0.101113096f;
      sa[292] = 0.14034599f;
      sa[293] = -0.10021354f;
      sa[294] = 0.031192435f;
      sa[295] = 0.15650748f;
      sa[296] = 0.11124372f;
      sa[297] = 0.23658125f;
      sa[298] = -0.0014014915f;
      sa[299] = -0.12987094f;
      sa[300] = 0.008890311f;
      sa[301] = -0.063977204f;
      sa[302] = 0.12052149f;
      sa[303] = 0.06792035f;
      sa[304] = -0.16897602f;
      sa[305] = 0.030576682f;
      sa[306] = 0.20646015f;
      sa[307] = -0.10318171f;
      sa[308] = 0.11491273f;
      sa[309] = 0.1890232f;
      sa[310] = 0.27186826f;
      sa[311] = 0.36817795f;
      sa[312] = -0.11876953f;
      sa[313] = -0.17092179f;
      sa[314] = -0.1245384f;
      sa[315] = 0.12857868f;
      sa[316] = 0.033449918f;
      sa[317] = -0.011237848f;
      sa[318] = 0.12906608f;
      sa[319] = 0.36896884f;
      sa[320] = -0.12928674f;
      sa[321] = 0.0791725f;
      sa[322] = 0.29286483f;
      sa[323] = -0.07910955f;
      sa[324] = 0.052023686f;
      sa[325] = 0.26204038f;
      sa[326] = -0.3576307f;
      sa[327] = 0.04102686f;
      sa[328] = -0.119171105f;
      sa[329] = 0.2158748f;
      sa[330] = -0.24526355f;
      sa[331] = -0.09069724f;
      sa[332] = -0.16312593f;
      sa[333] = 0.08901507f;
      sa[334] = -0.012967656f;
      sa[335] = 0.27486658f;
      sa[336] = -0.2137877f;
      sa[337] = -0.17989887f;
      sa[338] = 0.18602073f;
      sa[339] = -0.30020636f;
      sa[340] = -0.34391454f;
      sa[341] = -0.27061263f;
      sa[342] = 0.11058302f;
      sa[343] = -0.046009958f;
      sa[344] = -0.23617898f;
      sa[345] = 0.10816031f;
      sa[346] = 0.11346632f;
      sa[347] = -0.2607887f;
      sa[348] = 0.19388649f;
      sa[349] = -0.23097779f;
      sa[350] = -0.2247593f;
      sa[351] = 0.11227387f;
      sa[352] = 0.1440246f;
      sa[353] = -0.076615885f;
      sa[354] = 0.06722426f;
      sa[355] = 0.053803544f;
      sa[356] = -0.12537925f;
      sa[357] = 0.27520752f;
      sa[358] = -0.30747068f;
      sa[359] = 0.0119333f;
      sa[360] = 0.14366692f;
      sa[361] = -0.032876294f;
      sa[362] = -0.25479004f;
      sa[363] = 0.12042067f;
      sa[364] = -0.15603915f;
      sa[365] = -0.2266665f;
      sa[366] = -0.038127694f;
      sa[367] = -0.32195342f;
      sa[368] = -0.09435131f;
      sa[369] = 0.16014662f;
      sa[370] = -0.18500103f;
      sa[371] = 0.10335095f;
      sa[372] = -0.034583967f;
      sa[373] = 0.26426458f;
      sa[374] = -0.15716489f;
      sa[375] = -0.31349674f;
      sa[376] = -0.3044432f;
      sa[377] = -0.2863665f;
      sa[378] = 0.26830575f;
      sa[379] = 0.10537856f;
      sa[380] = -0.13799968f;
      sa[381] = -0.12730439f;
      sa[382] = -0.063715674f;
      sa[383] = -0.14842866f;
      sa[384] = -0.21705256f;
      sa[385] = 0.11462773f;
      sa[386] = -0.23559657f;
      sa[387] = -0.1460146f;
      sa[388] = 0.05951179f;
      sa[389] = -0.031670805f;
      sa[390] = -0.017889762f;
      sa[391] = -0.120885275f;
      sa[392] = 0.082622f;
      sa[393] = 0.05520035f;
      sa[394] = 0.10118014f;
      sa[395] = 0.35775644f;
      sa[396] = 0.27915084f;
      sa[397] = -0.2922302f;
      sa[398] = 0.037758764f;
      sa[399] = -0.08334398f;
      sa[400] = 0.15589046f;
      sa[401] = 0.22198074f;
      sa[402] = -0.1783377f;
      sa[403] = 0.046194512f;
      sa[404] = 0.21666951f;
      sa[405] = -0.27999875f;
      sa[406] = -0.05472718f;
      sa[407] = 0.09178132f;
      sa[408] = -0.22424525f;
      sa[409] = -0.2481868f;
      sa[410] = -0.16016439f;
      sa[411] = 0.12615952f;
      sa[412] = -0.19125399f;
      sa[413] = 0.026063977f;
      sa[414] = 0.1542565f;
      sa[415] = 0.31146103f;
      sa[416] = -0.18819815f;
      sa[417] = 0.011426184f;
      sa[418] = -0.036070153f;
      sa[419] = 0.25301567f;
      sa[420] = 0.21422836f;
      sa[421] = 0.21970882f;
      sa[422] = 0.28061908f;
      sa[423] = 0.033181235f;
      sa[424] = 0.111368455f;
      sa[425] = -0.04845058f;
      sa[426] = -0.25617486f;
      sa[427] = 0.22086424f;
      sa[428] = -0.12563337f;
      sa[429] = -0.23450366f;
      sa[430] = 0.20664741f;
      sa[431] = -0.0040194f;
      sa[432] = 0.023665238f;
      sa[433] = 0.090984955f;
      sa[434] = 0.121932544f;
      sa[435] = 0.10112711f;
      sa[436] = -0.26963395f;
      sa[437] = -0.22767083f;
      sa[438] = 0.01949039f;
      sa[439] = -0.055193804f;
      sa[440] = 0.44043115f;
      sa[441] = -0.41376546f;
      sa[442] = 0.03833111f;
      sa[443] = 0.07929064f;
      sa[444] = -0.20622423f;
      sa[445] = 0.08269511f;
      sa[446] = 0.24302159f;
      sa[447] = 0.028299259f;
      sa[448] = 0.10925049f;
      sa[449] = 0.048668526f;
      sa[450] = -0.07560884f;
      sa[451] = 0.06521862f;
      sa[452] = 0.1491468f;
      sa[453] = -0.080594376f;
      sa[454] = -0.15133649f;
      sa[455] = -0.10642946f;
      sa[456] = -0.15434566f;
      sa[457] = 0.074338175f;
      sa[458] = -0.19986314f;
      sa[459] = 0.18476741f;
      sa[460] = 0.18804698f;
      sa[461] = 0.23537771f;
      sa[462] = 0.04401183f;
      sa[463] = 0.15827562f;
      sa[464] = -0.39565608f;
      sa[465] = 0.09955188f;
      sa[466] = 0.0949247f;
      sa[467] = 0.152017f;
      sa[468] = 0.108450405f;
      sa[469] = 0.28692234f;
      sa[470] = 0.11242984f;
      sa[471] = -0.010632354f;
      sa[472] = 0.008923201f;
      sa[473] = -0.076742925f;
      sa[474] = -0.02525563f;
      sa[475] = 0.086630136f;
      sa[476] = 0.2601395f;
      sa[477] = -0.24071309f;
      sa[478] = 0.1039134f;
      sa[479] = -0.17778662f;
      sa[480] = -0.275634f;
      sa[481] = -0.16760251f;
      sa[482] = -0.25263584f;
      sa[483] = 0.18956804f;
      sa[484] = 0.2160176f;
      sa[485] = 0.0779361f;
      sa[486] = -0.022907577f;
      sa[487] = -0.14626087f;
      sa[488] = -0.18261267f;
      sa[489] = 0.07385315f;
      sa[490] = -0.013528422f;
      sa[491] = -0.23640032f;
      sa[492] = 0.19312412f;
      sa[493] = 0.20157482f;
      sa[494] = -0.18151708f;
      sa[495] = 0.16086663f;
      sa[496] = 0.02275938f;
      sa[497] = 0.08202825f;
      sa[498] = 0.1974372f;
      sa[499] = 0.17781143f;
      sa[500] = -0.17073293f;
      sa[501] = -0.022668451f;
      sa[502] = 0.2801368f;
      sa[503] = 0.058755804f;
      sa[504] = -0.23827082f;
      sa[505] = -0.21372718f;
      sa[506] = 0.23034029f;
      sa[507] = -0.095207684f;
      sa[508] = 0.116579175f;
      sa[509] = 0.190738f;
      sa[510] = 0.20736225f;
      sa[511] = 0.06719925f;
      sa[512] = -0.053899277f;
      sa[513] = -0.039080486f;
      sa[514] = 0.17649709f;
      sa[515] = -0.2700379f;
      sa[516] = 0.042564973f;
      sa[517] = 0.07043167f;
      sa[518] = 0.17970219f;
      sa[519] = -0.020245917f;
      sa[520] = 0.23937525f;
      sa[521] = 0.15848215f;
      sa[522] = 0.1277751f;
      sa[523] = 0.14914013f;
      sa[524] = 0.22088096f;
      sa[525] = 0.212113f;
      sa[526] = 0.056609746f;
      sa[527] = -0.017947065f;
      sa[528] = 0.020533148f;
      sa[529] = 0.10068899f;
      sa[530] = -0.19012731f;
      sa[531] = 0.087993346f;
      sa[532] = 0.12118077f;
      sa[533] = 0.10677384f;
      sa[534] = 0.07992348f;
      sa[535] = -0.07134402f;
      sa[536] = 0.07005936f;
      sa[537] = -0.22136107f;
      sa[538] = 0.23611018f;
      sa[539] = 0.31572467f;
      sa[540] = -0.20899117f;
      sa[541] = -0.13280204f;
      sa[542] = -0.039474275f;
      sa[543] = -0.14861484f;
      sa[544] = 0.16175972f;
      sa[545] = 0.1252879f;
      sa[546] = 0.1314532f;
      sa[547] = 0.17920981f;
      sa[548] = 0.12354252f;
      sa[549] = 0.16877213f;
      sa[550] = -0.00981425f;
      sa[551] = -0.047012113f;
      sa[552] = 0.051172134f;
      sa[553] = -0.036717694f;
      sa[554] = -0.095687166f;
      sa[555] = -0.13794437f;
      sa[556] = -0.1641073f;
      sa[557] = -0.18621281f;
      sa[558] = -0.19877425f;
      sa[559] = 0.08152428f;
      sa[560] = -0.28498918f;
      sa[561] = -0.08647682f;
      sa[562] = 0.20906322f;
      sa[563] = -0.10704613f;
      sa[564] = 0.21252683f;
      sa[565] = 0.05463646f;
      sa[566] = 0.227253f;
      sa[567] = -0.08263846f;
      sa[568] = -0.09282967f;
      sa[569] = -0.004084324f;
      sa[570] = -0.04108049f;
      sa[571] = -0.11328641f;
      sa[572] = -0.016473556f;
      sa[573] = 0.1891285f;
      sa[574] = 0.12227705f;
      sa[575] = -0.3200417f;
      sa[576] = -0.07462614f;
      sa[577] = 0.027799705f;
      sa[578] = 0.08838711f;
      sa[579] = -0.133691f;
      sa[580] = 0.10186191f;
      sa[581] = -0.10955558f;
      sa[582] = 0.057925034f;
      sa[583] = 0.0068110595f;
      sa[584] = 0.12025392f;
      sa[585] = 0.20363073f;
      sa[586] = -0.1560516f;
      sa[587] = -0.15381296f;
      sa[588] = 0.05663543f;
      sa[589] = 0.13253024f;
      sa[590] = -0.059204236f;
      sa[591] = -0.019230293f;
      sa[592] = -0.32579297f;
      sa[593] = -0.14257562f;
      sa[594] = -0.08820832f;
      sa[595] = 0.07067243f;
      sa[596] = 0.23953171f;
      sa[597] = -0.03073609f;
      sa[598] = 0.16504443f;
      sa[599] = 5.1774527E-4f;
      sa[600] = -0.2516228f;
      sa[601] = 0.19615717f;
      sa[602] = -0.034392502f;
      sa[603] = 0.3360092f;
      sa[604] = 0.28146762f;
      sa[605] = 0.24596399f;
      sa[606] = 0.26716372f;
      sa[607] = 0.1401278f;
      sa[608] = 0.008920695f;
      sa[609] = 0.15276992f;
      sa[610] = 0.0451662f;
      sa[611] = -0.1233062f;
      sa[612] = 8.95634E-4f;
      sa[613] = 0.05539187f;
      sa[614] = -0.047607422f;
      sa[615] = 0.025446927f;
      sa[616] = 0.015696766f;
      sa[617] = -0.29719862f;
      sa[618] = -0.17876016f;
      sa[619] = -0.21349901f;
      sa[620] = 0.10087083f;
      sa[621] = -0.33151466f;
      sa[622] = -0.28105897f;
      sa[623] = -0.27355328f;
      sa[624] = -0.058388468f;
      sa[625] = 0.23489137f;
      sa[626] = -0.022092445f;
      sa[627] = 0.205358f;
      sa[628] = -0.3303761f;
      sa[629] = -0.15333636f;
      sa[630] = -0.13766506f;
      sa[631] = 0.19780919f;
      sa[632] = 0.07780305f;
      sa[633] = -0.18370362f;
      sa[634] = -0.21860333f;
      sa[635] = 0.10591911f;
      sa[636] = -0.26644585f;
      sa[637] = -0.016688192f;
      sa[638] = -0.08859486f;
      sa[639] = -0.09346505f;
      sa[640] = -0.1525098f;
      sa[641] = -0.30655316f;
      sa[642] = 0.17099816f;
      sa[643] = -0.34021512f;
      sa[644] = -0.18382187f;
      sa[645] = -0.34341845f;
      sa[646] = 0.3872089f;
      sa[647] = -0.18641755f;
      sa[648] = 0.0031438554f;
      sa[649] = 0.04439408f;
      sa[650] = 0.14611216f;
      sa[651] = 0.015940994f;
      sa[652] = 0.09247468f;
      sa[653] = -0.12247497f;
      sa[654] = -0.081839755f;
      sa[655] = -0.110218905f;
      sa[656] = 0.14370963f;
      sa[657] = 0.105040416f;
      sa[658] = -0.26443145f;
      sa[659] = -0.1599363f;
      sa[660] = -0.2001178f;
      sa[661] = -0.07026428f;
      sa[662] = -0.19926396f;
      sa[663] = 0.22554725f;
      sa[664] = -0.041414052f;
      sa[665] = 0.27658343f;
      sa[666] = -0.086269535f;
      sa[667] = -0.18872736f;
      sa[668] = 0.29011178f;
      sa[669] = -0.09592342f;
      sa[670] = 0.18698171f;
      sa[671] = 0.06473199f;
      sa[672] = -0.2827845f;
      sa[673] = 0.21731655f;
      sa[674] = 0.16093457f;
      sa[675] = -0.38519415f;
      sa[676] = -0.09224811f;
      sa[677] = -0.22161329f;
      sa[678] = 0.1832676f;
      sa[679] = -0.111513644f;
      sa[680] = -0.0010429857f;
      sa[681] = 0.020249514f;
      sa[682] = 0.12508413f;
      sa[683] = -0.028027821f;
      sa[684] = -0.08066043f;
      sa[685] = -0.0076876995f;
      sa[686] = -0.119655944f;
      sa[687] = -0.26675949f;
      sa[688] = -0.24511546f;
      sa[689] = -0.24430087f;
      sa[690] = -0.020357603f;
      sa[691] = 0.16627456f;
      sa[692] = -0.2474889f;
      sa[693] = -0.12623441f;
      sa[694] = 0.2212928f;
      sa[695] = -0.10776466f;
      sa[696] = -0.07071572f;
      sa[697] = -0.14605638f;
      sa[698] = -0.15972556f;
      sa[699] = 0.34576023f;
      sa[700] = 0.12574524f;
      sa[701] = 0.15449934f;
      sa[702] = 0.2488414f;
      sa[703] = -0.09546736f;
      sa[704] = -0.22423773f;
      sa[705] = 0.017472938f;
      sa[706] = -0.10276912f;
      sa[707] = 0.1289276f;
      sa[708] = 0.08109362f;
      sa[709] = -0.31149152f;
      sa[710] = 0.2841745f;
      sa[711] = -0.020550445f;
      sa[712] = 0.05749831f;
      sa[713] = 0.17970179f;
      sa[714] = 0.18760395f;
      sa[715] = 0.17313056f;
      sa[716] = 0.062627815f;
      sa[717] = 0.1925792f;
      sa[718] = -0.066730306f;
      sa[719] = 0.08387437f;
      sa[720] = -0.1756632f;
      sa[721] = 0.11764079f;
      sa[722] = -0.24303804f;
      sa[723] = 0.07189383f;
      sa[724] = 0.04137626f;
      sa[725] = -0.3147616f;
      sa[726] = -0.18475258f;
      sa[727] = -0.33508933f;
      sa[728] = -0.07405833f;
      sa[729] = -0.044882547f;
      sa[730] = -0.001639326f;
      sa[731] = -0.21143359f;
      sa[732] = 0.12145502f;
      sa[733] = 0.1635399f;
      sa[734] = -0.13949119f;
      sa[735] = 0.20750557f;
      sa[736] = -0.18325995f;
      sa[737] = 0.089244805f;
      sa[738] = -0.049296863f;
      sa[739] = -0.445986f;
      sa[740] = -0.32107833f;
      sa[741] = -0.3160117f;
      sa[742] = 0.082730636f;
      sa[743] = -0.024749137f;
      sa[744] = -0.02693581f;
      sa[745] = -0.23584351f;
      sa[746] = 0.09176573f;
      sa[747] = -0.18122408f;
      sa[748] = -0.20835221f;
      sa[749] = -0.25052541f;
      sa[750] = 0.12248645f;
      sa[751] = 0.15394728f;
      sa[752] = 0.022530677f;
      sa[753] = 0.22288382f;
      sa[754] = -0.041749556f;
      sa[755] = 0.13819757f;
      sa[756] = -0.27363232f;
      sa[757] = 0.22525835f;
      sa[758] = -0.047001336f;
      sa[759] = -0.19155136f;
      sa[760] = -0.047024917f;
      sa[761] = 0.048143677f;
      sa[762] = -0.06970033f;
      sa[763] = 0.20685524f;
      sa[764] = -0.032428455f;
      sa[765] = 0.03812733f;
      sa[766] = -0.24907161f;
      sa[767] = 0.0537224f;
      sa[768] = -0.14754485f;
      sa[769] = -0.270447f;
      sa[770] = 0.01114019f;
      sa[771] = 0.059652712f;
      sa[772] = 0.047503136f;
      sa[773] = -0.14886886f;
      sa[774] = 0.04993453f;
      sa[775] = 0.24515758f;
      sa[776] = -0.017674416f;
      sa[777] = 0.11647633f;
      sa[778] = 0.20199014f;
      sa[779] = -0.074512295f;
      sa[780] = 0.10095042f;
      sa[781] = -0.08906795f;
      sa[782] = 0.17266658f;
      sa[783] = -0.12711796f;
      sa[784] = -0.11339838f;
      sa[785] = -0.07102834f;
      sa[786] = -0.071097516f;
      sa[787] = -0.17880958f;
      sa[788] = -0.13464597f;
      sa[789] = 0.21708381f;
      sa[790] = -0.18539235f;
      sa[791] = -0.11621217f;
      sa[792] = 0.25034025f;
      sa[793] = -0.07175736f;
      sa[794] = -0.121081725f;
      sa[795] = 0.14653628f;
      sa[796] = 0.27615148f;
      sa[797] = -0.13361122f;
      sa[798] = -0.16711763f;
      sa[799] = -0.12299243f;
      sa[800] = 0.26016757f;
      sa[801] = 0.04020734f;
      sa[802] = 0.24056481f;
      sa[803] = 0.0778779f;
      sa[804] = 0.27669933f;
      sa[805] = 0.34555122f;
      sa[806] = 0.37767175f;
      sa[807] = 0.2863572f;
      sa[808] = 0.08735673f;
      sa[809] = -0.19225638f;
      sa[810] = 0.052984893f;
      sa[811] = 0.22688743f;
      sa[812] = 0.21925119f;
      sa[813] = -0.23086122f;
      sa[814] = 0.14605777f;
      sa[815] = -0.123185486f;
      sa[816] = -0.113820106f;
      sa[817] = -0.11998683f;
      sa[818] = -0.052847475f;
      sa[819] = -0.15241975f;
      sa[820] = -0.25700584f;
      sa[821] = -0.18160307f;
      sa[822] = -0.2502131f;
      sa[823] = 0.062391922f;
      sa[824] = 0.13145548f;
      sa[825] = 0.26919112f;
      sa[826] = -0.26885197f;
      sa[827] = -0.29536432f;
      sa[828] = 0.16946661f;
      sa[829] = -0.06286079f;
      sa[830] = 0.18760595f;
      sa[831] = 0.24649939f;
      sa[832] = 0.14301832f;
      sa[833] = 0.08272793f;
      sa[834] = 0.2489813f;
      sa[835] = -0.096305534f;
      sa[836] = 0.30385044f;
      sa[837] = -0.158433f;
      sa[838] = 0.13831258f;
      sa[839] = -0.19215149f;
      sa[840] = 0.19085798f;
      sa[841] = 0.11513255f;
      sa[842] = 0.21252456f;
      sa[843] = 0.028976105f;
      sa[844] = 0.044124044f;
      sa[845] = 0.1534495f;
      sa[846] = -0.2558653f;
      sa[847] = -0.08383854f;
      sa[848] = 0.19915825f;
      sa[849] = 0.23099934f;
      sa[850] = 0.013297226f;
      sa[851] = 0.069667965f;
      sa[852] = 0.21207355f;
      sa[853] = 0.17534702f;
      sa[854] = 0.20069523f;
      sa[855] = 0.080810145f;
      sa[856] = 0.061448593f;
      sa[857] = -0.18860635f;
      sa[858] = 0.10706866f;
      sa[859] = 0.017128766f;
      sa[860] = 0.35589272f;
      sa[861] = -0.18342899f;
      sa[862] = -0.18058173f;
      sa[863] = -0.01615438f;
      sa[864] = -0.24786101f;
      sa[865] = 0.22488827f;
      sa[866] = -0.13283397f;
      sa[867] = -0.07759175f;
      sa[868] = -0.15483393f;
      sa[869] = 0.20634453f;
      sa[870] = -0.07028479f;
      sa[871] = 0.19661081f;
      sa[872] = 0.1264799f;
      sa[873] = -0.0139088705f;
      sa[874] = 0.019327525f;
      sa[875] = -0.28628677f;
      sa[876] = -0.19959474f;
      sa[877] = -0.1956527f;
      sa[878] = 0.0077058473f;
      sa[879] = 0.24130237f;
      sa[880] = -0.074217565f;
      sa[881] = -0.01781545f;
      sa[882] = 0.1667789f;
      sa[883] = 0.2551009f;
      sa[884] = -0.083863676f;
      sa[885] = -0.07876561f;
      sa[886] = 0.09793633f;
      sa[887] = 0.017756265f;
      sa[888] = -0.036439106f;
      sa[889] = 0.018752504f;
      sa[890] = -0.26363662f;
      sa[891] = 0.43601933f;
      sa[892] = 0.23531848f;
      sa[893] = 0.3344523f;
      sa[894] = 0.092041686f;
      sa[895] = 0.31930408f;
      sa[896] = -0.21012893f;
      sa[897] = 0.2191234f;
      sa[898] = -0.015420435f;
      sa[899] = 0.22154635f;
      sa[900] = -0.08626645f;
      sa[901] = 0.07844741f;
      sa[902] = -0.37801343f;
      sa[903] = -0.10762646f;
      sa[904] = 0.101686835f;
      sa[905] = 0.11874019f;
      sa[906] = -0.30992013f;
      sa[907] = -0.32465023f;
      sa[908] = -0.19595358f;
      sa[909] = -0.0038570876f;
      sa[910] = 0.016781818f;
      sa[911] = -0.09139076f;
      sa[912] = -0.08325415f;
      sa[913] = -0.0108016115f;
      sa[914] = -0.2470877f;
      sa[915] = -0.033415377f;
      sa[916] = 0.06912373f;
      sa[917] = -0.09737861f;
      sa[918] = 0.20547937f;
      sa[919] = -0.074315235f;
      sa[920] = 0.0688822f;
      sa[921] = -0.15043034f;
      sa[922] = -0.18743867f;
      sa[923] = -0.20615557f;
      sa[924] = -0.20883225f;
      sa[925] = -0.18993182f;
      sa[926] = 0.12839706f;
      sa[927] = -0.06868713f;
      sa[928] = 0.1623726f;
      sa[929] = 0.057657525f;
      sa[930] = 0.08568625f;
      sa[931] = -0.08526027f;
      sa[932] = 0.1524285f;
      sa[933] = 7.0496E-4f;
      sa[934] = 0.242205f;
      sa[935] = -0.168717f;
      sa[936] = -0.013683839f;
      sa[937] = 0.20989762f;
      sa[938] = -0.02951267f;
      sa[939] = -0.09315217f;
      sa[940] = -0.012396649f;
      sa[941] = -0.2808161f;
      sa[942] = -0.23899303f;
      sa[943] = -0.119694754f;
      sa[944] = -0.32541612f;
      sa[945] = 0.1566325f;
      sa[946] = 0.11066853f;
      sa[947] = 0.2033547f;
      sa[948] = 0.11356965f;
      sa[949] = -0.16318655f;
      sa[950] = 0.08075412f;
      sa[951] = -0.04080905f;
      sa[952] = -0.172482f;
      sa[953] = -0.08382467f;
      sa[954] = -0.21854833f;
      sa[955] = 0.07864947f;
      sa[956] = 0.024896314f;
      sa[957] = 0.086624615f;
      sa[958] = 0.11076524f;
      sa[959] = -0.09635398f;
      sa[960] = 0.39131668f;
      sa[961] = -0.15986785f;
      sa[962] = 0.029808728f;
      sa[963] = -0.0102246655f;
      sa[964] = -0.1150509f;
      sa[965] = 0.3114944f;
      sa[966] = -0.041629605f;
      sa[967] = -0.19472428f;
      sa[968] = 0.13176835f;
      sa[969] = 0.07169035f;
      sa[970] = 0.26292726f;
      sa[971] = 0.0098295435f;
      sa[972] = -0.085018754f;
      sa[973] = -0.23178641f;
      sa[974] = -0.44563365f;
      sa[975] = -0.19624078f;
      sa[976] = -0.14294282f;
      sa[977] = 0.011888148f;
      sa[978] = -0.118257605f;
      sa[979] = 0.064436756f;
      sa[980] = 0.23730685f;
      sa[981] = -0.30488032f;
      sa[982] = 0.15661116f;
      sa[983] = -0.028270055f;
      sa[984] = -0.33277074f;
      sa[985] = 0.015186666f;
      sa[986] = -0.2939694f;
      sa[987] = -0.005135528f;
      sa[988] = 0.05522388f;
      sa[989] = 0.09525831f;
      sa[990] = 0.26490545f;
      sa[991] = -0.23430552f;
      sa[992] = -0.26764247f;
      sa[993] = -0.13000992f;
      sa[994] = -0.21384665f;
      sa[995] = -0.3622319f;
      sa[996] = 0.06294014f;
      sa[997] = 0.20399955f;
      sa[998] = 0.08339555f;
      sa[999] = 0.1904142f;
      sa[1000] = -0.04666714f;
      sa[1001] = 0.13801463f;
      sa[1002] = 0.18664871f;
      sa[1003] = -0.1645994f;
      sa[1004] = 0.1830483f;
      sa[1005] = -0.21364018f;
      sa[1006] = -0.084671386f;
      sa[1007] = 0.055648927f;
      sa[1008] = 0.14688395f;
      sa[1009] = 0.070485316f;
      sa[1010] = 0.07970204f;
      sa[1011] = 0.40331107f;
      sa[1012] = -0.03813848f;
      sa[1013] = 0.17071737f;
      sa[1014] = 0.33658507f;
      sa[1015] = -0.23568004f;
      sa[1016] = 0.23663124f;
      sa[1017] = 0.07873618f;
      sa[1018] = -0.077525884f;
      sa[1019] = 0.08789303f;
      sa[1020] = -0.20049635f;
      sa[1021] = 0.10426372f;
      sa[1022] = 0.30001536f;
      sa[1023] = 0.1234293f;
      sa[1024] = -0.0033105058f;
      sa[1025] = 0.10670473f;
      sa[1026] = 0.18286219f;
      sa[1027] = 0.21357514f;
      sa[1028] = 0.3184473f;
      sa[1029] = 0.0012404185f;
      sa[1030] = -0.10703042f;
      sa[1031] = 0.040637735f;
      sa[1032] = -0.221561f;
      sa[1033] = 0.042832673f;
      sa[1034] = -0.08414146f;
      sa[1035] = -0.3249316f;
      sa[1036] = 0.24618647f;
      sa[1037] = 0.0091465665f;
      sa[1038] = -0.22834483f;
      sa[1039] = 0.21458367f;
      sa[1040] = 0.0057684164f;
      sa[1041] = 0.06645516f;
      sa[1042] = -0.25074115f;
      sa[1043] = -0.070345685f;
      sa[1044] = 0.22479342f;
      sa[1045] = 0.19151941f;
      sa[1046] = -0.29444087f;
      sa[1047] = -0.14946581f;
      sa[1048] = 0.111677036f;
      sa[1049] = -0.12553968f;
      sa[1050] = 0.025251085f;
      sa[1051] = -0.24649888f;
      sa[1052] = 0.2055725f;
      sa[1053] = 0.17949457f;
      sa[1054] = 0.21113837f;
      sa[1055] = -0.006859669f;
      sa[1056] = 0.23194663f;
      sa[1057] = -0.21656784f;
      sa[1058] = 0.20928808f;
      sa[1059] = -0.22228493f;
      sa[1060] = -0.33875993f;
      sa[1061] = -0.10019577f;
      sa[1062] = 0.24552986f;
      sa[1063] = -0.08148149f;
      sa[1064] = 0.057299186f;
      sa[1065] = -0.07239732f;
      sa[1066] = 0.15813243f;
      sa[1067] = -0.37026748f;
      sa[1068] = -0.40901506f;
      sa[1069] = 0.2218265f;
      sa[1070] = 0.13296896f;
      sa[1071] = 0.17387994f;
      sa[1072] = -0.2890445f;
      sa[1073] = 0.059601657f;
      sa[1074] = 0.06904426f;
      sa[1075] = -0.24281144f;
      sa[1076] = -0.20739338f;
      sa[1077] = 0.02549532f;
      sa[1078] = 0.09254101f;
      sa[1079] = 0.107459344f;
      sa[1080] = 0.2018176f;
      sa[1081] = 0.22860722f;
      sa[1082] = -0.3000126f;
      sa[1083] = -0.18949471f;
      sa[1084] = 0.25390652f;
      sa[1085] = -0.1998639f;
      sa[1086] = -0.2607763f;
      sa[1087] = -0.22195224f;
      sa[1088] = -0.20729795f;
      sa[1089] = 0.12726162f;
      sa[1090] = -0.2282888f;
      sa[1091] = 0.15122928f;
      sa[1092] = -0.24907729f;
      sa[1093] = -0.2615744f;
      sa[1094] = -0.014271917f;
      sa[1095] = -0.23209456f;
      sa[1096] = 0.047919262f;
      sa[1097] = -0.07517418f;
      sa[1098] = 0.0022405952f;
      sa[1099] = -0.079229414f;
      sa[1100] = -0.12190493f;
      sa[1101] = 0.15118839f;
      sa[1102] = -0.14279848f;
      sa[1103] = 0.22598125f;
      sa[1104] = -0.259767f;
      sa[1105] = -0.13663875f;
      sa[1106] = -0.09467081f;
      sa[1107] = 0.22342494f;
      sa[1108] = -0.17942221f;
      sa[1109] = 0.26612526f;
      sa[1110] = 0.17943217f;
      sa[1111] = -0.21848994f;
      sa[1112] = 0.20705895f;
      sa[1113] = 0.3169524f;
      sa[1114] = -0.010793924f;
      sa[1115] = 0.15762313f;
      sa[1116] = -0.10415065f;
      sa[1117] = -0.20845318f;
      sa[1118] = -0.17739554f;
      sa[1119] = 7.258557E-4f;
      sa[1120] = 0.19265532f;
      sa[1121] = 0.05194952f;
      sa[1122] = 0.2841109f;
      sa[1123] = 0.27981284f;
      sa[1124] = -0.0037744031f;
      sa[1125] = -0.07839964f;
      sa[1126] = 0.16723804f;
      sa[1127] = 0.19728489f;
      sa[1128] = 0.013627475f;
      sa[1129] = -0.13411547f;
      sa[1130] = 0.24695835f;
      sa[1131] = 0.3098101f;
      sa[1132] = -0.1875219f;
      sa[1133] = -0.185104f;
      sa[1134] = 0.2908465f;
      sa[1135] = -0.43261987f;
      sa[1136] = -0.027184142f;
      sa[1137] = 0.20880757f;
      sa[1138] = -0.017665148f;
      sa[1139] = 0.17448387f;
      sa[1140] = 0.20478055f;
      sa[1141] = -0.2434735f;
      sa[1142] = 0.07691365f;
      sa[1143] = -0.081163004f;
      sa[1144] = -0.3403806f;
      sa[1145] = 0.09757903f;
      sa[1146] = 0.14995295f;
      sa[1147] = -0.1383242f;
      sa[1148] = 0.0021999127f;
      sa[1149] = -0.01717521f;
      sa[1150] = -0.24198186f;
      sa[1151] = -0.20887628f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_05_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_05_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2260462f;
      sa[1] = -0.10716887f;
      sa[2] = -0.57167846f;
      sa[3] = -1.0147955f;
      sa[4] = 0.102327585f;
      sa[5] = 0.25217354f;
      sa[6] = 1.2793247f;
      sa[7] = -0.74553406f;
      sa[8] = -0.94017047f;
      sa[9] = 0.75788414f;
      sa[10] = -0.13011838f;
      sa[11] = 0.40959695f;
      sa[12] = 0.15714234f;
      sa[13] = -0.01635985f;
      sa[14] = -1.3321977f;
      sa[15] = 1.1448139f;
      sa[16] = 1.5827262f;
      sa[17] = -0.49013525f;
      sa[18] = 0.047836658f;
      sa[19] = -0.43893546f;
      sa[20] = 1.1775062f;
      sa[21] = 0.044445664f;
      sa[22] = -0.95879674f;
      sa[23] = 0.77721804f;
      sa[24] = -1.3545434f;
      sa[25] = 0.46971032f;
      sa[26] = -0.2614788f;
      sa[27] = 1.5360774f;
      sa[28] = -1.3731259f;
      sa[29] = -0.4327633f;
      sa[30] = 0.4590211f;
      sa[31] = -0.6183773f;
      sa[32] = -1.173956f;
      sa[33] = -1.5194192f;
      sa[34] = 0.039675068f;
      sa[35] = 1.3759581f;
      sa[36] = -0.3215771f;
      sa[37] = -0.03744052f;
      sa[38] = 0.21491964f;
      sa[39] = 0.7704172f;
      sa[40] = -0.75972307f;
      sa[41] = -1.345577f;
      sa[42] = -1.0524796f;
      sa[43] = -1.4530579f;
      sa[44] = -0.025758239f;
      sa[45] = -1.3849703f;
      sa[46] = 1.1635636f;
      sa[47] = 1.3058193f;
      sa[48] = -1.3406103f;
      sa[49] = -1.0877066f;
      sa[50] = 0.42131174f;
      sa[51] = -0.34016916f;
      sa[52] = 0.7960014f;
      sa[53] = 0.89755887f;
      sa[54] = -0.21439855f;
      sa[55] = 1.1392151f;
      sa[56] = -1.0721806f;
      sa[57] = -1.13769f;
      sa[58] = 0.14294396f;
      sa[59] = -0.2455229f;
      sa[60] = 1.4002457f;
      sa[61] = -0.6513363f;
      sa[62] = -0.3791444f;
      sa[63] = 0.6966323f;
      sa[64] = 1.526794f;
      sa[65] = -0.61757314f;
      sa[66] = 0.65179944f;
      sa[67] = 1.6176872f;
      sa[68] = 0.74190027f;
      sa[69] = -1.0783162f;
      sa[70] = -1.6893778f;
      sa[71] = -0.41887066f;
      sa[72] = -1.3043731f;
      sa[73] = 1.0613028f;
      sa[74] = 1.2511318f;
      sa[75] = -0.080873236f;
      sa[76] = 0.9961167f;
      sa[77] = 0.5920272f;
      sa[78] = -1.2583793f;
      sa[79] = 0.962528f;
      sa[80] = -0.79769003f;
      sa[81] = 0.30219468f;
      sa[82] = 0.778223f;
      sa[83] = -0.679537f;
      sa[84] = -1.6471721f;
      sa[85] = -1.3155307f;
      sa[86] = 0.18092f;
      sa[87] = 1.247567f;
      sa[88] = -1.5436013f;
      sa[89] = -0.5299179f;
      sa[90] = -1.0462309f;
      sa[91] = 1.5126407f;
      sa[92] = -0.33115175f;
      sa[93] = 0.24508412f;
      sa[94] = -1.5917948f;
      sa[95] = -0.29506022f;
      sa[96] = -1.2357284f;
      sa[97] = 0.17365654f;
      sa[98] = -0.099288926f;
      sa[99] = 0.29467675f;
      sa[100] = -1.3275564f;
      sa[101] = -0.4568992f;
      sa[102] = 1.2637701f;
      sa[103] = 0.09078157f;
      sa[104] = -0.16490977f;
      sa[105] = -0.6172327f;
      sa[106] = 1.470375f;
      sa[107] = 1.1859224f;
      sa[108] = 0.7102126f;
      sa[109] = 0.09891885f;
      sa[110] = 0.6767353f;
      sa[111] = -0.78865665f;
      sa[112] = -1.1548487f;
      sa[113] = 0.20637247f;
      sa[114] = 0.1777495f;
      sa[115] = -0.34845474f;
      sa[116] = 1.1745341f;
      sa[117] = 0.013014181f;
      sa[118] = -1.3686472f;
      sa[119] = -0.89163905f;
      sa[120] = -0.33679253f;
      sa[121] = 1.0776101f;
      sa[122] = -0.08155144f;
      sa[123] = 0.34355158f;
      sa[124] = -0.7896305f;
      sa[125] = 0.7985827f;
      sa[126] = -0.95690393f;
      sa[127] = 0.43065563f;
      sa[128] = -0.8498204f;
      sa[129] = 0.7320348f;
      sa[130] = -0.3139568f;
      sa[131] = 0.93786883f;
      sa[132] = 0.47955012f;
      sa[133] = 0.6356408f;
      sa[134] = 0.2301855f;
      sa[135] = -1.1246984f;
      sa[136] = 0.55615443f;
      sa[137] = -0.6620906f;
      sa[138] = -0.38753492f;
      sa[139] = 1.1954842f;
      sa[140] = -0.43889853f;
      sa[141] = 0.023858624f;
      sa[142] = 0.3243944f;
      sa[143] = -0.7757211f;
      sa[144] = 0.99881625f;
      sa[145] = -0.7972962f;
      sa[146] = 0.029786432f;
      sa[147] = -0.22283655f;
      sa[148] = -0.82906616f;
      sa[149] = 1.0980715f;
      sa[150] = -1.226273f;
      sa[151] = -1.5278597f;
      sa[152] = 1.6250918f;
      sa[153] = -0.5672925f;
      sa[154] = 1.3778771f;
      sa[155] = -1.5263572f;
      sa[156] = -1.6271849f;
      sa[157] = -1.1330905f;
      sa[158] = -0.21473172f;
      sa[159] = -0.6384753f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


