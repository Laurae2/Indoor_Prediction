/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:36.491+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_11 > h2o_nn_32x6_Tanh_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_11", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_11_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(6260043499228407708L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.004190554543714869;
      sa[1] = 0.020390443781196612;
      sa[2] = 0.030480652397332254;
      sa[3] = -0.09779109534090273;
      sa[4] = 0.04641588560134343;
      sa[5] = 0.033333120760662804;
      sa[6] = 0.07776042695725174;
      sa[7] = -0.05397250536718663;
      sa[8] = -0.06885700232596609;
      sa[9] = -0.018291655215307328;
      sa[10] = 0.06574056043764179;
      sa[11] = 0.12539915917603223;
      sa[12] = 0.17411031320883247;
      sa[13] = 0.05151876825323617;
      sa[14] = 0.017674983449223986;
      sa[15] = -0.04070586719027467;
      sa[16] = -0.004430055644096386;
      sa[17] = 0.11028960421634564;
      sa[18] = 0.04033353702811038;
      sa[19] = -0.0015404769467703197;
      sa[20] = 1.0661222143235993E-4;
      sa[21] = -0.06586421832111275;
      sa[22] = -0.07552865848666085;
      sa[23] = -0.036667797495073116;
      sa[24] = -0.058132139176232694;
      sa[25] = 0.007243682490021549;
      sa[26] = -0.0585120913527712;
      sa[27] = -0.04528148707780263;
      sa[28] = -0.22100775502557565;
      sa[29] = -0.01446596880399928;
      sa[30] = 0.21634891151671276;
      sa[31] = -0.09054035794735318;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.07537338279081113;
      sa[1] = -0.1658433690503685;
      sa[2] = -0.062146897587838756;
      sa[3] = -0.018142782423322342;
      sa[4] = -0.030326601247834182;
      sa[5] = -0.03476680931051003;
    }
  }
}
class h2o_nn_32x6_Tanh_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.036372874f;
      sa[1] = 0.2023877f;
      sa[2] = 0.124259755f;
      sa[3] = 0.07206833f;
      sa[4] = -0.21310796f;
      sa[5] = -0.24726142f;
      sa[6] = -0.14393385f;
      sa[7] = 0.25152108f;
      sa[8] = 0.11378431f;
      sa[9] = -0.05811718f;
      sa[10] = -0.06051912f;
      sa[11] = -0.08609791f;
      sa[12] = 0.014287616f;
      sa[13] = -0.35086277f;
      sa[14] = -0.29273698f;
      sa[15] = -0.101227865f;
      sa[16] = 0.06431713f;
      sa[17] = 0.028479604f;
      sa[18] = -0.015106297f;
      sa[19] = -0.035752267f;
      sa[20] = 0.19717145f;
      sa[21] = -0.3172133f;
      sa[22] = 0.17060351f;
      sa[23] = -0.29382697f;
      sa[24] = 0.28987432f;
      sa[25] = 0.039607517f;
      sa[26] = -0.11494242f;
      sa[27] = 0.19717085f;
      sa[28] = 0.17143044f;
      sa[29] = -0.2958939f;
      sa[30] = -0.2305638f;
      sa[31] = 0.047516648f;
      sa[32] = 0.2767265f;
      sa[33] = -0.17614383f;
      sa[34] = -0.001624398f;
      sa[35] = -0.13896246f;
      sa[36] = 0.095629185f;
      sa[37] = 0.18120566f;
      sa[38] = -0.2950585f;
      sa[39] = -0.019729167f;
      sa[40] = -0.029159613f;
      sa[41] = 0.013753574f;
      sa[42] = -0.09839246f;
      sa[43] = 0.071992375f;
      sa[44] = 0.26471043f;
      sa[45] = -0.41442743f;
      sa[46] = 0.027786726f;
      sa[47] = 0.08104494f;
      sa[48] = 0.28364432f;
      sa[49] = 0.35635877f;
      sa[50] = 0.34531868f;
      sa[51] = -0.21884584f;
      sa[52] = -0.11222403f;
      sa[53] = 0.09136614f;
      sa[54] = 0.04599792f;
      sa[55] = 0.09635852f;
      sa[56] = -0.2002541f;
      sa[57] = -0.41915798f;
      sa[58] = 0.25432083f;
      sa[59] = -0.27398247f;
      sa[60] = -0.32627025f;
      sa[61] = 0.24772824f;
      sa[62] = -0.032594804f;
      sa[63] = 0.008953314f;
      sa[64] = 0.11109552f;
      sa[65] = 0.022108309f;
      sa[66] = 0.0396447f;
      sa[67] = 0.09294468f;
      sa[68] = -0.39085653f;
      sa[69] = 0.11175895f;
      sa[70] = -0.068400115f;
      sa[71] = 0.3101423f;
      sa[72] = -0.21521538f;
      sa[73] = 0.22753514f;
      sa[74] = -0.059337974f;
      sa[75] = 0.0071077547f;
      sa[76] = -0.14856929f;
      sa[77] = -0.07411641f;
      sa[78] = -0.0896987f;
      sa[79] = 0.1486947f;
      sa[80] = -0.3252412f;
      sa[81] = 0.08668745f;
      sa[82] = 0.07572544f;
      sa[83] = 0.019720407f;
      sa[84] = -0.06781262f;
      sa[85] = -0.20570418f;
      sa[86] = 0.07820081f;
      sa[87] = 0.20261471f;
      sa[88] = 0.24325168f;
      sa[89] = 0.15147392f;
      sa[90] = -0.042050563f;
      sa[91] = 0.096212626f;
      sa[92] = 0.04860642f;
      sa[93] = -0.17081714f;
      sa[94] = -0.17990176f;
      sa[95] = -0.2532926f;
      sa[96] = 0.21535033f;
      sa[97] = -0.0056487606f;
      sa[98] = 0.29565746f;
      sa[99] = 0.0029214942f;
      sa[100] = -0.09239841f;
      sa[101] = -0.12242872f;
      sa[102] = -0.2147293f;
      sa[103] = -0.09154907f;
      sa[104] = 0.07117288f;
      sa[105] = -0.15873349f;
      sa[106] = -0.098038614f;
      sa[107] = 0.19779319f;
      sa[108] = 0.12728553f;
      sa[109] = -0.17738104f;
      sa[110] = -0.17290589f;
      sa[111] = 0.13195363f;
      sa[112] = 0.16021854f;
      sa[113] = 0.12308115f;
      sa[114] = -0.0029802658f;
      sa[115] = -0.057079323f;
      sa[116] = -0.32288155f;
      sa[117] = -0.078386046f;
      sa[118] = -0.3730012f;
      sa[119] = -0.12939504f;
      sa[120] = 0.18706751f;
      sa[121] = 0.32544398f;
      sa[122] = 0.45611665f;
      sa[123] = 0.3737429f;
      sa[124] = 0.2717953f;
      sa[125] = 0.31492272f;
      sa[126] = -0.48014754f;
      sa[127] = -0.093229406f;
      sa[128] = -0.053162478f;
      sa[129] = 0.084477484f;
      sa[130] = -0.09528707f;
      sa[131] = 0.28289452f;
      sa[132] = 0.11852015f;
      sa[133] = -0.23273173f;
      sa[134] = -0.061238118f;
      sa[135] = -0.10748495f;
      sa[136] = -0.383654f;
      sa[137] = -0.11353844f;
      sa[138] = 0.08915683f;
      sa[139] = -0.13706629f;
      sa[140] = -0.052185766f;
      sa[141] = -0.08565083f;
      sa[142] = 0.21428362f;
      sa[143] = -0.2436151f;
      sa[144] = 0.19982891f;
      sa[145] = -0.16787368f;
      sa[146] = -0.4748919f;
      sa[147] = -0.083424516f;
      sa[148] = 0.1296872f;
      sa[149] = 0.12352981f;
      sa[150] = 0.2317989f;
      sa[151] = -0.22602487f;
      sa[152] = -0.02642559f;
      sa[153] = 0.3472479f;
      sa[154] = 0.23204333f;
      sa[155] = -0.10780263f;
      sa[156] = 0.10907149f;
      sa[157] = -0.21111009f;
      sa[158] = 0.10972495f;
      sa[159] = 0.14084564f;
      sa[160] = 0.040380534f;
      sa[161] = 0.19120389f;
      sa[162] = 0.058230467f;
      sa[163] = -0.19903508f;
      sa[164] = 0.15505424f;
      sa[165] = -0.097612664f;
      sa[166] = -0.13424559f;
      sa[167] = -0.12711151f;
      sa[168] = 0.15693071f;
      sa[169] = 0.16850235f;
      sa[170] = 0.13586678f;
      sa[171] = 0.07154641f;
      sa[172] = -0.13907081f;
      sa[173] = -0.18154824f;
      sa[174] = -0.08082068f;
      sa[175] = -0.28535652f;
      sa[176] = 0.07681179f;
      sa[177] = 0.05747489f;
      sa[178] = -0.019698558f;
      sa[179] = 0.10790878f;
      sa[180] = -0.13255577f;
      sa[181] = -0.2847337f;
      sa[182] = -0.27266f;
      sa[183] = 0.05469578f;
      sa[184] = 0.20574978f;
      sa[185] = 0.119064525f;
      sa[186] = -0.38484824f;
      sa[187] = 0.04197121f;
      sa[188] = 0.055426367f;
      sa[189] = 0.20170347f;
      sa[190] = 0.06339858f;
      sa[191] = -0.06442486f;
      sa[192] = 0.004770463f;
      sa[193] = 0.22680813f;
      sa[194] = 0.14687447f;
      sa[195] = 0.3961572f;
      sa[196] = 0.2565621f;
      sa[197] = 0.03315565f;
      sa[198] = 0.3087533f;
      sa[199] = -0.06221302f;
      sa[200] = 0.11707396f;
      sa[201] = -0.31789583f;
      sa[202] = 0.06289608f;
      sa[203] = 0.08926936f;
      sa[204] = -0.2532817f;
      sa[205] = 0.24919178f;
      sa[206] = 0.26695538f;
      sa[207] = 0.30451095f;
      sa[208] = -0.15248713f;
      sa[209] = -0.06131311f;
      sa[210] = -0.27647674f;
      sa[211] = -0.17301033f;
      sa[212] = 0.28042144f;
      sa[213] = -0.20953344f;
      sa[214] = 0.008006079f;
      sa[215] = 0.10677881f;
      sa[216] = 0.10186966f;
      sa[217] = 0.15901217f;
      sa[218] = -0.11163391f;
      sa[219] = 0.22840033f;
      sa[220] = -0.20373563f;
      sa[221] = 0.0010834661f;
      sa[222] = 0.13736281f;
      sa[223] = 0.0135638295f;
      sa[224] = 0.19026177f;
      sa[225] = 0.3153468f;
      sa[226] = -0.15060689f;
      sa[227] = 7.808946E-4f;
      sa[228] = 0.1784928f;
      sa[229] = 0.051331602f;
      sa[230] = 0.16516002f;
      sa[231] = -0.34036452f;
      sa[232] = -0.21154475f;
      sa[233] = 0.103271805f;
      sa[234] = 0.34325165f;
      sa[235] = -0.10820504f;
      sa[236] = 0.11396682f;
      sa[237] = -0.1058244f;
      sa[238] = -0.20054418f;
      sa[239] = 0.21373732f;
      sa[240] = 0.10605994f;
      sa[241] = -0.2163796f;
      sa[242] = 0.052250892f;
      sa[243] = -0.22511527f;
      sa[244] = -0.04142977f;
      sa[245] = -0.016870327f;
      sa[246] = -0.1642687f;
      sa[247] = 0.058602974f;
      sa[248] = 0.12369499f;
      sa[249] = 0.05505815f;
      sa[250] = -0.11640644f;
      sa[251] = -0.04136397f;
      sa[252] = -0.13714494f;
      sa[253] = -0.16090158f;
      sa[254] = -0.09501872f;
      sa[255] = 0.5087901f;
      sa[256] = -0.029971989f;
      sa[257] = 0.34598032f;
      sa[258] = -0.085634805f;
      sa[259] = -0.12697749f;
      sa[260] = -0.13310716f;
      sa[261] = -0.1941348f;
      sa[262] = -0.29111636f;
      sa[263] = 0.2407112f;
      sa[264] = -0.12433272f;
      sa[265] = 0.085226655f;
      sa[266] = -0.23679948f;
      sa[267] = -0.1909215f;
      sa[268] = 0.12374441f;
      sa[269] = -0.06999974f;
      sa[270] = -0.25221547f;
      sa[271] = 0.26059178f;
      sa[272] = -0.02155872f;
      sa[273] = 0.0055111023f;
      sa[274] = 0.21110865f;
      sa[275] = 0.10669124f;
      sa[276] = 0.032590758f;
      sa[277] = -0.12620406f;
      sa[278] = -0.2894616f;
      sa[279] = 0.09591775f;
      sa[280] = -0.05425933f;
      sa[281] = 0.33189175f;
      sa[282] = -0.041770723f;
      sa[283] = 0.05624057f;
      sa[284] = 0.07798897f;
      sa[285] = -0.16130313f;
      sa[286] = 0.11572064f;
      sa[287] = 0.0848115f;
      sa[288] = -0.29300863f;
      sa[289] = -0.16314384f;
      sa[290] = -0.12757762f;
      sa[291] = -0.17934938f;
      sa[292] = 0.09266213f;
      sa[293] = -0.14723916f;
      sa[294] = -0.023684341f;
      sa[295] = 0.079198025f;
      sa[296] = 0.09985317f;
      sa[297] = 0.30326214f;
      sa[298] = 0.08942764f;
      sa[299] = -0.21410272f;
      sa[300] = 0.0260674f;
      sa[301] = -0.06661943f;
      sa[302] = 0.13401574f;
      sa[303] = 0.05683141f;
      sa[304] = -0.12394225f;
      sa[305] = 0.22123618f;
      sa[306] = 0.33699003f;
      sa[307] = -0.045599695f;
      sa[308] = 0.051102553f;
      sa[309] = 0.09837688f;
      sa[310] = 0.19040152f;
      sa[311] = 0.32312712f;
      sa[312] = -0.1109943f;
      sa[313] = -0.13882689f;
      sa[314] = -0.06396052f;
      sa[315] = 0.2855652f;
      sa[316] = 0.014092983f;
      sa[317] = -0.04515577f;
      sa[318] = 0.11965333f;
      sa[319] = 0.3151274f;
      sa[320] = -0.10565011f;
      sa[321] = 0.0028917617f;
      sa[322] = 0.45434004f;
      sa[323] = 0.021671668f;
      sa[324] = 0.091890454f;
      sa[325] = 0.220111f;
      sa[326] = -0.39435455f;
      sa[327] = -0.07137226f;
      sa[328] = -0.13365342f;
      sa[329] = 0.2433885f;
      sa[330] = -0.16733384f;
      sa[331] = 0.009740444f;
      sa[332] = -0.18443711f;
      sa[333] = 0.019093102f;
      sa[334] = -0.08855828f;
      sa[335] = 0.40578553f;
      sa[336] = -0.21542937f;
      sa[337] = -0.1530235f;
      sa[338] = 0.25884277f;
      sa[339] = -0.2670553f;
      sa[340] = -0.35502395f;
      sa[341] = -0.47270834f;
      sa[342] = 0.058912367f;
      sa[343] = -0.19696382f;
      sa[344] = -0.23094812f;
      sa[345] = 0.11775209f;
      sa[346] = 0.17674035f;
      sa[347] = -0.39164245f;
      sa[348] = 0.17189087f;
      sa[349] = -0.31229684f;
      sa[350] = -0.29397863f;
      sa[351] = 0.009266454f;
      sa[352] = 0.061950132f;
      sa[353] = -0.15613088f;
      sa[354] = -0.005056903f;
      sa[355] = -0.10414161f;
      sa[356] = -0.1593102f;
      sa[357] = 0.37936145f;
      sa[358] = -0.39765868f;
      sa[359] = -0.082127735f;
      sa[360] = 0.20755894f;
      sa[361] = -0.036648765f;
      sa[362] = -0.07532865f;
      sa[363] = -0.04797009f;
      sa[364] = -0.043618985f;
      sa[365] = -0.062368568f;
      sa[366] = 0.0879357f;
      sa[367] = -0.19209035f;
      sa[368] = -0.22800586f;
      sa[369] = 0.20280813f;
      sa[370] = -0.16686139f;
      sa[371] = 0.07521855f;
      sa[372] = -0.04194169f;
      sa[373] = 0.35919192f;
      sa[374] = -0.124585815f;
      sa[375] = -0.32802585f;
      sa[376] = -0.25516996f;
      sa[377] = -0.29960313f;
      sa[378] = -0.029903555f;
      sa[379] = 0.13142018f;
      sa[380] = -0.17874892f;
      sa[381] = -0.107360244f;
      sa[382] = 0.051937114f;
      sa[383] = -0.24986127f;
      sa[384] = 0.048820138f;
      sa[385] = 0.12273979f;
      sa[386] = -0.3342091f;
      sa[387] = -0.1758015f;
      sa[388] = 0.019671708f;
      sa[389] = -0.026423551f;
      sa[390] = 0.10157447f;
      sa[391] = -0.19419126f;
      sa[392] = -0.1369086f;
      sa[393] = 0.002846384f;
      sa[394] = -0.0060210507f;
      sa[395] = 0.29004404f;
      sa[396] = 0.28517154f;
      sa[397] = -0.32863316f;
      sa[398] = 0.0391874f;
      sa[399] = -0.15426081f;
      sa[400] = 0.17380188f;
      sa[401] = 0.33398044f;
      sa[402] = -0.09436859f;
      sa[403] = 0.15308444f;
      sa[404] = 0.22924864f;
      sa[405] = -0.2848163f;
      sa[406] = -0.0108109955f;
      sa[407] = 0.13482857f;
      sa[408] = -0.13841052f;
      sa[409] = -0.09979713f;
      sa[410] = -0.038142182f;
      sa[411] = 0.16751674f;
      sa[412] = -0.09878509f;
      sa[413] = 0.044125233f;
      sa[414] = 0.114663646f;
      sa[415] = 0.2838561f;
      sa[416] = -0.165232f;
      sa[417] = -0.028082862f;
      sa[418] = 0.027595222f;
      sa[419] = 0.20423418f;
      sa[420] = 0.26484668f;
      sa[421] = 0.26995608f;
      sa[422] = 0.26246762f;
      sa[423] = 0.018431002f;
      sa[424] = 0.12489669f;
      sa[425] = -0.06071548f;
      sa[426] = -0.18627533f;
      sa[427] = 0.167378f;
      sa[428] = -0.24177298f;
      sa[429] = -0.29310885f;
      sa[430] = 0.20672898f;
      sa[431] = -0.00947383f;
      sa[432] = -0.058366273f;
      sa[433] = 0.46394536f;
      sa[434] = 0.60040444f;
      sa[435] = -0.1499645f;
      sa[436] = -0.12396233f;
      sa[437] = -0.09838232f;
      sa[438] = 0.08393066f;
      sa[439] = 0.12556136f;
      sa[440] = 0.15100841f;
      sa[441] = -0.16849962f;
      sa[442] = 0.070643336f;
      sa[443] = -0.14653897f;
      sa[444] = -0.22461203f;
      sa[445] = 0.14697644f;
      sa[446] = 0.17976679f;
      sa[447] = 0.0531422f;
      sa[448] = 0.29196504f;
      sa[449] = 0.23730394f;
      sa[450] = -0.33035064f;
      sa[451] = 0.25580573f;
      sa[452] = 0.18675739f;
      sa[453] = 0.040334538f;
      sa[454] = -0.07385082f;
      sa[455] = -0.010152183f;
      sa[456] = 0.14746381f;
      sa[457] = -0.037000388f;
      sa[458] = -0.2171749f;
      sa[459] = 0.31705195f;
      sa[460] = 0.24600759f;
      sa[461] = 0.41847572f;
      sa[462] = 0.25454012f;
      sa[463] = 0.2801087f;
      sa[464] = -0.38927057f;
      sa[465] = 0.06974886f;
      sa[466] = -0.011581598f;
      sa[467] = 0.16756624f;
      sa[468] = 0.05428834f;
      sa[469] = 0.22411892f;
      sa[470] = 0.16977753f;
      sa[471] = -0.08453313f;
      sa[472] = -0.010987055f;
      sa[473] = -0.08458915f;
      sa[474] = -0.080808714f;
      sa[475] = 0.12893501f;
      sa[476] = 0.18315275f;
      sa[477] = -0.0649908f;
      sa[478] = 0.24975781f;
      sa[479] = -0.13007912f;
      sa[480] = -0.3071299f;
      sa[481] = -0.19147076f;
      sa[482] = -0.30812433f;
      sa[483] = 0.13291612f;
      sa[484] = 0.23344865f;
      sa[485] = 0.059537284f;
      sa[486] = 0.0017637414f;
      sa[487] = -0.2418912f;
      sa[488] = -0.23588839f;
      sa[489] = 0.022144778f;
      sa[490] = -0.036833704f;
      sa[491] = -0.32203507f;
      sa[492] = 0.27489075f;
      sa[493] = 0.17580956f;
      sa[494] = -0.11175546f;
      sa[495] = 0.18508567f;
      sa[496] = -0.04890029f;
      sa[497] = 0.05446374f;
      sa[498] = 0.18569072f;
      sa[499] = 0.079320714f;
      sa[500] = -0.11425923f;
      sa[501] = 0.05368771f;
      sa[502] = 0.26584068f;
      sa[503] = 0.017910112f;
      sa[504] = -0.20354253f;
      sa[505] = -0.16365588f;
      sa[506] = 0.36319867f;
      sa[507] = 0.066645496f;
      sa[508] = 0.16939943f;
      sa[509] = 0.2433645f;
      sa[510] = 0.22627822f;
      sa[511] = -0.022770287f;
      sa[512] = 0.03719436f;
      sa[513] = -0.058116917f;
      sa[514] = 0.21160693f;
      sa[515] = -0.36729658f;
      sa[516] = 0.076916486f;
      sa[517] = 0.15502131f;
      sa[518] = 0.20538557f;
      sa[519] = -0.0116179595f;
      sa[520] = 0.25477028f;
      sa[521] = 0.2737719f;
      sa[522] = 0.07549674f;
      sa[523] = 0.28600946f;
      sa[524] = 0.22370237f;
      sa[525] = 0.24650508f;
      sa[526] = 0.083378725f;
      sa[527] = 0.11352665f;
      sa[528] = 0.07055827f;
      sa[529] = 0.20828262f;
      sa[530] = -0.21753508f;
      sa[531] = 0.14766137f;
      sa[532] = 0.23600943f;
      sa[533] = 0.18055093f;
      sa[534] = 0.20225427f;
      sa[535] = 0.08307346f;
      sa[536] = 0.0995429f;
      sa[537] = -0.3187574f;
      sa[538] = 0.25041422f;
      sa[539] = 0.3298289f;
      sa[540] = -0.26370195f;
      sa[541] = -0.126263f;
      sa[542] = -0.03155198f;
      sa[543] = 0.048404694f;
      sa[544] = 0.121631816f;
      sa[545] = -0.011867635f;
      sa[546] = 0.003367579f;
      sa[547] = 0.17181769f;
      sa[548] = 0.15412737f;
      sa[549] = 0.23476405f;
      sa[550] = -0.056137986f;
      sa[551] = -0.003736776f;
      sa[552] = -0.055843454f;
      sa[553] = -0.22782184f;
      sa[554] = -0.29156083f;
      sa[555] = -0.2244816f;
      sa[556] = -0.22502288f;
      sa[557] = -0.22174051f;
      sa[558] = -0.10173906f;
      sa[559] = -0.07740864f;
      sa[560] = -0.24416675f;
      sa[561] = -0.01912736f;
      sa[562] = 0.1316436f;
      sa[563] = -0.023433095f;
      sa[564] = 0.16179405f;
      sa[565] = -0.08573686f;
      sa[566] = 0.3106165f;
      sa[567] = -0.27994457f;
      sa[568] = -0.08911294f;
      sa[569] = 0.03011452f;
      sa[570] = -0.12022631f;
      sa[571] = -0.051836632f;
      sa[572] = 0.23433849f;
      sa[573] = 0.30710867f;
      sa[574] = 0.065229416f;
      sa[575] = -0.36633152f;
      sa[576] = -0.17590289f;
      sa[577] = -0.007476986f;
      sa[578] = -0.18631095f;
      sa[579] = -0.16056831f;
      sa[580] = -0.052214876f;
      sa[581] = -0.18566193f;
      sa[582] = -0.07478522f;
      sa[583] = 0.048415452f;
      sa[584] = 0.19132105f;
      sa[585] = 0.08890624f;
      sa[586] = -0.05259527f;
      sa[587] = 0.0817587f;
      sa[588] = 0.1289498f;
      sa[589] = 0.0560399f;
      sa[590] = -0.0068852324f;
      sa[591] = 0.106904395f;
      sa[592] = -0.40475616f;
      sa[593] = -0.2644516f;
      sa[594] = 0.008585372f;
      sa[595] = -0.1204767f;
      sa[596] = 0.28518397f;
      sa[597] = -0.16439778f;
      sa[598] = 0.09341759f;
      sa[599] = 0.0022068531f;
      sa[600] = -0.3700262f;
      sa[601] = 0.17046992f;
      sa[602] = -0.014065501f;
      sa[603] = 0.22515213f;
      sa[604] = 0.20030747f;
      sa[605] = 0.07389038f;
      sa[606] = 0.08142285f;
      sa[607] = 0.036649022f;
      sa[608] = 0.04673866f;
      sa[609] = 0.2099265f;
      sa[610] = 0.06545993f;
      sa[611] = -0.07844154f;
      sa[612] = -0.028946638f;
      sa[613] = 0.10860553f;
      sa[614] = 0.19824673f;
      sa[615] = -0.3933898f;
      sa[616] = 0.14028613f;
      sa[617] = -0.059015796f;
      sa[618] = -0.085143186f;
      sa[619] = 0.049164854f;
      sa[620] = -0.13165295f;
      sa[621] = -0.26579288f;
      sa[622] = -0.22960584f;
      sa[623] = -0.4066836f;
      sa[624] = -0.0685662f;
      sa[625] = 0.34354526f;
      sa[626] = -0.024567189f;
      sa[627] = 0.16590124f;
      sa[628] = -0.16541043f;
      sa[629] = -0.13849516f;
      sa[630] = -0.45777056f;
      sa[631] = 0.27987278f;
      sa[632] = 0.06561695f;
      sa[633] = -0.123042054f;
      sa[634] = -0.10043227f;
      sa[635] = 0.06325309f;
      sa[636] = -0.006976371f;
      sa[637] = -0.03171425f;
      sa[638] = -0.1877138f;
      sa[639] = -0.009288394f;
      sa[640] = -0.16959375f;
      sa[641] = -0.26438084f;
      sa[642] = 0.2865656f;
      sa[643] = -0.35962301f;
      sa[644] = -0.42748106f;
      sa[645] = -0.3275927f;
      sa[646] = 0.27601504f;
      sa[647] = -0.19028687f;
      sa[648] = 0.0692224f;
      sa[649] = -0.0628103f;
      sa[650] = 0.055080343f;
      sa[651] = -0.026989175f;
      sa[652] = 0.12764835f;
      sa[653] = -0.041657094f;
      sa[654] = -0.0072207805f;
      sa[655] = -0.08344605f;
      sa[656] = 0.1402423f;
      sa[657] = -0.024179736f;
      sa[658] = -0.35573098f;
      sa[659] = -0.1222406f;
      sa[660] = -0.23477319f;
      sa[661] = -0.018478295f;
      sa[662] = -0.15257066f;
      sa[663] = 0.24434635f;
      sa[664] = -0.2725053f;
      sa[665] = 0.15403804f;
      sa[666] = -0.20565057f;
      sa[667] = -0.2916813f;
      sa[668] = 0.23400237f;
      sa[669] = -0.11234405f;
      sa[670] = 0.20020795f;
      sa[671] = 0.07069131f;
      sa[672] = -0.339104f;
      sa[673] = 0.20006175f;
      sa[674] = 0.12990138f;
      sa[675] = -0.34384966f;
      sa[676] = -0.14972444f;
      sa[677] = -0.2420353f;
      sa[678] = 0.16209863f;
      sa[679] = -0.0808119f;
      sa[680] = 0.12057167f;
      sa[681] = 0.23578103f;
      sa[682] = -0.14212404f;
      sa[683] = -0.27911514f;
      sa[684] = -0.11909441f;
      sa[685] = 0.04980915f;
      sa[686] = -0.17492276f;
      sa[687] = -0.29741034f;
      sa[688] = -0.31300578f;
      sa[689] = -0.29813838f;
      sa[690] = -0.11770967f;
      sa[691] = 0.060536295f;
      sa[692] = -0.19321805f;
      sa[693] = -0.07878378f;
      sa[694] = 0.32178387f;
      sa[695] = -0.15164998f;
      sa[696] = -0.050736524f;
      sa[697] = -0.16985965f;
      sa[698] = -0.17150414f;
      sa[699] = 0.34143174f;
      sa[700] = 0.23687291f;
      sa[701] = 0.24691069f;
      sa[702] = 0.38999695f;
      sa[703] = 0.03359121f;
      sa[704] = -0.26398918f;
      sa[705] = -0.080669135f;
      sa[706] = -0.20130312f;
      sa[707] = 0.059120834f;
      sa[708] = 0.09077059f;
      sa[709] = -0.29626098f;
      sa[710] = 0.37412986f;
      sa[711] = 0.08785003f;
      sa[712] = 0.07018987f;
      sa[713] = 0.16284734f;
      sa[714] = 0.18764311f;
      sa[715] = 0.12148463f;
      sa[716] = 0.060412206f;
      sa[717] = 0.090152144f;
      sa[718] = 0.1426254f;
      sa[719] = 0.18108289f;
      sa[720] = -0.17483689f;
      sa[721] = 0.27682492f;
      sa[722] = -0.018475702f;
      sa[723] = 0.28347605f;
      sa[724] = 0.07689013f;
      sa[725] = -0.28895283f;
      sa[726] = -0.23863322f;
      sa[727] = -0.2821286f;
      sa[728] = 0.029643992f;
      sa[729] = -0.10249012f;
      sa[730] = 0.08845088f;
      sa[731] = -0.3172612f;
      sa[732] = 0.2032642f;
      sa[733] = 0.18419723f;
      sa[734] = -0.23333828f;
      sa[735] = 0.25204507f;
      sa[736] = 0.009197283f;
      sa[737] = 0.1823258f;
      sa[738] = -0.2684051f;
      sa[739] = -0.20333424f;
      sa[740] = -0.050245482f;
      sa[741] = -0.15140907f;
      sa[742] = 0.13429394f;
      sa[743] = 0.14745082f;
      sa[744] = 0.022547798f;
      sa[745] = -0.13915005f;
      sa[746] = 0.029031467f;
      sa[747] = -0.33162293f;
      sa[748] = 0.0117728505f;
      sa[749] = -0.079177044f;
      sa[750] = 0.24836308f;
      sa[751] = 0.35635093f;
      sa[752] = -0.15074457f;
      sa[753] = 0.071173936f;
      sa[754] = -0.049042538f;
      sa[755] = 0.16528526f;
      sa[756] = -0.24782264f;
      sa[757] = 0.24957575f;
      sa[758] = -0.22792377f;
      sa[759] = -0.06763097f;
      sa[760] = -0.119976625f;
      sa[761] = 0.050562397f;
      sa[762] = -0.067596f;
      sa[763] = 0.09763336f;
      sa[764] = 0.10610841f;
      sa[765] = -0.12636901f;
      sa[766] = -0.24900472f;
      sa[767] = 0.06580791f;
      sa[768] = -0.09377286f;
      sa[769] = -0.22674859f;
      sa[770] = 0.078495644f;
      sa[771] = 0.112141326f;
      sa[772] = 0.05694447f;
      sa[773] = -0.1593149f;
      sa[774] = 0.062288832f;
      sa[775] = 0.41075024f;
      sa[776] = -0.028190961f;
      sa[777] = 0.008584504f;
      sa[778] = 0.13577454f;
      sa[779] = -0.052579552f;
      sa[780] = -0.098871864f;
      sa[781] = 0.0675533f;
      sa[782] = 0.08139031f;
      sa[783] = -0.05575605f;
      sa[784] = -0.09010891f;
      sa[785] = -0.141111f;
      sa[786] = -0.088829674f;
      sa[787] = -0.17154302f;
      sa[788] = -0.32016754f;
      sa[789] = 0.09396837f;
      sa[790] = -0.02054242f;
      sa[791] = 0.026210647f;
      sa[792] = 0.13657497f;
      sa[793] = -0.1159405f;
      sa[794] = -0.15466245f;
      sa[795] = 0.038799815f;
      sa[796] = 0.2169687f;
      sa[797] = -0.2708059f;
      sa[798] = -0.29643452f;
      sa[799] = -0.10856034f;
      sa[800] = 0.10722696f;
      sa[801] = 0.22969651f;
      sa[802] = 0.25798395f;
      sa[803] = 0.09229983f;
      sa[804] = 0.13606063f;
      sa[805] = 0.1987051f;
      sa[806] = 0.23361066f;
      sa[807] = 0.21525502f;
      sa[808] = -0.08277942f;
      sa[809] = -0.13078037f;
      sa[810] = 0.14176767f;
      sa[811] = 0.12914746f;
      sa[812] = 0.055771638f;
      sa[813] = -0.30351096f;
      sa[814] = 0.034944236f;
      sa[815] = -0.16021262f;
      sa[816] = -0.093321875f;
      sa[817] = -0.2721574f;
      sa[818] = 0.053403694f;
      sa[819] = -0.04138438f;
      sa[820] = -0.36758354f;
      sa[821] = -0.21662715f;
      sa[822] = -0.33755106f;
      sa[823] = 0.055738255f;
      sa[824] = 0.37804288f;
      sa[825] = 0.40104547f;
      sa[826] = -0.3047672f;
      sa[827] = -0.3587481f;
      sa[828] = 0.15741138f;
      sa[829] = -0.053443734f;
      sa[830] = 0.2755736f;
      sa[831] = 0.4693516f;
      sa[832] = 0.15527488f;
      sa[833] = 0.009067232f;
      sa[834] = 0.15991394f;
      sa[835] = -0.0399364f;
      sa[836] = 0.2130975f;
      sa[837] = -0.13207263f;
      sa[838] = 0.06752603f;
      sa[839] = -0.124449044f;
      sa[840] = 0.09713957f;
      sa[841] = -0.03506639f;
      sa[842] = 0.001353053f;
      sa[843] = -0.033712383f;
      sa[844] = -0.017965425f;
      sa[845] = 0.09359125f;
      sa[846] = -0.28459993f;
      sa[847] = -0.19540974f;
      sa[848] = 0.24525738f;
      sa[849] = 0.33141947f;
      sa[850] = 0.00880952f;
      sa[851] = 0.17140155f;
      sa[852] = 0.17809908f;
      sa[853] = 0.08467964f;
      sa[854] = 0.18386915f;
      sa[855] = -0.13840029f;
      sa[856] = 0.08382601f;
      sa[857] = -0.12729521f;
      sa[858] = 0.06926798f;
      sa[859] = 0.11072471f;
      sa[860] = 0.49235043f;
      sa[861] = -0.07752511f;
      sa[862] = -0.3479311f;
      sa[863] = -0.15084836f;
      sa[864] = -0.31184375f;
      sa[865] = 0.17551857f;
      sa[866] = -0.30655086f;
      sa[867] = -0.23277172f;
      sa[868] = -0.21807095f;
      sa[869] = 0.186528f;
      sa[870] = -0.07029101f;
      sa[871] = 0.11392516f;
      sa[872] = 0.14690457f;
      sa[873] = -0.0056610787f;
      sa[874] = 0.06933322f;
      sa[875] = -0.2988027f;
      sa[876] = -0.1981865f;
      sa[877] = -0.16511571f;
      sa[878] = 0.095139876f;
      sa[879] = 0.24734873f;
      sa[880] = -0.092137344f;
      sa[881] = 0.022631764f;
      sa[882] = 0.3060963f;
      sa[883] = 0.20068766f;
      sa[884] = -0.21207607f;
      sa[885] = -0.22928451f;
      sa[886] = 0.027250038f;
      sa[887] = -0.087749735f;
      sa[888] = -0.051787388f;
      sa[889] = 0.06604926f;
      sa[890] = -0.19638649f;
      sa[891] = 0.6948338f;
      sa[892] = 0.13511823f;
      sa[893] = 0.2341096f;
      sa[894] = 0.05097742f;
      sa[895] = 0.18982182f;
      sa[896] = -0.20477617f;
      sa[897] = 0.16314834f;
      sa[898] = 0.14587884f;
      sa[899] = 0.38245577f;
      sa[900] = -0.10556462f;
      sa[901] = 0.16483058f;
      sa[902] = -0.13359486f;
      sa[903] = -0.1481534f;
      sa[904] = 0.16353303f;
      sa[905] = 0.17070563f;
      sa[906] = -0.31674072f;
      sa[907] = -0.20612442f;
      sa[908] = -0.22121884f;
      sa[909] = 0.11330442f;
      sa[910] = 0.12905979f;
      sa[911] = -0.21514648f;
      sa[912] = -0.01686833f;
      sa[913] = 0.025787424f;
      sa[914] = -0.29856423f;
      sa[915] = -0.08606397f;
      sa[916] = 0.26237515f;
      sa[917] = 0.024773667f;
      sa[918] = 0.1544109f;
      sa[919] = -0.022796795f;
      sa[920] = 0.1938847f;
      sa[921] = -0.029417505f;
      sa[922] = -0.13102162f;
      sa[923] = -0.14728032f;
      sa[924] = 0.024218272f;
      sa[925] = -0.17589097f;
      sa[926] = 0.18488857f;
      sa[927] = -0.13081613f;
      sa[928] = 0.3003932f;
      sa[929] = 0.1954161f;
      sa[930] = 0.21333341f;
      sa[931] = 0.037701145f;
      sa[932] = 0.09428485f;
      sa[933] = -0.17075631f;
      sa[934] = 0.23190945f;
      sa[935] = -0.13226117f;
      sa[936] = -0.031740177f;
      sa[937] = 0.15311529f;
      sa[938] = -0.31588706f;
      sa[939] = -0.08191428f;
      sa[940] = -0.13315834f;
      sa[941] = -0.28323737f;
      sa[942] = -0.2154518f;
      sa[943] = -0.2451299f;
      sa[944] = -0.21462174f;
      sa[945] = -0.048799854f;
      sa[946] = 0.0037688282f;
      sa[947] = 0.24297467f;
      sa[948] = 0.16274267f;
      sa[949] = -0.107822664f;
      sa[950] = 0.25245544f;
      sa[951] = 0.016896391f;
      sa[952] = -0.17864926f;
      sa[953] = -0.15725568f;
      sa[954] = -0.18287379f;
      sa[955] = 0.14131524f;
      sa[956] = -0.035987105f;
      sa[957] = -0.07920378f;
      sa[958] = 0.049641315f;
      sa[959] = -0.13843052f;
      sa[960] = 0.23883067f;
      sa[961] = -0.052161068f;
      sa[962] = -0.056712378f;
      sa[963] = 0.21460785f;
      sa[964] = -0.16597933f;
      sa[965] = 0.18211907f;
      sa[966] = -0.093502685f;
      sa[967] = -0.25666174f;
      sa[968] = 0.02125489f;
      sa[969] = 0.046613965f;
      sa[970] = 0.47555295f;
      sa[971] = 0.107751705f;
      sa[972] = -0.024571633f;
      sa[973] = -0.19242892f;
      sa[974] = -0.20905767f;
      sa[975] = -0.17482719f;
      sa[976] = -0.10467494f;
      sa[977] = 0.027887179f;
      sa[978] = -0.09629014f;
      sa[979] = 0.19512762f;
      sa[980] = 0.17522824f;
      sa[981] = -0.27264285f;
      sa[982] = 0.11359259f;
      sa[983] = 0.064990975f;
      sa[984] = -0.37422782f;
      sa[985] = -0.024670193f;
      sa[986] = -0.4197964f;
      sa[987] = -0.06998266f;
      sa[988] = 0.1348181f;
      sa[989] = 0.008547806f;
      sa[990] = 0.06127531f;
      sa[991] = -0.34273523f;
      sa[992] = -0.18369704f;
      sa[993] = -0.0155001385f;
      sa[994] = -0.14236443f;
      sa[995] = -0.33833876f;
      sa[996] = 0.12739728f;
      sa[997] = 0.11901482f;
      sa[998] = -0.0098935515f;
      sa[999] = -0.008546231f;
      sa[1000] = -0.028313559f;
      sa[1001] = 0.16059607f;
      sa[1002] = 0.19514978f;
      sa[1003] = -0.158121f;
      sa[1004] = 0.15020059f;
      sa[1005] = -0.12289819f;
      sa[1006] = -0.29794422f;
      sa[1007] = -0.15145022f;
      sa[1008] = 0.11687861f;
      sa[1009] = 0.102598645f;
      sa[1010] = 0.20110673f;
      sa[1011] = 0.49689004f;
      sa[1012] = -0.02326945f;
      sa[1013] = 0.068074405f;
      sa[1014] = 0.26355186f;
      sa[1015] = -0.35937372f;
      sa[1016] = 0.15666553f;
      sa[1017] = 0.1530458f;
      sa[1018] = -0.098520674f;
      sa[1019] = -0.0036392983f;
      sa[1020] = -0.29514813f;
      sa[1021] = -0.019418104f;
      sa[1022] = 0.1263362f;
      sa[1023] = 0.053523548f;
      sa[1024] = -0.02187537f;
      sa[1025] = 0.23460063f;
      sa[1026] = 0.13074651f;
      sa[1027] = 0.31102678f;
      sa[1028] = 0.26552805f;
      sa[1029] = 0.03797396f;
      sa[1030] = -0.18372412f;
      sa[1031] = 0.0660146f;
      sa[1032] = -0.21234299f;
      sa[1033] = 0.033487167f;
      sa[1034] = -0.09134205f;
      sa[1035] = -0.2783965f;
      sa[1036] = 0.23465943f;
      sa[1037] = 0.04565072f;
      sa[1038] = -0.25136086f;
      sa[1039] = 0.295285f;
      sa[1040] = 0.222345f;
      sa[1041] = 0.11723607f;
      sa[1042] = -0.2679959f;
      sa[1043] = -0.042684123f;
      sa[1044] = 0.2853269f;
      sa[1045] = 0.25319588f;
      sa[1046] = -0.017938728f;
      sa[1047] = -0.111663915f;
      sa[1048] = 0.21204463f;
      sa[1049] = 0.027507216f;
      sa[1050] = 0.15423569f;
      sa[1051] = -0.13856989f;
      sa[1052] = 0.14867173f;
      sa[1053] = 0.16701429f;
      sa[1054] = 0.23155609f;
      sa[1055] = 0.004436269f;
      sa[1056] = 0.20998694f;
      sa[1057] = -0.1349055f;
      sa[1058] = 0.20586623f;
      sa[1059] = -0.33190715f;
      sa[1060] = -0.24366096f;
      sa[1061] = -0.027543638f;
      sa[1062] = -0.31236935f;
      sa[1063] = 0.047092658f;
      sa[1064] = 0.0795177f;
      sa[1065] = 0.031556807f;
      sa[1066] = 0.27354115f;
      sa[1067] = -0.3421444f;
      sa[1068] = -0.25059533f;
      sa[1069] = 0.30850244f;
      sa[1070] = -0.050336115f;
      sa[1071] = 0.009897491f;
      sa[1072] = -0.25729668f;
      sa[1073] = 0.11806458f;
      sa[1074] = 0.16807783f;
      sa[1075] = -0.18808736f;
      sa[1076] = -0.22747406f;
      sa[1077] = 0.0745981f;
      sa[1078] = -0.16839741f;
      sa[1079] = -0.123846f;
      sa[1080] = 0.21665587f;
      sa[1081] = 0.1732326f;
      sa[1082] = -0.4498683f;
      sa[1083] = -0.07136709f;
      sa[1084] = 0.21413352f;
      sa[1085] = -0.25450546f;
      sa[1086] = -0.3275286f;
      sa[1087] = -0.19869457f;
      sa[1088] = -0.04449867f;
      sa[1089] = -0.039256886f;
      sa[1090] = -0.20845516f;
      sa[1091] = 0.2087396f;
      sa[1092] = -0.10599276f;
      sa[1093] = -0.31696224f;
      sa[1094] = 0.0746799f;
      sa[1095] = -0.05044585f;
      sa[1096] = -0.011930514f;
      sa[1097] = -0.16366713f;
      sa[1098] = 0.12902498f;
      sa[1099] = -0.1875134f;
      sa[1100] = 0.09255719f;
      sa[1101] = 0.20294999f;
      sa[1102] = -0.113078125f;
      sa[1103] = 0.36183125f;
      sa[1104] = -0.4269057f;
      sa[1105] = -0.12818842f;
      sa[1106] = -0.06468255f;
      sa[1107] = 0.054039296f;
      sa[1108] = -0.023295362f;
      sa[1109] = 0.34312415f;
      sa[1110] = 0.14498049f;
      sa[1111] = -0.11140733f;
      sa[1112] = 0.25361812f;
      sa[1113] = 0.28502655f;
      sa[1114] = -0.042487707f;
      sa[1115] = 0.076437265f;
      sa[1116] = -0.002789457f;
      sa[1117] = -0.14802633f;
      sa[1118] = 0.06914468f;
      sa[1119] = 0.25897044f;
      sa[1120] = 0.25805926f;
      sa[1121] = 0.16118635f;
      sa[1122] = 0.43027267f;
      sa[1123] = 0.30037498f;
      sa[1124] = 0.048933875f;
      sa[1125] = -0.1951996f;
      sa[1126] = 0.18374336f;
      sa[1127] = 0.16756943f;
      sa[1128] = 0.024739238f;
      sa[1129] = -0.02956432f;
      sa[1130] = 0.27520734f;
      sa[1131] = 0.39640462f;
      sa[1132] = -0.16647874f;
      sa[1133] = -0.17613213f;
      sa[1134] = -0.22588032f;
      sa[1135] = -0.2616731f;
      sa[1136] = -0.005548466f;
      sa[1137] = 0.23681606f;
      sa[1138] = 0.004026805f;
      sa[1139] = 0.23556395f;
      sa[1140] = 0.28419125f;
      sa[1141] = -0.1251951f;
      sa[1142] = -0.14916457f;
      sa[1143] = -0.16794215f;
      sa[1144] = -0.20348845f;
      sa[1145] = 0.21436839f;
      sa[1146] = 0.2926929f;
      sa[1147] = 0.056151547f;
      sa[1148] = 0.0038928336f;
      sa[1149] = -0.030208603f;
      sa[1150] = -0.41082022f;
      sa[1151] = -0.4083728f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2060673f;
      sa[1] = -0.08094152f;
      sa[2] = -0.6036762f;
      sa[3] = -1.1818069f;
      sa[4] = 0.023052178f;
      sa[5] = 0.1390068f;
      sa[6] = 1.3366885f;
      sa[7] = -0.71607673f;
      sa[8] = -0.88835156f;
      sa[9] = 0.7945185f;
      sa[10] = -0.11974301f;
      sa[11] = 0.33090043f;
      sa[12] = 0.07367361f;
      sa[13] = -0.05215736f;
      sa[14] = -1.4362053f;
      sa[15] = 1.1507343f;
      sa[16] = 1.546711f;
      sa[17] = -0.5663132f;
      sa[18] = 0.22642863f;
      sa[19] = -0.42997447f;
      sa[20] = 1.1380099f;
      sa[21] = 0.12322024f;
      sa[22] = -0.8166332f;
      sa[23] = 0.7150351f;
      sa[24] = -1.3589729f;
      sa[25] = 0.4242833f;
      sa[26] = -0.30178365f;
      sa[27] = 1.5037172f;
      sa[28] = -1.0843682f;
      sa[29] = -0.44626984f;
      sa[30] = 0.44167838f;
      sa[31] = -0.65590656f;
      sa[32] = -0.904811f;
      sa[33] = -1.5116279f;
      sa[34] = 0.082182325f;
      sa[35] = 1.3577375f;
      sa[36] = -0.32085314f;
      sa[37] = 0.008015225f;
      sa[38] = 0.30268684f;
      sa[39] = 0.8774248f;
      sa[40] = -0.6867234f;
      sa[41] = -1.5053277f;
      sa[42] = -0.98117256f;
      sa[43] = -1.4422961f;
      sa[44] = 0.113608405f;
      sa[45] = -1.2717808f;
      sa[46] = 1.2820003f;
      sa[47] = 1.1679862f;
      sa[48] = -1.3494377f;
      sa[49] = -1.1209439f;
      sa[50] = 0.56152594f;
      sa[51] = -0.3535976f;
      sa[52] = 0.8634264f;
      sa[53] = 0.813213f;
      sa[54] = -0.25617144f;
      sa[55] = 1.1768284f;
      sa[56] = -1.0322394f;
      sa[57] = -1.0247685f;
      sa[58] = 0.0885254f;
      sa[59] = -0.31208703f;
      sa[60] = 1.6870738f;
      sa[61] = -0.6919709f;
      sa[62] = -0.34662303f;
      sa[63] = 0.6738495f;
      sa[64] = 1.3705068f;
      sa[65] = -0.59987855f;
      sa[66] = 0.61357677f;
      sa[67] = 1.5768964f;
      sa[68] = 0.6574527f;
      sa[69] = -1.049004f;
      sa[70] = -1.472066f;
      sa[71] = -0.38339725f;
      sa[72] = -1.3892136f;
      sa[73] = 1.3271646f;
      sa[74] = 1.4358965f;
      sa[75] = -0.1913441f;
      sa[76] = 0.8111173f;
      sa[77] = 0.47170338f;
      sa[78] = -1.444361f;
      sa[79] = 1.0384947f;
      sa[80] = -0.77578974f;
      sa[81] = 0.24296115f;
      sa[82] = 0.8597173f;
      sa[83] = -0.63212854f;
      sa[84] = -1.638881f;
      sa[85] = -1.1920654f;
      sa[86] = 0.35244414f;
      sa[87] = 1.1756012f;
      sa[88] = -1.5775167f;
      sa[89] = -0.6328222f;
      sa[90] = -0.9808914f;
      sa[91] = 1.5223833f;
      sa[92] = -0.42369413f;
      sa[93] = 0.30772644f;
      sa[94] = -1.43759f;
      sa[95] = -0.17999656f;
      sa[96] = -0.9945008f;
      sa[97] = 0.22756623f;
      sa[98] = -0.07939045f;
      sa[99] = 0.39997497f;
      sa[100] = -1.27828f;
      sa[101] = -0.5489843f;
      sa[102] = 1.1533227f;
      sa[103] = 0.118444405f;
      sa[104] = -0.2808077f;
      sa[105] = -0.6207636f;
      sa[106] = 1.4657629f;
      sa[107] = 1.217167f;
      sa[108] = 0.9478835f;
      sa[109] = 0.20427285f;
      sa[110] = 0.76759094f;
      sa[111] = -0.82190603f;
      sa[112] = -1.1622076f;
      sa[113] = 0.35313144f;
      sa[114] = 0.056167256f;
      sa[115] = -0.53301793f;
      sa[116] = 1.196942f;
      sa[117] = 0.098687544f;
      sa[118] = -1.434542f;
      sa[119] = -0.7131007f;
      sa[120] = -0.33367336f;
      sa[121] = 0.98390746f;
      sa[122] = -0.13939807f;
      sa[123] = 0.2662463f;
      sa[124] = -0.74230945f;
      sa[125] = 0.79186404f;
      sa[126] = -1.119932f;
      sa[127] = 0.4185353f;
      sa[128] = -0.9786913f;
      sa[129] = 0.85843366f;
      sa[130] = -0.34467664f;
      sa[131] = 0.92915016f;
      sa[132] = 0.49092135f;
      sa[133] = 0.7449259f;
      sa[134] = 0.58404446f;
      sa[135] = -1.0660979f;
      sa[136] = 0.58834416f;
      sa[137] = -0.6076364f;
      sa[138] = -0.10721489f;
      sa[139] = 1.1621928f;
      sa[140] = -0.5006627f;
      sa[141] = -0.052979376f;
      sa[142] = 0.3332087f;
      sa[143] = -0.70994717f;
      sa[144] = 1.0522733f;
      sa[145] = -0.76511174f;
      sa[146] = -0.0030144083f;
      sa[147] = -0.18229446f;
      sa[148] = -0.84302527f;
      sa[149] = 1.1653283f;
      sa[150] = -1.0270131f;
      sa[151] = -1.7700546f;
      sa[152] = 1.6417685f;
      sa[153] = -0.5265074f;
      sa[154] = 1.4308412f;
      sa[155] = -1.3962233f;
      sa[156] = -1.5208111f;
      sa[157] = -1.0489725f;
      sa[158] = -0.034181383f;
      sa[159] = -0.63115346f;
      sa[160] = 1.3864778f;
      sa[161] = -1.2202727f;
      sa[162] = 1.665158f;
      sa[163] = -0.7827311f;
      sa[164] = 0.853744f;
      sa[165] = -0.40638307f;
      sa[166] = 1.3211985f;
      sa[167] = -1.4372227f;
      sa[168] = 1.0347439f;
      sa[169] = -1.568001f;
      sa[170] = 1.0712153f;
      sa[171] = 0.8945509f;
      sa[172] = 1.4815028f;
      sa[173] = 1.6561018f;
      sa[174] = -0.06961839f;
      sa[175] = 0.050986767f;
      sa[176] = -0.8874626f;
      sa[177] = 0.07981961f;
      sa[178] = -1.090615f;
      sa[179] = -0.052230615f;
      sa[180] = -1.3324027f;
      sa[181] = -1.0686606f;
      sa[182] = 0.28222236f;
      sa[183] = -1.0013398f;
      sa[184] = 1.4935145f;
      sa[185] = 1.3606635f;
      sa[186] = -0.34265897f;
      sa[187] = -0.8630535f;
      sa[188] = -0.5761771f;
      sa[189] = -0.8081584f;
      sa[190] = -1.4605433f;
      sa[191] = -1.1315496f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


