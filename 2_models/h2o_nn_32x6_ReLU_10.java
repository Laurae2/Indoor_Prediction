/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:17.156+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_10 > h2o_nn_32x6_ReLU_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_10", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_10_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_10_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_10_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_10_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(2310038429512640696L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_10_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_10_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_10_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_10_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_10_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_10_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.30792051171310914;
      sa[1] = 0.49228486759543577;
      sa[2] = 0.5838589067246559;
      sa[3] = 0.4623189123524114;
      sa[4] = 0.6549980487511466;
      sa[5] = 0.45442033888948113;
      sa[6] = 0.4058089179905619;
      sa[7] = 0.5764677094693861;
      sa[8] = 0.5931470638138909;
      sa[9] = 0.4929279375273024;
      sa[10] = 0.42876553103272513;
      sa[11] = 0.7746110895473484;
      sa[12] = 0.5857022988950277;
      sa[13] = 0.40825865248793697;
      sa[14] = 0.7778668451083651;
      sa[15] = 0.4760714212265195;
      sa[16] = 0.4167113056489918;
      sa[17] = 0.6375722041969963;
      sa[18] = 0.4193944869605993;
      sa[19] = 0.5561094047784584;
      sa[20] = 0.5171084960659582;
      sa[21] = 0.26147546183322856;
      sa[22] = 0.5919783125398552;
      sa[23] = 0.5770243728791794;
      sa[24] = 0.5552482705250609;
      sa[25] = 0.43221324705533665;
      sa[26] = 0.5087815860980279;
      sa[27] = 0.45148963795477265;
      sa[28] = 0.5685150391196886;
      sa[29] = 0.4184013786010531;
      sa[30] = 0.47327868108073445;
      sa[31] = 0.3376056322749321;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_10_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_10_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.05456891876804707;
      sa[1] = -0.025418017162225564;
      sa[2] = -0.0621744147982338;
      sa[3] = -0.030705638679590495;
      sa[4] = -0.016454627961781307;
      sa[5] = 0.011471994743372722;
    }
  }
}
class h2o_nn_32x6_ReLU_10_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_10_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_10_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.07650779f;
      sa[1] = 0.18471643f;
      sa[2] = 0.15061176f;
      sa[3] = 0.20404346f;
      sa[4] = -0.22030008f;
      sa[5] = -0.283041f;
      sa[6] = -0.049843986f;
      sa[7] = 0.17218083f;
      sa[8] = 0.03557956f;
      sa[9] = -0.02521558f;
      sa[10] = 0.06786569f;
      sa[11] = -0.15487637f;
      sa[12] = 0.05549345f;
      sa[13] = -0.34285682f;
      sa[14] = -0.1566633f;
      sa[15] = -0.103513315f;
      sa[16] = 0.12854664f;
      sa[17] = 0.16515483f;
      sa[18] = 0.04664102f;
      sa[19] = 0.042983178f;
      sa[20] = 0.16305667f;
      sa[21] = -0.3533193f;
      sa[22] = 0.23519608f;
      sa[23] = -0.3708688f;
      sa[24] = 0.24068065f;
      sa[25] = 0.25330967f;
      sa[26] = -0.14019056f;
      sa[27] = 0.41794008f;
      sa[28] = 0.099481106f;
      sa[29] = -0.37830323f;
      sa[30] = -0.289896f;
      sa[31] = -0.14137876f;
      sa[32] = 0.2174998f;
      sa[33] = -0.184914f;
      sa[34] = 0.17306215f;
      sa[35] = -0.004208526f;
      sa[36] = -0.10797287f;
      sa[37] = 0.22989506f;
      sa[38] = -0.02405111f;
      sa[39] = -0.142604f;
      sa[40] = 0.015004174f;
      sa[41] = -0.044882767f;
      sa[42] = -0.1365123f;
      sa[43] = -0.006707502f;
      sa[44] = 0.29877716f;
      sa[45] = -0.28648683f;
      sa[46] = 0.050448056f;
      sa[47] = 0.09142541f;
      sa[48] = 0.28801903f;
      sa[49] = 0.34685612f;
      sa[50] = 0.27812445f;
      sa[51] = -0.30161548f;
      sa[52] = -0.016569754f;
      sa[53] = 0.18523078f;
      sa[54] = 0.21293087f;
      sa[55] = 0.27277347f;
      sa[56] = -0.12616493f;
      sa[57] = -0.24582325f;
      sa[58] = 0.26457527f;
      sa[59] = -0.214024f;
      sa[60] = -0.20619984f;
      sa[61] = 0.24523464f;
      sa[62] = 0.12867454f;
      sa[63] = -0.19686274f;
      sa[64] = 0.18441342f;
      sa[65] = 0.18836161f;
      sa[66] = 0.09388749f;
      sa[67] = 0.12951553f;
      sa[68] = -0.30618298f;
      sa[69] = -0.09301195f;
      sa[70] = -0.14557724f;
      sa[71] = 0.3268398f;
      sa[72] = -0.1643571f;
      sa[73] = 0.19725746f;
      sa[74] = -0.24930851f;
      sa[75] = 0.07741988f;
      sa[76] = -0.12017781f;
      sa[77] = -0.02998612f;
      sa[78] = -0.016501272f;
      sa[79] = 0.23016995f;
      sa[80] = -0.3964927f;
      sa[81] = 0.11938782f;
      sa[82] = 0.0070452644f;
      sa[83] = 0.10224412f;
      sa[84] = -0.05095627f;
      sa[85] = -0.19121519f;
      sa[86] = 0.09931958f;
      sa[87] = 0.19386233f;
      sa[88] = 0.22091869f;
      sa[89] = 0.07845252f;
      sa[90] = -0.10549665f;
      sa[91] = -0.118726164f;
      sa[92] = -0.0016029652f;
      sa[93] = -0.23857981f;
      sa[94] = -0.17102487f;
      sa[95] = -0.3051182f;
      sa[96] = 0.035253875f;
      sa[97] = 0.065864615f;
      sa[98] = 0.019956874f;
      sa[99] = 0.12203821f;
      sa[100] = -0.15794691f;
      sa[101] = -0.26720315f;
      sa[102] = -0.29731572f;
      sa[103] = -0.19427723f;
      sa[104] = -0.04181574f;
      sa[105] = -0.13901767f;
      sa[106] = -0.17828004f;
      sa[107] = 0.3163433f;
      sa[108] = 0.263003f;
      sa[109] = -0.10990261f;
      sa[110] = -0.2652701f;
      sa[111] = 0.0041629765f;
      sa[112] = 0.23190859f;
      sa[113] = 0.22419196f;
      sa[114] = -0.07444154f;
      sa[115] = -0.039434303f;
      sa[116] = -0.28160813f;
      sa[117] = 0.05499258f;
      sa[118] = -0.3131778f;
      sa[119] = -0.022471394f;
      sa[120] = 0.15191999f;
      sa[121] = 0.36084703f;
      sa[122] = 0.32493433f;
      sa[123] = 0.37009504f;
      sa[124] = 0.28857085f;
      sa[125] = 0.335364f;
      sa[126] = -0.2271149f;
      sa[127] = -0.1155127f;
      sa[128] = -0.045591474f;
      sa[129] = 0.07743146f;
      sa[130] = -0.2692392f;
      sa[131] = 0.42724502f;
      sa[132] = 0.14194629f;
      sa[133] = -0.25576958f;
      sa[134] = 0.13769825f;
      sa[135] = 0.18149501f;
      sa[136] = -0.28492248f;
      sa[137] = 0.059851423f;
      sa[138] = 0.23636577f;
      sa[139] = 0.03322386f;
      sa[140] = -0.16945021f;
      sa[141] = -0.029528584f;
      sa[142] = 0.20866725f;
      sa[143] = -0.1525354f;
      sa[144] = 0.32178384f;
      sa[145] = -0.28922868f;
      sa[146] = -0.37322605f;
      sa[147] = -0.046967097f;
      sa[148] = 0.17883651f;
      sa[149] = 0.07979513f;
      sa[150] = 0.29420426f;
      sa[151] = -0.14482032f;
      sa[152] = -0.019216213f;
      sa[153] = 0.279616f;
      sa[154] = 0.26579648f;
      sa[155] = -0.06973562f;
      sa[156] = 0.14915222f;
      sa[157] = -0.27170813f;
      sa[158] = 0.14495668f;
      sa[159] = 0.22016236f;
      sa[160] = 0.06264706f;
      sa[161] = 0.0876213f;
      sa[162] = 0.3516748f;
      sa[163] = -0.23361517f;
      sa[164] = 0.23411524f;
      sa[165] = -0.0140773f;
      sa[166] = 9.877189E-4f;
      sa[167] = -0.04910409f;
      sa[168] = -0.009594962f;
      sa[169] = 0.06936677f;
      sa[170] = 0.15994377f;
      sa[171] = 0.07364138f;
      sa[172] = -0.1396571f;
      sa[173] = -0.19230187f;
      sa[174] = -0.15709062f;
      sa[175] = -0.27472317f;
      sa[176] = 0.086318254f;
      sa[177] = 0.11881903f;
      sa[178] = 0.014648777f;
      sa[179] = 0.21185885f;
      sa[180] = -0.145612f;
      sa[181] = -0.35450855f;
      sa[182] = -0.24647205f;
      sa[183] = 0.1208978f;
      sa[184] = 0.22636725f;
      sa[185] = 0.073480606f;
      sa[186] = -0.34152427f;
      sa[187] = 0.006329053f;
      sa[188] = 0.022353835f;
      sa[189] = 0.115488075f;
      sa[190] = 0.067703485f;
      sa[191] = -0.11584244f;
      sa[192] = -0.049440876f;
      sa[193] = 0.19264294f;
      sa[194] = 0.15409108f;
      sa[195] = 0.3450894f;
      sa[196] = 0.24177259f;
      sa[197] = -0.07075611f;
      sa[198] = 0.111822255f;
      sa[199] = -0.12002699f;
      sa[200] = 0.12294796f;
      sa[201] = -0.23669136f;
      sa[202] = 0.16236623f;
      sa[203] = 0.03217402f;
      sa[204] = -0.28366148f;
      sa[205] = 0.17663164f;
      sa[206] = 0.25667736f;
      sa[207] = 0.10901568f;
      sa[208] = -0.17011899f;
      sa[209] = -0.028933205f;
      sa[210] = -0.31648034f;
      sa[211] = -0.1681235f;
      sa[212] = 0.40155792f;
      sa[213] = -0.33193278f;
      sa[214] = -0.0026834595f;
      sa[215] = -0.04900064f;
      sa[216] = -0.10763188f;
      sa[217] = 0.24026915f;
      sa[218] = -0.03841186f;
      sa[219] = 0.40114218f;
      sa[220] = -0.2684694f;
      sa[221] = -0.01871892f;
      sa[222] = 0.17830467f;
      sa[223] = 0.01403213f;
      sa[224] = 0.10035001f;
      sa[225] = 0.22546227f;
      sa[226] = -0.2727876f;
      sa[227] = -0.16517557f;
      sa[228] = 0.2350528f;
      sa[229] = 0.08592738f;
      sa[230] = 0.27447048f;
      sa[231] = -0.2898001f;
      sa[232] = -0.22606282f;
      sa[233] = 0.10714124f;
      sa[234] = -0.086910374f;
      sa[235] = -0.14976542f;
      sa[236] = 0.24398729f;
      sa[237] = -0.019644594f;
      sa[238] = -0.0675091f;
      sa[239] = 0.16192968f;
      sa[240] = 0.11931577f;
      sa[241] = -0.28620887f;
      sa[242] = -0.24191663f;
      sa[243] = -0.4023814f;
      sa[244] = -0.009345893f;
      sa[245] = -0.034525488f;
      sa[246] = -0.2317941f;
      sa[247] = -0.07471541f;
      sa[248] = 0.26818618f;
      sa[249] = -0.059134237f;
      sa[250] = -0.1320797f;
      sa[251] = -0.2619637f;
      sa[252] = -0.17072143f;
      sa[253] = -0.14513648f;
      sa[254] = -0.20886467f;
      sa[255] = 0.47528177f;
      sa[256] = -0.09120706f;
      sa[257] = 0.42388612f;
      sa[258] = -0.18357952f;
      sa[259] = -0.103758335f;
      sa[260] = -0.11691089f;
      sa[261] = -0.09453008f;
      sa[262] = -0.23216209f;
      sa[263] = 0.2587562f;
      sa[264] = -0.1279046f;
      sa[265] = 0.20739605f;
      sa[266] = -0.2896656f;
      sa[267] = -0.14225093f;
      sa[268] = 0.066679575f;
      sa[269] = 0.025221856f;
      sa[270] = -0.31161734f;
      sa[271] = 0.17516834f;
      sa[272] = -0.052947257f;
      sa[273] = -0.05713543f;
      sa[274] = 0.125416f;
      sa[275] = 0.09882053f;
      sa[276] = 0.12770659f;
      sa[277] = -0.027832335f;
      sa[278] = -0.28665945f;
      sa[279] = 0.15614799f;
      sa[280] = -0.019745303f;
      sa[281] = 0.4026715f;
      sa[282] = 0.12509139f;
      sa[283] = 0.12502083f;
      sa[284] = -0.0017395801f;
      sa[285] = -0.16929245f;
      sa[286] = 0.10291415f;
      sa[287] = -0.031371124f;
      sa[288] = -0.18894924f;
      sa[289] = -0.0997354f;
      sa[290] = -0.14224656f;
      sa[291] = -0.17708407f;
      sa[292] = 0.16358131f;
      sa[293] = -0.08349299f;
      sa[294] = 0.14216009f;
      sa[295] = 0.11991076f;
      sa[296] = 0.070459664f;
      sa[297] = 0.31894857f;
      sa[298] = 0.14250603f;
      sa[299] = -0.16824818f;
      sa[300] = 0.07444102f;
      sa[301] = -0.032569442f;
      sa[302] = 0.25776806f;
      sa[303] = 0.11710633f;
      sa[304] = -0.15849116f;
      sa[305] = 0.026604706f;
      sa[306] = 0.29282445f;
      sa[307] = -0.07770328f;
      sa[308] = 0.054681778f;
      sa[309] = 0.13105176f;
      sa[310] = 0.31537515f;
      sa[311] = 0.2870257f;
      sa[312] = -0.1837607f;
      sa[313] = -0.16292703f;
      sa[314] = -0.10066542f;
      sa[315] = 0.33031294f;
      sa[316] = -0.046910297f;
      sa[317] = -0.09750207f;
      sa[318] = 0.06897304f;
      sa[319] = 0.19934008f;
      sa[320] = -0.090711415f;
      sa[321] = -0.01801252f;
      sa[322] = 0.6634732f;
      sa[323] = -0.0031651638f;
      sa[324] = -0.051773906f;
      sa[325] = 0.123735115f;
      sa[326] = -0.16656312f;
      sa[327] = -0.1752f;
      sa[328] = -0.12514661f;
      sa[329] = 0.14785478f;
      sa[330] = -0.19795655f;
      sa[331] = 0.03553957f;
      sa[332] = -0.15678741f;
      sa[333] = 0.03730399f;
      sa[334] = -0.039683368f;
      sa[335] = 0.51005036f;
      sa[336] = -0.17278565f;
      sa[337] = -0.20818906f;
      sa[338] = 0.27096504f;
      sa[339] = -0.28193152f;
      sa[340] = -0.32739815f;
      sa[341] = -0.5107263f;
      sa[342] = 0.45169908f;
      sa[343] = -0.1611233f;
      sa[344] = -0.1366402f;
      sa[345] = 0.19462384f;
      sa[346] = 0.22104917f;
      sa[347] = -0.30738944f;
      sa[348] = 0.26946852f;
      sa[349] = -0.24317755f;
      sa[350] = -0.13857964f;
      sa[351] = -0.23658942f;
      sa[352] = 0.14914848f;
      sa[353] = -0.12117534f;
      sa[354] = -0.034457613f;
      sa[355] = 0.0051429537f;
      sa[356] = -0.12658012f;
      sa[357] = 0.38928035f;
      sa[358] = -0.53162295f;
      sa[359] = -0.018466912f;
      sa[360] = -0.049200922f;
      sa[361] = 0.050797783f;
      sa[362] = -0.005076074f;
      sa[363] = -0.26532653f;
      sa[364] = -0.100209765f;
      sa[365] = -0.157817f;
      sa[366] = -0.0059128236f;
      sa[367] = -0.2505119f;
      sa[368] = -0.30222872f;
      sa[369] = 0.30856833f;
      sa[370] = -0.23709191f;
      sa[371] = 0.28507712f;
      sa[372] = -0.0770188f;
      sa[373] = 0.29356828f;
      sa[374] = -0.19930752f;
      sa[375] = -0.37422684f;
      sa[376] = -0.15697196f;
      sa[377] = -0.21350722f;
      sa[378] = 0.24682592f;
      sa[379] = 0.20552452f;
      sa[380] = -0.18792288f;
      sa[381] = -0.118124746f;
      sa[382] = -0.09154098f;
      sa[383] = -0.1894554f;
      sa[384] = 7.3710777E-4f;
      sa[385] = 0.0725608f;
      sa[386] = -0.2258816f;
      sa[387] = -0.24639465f;
      sa[388] = 0.05180632f;
      sa[389] = -0.021573449f;
      sa[390] = 0.023013692f;
      sa[391] = -0.157585f;
      sa[392] = 0.033689316f;
      sa[393] = 0.31712028f;
      sa[394] = -0.15213251f;
      sa[395] = 0.3132219f;
      sa[396] = 0.12490953f;
      sa[397] = -0.26158556f;
      sa[398] = 0.1930133f;
      sa[399] = -0.25588208f;
      sa[400] = 0.34260452f;
      sa[401] = 0.36083037f;
      sa[402] = -0.008105114f;
      sa[403] = 0.095618464f;
      sa[404] = 0.19995113f;
      sa[405] = -0.2511474f;
      sa[406] = -0.057433907f;
      sa[407] = 0.0109757f;
      sa[408] = -0.08271615f;
      sa[409] = -0.010062485f;
      sa[410] = 0.03511728f;
      sa[411] = 0.115597144f;
      sa[412] = -0.041498788f;
      sa[413] = 0.021461654f;
      sa[414] = 0.18311608f;
      sa[415] = 0.37390524f;
      sa[416] = -0.08537363f;
      sa[417] = 0.16010015f;
      sa[418] = 0.16001323f;
      sa[419] = 0.20497786f;
      sa[420] = 0.24469687f;
      sa[421] = 0.23336633f;
      sa[422] = 0.24123544f;
      sa[423] = -0.021211667f;
      sa[424] = 0.16756505f;
      sa[425] = 0.034425616f;
      sa[426] = -0.15085888f;
      sa[427] = 0.15123321f;
      sa[428] = -0.24151987f;
      sa[429] = -0.43571913f;
      sa[430] = 0.14887194f;
      sa[431] = 0.010010659f;
      sa[432] = 0.005828382f;
      sa[433] = 0.19140966f;
      sa[434] = 0.35840654f;
      sa[435] = 0.0113988165f;
      sa[436] = -0.19759572f;
      sa[437] = -0.16975664f;
      sa[438] = 0.06325091f;
      sa[439] = 0.034598272f;
      sa[440] = 0.24031393f;
      sa[441] = -0.20236763f;
      sa[442] = 0.11065007f;
      sa[443] = 0.008691868f;
      sa[444] = -0.24945486f;
      sa[445] = 0.06214257f;
      sa[446] = 0.15967444f;
      sa[447] = -0.017173987f;
      sa[448] = 0.20784116f;
      sa[449] = 0.26235163f;
      sa[450] = -0.12979585f;
      sa[451] = 0.053629152f;
      sa[452] = 0.122483894f;
      sa[453] = -0.0543927f;
      sa[454] = -0.14570336f;
      sa[455] = -0.13164467f;
      sa[456] = 0.089760154f;
      sa[457] = 0.08990399f;
      sa[458] = -0.21929665f;
      sa[459] = 0.3469538f;
      sa[460] = 0.1704611f;
      sa[461] = 0.20705892f;
      sa[462] = 0.08217328f;
      sa[463] = 0.11768053f;
      sa[464] = -0.3849701f;
      sa[465] = 0.17839012f;
      sa[466] = -0.042860985f;
      sa[467] = 0.17191568f;
      sa[468] = 0.1564524f;
      sa[469] = 0.26952833f;
      sa[470] = 0.2818837f;
      sa[471] = 0.05424701f;
      sa[472] = 4.815174E-4f;
      sa[473] = -0.1168641f;
      sa[474] = 0.008868545f;
      sa[475] = 0.13413513f;
      sa[476] = 0.24821575f;
      sa[477] = 0.035541773f;
      sa[478] = 0.33381173f;
      sa[479] = -0.08386614f;
      sa[480] = -0.2684901f;
      sa[481] = -0.1992899f;
      sa[482] = -0.2356846f;
      sa[483] = 0.15555562f;
      sa[484] = 0.20024773f;
      sa[485] = 0.2777499f;
      sa[486] = 0.09558115f;
      sa[487] = -0.23896603f;
      sa[488] = -0.21758236f;
      sa[489] = 0.04984099f;
      sa[490] = 0.0073652f;
      sa[491] = -0.3841693f;
      sa[492] = 0.21650046f;
      sa[493] = 0.28969166f;
      sa[494] = -0.13479845f;
      sa[495] = 0.34147224f;
      sa[496] = -0.03337177f;
      sa[497] = 0.008271684f;
      sa[498] = 0.14023916f;
      sa[499] = 0.04192781f;
      sa[500] = -0.058177356f;
      sa[501] = 0.0033142134f;
      sa[502] = 0.27094558f;
      sa[503] = 0.09180253f;
      sa[504] = -0.08747156f;
      sa[505] = -0.101592675f;
      sa[506] = 0.15147331f;
      sa[507] = 0.08342503f;
      sa[508] = 0.26205146f;
      sa[509] = 0.46739852f;
      sa[510] = 0.2967121f;
      sa[511] = 0.06310573f;
      sa[512] = 0.05622086f;
      sa[513] = -0.031227063f;
      sa[514] = 0.2450427f;
      sa[515] = -0.541817f;
      sa[516] = 0.13891627f;
      sa[517] = 0.37691918f;
      sa[518] = 0.21308805f;
      sa[519] = 0.07551246f;
      sa[520] = 0.1626817f;
      sa[521] = 0.3384772f;
      sa[522] = -0.10358365f;
      sa[523] = 0.19986364f;
      sa[524] = 0.21238324f;
      sa[525] = 0.21677016f;
      sa[526] = 0.056912616f;
      sa[527] = 0.12579897f;
      sa[528] = 0.045889292f;
      sa[529] = 0.18843678f;
      sa[530] = -0.22049016f;
      sa[531] = 0.3157489f;
      sa[532] = 0.2485447f;
      sa[533] = 0.334164f;
      sa[534] = 0.4129018f;
      sa[535] = 0.09348388f;
      sa[536] = 0.065023504f;
      sa[537] = -0.35297093f;
      sa[538] = 0.29434347f;
      sa[539] = 0.2648681f;
      sa[540] = -0.12965077f;
      sa[541] = -0.20071273f;
      sa[542] = -0.24382384f;
      sa[543] = 0.27162054f;
      sa[544] = 0.037676413f;
      sa[545] = -0.049656276f;
      sa[546] = -0.038271666f;
      sa[547] = 0.28146702f;
      sa[548] = 0.25193796f;
      sa[549] = 0.06362967f;
      sa[550] = -0.16505498f;
      sa[551] = -0.014537981f;
      sa[552] = -0.07457049f;
      sa[553] = -0.23759334f;
      sa[554] = -0.27835336f;
      sa[555] = -0.12255526f;
      sa[556] = -0.1844635f;
      sa[557] = -0.3068932f;
      sa[558] = -0.24048747f;
      sa[559] = -0.1446265f;
      sa[560] = -0.25722456f;
      sa[561] = -0.094835654f;
      sa[562] = 0.15306982f;
      sa[563] = -0.0180732f;
      sa[564] = 0.088668704f;
      sa[565] = -0.1508535f;
      sa[566] = 0.23674431f;
      sa[567] = -0.3499571f;
      sa[568] = -0.12227909f;
      sa[569] = -0.033134412f;
      sa[570] = -0.1507321f;
      sa[571] = 0.0017198968f;
      sa[572] = 0.15406638f;
      sa[573] = 0.45303717f;
      sa[574] = -0.05571581f;
      sa[575] = -0.54623646f;
      sa[576] = -0.23707451f;
      sa[577] = -0.06735127f;
      sa[578] = 0.07373108f;
      sa[579] = -0.13796248f;
      sa[580] = -0.010780477f;
      sa[581] = -0.31658196f;
      sa[582] = -0.004386136f;
      sa[583] = -0.009871284f;
      sa[584] = 0.18724358f;
      sa[585] = 0.08066578f;
      sa[586] = -0.14843926f;
      sa[587] = -0.010121728f;
      sa[588] = 0.12440472f;
      sa[589] = 0.016485112f;
      sa[590] = 0.066175975f;
      sa[591] = 0.041743793f;
      sa[592] = -0.29641202f;
      sa[593] = -0.31705946f;
      sa[594] = 0.04403104f;
      sa[595] = -0.06733047f;
      sa[596] = 0.34504217f;
      sa[597] = 0.016170291f;
      sa[598] = 0.27015904f;
      sa[599] = -0.031291243f;
      sa[600] = -0.3516838f;
      sa[601] = 0.15748847f;
      sa[602] = -0.024208546f;
      sa[603] = -0.028299168f;
      sa[604] = 0.23876235f;
      sa[605] = 0.15215115f;
      sa[606] = 0.053082004f;
      sa[607] = 0.012826684f;
      sa[608] = 0.12451043f;
      sa[609] = 0.119768605f;
      sa[610] = 0.06900594f;
      sa[611] = -0.1644752f;
      sa[612] = -0.1280107f;
      sa[613] = 0.17717744f;
      sa[614] = 0.13664512f;
      sa[615] = -0.022989392f;
      sa[616] = 0.16497463f;
      sa[617] = -0.14330924f;
      sa[618] = -0.03218069f;
      sa[619] = -0.1759509f;
      sa[620] = -0.08849598f;
      sa[621] = -0.17446485f;
      sa[622] = -0.27960217f;
      sa[623] = -0.5266665f;
      sa[624] = -0.06520195f;
      sa[625] = 0.28969327f;
      sa[626] = -0.04652973f;
      sa[627] = 0.08720016f;
      sa[628] = -0.21515529f;
      sa[629] = 0.036943905f;
      sa[630] = -0.24931909f;
      sa[631] = 0.3883113f;
      sa[632] = 0.097218834f;
      sa[633] = -0.09933948f;
      sa[634] = -0.15501422f;
      sa[635] = 0.04582622f;
      sa[636] = -0.075384565f;
      sa[637] = 0.00924112f;
      sa[638] = -0.20069118f;
      sa[639] = -0.0024688507f;
      sa[640] = -0.12848876f;
      sa[641] = -0.27078217f;
      sa[642] = 0.25429028f;
      sa[643] = -0.46527806f;
      sa[644] = -0.22893165f;
      sa[645] = -0.45399886f;
      sa[646] = 0.38443735f;
      sa[647] = -0.11109679f;
      sa[648] = 0.07511738f;
      sa[649] = -0.1528379f;
      sa[650] = -0.03297222f;
      sa[651] = -0.036615215f;
      sa[652] = 0.09625258f;
      sa[653] = -0.094433755f;
      sa[654] = -0.13349892f;
      sa[655] = -0.18442605f;
      sa[656] = 0.17462382f;
      sa[657] = 0.099091575f;
      sa[658] = -0.21192664f;
      sa[659] = -0.056354746f;
      sa[660] = -0.27844435f;
      sa[661] = -0.078921184f;
      sa[662] = -0.28143078f;
      sa[663] = 0.14572518f;
      sa[664] = -0.21292289f;
      sa[665] = 0.17208612f;
      sa[666] = 0.10874841f;
      sa[667] = -0.42501196f;
      sa[668] = 0.18944731f;
      sa[669] = -0.17773996f;
      sa[670] = 0.061627932f;
      sa[671] = -0.021791637f;
      sa[672] = -0.39197633f;
      sa[673] = 0.22371556f;
      sa[674] = 0.39574543f;
      sa[675] = -0.38151366f;
      sa[676] = -0.15019293f;
      sa[677] = -0.2128021f;
      sa[678] = 0.19437648f;
      sa[679] = -0.09068637f;
      sa[680] = 0.17268631f;
      sa[681] = 0.32252902f;
      sa[682] = -0.17569499f;
      sa[683] = -0.08763551f;
      sa[684] = 0.045185424f;
      sa[685] = 0.12710573f;
      sa[686] = -0.31294537f;
      sa[687] = -0.30636376f;
      sa[688] = -0.23773906f;
      sa[689] = -0.25529245f;
      sa[690] = -0.020737812f;
      sa[691] = 0.067514986f;
      sa[692] = -0.29245114f;
      sa[693] = -0.14827691f;
      sa[694] = 0.4221819f;
      sa[695] = -0.15650237f;
      sa[696] = -0.06186424f;
      sa[697] = -0.15893796f;
      sa[698] = -0.112787984f;
      sa[699] = 0.38678807f;
      sa[700] = 0.18433581f;
      sa[701] = 0.13443579f;
      sa[702] = 0.07100488f;
      sa[703] = -0.07592997f;
      sa[704] = -0.33226156f;
      sa[705] = -0.06660385f;
      sa[706] = -0.14546633f;
      sa[707] = 0.027903615f;
      sa[708] = -0.10392894f;
      sa[709] = -0.2700027f;
      sa[710] = 0.24200578f;
      sa[711] = 0.39514852f;
      sa[712] = -0.02891034f;
      sa[713] = 0.14218083f;
      sa[714] = 0.120117344f;
      sa[715] = 0.06904055f;
      sa[716] = 0.067827314f;
      sa[717] = 0.096360736f;
      sa[718] = 0.21854343f;
      sa[719] = 0.22927439f;
      sa[720] = -0.44583f;
      sa[721] = 0.27845037f;
      sa[722] = -0.0147467395f;
      sa[723] = 0.39242548f;
      sa[724] = 0.018649323f;
      sa[725] = -0.23032418f;
      sa[726] = -0.20321947f;
      sa[727] = -0.38648582f;
      sa[728] = 0.02919901f;
      sa[729] = -0.2159954f;
      sa[730] = -0.057752583f;
      sa[731] = -0.3535969f;
      sa[732] = 0.2014496f;
      sa[733] = 0.29170495f;
      sa[734] = -0.13466813f;
      sa[735] = 0.22218932f;
      sa[736] = 0.008377313f;
      sa[737] = 0.15244238f;
      sa[738] = -0.42479137f;
      sa[739] = -0.36524165f;
      sa[740] = -0.15589106f;
      sa[741] = -0.23928796f;
      sa[742] = 0.14066364f;
      sa[743] = 0.0034208382f;
      sa[744] = 0.17088991f;
      sa[745] = -0.2369918f;
      sa[746] = -0.0010977827f;
      sa[747] = -0.5343169f;
      sa[748] = 2.3729091E-4f;
      sa[749] = -0.12840538f;
      sa[750] = 0.30406436f;
      sa[751] = 0.30873182f;
      sa[752] = 0.044414528f;
      sa[753] = 0.0026667533f;
      sa[754] = -0.11415974f;
      sa[755] = -0.03169293f;
      sa[756] = -0.29405648f;
      sa[757] = 0.33024088f;
      sa[758] = -0.1575717f;
      sa[759] = -0.12818919f;
      sa[760] = -0.2144547f;
      sa[761] = -0.009122295f;
      sa[762] = -0.16322218f;
      sa[763] = 0.08413394f;
      sa[764] = 0.0607316f;
      sa[765] = -0.14616981f;
      sa[766] = -0.20849882f;
      sa[767] = -0.074746214f;
      sa[768] = -0.1571372f;
      sa[769] = -0.24464066f;
      sa[770] = 0.027822534f;
      sa[771] = 0.0960004f;
      sa[772] = 0.07396893f;
      sa[773] = -0.26141554f;
      sa[774] = -0.087828524f;
      sa[775] = 0.32246113f;
      sa[776] = -0.08516172f;
      sa[777] = -0.017823296f;
      sa[778] = 0.11248195f;
      sa[779] = -0.11700539f;
      sa[780] = -0.06669463f;
      sa[781] = -0.08645105f;
      sa[782] = 0.19251978f;
      sa[783] = -0.07619686f;
      sa[784] = -0.1568783f;
      sa[785] = -0.14239697f;
      sa[786] = -0.10062021f;
      sa[787] = -0.1201006f;
      sa[788] = -0.2845618f;
      sa[789] = 0.03166463f;
      sa[790] = 0.076436155f;
      sa[791] = -0.03383544f;
      sa[792] = 0.36510417f;
      sa[793] = -0.1383087f;
      sa[794] = -0.3072266f;
      sa[795] = 0.0058990084f;
      sa[796] = 0.2275082f;
      sa[797] = -0.27823052f;
      sa[798] = -0.31829888f;
      sa[799] = -0.08149336f;
      sa[800] = 0.1688021f;
      sa[801] = 0.06481528f;
      sa[802] = 0.121574566f;
      sa[803] = 0.21749233f;
      sa[804] = 0.031454206f;
      sa[805] = 0.08771951f;
      sa[806] = 0.12368909f;
      sa[807] = 0.23862831f;
      sa[808] = -0.14285357f;
      sa[809] = -0.20970637f;
      sa[810] = 0.17487884f;
      sa[811] = 0.12339895f;
      sa[812] = 0.041753273f;
      sa[813] = -0.34568295f;
      sa[814] = -0.0027597279f;
      sa[815] = -0.05601984f;
      sa[816] = -0.20007384f;
      sa[817] = -0.32343033f;
      sa[818] = -0.059752874f;
      sa[819] = 0.14015864f;
      sa[820] = -0.4396956f;
      sa[821] = -0.27721325f;
      sa[822] = -0.40538663f;
      sa[823] = 0.12397689f;
      sa[824] = 0.18680036f;
      sa[825] = 0.5610925f;
      sa[826] = -0.287932f;
      sa[827] = -0.31070396f;
      sa[828] = 0.12736161f;
      sa[829] = -0.11579255f;
      sa[830] = 0.11008629f;
      sa[831] = 0.55688167f;
      sa[832] = 0.1302778f;
      sa[833] = 0.042386718f;
      sa[834] = 0.15851094f;
      sa[835] = 0.05615499f;
      sa[836] = 0.33355573f;
      sa[837] = -0.22160688f;
      sa[838] = -0.0073099807f;
      sa[839] = -0.23652907f;
      sa[840] = 0.12868384f;
      sa[841] = 0.004420863f;
      sa[842] = 0.05120201f;
      sa[843] = 0.030056922f;
      sa[844] = 0.0328199f;
      sa[845] = 0.10543592f;
      sa[846] = -0.26432082f;
      sa[847] = -0.26721647f;
      sa[848] = 0.2516706f;
      sa[849] = 0.28463998f;
      sa[850] = -1.6178805E-4f;
      sa[851] = 0.21621813f;
      sa[852] = 0.17792903f;
      sa[853] = 0.07021864f;
      sa[854] = 0.21560644f;
      sa[855] = -0.15738241f;
      sa[856] = 0.10144254f;
      sa[857] = -0.14036429f;
      sa[858] = 0.1128796f;
      sa[859] = 0.2203634f;
      sa[860] = 0.41037217f;
      sa[861] = 0.018500468f;
      sa[862] = -0.35791835f;
      sa[863] = -0.1311746f;
      sa[864] = -0.17011535f;
      sa[865] = 0.2423364f;
      sa[866] = -0.2465954f;
      sa[867] = -0.2996715f;
      sa[868] = -0.1498261f;
      sa[869] = 0.2007783f;
      sa[870] = 0.019808842f;
      sa[871] = 0.14962883f;
      sa[872] = 0.07836375f;
      sa[873] = 0.015994327f;
      sa[874] = 0.11735239f;
      sa[875] = -0.2755156f;
      sa[876] = -0.17225522f;
      sa[877] = -0.18197006f;
      sa[878] = 0.14204875f;
      sa[879] = 0.30615994f;
      sa[880] = -0.09214859f;
      sa[881] = -0.10823445f;
      sa[882] = 0.30792913f;
      sa[883] = 0.24236357f;
      sa[884] = -0.17608619f;
      sa[885] = -0.16414069f;
      sa[886] = 0.105892025f;
      sa[887] = -0.060361635f;
      sa[888] = -0.11063653f;
      sa[889] = 0.015820887f;
      sa[890] = -0.21934499f;
      sa[891] = 0.6658859f;
      sa[892] = 0.119079344f;
      sa[893] = 0.2327089f;
      sa[894] = -1.12978334E-4f;
      sa[895] = 0.16478673f;
      sa[896] = -0.20525733f;
      sa[897] = 0.16225065f;
      sa[898] = 0.26359776f;
      sa[899] = 0.32174367f;
      sa[900] = -0.44033745f;
      sa[901] = 0.14435877f;
      sa[902] = -0.15146773f;
      sa[903] = -0.1695616f;
      sa[904] = 0.13186325f;
      sa[905] = 0.18275113f;
      sa[906] = -0.23611596f;
      sa[907] = -0.4123602f;
      sa[908] = -0.28106633f;
      sa[909] = 0.049072657f;
      sa[910] = -0.033096626f;
      sa[911] = -0.45021212f;
      sa[912] = -0.009982134f;
      sa[913] = 0.064157575f;
      sa[914] = -0.2168919f;
      sa[915] = -0.26820508f;
      sa[916] = 0.2894025f;
      sa[917] = -0.017155731f;
      sa[918] = 0.17095202f;
      sa[919] = 0.17936641f;
      sa[920] = 0.14548323f;
      sa[921] = -0.093808025f;
      sa[922] = -0.10829417f;
      sa[923] = -0.33722714f;
      sa[924] = -0.041875366f;
      sa[925] = -0.20306237f;
      sa[926] = 0.05161327f;
      sa[927] = -0.25644898f;
      sa[928] = 0.20398033f;
      sa[929] = 0.05082992f;
      sa[930] = 0.13352351f;
      sa[931] = -0.22162838f;
      sa[932] = 0.08166644f;
      sa[933] = -0.20320186f;
      sa[934] = 0.24060898f;
      sa[935] = -0.15982738f;
      sa[936] = -0.007905653f;
      sa[937] = 0.13380137f;
      sa[938] = -0.19905493f;
      sa[939] = -0.097094305f;
      sa[940] = -0.08343181f;
      sa[941] = -0.29512012f;
      sa[942] = -0.23750895f;
      sa[943] = -0.20704551f;
      sa[944] = -0.20293179f;
      sa[945] = 0.0043280255f;
      sa[946] = 0.12893721f;
      sa[947] = 0.24681373f;
      sa[948] = 0.14430392f;
      sa[949] = -0.121118985f;
      sa[950] = 0.17448208f;
      sa[951] = 0.0047873193f;
      sa[952] = -0.2221039f;
      sa[953] = -0.19487295f;
      sa[954] = -0.22865692f;
      sa[955] = 0.16830873f;
      sa[956] = 0.007983217f;
      sa[957] = 0.019373674f;
      sa[958] = 0.095554814f;
      sa[959] = -0.12426606f;
      sa[960] = 0.24864702f;
      sa[961] = -0.06741763f;
      sa[962] = -0.046004105f;
      sa[963] = 0.016597738f;
      sa[964] = -0.13580082f;
      sa[965] = 0.2838858f;
      sa[966] = -0.07435622f;
      sa[967] = -0.1850887f;
      sa[968] = 0.12501173f;
      sa[969] = 0.012816804f;
      sa[970] = 0.41233313f;
      sa[971] = 0.10051357f;
      sa[972] = -0.29270732f;
      sa[973] = -0.19954301f;
      sa[974] = -0.094344325f;
      sa[975] = -0.22653693f;
      sa[976] = -0.16043194f;
      sa[977] = 0.007899706f;
      sa[978] = -0.14396863f;
      sa[979] = 0.14482154f;
      sa[980] = 0.21323559f;
      sa[981] = -0.240993f;
      sa[982] = 0.034018666f;
      sa[983] = 0.045342967f;
      sa[984] = -0.30070344f;
      sa[985] = 0.05531373f;
      sa[986] = -0.3204756f;
      sa[987] = -0.0020526738f;
      sa[988] = 0.21341035f;
      sa[989] = 0.16087651f;
      sa[990] = 0.22618915f;
      sa[991] = -0.23829907f;
      sa[992] = -0.17232653f;
      sa[993] = -0.04229388f;
      sa[994] = -0.16079211f;
      sa[995] = -0.335141f;
      sa[996] = 0.27045423f;
      sa[997] = 0.15908855f;
      sa[998] = 0.05445021f;
      sa[999] = -0.17919762f;
      sa[1000] = 0.03785599f;
      sa[1001] = 0.19701274f;
      sa[1002] = 0.25604826f;
      sa[1003] = -0.09040374f;
      sa[1004] = 0.16659902f;
      sa[1005] = -0.16646159f;
      sa[1006] = -0.3985846f;
      sa[1007] = -0.019456422f;
      sa[1008] = 0.30114684f;
      sa[1009] = 0.15706614f;
      sa[1010] = -0.07881248f;
      sa[1011] = 0.55216306f;
      sa[1012] = 0.017448047f;
      sa[1013] = 0.2601559f;
      sa[1014] = 0.3230473f;
      sa[1015] = -0.22994928f;
      sa[1016] = 0.21699841f;
      sa[1017] = 0.1188986f;
      sa[1018] = -0.067636386f;
      sa[1019] = -0.12243888f;
      sa[1020] = -0.27293506f;
      sa[1021] = 0.08119819f;
      sa[1022] = 0.16642079f;
      sa[1023] = 0.13930067f;
      sa[1024] = -0.048851702f;
      sa[1025] = 0.2123031f;
      sa[1026] = 0.08981361f;
      sa[1027] = 0.2072924f;
      sa[1028] = 0.22984302f;
      sa[1029] = -0.053085197f;
      sa[1030] = -0.19555008f;
      sa[1031] = 0.09937036f;
      sa[1032] = -0.23723975f;
      sa[1033] = 0.025232354f;
      sa[1034] = -0.045339894f;
      sa[1035] = 0.011081608f;
      sa[1036] = 0.2468956f;
      sa[1037] = 0.029239526f;
      sa[1038] = -0.13635221f;
      sa[1039] = 0.30996913f;
      sa[1040] = 0.028130356f;
      sa[1041] = 0.17104208f;
      sa[1042] = -0.15525976f;
      sa[1043] = -0.053287577f;
      sa[1044] = 0.22352487f;
      sa[1045] = 0.2510443f;
      sa[1046] = -0.09685306f;
      sa[1047] = -0.13494894f;
      sa[1048] = 0.2050414f;
      sa[1049] = 0.035843793f;
      sa[1050] = 0.059762582f;
      sa[1051] = -0.19622685f;
      sa[1052] = 0.22666886f;
      sa[1053] = 0.2913012f;
      sa[1054] = 0.4018142f;
      sa[1055] = 0.08410953f;
      sa[1056] = 0.100754604f;
      sa[1057] = -0.1816874f;
      sa[1058] = 0.09341017f;
      sa[1059] = -0.40340894f;
      sa[1060] = -0.28586718f;
      sa[1061] = 0.08169394f;
      sa[1062] = -0.05799996f;
      sa[1063] = 0.08548185f;
      sa[1064] = -0.0137031535f;
      sa[1065] = -0.052135304f;
      sa[1066] = 0.095452785f;
      sa[1067] = -0.36828676f;
      sa[1068] = -0.17180017f;
      sa[1069] = 0.44476965f;
      sa[1070] = -0.020545777f;
      sa[1071] = 0.052800875f;
      sa[1072] = -0.26073125f;
      sa[1073] = 0.15373498f;
      sa[1074] = 0.20291391f;
      sa[1075] = -0.19495606f;
      sa[1076] = -0.26762617f;
      sa[1077] = 0.08518382f;
      sa[1078] = -0.23838696f;
      sa[1079] = 0.13064836f;
      sa[1080] = 0.199178f;
      sa[1081] = 0.20481513f;
      sa[1082] = -0.33706883f;
      sa[1083] = -0.16325887f;
      sa[1084] = 0.13670799f;
      sa[1085] = -0.30491588f;
      sa[1086] = -0.338205f;
      sa[1087] = -0.32337695f;
      sa[1088] = -0.047160193f;
      sa[1089] = -0.03399393f;
      sa[1090] = -0.232797f;
      sa[1091] = -0.017584603f;
      sa[1092] = -0.06831434f;
      sa[1093] = -0.24907885f;
      sa[1094] = 0.13899559f;
      sa[1095] = -0.21403642f;
      sa[1096] = 0.09439155f;
      sa[1097] = -0.1842973f;
      sa[1098] = 0.019758187f;
      sa[1099] = 0.19583657f;
      sa[1100] = -9.7147207E-4f;
      sa[1101] = 0.1452518f;
      sa[1102] = -0.07225848f;
      sa[1103] = 0.23730293f;
      sa[1104] = -0.4260443f;
      sa[1105] = -0.11576504f;
      sa[1106] = -0.052579317f;
      sa[1107] = 0.16148062f;
      sa[1108] = -0.15404578f;
      sa[1109] = 0.21071117f;
      sa[1110] = 0.09188655f;
      sa[1111] = -0.32955244f;
      sa[1112] = 0.19563457f;
      sa[1113] = 0.034884945f;
      sa[1114] = 0.23255903f;
      sa[1115] = 0.18709159f;
      sa[1116] = -0.148399f;
      sa[1117] = 0.10327158f;
      sa[1118] = -0.13227575f;
      sa[1119] = 0.049995672f;
      sa[1120] = 0.20288584f;
      sa[1121] = 0.32880133f;
      sa[1122] = 0.24892254f;
      sa[1123] = -0.07579229f;
      sa[1124] = 0.014924809f;
      sa[1125] = -0.12447863f;
      sa[1126] = 0.10715118f;
      sa[1127] = 0.10465173f;
      sa[1128] = -0.03516022f;
      sa[1129] = 0.026052838f;
      sa[1130] = 0.11541166f;
      sa[1131] = 0.25913772f;
      sa[1132] = -0.10390588f;
      sa[1133] = -0.076250605f;
      sa[1134] = -0.048717383f;
      sa[1135] = -0.26489973f;
      sa[1136] = -0.10311162f;
      sa[1137] = 0.10620452f;
      sa[1138] = -0.20385313f;
      sa[1139] = 0.1082971f;
      sa[1140] = 0.3218556f;
      sa[1141] = -0.12596434f;
      sa[1142] = 0.019587886f;
      sa[1143] = -0.063607164f;
      sa[1144] = -0.25013152f;
      sa[1145] = 0.19033293f;
      sa[1146] = 0.39118516f;
      sa[1147] = 0.0028481663f;
      sa[1148] = -0.039201725f;
      sa[1149] = 7.1615714E-4f;
      sa[1150] = -0.32680073f;
      sa[1151] = -0.313873f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_10_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_10_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2616725f;
      sa[1] = -0.19450936f;
      sa[2] = -0.6972781f;
      sa[3] = -1.0059749f;
      sa[4] = 0.022014081f;
      sa[5] = 0.19064055f;
      sa[6] = 1.2787745f;
      sa[7] = -0.75820726f;
      sa[8] = -0.98690164f;
      sa[9] = 0.6893383f;
      sa[10] = -0.1833611f;
      sa[11] = 0.26382974f;
      sa[12] = 0.07485655f;
      sa[13] = 0.03672307f;
      sa[14] = -1.3731866f;
      sa[15] = 1.1924711f;
      sa[16] = 1.5649039f;
      sa[17] = -0.4057122f;
      sa[18] = 0.18157667f;
      sa[19] = -0.6041943f;
      sa[20] = 1.1897494f;
      sa[21] = 0.13131309f;
      sa[22] = -0.9510754f;
      sa[23] = 0.8101137f;
      sa[24] = -1.4169955f;
      sa[25] = 0.5181796f;
      sa[26] = -0.21926586f;
      sa[27] = 1.45126f;
      sa[28] = -1.3600726f;
      sa[29] = -0.5513528f;
      sa[30] = 0.41558963f;
      sa[31] = -0.61297816f;
      sa[32] = -1.2188153f;
      sa[33] = -1.5266793f;
      sa[34] = -0.041989405f;
      sa[35] = 1.3930837f;
      sa[36] = -0.31546152f;
      sa[37] = -0.029574802f;
      sa[38] = 0.21297072f;
      sa[39] = 0.89950734f;
      sa[40] = -0.7394618f;
      sa[41] = -1.4454721f;
      sa[42] = -1.1797594f;
      sa[43] = -1.4642749f;
      sa[44] = -0.010238602f;
      sa[45] = -1.3741801f;
      sa[46] = 1.1506758f;
      sa[47] = 1.2699267f;
      sa[48] = -1.3175665f;
      sa[49] = -1.1499581f;
      sa[50] = 0.4145051f;
      sa[51] = -0.33310834f;
      sa[52] = 0.88834906f;
      sa[53] = 0.65757763f;
      sa[54] = -0.24149951f;
      sa[55] = 1.1578488f;
      sa[56] = -1.0484414f;
      sa[57] = -1.2081926f;
      sa[58] = 0.040634394f;
      sa[59] = -0.25154474f;
      sa[60] = 1.383125f;
      sa[61] = -0.65323883f;
      sa[62] = -0.4053545f;
      sa[63] = 0.6492425f;
      sa[64] = 1.3083413f;
      sa[65] = -0.5988094f;
      sa[66] = 0.6318741f;
      sa[67] = 1.4328804f;
      sa[68] = 0.6629385f;
      sa[69] = -1.1175636f;
      sa[70] = -1.5337073f;
      sa[71] = -0.5270673f;
      sa[72] = -1.4127709f;
      sa[73] = 1.2766662f;
      sa[74] = 1.5160639f;
      sa[75] = -0.1664195f;
      sa[76] = 0.9168686f;
      sa[77] = 0.40242362f;
      sa[78] = -1.5540935f;
      sa[79] = 0.9575142f;
      sa[80] = -0.8472927f;
      sa[81] = -0.28376156f;
      sa[82] = 0.8127678f;
      sa[83] = -0.63474584f;
      sa[84] = -1.721601f;
      sa[85] = -1.2621268f;
      sa[86] = 0.33732063f;
      sa[87] = 1.078593f;
      sa[88] = -1.6705259f;
      sa[89] = -0.86275345f;
      sa[90] = -1.2562766f;
      sa[91] = 1.5289861f;
      sa[92] = -0.36478427f;
      sa[93] = 0.32208785f;
      sa[94] = -1.5575421f;
      sa[95] = -0.20353033f;
      sa[96] = -1.0317621f;
      sa[97] = 0.20850532f;
      sa[98] = -0.14194106f;
      sa[99] = 0.32153267f;
      sa[100] = -1.3340175f;
      sa[101] = -0.51107645f;
      sa[102] = 1.1738696f;
      sa[103] = 0.08237835f;
      sa[104] = -0.22287996f;
      sa[105] = -0.68756574f;
      sa[106] = 1.3296248f;
      sa[107] = 1.270047f;
      sa[108] = 0.79955256f;
      sa[109] = 0.20034155f;
      sa[110] = 0.7400315f;
      sa[111] = -0.91688526f;
      sa[112] = -1.1587231f;
      sa[113] = 0.26073036f;
      sa[114] = -0.14280151f;
      sa[115] = -0.5313863f;
      sa[116] = 1.2028939f;
      sa[117] = 0.093040176f;
      sa[118] = -1.8054911f;
      sa[119] = -0.7708936f;
      sa[120] = -0.3415312f;
      sa[121] = 1.0798547f;
      sa[122] = -0.16308133f;
      sa[123] = 0.34030572f;
      sa[124] = -0.7532011f;
      sa[125] = 0.7820066f;
      sa[126] = -1.1910849f;
      sa[127] = 0.38584173f;
      sa[128] = -0.9846178f;
      sa[129] = 0.75709504f;
      sa[130] = -0.37906972f;
      sa[131] = 0.8640787f;
      sa[132] = 0.43537915f;
      sa[133] = 0.6075852f;
      sa[134] = 0.4882523f;
      sa[135] = -1.1375932f;
      sa[136] = 0.5670227f;
      sa[137] = -0.63841766f;
      sa[138] = -0.098904416f;
      sa[139] = 1.1612874f;
      sa[140] = -0.4585357f;
      sa[141] = -0.27445287f;
      sa[142] = 0.281962f;
      sa[143] = -0.885196f;
      sa[144] = 0.9743838f;
      sa[145] = -0.7843047f;
      sa[146] = 0.06801591f;
      sa[147] = -0.18231945f;
      sa[148] = -0.9595101f;
      sa[149] = 1.084705f;
      sa[150] = -0.99802315f;
      sa[151] = -1.6242405f;
      sa[152] = 1.5942035f;
      sa[153] = -0.5649421f;
      sa[154] = 1.3490983f;
      sa[155] = -1.5257694f;
      sa[156] = -1.4587245f;
      sa[157] = -1.1006817f;
      sa[158] = -0.1718014f;
      sa[159] = -0.6462187f;
      sa[160] = 1.3729846f;
      sa[161] = -1.1719557f;
      sa[162] = 1.6115389f;
      sa[163] = -0.7126765f;
      sa[164] = 0.8119991f;
      sa[165] = -0.4612075f;
      sa[166] = 1.3338614f;
      sa[167] = -1.384317f;
      sa[168] = 1.0627459f;
      sa[169] = -1.5597585f;
      sa[170] = 1.1128383f;
      sa[171] = 0.8382903f;
      sa[172] = 1.4421352f;
      sa[173] = 1.5489316f;
      sa[174] = -0.10374597f;
      sa[175] = -0.007248986f;
      sa[176] = -0.80254966f;
      sa[177] = 0.08906558f;
      sa[178] = -1.1399702f;
      sa[179] = -0.11647629f;
      sa[180] = -1.4321809f;
      sa[181] = -1.0371953f;
      sa[182] = 0.27273f;
      sa[183] = -1.0281149f;
      sa[184] = 1.4998088f;
      sa[185] = 1.2179012f;
      sa[186] = -0.43938097f;
      sa[187] = -1.0418203f;
      sa[188] = -0.5479292f;
      sa[189] = -0.7109724f;
      sa[190] = -1.3784022f;
      sa[191] = -1.0883524f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_10_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_10_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_10_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


