/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:41.826+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_08

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_08 > h2o_nn_32x6_ReLU_08.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_08.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_08", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_08 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_08_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_08_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_08_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_08.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_08_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_08() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6716597644152166480L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_08_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_08_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_08_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_08_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_08_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_08_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_08_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_08_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_08_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3591385827556457;
      sa[1] = 0.46253159009389794;
      sa[2] = 0.5093804354225435;
      sa[3] = 0.38917710959898577;
      sa[4] = 0.4943211023007055;
      sa[5] = 0.49337319173320865;
      sa[6] = 0.49434267091193373;
      sa[7] = 0.3810711429209699;
      sa[8] = 0.5494516558491506;
      sa[9] = 0.48404436479635454;
      sa[10] = 0.4657790884464778;
      sa[11] = 0.618034937832639;
      sa[12] = 0.6791674896324562;
      sa[13] = 0.4825286530347466;
      sa[14] = 0.6329963729985209;
      sa[15] = 0.534318081689787;
      sa[16] = 0.44913540678048974;
      sa[17] = 0.5588944716040978;
      sa[18] = 0.44783665342699625;
      sa[19] = 0.5386750032626632;
      sa[20] = 0.6196694835485057;
      sa[21] = 0.4503103775216368;
      sa[22] = 0.456231316686637;
      sa[23] = 0.5093834753828229;
      sa[24] = 0.5154823261125645;
      sa[25] = 0.5482168925023169;
      sa[26] = 0.5056495049909133;
      sa[27] = 0.5101716658178725;
      sa[28] = 0.514046939303356;
      sa[29] = 0.5616609808115384;
      sa[30] = 0.4309328352930631;
      sa[31] = 0.4771210104246577;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_08_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_08_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.002809837352968442;
      sa[1] = -0.020095175576152983;
      sa[2] = -0.036983745138443075;
      sa[3] = 8.299043638663319E-4;
      sa[4] = -0.06265662424121796;
      sa[5] = 0.028669759983695035;
    }
  }
}
class h2o_nn_32x6_ReLU_08_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_08_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_08_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.029110022f;
      sa[1] = 0.17583843f;
      sa[2] = 0.110815324f;
      sa[3] = 0.17685993f;
      sa[4] = -0.20554566f;
      sa[5] = -0.26498088f;
      sa[6] = -0.08259211f;
      sa[7] = 0.21372496f;
      sa[8] = 0.08139103f;
      sa[9] = -0.19695309f;
      sa[10] = -0.13011684f;
      sa[11] = -0.21294665f;
      sa[12] = -0.0012901294f;
      sa[13] = -0.3453552f;
      sa[14] = -0.22372277f;
      sa[15] = -0.09749579f;
      sa[16] = 0.06545655f;
      sa[17] = 0.09875115f;
      sa[18] = -0.1517711f;
      sa[19] = 0.2133135f;
      sa[20] = 0.16193935f;
      sa[21] = -0.3300132f;
      sa[22] = 0.2093652f;
      sa[23] = -0.14102447f;
      sa[24] = 0.19542718f;
      sa[25] = 0.18109207f;
      sa[26] = -0.20539272f;
      sa[27] = 0.31761044f;
      sa[28] = 0.1473688f;
      sa[29] = -0.33937985f;
      sa[30] = -0.25066245f;
      sa[31] = 0.02688667f;
      sa[32] = 0.21958932f;
      sa[33] = -0.18126152f;
      sa[34] = 0.07048858f;
      sa[35] = -0.10900469f;
      sa[36] = 0.06512683f;
      sa[37] = 0.19964083f;
      sa[38] = -0.04759494f;
      sa[39] = 0.20745493f;
      sa[40] = -0.07462277f;
      sa[41] = -0.13282385f;
      sa[42] = -0.21225251f;
      sa[43] = -0.16657017f;
      sa[44] = 0.31325316f;
      sa[45] = -0.2655768f;
      sa[46] = 0.047119126f;
      sa[47] = 0.019933712f;
      sa[48] = 0.2292806f;
      sa[49] = 0.27326095f;
      sa[50] = 0.20256205f;
      sa[51] = -0.433988f;
      sa[52] = -0.13477106f;
      sa[53] = 0.116010495f;
      sa[54] = 0.24529998f;
      sa[55] = 0.24431516f;
      sa[56] = -0.1845547f;
      sa[57] = -0.3482664f;
      sa[58] = 0.20155685f;
      sa[59] = -0.28954652f;
      sa[60] = -0.14854744f;
      sa[61] = 0.15684137f;
      sa[62] = 0.12422327f;
      sa[63] = -0.23898199f;
      sa[64] = 0.11131126f;
      sa[65] = 0.050947722f;
      sa[66] = -0.016931891f;
      sa[67] = -0.0152072f;
      sa[68] = -0.09139325f;
      sa[69] = -0.1105169f;
      sa[70] = -0.09724239f;
      sa[71] = 0.3990545f;
      sa[72] = -0.18079953f;
      sa[73] = 0.2535901f;
      sa[74] = -0.19666515f;
      sa[75] = -0.048880033f;
      sa[76] = -0.127326f;
      sa[77] = -0.040072285f;
      sa[78] = -0.022694627f;
      sa[79] = 0.25373715f;
      sa[80] = -0.30908963f;
      sa[81] = -0.017336464f;
      sa[82] = -0.007703681f;
      sa[83] = 0.17446469f;
      sa[84] = -0.051832594f;
      sa[85] = -0.2040871f;
      sa[86] = 0.08414274f;
      sa[87] = 0.31740966f;
      sa[88] = 0.24821869f;
      sa[89] = 0.10319935f;
      sa[90] = -0.14810146f;
      sa[91] = -0.00905423f;
      sa[92] = 0.1011639f;
      sa[93] = -0.14857458f;
      sa[94] = -0.14517699f;
      sa[95] = -0.1288551f;
      sa[96] = 0.075035885f;
      sa[97] = 0.061422326f;
      sa[98] = 0.124774806f;
      sa[99] = 0.051610965f;
      sa[100] = -0.05834464f;
      sa[101] = -0.15749475f;
      sa[102] = -0.24405359f;
      sa[103] = -0.0068367803f;
      sa[104] = -0.04662064f;
      sa[105] = 0.011214104f;
      sa[106] = -0.23428214f;
      sa[107] = 0.19194417f;
      sa[108] = 0.2691223f;
      sa[109] = -0.12190281f;
      sa[110] = -0.19358197f;
      sa[111] = 0.03964965f;
      sa[112] = 0.15537037f;
      sa[113] = 0.070645206f;
      sa[114] = -0.14203936f;
      sa[115] = 0.012305936f;
      sa[116] = -0.18749663f;
      sa[117] = 0.15650658f;
      sa[118] = -0.22894199f;
      sa[119] = 0.16165496f;
      sa[120] = 0.23853596f;
      sa[121] = 0.26981407f;
      sa[122] = 0.2823822f;
      sa[123] = 0.37632248f;
      sa[124] = 0.27350172f;
      sa[125] = 0.4015329f;
      sa[126] = -0.27403626f;
      sa[127] = -0.4286618f;
      sa[128] = 0.11903091f;
      sa[129] = 0.2031239f;
      sa[130] = -0.11762129f;
      sa[131] = 0.26819387f;
      sa[132] = 0.12930757f;
      sa[133] = -0.2561872f;
      sa[134] = 0.036857236f;
      sa[135] = -0.23418857f;
      sa[136] = -0.19715567f;
      sa[137] = 0.054080065f;
      sa[138] = 0.19525325f;
      sa[139] = 0.105202466f;
      sa[140] = -0.12259224f;
      sa[141] = -0.051209133f;
      sa[142] = 0.14644878f;
      sa[143] = -0.22080302f;
      sa[144] = 0.24596074f;
      sa[145] = -0.26856333f;
      sa[146] = -0.39943933f;
      sa[147] = 0.09077054f;
      sa[148] = 0.2182665f;
      sa[149] = 0.123223074f;
      sa[150] = 0.310501f;
      sa[151] = -0.12217088f;
      sa[152] = -0.025250262f;
      sa[153] = 0.2352338f;
      sa[154] = 0.17130384f;
      sa[155] = -0.12815401f;
      sa[156] = 0.07211191f;
      sa[157] = -0.27651274f;
      sa[158] = 0.049295343f;
      sa[159] = 0.08848476f;
      sa[160] = -0.06812841f;
      sa[161] = 0.03773809f;
      sa[162] = 0.061994992f;
      sa[163] = -0.29169765f;
      sa[164] = 0.23238552f;
      sa[165] = 0.040504567f;
      sa[166] = 0.007150282f;
      sa[167] = 0.097758636f;
      sa[168] = 0.03243647f;
      sa[169] = 0.23155965f;
      sa[170] = 0.102597415f;
      sa[171] = -0.009446073f;
      sa[172] = -0.11089611f;
      sa[173] = -0.16444293f;
      sa[174] = -0.09903782f;
      sa[175] = -0.23507474f;
      sa[176] = -0.0028158643f;
      sa[177] = 0.07808896f;
      sa[178] = -0.081197135f;
      sa[179] = 0.16957457f;
      sa[180] = -0.061204925f;
      sa[181] = -0.42691788f;
      sa[182] = -0.21818061f;
      sa[183] = 0.48160085f;
      sa[184] = 0.2249411f;
      sa[185] = 0.08500665f;
      sa[186] = -0.34399012f;
      sa[187] = -0.05917761f;
      sa[188] = -9.574041E-4f;
      sa[189] = 0.041000765f;
      sa[190] = 0.004544352f;
      sa[191] = -0.41288337f;
      sa[192] = -0.14120406f;
      sa[193] = 0.14118803f;
      sa[194] = 0.05617346f;
      sa[195] = 0.07106786f;
      sa[196] = 0.10856578f;
      sa[197] = -0.2173357f;
      sa[198] = 0.22459932f;
      sa[199] = -0.07668194f;
      sa[200] = 0.008246656f;
      sa[201] = -0.3031492f;
      sa[202] = 0.115509324f;
      sa[203] = -0.12157602f;
      sa[204] = -0.22589272f;
      sa[205] = 0.15856384f;
      sa[206] = 0.34721306f;
      sa[207] = 0.054183125f;
      sa[208] = -0.2854593f;
      sa[209] = -0.12409504f;
      sa[210] = -0.34072486f;
      sa[211] = -0.34617013f;
      sa[212] = 0.34541517f;
      sa[213] = -0.47617367f;
      sa[214] = -0.012458354f;
      sa[215] = 0.002625824f;
      sa[216] = 0.0046173637f;
      sa[217] = 0.16127245f;
      sa[218] = -0.11198259f;
      sa[219] = 0.37734932f;
      sa[220] = -0.283793f;
      sa[221] = 0.004091054f;
      sa[222] = 0.14188854f;
      sa[223] = -0.09816709f;
      sa[224] = 0.09546428f;
      sa[225] = 0.11613907f;
      sa[226] = -0.21526355f;
      sa[227] = 0.0061293347f;
      sa[228] = 0.0921074f;
      sa[229] = 0.067437515f;
      sa[230] = 0.21306542f;
      sa[231] = -0.35138676f;
      sa[232] = -0.19993713f;
      sa[233] = 0.0069452296f;
      sa[234] = 0.06936245f;
      sa[235] = -0.13716656f;
      sa[236] = -0.088065624f;
      sa[237] = -0.29827052f;
      sa[238] = -0.26854765f;
      sa[239] = 0.01562489f;
      sa[240] = 0.05823558f;
      sa[241] = -0.23793404f;
      sa[242] = -0.09052933f;
      sa[243] = -0.18384223f;
      sa[244] = -0.22468334f;
      sa[245] = -0.16913743f;
      sa[246] = -0.26639742f;
      sa[247] = -0.1443397f;
      sa[248] = 0.28722486f;
      sa[249] = 0.034140807f;
      sa[250] = -0.13686916f;
      sa[251] = -0.15539555f;
      sa[252] = -0.2940587f;
      sa[253] = -0.044101f;
      sa[254] = -0.04842038f;
      sa[255] = 0.17748725f;
      sa[256] = -0.23932457f;
      sa[257] = 0.25098926f;
      sa[258] = -0.28027263f;
      sa[259] = -0.2008512f;
      sa[260] = -0.18941909f;
      sa[261] = -0.13486448f;
      sa[262] = -0.086854495f;
      sa[263] = 0.34384736f;
      sa[264] = -0.12490193f;
      sa[265] = 0.08709673f;
      sa[266] = -0.24874324f;
      sa[267] = -0.25300968f;
      sa[268] = 0.29052636f;
      sa[269] = -0.101116195f;
      sa[270] = -0.15347373f;
      sa[271] = 0.19914182f;
      sa[272] = -0.12055919f;
      sa[273] = -0.20809849f;
      sa[274] = 0.06366488f;
      sa[275] = -0.120193735f;
      sa[276] = 0.2802547f;
      sa[277] = -0.1541739f;
      sa[278] = -0.23856299f;
      sa[279] = 0.121463366f;
      sa[280] = -0.16871653f;
      sa[281] = 0.22608772f;
      sa[282] = -0.08784518f;
      sa[283] = -0.113151155f;
      sa[284] = 0.007304227f;
      sa[285] = -0.14555195f;
      sa[286] = 0.17320885f;
      sa[287] = 0.019814909f;
      sa[288] = -0.16845137f;
      sa[289] = -0.12119561f;
      sa[290] = -0.14289655f;
      sa[291] = -0.14493589f;
      sa[292] = 0.18926866f;
      sa[293] = -0.10803415f;
      sa[294] = 0.094505206f;
      sa[295] = 0.1675522f;
      sa[296] = 0.16120955f;
      sa[297] = 0.18780443f;
      sa[298] = -0.01980281f;
      sa[299] = -0.203119f;
      sa[300] = -0.06433817f;
      sa[301] = -0.13309033f;
      sa[302] = 0.08363969f;
      sa[303] = -0.023809578f;
      sa[304] = -0.22338678f;
      sa[305] = -0.07008367f;
      sa[306] = 0.17522098f;
      sa[307] = -0.1161053f;
      sa[308] = 0.10986068f;
      sa[309] = 0.23173606f;
      sa[310] = 0.3251316f;
      sa[311] = 0.38098335f;
      sa[312] = -0.28625357f;
      sa[313] = -0.18982121f;
      sa[314] = -0.15957615f;
      sa[315] = 0.21151805f;
      sa[316] = -0.03832336f;
      sa[317] = -0.060304847f;
      sa[318] = 0.058555063f;
      sa[319] = 0.26164487f;
      sa[320] = -0.17863724f;
      sa[321] = 0.017550757f;
      sa[322] = 0.47893462f;
      sa[323] = -0.0034341845f;
      sa[324] = -0.050340176f;
      sa[325] = 0.14401492f;
      sa[326] = -0.21262391f;
      sa[327] = 0.0017839463f;
      sa[328] = -0.121736825f;
      sa[329] = 0.19204867f;
      sa[330] = -0.19540359f;
      sa[331] = -0.042391f;
      sa[332] = -0.24419579f;
      sa[333] = 0.07150476f;
      sa[334] = -0.059759885f;
      sa[335] = 0.36100924f;
      sa[336] = -0.14544785f;
      sa[337] = -0.15066803f;
      sa[338] = 0.30890417f;
      sa[339] = -0.24449621f;
      sa[340] = -0.35135284f;
      sa[341] = -0.35125646f;
      sa[342] = 0.28075397f;
      sa[343] = -0.028205862f;
      sa[344] = -0.18916634f;
      sa[345] = 0.1274729f;
      sa[346] = 0.16810973f;
      sa[347] = -0.17781135f;
      sa[348] = 0.32227352f;
      sa[349] = -0.2357879f;
      sa[350] = -0.16549672f;
      sa[351] = -0.15139343f;
      sa[352] = 0.14955044f;
      sa[353] = -0.09272882f;
      sa[354] = 0.033434812f;
      sa[355] = 0.048646644f;
      sa[356] = -0.0794926f;
      sa[357] = 0.27087674f;
      sa[358] = -0.45453203f;
      sa[359] = -0.004166148f;
      sa[360] = 0.016104937f;
      sa[361] = 0.012025922f;
      sa[362] = -0.044443097f;
      sa[363] = -0.08239198f;
      sa[364] = -0.12652312f;
      sa[365] = -0.20064634f;
      sa[366] = -0.017345283f;
      sa[367] = -0.25127187f;
      sa[368] = -0.24682142f;
      sa[369] = 0.32620934f;
      sa[370] = -0.1573368f;
      sa[371] = 0.40011048f;
      sa[372] = -0.019679047f;
      sa[373] = 0.29751596f;
      sa[374] = -0.14259286f;
      sa[375] = -0.2502761f;
      sa[376] = -0.22404747f;
      sa[377] = -0.16046704f;
      sa[378] = 0.23815915f;
      sa[379] = 0.14797167f;
      sa[380] = -0.12383977f;
      sa[381] = -0.103957884f;
      sa[382] = -0.069593936f;
      sa[383] = -0.06443968f;
      sa[384] = -0.047043815f;
      sa[385] = 0.12603152f;
      sa[386] = -0.2912747f;
      sa[387] = -0.22026624f;
      sa[388] = 0.08684254f;
      sa[389] = -0.0034639547f;
      sa[390] = 0.010937839f;
      sa[391] = -0.08267975f;
      sa[392] = 0.1741542f;
      sa[393] = 0.23982851f;
      sa[394] = -0.09308652f;
      sa[395] = 0.33846635f;
      sa[396] = 0.25036007f;
      sa[397] = -0.25376743f;
      sa[398] = 0.15800716f;
      sa[399] = 0.010705363f;
      sa[400] = 0.16081133f;
      sa[401] = 0.22962226f;
      sa[402] = -0.13082491f;
      sa[403] = 0.008900373f;
      sa[404] = 0.28231075f;
      sa[405] = -0.2530442f;
      sa[406] = -0.05070233f;
      sa[407] = 0.063606136f;
      sa[408] = -0.19256389f;
      sa[409] = -0.21735413f;
      sa[410] = -0.08732301f;
      sa[411] = 0.09721878f;
      sa[412] = -0.11846538f;
      sa[413] = 0.006404113f;
      sa[414] = 0.15811603f;
      sa[415] = 0.49048367f;
      sa[416] = -0.14787632f;
      sa[417] = 0.042874802f;
      sa[418] = 0.012927425f;
      sa[419] = 0.2801146f;
      sa[420] = 0.2654933f;
      sa[421] = 0.23277111f;
      sa[422] = 0.22525612f;
      sa[423] = -0.15132903f;
      sa[424] = 0.096606545f;
      sa[425] = -0.07838922f;
      sa[426] = -0.29064357f;
      sa[427] = 0.11197566f;
      sa[428] = -0.059462138f;
      sa[429] = -0.33897993f;
      sa[430] = 0.19033168f;
      sa[431] = 0.06619901f;
      sa[432] = -0.06403421f;
      sa[433] = 0.28448704f;
      sa[434] = 0.33386472f;
      sa[435] = -0.17792846f;
      sa[436] = -0.15737098f;
      sa[437] = -0.14393313f;
      sa[438] = 0.064075895f;
      sa[439] = 0.115919866f;
      sa[440] = 0.17140959f;
      sa[441] = -0.22706574f;
      sa[442] = 0.13177766f;
      sa[443] = 0.12660176f;
      sa[444] = -0.19218485f;
      sa[445] = 0.12008393f;
      sa[446] = 0.22396079f;
      sa[447] = 0.21537031f;
      sa[448] = 0.33271316f;
      sa[449] = 0.36175042f;
      sa[450] = -0.26558384f;
      sa[451] = 0.21894826f;
      sa[452] = 0.21061957f;
      sa[453] = 0.0322559f;
      sa[454] = -0.123319454f;
      sa[455] = 0.07003117f;
      sa[456] = 0.03947859f;
      sa[457] = 0.1366488f;
      sa[458] = -0.32762104f;
      sa[459] = 0.40919247f;
      sa[460] = 0.27147174f;
      sa[461] = 0.34431946f;
      sa[462] = 0.1274032f;
      sa[463] = 0.29232904f;
      sa[464] = -0.37627f;
      sa[465] = 0.35297266f;
      sa[466] = -0.00303491f;
      sa[467] = 0.15504077f;
      sa[468] = 0.08681682f;
      sa[469] = 0.34605503f;
      sa[470] = 0.21627836f;
      sa[471] = -0.06246786f;
      sa[472] = 0.039676927f;
      sa[473] = -0.12762345f;
      sa[474] = 0.013144962f;
      sa[475] = 0.18708447f;
      sa[476] = 0.18167663f;
      sa[477] = -0.07776419f;
      sa[478] = 0.08598039f;
      sa[479] = -0.15143156f;
      sa[480] = -0.34358916f;
      sa[481] = -0.26645866f;
      sa[482] = -0.27382746f;
      sa[483] = 0.21084647f;
      sa[484] = 0.2603648f;
      sa[485] = 0.23873262f;
      sa[486] = 0.004141477f;
      sa[487] = -0.118505724f;
      sa[488] = -0.19404912f;
      sa[489] = 0.14686908f;
      sa[490] = 0.027868003f;
      sa[491] = -0.09259961f;
      sa[492] = 0.21028908f;
      sa[493] = 0.23550068f;
      sa[494] = -0.19883816f;
      sa[495] = 0.34580597f;
      sa[496] = -0.058626167f;
      sa[497] = 0.034612946f;
      sa[498] = 0.09845858f;
      sa[499] = 0.12937847f;
      sa[500] = -0.101632565f;
      sa[501] = 0.07885809f;
      sa[502] = 0.35300213f;
      sa[503] = 0.16138092f;
      sa[504] = -0.061257947f;
      sa[505] = -0.11037763f;
      sa[506] = 0.16884321f;
      sa[507] = -0.11117336f;
      sa[508] = 0.17208818f;
      sa[509] = 0.2953112f;
      sa[510] = 0.21711093f;
      sa[511] = 0.057955425f;
      sa[512] = 0.10302922f;
      sa[513] = -0.049059346f;
      sa[514] = 0.24790987f;
      sa[515] = -0.35374048f;
      sa[516] = 0.070823155f;
      sa[517] = 0.16577785f;
      sa[518] = 0.1551021f;
      sa[519] = 0.0014677227f;
      sa[520] = 0.22594292f;
      sa[521] = 0.19814087f;
      sa[522] = 0.004110863f;
      sa[523] = 0.13561001f;
      sa[524] = 0.23283762f;
      sa[525] = 0.21782684f;
      sa[526] = 0.026139317f;
      sa[527] = -0.103107326f;
      sa[528] = -0.02215566f;
      sa[529] = 0.1104644f;
      sa[530] = -0.22051236f;
      sa[531] = 0.3111866f;
      sa[532] = 0.21079746f;
      sa[533] = 0.19731857f;
      sa[534] = 0.22482641f;
      sa[535] = -5.60518E-4f;
      sa[536] = 0.031984262f;
      sa[537] = -0.26432166f;
      sa[538] = 0.29165462f;
      sa[539] = 0.25677198f;
      sa[540] = -0.27256194f;
      sa[541] = -0.25791073f;
      sa[542] = -0.17749391f;
      sa[543] = -0.04360615f;
      sa[544] = 0.18347374f;
      sa[545] = 0.10922318f;
      sa[546] = 0.12849846f;
      sa[547] = 0.27691862f;
      sa[548] = 0.020964496f;
      sa[549] = 0.074731626f;
      sa[550] = -0.06221098f;
      sa[551] = -0.12512268f;
      sa[552] = 0.023720352f;
      sa[553] = -0.094981395f;
      sa[554] = -0.13085605f;
      sa[555] = -0.06302944f;
      sa[556] = -0.19057868f;
      sa[557] = -0.2506145f;
      sa[558] = -0.14675654f;
      sa[559] = -0.11492878f;
      sa[560] = -0.31256926f;
      sa[561] = -0.09891215f;
      sa[562] = 0.20973252f;
      sa[563] = -0.045840383f;
      sa[564] = 0.14497328f;
      sa[565] = 0.017172847f;
      sa[566] = 0.32861078f;
      sa[567] = -0.025652368f;
      sa[568] = -0.11611289f;
      sa[569] = 0.0049873213f;
      sa[570] = -0.05358387f;
      sa[571] = -0.03477349f;
      sa[572] = -0.0025580735f;
      sa[573] = 0.31048265f;
      sa[574] = 0.056283846f;
      sa[575] = -0.43842018f;
      sa[576] = -0.16510876f;
      sa[577] = -0.10208434f;
      sa[578] = 0.026356427f;
      sa[579] = 0.13851856f;
      sa[580] = -0.003930582f;
      sa[581] = -0.27872705f;
      sa[582] = 0.03002427f;
      sa[583] = -0.121710576f;
      sa[584] = 0.07766647f;
      sa[585] = 0.07710482f;
      sa[586] = -0.25186148f;
      sa[587] = -0.2265197f;
      sa[588] = 0.04002412f;
      sa[589] = 0.026325064f;
      sa[590] = -0.02844752f;
      sa[591] = -0.20329124f;
      sa[592] = -0.39153206f;
      sa[593] = -0.3252837f;
      sa[594] = 0.06337608f;
      sa[595] = 0.064124726f;
      sa[596] = 0.2215349f;
      sa[597] = -0.10051241f;
      sa[598] = 0.20391788f;
      sa[599] = -0.031005038f;
      sa[600] = -0.29958177f;
      sa[601] = 0.14673266f;
      sa[602] = 0.057802483f;
      sa[603] = -0.029282471f;
      sa[604] = 0.13124362f;
      sa[605] = 0.07374965f;
      sa[606] = 0.07673035f;
      sa[607] = -0.097250335f;
      sa[608] = 0.05754885f;
      sa[609] = -0.013043541f;
      sa[610] = 0.0891291f;
      sa[611] = -0.06301809f;
      sa[612] = -0.13527732f;
      sa[613] = 0.28873956f;
      sa[614] = 0.12546219f;
      sa[615] = -0.09227875f;
      sa[616] = 0.04806632f;
      sa[617] = -0.22004263f;
      sa[618] = -0.156664f;
      sa[619] = -0.14423871f;
      sa[620] = 0.0037157596f;
      sa[621] = -0.19053772f;
      sa[622] = -0.21771525f;
      sa[623] = -0.30121493f;
      sa[624] = -0.046917174f;
      sa[625] = 0.34347662f;
      sa[626] = 0.002123883f;
      sa[627] = 0.2571388f;
      sa[628] = -0.04494668f;
      sa[629] = 0.025495008f;
      sa[630] = -0.2618062f;
      sa[631] = 0.41952235f;
      sa[632] = 0.08635606f;
      sa[633] = -0.16101195f;
      sa[634] = -0.22471286f;
      sa[635] = 0.19809303f;
      sa[636] = -0.06669768f;
      sa[637] = 0.053891696f;
      sa[638] = -0.22030523f;
      sa[639] = 0.060265146f;
      sa[640] = -0.11525467f;
      sa[641] = -0.26963967f;
      sa[642] = 0.22910367f;
      sa[643] = -0.32267615f;
      sa[644] = -0.08015785f;
      sa[645] = -0.2583538f;
      sa[646] = 0.34860852f;
      sa[647] = -0.18931782f;
      sa[648] = 0.007896124f;
      sa[649] = -0.033075023f;
      sa[650] = 0.09849069f;
      sa[651] = -0.10390151f;
      sa[652] = 0.05847542f;
      sa[653] = -0.11544101f;
      sa[654] = -0.16133985f;
      sa[655] = -0.16433433f;
      sa[656] = 0.15195253f;
      sa[657] = 0.24730127f;
      sa[658] = -0.21419172f;
      sa[659] = -0.07874782f;
      sa[660] = -0.18744715f;
      sa[661] = -0.046860352f;
      sa[662] = -0.22878255f;
      sa[663] = 0.21761778f;
      sa[664] = -0.17860876f;
      sa[665] = 0.34517223f;
      sa[666] = 0.031977285f;
      sa[667] = -0.34919956f;
      sa[668] = 0.2686028f;
      sa[669] = -0.15138018f;
      sa[670] = 0.09632682f;
      sa[671] = -0.009749259f;
      sa[672] = -0.20482463f;
      sa[673] = 0.20138074f;
      sa[674] = 0.246354f;
      sa[675] = -0.37307808f;
      sa[676] = -0.05406488f;
      sa[677] = -0.17476957f;
      sa[678] = 0.22918816f;
      sa[679] = -0.008845685f;
      sa[680] = 0.079019174f;
      sa[681] = 0.13228987f;
      sa[682] = -0.11499724f;
      sa[683] = -0.16432087f;
      sa[684] = -0.007675256f;
      sa[685] = 0.10068909f;
      sa[686] = -0.21732248f;
      sa[687] = -0.17671026f;
      sa[688] = -0.24666393f;
      sa[689] = -0.2178152f;
      sa[690] = -0.026409425f;
      sa[691] = 0.111260556f;
      sa[692] = -0.18088034f;
      sa[693] = -0.19171292f;
      sa[694] = 0.25730202f;
      sa[695] = -0.26038405f;
      sa[696] = -0.1081951f;
      sa[697] = -0.1599642f;
      sa[698] = -0.20978291f;
      sa[699] = 0.2681088f;
      sa[700] = 0.17275879f;
      sa[701] = 0.12590751f;
      sa[702] = 0.10518056f;
      sa[703] = -0.035058767f;
      sa[704] = -0.25313592f;
      sa[705] = -0.0058568236f;
      sa[706] = -0.1218283f;
      sa[707] = 0.031778496f;
      sa[708] = -0.07247696f;
      sa[709] = -0.29923972f;
      sa[710] = 0.22793014f;
      sa[711] = 0.1727862f;
      sa[712] = 0.037384942f;
      sa[713] = 0.16266108f;
      sa[714] = 0.19508845f;
      sa[715] = 0.08300124f;
      sa[716] = 0.007918515f;
      sa[717] = 0.10325939f;
      sa[718] = 0.051886287f;
      sa[719] = 0.11000049f;
      sa[720] = -0.27125457f;
      sa[721] = 0.23102224f;
      sa[722] = -0.04007723f;
      sa[723] = 0.2453733f;
      sa[724] = 0.031462785f;
      sa[725] = -0.20322984f;
      sa[726] = -0.17935397f;
      sa[727] = -0.3495006f;
      sa[728] = -0.060469087f;
      sa[729] = -0.12718059f;
      sa[730] = 0.115305744f;
      sa[731] = -0.4076696f;
      sa[732] = 0.24171408f;
      sa[733] = 0.32789978f;
      sa[734] = -0.04344722f;
      sa[735] = 0.28843635f;
      sa[736] = 0.07950983f;
      sa[737] = 0.22000359f;
      sa[738] = -0.33126175f;
      sa[739] = -0.11751984f;
      sa[740] = -0.27987856f;
      sa[741] = -0.35411364f;
      sa[742] = 0.060623538f;
      sa[743] = -0.10267959f;
      sa[744] = 0.17146224f;
      sa[745] = -0.19875081f;
      sa[746] = 0.052280422f;
      sa[747] = -0.21156524f;
      sa[748] = -0.11011462f;
      sa[749] = -0.15702605f;
      sa[750] = 0.26017913f;
      sa[751] = 0.23282494f;
      sa[752] = 0.0044121984f;
      sa[753] = 0.06139589f;
      sa[754] = -0.008340555f;
      sa[755] = -0.03385995f;
      sa[756] = -0.1629044f;
      sa[757] = 0.22526237f;
      sa[758] = -0.20511442f;
      sa[759] = 0.13851692f;
      sa[760] = -0.117848314f;
      sa[761] = 0.028520085f;
      sa[762] = -0.13723241f;
      sa[763] = 0.0698113f;
      sa[764] = 0.0978754f;
      sa[765] = -0.17123128f;
      sa[766] = -0.23082826f;
      sa[767] = -0.090063535f;
      sa[768] = -0.1615656f;
      sa[769] = -0.27274832f;
      sa[770] = -0.027161831f;
      sa[771] = -0.07559888f;
      sa[772] = -0.0115477545f;
      sa[773] = -0.30224824f;
      sa[774] = -0.013767858f;
      sa[775] = 0.21777183f;
      sa[776] = -0.05846799f;
      sa[777] = 0.038113613f;
      sa[778] = 0.1448402f;
      sa[779] = -0.2437259f;
      sa[780] = -0.056044135f;
      sa[781] = -0.079153724f;
      sa[782] = 0.1734019f;
      sa[783] = -0.17506407f;
      sa[784] = -0.13419124f;
      sa[785] = -0.1112113f;
      sa[786] = -0.07537056f;
      sa[787] = -0.248848f;
      sa[788] = -0.24195385f;
      sa[789] = -0.010618102f;
      sa[790] = -0.023453826f;
      sa[791] = -0.123472616f;
      sa[792] = 0.19686855f;
      sa[793] = -0.10871611f;
      sa[794] = -0.2733181f;
      sa[795] = -0.1313137f;
      sa[796] = 0.27008805f;
      sa[797] = -0.22026274f;
      sa[798] = -0.24408168f;
      sa[799] = -0.07595124f;
      sa[800] = 0.15389602f;
      sa[801] = 0.076306365f;
      sa[802] = 0.19049458f;
      sa[803] = 0.27112073f;
      sa[804] = 0.19476151f;
      sa[805] = 0.23565951f;
      sa[806] = 0.23096633f;
      sa[807] = 0.28020793f;
      sa[808] = -0.053565208f;
      sa[809] = -0.17908591f;
      sa[810] = 0.10644306f;
      sa[811] = 0.03059546f;
      sa[812] = 0.16640504f;
      sa[813] = -0.2391548f;
      sa[814] = 0.10155665f;
      sa[815] = -0.082991645f;
      sa[816] = -0.19057f;
      sa[817] = -0.20171641f;
      sa[818] = 0.013126662f;
      sa[819] = -0.04080562f;
      sa[820] = -0.28675684f;
      sa[821] = -0.18153627f;
      sa[822] = -0.28892615f;
      sa[823] = 0.14108779f;
      sa[824] = 0.116438605f;
      sa[825] = 0.46528518f;
      sa[826] = -0.32523444f;
      sa[827] = -0.35531422f;
      sa[828] = 0.078541f;
      sa[829] = -0.13071834f;
      sa[830] = 0.15329096f;
      sa[831] = 0.294179f;
      sa[832] = 0.14621702f;
      sa[833] = 0.10826521f;
      sa[834] = 0.21355513f;
      sa[835] = -0.019032674f;
      sa[836] = 0.19278975f;
      sa[837] = -0.17086123f;
      sa[838] = 0.11856457f;
      sa[839] = -0.15339671f;
      sa[840] = 0.21841587f;
      sa[841] = 0.14480433f;
      sa[842] = 0.19848584f;
      sa[843] = 0.1530451f;
      sa[844] = 0.06344534f;
      sa[845] = 0.17219934f;
      sa[846] = -0.24070258f;
      sa[847] = -0.22423233f;
      sa[848] = 0.18547875f;
      sa[849] = 0.20854558f;
      sa[850] = -0.013472138f;
      sa[851] = 0.10274433f;
      sa[852] = 0.25308657f;
      sa[853] = 0.19887501f;
      sa[854] = 0.24247554f;
      sa[855] = 0.044104714f;
      sa[856] = 0.095846646f;
      sa[857] = -0.15101454f;
      sa[858] = 0.17319198f;
      sa[859] = 0.14381762f;
      sa[860] = 0.38129717f;
      sa[861] = -0.03171082f;
      sa[862] = -0.339345f;
      sa[863] = -0.17329541f;
      sa[864] = -0.1425729f;
      sa[865] = 0.21657556f;
      sa[866] = -0.2650982f;
      sa[867] = -0.12601918f;
      sa[868] = -0.120901205f;
      sa[869] = 0.16105115f;
      sa[870] = -0.023960108f;
      sa[871] = 0.17885366f;
      sa[872] = 0.18796797f;
      sa[873] = -0.07481535f;
      sa[874] = -0.03225257f;
      sa[875] = -0.33069366f;
      sa[876] = -0.2931663f;
      sa[877] = -0.3071703f;
      sa[878] = -0.045316502f;
      sa[879] = 0.09525173f;
      sa[880] = -0.19440989f;
      sa[881] = -0.19016166f;
      sa[882] = 0.2145024f;
      sa[883] = 0.14461021f;
      sa[884] = -0.10190032f;
      sa[885] = -0.051532507f;
      sa[886] = 0.13739471f;
      sa[887] = 0.011698313f;
      sa[888] = -0.24040586f;
      sa[889] = -0.03244775f;
      sa[890] = -0.2737573f;
      sa[891] = 0.5168209f;
      sa[892] = 0.13923569f;
      sa[893] = 0.26871243f;
      sa[894] = -0.012124599f;
      sa[895] = 0.19654742f;
      sa[896] = -0.27882594f;
      sa[897] = 0.16212632f;
      sa[898] = 0.21985109f;
      sa[899] = 0.3279929f;
      sa[900] = -0.2448208f;
      sa[901] = 0.23189643f;
      sa[902] = -0.144503f;
      sa[903] = -0.24294227f;
      sa[904] = 0.123683654f;
      sa[905] = 0.18016946f;
      sa[906] = -0.27078745f;
      sa[907] = -0.29654685f;
      sa[908] = -0.24570759f;
      sa[909] = 0.0101581495f;
      sa[910] = 0.044713102f;
      sa[911] = -0.22139864f;
      sa[912] = -0.020825708f;
      sa[913] = 0.07172072f;
      sa[914] = -0.18524678f;
      sa[915] = 7.809732E-5f;
      sa[916] = 0.34937376f;
      sa[917] = 0.04104653f;
      sa[918] = 0.088286966f;
      sa[919] = 0.26893348f;
      sa[920] = 0.10591267f;
      sa[921] = -0.13695928f;
      sa[922] = -0.17315243f;
      sa[923] = -0.12779725f;
      sa[924] = -0.016237149f;
      sa[925] = -0.16855188f;
      sa[926] = 0.021774128f;
      sa[927] = -0.05914107f;
      sa[928] = 0.21979599f;
      sa[929] = 0.0913749f;
      sa[930] = 0.1430443f;
      sa[931] = -0.10585811f;
      sa[932] = 0.2100986f;
      sa[933] = -0.07009229f;
      sa[934] = 0.24052745f;
      sa[935] = -0.18550426f;
      sa[936] = 0.12008139f;
      sa[937] = 0.09536723f;
      sa[938] = -0.19419509f;
      sa[939] = 0.10334191f;
      sa[940] = -0.06916716f;
      sa[941] = -0.32386926f;
      sa[942] = -0.25477982f;
      sa[943] = -0.23205493f;
      sa[944] = -0.152243f;
      sa[945] = 0.0040132813f;
      sa[946] = 0.023113426f;
      sa[947] = 0.13173324f;
      sa[948] = 0.103289396f;
      sa[949] = -0.18669084f;
      sa[950] = 0.08526197f;
      sa[951] = -0.17194758f;
      sa[952] = -0.32396704f;
      sa[953] = -0.2686026f;
      sa[954] = -0.17476252f;
      sa[955] = -0.018254831f;
      sa[956] = 0.007954052f;
      sa[957] = 0.043078978f;
      sa[958] = 0.10190911f;
      sa[959] = -0.20812964f;
      sa[960] = 0.23451182f;
      sa[961] = -0.18394476f;
      sa[962] = 7.667831E-4f;
      sa[963] = -0.08855554f;
      sa[964] = -0.16046062f;
      sa[965] = 0.2408974f;
      sa[966] = -0.10071629f;
      sa[967] = -0.29131112f;
      sa[968] = 0.13085109f;
      sa[969] = -0.11094852f;
      sa[970] = 0.37280834f;
      sa[971] = 0.08392434f;
      sa[972] = -0.24869706f;
      sa[973] = -0.24669634f;
      sa[974] = -0.21829884f;
      sa[975] = -0.21472584f;
      sa[976] = -0.14201367f;
      sa[977] = 0.041124362f;
      sa[978] = -0.111375965f;
      sa[979] = 0.10285382f;
      sa[980] = 0.11361252f;
      sa[981] = -0.22861446f;
      sa[982] = 0.1575519f;
      sa[983] = 0.011701908f;
      sa[984] = -0.2347307f;
      sa[985] = 0.14863735f;
      sa[986] = -0.21436058f;
      sa[987] = 0.11213604f;
      sa[988] = 0.20341468f;
      sa[989] = 0.24366601f;
      sa[990] = 0.2798188f;
      sa[991] = -0.060748372f;
      sa[992] = -0.23228309f;
      sa[993] = -0.118960276f;
      sa[994] = -0.19220771f;
      sa[995] = -0.30445826f;
      sa[996] = 0.31807053f;
      sa[997] = 0.21536379f;
      sa[998] = 0.10825483f;
      sa[999] = 0.0019957516f;
      sa[1000] = 0.020171894f;
      sa[1001] = 0.18366706f;
      sa[1002] = 0.2614548f;
      sa[1003] = -0.10532138f;
      sa[1004] = 0.24556814f;
      sa[1005] = -0.17061837f;
      sa[1006] = -0.2907752f;
      sa[1007] = -0.011013845f;
      sa[1008] = 0.27270988f;
      sa[1009] = 0.17433845f;
      sa[1010] = -0.07331234f;
      sa[1011] = 0.2510195f;
      sa[1012] = 0.023577921f;
      sa[1013] = 0.2455605f;
      sa[1014] = 0.3322207f;
      sa[1015] = -0.09009431f;
      sa[1016] = 0.27370638f;
      sa[1017] = 0.12991649f;
      sa[1018] = -0.022881564f;
      sa[1019] = 0.14717251f;
      sa[1020] = -0.20098113f;
      sa[1021] = 0.13175589f;
      sa[1022] = 0.23353583f;
      sa[1023] = 0.26684025f;
      sa[1024] = 0.04738499f;
      sa[1025] = 0.24331486f;
      sa[1026] = 0.085379474f;
      sa[1027] = 0.021775715f;
      sa[1028] = 0.3349429f;
      sa[1029] = 0.05060211f;
      sa[1030] = -0.12379137f;
      sa[1031] = 0.062161397f;
      sa[1032] = -0.3307619f;
      sa[1033] = 0.067617394f;
      sa[1034] = -0.10825051f;
      sa[1035] = 0.24104539f;
      sa[1036] = 0.34408677f;
      sa[1037] = 0.13780569f;
      sa[1038] = -0.07740295f;
      sa[1039] = 0.46363947f;
      sa[1040] = -0.049603276f;
      sa[1041] = 0.37671193f;
      sa[1042] = -0.22131933f;
      sa[1043] = -0.107452065f;
      sa[1044] = 0.2042714f;
      sa[1045] = 0.4062351f;
      sa[1046] = 0.02572894f;
      sa[1047] = -0.42776716f;
      sa[1048] = 0.11498449f;
      sa[1049] = 0.015706647f;
      sa[1050] = 0.048659332f;
      sa[1051] = -0.1901236f;
      sa[1052] = 0.21858865f;
      sa[1053] = 0.36748526f;
      sa[1054] = 0.3444217f;
      sa[1055] = 0.17090267f;
      sa[1056] = 0.34344274f;
      sa[1057] = -0.03183148f;
      sa[1058] = 0.29475537f;
      sa[1059] = -0.01801734f;
      sa[1060] = -0.0872462f;
      sa[1061] = 0.20964472f;
      sa[1062] = 0.03575232f;
      sa[1063] = 0.30945358f;
      sa[1064] = 0.10746111f;
      sa[1065] = -0.06716849f;
      sa[1066] = 0.12944083f;
      sa[1067] = -0.34342682f;
      sa[1068] = -0.06785229f;
      sa[1069] = 0.32333168f;
      sa[1070] = 0.022550218f;
      sa[1071] = 0.09810591f;
      sa[1072] = -0.14510612f;
      sa[1073] = 0.15683214f;
      sa[1074] = 0.23158102f;
      sa[1075] = -0.114751406f;
      sa[1076] = -0.17935334f;
      sa[1077] = 0.09627063f;
      sa[1078] = -0.12488196f;
      sa[1079] = 0.048387393f;
      sa[1080] = 0.2207813f;
      sa[1081] = 0.21590838f;
      sa[1082] = -0.36704776f;
      sa[1083] = 0.16580258f;
      sa[1084] = 0.15688576f;
      sa[1085] = -0.2894861f;
      sa[1086] = -0.32091072f;
      sa[1087] = -0.37763894f;
      sa[1088] = -0.15079254f;
      sa[1089] = -0.021336427f;
      sa[1090] = -0.26230645f;
      sa[1091] = -0.048658907f;
      sa[1092] = -0.24398565f;
      sa[1093] = -0.3112743f;
      sa[1094] = -0.0014589742f;
      sa[1095] = -0.34384108f;
      sa[1096] = 0.056236997f;
      sa[1097] = -0.21720369f;
      sa[1098] = 0.041919746f;
      sa[1099] = -0.02877333f;
      sa[1100] = -0.14115559f;
      sa[1101] = 0.07098115f;
      sa[1102] = -0.15259658f;
      sa[1103] = 0.122911796f;
      sa[1104] = -0.27978373f;
      sa[1105] = -0.11291663f;
      sa[1106] = -0.04311315f;
      sa[1107] = 0.08028648f;
      sa[1108] = -0.2371583f;
      sa[1109] = 0.16486709f;
      sa[1110] = 0.09815887f;
      sa[1111] = -0.35284898f;
      sa[1112] = 0.2367277f;
      sa[1113] = 0.117715016f;
      sa[1114] = 0.1076943f;
      sa[1115] = 0.15150693f;
      sa[1116] = -0.023927543f;
      sa[1117] = 0.0125416f;
      sa[1118] = -0.048505694f;
      sa[1119] = -0.043825157f;
      sa[1120] = 0.17863704f;
      sa[1121] = 0.21647245f;
      sa[1122] = 0.2427101f;
      sa[1123] = 0.23241144f;
      sa[1124] = 0.080598265f;
      sa[1125] = 0.010524123f;
      sa[1126] = 0.27006394f;
      sa[1127] = 0.2711799f;
      sa[1128] = 0.08116023f;
      sa[1129] = 0.02920906f;
      sa[1130] = 0.24123245f;
      sa[1131] = 0.3619803f;
      sa[1132] = -0.025635108f;
      sa[1133] = 0.0101101305f;
      sa[1134] = 0.08762989f;
      sa[1135] = -0.28909418f;
      sa[1136] = -0.025720892f;
      sa[1137] = 0.14933479f;
      sa[1138] = -0.14374487f;
      sa[1139] = -0.041419633f;
      sa[1140] = 0.32696575f;
      sa[1141] = -0.19048765f;
      sa[1142] = 0.004722643f;
      sa[1143] = 0.023008492f;
      sa[1144] = -0.16942526f;
      sa[1145] = 0.22771676f;
      sa[1146] = 0.35649782f;
      sa[1147] = 0.041920792f;
      sa[1148] = -0.013633343f;
      sa[1149] = -0.022276226f;
      sa[1150] = -0.2809472f;
      sa[1151] = -0.33004418f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_08_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_08_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2637441f;
      sa[1] = -0.12312509f;
      sa[2] = -0.5592318f;
      sa[3] = -0.95140225f;
      sa[4] = 0.05837805f;
      sa[5] = 0.3089616f;
      sa[6] = 1.2288026f;
      sa[7] = -0.7033909f;
      sa[8] = -0.9461103f;
      sa[9] = 0.6766117f;
      sa[10] = -0.17319648f;
      sa[11] = 0.43971643f;
      sa[12] = 0.05581985f;
      sa[13] = -0.006815265f;
      sa[14] = -1.2853546f;
      sa[15] = 1.1920912f;
      sa[16] = 1.5708468f;
      sa[17] = -0.45313975f;
      sa[18] = 0.06610464f;
      sa[19] = -0.45147097f;
      sa[20] = 1.1679199f;
      sa[21] = 0.08789103f;
      sa[22] = -0.960913f;
      sa[23] = 0.7935744f;
      sa[24] = -1.3745211f;
      sa[25] = 0.4660205f;
      sa[26] = -0.19946325f;
      sa[27] = 1.5156478f;
      sa[28] = -1.405693f;
      sa[29] = -0.5426764f;
      sa[30] = 0.3366986f;
      sa[31] = -0.63180614f;
      sa[32] = -1.1796318f;
      sa[33] = -1.5003568f;
      sa[34] = -0.078001f;
      sa[35] = 1.4222021f;
      sa[36] = -0.28798515f;
      sa[37] = -0.1032649f;
      sa[38] = 0.18081878f;
      sa[39] = 0.7261303f;
      sa[40] = -0.72388965f;
      sa[41] = -1.3623009f;
      sa[42] = -1.0949293f;
      sa[43] = -1.4932126f;
      sa[44] = 0.05145742f;
      sa[45] = -1.3345313f;
      sa[46] = 1.03926f;
      sa[47] = 1.2694305f;
      sa[48] = -1.3043437f;
      sa[49] = -1.077215f;
      sa[50] = 0.44709533f;
      sa[51] = -0.33153415f;
      sa[52] = 0.8912274f;
      sa[53] = 0.7898688f;
      sa[54] = -0.23962927f;
      sa[55] = 1.1423961f;
      sa[56] = -0.9787997f;
      sa[57] = -1.0763825f;
      sa[58] = -0.07010253f;
      sa[59] = -0.21961407f;
      sa[60] = 1.3815929f;
      sa[61] = -0.6014965f;
      sa[62] = -0.2844088f;
      sa[63] = 0.6827018f;
      sa[64] = 1.2338089f;
      sa[65] = -0.6247623f;
      sa[66] = 0.63644034f;
      sa[67] = 1.5419003f;
      sa[68] = 0.69770616f;
      sa[69] = -1.1447229f;
      sa[70] = -1.4751025f;
      sa[71] = -0.49236512f;
      sa[72] = -1.30253f;
      sa[73] = 1.2284439f;
      sa[74] = 1.3982606f;
      sa[75] = -0.14242943f;
      sa[76] = 0.91730267f;
      sa[77] = 0.44186077f;
      sa[78] = -1.4296778f;
      sa[79] = 0.9340569f;
      sa[80] = -0.8277217f;
      sa[81] = 0.039759055f;
      sa[82] = 0.82185066f;
      sa[83] = -0.602468f;
      sa[84] = -1.6563629f;
      sa[85] = -1.3088702f;
      sa[86] = 0.30604193f;
      sa[87] = 1.1682961f;
      sa[88] = -1.5987488f;
      sa[89] = -0.6217604f;
      sa[90] = -1.1976652f;
      sa[91] = 1.4913373f;
      sa[92] = -0.29050204f;
      sa[93] = 0.32361594f;
      sa[94] = -1.5345472f;
      sa[95] = -0.18650186f;
      sa[96] = -1.0303531f;
      sa[97] = 0.19887999f;
      sa[98] = -0.027484635f;
      sa[99] = 0.328572f;
      sa[100] = -1.2535728f;
      sa[101] = -0.4549139f;
      sa[102] = 1.1740483f;
      sa[103] = 0.061989374f;
      sa[104] = -0.21131316f;
      sa[105] = -0.7233918f;
      sa[106] = 1.3722949f;
      sa[107] = 1.210942f;
      sa[108] = 0.81573147f;
      sa[109] = 0.16789824f;
      sa[110] = 0.7405704f;
      sa[111] = -0.8527228f;
      sa[112] = -1.1531571f;
      sa[113] = 0.22881743f;
      sa[114] = 0.042408034f;
      sa[115] = -0.41580495f;
      sa[116] = 1.1968166f;
      sa[117] = 0.038207434f;
      sa[118] = -1.4388623f;
      sa[119] = -0.7530572f;
      sa[120] = -0.34221584f;
      sa[121] = 1.0681391f;
      sa[122] = -0.07115133f;
      sa[123] = 0.3433759f;
      sa[124] = -0.7149357f;
      sa[125] = 0.7960451f;
      sa[126] = -1.1590945f;
      sa[127] = 0.41787148f;
      sa[128] = -0.9606319f;
      sa[129] = 0.7591394f;
      sa[130] = -0.44457763f;
      sa[131] = 0.8251448f;
      sa[132] = 0.44010213f;
      sa[133] = 0.6622224f;
      sa[134] = 0.5708658f;
      sa[135] = -1.0891609f;
      sa[136] = 0.5452512f;
      sa[137] = -0.6459027f;
      sa[138] = -0.09629113f;
      sa[139] = 1.1684796f;
      sa[140] = -0.79676723f;
      sa[141] = -0.13699739f;
      sa[142] = 0.26708418f;
      sa[143] = -0.8435932f;
      sa[144] = 0.97012377f;
      sa[145] = -0.7877431f;
      sa[146] = 0.043598175f;
      sa[147] = -0.32909942f;
      sa[148] = -0.9330963f;
      sa[149] = 1.0569792f;
      sa[150] = -1.2172478f;
      sa[151] = -1.6051921f;
      sa[152] = 1.5256348f;
      sa[153] = -0.62647283f;
      sa[154] = 1.365798f;
      sa[155] = -1.5413984f;
      sa[156] = -1.4985482f;
      sa[157] = -1.1564164f;
      sa[158] = -0.19244647f;
      sa[159] = -0.6862036f;
      sa[160] = 1.3245966f;
      sa[161] = -1.1101972f;
      sa[162] = 1.5227811f;
      sa[163] = -0.7344f;
      sa[164] = 0.7472239f;
      sa[165] = -0.5453586f;
      sa[166] = 1.3455065f;
      sa[167] = -1.3669087f;
      sa[168] = 1.0717291f;
      sa[169] = -1.4972993f;
      sa[170] = 1.1310056f;
      sa[171] = 0.87367374f;
      sa[172] = 1.5377722f;
      sa[173] = 1.5433614f;
      sa[174] = -0.08790467f;
      sa[175] = 0.01824439f;
      sa[176] = -0.7584139f;
      sa[177] = 0.14763027f;
      sa[178] = -1.040492f;
      sa[179] = -0.20738643f;
      sa[180] = -1.3935438f;
      sa[181] = -0.9381434f;
      sa[182] = 0.31618667f;
      sa[183] = -1.01579f;
      sa[184] = 1.5375507f;
      sa[185] = 1.2343827f;
      sa[186] = -0.4830307f;
      sa[187] = -1.00845f;
      sa[188] = -0.52555573f;
      sa[189] = -0.7127638f;
      sa[190] = -1.4298513f;
      sa[191] = -1.0377474f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_08 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_08_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_08_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_08_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_08_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_08_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


