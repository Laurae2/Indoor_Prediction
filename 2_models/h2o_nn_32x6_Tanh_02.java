/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:13.996+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_02

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_02 > h2o_nn_32x6_Tanh_02.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_02.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_02", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_02 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_02_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_02_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_02_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_02.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_02_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_02() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6619290857438464696L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_02_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_02_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_02_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_02_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_02_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_02_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_02_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.07937500256312523;
      sa[1] = 0.0032529685934946317;
      sa[2] = -0.011923429729336682;
      sa[3] = -0.062327658869068665;
      sa[4] = -0.07133818536690716;
      sa[5] = -0.013070325550466302;
      sa[6] = 0.0037094458440313947;
      sa[7] = 0.14526282705400503;
      sa[8] = 0.015896091381396898;
      sa[9] = -0.05280810218822123;
      sa[10] = 0.04603693345910395;
      sa[11] = 0.06933319991342238;
      sa[12] = 0.019271220914337223;
      sa[13] = 0.011202278005285546;
      sa[14] = 0.05873100745464828;
      sa[15] = -0.04745682994569593;
      sa[16] = -0.06811306572646202;
      sa[17] = 0.027936050703001983;
      sa[18] = -0.016555650542481464;
      sa[19] = 0.051471033589269265;
      sa[20] = 0.10784281539608531;
      sa[21] = -0.08929262988070374;
      sa[22] = -0.03353753530442643;
      sa[23] = 0.05712588590984781;
      sa[24] = -0.02159973094398372;
      sa[25] = 0.10650119210139859;
      sa[26] = -0.015170046999250623;
      sa[27] = 0.029002290586521595;
      sa[28] = -0.03818072755672519;
      sa[29] = 0.06853680663190057;
      sa[30] = -0.020908143388119017;
      sa[31] = 0.16924331267751924;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_02_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_Tanh_02_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.014713627989641646;
      sa[1] = -0.025123756121885932;
      sa[2] = -0.06243115770016626;
      sa[3] = 0.05845733151658625;
      sa[4] = -0.06927138617516779;
    }
  }
}
class h2o_nn_32x6_Tanh_02_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_02_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_02_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.043994214f;
      sa[1] = 0.20470606f;
      sa[2] = 0.12201102f;
      sa[3] = 0.13840562f;
      sa[4] = -0.13337074f;
      sa[5] = -0.17965803f;
      sa[6] = -0.04961767f;
      sa[7] = 0.22649309f;
      sa[8] = 0.12501962f;
      sa[9] = -0.19918147f;
      sa[10] = -0.19722483f;
      sa[11] = -0.15504533f;
      sa[12] = 0.045797225f;
      sa[13] = -0.27794173f;
      sa[14] = -0.20857503f;
      sa[15] = -0.07958468f;
      sa[16] = 0.05908648f;
      sa[17] = 0.03214051f;
      sa[18] = -0.20526613f;
      sa[19] = 0.08590293f;
      sa[20] = 0.23019783f;
      sa[21] = -0.23030944f;
      sa[22] = 0.234358f;
      sa[23] = -0.2292814f;
      sa[24] = 0.19003515f;
      sa[25] = 0.123132996f;
      sa[26] = -0.2544087f;
      sa[27] = 0.15846425f;
      sa[28] = 0.21330385f;
      sa[29] = -0.23751783f;
      sa[30] = -0.17042257f;
      sa[31] = 0.10477886f;
      sa[32] = 0.13750242f;
      sa[33] = -0.17448168f;
      sa[34] = -0.0049636303f;
      sa[35] = -0.16568404f;
      sa[36] = 0.038746577f;
      sa[37] = 0.22398114f;
      sa[38] = -0.031611487f;
      sa[39] = -0.0049663787f;
      sa[40] = 0.029642139f;
      sa[41] = -0.038937673f;
      sa[42] = -0.068968005f;
      sa[43] = 0.091665275f;
      sa[44] = 0.18449868f;
      sa[45] = -0.20072351f;
      sa[46] = 0.11796494f;
      sa[47] = -0.045623846f;
      sa[48] = 0.23789595f;
      sa[49] = 0.2824137f;
      sa[50] = 0.24460855f;
      sa[51] = -0.26222563f;
      sa[52] = -0.066787265f;
      sa[53] = 0.21814434f;
      sa[54] = 0.21090312f;
      sa[55] = 0.10634865f;
      sa[56] = -0.1845639f;
      sa[57] = -0.3092286f;
      sa[58] = 0.28203562f;
      sa[59] = -0.21972774f;
      sa[60] = -0.20282026f;
      sa[61] = 0.25149447f;
      sa[62] = 0.11173085f;
      sa[63] = 0.078627765f;
      sa[64] = 0.080350555f;
      sa[65] = 0.058973163f;
      sa[66] = 9.6043054E-4f;
      sa[67] = 0.03892818f;
      sa[68] = -0.19006482f;
      sa[69] = 0.016326532f;
      sa[70] = -0.104606844f;
      sa[71] = 0.32735208f;
      sa[72] = -0.20865662f;
      sa[73] = 0.17511775f;
      sa[74] = -0.2157577f;
      sa[75] = 0.066372566f;
      sa[76] = -0.13288587f;
      sa[77] = -0.021498261f;
      sa[78] = -0.034744892f;
      sa[79] = 0.089321345f;
      sa[80] = -0.27990308f;
      sa[81] = -0.13457131f;
      sa[82] = -0.08443671f;
      sa[83] = 0.083837405f;
      sa[84] = -0.05767099f;
      sa[85] = -0.16338913f;
      sa[86] = 0.10817093f;
      sa[87] = 0.19151327f;
      sa[88] = 0.23308012f;
      sa[89] = 0.06650986f;
      sa[90] = -0.12361114f;
      sa[91] = 0.1628183f;
      sa[92] = 0.04908791f;
      sa[93] = -0.20304139f;
      sa[94] = -0.19643325f;
      sa[95] = -0.23996261f;
      sa[96] = 0.10181169f;
      sa[97] = -0.00774656f;
      sa[98] = 0.2111028f;
      sa[99] = -0.07247872f;
      sa[100] = -0.05924304f;
      sa[101] = -0.15714799f;
      sa[102] = -0.21118546f;
      sa[103] = -0.060327146f;
      sa[104] = -0.04581965f;
      sa[105] = -0.17725281f;
      sa[106] = -0.14174029f;
      sa[107] = 0.18012019f;
      sa[108] = 0.056396842f;
      sa[109] = -0.18821047f;
      sa[110] = -0.15526284f;
      sa[111] = 0.21964084f;
      sa[112] = 0.119308345f;
      sa[113] = 0.06297961f;
      sa[114] = -0.16206504f;
      sa[115] = -0.12673363f;
      sa[116] = -0.30704984f;
      sa[117] = 0.06746597f;
      sa[118] = -0.27965719f;
      sa[119] = -0.26771042f;
      sa[120] = 0.16894437f;
      sa[121] = 0.21210608f;
      sa[122] = 0.24024847f;
      sa[123] = 0.19852988f;
      sa[124] = 0.27820057f;
      sa[125] = 0.33830854f;
      sa[126] = -0.2606998f;
      sa[127] = -0.11199159f;
      sa[128] = 0.02221335f;
      sa[129] = 0.11503577f;
      sa[130] = -0.17099279f;
      sa[131] = 0.2728906f;
      sa[132] = 0.17899877f;
      sa[133] = -0.30072102f;
      sa[134] = 0.088608004f;
      sa[135] = -0.16444287f;
      sa[136] = -0.27833918f;
      sa[137] = -0.040224247f;
      sa[138] = 0.12368241f;
      sa[139] = -0.07717531f;
      sa[140] = -0.060029157f;
      sa[141] = -0.27702892f;
      sa[142] = 0.23215358f;
      sa[143] = -0.1596973f;
      sa[144] = 0.21008931f;
      sa[145] = -0.12525488f;
      sa[146] = -0.24803294f;
      sa[147] = 0.21571906f;
      sa[148] = 0.17007986f;
      sa[149] = 0.16901557f;
      sa[150] = 0.26278207f;
      sa[151] = -0.25577074f;
      sa[152] = 7.199194E-4f;
      sa[153] = 0.3018354f;
      sa[154] = 0.2407149f;
      sa[155] = -0.17830871f;
      sa[156] = 0.10548869f;
      sa[157] = -0.20451482f;
      sa[158] = 0.046544384f;
      sa[159] = 0.045447454f;
      sa[160] = 0.08065526f;
      sa[161] = 0.18267716f;
      sa[162] = -0.1369214f;
      sa[163] = -0.10947387f;
      sa[164] = 0.22490306f;
      sa[165] = -0.011255181f;
      sa[166] = -0.07104284f;
      sa[167] = -0.111984074f;
      sa[168] = 0.149048f;
      sa[169] = 0.26660895f;
      sa[170] = 0.032767385f;
      sa[171] = -0.101773314f;
      sa[172] = -0.06180081f;
      sa[173] = -0.13618615f;
      sa[174] = -0.020713897f;
      sa[175] = -0.24844737f;
      sa[176] = -0.019710591f;
      sa[177] = -0.054875825f;
      sa[178] = -0.10111743f;
      sa[179] = 0.07133972f;
      sa[180] = 0.002704573f;
      sa[181] = -0.22304937f;
      sa[182] = -0.043851737f;
      sa[183] = 0.14752908f;
      sa[184] = 0.20396547f;
      sa[185] = 0.10576816f;
      sa[186] = -0.3265228f;
      sa[187] = 0.108484656f;
      sa[188] = 0.010932158f;
      sa[189] = 0.2728169f;
      sa[190] = 0.11799686f;
      sa[191] = -0.050496165f;
      sa[192] = -0.090631634f;
      sa[193] = 0.20712368f;
      sa[194] = 0.090296976f;
      sa[195] = 0.3019079f;
      sa[196] = 0.26827702f;
      sa[197] = -0.0057811257f;
      sa[198] = 0.114748605f;
      sa[199] = -0.112811245f;
      sa[200] = 0.064971745f;
      sa[201] = -0.26847374f;
      sa[202] = 0.14496925f;
      sa[203] = 0.0025164064f;
      sa[204] = -0.09808416f;
      sa[205] = 0.2628611f;
      sa[206] = 0.21025938f;
      sa[207] = 0.12575427f;
      sa[208] = -0.23528658f;
      sa[209] = -0.09945488f;
      sa[210] = -0.31101057f;
      sa[211] = -0.24660508f;
      sa[212] = 0.38117185f;
      sa[213] = -0.25837472f;
      sa[214] = -0.16705276f;
      sa[215] = 0.009586703f;
      sa[216] = 0.24281111f;
      sa[217] = 0.16830517f;
      sa[218] = -0.19255568f;
      sa[219] = 0.21113025f;
      sa[220] = -0.27212286f;
      sa[221] = 0.002449055f;
      sa[222] = 0.19712238f;
      sa[223] = 0.10621415f;
      sa[224] = 0.20317434f;
      sa[225] = 0.292291f;
      sa[226] = -0.1628048f;
      sa[227] = 0.32224151f;
      sa[228] = 0.13511764f;
      sa[229] = 0.079166844f;
      sa[230] = 0.27513334f;
      sa[231] = -0.19527723f;
      sa[232] = -0.24485444f;
      sa[233] = 0.098904885f;
      sa[234] = 0.15184179f;
      sa[235] = -0.27979138f;
      sa[236] = -0.012515131f;
      sa[237] = -0.2233579f;
      sa[238] = -0.19588222f;
      sa[239] = 0.15147962f;
      sa[240] = -0.010756338f;
      sa[241] = -0.15751983f;
      sa[242] = -0.076140955f;
      sa[243] = -0.19017008f;
      sa[244] = -0.19925918f;
      sa[245] = -0.14347966f;
      sa[246] = -0.29234055f;
      sa[247] = -0.083992936f;
      sa[248] = 0.27502504f;
      sa[249] = 0.30737928f;
      sa[250] = -0.20143872f;
      sa[251] = -0.14662573f;
      sa[252] = -0.18063517f;
      sa[253] = -0.27133125f;
      sa[254] = -0.30414835f;
      sa[255] = 0.29583576f;
      sa[256] = -0.16762207f;
      sa[257] = 0.26905528f;
      sa[258] = -0.24860017f;
      sa[259] = -0.11796445f;
      sa[260] = -0.15222816f;
      sa[261] = -0.14982285f;
      sa[262] = -0.22550353f;
      sa[263] = 0.30767834f;
      sa[264] = -0.11745849f;
      sa[265] = 0.07643447f;
      sa[266] = -0.24576683f;
      sa[267] = -0.15496978f;
      sa[268] = 0.09863273f;
      sa[269] = -0.10040415f;
      sa[270] = -0.06359973f;
      sa[271] = 0.15336584f;
      sa[272] = -0.048352122f;
      sa[273] = -0.091679916f;
      sa[274] = 0.1092772f;
      sa[275] = 0.10928065f;
      sa[276] = 0.031639375f;
      sa[277] = -0.23986152f;
      sa[278] = -0.13474147f;
      sa[279] = 0.23541906f;
      sa[280] = -0.109012544f;
      sa[281] = 0.32756138f;
      sa[282] = -0.06230613f;
      sa[283] = 0.083161466f;
      sa[284] = 0.1618568f;
      sa[285] = -0.034139805f;
      sa[286] = 0.28591493f;
      sa[287] = 0.13368845f;
      sa[288] = -0.1984294f;
      sa[289] = -0.12215235f;
      sa[290] = -0.030960498f;
      sa[291] = -0.033855766f;
      sa[292] = 0.09226295f;
      sa[293] = -0.07965682f;
      sa[294] = 0.10690214f;
      sa[295] = 0.13801628f;
      sa[296] = 0.18389094f;
      sa[297] = 0.2430882f;
      sa[298] = 0.034205627f;
      sa[299] = -0.08878187f;
      sa[300] = 0.023672856f;
      sa[301] = -0.028827606f;
      sa[302] = 0.2071278f;
      sa[303] = 0.072428405f;
      sa[304] = -0.15080006f;
      sa[305] = 0.10380764f;
      sa[306] = 0.19690777f;
      sa[307] = -0.040842757f;
      sa[308] = 0.06366603f;
      sa[309] = 0.07777551f;
      sa[310] = 0.28456017f;
      sa[311] = 0.2956262f;
      sa[312] = -0.08468918f;
      sa[313] = -0.056960728f;
      sa[314] = -0.16361889f;
      sa[315] = 0.081475206f;
      sa[316] = -0.045153454f;
      sa[317] = -0.14608444f;
      sa[318] = 0.071546406f;
      sa[319] = 0.24279888f;
      sa[320] = -0.07558376f;
      sa[321] = 0.010350413f;
      sa[322] = 0.2888099f;
      sa[323] = -0.058478925f;
      sa[324] = -0.039208f;
      sa[325] = 0.2554625f;
      sa[326] = -0.28132457f;
      sa[327] = -0.047708135f;
      sa[328] = -0.023252219f;
      sa[329] = 0.24126163f;
      sa[330] = -0.16796203f;
      sa[331] = -0.010301522f;
      sa[332] = -0.26141828f;
      sa[333] = 0.07386134f;
      sa[334] = -0.13100933f;
      sa[335] = 0.25207207f;
      sa[336] = -0.18660209f;
      sa[337] = -0.16880867f;
      sa[338] = 0.22560698f;
      sa[339] = -0.26167017f;
      sa[340] = -0.3163859f;
      sa[341] = -0.39978495f;
      sa[342] = 0.17854868f;
      sa[343] = -0.15055905f;
      sa[344] = -0.17586558f;
      sa[345] = 0.21957912f;
      sa[346] = 0.19927901f;
      sa[347] = -0.23643549f;
      sa[348] = 0.2299837f;
      sa[349] = -0.31211573f;
      sa[350] = -0.22462314f;
      sa[351] = 0.0320062f;
      sa[352] = 0.16477679f;
      sa[353] = -0.027639307f;
      sa[354] = 0.08229712f;
      sa[355] = 0.055540226f;
      sa[356] = -0.23722073f;
      sa[357] = 0.26127416f;
      sa[358] = -0.32603365f;
      sa[359] = -0.009195707f;
      sa[360] = 0.0341177f;
      sa[361] = -0.10444816f;
      sa[362] = -0.14947921f;
      sa[363] = -0.038715746f;
      sa[364] = -0.043388564f;
      sa[365] = -0.124255486f;
      sa[366] = 0.089952454f;
      sa[367] = -0.23637244f;
      sa[368] = -0.22291432f;
      sa[369] = 0.20174542f;
      sa[370] = -0.27633154f;
      sa[371] = 0.06619761f;
      sa[372] = -0.008621019f;
      sa[373] = 0.3234924f;
      sa[374] = -0.077159174f;
      sa[375] = -0.27980277f;
      sa[376] = -0.27608994f;
      sa[377] = -0.23627026f;
      sa[378] = 0.29537362f;
      sa[379] = 0.19627228f;
      sa[380] = -0.1435041f;
      sa[381] = -0.101311214f;
      sa[382] = -0.011570904f;
      sa[383] = -0.13706653f;
      sa[384] = -0.11392785f;
      sa[385] = 0.098996595f;
      sa[386] = -0.22577704f;
      sa[387] = -0.040017314f;
      sa[388] = 0.054933343f;
      sa[389] = -0.0029688878f;
      sa[390] = 0.024574146f;
      sa[391] = -0.13074772f;
      sa[392] = 0.041050326f;
      sa[393] = 0.12559545f;
      sa[394] = 0.013331423f;
      sa[395] = 0.3348035f;
      sa[396] = 0.2590468f;
      sa[397] = -0.29694775f;
      sa[398] = 0.15396775f;
      sa[399] = -0.051043935f;
      sa[400] = 0.21599045f;
      sa[401] = 0.29764813f;
      sa[402] = -0.04501127f;
      sa[403] = 0.14343505f;
      sa[404] = 0.1924304f;
      sa[405] = -0.21864735f;
      sa[406] = -0.003536827f;
      sa[407] = 0.10705668f;
      sa[408] = -0.16908789f;
      sa[409] = -0.18662436f;
      sa[410] = -0.038794857f;
      sa[411] = 0.1934524f;
      sa[412] = -0.11921439f;
      sa[413] = 0.09981641f;
      sa[414] = 0.15119183f;
      sa[415] = 0.33105978f;
      sa[416] = -0.17611226f;
      sa[417] = 0.022380728f;
      sa[418] = 0.053219307f;
      sa[419] = 0.25381866f;
      sa[420] = 0.2487485f;
      sa[421] = 0.325391f;
      sa[422] = 0.23197745f;
      sa[423] = 0.042431496f;
      sa[424] = 0.08390312f;
      sa[425] = -0.07495037f;
      sa[426] = -0.25719154f;
      sa[427] = 0.1519184f;
      sa[428] = -0.14360261f;
      sa[429] = -0.20538801f;
      sa[430] = 0.1409105f;
      sa[431] = -0.018459879f;
      sa[432] = -0.064524025f;
      sa[433] = 0.057025746f;
      sa[434] = 0.17592876f;
      sa[435] = -0.09560765f;
      sa[436] = -0.1791596f;
      sa[437] = -0.18912153f;
      sa[438] = 0.04458518f;
      sa[439] = -0.0253356f;
      sa[440] = 0.26227254f;
      sa[441] = -0.3799578f;
      sa[442] = 0.020683078f;
      sa[443] = 0.07322726f;
      sa[444] = -0.23701945f;
      sa[445] = 0.07589404f;
      sa[446] = 0.21913959f;
      sa[447] = 0.023397058f;
      sa[448] = 0.17029954f;
      sa[449] = 0.18796404f;
      sa[450] = -0.09381875f;
      sa[451] = 0.13408455f;
      sa[452] = 0.1303326f;
      sa[453] = -0.051486596f;
      sa[454] = -0.16967972f;
      sa[455] = -0.08947734f;
      sa[456] = -0.07261734f;
      sa[457] = 0.07589082f;
      sa[458] = -0.19972141f;
      sa[459] = 0.31611073f;
      sa[460] = 0.18269227f;
      sa[461] = 0.28594404f;
      sa[462] = 0.075151004f;
      sa[463] = 0.17979077f;
      sa[464] = -0.5009444f;
      sa[465] = 0.2603185f;
      sa[466] = 0.041512646f;
      sa[467] = 0.13086669f;
      sa[468] = 0.06639926f;
      sa[469] = 0.24483028f;
      sa[470] = 0.18329558f;
      sa[471] = -0.07993345f;
      sa[472] = 0.06815385f;
      sa[473] = -0.052203637f;
      sa[474] = 0.06483694f;
      sa[475] = 0.13262606f;
      sa[476] = 0.2301478f;
      sa[477] = -0.20087613f;
      sa[478] = 0.064841f;
      sa[479] = -0.16235164f;
      sa[480] = -0.2890292f;
      sa[481] = -0.17241722f;
      sa[482] = -0.2134565f;
      sa[483] = 0.16577624f;
      sa[484] = 0.19720903f;
      sa[485] = 0.05982733f;
      sa[486] = -0.006777907f;
      sa[487] = -0.15034436f;
      sa[488] = -0.20642015f;
      sa[489] = 0.08155234f;
      sa[490] = 0.019347401f;
      sa[491] = -0.29134345f;
      sa[492] = 0.20557594f;
      sa[493] = 0.24023941f;
      sa[494] = -0.21238267f;
      sa[495] = 0.18929426f;
      sa[496] = -0.025041832f;
      sa[497] = 0.057785224f;
      sa[498] = 0.17410012f;
      sa[499] = 0.12028883f;
      sa[500] = -0.17664479f;
      sa[501] = 0.041121047f;
      sa[502] = 0.21559392f;
      sa[503] = 0.03231909f;
      sa[504] = -0.123922385f;
      sa[505] = -0.21205312f;
      sa[506] = 0.18855478f;
      sa[507] = 0.049511813f;
      sa[508] = 0.02357009f;
      sa[509] = 0.19885123f;
      sa[510] = 0.14674835f;
      sa[511] = -0.0024417406f;
      sa[512] = 0.06437877f;
      sa[513] = -0.058779698f;
      sa[514] = 0.2936196f;
      sa[515] = -0.23740122f;
      sa[516] = 0.04572252f;
      sa[517] = 0.10130974f;
      sa[518] = 0.16285093f;
      sa[519] = -0.038167205f;
      sa[520] = 0.21213835f;
      sa[521] = 0.26951966f;
      sa[522] = 0.08024127f;
      sa[523] = 0.25095874f;
      sa[524] = 0.16493762f;
      sa[525] = 0.098204225f;
      sa[526] = -0.035950195f;
      sa[527] = -0.038717967f;
      sa[528] = 0.034329265f;
      sa[529] = 0.15986736f;
      sa[530] = -0.16689739f;
      sa[531] = 0.14230038f;
      sa[532] = 0.14062332f;
      sa[533] = 0.09311209f;
      sa[534] = 0.119512744f;
      sa[535] = -0.04015778f;
      sa[536] = 0.21905035f;
      sa[537] = -0.21565294f;
      sa[538] = 0.25652137f;
      sa[539] = 0.3186789f;
      sa[540] = -0.20658025f;
      sa[541] = -0.1485368f;
      sa[542] = -0.11152015f;
      sa[543] = -0.16540068f;
      sa[544] = 0.13518685f;
      sa[545] = 0.051130492f;
      sa[546] = 0.008301264f;
      sa[547] = 0.14026827f;
      sa[548] = 0.10134945f;
      sa[549] = 0.120856926f;
      sa[550] = -0.06072646f;
      sa[551] = -0.05213416f;
      sa[552] = 0.010780819f;
      sa[553] = -0.10657779f;
      sa[554] = -0.21360882f;
      sa[555] = -0.18265146f;
      sa[556] = -0.19113639f;
      sa[557] = -0.30939394f;
      sa[558] = -0.21209379f;
      sa[559] = 0.0029657357f;
      sa[560] = -0.2662802f;
      sa[561] = -0.058981404f;
      sa[562] = 0.16608404f;
      sa[563] = -0.07441813f;
      sa[564] = 0.2072136f;
      sa[565] = -0.113294326f;
      sa[566] = 0.2501f;
      sa[567] = -0.11622945f;
      sa[568] = -0.045306683f;
      sa[569] = 0.06545728f;
      sa[570] = -0.027673898f;
      sa[571] = -0.03033745f;
      sa[572] = -0.08809806f;
      sa[573] = 0.18928285f;
      sa[574] = 0.18587966f;
      sa[575] = -0.3047123f;
      sa[576] = -0.05017233f;
      sa[577] = 0.06613202f;
      sa[578] = 0.15361428f;
      sa[579] = -0.073868625f;
      sa[580] = 0.09102086f;
      sa[581] = -0.18036786f;
      sa[582] = 0.079970784f;
      sa[583] = 0.0667497f;
      sa[584] = 0.15990095f;
      sa[585] = 0.28348497f;
      sa[586] = 0.022661274f;
      sa[587] = -0.08142034f;
      sa[588] = 0.08740518f;
      sa[589] = 0.08518575f;
      sa[590] = -0.029478807f;
      sa[591] = 0.02086934f;
      sa[592] = -0.28890762f;
      sa[593] = -0.21146953f;
      sa[594] = -0.057984397f;
      sa[595] = -0.09452011f;
      sa[596] = 0.2950147f;
      sa[597] = 0.02543324f;
      sa[598] = 0.26035592f;
      sa[599] = 0.013122151f;
      sa[600] = -0.26852784f;
      sa[601] = 0.3170283f;
      sa[602] = -0.06319448f;
      sa[603] = 0.18605483f;
      sa[604] = 0.22954689f;
      sa[605] = 0.17303692f;
      sa[606] = 0.15299f;
      sa[607] = 0.026264492f;
      sa[608] = -0.030995307f;
      sa[609] = 0.10149105f;
      sa[610] = 0.02052483f;
      sa[611] = -0.15646759f;
      sa[612] = -0.13043119f;
      sa[613] = 0.037421558f;
      sa[614] = 0.030038446f;
      sa[615] = -0.18745647f;
      sa[616] = 0.1052098f;
      sa[617] = -0.22612862f;
      sa[618] = -0.090232864f;
      sa[619] = -0.16317306f;
      sa[620] = -0.08209235f;
      sa[621] = -0.29062444f;
      sa[622] = -0.36275768f;
      sa[623] = -0.29197672f;
      sa[624] = -0.07343437f;
      sa[625] = 0.25280493f;
      sa[626] = 0.010233509f;
      sa[627] = 0.19748037f;
      sa[628] = -0.26354575f;
      sa[629] = -0.10821767f;
      sa[630] = -0.12112789f;
      sa[631] = 0.26686195f;
      sa[632] = 0.050104816f;
      sa[633] = -0.16888206f;
      sa[634] = -0.21101199f;
      sa[635] = 0.10278832f;
      sa[636] = -0.17759182f;
      sa[637] = -0.04742441f;
      sa[638] = -0.08044178f;
      sa[639] = 0.026039453f;
      sa[640] = -0.17060255f;
      sa[641] = -0.27825108f;
      sa[642] = 0.19300576f;
      sa[643] = -0.343456f;
      sa[644] = -0.24595031f;
      sa[645] = -0.19761755f;
      sa[646] = 0.324139f;
      sa[647] = -0.2026506f;
      sa[648] = -0.12405055f;
      sa[649] = -0.064429365f;
      sa[650] = 0.029460695f;
      sa[651] = -0.09714309f;
      sa[652] = 0.12079564f;
      sa[653] = -0.12136008f;
      sa[654] = -0.14846185f;
      sa[655] = -0.20019242f;
      sa[656] = 0.023460567f;
      sa[657] = 0.10626034f;
      sa[658] = -0.28401086f;
      sa[659] = -0.25572056f;
      sa[660] = -0.26602626f;
      sa[661] = -0.11933902f;
      sa[662] = -0.31916043f;
      sa[663] = 0.10306654f;
      sa[664] = -0.16958278f;
      sa[665] = 0.2661975f;
      sa[666] = -0.01116764f;
      sa[667] = -0.22254564f;
      sa[668] = 0.23049724f;
      sa[669] = -0.11133508f;
      sa[670] = 0.10449451f;
      sa[671] = 0.038962748f;
      sa[672] = -0.30172315f;
      sa[673] = 0.1095805f;
      sa[674] = 0.25843582f;
      sa[675] = -0.24754095f;
      sa[676] = -0.09355378f;
      sa[677] = -0.1663318f;
      sa[678] = 0.20850898f;
      sa[679] = -0.048609227f;
      sa[680] = 0.0441688f;
      sa[681] = 0.05486883f;
      sa[682] = 0.09345412f;
      sa[683] = -0.060017977f;
      sa[684] = -0.01782315f;
      sa[685] = 0.051998854f;
      sa[686] = -0.12164447f;
      sa[687] = -0.18405396f;
      sa[688] = -0.3276762f;
      sa[689] = -0.23643434f;
      sa[690] = -0.02669277f;
      sa[691] = 0.09697002f;
      sa[692] = -0.14501593f;
      sa[693] = -0.14024693f;
      sa[694] = 0.32197186f;
      sa[695] = -0.04484358f;
      sa[696] = -0.04881089f;
      sa[697] = -0.10755989f;
      sa[698] = -0.11338186f;
      sa[699] = 0.34257698f;
      sa[700] = 0.19457138f;
      sa[701] = 0.21823378f;
      sa[702] = 0.17830384f;
      sa[703] = 0.039415788f;
      sa[704] = -0.26936594f;
      sa[705] = -0.11157165f;
      sa[706] = -0.14070924f;
      sa[707] = 0.04041536f;
      sa[708] = 0.07027294f;
      sa[709] = -0.22538915f;
      sa[710] = 0.24579401f;
      sa[711] = -0.018739901f;
      sa[712] = 0.03171251f;
      sa[713] = 0.08452261f;
      sa[714] = 0.16682477f;
      sa[715] = 0.078059226f;
      sa[716] = 0.11672275f;
      sa[717] = 0.10420179f;
      sa[718] = 0.006001935f;
      sa[719] = 0.14839378f;
      sa[720] = -0.13902713f;
      sa[721] = 0.24169792f;
      sa[722] = -0.13874389f;
      sa[723] = 7.6055515E-4f;
      sa[724] = 0.033370364f;
      sa[725] = -0.29750967f;
      sa[726] = -0.22990128f;
      sa[727] = -0.23164473f;
      sa[728] = -0.031493533f;
      sa[729] = -0.059772134f;
      sa[730] = 0.12178129f;
      sa[731] = -0.20231918f;
      sa[732] = 0.19263953f;
      sa[733] = 0.21535857f;
      sa[734] = -0.1084606f;
      sa[735] = 0.34860855f;
      sa[736] = -0.013859831f;
      sa[737] = 0.15821733f;
      sa[738] = -0.23575822f;
      sa[739] = -0.32521f;
      sa[740] = -0.2150215f;
      sa[741] = -0.25202194f;
      sa[742] = 0.10885413f;
      sa[743] = 0.116134495f;
      sa[744] = 0.026923787f;
      sa[745] = -0.19963335f;
      sa[746] = 0.07183539f;
      sa[747] = -0.11166077f;
      sa[748] = -0.10805665f;
      sa[749] = -0.14652318f;
      sa[750] = 0.18707299f;
      sa[751] = 0.29436448f;
      sa[752] = -0.018029265f;
      sa[753] = 0.33674815f;
      sa[754] = -0.0066842907f;
      sa[755] = 0.106966905f;
      sa[756] = -0.14479764f;
      sa[757] = 0.27419865f;
      sa[758] = -0.11949555f;
      sa[759] = -0.025271853f;
      sa[760] = -0.19396786f;
      sa[761] = -0.014007776f;
      sa[762] = -0.17521241f;
      sa[763] = 0.13540667f;
      sa[764] = 0.09293718f;
      sa[765] = 0.00894057f;
      sa[766] = -0.14504308f;
      sa[767] = 0.09909464f;
      sa[768] = -0.16156912f;
      sa[769] = -0.2891634f;
      sa[770] = -0.0126602575f;
      sa[771] = 0.049374968f;
      sa[772] = 0.060686715f;
      sa[773] = -0.16359676f;
      sa[774] = -0.029731788f;
      sa[775] = 0.31503442f;
      sa[776] = -0.065669395f;
      sa[777] = 0.008607934f;
      sa[778] = 0.12933189f;
      sa[779] = -0.1245615f;
      sa[780] = 0.03534332f;
      sa[781] = -0.01868607f;
      sa[782] = 0.11567083f;
      sa[783] = -0.12300941f;
      sa[784] = -0.14200704f;
      sa[785] = -0.15838327f;
      sa[786] = -0.12639745f;
      sa[787] = -0.22367096f;
      sa[788] = -0.07454412f;
      sa[789] = 0.14056575f;
      sa[790] = -0.08016565f;
      sa[791] = -0.052753f;
      sa[792] = 0.107446685f;
      sa[793] = -0.14502242f;
      sa[794] = -0.23880672f;
      sa[795] = 0.048601743f;
      sa[796] = 0.24612693f;
      sa[797] = -0.20535204f;
      sa[798] = -0.28377962f;
      sa[799] = -0.2375545f;
      sa[800] = 0.15495723f;
      sa[801] = 0.021104684f;
      sa[802] = 0.20092702f;
      sa[803] = 0.05507258f;
      sa[804] = 0.19566406f;
      sa[805] = 0.26282573f;
      sa[806] = 0.24112627f;
      sa[807] = 0.16019621f;
      sa[808] = -0.05597405f;
      sa[809] = -0.26697773f;
      sa[810] = 0.09827442f;
      sa[811] = 0.16711201f;
      sa[812] = 0.15435062f;
      sa[813] = -0.2569433f;
      sa[814] = 0.0602565f;
      sa[815] = -0.17345913f;
      sa[816] = -0.14524274f;
      sa[817] = -0.22933361f;
      sa[818] = 0.015996503f;
      sa[819] = -0.12207373f;
      sa[820] = -0.2669409f;
      sa[821] = -0.16113769f;
      sa[822] = -0.25747192f;
      sa[823] = 0.09754821f;
      sa[824] = 0.14180295f;
      sa[825] = 0.3137684f;
      sa[826] = -0.27431592f;
      sa[827] = -0.28585988f;
      sa[828] = 0.12713867f;
      sa[829] = -0.09480962f;
      sa[830] = 0.13383986f;
      sa[831] = 0.21269701f;
      sa[832] = 0.1652676f;
      sa[833] = 0.054618288f;
      sa[834] = 0.15331046f;
      sa[835] = -0.098783486f;
      sa[836] = 0.21909124f;
      sa[837] = -0.21645737f;
      sa[838] = 0.063591585f;
      sa[839] = -0.21801037f;
      sa[840] = 0.18013932f;
      sa[841] = 0.07986037f;
      sa[842] = 0.11239221f;
      sa[843] = 0.018061562f;
      sa[844] = 0.015804049f;
      sa[845] = 0.042992108f;
      sa[846] = -0.26729056f;
      sa[847] = -0.13364321f;
      sa[848] = 0.24419692f;
      sa[849] = 0.2876792f;
      sa[850] = -0.0015357872f;
      sa[851] = 0.15022978f;
      sa[852] = 0.22600995f;
      sa[853] = 0.0477393f;
      sa[854] = 0.22746818f;
      sa[855] = 0.055562638f;
      sa[856] = 0.13736898f;
      sa[857] = -0.082035065f;
      sa[858] = 0.17105432f;
      sa[859] = 0.14600186f;
      sa[860] = 0.2839799f;
      sa[861] = -0.17153166f;
      sa[862] = -0.10836363f;
      sa[863] = 0.011395316f;
      sa[864] = -0.20648284f;
      sa[865] = 0.23546982f;
      sa[866] = -0.10402598f;
      sa[867] = -0.02347185f;
      sa[868] = -0.21295917f;
      sa[869] = 0.2176405f;
      sa[870] = 0.0030464453f;
      sa[871] = 0.15663597f;
      sa[872] = 0.21827395f;
      sa[873] = 0.0026466893f;
      sa[874] = 0.04047927f;
      sa[875] = -0.26024592f;
      sa[876] = -0.20545901f;
      sa[877] = -0.17629369f;
      sa[878] = 0.08803696f;
      sa[879] = 0.20766754f;
      sa[880] = -0.09755302f;
      sa[881] = -0.042497724f;
      sa[882] = 0.19463237f;
      sa[883] = 0.2854491f;
      sa[884] = -0.15761688f;
      sa[885] = -0.1771088f;
      sa[886] = 0.09663921f;
      sa[887] = -0.07559693f;
      sa[888] = -0.03692214f;
      sa[889] = 0.13922796f;
      sa[890] = -0.29370812f;
      sa[891] = 0.40207157f;
      sa[892] = 0.12983868f;
      sa[893] = 0.18638602f;
      sa[894] = 0.010483264f;
      sa[895] = 0.16198036f;
      sa[896] = -0.1822524f;
      sa[897] = 0.1274702f;
      sa[898] = -0.034905884f;
      sa[899] = 0.2531481f;
      sa[900] = -0.07472235f;
      sa[901] = 0.103781864f;
      sa[902] = -0.24357267f;
      sa[903] = -0.19422726f;
      sa[904] = 0.20545682f;
      sa[905] = 0.21385843f;
      sa[906] = -0.19319427f;
      sa[907] = -0.18383151f;
      sa[908] = -0.19682886f;
      sa[909] = -0.020940289f;
      sa[910] = -0.014698855f;
      sa[911] = -0.0866108f;
      sa[912] = 0.00903949f;
      sa[913] = 0.077768564f;
      sa[914] = -0.1362112f;
      sa[915] = 0.096602045f;
      sa[916] = 0.19429438f;
      sa[917] = -0.06495773f;
      sa[918] = 0.1693342f;
      sa[919] = -0.07349539f;
      sa[920] = 0.151206f;
      sa[921] = -0.053192172f;
      sa[922] = -0.08308649f;
      sa[923] = -0.09796297f;
      sa[924] = -0.10069537f;
      sa[925] = -0.15738675f;
      sa[926] = 0.08683796f;
      sa[927] = -0.043420453f;
      sa[928] = 0.23422128f;
      sa[929] = 0.14432462f;
      sa[930] = 0.16066697f;
      sa[931] = -0.006610955f;
      sa[932] = 0.1915243f;
      sa[933] = 0.09293517f;
      sa[934] = 0.17930806f;
      sa[935] = -0.24878702f;
      sa[936] = 0.07159703f;
      sa[937] = 0.21720394f;
      sa[938] = -0.0585115f;
      sa[939] = 0.018129362f;
      sa[940] = -0.10069721f;
      sa[941] = -0.3094443f;
      sa[942] = -0.23302643f;
      sa[943] = -0.15757932f;
      sa[944] = -0.22585504f;
      sa[945] = 0.14060874f;
      sa[946] = 0.12631287f;
      sa[947] = 0.22389477f;
      sa[948] = 0.11667977f;
      sa[949] = -0.16042262f;
      sa[950] = 0.116182715f;
      sa[951] = -0.04991314f;
      sa[952] = -0.19211298f;
      sa[953] = -0.116781764f;
      sa[954] = -0.22445466f;
      sa[955] = 0.10636288f;
      sa[956] = -0.015396343f;
      sa[957] = 0.00443702f;
      sa[958] = 0.09610911f;
      sa[959] = -0.15266302f;
      sa[960] = 0.36286178f;
      sa[961] = -0.057985708f;
      sa[962] = -0.030074753f;
      sa[963] = -0.018784085f;
      sa[964] = -0.17027669f;
      sa[965] = 0.21034996f;
      sa[966] = -0.10796354f;
      sa[967] = -0.27433717f;
      sa[968] = 0.20202285f;
      sa[969] = -0.017699018f;
      sa[970] = 0.30874977f;
      sa[971] = 0.046530046f;
      sa[972] = -0.15212154f;
      sa[973] = -0.23946065f;
      sa[974] = -0.39230037f;
      sa[975] = -0.33091742f;
      sa[976] = -0.023354648f;
      sa[977] = 0.039989468f;
      sa[978] = -0.09374607f;
      sa[979] = 0.16421509f;
      sa[980] = 0.10283925f;
      sa[981] = -0.30755618f;
      sa[982] = 0.062823094f;
      sa[983] = -0.060532983f;
      sa[984] = -0.2960815f;
      sa[985] = 0.025151003f;
      sa[986] = -0.29992807f;
      sa[987] = 0.04897211f;
      sa[988] = 0.13019823f;
      sa[989] = 0.1283859f;
      sa[990] = 0.26150623f;
      sa[991] = -0.3251358f;
      sa[992] = -0.17321405f;
      sa[993] = 0.018992843f;
      sa[994] = -0.14043032f;
      sa[995] = -0.253899f;
      sa[996] = 0.109783135f;
      sa[997] = 0.10378721f;
      sa[998] = 0.11244703f;
      sa[999] = 0.16660227f;
      sa[1000] = 0.0404822f;
      sa[1001] = 0.29701167f;
      sa[1002] = 0.27602652f;
      sa[1003] = -0.046559017f;
      sa[1004] = 0.073399104f;
      sa[1005] = -0.13859138f;
      sa[1006] = -0.13077255f;
      sa[1007] = -0.031165505f;
      sa[1008] = 0.1929828f;
      sa[1009] = 0.04705958f;
      sa[1010] = -0.05201936f;
      sa[1011] = 0.43201533f;
      sa[1012] = -0.11196403f;
      sa[1013] = 0.10317196f;
      sa[1014] = 0.1799246f;
      sa[1015] = -0.36245134f;
      sa[1016] = 0.23984551f;
      sa[1017] = 0.030140778f;
      sa[1018] = -0.083718486f;
      sa[1019] = 0.1024948f;
      sa[1020] = -0.26633742f;
      sa[1021] = 0.036017887f;
      sa[1022] = 0.16288282f;
      sa[1023] = 0.063734904f;
      sa[1024] = -0.048825245f;
      sa[1025] = 0.124482796f;
      sa[1026] = 0.13833506f;
      sa[1027] = 0.26646605f;
      sa[1028] = 0.26880723f;
      sa[1029] = -0.055504747f;
      sa[1030] = -0.22437066f;
      sa[1031] = 0.026264977f;
      sa[1032] = -0.24508405f;
      sa[1033] = 0.021462914f;
      sa[1034] = -0.035307176f;
      sa[1035] = -0.2663939f;
      sa[1036] = 0.2533521f;
      sa[1037] = 0.020753289f;
      sa[1038] = -0.21672991f;
      sa[1039] = 0.28389767f;
      sa[1040] = 0.08133383f;
      sa[1041] = 0.1269269f;
      sa[1042] = -0.2010714f;
      sa[1043] = -0.022945307f;
      sa[1044] = 0.18210036f;
      sa[1045] = 0.15311137f;
      sa[1046] = -0.20489888f;
      sa[1047] = -0.304248f;
      sa[1048] = 0.20945106f;
      sa[1049] = -0.04832295f;
      sa[1050] = 0.0990169f;
      sa[1051] = -0.1431604f;
      sa[1052] = 0.13177924f;
      sa[1053] = 0.16956878f;
      sa[1054] = 0.15738872f;
      sa[1055] = -0.045883313f;
      sa[1056] = 0.26830387f;
      sa[1057] = -0.15958034f;
      sa[1058] = 0.25707677f;
      sa[1059] = -0.13481776f;
      sa[1060] = -0.3088666f;
      sa[1061] = -0.04007502f;
      sa[1062] = 0.23578957f;
      sa[1063] = 0.016250324f;
      sa[1064] = 0.0745157f;
      sa[1065] = -0.026983052f;
      sa[1066] = 0.20142299f;
      sa[1067] = -0.2737291f;
      sa[1068] = -0.2629708f;
      sa[1069] = 0.19703802f;
      sa[1070] = 0.14035484f;
      sa[1071] = 0.30693823f;
      sa[1072] = -0.25882053f;
      sa[1073] = 0.13120204f;
      sa[1074] = 0.14011632f;
      sa[1075] = -0.16013502f;
      sa[1076] = -0.21711366f;
      sa[1077] = 0.1412138f;
      sa[1078] = 0.035439976f;
      sa[1079] = 0.09563604f;
      sa[1080] = 0.283159f;
      sa[1081] = 0.26433212f;
      sa[1082] = -0.32731548f;
      sa[1083] = -0.11251287f;
      sa[1084] = 0.19185315f;
      sa[1085] = -0.29374644f;
      sa[1086] = -0.33233815f;
      sa[1087] = -0.19545278f;
      sa[1088] = -0.120140456f;
      sa[1089] = 0.10237854f;
      sa[1090] = -0.18077584f;
      sa[1091] = 0.21915558f;
      sa[1092] = -0.21852595f;
      sa[1093] = -0.31737003f;
      sa[1094] = -0.04135675f;
      sa[1095] = -0.17514943f;
      sa[1096] = 0.07630348f;
      sa[1097] = -0.15335135f;
      sa[1098] = -0.029666856f;
      sa[1099] = -0.16061857f;
      sa[1100] = -0.046457518f;
      sa[1101] = 0.18188152f;
      sa[1102] = -0.110298276f;
      sa[1103] = 0.26549768f;
      sa[1104] = -0.31364125f;
      sa[1105] = -0.108615845f;
      sa[1106] = -0.1316603f;
      sa[1107] = 0.090953715f;
      sa[1108] = -0.14176384f;
      sa[1109] = 0.2592222f;
      sa[1110] = 0.13084811f;
      sa[1111] = -0.21707067f;
      sa[1112] = 0.31042552f;
      sa[1113] = 0.28844425f;
      sa[1114] = -0.037368987f;
      sa[1115] = 0.09254095f;
      sa[1116] = -0.033787414f;
      sa[1117] = -0.22657076f;
      sa[1118] = -0.20882459f;
      sa[1119] = -0.06501213f;
      sa[1120] = 0.22158103f;
      sa[1121] = 0.11205164f;
      sa[1122] = 0.26927677f;
      sa[1123] = 0.29462668f;
      sa[1124] = 0.03719365f;
      sa[1125] = -0.12788638f;
      sa[1126] = 0.17692709f;
      sa[1127] = 0.15258442f;
      sa[1128] = 0.03257812f;
      sa[1129] = -0.0779393f;
      sa[1130] = 0.23386966f;
      sa[1131] = 0.33106017f;
      sa[1132] = -0.20077899f;
      sa[1133] = -0.11715002f;
      sa[1134] = 0.22973362f;
      sa[1135] = -0.31310278f;
      sa[1136] = -0.005552182f;
      sa[1137] = 0.22278833f;
      sa[1138] = -0.06547906f;
      sa[1139] = 0.25027362f;
      sa[1140] = 0.24706876f;
      sa[1141] = -0.25572205f;
      sa[1142] = 0.10507834f;
      sa[1143] = 0.027886732f;
      sa[1144] = -0.20555618f;
      sa[1145] = 0.23599245f;
      sa[1146] = 0.27222326f;
      sa[1147] = 0.046702735f;
      sa[1148] = 0.07816641f;
      sa[1149] = 0.06261809f;
      sa[1150] = -0.26840594f;
      sa[1151] = -0.25826633f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_02_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_Tanh_02_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2137889f;
      sa[1] = -0.13724825f;
      sa[2] = -0.58363307f;
      sa[3] = -1.0220923f;
      sa[4] = 0.042111784f;
      sa[5] = 0.15061234f;
      sa[6] = 1.3134689f;
      sa[7] = -0.73361135f;
      sa[8] = -0.9186513f;
      sa[9] = 0.81411195f;
      sa[10] = -0.14165074f;
      sa[11] = 0.26494038f;
      sa[12] = 0.12490842f;
      sa[13] = 0.0227213f;
      sa[14] = -1.3745683f;
      sa[15] = 1.1379801f;
      sa[16] = 1.6023445f;
      sa[17] = -0.5426689f;
      sa[18] = 0.105845846f;
      sa[19] = -0.49969006f;
      sa[20] = 1.1457567f;
      sa[21] = 0.06407527f;
      sa[22] = -0.90373605f;
      sa[23] = 0.744655f;
      sa[24] = -1.4316212f;
      sa[25] = 0.42761892f;
      sa[26] = -0.24980935f;
      sa[27] = 1.4775763f;
      sa[28] = -1.2905737f;
      sa[29] = -0.4448894f;
      sa[30] = 0.44500726f;
      sa[31] = -0.609627f;
      sa[32] = -1.0915254f;
      sa[33] = -1.471734f;
      sa[34] = 0.042371802f;
      sa[35] = 1.420263f;
      sa[36] = -0.27460912f;
      sa[37] = -0.026975462f;
      sa[38] = 0.24829753f;
      sa[39] = 0.8639738f;
      sa[40] = -0.7600717f;
      sa[41] = -1.4044677f;
      sa[42] = -0.9844539f;
      sa[43] = -1.3991077f;
      sa[44] = -0.013195595f;
      sa[45] = -1.3246391f;
      sa[46] = 1.1910965f;
      sa[47] = 1.2507026f;
      sa[48] = -1.3559716f;
      sa[49] = -1.0916492f;
      sa[50] = 0.47908375f;
      sa[51] = -0.31974676f;
      sa[52] = 0.8343642f;
      sa[53] = 0.8685611f;
      sa[54] = -0.22261316f;
      sa[55] = 1.1589096f;
      sa[56] = -1.0682981f;
      sa[57] = -1.0885597f;
      sa[58] = 0.19142556f;
      sa[59] = -0.23430282f;
      sa[60] = 1.4482545f;
      sa[61] = -0.6695225f;
      sa[62] = -0.3335052f;
      sa[63] = 0.68052435f;
      sa[64] = 1.4035755f;
      sa[65] = -0.65843034f;
      sa[66] = 0.64399755f;
      sa[67] = 1.6260782f;
      sa[68] = 0.66911066f;
      sa[69] = -1.0839776f;
      sa[70] = -1.5600837f;
      sa[71] = -0.3588266f;
      sa[72] = -1.3106623f;
      sa[73] = 1.2212771f;
      sa[74] = 1.3804691f;
      sa[75] = -0.12131413f;
      sa[76] = 0.84768426f;
      sa[77] = 0.4938847f;
      sa[78] = -1.2810409f;
      sa[79] = 1.0272928f;
      sa[80] = -0.80420744f;
      sa[81] = 0.3389483f;
      sa[82] = 0.86015826f;
      sa[83] = -0.6092703f;
      sa[84] = -1.614167f;
      sa[85] = -1.2505598f;
      sa[86] = 0.17882878f;
      sa[87] = 1.2032255f;
      sa[88] = -1.5530825f;
      sa[89] = -0.482301f;
      sa[90] = -1.0423652f;
      sa[91] = 1.5502546f;
      sa[92] = -0.37613472f;
      sa[93] = 0.23390754f;
      sa[94] = -1.5149431f;
      sa[95] = -0.24292777f;
      sa[96] = -1.0902086f;
      sa[97] = 0.19325218f;
      sa[98] = -0.07285714f;
      sa[99] = 0.31940493f;
      sa[100] = -1.323332f;
      sa[101] = -0.413889f;
      sa[102] = 1.2706825f;
      sa[103] = 0.053785484f;
      sa[104] = -0.14641152f;
      sa[105] = -0.664272f;
      sa[106] = 1.4118865f;
      sa[107] = 1.2648128f;
      sa[108] = 0.8497656f;
      sa[109] = 0.16369046f;
      sa[110] = 0.74309415f;
      sa[111] = -0.737178f;
      sa[112] = -1.1023009f;
      sa[113] = 0.22911349f;
      sa[114] = 0.12154501f;
      sa[115] = -0.29570326f;
      sa[116] = 1.155373f;
      sa[117] = 0.06382425f;
      sa[118] = -1.3258662f;
      sa[119] = -0.77543175f;
      sa[120] = -0.21182552f;
      sa[121] = 1.0500854f;
      sa[122] = -0.075506374f;
      sa[123] = 0.43592295f;
      sa[124] = -0.79362565f;
      sa[125] = 0.8207845f;
      sa[126] = -0.9836783f;
      sa[127] = 0.43725032f;
      sa[128] = -0.84657514f;
      sa[129] = 0.75208116f;
      sa[130] = -0.32040143f;
      sa[131] = 0.9282482f;
      sa[132] = 0.55543923f;
      sa[133] = 0.7133232f;
      sa[134] = 0.6161248f;
      sa[135] = -1.0937066f;
      sa[136] = 0.52204686f;
      sa[137] = -0.6743127f;
      sa[138] = -0.14135166f;
      sa[139] = 1.1793865f;
      sa[140] = -0.48746386f;
      sa[141] = -0.0016968376f;
      sa[142] = 0.34693488f;
      sa[143] = -0.7962173f;
      sa[144] = 0.940761f;
      sa[145] = -0.7948253f;
      sa[146] = 0.046029735f;
      sa[147] = -0.25194374f;
      sa[148] = -0.8101824f;
      sa[149] = 1.0783716f;
      sa[150] = -1.1286606f;
      sa[151] = -1.536211f;
      sa[152] = 1.586496f;
      sa[153] = -0.5700856f;
      sa[154] = 1.3627096f;
      sa[155] = -1.4983968f;
      sa[156] = -1.4659598f;
      sa[157] = -1.1107005f;
      sa[158] = -0.23796123f;
      sa[159] = -0.66365546f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_02 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_02_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_02_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_02_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_Tanh_02_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_02_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


