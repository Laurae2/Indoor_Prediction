/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:58.455+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_09 > h2o_nn_32x6_ReLU_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_09", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_09_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6857224171635333192L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.35770368146070036;
      sa[1] = 0.509060480583352;
      sa[2] = 0.5265922501954797;
      sa[3] = 0.38660032889496426;
      sa[4] = 0.5068407312280423;
      sa[5] = 0.5823501488570751;
      sa[6] = 0.3825771839831276;
      sa[7] = 0.39513981036248025;
      sa[8] = 0.508984516019581;
      sa[9] = 0.5329409584275605;
      sa[10] = 0.24570041431475856;
      sa[11] = 0.5565671684863004;
      sa[12] = 0.5713993040876364;
      sa[13] = 0.45570821275018997;
      sa[14] = 0.6164908509185528;
      sa[15] = 0.528931367277902;
      sa[16] = 0.5435482920187665;
      sa[17] = 0.5150347049867878;
      sa[18] = 0.48598844951542336;
      sa[19] = 0.6179301859346846;
      sa[20] = 0.40850817211514834;
      sa[21] = 0.567003164091802;
      sa[22] = 0.44823544182886166;
      sa[23] = 0.5101942547103222;
      sa[24] = 0.5068863719395451;
      sa[25] = 0.5197901116892711;
      sa[26] = 0.44991814580452577;
      sa[27] = 0.4978088087152835;
      sa[28] = 0.4424235070466003;
      sa[29] = 0.4848191938512074;
      sa[30] = 0.6964511690505496;
      sa[31] = 0.4433724218060244;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.027854278426205248;
      sa[1] = -0.023042422929014;
      sa[2] = -0.08756659967036597;
      sa[3] = -0.015309876354677563;
      sa[4] = -0.01657752139817215;
      sa[5] = 0.009141946271782334;
    }
  }
}
class h2o_nn_32x6_ReLU_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.09192684f;
      sa[1] = 0.2262391f;
      sa[2] = 0.0923049f;
      sa[3] = 0.014245398f;
      sa[4] = -0.23213968f;
      sa[5] = -0.2379435f;
      sa[6] = -0.16673173f;
      sa[7] = 0.18616073f;
      sa[8] = 0.026819643f;
      sa[9] = -0.13676177f;
      sa[10] = -0.15087554f;
      sa[11] = -0.25792974f;
      sa[12] = 0.05381572f;
      sa[13] = -0.30914822f;
      sa[14] = -0.26604632f;
      sa[15] = -0.031210575f;
      sa[16] = 0.021354707f;
      sa[17] = 0.15677215f;
      sa[18] = -0.18720777f;
      sa[19] = 0.14504464f;
      sa[20] = 0.20101477f;
      sa[21] = -0.33946046f;
      sa[22] = 0.1488447f;
      sa[23] = -0.1660395f;
      sa[24] = 0.26204053f;
      sa[25] = 0.004814277f;
      sa[26] = -0.14982177f;
      sa[27] = 0.40563032f;
      sa[28] = 0.23240289f;
      sa[29] = -0.26796964f;
      sa[30] = -0.1806981f;
      sa[31] = 0.20219806f;
      sa[32] = 0.22870982f;
      sa[33] = -0.19284137f;
      sa[34] = 0.034575224f;
      sa[35] = -0.1087403f;
      sa[36] = 0.20044515f;
      sa[37] = 0.21131487f;
      sa[38] = -0.22834209f;
      sa[39] = 0.1851572f;
      sa[40] = -0.045172084f;
      sa[41] = -0.093895234f;
      sa[42] = -0.18148084f;
      sa[43] = -0.08614591f;
      sa[44] = 0.3357277f;
      sa[45] = -0.36576596f;
      sa[46] = 0.064686544f;
      sa[47] = 0.041250393f;
      sa[48] = 0.17378299f;
      sa[49] = 0.23813677f;
      sa[50] = 0.15678284f;
      sa[51] = -0.3787941f;
      sa[52] = -0.14889868f;
      sa[53] = 0.08211185f;
      sa[54] = 0.19799405f;
      sa[55] = 0.06971442f;
      sa[56] = -0.23665325f;
      sa[57] = -0.36776835f;
      sa[58] = 0.19788438f;
      sa[59] = -0.33074287f;
      sa[60] = -0.38942838f;
      sa[61] = 0.22156061f;
      sa[62] = 0.12749319f;
      sa[63] = -0.013025398f;
      sa[64] = 0.06180905f;
      sa[65] = 0.017076733f;
      sa[66] = -0.03514501f;
      sa[67] = 0.022243045f;
      sa[68] = -0.16596416f;
      sa[69] = 0.063541844f;
      sa[70] = -0.002765391f;
      sa[71] = 0.34533307f;
      sa[72] = -0.31094754f;
      sa[73] = 0.24618706f;
      sa[74] = -0.083874114f;
      sa[75] = -0.03278472f;
      sa[76] = -0.13605823f;
      sa[77] = -0.03750963f;
      sa[78] = -0.062276356f;
      sa[79] = 0.31614313f;
      sa[80] = -0.3974249f;
      sa[81] = 0.07690595f;
      sa[82] = -0.029026443f;
      sa[83] = 0.07569423f;
      sa[84] = 0.061695553f;
      sa[85] = -0.09826413f;
      sa[86] = 0.18029086f;
      sa[87] = 0.3765976f;
      sa[88] = 0.2763021f;
      sa[89] = 0.15832902f;
      sa[90] = -0.19876057f;
      sa[91] = 0.10593494f;
      sa[92] = 0.16350406f;
      sa[93] = -0.12553814f;
      sa[94] = -0.12687954f;
      sa[95] = -0.10966851f;
      sa[96] = 0.20451352f;
      sa[97] = -0.021796865f;
      sa[98] = 0.20509209f;
      sa[99] = 0.027469272f;
      sa[100] = 0.0742455f;
      sa[101] = -0.044210307f;
      sa[102] = -0.10753549f;
      sa[103] = 0.09931508f;
      sa[104] = -0.055119954f;
      sa[105] = -0.117662705f;
      sa[106] = -0.19885018f;
      sa[107] = 0.14084408f;
      sa[108] = 0.12324475f;
      sa[109] = -0.10674939f;
      sa[110] = -0.12163621f;
      sa[111] = 0.19236754f;
      sa[112] = 0.13402133f;
      sa[113] = 0.02664712f;
      sa[114] = -0.058102995f;
      sa[115] = -8.341188E-4f;
      sa[116] = -0.2510593f;
      sa[117] = -0.042302754f;
      sa[118] = -0.31784672f;
      sa[119] = 0.04556247f;
      sa[120] = 0.24977079f;
      sa[121] = 0.26053193f;
      sa[122] = 0.3964468f;
      sa[123] = 0.36834762f;
      sa[124] = 0.30729735f;
      sa[125] = 0.21366112f;
      sa[126] = -0.29696003f;
      sa[127] = -0.3764779f;
      sa[128] = 0.101420544f;
      sa[129] = 0.17752191f;
      sa[130] = -0.027781563f;
      sa[131] = 0.33756793f;
      sa[132] = 0.15925354f;
      sa[133] = -0.24182402f;
      sa[134] = -0.027120538f;
      sa[135] = -0.37768483f;
      sa[136] = -0.31121072f;
      sa[137] = -0.098396264f;
      sa[138] = 0.03283709f;
      sa[139] = -0.1639891f;
      sa[140] = -0.09129595f;
      sa[141] = -0.11567299f;
      sa[142] = 0.1912223f;
      sa[143] = -0.23960896f;
      sa[144] = 0.104607835f;
      sa[145] = -0.20114964f;
      sa[146] = -0.3541524f;
      sa[147] = 0.006275217f;
      sa[148] = 0.16655847f;
      sa[149] = 0.14903969f;
      sa[150] = 0.24763085f;
      sa[151] = -0.22658977f;
      sa[152] = -0.064947665f;
      sa[153] = 0.2711718f;
      sa[154] = 0.18243541f;
      sa[155] = -0.13399313f;
      sa[156] = 0.13735986f;
      sa[157] = -0.20158264f;
      sa[158] = 0.068054944f;
      sa[159] = 0.1188674f;
      sa[160] = -0.011245352f;
      sa[161] = 0.1621325f;
      sa[162] = -0.03366244f;
      sa[163] = -0.27662408f;
      sa[164] = 0.22697553f;
      sa[165] = -0.029440109f;
      sa[166] = -0.07454593f;
      sa[167] = -0.039654694f;
      sa[168] = 0.15685068f;
      sa[169] = 0.22475745f;
      sa[170] = 0.18549544f;
      sa[171] = 0.008674446f;
      sa[172] = -0.06286491f;
      sa[173] = -0.13772014f;
      sa[174] = -0.044734813f;
      sa[175] = -0.18477659f;
      sa[176] = 0.024762884f;
      sa[177] = 0.05748061f;
      sa[178] = -0.094486125f;
      sa[179] = 0.102099985f;
      sa[180] = -0.107675366f;
      sa[181] = -0.3709938f;
      sa[182] = -0.20272721f;
      sa[183] = 0.11847356f;
      sa[184] = 0.2917405f;
      sa[185] = 0.13313465f;
      sa[186] = -0.2969619f;
      sa[187] = 0.001380524f;
      sa[188] = -0.10297652f;
      sa[189] = 0.17735364f;
      sa[190] = 0.021601763f;
      sa[191] = -0.14590918f;
      sa[192] = -0.15640387f;
      sa[193] = 0.14027728f;
      sa[194] = 0.042732194f;
      sa[195] = 0.14655624f;
      sa[196] = 0.18186156f;
      sa[197] = -0.04811253f;
      sa[198] = 0.300224f;
      sa[199] = -0.08428478f;
      sa[200] = -0.004233504f;
      sa[201] = -0.28292876f;
      sa[202] = 0.09940897f;
      sa[203] = -0.08537772f;
      sa[204] = -0.28923172f;
      sa[205] = 0.22199719f;
      sa[206] = 0.3929134f;
      sa[207] = 0.13226436f;
      sa[208] = -0.3082482f;
      sa[209] = -0.11025613f;
      sa[210] = -0.34172437f;
      sa[211] = -0.36752766f;
      sa[212] = 0.26988393f;
      sa[213] = -0.27061886f;
      sa[214] = -0.047277056f;
      sa[215] = 0.09480123f;
      sa[216] = 0.08547064f;
      sa[217] = 0.11329957f;
      sa[218] = -0.17381994f;
      sa[219] = 0.24677907f;
      sa[220] = -0.26517746f;
      sa[221] = -0.025654329f;
      sa[222] = 0.14386174f;
      sa[223] = 0.010294733f;
      sa[224] = 0.086778976f;
      sa[225] = 0.33316526f;
      sa[226] = -0.16294613f;
      sa[227] = 0.19224718f;
      sa[228] = 0.040456038f;
      sa[229] = 0.013474417f;
      sa[230] = 0.16501245f;
      sa[231] = -0.3075375f;
      sa[232] = -0.23584223f;
      sa[233] = 0.16251116f;
      sa[234] = 0.22716573f;
      sa[235] = -0.1893801f;
      sa[236] = -0.107277334f;
      sa[237] = -0.2791349f;
      sa[238] = -0.28239f;
      sa[239] = 0.07071645f;
      sa[240] = -0.027644938f;
      sa[241] = -0.14031498f;
      sa[242] = -0.007350564f;
      sa[243] = -0.16358835f;
      sa[244] = -0.25152427f;
      sa[245] = -0.16294155f;
      sa[246] = -0.3046817f;
      sa[247] = -0.11116271f;
      sa[248] = 0.26275864f;
      sa[249] = 0.19581787f;
      sa[250] = -0.14357561f;
      sa[251] = -0.07050997f;
      sa[252] = -0.116717115f;
      sa[253] = -0.2255386f;
      sa[254] = -0.14580637f;
      sa[255] = 0.313968f;
      sa[256] = -0.20481424f;
      sa[257] = 0.2737394f;
      sa[258] = -0.20352785f;
      sa[259] = -0.1433027f;
      sa[260] = -0.10662441f;
      sa[261] = -0.09879223f;
      sa[262] = -0.11344475f;
      sa[263] = 0.3431164f;
      sa[264] = -0.17287217f;
      sa[265] = 0.060923535f;
      sa[266] = -0.23680691f;
      sa[267] = -0.23491447f;
      sa[268] = 0.17575076f;
      sa[269] = -0.14692569f;
      sa[270] = -0.11930273f;
      sa[271] = 0.33258855f;
      sa[272] = -0.13021888f;
      sa[273] = -0.17133915f;
      sa[274] = 0.09914138f;
      sa[275] = -0.06748062f;
      sa[276] = 0.070552506f;
      sa[277] = -0.1388934f;
      sa[278] = -0.25001618f;
      sa[279] = 0.15129147f;
      sa[280] = -0.232145f;
      sa[281] = 0.1878729f;
      sa[282] = -0.1450557f;
      sa[283] = -0.14992346f;
      sa[284] = 0.033151697f;
      sa[285] = -0.14847803f;
      sa[286] = 0.24074481f;
      sa[287] = 0.08881971f;
      sa[288] = -0.28658068f;
      sa[289] = -0.17672175f;
      sa[290] = -0.11682427f;
      sa[291] = -0.101884045f;
      sa[292] = 0.1290809f;
      sa[293] = -0.11668514f;
      sa[294] = 0.031861853f;
      sa[295] = 0.10843673f;
      sa[296] = 0.10108481f;
      sa[297] = 0.19996032f;
      sa[298] = -0.04509455f;
      sa[299] = -0.16185082f;
      sa[300] = -0.00445421f;
      sa[301] = -0.08152865f;
      sa[302] = 0.11626053f;
      sa[303] = 0.0010890507f;
      sa[304] = -0.18619798f;
      sa[305] = -0.012178547f;
      sa[306] = 0.29104114f;
      sa[307] = -0.11197408f;
      sa[308] = 0.089111485f;
      sa[309] = 0.15596773f;
      sa[310] = 0.2517845f;
      sa[311] = 0.32228026f;
      sa[312] = -0.15770173f;
      sa[313] = -0.18360084f;
      sa[314] = -0.078142755f;
      sa[315] = 0.14229901f;
      sa[316] = 0.006206992f;
      sa[317] = -0.04463609f;
      sa[318] = 0.11810428f;
      sa[319] = 0.32465556f;
      sa[320] = -0.1475692f;
      sa[321] = 0.04918673f;
      sa[322] = 0.33415723f;
      sa[323] = -0.0392815f;
      sa[324] = 0.08278245f;
      sa[325] = 0.20500465f;
      sa[326] = -0.39684597f;
      sa[327] = 0.045847297f;
      sa[328] = -0.1444799f;
      sa[329] = 0.2498153f;
      sa[330] = -0.18950261f;
      sa[331] = -0.014013728f;
      sa[332] = -0.115561634f;
      sa[333] = 0.045093834f;
      sa[334] = -0.029213728f;
      sa[335] = 0.37667322f;
      sa[336] = -0.16336024f;
      sa[337] = -0.12307906f;
      sa[338] = 0.26696742f;
      sa[339] = -0.18221772f;
      sa[340] = -0.4124716f;
      sa[341] = -0.36772358f;
      sa[342] = 0.07536227f;
      sa[343] = -0.18513457f;
      sa[344] = -0.20873058f;
      sa[345] = 0.11923409f;
      sa[346] = 0.17919351f;
      sa[347] = -0.25197935f;
      sa[348] = 0.17407705f;
      sa[349] = -0.20588268f;
      sa[350] = -0.30010974f;
      sa[351] = 0.051975988f;
      sa[352] = 0.114750355f;
      sa[353] = -0.14242284f;
      sa[354] = 0.010460107f;
      sa[355] = 0.02241468f;
      sa[356] = -0.07504567f;
      sa[357] = 0.3604393f;
      sa[358] = -0.38276798f;
      sa[359] = -0.051444493f;
      sa[360] = 0.0593434f;
      sa[361] = 0.042288452f;
      sa[362] = -0.17745848f;
      sa[363] = 0.17036076f;
      sa[364] = -0.21277416f;
      sa[365] = -0.26142517f;
      sa[366] = -0.08480854f;
      sa[367] = -0.30447695f;
      sa[368] = -0.19432014f;
      sa[369] = 0.26867804f;
      sa[370] = -0.13356914f;
      sa[371] = 0.24351f;
      sa[372] = -0.051450957f;
      sa[373] = 0.25463292f;
      sa[374] = -0.17811534f;
      sa[375] = -0.2515454f;
      sa[376] = -0.24576627f;
      sa[377] = -0.23717295f;
      sa[378] = 0.17728975f;
      sa[379] = 0.06467147f;
      sa[380] = -0.15667933f;
      sa[381] = -0.16318414f;
      sa[382] = -0.083411746f;
      sa[383] = -0.15035965f;
      sa[384] = -0.12349941f;
      sa[385] = 0.14289674f;
      sa[386] = -0.3709739f;
      sa[387] = -0.15654707f;
      sa[388] = 0.034640357f;
      sa[389] = -0.07033709f;
      sa[390] = -0.04312916f;
      sa[391] = -0.121566065f;
      sa[392] = 0.21108955f;
      sa[393] = 0.27781886f;
      sa[394] = -0.029133873f;
      sa[395] = 0.25453183f;
      sa[396] = 0.3804387f;
      sa[397] = -0.29312852f;
      sa[398] = -0.0013547789f;
      sa[399] = -0.1114564f;
      sa[400] = 0.13864096f;
      sa[401] = 0.25354016f;
      sa[402] = -0.18598196f;
      sa[403] = 0.012353324f;
      sa[404] = 0.33959937f;
      sa[405] = -0.37581944f;
      sa[406] = -0.041146323f;
      sa[407] = -0.01250199f;
      sa[408] = -0.22956778f;
      sa[409] = -0.20709689f;
      sa[410] = -0.1658719f;
      sa[411] = 0.090738654f;
      sa[412] = -0.1519604f;
      sa[413] = -0.009380194f;
      sa[414] = 0.14327793f;
      sa[415] = 0.43220168f;
      sa[416] = -0.20345931f;
      sa[417] = -0.013562829f;
      sa[418] = -0.045986205f;
      sa[419] = 0.20447904f;
      sa[420] = 0.18857649f;
      sa[421] = 0.21045655f;
      sa[422] = 0.29569244f;
      sa[423] = 0.10657495f;
      sa[424] = 0.108276665f;
      sa[425] = -0.05616777f;
      sa[426] = -0.2269647f;
      sa[427] = 0.20747282f;
      sa[428] = -0.13233249f;
      sa[429] = -0.32927075f;
      sa[430] = 0.27487612f;
      sa[431] = 0.022762464f;
      sa[432] = 0.036453437f;
      sa[433] = 0.15439779f;
      sa[434] = 0.3168137f;
      sa[435] = -0.03069813f;
      sa[436] = -0.21598591f;
      sa[437] = -0.16033643f;
      sa[438] = 0.015353412f;
      sa[439] = 0.12861563f;
      sa[440] = 0.3417592f;
      sa[441] = -0.24332099f;
      sa[442] = 0.113406315f;
      sa[443] = 0.035336193f;
      sa[444] = -0.16033232f;
      sa[445] = 0.16481164f;
      sa[446] = 0.24582775f;
      sa[447] = 0.19951986f;
      sa[448] = 0.2324262f;
      sa[449] = 0.2831691f;
      sa[450] = -0.21781108f;
      sa[451] = 0.18875173f;
      sa[452] = 0.21723074f;
      sa[453] = -0.0057678036f;
      sa[454] = -0.12385514f;
      sa[455] = 0.036515426f;
      sa[456] = 0.023748772f;
      sa[457] = 0.05291734f;
      sa[458] = -0.2471235f;
      sa[459] = 0.32934183f;
      sa[460] = 0.29886433f;
      sa[461] = 0.3843347f;
      sa[462] = 0.19076404f;
      sa[463] = 0.36160985f;
      sa[464] = -0.28619465f;
      sa[465] = 0.22066687f;
      sa[466] = -0.05038503f;
      sa[467] = 0.08085093f;
      sa[468] = 0.010757993f;
      sa[469] = 0.29847252f;
      sa[470] = 0.16167381f;
      sa[471] = -0.04187141f;
      sa[472] = -0.011469021f;
      sa[473] = -0.07775858f;
      sa[474] = -0.05725368f;
      sa[475] = 0.15425354f;
      sa[476] = 0.136326f;
      sa[477] = -0.10792494f;
      sa[478] = 0.1092778f;
      sa[479] = -0.17800832f;
      sa[480] = -0.28771454f;
      sa[481] = -0.1629478f;
      sa[482] = -0.27698994f;
      sa[483] = 0.24518044f;
      sa[484] = 0.2551341f;
      sa[485] = 0.14741302f;
      sa[486] = -0.06035081f;
      sa[487] = -0.14391123f;
      sa[488] = -0.19557615f;
      sa[489] = 0.063255064f;
      sa[490] = -0.034871873f;
      sa[491] = -0.17588522f;
      sa[492] = 0.23977622f;
      sa[493] = 0.17899136f;
      sa[494] = -0.19216564f;
      sa[495] = 0.2540543f;
      sa[496] = 0.024616389f;
      sa[497] = 0.10078361f;
      sa[498] = 0.22440627f;
      sa[499] = 0.25932512f;
      sa[500] = -0.07769555f;
      sa[501] = 0.08381646f;
      sa[502] = 0.28131458f;
      sa[503] = 0.056330483f;
      sa[504] = -0.14121653f;
      sa[505] = -0.121770486f;
      sa[506] = 0.2902341f;
      sa[507] = -0.022994226f;
      sa[508] = 0.21734093f;
      sa[509] = 0.27407128f;
      sa[510] = 0.27102014f;
      sa[511] = 0.056793578f;
      sa[512] = 0.06265552f;
      sa[513] = -0.078410745f;
      sa[514] = 0.13353483f;
      sa[515] = -0.35070994f;
      sa[516] = 0.0817242f;
      sa[517] = 0.12934704f;
      sa[518] = 0.21255992f;
      sa[519] = -0.073076285f;
      sa[520] = 0.32748014f;
      sa[521] = 0.18906106f;
      sa[522] = 0.09869255f;
      sa[523] = 0.27197945f;
      sa[524] = 0.26137298f;
      sa[525] = 0.25004414f;
      sa[526] = 0.08882703f;
      sa[527] = 0.015807647f;
      sa[528] = 0.08332736f;
      sa[529] = 0.107138306f;
      sa[530] = -0.19660023f;
      sa[531] = 0.037695106f;
      sa[532] = 0.22385763f;
      sa[533] = 0.22820877f;
      sa[534] = 0.21320401f;
      sa[535] = -0.036342118f;
      sa[536] = 0.003037133f;
      sa[537] = -0.38821036f;
      sa[538] = 0.29364273f;
      sa[539] = 0.32952997f;
      sa[540] = -0.3243033f;
      sa[541] = -0.16484262f;
      sa[542] = -0.034722973f;
      sa[543] = -0.15430336f;
      sa[544] = 0.17915906f;
      sa[545] = 0.093351245f;
      sa[546] = 0.09613245f;
      sa[547] = 0.19284555f;
      sa[548] = -0.0050233216f;
      sa[549] = 0.23574398f;
      sa[550] = -0.04291712f;
      sa[551] = -0.08193291f;
      sa[552] = 0.041893113f;
      sa[553] = -0.10732394f;
      sa[554] = -0.14387123f;
      sa[555] = -0.1550337f;
      sa[556] = -0.2137245f;
      sa[557] = -0.1619864f;
      sa[558] = -0.13447246f;
      sa[559] = -0.035281032f;
      sa[560] = -0.26835513f;
      sa[561] = -0.05580615f;
      sa[562] = 0.19401799f;
      sa[563] = -0.04822793f;
      sa[564] = 0.22974686f;
      sa[565] = 0.010718635f;
      sa[566] = 0.27823547f;
      sa[567] = -0.10808474f;
      sa[568] = -0.07656691f;
      sa[569] = 0.025327438f;
      sa[570] = -0.072822586f;
      sa[571] = -0.09515287f;
      sa[572] = 0.04914315f;
      sa[573] = 0.25727955f;
      sa[574] = 0.033703443f;
      sa[575] = -0.34608802f;
      sa[576] = -0.1593379f;
      sa[577] = -0.054512776f;
      sa[578] = -0.029593147f;
      sa[579] = -0.045458674f;
      sa[580] = 0.055728626f;
      sa[581] = -0.16189647f;
      sa[582] = 0.019092852f;
      sa[583] = -0.13582297f;
      sa[584] = 0.066369124f;
      sa[585] = 0.12363435f;
      sa[586] = -0.19754015f;
      sa[587] = -0.14170073f;
      sa[588] = 0.03417057f;
      sa[589] = 0.059268497f;
      sa[590] = -0.07149325f;
      sa[591] = -0.14910223f;
      sa[592] = -0.40794548f;
      sa[593] = -0.22666945f;
      sa[594] = 0.019890014f;
      sa[595] = -0.10410357f;
      sa[596] = 0.21156041f;
      sa[597] = -0.065442175f;
      sa[598] = 0.16282779f;
      sa[599] = -0.061397184f;
      sa[600] = -0.4178486f;
      sa[601] = 0.21260391f;
      sa[602] = 0.052009054f;
      sa[603] = 0.2676004f;
      sa[604] = 0.14238006f;
      sa[605] = 0.09697578f;
      sa[606] = 0.122269005f;
      sa[607] = -0.060970545f;
      sa[608] = 0.0017632723f;
      sa[609] = 0.1150735f;
      sa[610] = 0.11070436f;
      sa[611] = -0.03667895f;
      sa[612] = 0.062283106f;
      sa[613] = 0.11911886f;
      sa[614] = 0.08784969f;
      sa[615] = -0.06326217f;
      sa[616] = 0.029590352f;
      sa[617] = -0.26003784f;
      sa[618] = -0.174886f;
      sa[619] = -0.11135187f;
      sa[620] = 0.07754647f;
      sa[621] = -0.24296874f;
      sa[622] = -0.2571188f;
      sa[623] = -0.25735483f;
      sa[624] = -0.02943938f;
      sa[625] = 0.28789154f;
      sa[626] = -0.013290741f;
      sa[627] = 0.30524725f;
      sa[628] = -0.23894587f;
      sa[629] = -0.04819274f;
      sa[630] = -0.29878476f;
      sa[631] = 0.28416297f;
      sa[632] = 0.108317986f;
      sa[633] = -0.15194061f;
      sa[634] = -0.19844292f;
      sa[635] = 0.18390583f;
      sa[636] = -0.11879011f;
      sa[637] = -0.035163462f;
      sa[638] = -0.23847163f;
      sa[639] = 0.0014206045f;
      sa[640] = -0.081665106f;
      sa[641] = -0.23559168f;
      sa[642] = 0.263988f;
      sa[643] = -0.20163138f;
      sa[644] = -0.10702857f;
      sa[645] = -0.22638772f;
      sa[646] = 0.2767621f;
      sa[647] = -0.24459848f;
      sa[648] = 0.094768465f;
      sa[649] = -0.044545375f;
      sa[650] = 0.08694657f;
      sa[651] = -0.0483914f;
      sa[652] = 0.086888656f;
      sa[653] = -0.09547163f;
      sa[654] = -0.018128235f;
      sa[655] = -0.11099344f;
      sa[656] = 0.22290975f;
      sa[657] = 0.050515205f;
      sa[658] = -0.28083348f;
      sa[659] = -0.071938165f;
      sa[660] = -0.21107708f;
      sa[661] = -0.03682195f;
      sa[662] = -0.17796338f;
      sa[663] = 0.21104202f;
      sa[664] = -0.21303019f;
      sa[665] = 0.13782232f;
      sa[666] = -0.20417994f;
      sa[667] = -0.3745058f;
      sa[668] = 0.26332712f;
      sa[669] = -0.11267011f;
      sa[670] = 0.19281986f;
      sa[671] = 0.04647484f;
      sa[672] = -0.28618458f;
      sa[673] = 0.18713167f;
      sa[674] = 0.09614368f;
      sa[675] = -0.36993393f;
      sa[676] = -0.14252627f;
      sa[677] = -0.26117653f;
      sa[678] = 0.13736257f;
      sa[679] = -0.12858783f;
      sa[680] = 0.07436238f;
      sa[681] = 0.16752234f;
      sa[682] = -0.10096889f;
      sa[683] = -0.18728252f;
      sa[684] = -0.114343844f;
      sa[685] = -0.05655572f;
      sa[686] = -0.10213268f;
      sa[687] = -0.22784232f;
      sa[688] = -0.19043018f;
      sa[689] = -0.2276738f;
      sa[690] = -0.037193984f;
      sa[691] = 0.09922733f;
      sa[692] = -0.25709006f;
      sa[693] = -0.13103649f;
      sa[694] = 0.21282685f;
      sa[695] = -0.22841734f;
      sa[696] = -0.084727556f;
      sa[697] = -0.16151907f;
      sa[698] = -0.20716424f;
      sa[699] = 0.2500321f;
      sa[700] = 0.19238979f;
      sa[701] = 0.20044267f;
      sa[702] = 0.370124f;
      sa[703] = 0.047332343f;
      sa[704] = -0.22505173f;
      sa[705] = 0.021544462f;
      sa[706] = -0.1503207f;
      sa[707] = 0.10812031f;
      sa[708] = 0.04798052f;
      sa[709] = -0.34180164f;
      sa[710] = 0.3661446f;
      sa[711] = -0.043775495f;
      sa[712] = 0.13680238f;
      sa[713] = 0.26476294f;
      sa[714] = 0.25013968f;
      sa[715] = 0.17379391f;
      sa[716] = -0.0017211532f;
      sa[717] = 0.07116745f;
      sa[718] = 0.053414065f;
      sa[719] = 0.16454528f;
      sa[720] = -0.2505352f;
      sa[721] = 0.3539459f;
      sa[722] = -0.06794692f;
      sa[723] = 0.037588123f;
      sa[724] = 0.011570863f;
      sa[725] = -0.34751338f;
      sa[726] = -0.26140866f;
      sa[727] = -0.3641717f;
      sa[728] = -0.11196067f;
      sa[729] = 0.0013360324f;
      sa[730] = 0.1576022f;
      sa[731] = -0.24374947f;
      sa[732] = 0.12783447f;
      sa[733] = 0.14875278f;
      sa[734] = -0.19345754f;
      sa[735] = 0.2040648f;
      sa[736] = 0.058663886f;
      sa[737] = 0.22991107f;
      sa[738] = -0.19542341f;
      sa[739] = -0.21633959f;
      sa[740] = -0.29592147f;
      sa[741] = -0.31193468f;
      sa[742] = 0.041408833f;
      sa[743] = -0.027680133f;
      sa[744] = 0.052170865f;
      sa[745] = -0.14571463f;
      sa[746] = 0.06638606f;
      sa[747] = -0.13603687f;
      sa[748] = -0.17278899f;
      sa[749] = -0.217376f;
      sa[750] = 0.13264665f;
      sa[751] = 0.15082538f;
      sa[752] = -0.012469153f;
      sa[753] = 0.1683995f;
      sa[754] = 0.0063894903f;
      sa[755] = 0.18395934f;
      sa[756] = -0.20895933f;
      sa[757] = 0.1997356f;
      sa[758] = -0.18332274f;
      sa[759] = -0.033195224f;
      sa[760] = -0.06201506f;
      sa[761] = 0.05270327f;
      sa[762] = -0.050053716f;
      sa[763] = 0.11735301f;
      sa[764] = 0.042666025f;
      sa[765] = -0.060519353f;
      sa[766] = -0.22803298f;
      sa[767] = 0.06834676f;
      sa[768] = -0.18032f;
      sa[769] = -0.28796324f;
      sa[770] = 0.011894615f;
      sa[771] = -0.044133924f;
      sa[772] = 0.024949161f;
      sa[773] = -0.2539033f;
      sa[774] = 0.107586436f;
      sa[775] = 0.2557759f;
      sa[776] = -0.06577315f;
      sa[777] = 0.068233244f;
      sa[778] = 0.17321038f;
      sa[779] = -0.18914112f;
      sa[780] = -0.076944776f;
      sa[781] = -0.00992729f;
      sa[782] = 0.19849457f;
      sa[783] = -0.26002312f;
      sa[784] = -0.17657702f;
      sa[785] = -0.14509748f;
      sa[786] = -0.15734406f;
      sa[787] = -0.32486194f;
      sa[788] = -0.2492152f;
      sa[789] = 0.11069244f;
      sa[790] = -0.061088074f;
      sa[791] = -0.046438538f;
      sa[792] = 0.077310026f;
      sa[793] = -0.025742747f;
      sa[794] = -0.14070557f;
      sa[795] = -0.07759549f;
      sa[796] = 0.24315028f;
      sa[797] = -0.211569f;
      sa[798] = -0.2465498f;
      sa[799] = -0.13404906f;
      sa[800] = 0.08559361f;
      sa[801] = 0.095389016f;
      sa[802] = 0.17754212f;
      sa[803] = 0.24144568f;
      sa[804] = 0.3083229f;
      sa[805] = 0.32130694f;
      sa[806] = 0.3412801f;
      sa[807] = 0.29707098f;
      sa[808] = -0.00567768f;
      sa[809] = -0.22130664f;
      sa[810] = 0.07305224f;
      sa[811] = 0.09903293f;
      sa[812] = 0.2763403f;
      sa[813] = -0.21479335f;
      sa[814] = 0.13698253f;
      sa[815] = -0.061869416f;
      sa[816] = 0.058796152f;
      sa[817] = -0.33097455f;
      sa[818] = 0.028040802f;
      sa[819] = -0.143268f;
      sa[820] = -0.16812451f;
      sa[821] = -0.1154708f;
      sa[822] = -0.22956987f;
      sa[823] = 0.17027444f;
      sa[824] = 0.23832242f;
      sa[825] = 0.4235356f;
      sa[826] = -0.3806207f;
      sa[827] = -0.38404456f;
      sa[828] = 0.12491846f;
      sa[829] = -0.051124107f;
      sa[830] = 0.22918642f;
      sa[831] = 0.24207598f;
      sa[832] = 0.1586869f;
      sa[833] = 0.07609235f;
      sa[834] = 0.2229226f;
      sa[835] = -0.053308684f;
      sa[836] = 0.21790996f;
      sa[837] = -0.10338847f;
      sa[838] = 0.14736149f;
      sa[839] = -0.17434014f;
      sa[840] = 0.19759172f;
      sa[841] = 0.09989842f;
      sa[842] = 0.19056089f;
      sa[843] = 0.077189334f;
      sa[844] = 0.04143693f;
      sa[845] = 0.17684162f;
      sa[846] = -0.27513757f;
      sa[847] = -0.10940109f;
      sa[848] = 0.2245159f;
      sa[849] = 0.2670393f;
      sa[850] = 0.02142858f;
      sa[851] = 0.12582892f;
      sa[852] = 0.25147584f;
      sa[853] = 0.16809027f;
      sa[854] = 0.1817645f;
      sa[855] = 8.0067245E-4f;
      sa[856] = 0.08271358f;
      sa[857] = -0.15968987f;
      sa[858] = 0.11219956f;
      sa[859] = 0.04592327f;
      sa[860] = 0.39980423f;
      sa[861] = -0.14007595f;
      sa[862] = -0.26972038f;
      sa[863] = -0.080516316f;
      sa[864] = -0.28029153f;
      sa[865] = 0.17844641f;
      sa[866] = -0.23767383f;
      sa[867] = -0.06286747f;
      sa[868] = -0.17975032f;
      sa[869] = 0.18099794f;
      sa[870] = -0.057597816f;
      sa[871] = 0.1353028f;
      sa[872] = 0.14067255f;
      sa[873] = -0.09702751f;
      sa[874] = -0.058821995f;
      sa[875] = -0.27325195f;
      sa[876] = -0.21921895f;
      sa[877] = -0.21833453f;
      sa[878] = 0.0184124f;
      sa[879] = 0.17166476f;
      sa[880] = -0.13998917f;
      sa[881] = -0.14665185f;
      sa[882] = 0.26739076f;
      sa[883] = 0.11323102f;
      sa[884] = -0.12552255f;
      sa[885] = -0.12720636f;
      sa[886] = 0.0818549f;
      sa[887] = -0.039321683f;
      sa[888] = -0.10125037f;
      sa[889] = -8.240787E-4f;
      sa[890] = -0.21680157f;
      sa[891] = 0.43611673f;
      sa[892] = 0.17576662f;
      sa[893] = 0.27007475f;
      sa[894] = 0.04334157f;
      sa[895] = 0.24212667f;
      sa[896] = -0.21101353f;
      sa[897] = 0.22476001f;
      sa[898] = 0.0010718008f;
      sa[899] = 0.2570796f;
      sa[900] = -0.03737203f;
      sa[901] = 0.16187543f;
      sa[902] = -0.22240362f;
      sa[903] = -0.1469503f;
      sa[904] = 0.14116728f;
      sa[905] = 0.19751142f;
      sa[906] = -0.31083697f;
      sa[907] = -0.23597457f;
      sa[908] = -0.17021455f;
      sa[909] = 0.08363908f;
      sa[910] = 0.084421806f;
      sa[911] = -0.22295785f;
      sa[912] = -0.039639473f;
      sa[913] = 0.066177696f;
      sa[914] = -0.2512656f;
      sa[915] = 0.032042492f;
      sa[916] = 0.25178173f;
      sa[917] = 0.0747044f;
      sa[918] = 0.086389594f;
      sa[919] = 0.1989014f;
      sa[920] = 0.114033654f;
      sa[921] = -0.109982535f;
      sa[922] = -0.18980934f;
      sa[923] = -0.13297069f;
      sa[924] = -0.08219264f;
      sa[925] = -0.19191605f;
      sa[926] = 0.07695535f;
      sa[927] = 0.09038113f;
      sa[928] = 0.27607927f;
      sa[929] = 0.16886035f;
      sa[930] = 0.21438718f;
      sa[931] = 0.06749072f;
      sa[932] = 0.19089565f;
      sa[933] = -0.041749958f;
      sa[934] = 0.24808405f;
      sa[935] = -0.19897328f;
      sa[936] = 0.028464248f;
      sa[937] = 0.1464914f;
      sa[938] = -0.19782571f;
      sa[939] = -0.015999723f;
      sa[940] = -0.07566299f;
      sa[941] = -0.3299744f;
      sa[942] = -0.2467095f;
      sa[943] = -0.2570235f;
      sa[944] = -0.2581561f;
      sa[945] = -0.017003598f;
      sa[946] = 0.013164367f;
      sa[947] = 0.23356423f;
      sa[948] = 0.05256558f;
      sa[949] = -0.21747442f;
      sa[950] = 0.067939594f;
      sa[951] = -0.15457003f;
      sa[952] = -0.23358609f;
      sa[953] = -0.24779446f;
      sa[954] = -0.13220336f;
      sa[955] = 0.038875315f;
      sa[956] = -0.06367009f;
      sa[957] = -0.0090381745f;
      sa[958] = 0.058645397f;
      sa[959] = -0.24560097f;
      sa[960] = 0.24474049f;
      sa[961] = -0.12453798f;
      sa[962] = 0.06921934f;
      sa[963] = -0.018599555f;
      sa[964] = -0.23453534f;
      sa[965] = 0.18139197f;
      sa[966] = -0.17147973f;
      sa[967] = -0.36887595f;
      sa[968] = 0.0693752f;
      sa[969] = -0.0021012353f;
      sa[970] = 0.38266304f;
      sa[971] = 0.087641455f;
      sa[972] = -0.07321114f;
      sa[973] = -0.1829254f;
      sa[974] = -0.29856056f;
      sa[975] = -0.21065697f;
      sa[976] = -0.108609855f;
      sa[977] = 0.051957536f;
      sa[978] = -0.0955527f;
      sa[979] = 0.14321238f;
      sa[980] = 0.19880565f;
      sa[981] = -0.17837371f;
      sa[982] = 0.20355639f;
      sa[983] = -0.030457536f;
      sa[984] = -0.28865287f;
      sa[985] = 0.06168401f;
      sa[986] = -0.2664589f;
      sa[987] = 0.086664036f;
      sa[988] = 0.150876f;
      sa[989] = 0.23939522f;
      sa[990] = 0.1810936f;
      sa[991] = -0.1591855f;
      sa[992] = -0.22021797f;
      sa[993] = -0.06833825f;
      sa[994] = -0.17018043f;
      sa[995] = -0.30715606f;
      sa[996] = 0.14670335f;
      sa[997] = 0.21286449f;
      sa[998] = 0.020021664f;
      sa[999] = 0.18451668f;
      sa[1000] = 0.0056997887f;
      sa[1001] = 0.18809392f;
      sa[1002] = 0.24671176f;
      sa[1003] = -0.105596855f;
      sa[1004] = 0.20184247f;
      sa[1005] = -0.21166125f;
      sa[1006] = -0.12273995f;
      sa[1007] = 0.0022539892f;
      sa[1008] = 0.13628149f;
      sa[1009] = 0.11541636f;
      sa[1010] = 0.1138594f;
      sa[1011] = 0.33181518f;
      sa[1012] = -0.018199708f;
      sa[1013] = 0.14426054f;
      sa[1014] = 0.33601156f;
      sa[1015] = -0.22075173f;
      sa[1016] = 0.21744469f;
      sa[1017] = 0.18419433f;
      sa[1018] = -0.06409368f;
      sa[1019] = 0.067485005f;
      sa[1020] = -0.1997517f;
      sa[1021] = 0.06845157f;
      sa[1022] = 0.2892407f;
      sa[1023] = 0.122607656f;
      sa[1024] = 0.041118063f;
      sa[1025] = 0.1969733f;
      sa[1026] = 0.15129556f;
      sa[1027] = 0.26558754f;
      sa[1028] = 0.35469833f;
      sa[1029] = 0.04855894f;
      sa[1030] = -0.08917923f;
      sa[1031] = 0.08543043f;
      sa[1032] = -0.1408256f;
      sa[1033] = 0.03206452f;
      sa[1034] = -0.13902771f;
      sa[1035] = -0.3080182f;
      sa[1036] = 0.2841909f;
      sa[1037] = 0.056679305f;
      sa[1038] = -0.21298023f;
      sa[1039] = 0.25753912f;
      sa[1040] = 0.015002989f;
      sa[1041] = 0.12667502f;
      sa[1042] = -0.29690042f;
      sa[1043] = -0.08193352f;
      sa[1044] = 0.36549416f;
      sa[1045] = 0.2923829f;
      sa[1046] = -0.11920977f;
      sa[1047] = -0.117162704f;
      sa[1048] = 0.14054897f;
      sa[1049] = -0.051953062f;
      sa[1050] = 0.07359137f;
      sa[1051] = -0.12757258f;
      sa[1052] = 0.28398234f;
      sa[1053] = 0.25640163f;
      sa[1054] = 0.2967583f;
      sa[1055] = 0.041141532f;
      sa[1056] = 0.27915177f;
      sa[1057] = -0.129283f;
      sa[1058] = 0.26108223f;
      sa[1059] = -0.08510373f;
      sa[1060] = -0.21036455f;
      sa[1061] = 0.044639993f;
      sa[1062] = 0.056219548f;
      sa[1063] = 0.16878095f;
      sa[1064] = 0.1063808f;
      sa[1065] = -0.029611763f;
      sa[1066] = 0.19893439f;
      sa[1067] = -0.30425957f;
      sa[1068] = -0.23044303f;
      sa[1069] = 0.26236364f;
      sa[1070] = -0.047693387f;
      sa[1071] = 0.15167749f;
      sa[1072] = -0.21035542f;
      sa[1073] = 0.13236439f;
      sa[1074] = 0.17851755f;
      sa[1075] = -0.14160676f;
      sa[1076] = -0.16057165f;
      sa[1077] = 0.098456234f;
      sa[1078] = -0.026484469f;
      sa[1079] = -0.008820506f;
      sa[1080] = 0.17114225f;
      sa[1081] = 0.11491866f;
      sa[1082] = -0.36124456f;
      sa[1083] = -0.11556711f;
      sa[1084] = 0.2886414f;
      sa[1085] = -0.15974043f;
      sa[1086] = -0.22495714f;
      sa[1087] = -0.290186f;
      sa[1088] = -0.2215793f;
      sa[1089] = 0.055940673f;
      sa[1090] = -0.24975578f;
      sa[1091] = 0.057845034f;
      sa[1092] = -0.24376634f;
      sa[1093] = -0.2582783f;
      sa[1094] = 9.5593586E-4f;
      sa[1095] = -0.2949209f;
      sa[1096] = -0.00437279f;
      sa[1097] = -0.12709291f;
      sa[1098] = 0.107837185f;
      sa[1099] = -0.10053937f;
      sa[1100] = -0.1321733f;
      sa[1101] = 0.13679439f;
      sa[1102] = -0.14913516f;
      sa[1103] = 0.18554504f;
      sa[1104] = -0.3394165f;
      sa[1105] = -0.13060978f;
      sa[1106] = 0.027155783f;
      sa[1107] = 0.08773494f;
      sa[1108] = -0.19987608f;
      sa[1109] = 0.23513962f;
      sa[1110] = 0.16340548f;
      sa[1111] = -0.28554213f;
      sa[1112] = 0.19582538f;
      sa[1113] = 0.18659347f;
      sa[1114] = 0.06390845f;
      sa[1115] = 0.20739591f;
      sa[1116] = 0.10070369f;
      sa[1117] = -0.087670915f;
      sa[1118] = -0.068721935f;
      sa[1119] = 0.07871064f;
      sa[1120] = 0.21613917f;
      sa[1121] = 0.11181674f;
      sa[1122] = 0.3153411f;
      sa[1123] = 0.29567325f;
      sa[1124] = 0.11513911f;
      sa[1125] = -0.06555911f;
      sa[1126] = 0.23619051f;
      sa[1127] = 0.1893466f;
      sa[1128] = 0.015754249f;
      sa[1129] = -0.0763344f;
      sa[1130] = 0.2538806f;
      sa[1131] = 0.30538115f;
      sa[1132] = -0.075510696f;
      sa[1133] = -0.10505115f;
      sa[1134] = 0.15602039f;
      sa[1135] = -0.16703667f;
      sa[1136] = -0.01874343f;
      sa[1137] = 0.22307809f;
      sa[1138] = -0.036086716f;
      sa[1139] = 0.16033848f;
      sa[1140] = 0.2517464f;
      sa[1141] = -0.18053643f;
      sa[1142] = -0.028384084f;
      sa[1143] = -0.18402505f;
      sa[1144] = -0.2713636f;
      sa[1145] = 0.15267727f;
      sa[1146] = 0.2146358f;
      sa[1147] = -0.13174488f;
      sa[1148] = -3.386462E-4f;
      sa[1149] = -0.05311178f;
      sa[1150] = -0.27409092f;
      sa[1151] = -0.27812883f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2336063f;
      sa[1] = -0.070104994f;
      sa[2] = -0.57516384f;
      sa[3] = -0.9687649f;
      sa[4] = 0.13799489f;
      sa[5] = 0.28871793f;
      sa[6] = 1.2273667f;
      sa[7] = -0.710522f;
      sa[8] = -0.9021104f;
      sa[9] = 0.71510285f;
      sa[10] = -0.12393034f;
      sa[11] = 0.44214946f;
      sa[12] = 0.1469654f;
      sa[13] = 0.0012427483f;
      sa[14] = -1.2836878f;
      sa[15] = 1.1454799f;
      sa[16] = 1.5895836f;
      sa[17] = -0.4365185f;
      sa[18] = 0.09601409f;
      sa[19] = -0.4280879f;
      sa[20] = 1.1485876f;
      sa[21] = 0.035322487f;
      sa[22] = -0.95521265f;
      sa[23] = 0.778689f;
      sa[24] = -1.2915803f;
      sa[25] = 0.48394f;
      sa[26] = -0.27590767f;
      sa[27] = 1.5333545f;
      sa[28] = -1.3515335f;
      sa[29] = -0.4035581f;
      sa[30] = 0.44261733f;
      sa[31] = -0.62005144f;
      sa[32] = -1.144339f;
      sa[33] = -1.5427461f;
      sa[34] = 0.0922794f;
      sa[35] = 1.3545154f;
      sa[36] = -0.34448412f;
      sa[37] = -0.053289756f;
      sa[38] = 0.19801356f;
      sa[39] = 0.7757896f;
      sa[40] = -0.7561785f;
      sa[41] = -1.3598474f;
      sa[42] = -1.0339499f;
      sa[43] = -1.501212f;
      sa[44] = -0.011493424f;
      sa[45] = -1.3544985f;
      sa[46] = 1.2056988f;
      sa[47] = 1.2535903f;
      sa[48] = -1.3473988f;
      sa[49] = -1.0929091f;
      sa[50] = 0.42666245f;
      sa[51] = -0.3383493f;
      sa[52] = 0.7358734f;
      sa[53] = 0.83020294f;
      sa[54] = -0.24379171f;
      sa[55] = 1.1388398f;
      sa[56] = -1.1174536f;
      sa[57] = -1.0916237f;
      sa[58] = 0.054463934f;
      sa[59] = -0.25440347f;
      sa[60] = 1.3860121f;
      sa[61] = -0.6471682f;
      sa[62] = -0.44658694f;
      sa[63] = 0.6666404f;
      sa[64] = 1.3405153f;
      sa[65] = -0.6958143f;
      sa[66] = 0.5408503f;
      sa[67] = 1.5661703f;
      sa[68] = 0.63624394f;
      sa[69] = -1.143271f;
      sa[70] = -1.4621558f;
      sa[71] = -0.5009769f;
      sa[72] = -1.3139578f;
      sa[73] = 1.2416036f;
      sa[74] = 1.3352249f;
      sa[75] = -0.29667038f;
      sa[76] = 0.8807417f;
      sa[77] = 0.40518886f;
      sa[78] = -1.5091488f;
      sa[79] = 0.8879856f;
      sa[80] = -0.81755656f;
      sa[81] = 0.17485426f;
      sa[82] = 0.8234865f;
      sa[83] = -0.8468262f;
      sa[84] = -1.5703052f;
      sa[85] = -1.2836312f;
      sa[86] = 0.35838202f;
      sa[87] = 1.1305487f;
      sa[88] = -1.5957614f;
      sa[89] = -0.72557616f;
      sa[90] = -1.0456539f;
      sa[91] = 1.3844869f;
      sa[92] = -0.337167f;
      sa[93] = 0.21279445f;
      sa[94] = -1.5335859f;
      sa[95] = -0.19224297f;
      sa[96] = -1.008913f;
      sa[97] = 0.17227237f;
      sa[98] = -0.093746245f;
      sa[99] = 0.34464544f;
      sa[100] = -1.2429434f;
      sa[101] = -0.48381692f;
      sa[102] = 1.1830546f;
      sa[103] = 0.048885603f;
      sa[104] = -0.20301972f;
      sa[105] = -0.7012939f;
      sa[106] = 1.3770043f;
      sa[107] = 1.216485f;
      sa[108] = 0.8410025f;
      sa[109] = 0.23120408f;
      sa[110] = 0.7268369f;
      sa[111] = -0.83756816f;
      sa[112] = -1.1444112f;
      sa[113] = 0.2109557f;
      sa[114] = 0.10199837f;
      sa[115] = -0.40128675f;
      sa[116] = 1.1225523f;
      sa[117] = 0.030636573f;
      sa[118] = -1.3829732f;
      sa[119] = -0.74334437f;
      sa[120] = -0.34371936f;
      sa[121] = 1.0162666f;
      sa[122] = -0.07352982f;
      sa[123] = 0.27045998f;
      sa[124] = -0.6958062f;
      sa[125] = 0.76808935f;
      sa[126] = -1.045124f;
      sa[127] = 0.3962747f;
      sa[128] = -0.9805473f;
      sa[129] = 0.7790315f;
      sa[130] = -0.40572935f;
      sa[131] = 0.86521226f;
      sa[132] = 0.42737567f;
      sa[133] = 0.652242f;
      sa[134] = 0.6108799f;
      sa[135] = -1.0532001f;
      sa[136] = 0.5596694f;
      sa[137] = -0.5936f;
      sa[138] = -0.10950251f;
      sa[139] = 1.1578983f;
      sa[140] = -0.5958164f;
      sa[141] = -0.09206137f;
      sa[142] = 0.26600954f;
      sa[143] = -0.78221947f;
      sa[144] = 0.98477095f;
      sa[145] = -0.7737724f;
      sa[146] = 0.071320176f;
      sa[147] = -0.2517739f;
      sa[148] = -0.83181846f;
      sa[149] = 1.1135477f;
      sa[150] = -1.1713634f;
      sa[151] = -1.610817f;
      sa[152] = 1.5659897f;
      sa[153] = -0.56353307f;
      sa[154] = 1.3593836f;
      sa[155] = -1.498173f;
      sa[156] = -1.4702897f;
      sa[157] = -1.1034775f;
      sa[158] = -0.15895334f;
      sa[159] = -0.62954265f;
      sa[160] = 1.3484509f;
      sa[161] = -1.1687379f;
      sa[162] = 1.5878545f;
      sa[163] = -0.7370958f;
      sa[164] = 0.7276305f;
      sa[165] = -0.54910356f;
      sa[166] = 1.2186583f;
      sa[167] = -1.4091842f;
      sa[168] = 1.0489492f;
      sa[169] = -1.5482547f;
      sa[170] = 1.0565822f;
      sa[171] = 0.88486934f;
      sa[172] = 1.498798f;
      sa[173] = 1.5029318f;
      sa[174] = -0.08732147f;
      sa[175] = 0.023202045f;
      sa[176] = -0.79283834f;
      sa[177] = 0.08121753f;
      sa[178] = -1.2229232f;
      sa[179] = -0.13364635f;
      sa[180] = -1.3639468f;
      sa[181] = -0.98223495f;
      sa[182] = 0.23835495f;
      sa[183] = -0.9689468f;
      sa[184] = 1.4862868f;
      sa[185] = 1.2834289f;
      sa[186] = -0.4973871f;
      sa[187] = -0.94771445f;
      sa[188] = -0.7279453f;
      sa[189] = -0.7740243f;
      sa[190] = -1.4659226f;
      sa[191] = -1.0377156f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


